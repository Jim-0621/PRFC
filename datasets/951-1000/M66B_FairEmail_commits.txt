File: app/src/main/java/eu/faircode/email/FragmentDialogOperationsDelete.java
Patch:
@@ -109,6 +109,8 @@ protected Integer onExecute(Context context, Bundle args) {
                                     }
 
                                     if (move) {
+                                        if (BuildConfig.DEBUG)
+                                            addAll(ops, db.operation().getOperations(EntityOperation.ADD));
                                         addAll(ops, db.operation().getOperations(EntityOperation.MOVE));
                                         addAll(ops, db.operation().getOperations(EntityOperation.COPY));
                                     }

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -157,7 +157,7 @@ static void queue(Context context, EntityMessage message, String name, Object...
                 if (auto_important && jargs.optBoolean(2, true)) {
                     db.message().setMessageImportance(message.id, flagged ? EntityMessage.PRIORITIY_HIGH : null);
                     queue(context, message, KEYWORD, MessageHelper.FLAG_LOW_IMPORTANCE, false);
-                    queue(context, message, KEYWORD, MessageHelper.FLAG_HIGH_IMPORTANCE, true);
+                    queue(context, message, KEYWORD, MessageHelper.FLAG_HIGH_IMPORTANCE, flagged);
                 }
 
                 return;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2639,7 +2639,7 @@ else if (!body.endsWith("\r\n"))
 
             String length = kv.get("l");
             if (!TextUtils.isEmpty(length))
-                throw new IllegalArgumentException("Length l=" + length);
+                throw new IllegalArgumentException("Length l=" + length + " body=" + body.length());
 
             Log.i("DKIM body=" + body.replace("\r\n", "|"));
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5465,7 +5465,7 @@ public Integer call() throws Exception {
                     exif.setAttribute(ExifInterface.TAG_DATETIME_ORIGINAL, null);
                     exif.setAttribute(ExifInterface.TAG_DATETIME_DIGITIZED, null);
 
-                    exif.setAttribute(ExifInterface.TAG_XMP, null);
+                    exif.setAttribute(ExifInterface.TAG_XMP, "");
                     exif.setAttribute(ExifInterface.TAG_IMAGE_DESCRIPTION, null);
                     //exif.setAttribute(ExifInterface.TAG_MAKE, null);
                     //exif.setAttribute(ExifInterface.TAG_MODEL, null);

File: app/src/github/java/eu/faircode/email/ApplicationSecure.java
Patch:
@@ -38,7 +38,7 @@ public class ApplicationSecure extends ApplicationEx implements ProviderInstalle
     public void onCreate() {
         super.onCreate();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean ssl_update = prefs.getBoolean("ssl_update", true);
+        boolean ssl_update = prefs.getBoolean("ssl_update", Helper.isPlayStoreInstall());
         if (ssl_update) {
             Log.i("Security provider check");
             ProviderInstaller.installIfNeededAsync(this, this);

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -789,7 +789,7 @@ private void setOptions() {
             etDnsExtra.setEnabled(swDnsCustom.isChecked() || Build.VERSION.SDK_INT < Build.VERSION_CODES.Q);
             swDnsClear.setChecked(prefs.getBoolean("dns_clear", false));
             swTcpKeepAlive.setChecked(prefs.getBoolean("tcp_keep_alive", false));
-            swSslUpdate.setChecked(prefs.getBoolean("ssl_update", true));
+            swSslUpdate.setChecked(prefs.getBoolean("ssl_update", Helper.isPlayStoreInstall()));
             swSslHarden.setChecked(prefs.getBoolean("ssl_harden", false));
             swSslHardenStrict.setChecked(prefs.getBoolean("ssl_harden_strict", false));
             swSslHardenStrict.setEnabled(swSslHarden.isChecked());

File: app/src/play/java/eu/faircode/email/ApplicationSecure.java
Patch:
@@ -38,7 +38,7 @@ public class ApplicationSecure extends ApplicationEx implements ProviderInstalle
     public void onCreate() {
         super.onCreate();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean ssl_update = prefs.getBoolean("ssl_update", true);
+        boolean ssl_update = prefs.getBoolean("ssl_update", Helper.isPlayStoreInstall());
         if (ssl_update) {
             Log.i("Security provider check");
             ProviderInstaller.installIfNeededAsync(this, this);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -1067,6 +1067,9 @@ static void upgrade(Context context) {
                 editor.putBoolean("beige", false);
         }
 
+        if (version < 2259)
+            editor.putBoolean("thread_byref", true);
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
             editor.remove("background_service");
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2617,7 +2617,7 @@ private void setOptions() {
             swTldFlags.setChecked(prefs.getBoolean("tld_flags", false));
             swJsonLd.setChecked(prefs.getBoolean("json_ld", false));
             swDupMsgId.setChecked(prefs.getBoolean("dup_msgids", false));
-            swThreadByRef.setChecked(prefs.getBoolean("thread_byref", true));
+            swThreadByRef.setChecked(prefs.getBoolean("thread_byref", !Helper.isPlayStoreInstall()));
             swSaveUserFlags.setChecked(prefs.getBoolean("save_user_flags", false));
             swMdn.setChecked(prefs.getBoolean("mdn", swExperiments.isChecked()));
             swAppChooser.setChecked(prefs.getBoolean("app_chooser", false));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1940,7 +1940,7 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
         }
 
         // Common reference
-        boolean thread_byref = prefs.getBoolean("thread_byref", true);
+        boolean thread_byref = prefs.getBoolean("thread_byref", !Helper.isPlayStoreInstall());
         if (thread == null && refs.size() > 0 && thread_byref) {
             // For example
             //   Message-ID: <organization/project/pull/nnn/issue_event/xxx@github.com>

File: app/src/main/java/eu/faircode/email/FragmentDialogEditImage.java
Patch:
@@ -126,6 +126,8 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                             bm.compress(Bitmap.CompressFormat.PNG, ImageHelper.DEFAULT_PNG_COMPRESSION, os);
                         }
 
+                        long len = file.length();
+
                         if (attachment.name != null) {
                             int index = attachment.name.lastIndexOf(".");
                             if (index > 0) {
@@ -139,7 +141,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                             }
                         }
 
-                        db.attachment().setName(id, attachment.name, "image/png", file.length());
+                        db.attachment().setName(id, attachment.name, "image/png", len);
 
                         return null;
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -167,7 +167,7 @@
 import org.bouncycastle.cms.CMSProcessableFile;
 import org.bouncycastle.cms.CMSSignedData;
 import org.bouncycastle.cms.CMSTypedData;
-import org.bouncycastle.cms.KeyTransRecipientId;
+import org.bouncycastle.cms.PKIXRecipientId;
 import org.bouncycastle.cms.RecipientInformation;
 import org.bouncycastle.cms.SignerId;
 import org.bouncycastle.cms.SignerInformation;
@@ -10347,7 +10347,8 @@ public byte[] getEncodedSignedAttributes() throws IOException {
                             if (count < 0) {
                                 BigInteger serialno = chain[0].getSerialNumber();
                                 for (RecipientInformation recipientInfo : recipients) {
-                                    KeyTransRecipientId recipientId = (KeyTransRecipientId) recipientInfo.getRID();
+                                    // KeyTransRecipientId or KeyAgreeRecipientId
+                                    PKIXRecipientId recipientId = (PKIXRecipientId) recipientInfo.getRID();
                                     if (serialno != null && serialno.equals(recipientId.getSerialNumber())) {
                                         try {
                                             InputStream is = recipientInfo.getContentStream(recipient).getContentStream();

File: app/src/main/java/eu/faircode/email/FragmentDialogEditImage.java
Patch:
@@ -40,6 +40,7 @@
 import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.io.OutputStream;
 
 public class FragmentDialogEditImage extends FragmentDialogBase {
@@ -132,7 +133,8 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                 if (!TextUtils.isEmpty(ext) && !ext.equalsIgnoreCase("png")) {
                                     File old = attachment.getFile(context);
                                     attachment.name = attachment.name.substring(0, index) + ".png";
-                                    old.renameTo(attachment.getFile(context));
+                                    if (!old.renameTo(attachment.getFile(context)))
+                                        throw new IOException("Error renaming " + file.getAbsolutePath());
                                 }
                             }
                         }

File: app/src/main/java/eu/faircode/email/EntityContact.java
Patch:
@@ -120,7 +120,7 @@ static void received(
             return;
 
         boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-        boolean suggest_received = prefs.getBoolean("suggest_received", true);
+        boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
         // Shortcut
         if (!suggest_sent && !suggest_received)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -452,7 +452,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         final boolean keyboard_no_fullscreen = prefs.getBoolean("keyboard_no_fullscreen", false);
         final boolean suggest_names = prefs.getBoolean("suggest_names", true);
         final boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-        final boolean suggest_received = prefs.getBoolean("suggest_received", true);
+        final boolean suggest_received = prefs.getBoolean("suggest_received", false);
         final boolean suggest_frequently = prefs.getBoolean("suggest_frequently", false);
         final boolean suggest_account = prefs.getBoolean("suggest_account", false);
         final boolean cc_bcc = prefs.getBoolean("cc_bcc", false);
@@ -1447,7 +1447,7 @@ protected Long onExecute(Context context, Bundle args) throws Throwable {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 boolean auto_identity = prefs.getBoolean("auto_identity", false);
                 boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-                boolean suggest_received = prefs.getBoolean("suggest_received", true);
+                boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
                 if (!auto_identity)
                     return null;
@@ -5561,7 +5561,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
             boolean save_drafts = prefs.getBoolean("save_drafts", perform_expunge);
             boolean auto_identity = prefs.getBoolean("auto_identity", false);
             boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-            boolean suggest_received = prefs.getBoolean("suggest_received", true);
+            boolean suggest_received = prefs.getBoolean("suggest_received", false);
             boolean forward_new = prefs.getBoolean("forward_new", false);
             boolean markdown = prefs.getBoolean("markdown", false);
 

File: app/src/main/java/eu/faircode/email/FragmentDialogSelectFolder.java
Patch:
@@ -373,7 +373,7 @@ protected Data onExecute(Context context, Bundle args) {
                 List<EntityFolder> favorites = new ArrayList<>();
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean suggest_received = prefs.getBoolean("suggest_received", true);
+                boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
                 DB db = DB.getInstance(context);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -141,7 +141,7 @@ public class FragmentOptionsSend extends FragmentBase implements SharedPreferenc
 
     final static List<String> RESET_OPTIONS = Collections.unmodifiableList(Arrays.asList(
             "keyboard", "keyboard_no_fullscreen",
-            "suggest_names", "suggest_sent", "suggest_received", "suggest_frequently", "suggest_account", "auto_identity",
+            "suggest_names", "suggest_sent", "suggested_received", "suggest_frequently", "suggest_account", "auto_identity",
             "purge_contact_age", "purge_contact_freq",
             "send_reminders", "send_chips", "send_nav_color", "send_pending",
             "save_revisions", "auto_save_paragraph", "auto_save_dot", "discard_delete",
@@ -991,7 +991,7 @@ private void setOptions() {
             swKeyboardNoFullscreen.setChecked(prefs.getBoolean("keyboard_no_fullscreen", false));
             swSuggestNames.setChecked(prefs.getBoolean("suggest_names", true));
             swSuggestSent.setChecked(prefs.getBoolean("suggest_sent", true));
-            swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", true));
+            swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", false));
             swSuggestFrequently.setChecked(prefs.getBoolean("suggest_frequently", false));
             swSuggestFrequently.setEnabled(swSuggestSent.isChecked() || swSuggestReceived.isChecked());
             swSuggestAccount.setChecked(prefs.getBoolean("suggest_account", false));

File: app/src/main/java/eu/faircode/email/EntityContact.java
Patch:
@@ -120,7 +120,7 @@ static void received(
             return;
 
         boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-        boolean suggest_received = prefs.getBoolean("suggest_received", false);
+        boolean suggest_received = prefs.getBoolean("suggest_received", true);
 
         // Shortcut
         if (!suggest_sent && !suggest_received)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -452,7 +452,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         final boolean keyboard_no_fullscreen = prefs.getBoolean("keyboard_no_fullscreen", false);
         final boolean suggest_names = prefs.getBoolean("suggest_names", true);
         final boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-        final boolean suggest_received = prefs.getBoolean("suggest_received", false);
+        final boolean suggest_received = prefs.getBoolean("suggest_received", true);
         final boolean suggest_frequently = prefs.getBoolean("suggest_frequently", false);
         final boolean suggest_account = prefs.getBoolean("suggest_account", false);
         final boolean cc_bcc = prefs.getBoolean("cc_bcc", false);
@@ -1447,7 +1447,7 @@ protected Long onExecute(Context context, Bundle args) throws Throwable {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 boolean auto_identity = prefs.getBoolean("auto_identity", false);
                 boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-                boolean suggest_received = prefs.getBoolean("suggest_received", false);
+                boolean suggest_received = prefs.getBoolean("suggest_received", true);
 
                 if (!auto_identity)
                     return null;
@@ -5561,7 +5561,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
             boolean save_drafts = prefs.getBoolean("save_drafts", perform_expunge);
             boolean auto_identity = prefs.getBoolean("auto_identity", false);
             boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
-            boolean suggest_received = prefs.getBoolean("suggest_received", false);
+            boolean suggest_received = prefs.getBoolean("suggest_received", true);
             boolean forward_new = prefs.getBoolean("forward_new", false);
             boolean markdown = prefs.getBoolean("markdown", false);
 

File: app/src/main/java/eu/faircode/email/FragmentDialogSelectFolder.java
Patch:
@@ -373,7 +373,7 @@ protected Data onExecute(Context context, Bundle args) {
                 List<EntityFolder> favorites = new ArrayList<>();
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean suggest_received = prefs.getBoolean("suggest_received", false);
+                boolean suggest_received = prefs.getBoolean("suggest_received", true);
 
                 DB db = DB.getInstance(context);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -141,7 +141,7 @@ public class FragmentOptionsSend extends FragmentBase implements SharedPreferenc
 
     final static List<String> RESET_OPTIONS = Collections.unmodifiableList(Arrays.asList(
             "keyboard", "keyboard_no_fullscreen",
-            "suggest_names", "suggest_sent", "suggested_received", "suggest_frequently", "suggest_account", "auto_identity",
+            "suggest_names", "suggest_sent", "suggest_received", "suggest_frequently", "suggest_account", "auto_identity",
             "purge_contact_age", "purge_contact_freq",
             "send_reminders", "send_chips", "send_nav_color", "send_pending",
             "save_revisions", "auto_save_paragraph", "auto_save_dot", "discard_delete",
@@ -991,7 +991,7 @@ private void setOptions() {
             swKeyboardNoFullscreen.setChecked(prefs.getBoolean("keyboard_no_fullscreen", false));
             swSuggestNames.setChecked(prefs.getBoolean("suggest_names", true));
             swSuggestSent.setChecked(prefs.getBoolean("suggest_sent", true));
-            swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", false));
+            swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", true));
             swSuggestFrequently.setChecked(prefs.getBoolean("suggest_frequently", false));
             swSuggestFrequently.setEnabled(swSuggestSent.isChecked() || swSuggestReceived.isChecked());
             swSuggestAccount.setChecked(prefs.getBoolean("suggest_account", false));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2966,7 +2966,8 @@ private void evalProperties(TupleMessageEx message) {
                 properties.setValue("full_asked", message.id, Helper.hasWebView(context));
             }
 
-            if (!properties.getValue("force_light_default", message.id)) {
+            if (properties.getValue("full", message.id) &&
+                    !properties.getValue("force_light_default", message.id)) {
                 boolean default_light = prefs.getBoolean("default_light", false);
                 properties.setValue("force_light", message.id, default_light);
                 properties.setValue("force_light_default", message.id, true);

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -663,8 +663,8 @@ static void setBackground(Context context, View view, boolean compose) {
 
         Integer color = null;
         if (cards) {
-            if (you && (!dark || !black) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
-                if (beige)
+            if (you && !black && Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
+                if (!dark && beige)
                     color = ContextCompat.getColor(context, R.color.lightColorBackground_cards_beige);
                 else
                     color = ContextCompat.getColor(context, dark

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6450,7 +6450,7 @@ private void onActionMore(TupleMessageEx message) {
             popupMenu.getMenu().findItem(R.id.menu_summarize).setVisible(
                     AI.isAvailable(context) && message.content);
 
-            popupMenu.getMenu().findItem(R.id.menu_force_light).setVisible(dark);
+            popupMenu.getMenu().findItem(R.id.menu_force_light).setVisible(dark && (full || experiments));
             popupMenu.getMenu().findItem(R.id.menu_force_light).setChecked(force_light);
 
             popupMenu.getMenu().findItem(R.id.menu_share).setEnabled(message.content);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -170,7 +170,7 @@ public class FragmentOptions extends FragmentBase {
             "language_detection",
             "quick_filter", "quick_scroll", "quick_actions",
             "experiments", "debug", "log_level", "test1", "test2", "test3", "test4", "test5",
-            "webview_legacy", "browser_zoom", "fake_dark",
+            "webview_legacy", "browser_zoom",
             "show_recent",
             "biometrics",
             "default_light",

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -77,7 +77,7 @@ public void onBackStackChanged() {
             Intent intent = getIntent();
 
             String action = intent.getAction();
-            boolean shared = (isShared(action) && !intent.hasExtra("fair:account"));
+            boolean shared = (intent.hasExtra("fair:shared") && !intent.hasExtra("fair:account"));
             boolean widget = (action != null && action.startsWith("widget:"));
 
             String[] tos = intent.getStringArrayExtra(Intent.EXTRA_EMAIL);
@@ -309,6 +309,7 @@ else if (args.containsKey("attachments"))
         }
 
         if (isShared(action)) {
+            intent.putExtra("fair:shared", true);
             args.putString("action", "new");
             args.putLong("account",
                     intent.getLongExtra("fair:account", -1L));

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1614,15 +1614,15 @@ else if (show_changelog) {
 
             String last = prefs.getString("changelog", null);
             if (last != null && !last.equals(version)) {
-                prefs.edit().putString("changelog", version).apply();
-
                 Bundle args = new Bundle();
                 args.putString("name", "CHANGELOG.md");
                 args.putString("option", "show_changelog");
                 FragmentDialogMarkdown fragment = new FragmentDialogMarkdown();
                 fragment.setArguments(args);
                 fragment.show(getSupportFragmentManager(), "changelog");
             }
+            if (!version.equals(last))
+                prefs.edit().putString("changelog", version).apply();
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -175,7 +175,8 @@ public class FragmentOptions extends FragmentBase {
             "biometrics",
             "default_light",
             "vt_enabled", "vt_apikey",
-            "pdf_preview", "webp"
+            "pdf_preview", "webp",
+            "email_junk"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1419,6 +1419,7 @@ private static String getAnnotatedVersion(Context context) {
                 (Helper.hasValidFingerprint(context) ? "1" : "3") +
                 (BuildConfig.PLAY_STORE_RELEASE ? "p" : "") +
                 (BuildConfig.DEBUG ? "d" : "") +
+                (ConnectionHelper.vpnActive(context) ? "v" : "") +
                 (ActivityBilling.isPro(context) ? "+" : "");
     }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2096,7 +2096,7 @@ private static void onRaw(Context context, JSONArray jargs, EntityFolder folder,
         DB db = DB.getInstance(context);
 
         if (!EntityFolder.INBOX.equals(folder.type))
-            throw new IllegalArgumentException("Unexpected folder=" + folder.type);
+            throw new IllegalArgumentException("Not INBOX type=" + folder.type);
 
         if (message.raw == null || !message.raw) {
             Map<EntityMessage, Message> map = findMessages(context, folder, Arrays.asList(message), istore, ifolder);
@@ -2332,7 +2332,7 @@ private static void onBody(Context context, JSONArray jargs, EntityFolder folder
         String charset = (jargs.isNull(1) ? null : jargs.optString(1, null));
 
         if (!EntityFolder.INBOX.equals(folder.type))
-            throw new IllegalArgumentException("Not INBOX");
+            throw new IllegalArgumentException("Not INBOX type=" + folder.type);
 
         if (message.content && message.isPlainOnly() == plain_text && charset == null)
             return;
@@ -2367,7 +2367,7 @@ private static void onAttachment(Context context, JSONArray jargs, EntityFolder
         long id = jargs.getLong(0);
 
         if (!EntityFolder.INBOX.equals(folder.type))
-            throw new IllegalArgumentException("Not INBOX");
+            throw new IllegalArgumentException("Not INBOX type=" + folder.type);
 
         DB db = DB.getInstance(context);
         EntityAttachment attachment = db.attachment().getAttachment(id);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1197,6 +1197,8 @@ String getWeek(long time, Context context) {
                         public void onLongPress(@NonNull MotionEvent e) {
                             if (!getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
                                 return;
+                            if (swiping)
+                                return;
 
                             int x = Math.round(e.getX());
                             int y = Math.round(e.getY());

File: app/src/main/java/eu/faircode/email/FragmentLegend.java
Patch:
@@ -48,6 +48,7 @@ private FragmentLegend setLayout(int layout) {
     @Nullable
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         setSubtitle(R.string.menu_legend);
+        setHasOptionsMenu(true); // To intercept back
 
         if (savedInstanceState != null)
             layout = savedInstanceState.getInt("fair:layout");

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -4199,7 +4199,8 @@ static void clearComposingText(Spannable text) {
     }
 
     static Spanned fromHtml(@NonNull String html, Context context) {
-        Document document = JsoupEx.parse(html);
+        Document parsed = JsoupEx.parse(html);
+        Document document = sanitizeView(context, parsed, false);
         return fromDocument(context, document, null, null);
     }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3937,7 +3937,8 @@ public Object doCommand(IMAPProtocol protocol) throws ProtocolException {
             cal_keep.set(Calendar.MILLISECOND, 0);
 
             Calendar cal_keep_unread = Calendar.getInstance();
-            cal_keep_unread.add(Calendar.DAY_OF_MONTH, -Math.max(keep_days * 6, EntityFolder.DEFAULT_KEEP * 6));
+            cal_keep_unread.add(Calendar.DAY_OF_MONTH,
+                    delete_unseen ? keep_days * 6 : -Math.max(keep_days * 6, EntityFolder.DEFAULT_KEEP * 6));
             cal_keep_unread.set(Calendar.HOUR_OF_DAY, 0);
             cal_keep_unread.set(Calendar.MINUTE, 0);
             cal_keep_unread.set(Calendar.SECOND, 0);

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -107,7 +107,7 @@ Context getOriginalContext() {
     public void setContentView(@NonNull View view) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean hide_toolbar = prefs.getBoolean("hide_toolbar", !BuildConfig.PLAY_STORE_RELEASE);
-        boolean edge_to_edge = prefs.getBoolean("edge_to_edge", !BuildConfig.PLAY_STORE_RELEASE);
+        boolean edge_to_edge = prefs.getBoolean("edge_to_edge", false);
 
         int colorPrimary = Helper.resolveColor(this, androidx.appcompat.R.attr.colorPrimary);
         double lum = ColorUtils.calculateLuminance(colorPrimary);

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1619,7 +1619,7 @@ private void setOptions() {
             sbColumnWidth.setProgress(column_width);
 
             swHideToolbar.setChecked(prefs.getBoolean("hide_toolbar", !BuildConfig.PLAY_STORE_RELEASE));
-            swEdgeToEdge.setChecked(prefs.getBoolean("edge_to_edge", !BuildConfig.PLAY_STORE_RELEASE));
+            swEdgeToEdge.setChecked(prefs.getBoolean("edge_to_edge", false));
             swNavOptions.setChecked(prefs.getBoolean("nav_options", true));
             swNavCategories.setChecked(prefs.getBoolean("nav_categories", false));
             swNavLastSync.setChecked(prefs.getBoolean("nav_last_sync", true));

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -944,7 +944,7 @@ private void setOptions() {
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-            int purge_contact_age = prefs.getInt("purge_contact_age", 0);
+            int purge_contact_age = prefs.getInt("purge_contact_age", 1);
             int purge_contact_freq = prefs.getInt("purge_contact_freq", 0);
 
             swKeyboard.setChecked(prefs.getBoolean("keyboard", true));

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -334,7 +334,7 @@ static void cleanup(Context context, boolean manual) {
                     Fts4DbHelper.optimize(sdb);
             }
 
-            int purge_contact_age = prefs.getInt("purge_contact_age", 0);
+            int purge_contact_age = prefs.getInt("purge_contact_age", 1);
             int purge_contact_freq = prefs.getInt("purge_contact_freq", 0);
 
             Log.breadcrumb("worker", "cleanup", "contacts" +

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -262,7 +262,7 @@ else if ("provider".equals(name)) {
 
                         provider.order = getAttributeIntValue(xml, "order", Integer.MAX_VALUE);
                         provider.keepalive = getAttributeIntValue(xml, "keepalive", 0);
-                        provider.noop = getAttributeBooleanValue(xml, "noop", true);
+                        provider.noop = getAttributeBooleanValue(xml, "noop", false);
                         provider.partial = getAttributeBooleanValue(xml, "partial", true);
                         provider.raw = getAttributeBooleanValue(xml, "raw", false);
                         provider.useip = getAttributeBooleanValue(xml, "useip", true);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -140,7 +140,7 @@ public class EntityAccount extends EntityOrder implements Serializable {
     @NonNull
     public Integer poll_interval = DEFAULT_KEEP_ALIVE_INTERVAL;
     @NonNull
-    public Boolean keep_alive_noop = true;
+    public Boolean keep_alive_noop = false;
     @NonNull
     public Boolean keep_alive_ok = false;
     @NonNull

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -262,7 +262,7 @@ else if ("provider".equals(name)) {
 
                         provider.order = getAttributeIntValue(xml, "order", Integer.MAX_VALUE);
                         provider.keepalive = getAttributeIntValue(xml, "keepalive", 0);
-                        provider.noop = getAttributeBooleanValue(xml, "noop", false);
+                        provider.noop = getAttributeBooleanValue(xml, "noop", true);
                         provider.partial = getAttributeBooleanValue(xml, "partial", true);
                         provider.raw = getAttributeBooleanValue(xml, "raw", false);
                         provider.useip = getAttributeBooleanValue(xml, "useip", true);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -140,7 +140,7 @@ public class EntityAccount extends EntityOrder implements Serializable {
     @NonNull
     public Integer poll_interval = DEFAULT_KEEP_ALIVE_INTERVAL;
     @NonNull
-    public Boolean keep_alive_noop = false;
+    public Boolean keep_alive_noop = true;
     @NonNull
     public Boolean keep_alive_ok = false;
     @NonNull

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -2547,7 +2547,7 @@ private void onSentMessage(Intent intent) {
             return;
 
         long timeout = at - new Date().getTime();
-        if (timeout < 10 * 1000L)
+        if (timeout < 1000L)
             return;
         if (timeout > send_delayed)
             timeout = send_delayed;

File: app/src/main/java/eu/faircode/email/FragmentRules.java
Patch:
@@ -508,7 +508,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                             break;
                         case EntityRule.TYPE_ANSWER:
                             long identity = jaction.getLong("identity");
-                            long answer = jaction.getLong("answer");
+                            long answer = jaction.optLong("answer", -1L);
                             EntityIdentity i = db.identity().getIdentity(identity);
                             EntityAnswer t = db.answer().getAnswer(answer);
                             if (i != null)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2392,13 +2392,13 @@ private static void onExists(Context context, JSONArray jargs, EntityAccount acc
                 " messages=" + (imessages == null ? null : imessages.length));
 
         if (account.isOutlook() && (imessages == null || imessages.length == 0)) {
+            imessages = ifolder.search(
+                    new HeaderTerm(MessageHelper.HEADER_MICROSOFT_ORIGINAL_MESSAGE_ID, message.msgid));
             EntityLog.log(context, folder.name + " exists alt" +
                     " retry=" + retry +
                     " host=" + account.host +
                     " outlook=" + account.isOutlook() +
                     " messages=" + (imessages == null ? null : imessages.length));
-            imessages = ifolder.search(
-                    new HeaderTerm(MessageHelper.HEADER_MICROSOFT_ORIGINAL_MESSAGE_ID, message.msgid));
         }
 
         // Searching for random header:

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -502,6 +502,8 @@ else if (provider.user == EmailProvider.UserType.VALUE) {
                                 boolean other = false;
                                 for (EntityFolder folder : folders)
                                     switch (folder.type) {
+                                        case EntityFolder.INBOX:
+                                            break;
                                         case EntityFolder.DRAFTS:
                                             drafts = true;
                                             break;

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -885,7 +885,7 @@ private static boolean matchMessage(Context context, EntityMessage message, Sear
                     if (criteria.in_message) {
                         // This won't match <p>An <b>example</b><p> when searching for "An example"
                         if (contains(html, criteria.query, partial, true)) {
-                            String text = HtmlHelper.getFullText(html, false);
+                            String text = HtmlHelper.getFullText(context, html);
                             if (contains(text, criteria.query, partial, false))
                                 return true;
                         }

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -1198,7 +1198,7 @@ private static void answer(Context context, EntityRule rule, EntityMessage messa
 
         File file = reply.getFile(context);
         Helper.writeText(file, body);
-        String text = HtmlHelper.getFullText(body, true);
+        String text = HtmlHelper.getFullText(context, body);
         reply.preview = HtmlHelper.getPreview(text);
         reply.language = HtmlHelper.getLanguage(context, reply.subject, text);
         db.message().setMessageContent(reply.id,
@@ -1314,7 +1314,7 @@ private static void speak(Context context, EntityRule rule, EntityMessage messag
                     .append(' ').append(message.subject).append(". ");
 
         String body = Helper.readText(message.getFile(context));
-        String text = HtmlHelper.getFullText(body, false);
+        String text = HtmlHelper.getFullText(context, body);
         String preview = HtmlHelper.getPreview(text);
 
         if (!TextUtils.isEmpty(preview))

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -6179,7 +6179,7 @@ else if ("forward".equals(action))
                     Helper.writeText(data.draft.getFile(context), html);
                     Helper.writeText(data.draft.getFile(context, data.draft.revision), html);
 
-                    String text = HtmlHelper.getFullText(html, true);
+                    String text = HtmlHelper.getFullText(context, html);
                     data.draft.preview = HtmlHelper.getPreview(text);
                     data.draft.language = HtmlHelper.getLanguage(context, data.draft.subject, text);
                     db.message().setMessageContent(data.draft.id,
@@ -6369,7 +6369,7 @@ else if ("forward".equals(action))
                         Helper.writeText(file, html);
                         Helper.writeText(data.draft.getFile(context, data.draft.revision), html);
 
-                        String text = HtmlHelper.getFullText(html, true);
+                        String text = HtmlHelper.getFullText(context, html);
                         data.draft.preview = HtmlHelper.getPreview(text);
                         data.draft.language = HtmlHelper.getLanguage(context, data.draft.subject, text);
                         db.message().setMessageContent(data.draft.id,
@@ -7236,7 +7236,7 @@ public void run() {
                     if (f.length() > MAX_REASONABLE_SIZE)
                         args.putBoolean("large", true);
 
-                    String full = HtmlHelper.getFullText(body, true);
+                    String full = HtmlHelper.getFullText(context, body);
                     draft.preview = HtmlHelper.getPreview(full);
                     draft.language = HtmlHelper.getLanguage(context, draft.subject, full);
                     db.message().setMessageContent(draft.id,

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -1650,7 +1650,7 @@ public int read() throws IOException {
 
                             File file = message.getFile(context);
                             Helper.writeText(file, body);
-                            String text = HtmlHelper.getFullText(body, true);
+                            String text = HtmlHelper.getFullText(context, body);
                             message.preview = HtmlHelper.getPreview(text);
                             message.language = HtmlHelper.getLanguage(context, message.subject, text);
                             db.message().setMessageContent(message.id,

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -9467,7 +9467,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
                                     Helper.writeText(message.getFile(context), html);
                                     Log.i("pgp html=" + (html == null ? null : html.length()));
 
-                                    String text = HtmlHelper.getFullText(html, true);
+                                    String text = HtmlHelper.getFullText(context, html);
                                     message.preview = HtmlHelper.getPreview(text);
                                     message.language = HtmlHelper.getLanguage(context, message.subject, text);
 
@@ -10205,7 +10205,7 @@ private void decodeMessage(Context context, InputStream is, EntityMessage messag
                 Helper.writeText(message.getFile(context), html);
                 Log.i("s/mime html=" + (html == null ? null : html.length()));
 
-                String text = HtmlHelper.getFullText(html, true);
+                String text = HtmlHelper.getFullText(context, html);
                 message.preview = HtmlHelper.getPreview(text);
                 message.language = HtmlHelper.getLanguage(context, message.subject, text);
 

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -177,7 +177,7 @@ private static List<String> getTexts(@NonNull EntityMessage message, @NonNull Co
         if (message.subject != null)
             texts.add(message.subject);
 
-        String text = HtmlHelper.getFullText(file, false);
+        String text = HtmlHelper.getFullText(context, file);
         if (text != null)
             texts.add(text);
 

File: app/src/main/java/eu/faircode/email/NotificationHelper.java
Patch:
@@ -1012,7 +1012,7 @@ else if (!color.equals(mcolor)) {
                 if (notify_preview_all)
                     try {
                         File file = message.getFile(context);
-                        preview = HtmlHelper.getFullText(file, true);
+                        preview = HtmlHelper.getFullText(context, file);
                         if (preview != null && preview.length() > MAX_PREVIEW)
                             preview = preview.substring(0, MAX_PREVIEW);
                     } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/ServiceExternal.java
Patch:
@@ -347,7 +347,7 @@ private static void template(Context context, Intent intent) throws AddressExcep
 
         File file = msg.getFile(context);
         Helper.writeText(file, body);
-        String text = HtmlHelper.getFullText(body, true);
+        String text = HtmlHelper.getFullText(context, body);
         msg.preview = HtmlHelper.getPreview(text);
         msg.language = HtmlHelper.getLanguage(context, msg.subject, text);
         db.message().setMessageContent(msg.id,

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -733,7 +733,7 @@ private void onSend(EntityMessage message) throws JSONException, MessagingExcept
             if (plain != null && (plain & 1) != 0)
                 body = body.replace("<div x-plain=\"true\">", "<div>");
 
-            String text = HtmlHelper.getFullText(body, true);
+            String text = HtmlHelper.getFullText(this, body);
             String language = HtmlHelper.getLanguage(this, message.subject, text);
             String preview = HtmlHelper.getPreview(text);
 

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -341,7 +341,7 @@ private void onReplyDirect(long id, Intent intent) throws IOException {
         Object obj = results.get("text");
         String body = (obj == null ? null : "<p>" + obj.toString().replaceAll("\\r?\\n", "<br>") + "</p>");
 
-        String text = HtmlHelper.getFullText(body, true);
+        String text = HtmlHelper.getFullText(this, body);
         String language = HtmlHelper.getLanguage(this, ref.subject, text);
         String preview = HtmlHelper.getPreview(text);
 

File: app/src/main/java/eu/faircode/email/WorkerFts.java
Patch:
@@ -86,7 +86,7 @@ public Result doWork() {
                         String text = null;
                         if (message.content) {
                             File file = message.getFile(context);
-                            text = HtmlHelper.getFullText(file, false);
+                            text = HtmlHelper.getFullText(context, file);
                         }
 
                         try {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1827,7 +1827,7 @@ public void onPause() {
 
         if (state == State.LOADED) {
             Bundle extras = new Bundle();
-            extras.putBoolean("silent", true);
+            extras.putBoolean("autosave", true);
             onAction(R.id.action_save, extras, "pause");
         }
 

File: app/src/main/java/com/sun/mail/imap/IMAPFolder.java
Patch:
@@ -3644,8 +3644,9 @@ public void handleResponse(Response r) {
 		long[] luid = UIDSet.toArray(uidset);
 		Message[] msgs = createMessagesForUIDs(luid);
 		for (Message m : msgs) {
-		    if (m.getMessageNumber() > 0)
-			messageCache.expungeMessage(m.getMessageNumber());
+			// Avoid creating seqnums
+		    if (m != null)
+			((IMAPMessage)m).setExpunged(true);
 		}
 		if (doExpungeNotification && hasMessageCountListener) {
 		    notifyMessageRemovedListeners(true, msgs);

File: app/src/main/java/com/sun/mail/imap/MessageCache.java
Patch:
@@ -217,8 +217,8 @@ public IMAPMessage[] removeExpungedMessages() {
 	int newnum = 1;
 	while (oldnum <= size) {
 	    // is message expunged?
-	    if (seqnumOf(oldnum) <= 0) {
 		IMAPMessage m = getMessage(oldnum);
+	    if (seqnumOf(oldnum) <= 0 || (m !=null && m.isExpunged())) {
 		mlist.add(m);
 	    } else {
 		// keep this message

File: app/src/main/java/com/sun/mail/imap/IMAPFolder.java
Patch:
@@ -3635,10 +3635,8 @@ public void handleResponse(Response r) {
 	    // response
 
 	    // "VANISHED" SP ["(EARLIER)"] SP known-uids
-		// https://datatracker.ietf.org/doc/html/rfc7162#section-3.2.10
-		String[] earlier = ir.readAtomStringList(); // Skip EARLIER
+		ir.readAtomStringList(); // Skip EARLIER
 		String uids = ir.readAtom();
-		eu.faircode.email.Log.w("VANISHED earlier=" + (earlier != null) + " uids=" + uids);
 		UIDSet[] uidset = UIDSet.parseUIDSets(uids);
 		if (uidset != null) {
 			List<Message> msgs = new ArrayList<>();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1531,7 +1531,7 @@ String getFlags() throws MessagingException {
 
     @NonNull
     String[] getKeywords() throws MessagingException {
-        List<String> keywords = Arrays.asList(imessage.getFlags().getUserFlags());
+        List<String> keywords = new ArrayList<>(Arrays.asList(imessage.getFlags().getUserFlags()));
         while (keywords.size() > MAX_KEYWORDS)
             keywords.remove(keywords.size() - 1);
         Collections.sort(keywords);

File: app/src/main/java/com/sun/mail/imap/IMAPFolder.java
Patch:
@@ -3635,8 +3635,10 @@ public void handleResponse(Response r) {
 	    // response
 
 	    // "VANISHED" SP ["(EARLIER)"] SP known-uids
-		ir.readAtomStringList(); // Skip EARLIER
+		// https://datatracker.ietf.org/doc/html/rfc7162#section-3.2.10
+		String[] earlier = ir.readAtomStringList(); // Skip EARLIER
 		String uids = ir.readAtom();
+		eu.faircode.email.Log.w("VANISHED earlier=" + (earlier != null) + " uids=" + uids);
 		UIDSet[] uidset = UIDSet.parseUIDSets(uids);
 		List<Message> msgs = new ArrayList<>();
 		for (long uid : UIDSet.toArray(uidset)) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -5254,9 +5254,9 @@ private static boolean expunge(Context context, IMAPFolder ifolder, List<Message
                 uidExpunge(context, ifolder, uids);
                 Log.i(ifolder.getName() + " expunged " + TextUtils.join(",", uids));
             } else {
-                Log.i(ifolder.getName() + " expunging all");
+                Log.i(ifolder.getName() + " expunging all=" + messages.size());
                 ifolder.expunge();
-                Log.i(ifolder.getName() + " expunged all");
+                Log.i(ifolder.getName() + " expunged all=" + messages.size());
             }
 
             return true;

File: app/src/main/java/com/sun/mail/imap/IMAPFolder.java
Patch:
@@ -2843,7 +2843,7 @@ private Message[] createMessagesForUIDs(long[] uids) {
 		m.setUID(uids[i]);
 		m.setExpunged(true);
 	    }
-	    msgs[i++] = m;
+	    msgs[i] = m;
 	}
 	return msgs;
     }

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -319,7 +319,7 @@ private static StringBuilder getAppInfo(Context context) {
                 sb.append(String.format("System: %s\r\n", ll.get(i)));
         }
 
-        if (BuildConfig.DEBUG && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S)
+        if (false && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S)
             try {
                 TextServicesManager tsm = (TextServicesManager) context.getSystemService(Context.TEXT_SERVICES_MANAGER_SERVICE);
                 SpellCheckerInfo sci = (tsm == null ? null : tsm.getCurrentSpellCheckerInfo());

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -354,7 +354,8 @@ public void run(AccountManagerFuture<Bundle> future) {
                                 } catch (Throwable ex) {
                                     // android.accounts.OperationCanceledException = ServiceDisabled?
                                     if (ex instanceof AuthenticatorException &&
-                                            "ServiceDisabled".equals(ex.getMessage()))
+                                            ("ERROR".equals(ex.getMessage())||
+                                                    "ServiceDisabled".equals(ex.getMessage())))
                                         ex = new IllegalArgumentException(disabled, ex);
 
                                     Log.e(ex);

File: app/src/extra/java/eu/faircode/email/Send.java
Patch:
@@ -71,7 +71,7 @@ public class Send {
     */
 
     static final int DEFAULT_DLIMIT = 10;
-    static final int DEFAULT_TLIMIT = 24; // hours
+    static final int DEFAULT_TLIMIT = 3 * 24; // hours
     static final String DEFAULT_SERVER = "https://send.vis.ee/";
 
     private static final int TIMEOUT = 20 * 1000; // milliseconds

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2468,8 +2468,10 @@ static void embedInlineImages(Context context, long id, Document document, boole
                         Uri uri = FileProviderEx.getUri(context, BuildConfig.APPLICATION_ID, file, attachment.name);
                         img.attr("src", uri.toString());
                         Log.i("Inline image uri=" + uri);
-                    } else
+                    } else {
                         img.attr("src", ImageHelper.getDataUri(file, attachment.type));
+                        Log.i("Inline image type=" + attachment.type);
+                    }
                 }
             }
         }

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -676,6 +676,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                 boolean canSchedule = AlarmManagerCompatEx.canScheduleExactAlarms(context);
                 boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
                 boolean schedule = prefs.getBoolean("schedule", false);
+                String startup = prefs.getString("startup", "unified");
 
                 String ds = ConnectionHelper.getDataSaving(context);
                 boolean vpn = ConnectionHelper.vpnActive(context);
@@ -736,6 +737,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         " rules=" + db.rule().countTotal(null, null) +
                         " ops=" + db.operation().getOperationCount() +
                         " outbox=" + db.message().countOutbox() + "\r\n" +
+                        "startup=" + startup + "\r\n" +
                         "filter " + filters + " " + sorts +
                         "\r\n\r\n");
 

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -456,6 +456,7 @@ public void onClick(View view) {
                     intent.putExtra("account", account.id);
                     intent.putExtra("protocol", account.protocol);
                     intent.putExtra("auth_type", account.auth_type);
+                    intent.putExtra("host", account.host);
                     intent.putExtra("personal", "personal");
                     intent.putExtra("address", "address");
                     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
@@ -916,6 +917,7 @@ private void onActionAuthorize() {
                     intent.putExtra("account", account.id);
                     intent.putExtra("protocol", account.protocol);
                     intent.putExtra("auth_type", account.auth_type);
+                    intent.putExtra("host", account.host);
                     intent.putExtra("personal", "personal");
                     intent.putExtra("address", "address");
                     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5221,6 +5221,7 @@ private void onHelp(TupleMessageEx message) {
                 intent.putExtra("account", message.account);
                 intent.putExtra("protocol", message.accountProtocol);
                 intent.putExtra("auth_type", ServiceAuthenticator.AUTH_TYPE_GRAPH);
+                intent.putExtra("host", "");
                 intent.putExtra("identity", message.identity);
                 intent.putExtra("personal", message.identityName);
                 intent.putExtra("address", message.identityEmail);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -5550,6 +5550,7 @@ static NotificationCompat.Builder getNotificationError(Context context, String c
         intent.putExtra("account", account.id);
         intent.putExtra("protocol", account.protocol);
         intent.putExtra("auth_type", account.auth_type);
+        intent.putExtra("host", account.host);
         intent.putExtra("address", account.user);
         intent.putExtra("faq", 22);
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -384,6 +384,7 @@ protected void onExecuted(Bundle args, EntityAccount account) {
                         intent.putExtra("account", account.id);
                         intent.putExtra("protocol", account.protocol);
                         intent.putExtra("auth_type", account.auth_type);
+                        intent.putExtra("host", account.host);
                         intent.putExtra("address", account.user);
                         intent.putExtra("faq", 22);
                         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -540,6 +540,7 @@ private void processOperations(List<EntityOperation> ops) {
                                             intent.putExtra("account", identity.account);
                                             intent.putExtra("protocol", protocol);
                                             intent.putExtra("auth_type", AUTH_TYPE_GRAPH);
+                                            intent.putExtra("host", identity.host);
                                             intent.putExtra("identity", identity.id);
                                             intent.putExtra("personal", identity.name);
                                             intent.putExtra("address", identity.user);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1585,6 +1585,7 @@ private NotificationCompat.Builder getNotificationAlert(EntityAccount account, S
         intent.putExtra("account", account.id);
         intent.putExtra("protocol", account.protocol);
         intent.putExtra("auth_type", account.auth_type);
+        intent.putExtra("host", account.host);
         intent.putExtra("address", account.user);
         intent.putExtra("faq", 23);
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

File: app/src/main/java/eu/faircode/email/FragmentDialogDuration.java
Patch:
@@ -69,6 +69,8 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         final Context context = getContext();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         int default_snooze = prefs.getInt("default_snooze", 1);
+        if (default_snooze == 0)
+            default_snooze = 1;
 
         final View dview = LayoutInflater.from(context).inflate(R.layout.dialog_duration, null);
         final Button btn1hour = dview.findViewById(R.id.btn1hour);

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -124,8 +124,9 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
+        int c = Helper.resolveColor(getContext(), R.attr.colorInfoForeground);
+        swipeRefresh.setColorSchemeColors(c, c, c);
         int colorPrimary = Helper.resolveColor(getContext(), androidx.appcompat.R.attr.colorPrimary);
-        swipeRefresh.setColorSchemeColors(Color.WHITE, Color.WHITE, Color.WHITE);
         swipeRefresh.setProgressBackgroundColorSchemeColor(colorPrimary);
         swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -190,8 +190,9 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
+        int c = Helper.resolveColor(getContext(), R.attr.colorInfoForeground);
+        swipeRefresh.setColorSchemeColors(c, c, c);
         int colorPrimary = Helper.resolveColor(getContext(), androidx.appcompat.R.attr.colorPrimary);
-        swipeRefresh.setColorSchemeColors(Color.WHITE, Color.WHITE, Color.WHITE);
         swipeRefresh.setProgressBackgroundColorSchemeColor(colorPrimary);
         swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -86,8 +86,8 @@ private void eval() {
 
         swBlack.setEnabled(colored && !grey && !bw && !solarized && optionId != R.id.rbThemeLight);
 
-        swHtmlLight.setEnabled(!(colored || blank) || colored);
-        swComposerLight.setEnabled(!(colored || blank) || colored);
+        swHtmlLight.setEnabled(!(colored || blank) || (colored && optionId != R.id.rbThemeLight));
+        swComposerLight.setEnabled(!(colored || blank) || (colored && optionId != R.id.rbThemeLight));
     }
 
     @NonNull

File: app/src/main/java/eu/faircode/email/EditTextMultiAutoComplete.java
Patch:
@@ -106,7 +106,7 @@ private void init(Context context) {
         dark = Helper.isDarkTheme(context);
         colorAccent = Helper.resolveColor(context, androidx.appcompat.R.attr.colorAccent);
         colorAccent = ColorUtils.setAlphaComponent(colorAccent, 5 * 255 / 100);
-        ctx = new ContextThemeWrapper(context, dark ? R.style.ChipDark : R.style.ChipLight);
+        ctx = new ContextThemeWrapper(context.getApplicationContext(), dark ? R.style.ChipDark : R.style.ChipLight);
 
         addTextChangedListener(new TextWatcher() {
             private Integer backspace = null;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3600,7 +3600,7 @@ public static String decodeMime(String text) {
             MimeTextPart p1 = parts.get(p);
             MimeTextPart p2 = parts.get(p + 1);
             // https://bugzilla.mozilla.org/show_bug.cgi?id=1374149
-            if (!"ISO-2022-JP".equalsIgnoreCase(p1.charset) &&
+            if (!("ISO-2022-JP".equalsIgnoreCase(p1.charset) && "B".equalsIgnoreCase(p1.encoding)) &&
                     p1.charset != null && p1.charset.equalsIgnoreCase(p2.charset) &&
                     p1.encoding != null && p1.encoding.equalsIgnoreCase(p2.encoding) &&
                     p1.text != null && !p1.text.endsWith("=")) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -233,7 +233,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swConversationActions.setEnabled(Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q);
         swConversationActions.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
@@ -242,7 +241,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swConversationActionsReplies.setEnabled(Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q);
         swConversationActionsReplies.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
@@ -707,8 +705,9 @@ private void setOptions() {
             swSyncOnlaunch.setChecked(prefs.getBoolean("sync_on_launch", false));
             swDoubleBack.setChecked(prefs.getBoolean("double_back", false));
             swConversationActions.setChecked(prefs.getBoolean("conversation_actions", Helper.isGoogle()));
+            swConversationActions.setEnabled(Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q);
             swConversationActionsReplies.setChecked(prefs.getBoolean("conversation_actions_replies", true));
-            swConversationActionsReplies.setEnabled(swConversationActions.isChecked());
+            swConversationActionsReplies.setEnabled(swConversationActions.isChecked() && Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q);
             swLanguageDetection.setChecked(prefs.getBoolean("language_detection", false));
 
             int default_snooze = prefs.getInt("default_snooze", 1);

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -470,7 +470,7 @@ private static StringBuilder getAppInfo(Context context) {
         float density = context.getResources().getDisplayMetrics().density;
         sb.append(String.format("Density 1dp=%f\r\n", density));
         sb.append(String.format("Resolution: %.2f x %.2f dp\r\n", dim.x / density, dim.y / density));
-        sb.append(String.format("Max. texture: %d px\r\n", Helper.getMaxTextureSize()));
+        //sb.append(String.format("Max. texture: %d px\r\n", Helper.getMaxTextureSize()));
 
         Configuration config = context.getResources().getConfiguration();
 

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -470,6 +470,7 @@ private static StringBuilder getAppInfo(Context context) {
         float density = context.getResources().getDisplayMetrics().density;
         sb.append(String.format("Density 1dp=%f\r\n", density));
         sb.append(String.format("Resolution: %.2f x %.2f dp\r\n", dim.x / density, dim.y / density));
+        sb.append(String.format("Max. texture=%d\r\n", Helper.getMaxTextureSize()));
 
         Configuration config = context.getResources().getConfiguration();
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1354,6 +1354,7 @@ private void onActionEditProperties() {
                     lbm.sendBroadcast(
                             new Intent(ActivityView.ACTION_EDIT_FOLDER)
                                     .putExtra("id", folder.id)
+                                    .putExtra("account", folder.account)
                                     .putExtra("imap", folder.accountProtocol == EntityAccount.TYPE_IMAP));
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6937,6 +6937,7 @@ protected void onExecuted(Bundle args, EntityFolder folder) {
                 lbm.sendBroadcast(
                         new Intent(ActivityView.ACTION_EDIT_FOLDER)
                                 .putExtra("id", folder.id)
+                                .putExtra("account", folder.account)
                                 .putExtra("imap", args.getBoolean("imap")));
             }
 

File: app/src/main/java/eu/faircode/email/EditTextCompose.java
Patch:
@@ -207,6 +207,8 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                             return surround("(", ")");
                         else if (id == R.string.title_insert_quotes)
                             return surround("\"", "\"");
+                        else if (id == R.string.title_lt_add)
+                            return modifyDictionary(true);
                         else if (id == R.string.title_lt_delete)
                             return modifyDictionary(false);
                     }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -819,7 +819,7 @@ private static boolean matchMessage(Context context, EntityMessage message, Sear
         }
 
         if (criteria.touched != null) {
-            if (message.last_attempt == null || message.last_attempt < new Date().getTime() - criteria.touched * 3600 * 1000L)
+            if (message.last_touched == null || message.last_touched < new Date().getTime() - criteria.touched * 3600 * 1000L)
                 return false;
         }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -8304,7 +8304,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                     Log.i("Move id=" + target.id + " target=" + target.targetFolder.name);
                     db.message().setMessageUiBusy(target.id, null);
-                    db.message().setMessageLastAttempt(target.id, null);
+                    db.message().setMessageLastAttempt(target.id, new Date().getTime());
                     EntityOperation.queue(context, message, EntityOperation.MOVE, target.targetFolder.id);
                 }
 
@@ -8338,7 +8338,7 @@ protected Void onExecute(Context context, Bundle args) {
                     db.message().setMessageUiBusy(target.id, null);
                     db.message().setMessageUiHide(target.id, false);
                     db.message().setMessageFound(target.id, target.found);
-                    db.message().setMessageLastAttempt(target.id, null);
+                    db.message().setMessageLastAttempt(target.id, new Date().getTime());
                 }
 
                 db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3846,7 +3846,7 @@ public Object doCommand(IMAPProtocol protocol) throws ProtocolException {
                         modified = (force || initialize != 0 ||
                                 folder.modseq == null || !folder.modseq.equals(modseq));
                         EntityLog.log(context,
-                                BuildConfig.DEBUG ? EntityLog.Type.Debug3 : EntityLog.Type.General,
+                                BuildConfig.DEBUG ? EntityLog.Type.Debug4 : EntityLog.Type.General,
                                 folder.name + " modseq=" + modseq + "/" + folder.modseq +
                                         " force=" + force + " init=" + (initialize != 0) + " modified=" + modified);
                     }
@@ -4354,7 +4354,7 @@ else if (response.isNO()) {
             // Update modseq
             folder.modseq = modseq;
             EntityLog.log(context,
-                    BuildConfig.DEBUG ? EntityLog.Type.Debug3 : EntityLog.Type.General,
+                    BuildConfig.DEBUG ? EntityLog.Type.Debug4 : EntityLog.Type.General,
                     folder.name + " set modseq=" + modseq);
             db.folder().setFolderModSeq(folder.id, folder.modseq);
 

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -204,7 +204,7 @@ private void onMenuShow() {
 
         int len = EntityLog.Type.values().length;
         if (!BuildConfig.DEBUG)
-            len -= 3;
+            len -= 5;
 
         SpannableStringBuilder[] titles = new SpannableStringBuilder[len];
         boolean[] states = new boolean[len];

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2660,7 +2660,7 @@ else if (!body.endsWith("\r\n"))
                     int keylen = modulus.bitLength();
                     Log.i("DKIM RSA pubkey length=" + keylen);
                     if (keylen < DKIM_MIN_KEY_LENGTH) {
-                        EntityLog.log(context, EntityLog.Type.Debug3, "DKIM RSA pubkey length=" + keylen);
+                        EntityLog.log(context, EntityLog.Type.Debug5, "DKIM RSA pubkey length=" + keylen);
                         throw new IllegalArgumentException("DKIM RSA pubkey length " + keylen + " < " + DKIM_MIN_KEY_LENGTH);
                     }
 
@@ -2669,7 +2669,7 @@ else if (!body.endsWith("\r\n"))
                         for (int prime = 3; prime <= 65537; prime += 2)
                             if (isPrime(prime) &&
                                     modulus.remainder(BigInteger.valueOf(prime)).compareTo(BigInteger.ZERO) == 0) {
-                                EntityLog.log(context, EntityLog.Type.Debug3, "DKIM RSA pubkey with small prime=" + prime);
+                                EntityLog.log(context, EntityLog.Type.Debug5, "DKIM RSA pubkey with small prime=" + prime);
                                 throw new IllegalArgumentException("DKIM RSA pubkey with small prime=" + prime);
                             }
                     Log.i("DKIM RSA okay");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2190,7 +2190,7 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
             db.operation().liveOperations(message.id, EntityOperation.BODY).observe(eowner, new Observer<TupleMessageOperation>() {
                 @Override
                 public void onChanged(TupleMessageOperation operation) {
-                    grpDownloading.setVisibility(operation != null &&
+                    grpDownloading.setVisibility(operation != null && !operation.content &&
                             (operation.id != null || operation.uid == null) ? View.VISIBLE : View.GONE);
                     ibDownload.setVisibility(operation != null &&
                             operation.id == null && operation.uid != null && !operation.content ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/ActivityAMP.java
Patch:
@@ -81,7 +81,7 @@ protected void onCreate(Bundle savedInstanceState) {
         wvAmp.clearCache(true);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean overview_mode = prefs.getBoolean("overview_mode", true);
+        boolean overview_mode = prefs.getBoolean("overview_mode", false);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 
         WebSettings settings = wvAmp.getSettings();
@@ -233,7 +233,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                         message == null || message.subject == null ? "AMP" : message.subject);
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean overview_mode = prefs.getBoolean("overview_mode", true);
+                boolean overview_mode = prefs.getBoolean("overview_mode", false);
 
                 String html;
                 ContentResolver resolver = context.getContentResolver();

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -140,7 +140,7 @@ public void afterTextChanged(Editable s) {
             public void onClick(View view) {
                 Bundle args = new Bundle();
                 args.putString("html", getHtml());
-                args.putBoolean("overview_mode", true);
+                args.putBoolean("overview_mode", false);
                 args.putBoolean("safe_browsing", false);
                 args.putBoolean("force_light", true);
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -874,9 +874,6 @@ else if (version < 2137) {
         } else if (version < 2196) {
             if (!prefs.contains("forward_new"))
                 editor.putBoolean("forward_new", true);
-        } else if (version < 2197) {
-            if (!prefs.contains("overview_mode"))
-                editor.putBoolean("overview_mode", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1685,7 +1685,7 @@ private void setOptions() {
                 sbMessageZoom.setProgress(message_zoom - 50);
 
             swEditorZoom.setChecked(prefs.getBoolean("editor_zoom", true));
-            swOverviewMode.setChecked(prefs.getBoolean("overview_mode", true));
+            swOverviewMode.setChecked(prefs.getBoolean("overview_mode", false));
 
             swContrast.setChecked(prefs.getBoolean("contrast", false));
             swHyphenation.setChecked(prefs.getBoolean("hyphenation", false));

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -69,7 +69,7 @@ public WebViewEx(Context context) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         this.viewportHeight = prefs.getInt("viewport_height", getDefaultViewportHeight(context));
-        boolean overview_mode = prefs.getBoolean("overview_mode", true);
+        boolean overview_mode = prefs.getBoolean("overview_mode", false);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 
         setVerticalScrollBarEnabled(false);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -874,9 +874,7 @@ else if (version < 2137) {
         } else if (version < 2196) {
             if (!prefs.contains("forward_new"))
                 editor.putBoolean("forward_new", true);
-        }
-
-        if (version < 2202) {
+        } else if (version < 2197) {
             if (!prefs.contains("overview_mode"))
                 editor.putBoolean("overview_mode", false);
         }

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -874,7 +874,9 @@ else if (version < 2137) {
         } else if (version < 2196) {
             if (!prefs.contains("forward_new"))
                 editor.putBoolean("forward_new", true);
-        } else if (version < 2197) {
+        }
+
+        if (version < 2202) {
             if (!prefs.contains("overview_mode"))
                 editor.putBoolean("overview_mode", false);
         }

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -488,11 +488,12 @@ public boolean onMenuItemClick(MenuItem item) {
                             startActivityForResult(Helper.getChooser(getContext(), intent), ActivitySetup.REQUEST_RINGTONE_OUTBOUND);
                             return true;
                         } else if (itemId == R.string.title_rule_select_sound_audio) {
-                            Intent intent = new Intent();
-                            intent.setAction(Intent.ACTION_GET_CONTENT);
+                            Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
                             intent.addCategory(Intent.CATEGORY_OPENABLE);
+                            intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
                             intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                             intent.setType("audio/*");
+                            Helper.openAdvanced(getContext(), intent);
                             startActivityForResult(Helper.getChooser(getContext(), intent), ActivitySetup.REQUEST_AUDIO_OUTBOUND);
                             return true;
                         }

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -830,11 +830,12 @@ public boolean onMenuItemClick(MenuItem item) {
                             startActivityForResult(Helper.getChooser(getContext(), intent), REQUEST_RINGTONE);
                             return true;
                         } else if (itemId == R.string.title_rule_select_sound_audio) {
-                            Intent intent = new Intent();
-                            intent.setAction(Intent.ACTION_GET_CONTENT);
+                            Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
                             intent.addCategory(Intent.CATEGORY_OPENABLE);
+                            intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
                             intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                             intent.setType("audio/*");
+                            Helper.openAdvanced(getContext(), intent);
                             startActivityForResult(Helper.getChooser(getContext(), intent), REQUEST_AUDIO);
                             return true;
                         }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4284,6 +4284,8 @@ else if (response.isNO()) {
                                         istore, ifolder, (MimeMessage) isub[j],
                                         false, download && initialize == 0,
                                         rules, state, stats);
+                                if (message == null)
+                                    modseq = null;
                                 ids[from + j] = (message == null || message.ui_hide ? null : message.id);
                             } catch (MessageRemovedException ex) {
                                 Log.w(folder.name, ex);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6545,9 +6545,9 @@ private boolean onOpenLink(Uri uri, String title, boolean always_confirm) {
             Log.i("Opening uri=" + uri + " title=" + title + " always confirm=" + always_confirm);
 
             try {
-                uri = Uri.parse(uri.toString().replaceAll("[\r\n]", ""));
+                uri = Uri.parse(uri.toString().trim().replaceAll("[\r\n]", ""));
                 if (UriHelper.isHyperLink(uri))
-                    uri = Uri.parse(uri.toString().trim().replaceAll("\\s+", "+"));
+                    uri = Uri.parse(uri.toString().replaceAll("\\s+", "+"));
 
                 if (ProtectedContent.isProtectedContent(uri)) {
                     Bundle args = new Bundle();

File: app/src/main/java/eu/faircode/email/ActivityAMP.java
Patch:
@@ -81,7 +81,7 @@ protected void onCreate(Bundle savedInstanceState) {
         wvAmp.clearCache(true);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean overview_mode = prefs.getBoolean("overview_mode", false);
+        boolean overview_mode = prefs.getBoolean("overview_mode", true);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 
         WebSettings settings = wvAmp.getSettings();
@@ -233,7 +233,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                         message == null || message.subject == null ? "AMP" : message.subject);
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean overview_mode = prefs.getBoolean("overview_mode", false);
+                boolean overview_mode = prefs.getBoolean("overview_mode", true);
 
                 String html;
                 ContentResolver resolver = context.getContentResolver();

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -140,7 +140,7 @@ public void afterTextChanged(Editable s) {
             public void onClick(View view) {
                 Bundle args = new Bundle();
                 args.putString("html", getHtml());
-                args.putBoolean("overview_mode", false);
+                args.putBoolean("overview_mode", true);
                 args.putBoolean("safe_browsing", false);
                 args.putBoolean("force_light", true);
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -873,6 +873,9 @@ else if (version < 2137) {
         } else if (version < 2196) {
             if (!prefs.contains("forward_new"))
                 editor.putBoolean("forward_new", true);
+        } else if (version < 2197) {
+            if (!prefs.contains("overview_mode"))
+                editor.putBoolean("overview_mode", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1685,7 +1685,7 @@ private void setOptions() {
                 sbMessageZoom.setProgress(message_zoom - 50);
 
             swEditorZoom.setChecked(prefs.getBoolean("editor_zoom", true));
-            swOverviewMode.setChecked(prefs.getBoolean("overview_mode", false));
+            swOverviewMode.setChecked(prefs.getBoolean("overview_mode", true));
 
             swContrast.setChecked(prefs.getBoolean("contrast", false));
             swHyphenation.setChecked(prefs.getBoolean("hyphenation", false));

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -69,7 +69,7 @@ public WebViewEx(Context context) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         this.viewportHeight = prefs.getInt("viewport_height", getDefaultViewportHeight(context));
-        boolean overview_mode = prefs.getBoolean("overview_mode", false);
+        boolean overview_mode = prefs.getBoolean("overview_mode", true);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 
         setVerticalScrollBarEnabled(false);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2418,7 +2418,7 @@ private void setOptions() {
 
             int dvh = WebViewEx.getDefaultViewportHeight(getContext());
             int vh = prefs.getInt("viewport_height", dvh);
-            etViewportHeight.setHint(vh == dvh ? null : Integer.toString(dvh));
+            etViewportHeight.setText(Integer.toString(vh));
 
             swIgnoreFormattedSize.setChecked(prefs.getBoolean("ignore_formatted_size", false));
             swShowRecent.setChecked(prefs.getBoolean("show_recent", false));

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -429,7 +429,7 @@ private static StringBuilder getAppInfo(Context context) {
         ActivityManager am = Helper.getSystemService(context, ActivityManager.class);
         ActivityManager.MemoryInfo mi = new ActivityManager.MemoryInfo();
         am.getMemoryInfo(mi);
-        sb.append(String.format("Memory class: %d/%d Large: %s MB Total: %s Low: %b\r\n",
+        sb.append(String.format("Memory class: %d/%d MB Large: %s Total: %s Low: %b\r\n",
                 am.getMemoryClass(), am.getLargeMemoryClass(),
                 largeHeap == null ? "?" : Boolean.toString(largeHeap),
                 Helper.humanReadableByteCount(mi.totalMem),

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -870,6 +870,9 @@ else if (version < 2137) {
         } else if (version < 2191) {
             if ("a".equals(BuildConfig.REVISION))
                 editor.remove("show_changelog");
+        } else if (version < 2196) {
+            if (!prefs.contains("forward_new"))
+                editor.putBoolean("forward_new", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5413,7 +5413,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
             boolean auto_identity = prefs.getBoolean("auto_identity", false);
             boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
             boolean suggest_received = prefs.getBoolean("suggest_received", false);
-            boolean forward_new = prefs.getBoolean("forward_new", true);
+            boolean forward_new = prefs.getBoolean("forward_new", false);
             boolean markdown = prefs.getBoolean("markdown", false);
 
             Log.i("Load draft action=" + action + " id=" + id + " reference=" + reference);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -966,7 +966,7 @@ private void setOptions() {
 
             swReceiptLegacy.setChecked(prefs.getBoolean("receipt_legacy", false));
 
-            swForwardNew.setChecked(prefs.getBoolean("forward_new", true));
+            swForwardNew.setChecked(prefs.getBoolean("forward_new", false));
             swLookupMx.setChecked(prefs.getBoolean("lookup_mx", false));
             swReplyMove.setChecked(prefs.getBoolean("reply_move", false));
             swReplyMoveInbox.setChecked(prefs.getBoolean("reply_move_inbox", true));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -341,7 +341,7 @@ static MimeMessageEx from(Context context, EntityMessage message, EntityIdentity
         boolean autocrypt = prefs.getBoolean("autocrypt", true);
         boolean mutual = prefs.getBoolean("autocrypt_mutual", true);
         boolean encrypt_subject = prefs.getBoolean("encrypt_subject", false);
-        boolean forward_new = prefs.getBoolean("forward_new", true);
+        boolean forward_new = prefs.getBoolean("forward_new", false);
 
         if (identity != null && identity.receipt_type != null)
             receipt_type = identity.receipt_type;
@@ -1847,7 +1847,7 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
                 refs.add(ref);
         }
 
-        boolean forward_new = prefs.getBoolean("forward_new", true);
+        boolean forward_new = prefs.getBoolean("forward_new", false);
         if (!forward_new)
             try {
                 String fwd = imessage.getHeader("X-Forwarded-Message-Id", null);

File: app/src/main/java/eu/faircode/email/FairEmailBackupAgent.java
Patch:
@@ -72,6 +72,7 @@ public void onBackup(ParcelFileDescriptor oldState, BackupDataOutput data, Parce
                 return;
 
             JSONObject jroot = new JSONObject();
+            jroot.put("version", 1);
 
             JSONObject jsettings = new JSONObject();
             jsettings.put("enabled", prefs.getBoolean("enabled", true));
@@ -174,7 +175,7 @@ public void onRestore(BackupDataInput data, int appVersionCode, ParcelFileDescri
                         EntityLog.log(this, "Restore decompressed=" + dataBuf.length);
 
                         JSONObject jroot = new JSONObject(new String(dataBuf, StandardCharsets.UTF_8));
-                        jroot.put("version", 1);
+                        EntityLog.log(this, "Restore version=" + jroot.optInt("version", 0));
 
                         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
                         SharedPreferences.Editor editor = prefs.edit();

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -914,6 +914,9 @@ else if ("mailru".equals(id)) {
                 if (!inbound_only && state.length == 1) {
                     EntityLog.log(context, "OAuth checking SMTP provider=" + provider.id);
 
+                    if (false && BuildConfig.DEBUG)
+                        throw new AuthenticationFailedException("535 5.7.139 Authentication unsuccessful, SmtpClientAuthentication is disabled for the Tenant.");
+
                     try (EmailService iservice = new EmailService(context,
                             iprotocol, null, iencryption, false, false, false,
                             EmailService.PURPOSE_CHECK, true)) {

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -266,6 +266,7 @@ protected void onCreate(Bundle savedInstanceState) {
             controller.setAppearanceLightStatusBars(false);
             controller.setAppearanceLightNavigationBars(false);
             window.setNavigationBarColor(Color.TRANSPARENT);
+            window.setNavigationBarContrastEnforced(false);
         }
 
         String requestKey = getRequestKey();

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -522,6 +522,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.group, other.group) &&
                     this.standard.equals(other.standard) &&
                     this.receipt.equals(other.receipt) &&
+                    this.ai.equals(other.ai) &&
                     this.favorite.equals(other.favorite) &&
                     this.snippet.equals(other.snippet) &&
                     this.hide.equals(other.hide) &&

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -476,6 +476,7 @@ public JSONObject toJSON() throws JSONException {
         json.put("group", group);
         json.put("standard", standard);
         json.put("receipt", receipt);
+        json.put("ai", ai);
         json.put("favorite", favorite);
         json.put("snippet", snippet);
         json.put("hide", hide);
@@ -498,6 +499,7 @@ public static EntityAnswer fromJSON(JSONObject json) throws JSONException {
             answer.group = null;
         answer.standard = json.optBoolean("standard");
         answer.receipt = json.optBoolean("receipt");
+        answer.ai = json.optBoolean("ai");
         answer.favorite = json.optBoolean("favorite");
         answer.snippet = json.optBoolean("snippet");
         answer.hide = json.optBoolean("hide");

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2697,7 +2697,7 @@ private void _onAi(Long template) {
         Bundle args = new Bundle();
         args.putLong("id", working);
         args.putCharSequence("body", body);
-        args.putLong("template", template == null ? -1L : template);
+        args.putLong("template", template == null ? 0L : template);
 
         new SimpleTask<Spanned>() {
             @Override

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -248,8 +248,6 @@ protected void onCreate(Bundle savedInstanceState) {
         Window window = getWindow();
         getSupportFragmentManager().registerFragmentLifecycleCallbacks(lifecycleCallbacks, true);
 
-        int colorPrimaryDark = Helper.resolveColor(this, androidx.appcompat.R.attr.colorPrimaryDark);
-
         this.contacts = hasPermission(Manifest.permission.READ_CONTACTS);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
@@ -310,7 +308,8 @@ public void onFragmentResult(@NonNull String requestKey, @NonNull Bundle result)
             boolean task_description = prefs.getBoolean("task_description", true);
             int colorPrimary;
             if (task_description) {
-                colorPrimary = colorPrimaryDark;
+                colorPrimary = Helper.resolveColor(this, androidx.appcompat.R.attr.colorPrimaryDark);
+                ;
                 if (colorPrimary != 0 && Color.alpha(colorPrimary) != 255) {
                     Log.w("Task color primary=" + Integer.toHexString(colorPrimary));
                     colorPrimary = ColorUtils.setAlphaComponent(colorPrimary, 255);

File: app/src/main/java/eu/faircode/email/AI.java
Patch:
@@ -140,7 +140,9 @@ static Spanned completeChat(Context context, long id, CharSequence body, long te
         } else
             throw new IllegalArgumentException("No AI available");
 
-        return HtmlHelper.fromHtml(Markdown.toHtml(sb.toString()), context);
+        String html = Markdown.toHtml(sb.toString());
+        Document d = HtmlHelper.sanitizeCompose(context, html, false);
+        return HtmlHelper.fromDocument(context, d, null, null);
     }
 
     static String getSummarizePrompt(Context context) {

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -647,7 +647,7 @@ static void setBackground(Context context, View view, boolean compose) {
         boolean tabular_card_bg = prefs.getBoolean("tabular_card_bg", false);
         String theme = prefs.getString("theme", "blue_orange_system");
         boolean dark = Helper.isDarkTheme(context);
-        boolean black = ((!"black".equals(theme) && theme.endsWith("black")) || "black_and_white".equals(theme));
+        boolean black = (theme.endsWith("black") || "black_and_white".equals(theme));
         boolean solarized = theme.startsWith("solarized");
         boolean you = theme.startsWith("you_");
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3876,7 +3876,7 @@ private static void onSynchronizeMessages(
                 keep_time = 0;
 
             long keep_unread_time = cal_keep_unread.getTimeInMillis();
-            if (keep_unread_time < 0)
+            if (keep_unread_time < 0 || sync_unseen)
                 keep_unread_time = 0;
 
             Log.i(folder.name + " sync=" + new Date(sync_time) +
@@ -3886,7 +3886,7 @@ private static void onSynchronizeMessages(
             // Delete old local messages
             long delete_time = new Date().getTime() - 3600 * 1000L;
             if (auto_delete) {
-                List<Long> tbds = db.message().getMessagesBefore(folder.id, delete_time, keep_time, keep_unread_time, delete_unseen);
+                List<Long> tbds = db.message().getMessagesBefore(folder.id, delete_time, keep_time, keep_unread_time, delete_unseen && !sync_unseen);
                 Log.i(folder.name + " local tbd=" + tbds.size());
                 EntityFolder trash = db.folder().getFolderByType(folder.account, EntityFolder.TRASH);
                 for (Long tbd : tbds) {
@@ -3899,7 +3899,7 @@ private static void onSynchronizeMessages(
                             EntityOperation.queue(context, message, EntityOperation.MOVE, trash.id);
                 }
             } else {
-                int old = db.message().deleteMessagesBefore(folder.id, delete_time, keep_time, keep_unread_time, delete_unseen);
+                int old = db.message().deleteMessagesBefore(folder.id, delete_time, keep_time, keep_unread_time, delete_unseen && !sync_unseen);
                 Log.i(folder.name + " local old=" + old);
             }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1512,7 +1512,7 @@ private void checkFirst() {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean first = prefs.getBoolean("first", true);
-        boolean show_changelog = prefs.getBoolean("show_changelog", !BuildConfig.PLAY_STORE_RELEASE);
+        boolean show_changelog = prefs.getBoolean("show_changelog", true);
 
         if (first)
             new FragmentDialogFirst().show(getSupportFragmentManager(), "first");

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2326,7 +2326,7 @@ private void setOptions() {
             swCheckWeekly.setEnabled(swUpdates.isChecked());
             swBeta.setChecked(prefs.getBoolean("beta", false));
             swBeta.setEnabled(swUpdates.isChecked());
-            swChangelog.setChecked(prefs.getBoolean("show_changelog", !BuildConfig.PLAY_STORE_RELEASE));
+            swChangelog.setChecked(prefs.getBoolean("show_changelog", true));
             swAnnouncements.setChecked(prefs.getBoolean("announcements", true));
             swExperiments.setChecked(prefs.getBoolean("experiments", false));
             swCrashReports.setChecked(prefs.getBoolean("crash_reports", false));

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2654,8 +2654,10 @@ protected void onExecuted(Bundle args, List<EntityAnswer> prompts) {
                 else {
                     PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(getContext(), getViewLifecycleOwner(), anchor);
 
+                    SpannableStringBuilder ssb = new SpannableStringBuilderEx(getString(R.string.title_advanced_default_prompt));
+                    ssb.setSpan(new RelativeSizeSpan(HtmlHelper.FONT_SMALL), 0, ssb.length(), 0);
                     popupMenu.getMenu()
-                            .add(Menu.NONE, 1, 1, R.string.title_answer_standard)
+                            .add(Menu.NONE, 1, 1, ssb)
                             .setIntent(new Intent().putExtra("id", -1L));
 
                     for (int i = 0; i < prompts.size(); i++) {

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -264,7 +264,7 @@ protected void onCreate(Bundle savedInstanceState) {
             WindowInsetsControllerCompat controller = WindowCompat.getInsetsController(window, window.getDecorView());
             controller.setAppearanceLightStatusBars(false);
             controller.setAppearanceLightNavigationBars(false);
-            window.setNavigationBarColor(ColorUtils.setAlphaComponent(colorPrimaryDark, 128));
+            window.setNavigationBarColor(Color.TRANSPARENT);
         }
 
         String requestKey = getRequestKey();

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -674,7 +674,7 @@ static void setBackground(Context context, View view, boolean compose) {
         }
 
         if (color == null)
-            if (black)
+            if (dark && black)
                 color = Color.BLACK;
             else {
                 TypedValue a = new TypedValue();

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -1038,7 +1038,7 @@ private static EmailProvider fromDNS(Context context, String domain, Discover di
             Collections.sort(list, new Comparator<DnsHelper.DnsRecord>() {
                 @Override
                 public int compare(DnsHelper.DnsRecord d1, DnsHelper.DnsRecord d2) {
-                    int p = -Integer.compare(d1.priority, d2.priority);
+                    int p = Integer.compare(d1.priority, d2.priority);
                     if (p != 0)
                         return p;
                     int w = -Integer.compare(d1.weight, d2.weight);
@@ -1076,7 +1076,7 @@ public int compare(DnsHelper.DnsRecord d1, DnsHelper.DnsRecord d2) {
             Collections.sort(list, new Comparator<DnsHelper.DnsRecord>() {
                 @Override
                 public int compare(DnsHelper.DnsRecord d1, DnsHelper.DnsRecord d2) {
-                    int p = -Integer.compare(d1.priority, d2.priority);
+                    int p = Integer.compare(d1.priority, d2.priority);
                     if (p != 0)
                         return p;
                     int w = -Integer.compare(d1.weight, d2.weight);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2573,8 +2573,9 @@ private Spanned formatAddresses(Address[] addresses, boolean full, int max) {
 
                         Matcher m = Helper.EMAIL_ADDRESS.matcher(personal);
                         while (m.find()) {
-                            ssb.setSpan(new StyleSpan(Typeface.BOLD), m.start(), m.end(), 0);
-                            ssb.setSpan(new ForegroundColorSpan(colorError), m.start(), m.end(), 0);
+                            int start = ssb.length() - personal.length();
+                            ssb.setSpan(new StyleSpan(Typeface.BOLD), start + m.start(), start + m.end(), 0);
+                            ssb.setSpan(new ForegroundColorSpan(colorError), start + m.start(), start + m.end(), 0);
                         }
 
                         if (full) {

File: app/src/main/java/eu/faircode/email/AI.java
Patch:
@@ -56,9 +56,9 @@ static String completeChat(Context context, long id, CharSequence body) throws J
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
 
         if (body == null || TextUtils.isEmpty(body.toString().trim()))
-            if (OpenAI.isAvailable(context))
+            if (OpenAI.isAvailable(context) && !ref.isEmpty())
                 body = prefs.getString("openai_answer", OpenAI.DEFAULT_ANSWER_PROMPT);
-            else if (Gemini.isAvailable(context))
+            else if (Gemini.isAvailable(context) && !ref.isEmpty())
                 body = prefs.getString("gemini_answer", Gemini.DEFAULT_ANSWER_PROMPT);
             else
                 body = "?";

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -146,8 +146,9 @@ public void onBackStackChanged() {
             @Override
             public void onOffsetChanged(AppBarLayout appBarLayout, int offset) {
                 try {
+                    view.setTranslationY(abh + offset);
                     ViewGroup.MarginLayoutParams mlp = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
-                    mlp.topMargin = abh + offset;
+                    mlp.bottomMargin = abh + offset;
                     view.setLayoutParams(mlp);
                 } catch (Throwable ex) {
                     Log.e(ex);

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -318,8 +318,7 @@ public void afterTextChanged(Editable text) {
                         if (renum)
                             StyleHelper.renumber(text, false, etBody.getContext());
 
-                        if (BuildConfig.DEBUG)
-                            StyleHelper.markAsInserted(text, -1, -1);
+                        StyleHelper.markAsInserted(text, -1, -1);
                     } catch (Throwable ex) {
                         Log.e(ex);
                     } finally {
@@ -1767,6 +1766,8 @@ else if (span instanceof BulletSpanEx)
     }
 
     static void markAsInserted(Editable text, int start, int end) {
+        if (!BuildConfig.DEBUG)
+            return;
         for (InsertedSpan span : text.getSpans(0, text.length(), InsertedSpan.class))
             text.removeSpan(span);
         if (start >= 0 && start < end && end <= text.length()) {

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -255,10 +255,9 @@ protected void onCreate(Bundle savedInstanceState) {
 
             EdgeToEdge.enable(this);
 
-            boolean dark = Helper.isDarkTheme(this);
             WindowInsetsControllerCompat controller = WindowCompat.getInsetsController(window, window.getDecorView());
-            controller.setAppearanceLightStatusBars(!dark);
-            controller.setAppearanceLightNavigationBars(!dark);
+            controller.setAppearanceLightStatusBars(false);
+            controller.setAppearanceLightNavigationBars(false);
         }
 
         String requestKey = getRequestKey();

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -88,7 +88,7 @@ public class EntityIdentity {
     @NonNull
     public String password;
     @NonNull
-    public Boolean login;
+    public Boolean login = false;
     @NonNull
     public boolean certificate = false; // obsolete
     public String certificate_alias;

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -647,7 +647,7 @@ static void setBackground(Context context, View view, boolean compose) {
         boolean tabular_card_bg = prefs.getBoolean("tabular_card_bg", false);
         String theme = prefs.getString("theme", "blue_orange_system");
         boolean dark = Helper.isDarkTheme(context);
-        boolean black = (!"black".equals(theme) && theme.endsWith("black"));
+        boolean black = ((!"black".equals(theme) && theme.endsWith("black")) || "black_and_white".equals(theme));
         boolean solarized = theme.startsWith("solarized");
         boolean you = theme.startsWith("you_");
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -249,7 +249,6 @@ protected void onCreate(Bundle savedInstanceState) {
                 " landscape cols=" + landscape + " min=" + landscape_min_size);
         boolean duo = Helper.isSurfaceDuo();
         boolean close_pane = prefs.getBoolean("close_pane", !duo);
-        boolean open_pane = (!close_pane && prefs.getBoolean("open_pane", false));
         boolean nav_categories = prefs.getBoolean("nav_categories", false);
 
         // 1=small, 2=normal, 3=large, 4=xlarge
@@ -711,8 +710,8 @@ public void delegate() {
         // Initialize
 
         if (content_pane != null) {
-            content_separator.setVisibility(duo || open_pane ? View.INVISIBLE : View.GONE);
-            content_pane.setVisibility(duo || open_pane ? View.INVISIBLE : View.GONE);
+            content_separator.setVisibility(close_pane ? View.GONE : View.INVISIBLE);
+            content_pane.setVisibility(close_pane ? View.GONE : View.INVISIBLE);
         }
 
         FragmentManager fm = getSupportFragmentManager();

File: app/src/main/java/eu/faircode/email/AI.java
Patch:
@@ -94,7 +94,7 @@ static String completeChat(Context context, long id, CharSequence body) throws J
                 }
             return sb.toString();
         } else
-            return null;
+            throw new IllegalArgumentException("No AI available");
     }
 
     static String getSummarizePrompt(Context context) {
@@ -186,6 +186,6 @@ static String getSummaryText(Context context, EntityMessage message) throws JSON
                 }
             return sb.toString();
         } else
-            return null;
+            throw new IllegalArgumentException("No AI available");
     }
 }

File: app/src/main/java/eu/faircode/email/AI.java
Patch:
@@ -50,7 +50,7 @@ static String completeChat(Context context, long id, CharSequence body) throws J
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             String model = prefs.getString("openai_model", OpenAI.DEFAULT_MODEL);
             float temperature = prefs.getFloat("openai_temperature", OpenAI.DEFAULT_TEMPERATURE);
-            boolean multimodal = prefs.getBoolean("openai_multimodal", true);
+            boolean multimodal = prefs.getBoolean("openai_multimodal", false);
 
             OpenAI.Message message;
             if (body instanceof Spannable)
@@ -129,7 +129,7 @@ static String getSummaryText(Context context, EntityMessage message) throws JSON
             String model = prefs.getString("openai_model", OpenAI.DEFAULT_MODEL);
             float temperature = prefs.getFloat("openai_temperature", OpenAI.DEFAULT_TEMPERATURE);
             String prompt = prefs.getString("openai_summarize", OpenAI.DEFAULT_SUMMARY_PROMPT);
-            boolean multimodal = prefs.getBoolean("openai_multimodal", true);
+            boolean multimodal = prefs.getBoolean("openai_multimodal", false);
 
             List<OpenAI.Message> input = new ArrayList<>();
             input.add(new OpenAI.Message(OpenAI.USER,

File: app/src/main/java/eu/faircode/email/FragmentOptionsIntegrations.java
Patch:
@@ -787,7 +787,7 @@ private void setOptions() {
             etOpenAiModel.setText(prefs.getString("openai_model", null));
             etOpenAiModel.setEnabled(swOpenAi.isChecked());
 
-            swOpenMultiModal.setChecked(prefs.getBoolean("openai_multimodal", true));
+            swOpenMultiModal.setChecked(prefs.getBoolean("openai_multimodal", false));
             swOpenMultiModal.setEnabled(swOpenAi.isChecked());
 
             float temperature = prefs.getFloat("openai_temperature", OpenAI.DEFAULT_TEMPERATURE);

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -405,6 +405,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+        boolean debug = prefs.getBoolean("debug", false);
 
         ibHelp.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -646,7 +647,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swEdgeToEdge.setVisibility(BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
+        swEdgeToEdge.setVisibility(debug || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         swEdgeToEdge.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -128,7 +128,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         long from = new Date().getTime() - 24 * 3600 * 1000L;
-        int limit = (BuildConfig.DEBUG ? 10000 : 2000);
+        int limit = (BuildConfig.DEBUG ? 5000 : 2000);
 
         DB db = DB.getInstance(getContext());
         db.log().liveLogs(from, limit, null).observe(getViewLifecycleOwner(), new Observer<List<EntityLog>>() {

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -151,7 +151,7 @@ public void init(@NonNull DatabaseConfiguration configuration) {
         File dbfile = configuration.context.getDatabasePath(DB_NAME);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(configuration.context);
-        boolean sqlite_integrity_check = prefs.getBoolean("sqlite_integrity_check", true);
+        boolean sqlite_integrity_check = prefs.getBoolean("sqlite_integrity_check", false);
 
         // https://www.sqlite.org/pragma.html#pragma_integrity_check
         if (sqlite_integrity_check && dbfile.exists()) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2350,7 +2350,7 @@ private void setOptions() {
             swTaskDescription.setChecked(prefs.getBoolean("task_description", true));
             swExternalStorage.setChecked(prefs.getBoolean("external_storage", false));
 
-            swIntegrity.setChecked(prefs.getBoolean("sqlite_integrity_check", true));
+            swIntegrity.setChecked(prefs.getBoolean("sqlite_integrity_check", false));
             swWal.setChecked(prefs.getBoolean("wal", true));
             swCheckpoints.setChecked(prefs.getBoolean("sqlite_checkpoints", true));
             swAnalyze.setChecked(prefs.getBoolean("sqlite_analyze", true));

File: app/src/main/java/eu/faircode/email/DaoLog.java
Patch:
@@ -32,8 +32,8 @@ public interface DaoLog {
             " WHERE time > :from" +
             " AND (:type IS NULL OR type = :type)" +
             " ORDER BY time DESC" +
-            " LIMIT 2000")
-    LiveData<List<EntityLog>> liveLogs(long from, Integer type);
+            " LIMIT :limit")
+    LiveData<List<EntityLog>> liveLogs(long from, int limit, Integer type);
 
     @Query("SELECT * FROM log" +
             " WHERE time > :from" +

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -128,9 +128,10 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         long from = new Date().getTime() - 24 * 3600 * 1000L;
+        int limit = (BuildConfig.DEBUG ? 10000 : 2000);
 
         DB db = DB.getInstance(getContext());
-        db.log().liveLogs(from, null).observe(getViewLifecycleOwner(), new Observer<List<EntityLog>>() {
+        db.log().liveLogs(from, limit, null).observe(getViewLifecycleOwner(), new Observer<List<EntityLog>>() {
             @Override
             public void onChanged(List<EntityLog> logs) {
                 if (logs == null)

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -49,7 +49,7 @@ public class EntityLog {
     private static Long last_cleanup = null;
 
     private static final long LOG_CLEANUP_INTERVAL = 3600 * 1000L; // milliseconds
-    private static final long LOG_KEEP_DURATION = 12 * 3600 * 1000L; // milliseconds
+    private static final long LOG_KEEP_DURATION = (BuildConfig.DEBUG ? 24 : 12) * 3600 * 1000L; // milliseconds
     private static final int LOG_DELETE_BATCH_SIZE = 50;
 
     @PrimaryKey(autoGenerate = true)

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -754,7 +754,7 @@ public void delegate() {
         if (savedInstanceState != null)
             drawerToggle.setDrawerIndicatorEnabled(savedInstanceState.getBoolean("fair:toggle"));
 
-        if (initialized)
+        if (!"inbox".equals(startup))
             checkFirst();
         checkBanner();
         checkCrash();

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -1032,10 +1032,10 @@ public void onResume() {
         TextViewCompat.setCompoundDrawableTintList(tvDozeDone,
                 ColorStateList.valueOf(isIgnoring ? textColorPrimary : colorWarning));
 
-        btnDoze.setEnabled(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !Helper.isArc());
+        btnDoze.setEnabled(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !Helper.isArc() && (!isIgnoring || BuildConfig.DEBUG));
         btnDoze.setCompoundDrawablesRelativeWithIntrinsicBounds(
                 0, 0, isIgnoring ? R.drawable.twotone_settings_24 : R.drawable.twotone_check_24, 0);
-        btnDoze.setText(isIgnoring ? R.string.title_setup_manage : R.string.title_setup_grant);
+        btnDoze.setText(isIgnoring && BuildConfig.DEBUG ? R.string.title_setup_manage : R.string.title_setup_grant);
 
         tvDoze15.setVisibility(Helper.isAndroid15() && !isIgnoring ? View.VISIBLE : View.GONE);
         tvDoze12.setVisibility(!canScheduleExact && !isIgnoring ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentDialogSummarize.java
Patch:
@@ -116,7 +116,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                     String prompt = prefs.getString("openai_summarize", OpenAI.DEFAULT_SUMMARY_PROMPT);
 
                     List<OpenAI.Message> result = new ArrayList<>();
-                    result.add(new OpenAI.Message(OpenAI.ASSISTANT,
+                    result.add(new OpenAI.Message(OpenAI.USER,
                             new OpenAI.Content[]{new OpenAI.Content(OpenAI.CONTENT_TEXT, prompt)}));
                     result.add(new OpenAI.Message(OpenAI.USER,
                             new OpenAI.Content[]{new OpenAI.Content(OpenAI.CONTENT_TEXT, text)}));

File: app/src/main/java/eu/faircode/email/Gemini.java
Patch:
@@ -42,6 +42,8 @@
 
 public class Gemini {
     // https://ai.google.dev/models/gemini
+    static final String DEFAULT_MODEL = "gemini-pro";
+    static final float DEFAULT_TEMPERATURE = 0.9f;
     static final String MODEL = "model";
     static final String USER = "user";
     static final String SUMMARY_PROMPT = "Summarize the following text:";

File: app/src/main/java/eu/faircode/email/OpenAI.java
Patch:
@@ -42,6 +42,8 @@
 import java.util.Objects;
 
 public class OpenAI {
+    static final String DEFAULT_MODEL = "gpt-4o";
+    static final float DEFAULT_TEMPERATURE = 0.5f;
     static final String ASSISTANT = "assistant";
     static final String USER = "user";
     static final String SUMMARY_PROMPT = "Summarize the following text:";

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2359,9 +2359,10 @@ else if (ARC_MESSAGE_SIGNATURE.equals(n))
                     }
                 }
             }
-
         } catch (Throwable ex) {
             Log.e("DKIM", ex);
+            EntityLog.log(context, EntityLog.Type.Debug3, "DKIM failed" +
+                    " ex=" + Log.formatThrowable(ex));
         }
 
         return signers;

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -406,7 +406,7 @@ public void run() {
             try {
                 Log.i("Disabling view invalidation");
 
-                Field fmViewTables = InvalidationTracker.class.getDeclaredField("viewTables");
+                Field fmViewTables = InvalidationTracker.class.getDeclaredField("mViewTables");
                 fmViewTables.setAccessible(true);
 
                 Map<String, Set<String>> mViewTables = (Map) fmViewTables.get(sInstance.getInvalidationTracker());

File: app/src/main/java/androidx/room/RoomTrackingLiveData.java
Patch:
@@ -118,7 +118,7 @@ public void run() {
             if (isActive)
                 synchronized (lock) {
                     if (queued > 0)
-                        eu.faircode.email.Log.persist(eu.faircode.email.EntityLog.Type.Debug,
+                        eu.faircode.email.Log.persist(eu.faircode.email.EntityLog.Type.Debug1,
                                 mComputeFunction + " queued=" + queued);
                     else {
                         queued++;

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -520,7 +520,7 @@ private void connect(
 
             if (auth == AUTH_TYPE_GMAIL || auth == AUTH_TYPE_OAUTH) {
                 try {
-                    EntityLog.log(context, EntityLog.Type.Debug,
+                    EntityLog.log(context, EntityLog.Type.Debug1,
                             ex + "\n" + android.util.Log.getStackTraceString(ex));
                     authenticator.refreshToken(true);
                     connect(dnssec, host, port, auth, user, factory);

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -24,7 +24,6 @@
 import android.content.SharedPreferences;
 import android.graphics.Typeface;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.SpannableStringBuilder;
 import android.text.style.ForegroundColorSpan;
 import android.text.style.StyleSpan;
@@ -40,6 +39,7 @@
 import androidx.appcompat.app.AlertDialog;
 import androidx.constraintlayout.widget.Group;
 import androidx.lifecycle.Observer;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -203,7 +203,7 @@ private void onMenuShow() {
 
         int len = EntityLog.Type.values().length;
         if (!BuildConfig.DEBUG)
-            len--;
+            len -= 3;
 
         SpannableStringBuilder[] titles = new SpannableStringBuilder[len];
         boolean[] states = new boolean[len];

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -850,7 +850,7 @@ public void onChanged(List<TupleMessageEx> messages) {
             @OnLifecycleEvent(Lifecycle.Event.ON_ANY)
             public void onStateChanged() {
                 Lifecycle.State state = mowner.getLifecycle().getCurrentState();
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug, "Owner state=" + state);
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1, "Owner state=" + state);
                 if (state.equals(Lifecycle.State.DESTROYED))
                     mowner.getLifecycle().removeObserver(this);
             }
@@ -872,7 +872,7 @@ public void onChanged(Boolean foreground) {
             @Override
             public void onChanged(boolean inCall) {
                 boolean suppress = prefs.getBoolean("notify_suppress_in_call", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
                         "In call=" + inCall + " suppress=" + suppress);
                 isInCall = (inCall && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());
@@ -889,7 +889,7 @@ public void onChanged(Integer connectionState) {
                 boolean projection = (connectionState != null &&
                         connectionState == CarConnection.CONNECTION_TYPE_PROJECTION);
                 boolean suppress = prefs.getBoolean("notify_suppress_in_car", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
                         "Projection=" + projection + " state=" + connectionState + " suppress=" + suppress);
                 isInCar = (projection && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -203,7 +203,7 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
         LifecycleObserver watcher = new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroy() {
-                EntityLog.log(context, EntityLog.Type.Debug, "Owner gone task=" + name);
+                EntityLog.log(context, EntityLog.Type.Debug1, "Owner gone task=" + name);
                 destroyed = true;
                 onDestroyed(args);
                 owner.getLifecycle().removeObserver(this);

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -520,7 +520,7 @@ private void connect(
 
             if (auth == AUTH_TYPE_GMAIL || auth == AUTH_TYPE_OAUTH) {
                 try {
-                    EntityLog.log(context, EntityLog.Type.Debug1,
+                    EntityLog.log(context, EntityLog.Type.Debug,
                             ex + "\n" + android.util.Log.getStackTraceString(ex));
                     authenticator.refreshToken(true);
                     connect(dnssec, host, port, auth, user, factory);

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -24,6 +24,7 @@
 import android.content.SharedPreferences;
 import android.graphics.Typeface;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.text.SpannableStringBuilder;
 import android.text.style.ForegroundColorSpan;
 import android.text.style.StyleSpan;
@@ -39,7 +40,6 @@
 import androidx.appcompat.app.AlertDialog;
 import androidx.constraintlayout.widget.Group;
 import androidx.lifecycle.Observer;
-import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -203,7 +203,7 @@ private void onMenuShow() {
 
         int len = EntityLog.Type.values().length;
         if (!BuildConfig.DEBUG)
-            len -= 3;
+            len--;
 
         SpannableStringBuilder[] titles = new SpannableStringBuilder[len];
         boolean[] states = new boolean[len];

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -850,7 +850,7 @@ public void onChanged(List<TupleMessageEx> messages) {
             @OnLifecycleEvent(Lifecycle.Event.ON_ANY)
             public void onStateChanged() {
                 Lifecycle.State state = mowner.getLifecycle().getCurrentState();
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1, "Owner state=" + state);
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug, "Owner state=" + state);
                 if (state.equals(Lifecycle.State.DESTROYED))
                     mowner.getLifecycle().removeObserver(this);
             }
@@ -872,7 +872,7 @@ public void onChanged(Boolean foreground) {
             @Override
             public void onChanged(boolean inCall) {
                 boolean suppress = prefs.getBoolean("notify_suppress_in_call", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
                         "In call=" + inCall + " suppress=" + suppress);
                 isInCall = (inCall && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());
@@ -889,7 +889,7 @@ public void onChanged(Integer connectionState) {
                 boolean projection = (connectionState != null &&
                         connectionState == CarConnection.CONNECTION_TYPE_PROJECTION);
                 boolean suppress = prefs.getBoolean("notify_suppress_in_car", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
                         "Projection=" + projection + " state=" + connectionState + " suppress=" + suppress);
                 isInCar = (projection && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -203,7 +203,7 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
         LifecycleObserver watcher = new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroy() {
-                EntityLog.log(context, EntityLog.Type.Debug1, "Owner gone task=" + name);
+                EntityLog.log(context, EntityLog.Type.Debug, "Owner gone task=" + name);
                 destroyed = true;
                 onDestroyed(args);
                 owner.getLifecycle().removeObserver(this);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -754,7 +754,8 @@ public void delegate() {
         if (savedInstanceState != null)
             drawerToggle.setDrawerIndicatorEnabled(savedInstanceState.getBoolean("fair:toggle"));
 
-        checkFirst();
+        if (initialized)
+            checkFirst();
         checkBanner();
         checkCrash();
 
@@ -808,6 +809,7 @@ protected void onExecuted(Bundle args, EntityFolder inbox) {
                     fragment.setArguments(args);
                     setFragment(fragment);
                     checkIntent();
+                    checkFirst();
                     initialized = true;
                 }
 

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -1628,7 +1628,7 @@ private static void attachEnvironment(Context context, long id, int sequence) {
                                 sb.append(scheme);
                             }
 
-                            if (tabs && BuildConfig.DEBUG)
+                            if (tabs && BuildConfig.DEBUG && false)
                                 try {
                                     boolean bindable = context.bindService(serviceIntent, new CustomTabsServiceConnection() {
                                         @Override

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -520,7 +520,7 @@ private void connect(
 
             if (auth == AUTH_TYPE_GMAIL || auth == AUTH_TYPE_OAUTH) {
                 try {
-                    EntityLog.log(context, EntityLog.Type.Debug,
+                    EntityLog.log(context, EntityLog.Type.Debug1,
                             ex + "\n" + android.util.Log.getStackTraceString(ex));
                     authenticator.refreshToken(true);
                     connect(dnssec, host, port, auth, user, factory);

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -24,7 +24,6 @@
 import android.content.SharedPreferences;
 import android.graphics.Typeface;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.SpannableStringBuilder;
 import android.text.style.ForegroundColorSpan;
 import android.text.style.StyleSpan;
@@ -40,6 +39,7 @@
 import androidx.appcompat.app.AlertDialog;
 import androidx.constraintlayout.widget.Group;
 import androidx.lifecycle.Observer;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -203,7 +203,7 @@ private void onMenuShow() {
 
         int len = EntityLog.Type.values().length;
         if (!BuildConfig.DEBUG)
-            len--;
+            len -= 3;
 
         SpannableStringBuilder[] titles = new SpannableStringBuilder[len];
         boolean[] states = new boolean[len];

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -850,7 +850,7 @@ public void onChanged(List<TupleMessageEx> messages) {
             @OnLifecycleEvent(Lifecycle.Event.ON_ANY)
             public void onStateChanged() {
                 Lifecycle.State state = mowner.getLifecycle().getCurrentState();
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug, "Owner state=" + state);
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1, "Owner state=" + state);
                 if (state.equals(Lifecycle.State.DESTROYED))
                     mowner.getLifecycle().removeObserver(this);
             }
@@ -872,7 +872,7 @@ public void onChanged(Boolean foreground) {
             @Override
             public void onChanged(boolean inCall) {
                 boolean suppress = prefs.getBoolean("notify_suppress_in_call", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
                         "In call=" + inCall + " suppress=" + suppress);
                 isInCall = (inCall && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());
@@ -889,7 +889,7 @@ public void onChanged(Integer connectionState) {
                 boolean projection = (connectionState != null &&
                         connectionState == CarConnection.CONNECTION_TYPE_PROJECTION);
                 boolean suppress = prefs.getBoolean("notify_suppress_in_car", false);
-                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug,
+                EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Debug1,
                         "Projection=" + projection + " state=" + connectionState + " suppress=" + suppress);
                 isInCar = (projection && suppress);
                 boolean fg = Boolean.TRUE.equals(foreground.getValue());

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -203,7 +203,7 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
         LifecycleObserver watcher = new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroy() {
-                EntityLog.log(context, EntityLog.Type.Debug, "Owner gone task=" + name);
+                EntityLog.log(context, EntityLog.Type.Debug1, "Owner gone task=" + name);
                 destroyed = true;
                 onDestroyed(args);
                 owner.getLifecycle().removeObserver(this);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2790,7 +2790,7 @@ protected Gemini.Message[] onExecute(Context context, Bundle args) throws Throwa
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 String model = prefs.getString("gemini_model", "gemini-pro");
-                float temperature = prefs.getFloat("gemini_temperature", 0.5f);
+                float temperature = prefs.getFloat("gemini_temperature", 0.9f);
 
                 Gemini.Message message = new Gemini.Message(Gemini.USER, new String[]{Gemini.truncateParagraphs(body)});
 

File: app/src/main/java/eu/faircode/email/FragmentDialogSummarize.java
Patch:
@@ -106,7 +106,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                     return sb.toString();
                 } else if (Gemini.isAvailable(context)) {
                     String model = prefs.getString("gemini_model", "gemini-pro");
-                    float temperature = prefs.getFloat("gemini_temperature", 0.5f);
+                    float temperature = prefs.getFloat("gemini_temperature", 0.9f);
                     String prompt = prefs.getString("gemini_summarize", Gemini.SUMMARY_PROMPT);
 
                     Gemini.Message message = new Gemini.Message(Gemini.USER, new String[]{prompt, text});

File: app/src/main/java/eu/faircode/email/FragmentOptionsIntegrations.java
Patch:
@@ -804,7 +804,7 @@ private void setOptions() {
             etGeminiModel.setText(prefs.getString("gemini_model", null));
             etGeminiModel.setEnabled(swGemini.isChecked());
 
-            temperature = prefs.getFloat("gemini_temperature", 0.5f);
+            temperature = prefs.getFloat("gemini_temperature", 0.9f);
             tvGeminiTemperature.setText(getString(R.string.title_advanced_openai_temperature, NF.format(temperature)));
             sbGeminiTemperature.setProgress(Math.round(temperature * 10));
             sbGeminiTemperature.setEnabled(swGemini.isChecked());

File: app/src/main/java/eu/faircode/email/FragmentOptionsIntegrations.java
Patch:
@@ -642,7 +642,7 @@ public void afterTextChanged(Editable s) {
         sbGeminiTemperature.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
-                float temp = progress / 20f;
+                float temp = progress / 10f;
                 prefs.edit().putFloat("gemini_temperature", temp).apply();
             }
 
@@ -806,7 +806,7 @@ private void setOptions() {
 
             temperature = prefs.getFloat("gemini_temperature", 0.5f);
             tvGeminiTemperature.setText(getString(R.string.title_advanced_openai_temperature, NF.format(temperature)));
-            sbGeminiTemperature.setProgress(Math.round(temperature * 20));
+            sbGeminiTemperature.setProgress(Math.round(temperature * 10));
             sbGeminiTemperature.setEnabled(swGemini.isChecked());
 
             etGeminiSummarize.setText(prefs.getString("gemini_summarize", null));

File: app/src/main/java/eu/faircode/email/Gemini.java
Patch:
@@ -62,6 +62,7 @@ static boolean isAvailable(Context context) {
     }
 
     static Message[] generate(Context context, String model, Message[] messages, Float temperature, int n) throws JSONException, IOException {
+        //https://ai.google.dev/api/rest/v1beta/models/generateContent
         JSONArray jcontents = new JSONArray();
         for (Message message : messages) {
             JSONArray jparts = new JSONArray();
@@ -78,13 +79,13 @@ static Message[] generate(Context context, String model, Message[] messages, Flo
             jcontents.put(jcontent);
         }
 
-        // https://ai.google.dev/api/python/google/ai/generativelanguage/GenerationConfig
+        // https://ai.google.dev/api/rest/v1beta/GenerationConfig
         JSONObject jconfig = new JSONObject();
         if (temperature != null)
             jconfig.put("temperature", temperature);
         jconfig.put("candidate_count", n);
 
-        // https://ai.google.dev/api/python/google/ai/generativelanguage/SafetySetting
+        // https://ai.google.dev/api/rest/v1beta/SafetySetting
         JSONArray jsafety = new JSONArray();
 
         JSONObject jsex = new JSONObject();
@@ -107,7 +108,6 @@ static Message[] generate(Context context, String model, Message[] messages, Flo
         jdanger.put("threshold", "BLOCK_ONLY_HIGH");
         jsafety.put(jdanger);
 
-        // https://ai.google.dev/api/python/google/ai/generativelanguage/GenerateContentRequest
         JSONObject jrequest = new JSONObject();
         jrequest.put("contents", jcontents);
         jrequest.put("generationConfig", jconfig);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -112,6 +112,7 @@ public interface DaoMessage {
             "   WHEN 'size' = :sort1 THEN -SUM(message.total)" +
             "   WHEN 'attachments' = :sort1 THEN -SUM(message.attachments)" +
             "   WHEN 'snoozed' = :sort1 THEN SUM(CASE WHEN message.ui_snoozed IS NULL THEN 0 ELSE 1 END) = 0" +
+            "   WHEN 'touched' = :sort1 THEN IFNULL(-message.last_attempt, 0)" +
             "   ELSE 0" +
             "  END" +
             ", CASE" +
@@ -191,6 +192,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             "   WHEN 'size' = :sort1 THEN -SUM(message.total)" +
             "   WHEN 'attachments' = :sort1 THEN -SUM(message.attachments)" +
             "   WHEN 'snoozed' = :sort1 THEN SUM(CASE WHEN message.ui_snoozed IS NULL THEN 0 ELSE 1 END) = 0" +
+            "   WHEN 'touched' = :sort1 THEN IFNULL(-message.last_attempt, 0)" +
             "   ELSE 0" +
             "  END" +
             ", CASE" +

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -184,7 +184,7 @@ else if (viewType == AdapterMessage.ViewType.SEARCH)
                                 db.message().pagedUnified(
                                         null,
                                         args.threading, false,
-                                        "time", "", false,
+                                        criteria == null || criteria.touched == null ? "time" : "touched", "", false,
                                         false, false, false, false, false,
                                         null,
                                         true,
@@ -194,7 +194,7 @@ else if (viewType == AdapterMessage.ViewType.SEARCH)
                         builder = new LivePagedListBuilder<>(
                                 db.message().pagedFolder(
                                         args.folder, args.threading,
-                                        "time", "", false,
+                                        criteria == null || criteria.touched == null ? "time" : "touched", "", false,
                                         false, false, false, false, false,
                                         null,
                                         true,

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2913,7 +2913,7 @@ private void updateQuota(Context context, IMAPStore istore, EntityAccount accoun
                         if (quota.resources != null)
                             for (Quota.Resource resource : quota.resources) {
                                 EntityLog.log(context, EntityLog.Type.Account, account,
-                                        account.name + "quota " +
+                                        account.name + " quota " +
                                                 " root=\"" + quota.quotaRoot + "\"" +
                                                 " resource=\"" + resource.name + "\"" +
                                                 " " + resource.usage + "/" + resource.limit);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -1381,7 +1381,8 @@ JSONObject toJsonData() throws JSONException {
 
         public static SearchCriteria fromJsonData(JSONObject json) throws JSONException {
             SearchCriteria criteria = new SearchCriteria();
-            criteria.query = json.optString("query");
+            if (!json.isNull("query"))
+                criteria.query = json.optString("query");
             criteria.fts = json.optBoolean("fts");
             criteria.in_senders = json.optBoolean("in_senders");
             criteria.in_recipients = json.optBoolean("in_recipients");

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -745,6 +745,8 @@ public void delegate() {
             boolean unified = (intent != null && "unified".equals(intent.getAction()));
             if (!search && !(standalone && !unified))
                 init();
+            else
+                initialized = true;
         }
 
         if (savedInstanceState != null)

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -406,7 +406,7 @@ public void run() {
             try {
                 Log.i("Disabling view invalidation");
 
-                Field fmViewTables = InvalidationTracker.class.getDeclaredField("mViewTables");
+                Field fmViewTables = InvalidationTracker.class.getDeclaredField("viewTables");
                 fmViewTables.setAccessible(true);
 
                 Map<String, Set<String>> mViewTables = (Map) fmViewTables.get(sInstance.getInvalidationTracker());

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -243,6 +243,7 @@ public class MessageHelper {
     static final String FLAG_COMPLAINT = "Complaint";
     static final String FLAG_LOW_IMPORTANCE = "$LowImportance";
     static final String FLAG_HIGH_IMPORTANCE = "$HighImportance";
+    static final String FLAG_PHISHING = "$Phishing"; // Gmail
 
     // https://www.iana.org/assignments/imap-jmap-keywords/imap-jmap-keywords.xhtml
     // Not black listed: Gmail $Phishing

File: app/src/main/java/eu/faircode/email/TupleKeyword.java
Patch:
@@ -168,6 +168,8 @@ static String getDefaultKeywordAlias(Context context, String keyword) {
                 return context.getString(R.string.title_keyword_not_delivered);
             case MessageHelper.FLAG_COMPLAINT:
                 return context.getString(R.string.title_keyword_complaint);
+            case MessageHelper.FLAG_PHISHING:
+                return context.getString(R.string.title_keyword_phishing);
             default:
                 return keyword;
         }
@@ -192,6 +194,7 @@ static Integer getDefaultKeywordColor(Context context, String keyword) {
             case MessageHelper.FLAG_NOT_DISPLAYED:
             case MessageHelper.FLAG_NOT_DELIVERED:
             case MessageHelper.FLAG_COMPLAINT:
+            case MessageHelper.FLAG_PHISHING:
                 return Helper.resolveColor(context, androidx.appcompat.R.attr.colorError);
 
             default:

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1528,9 +1528,6 @@ String[] getKeywords() throws MessagingException {
     }
 
     static boolean showKeyword(String keyword) {
-        if (BuildConfig.DEBUG)
-            return true;
-
         int len = FLAG_BLACKLIST.size();
         for (int i = 0; i < len; i++)
             if (FLAG_BLACKLIST.get(i).equalsIgnoreCase(keyword))

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/BinaryConverter.java
Patch:
@@ -39,7 +39,7 @@ public static byte[] deserialize(final JsonReader reader) throws IOException {
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<byte[]> deserializeCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(Base64Reader);
+		return reader.deserializeCollectionCustom(Base64Reader);
 	}
 
 	public static void deserializeCollection(final JsonReader reader, final Collection<byte[]> res) throws IOException {
@@ -48,7 +48,7 @@ public static void deserializeCollection(final JsonReader reader, final Collecti
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<byte[]> deserializeNullableCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(Base64Reader);
+		return reader.deserializeNullableCollectionCustom(Base64Reader);
 	}
 
 	public static void deserializeNullableCollection(final JsonReader reader, final Collection<byte[]> res) throws IOException {

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/BoolConverter.java
Patch:
@@ -110,7 +110,7 @@ public static boolean[] deserializeBoolArray(final JsonReader reader) throws IOE
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Boolean> deserializeCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(READER);
+		return reader.deserializeCollectionCustom(READER);
 	}
 
 	public static void deserializeCollection(final JsonReader reader, final Collection<Boolean> res) throws IOException {
@@ -119,7 +119,7 @@ public static void deserializeCollection(final JsonReader reader, final Collecti
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Boolean> deserializeNullableCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(READER);
+		return reader.deserializeNullableCollectionCustom(READER);
 	}
 
 	public static void deserializeNullableCollection(final JsonReader reader, final Collection<Boolean> res) throws IOException {

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/MapConverter.java
Patch:
@@ -70,7 +70,7 @@ public static Map<String, String> deserialize(final JsonReader reader) throws IO
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Map<String, String>> deserializeCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(TypedMapReader);
+		return reader.deserializeCollectionCustom(TypedMapReader);
 	}
 
 	public static void deserializeCollection(final JsonReader reader, final Collection<Map<String, String>> res) throws IOException {
@@ -79,7 +79,7 @@ public static void deserializeCollection(final JsonReader reader, final Collecti
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Map<String, String>> deserializeNullableCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(TypedMapReader);
+		return reader.deserializeNullableCollectionCustom(TypedMapReader);
 	}
 
 	public static void deserializeNullableCollection(final JsonReader reader, final Collection<Map<String, String>> res) throws IOException {

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/ObjectConverter.java
Patch:
@@ -117,7 +117,7 @@ public static LinkedHashMap<String, Object> deserializeMap(final JsonReader read
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Map<String, Object>> deserializeMapCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(TypedMapReader);
+		return reader.deserializeCollectionCustom(TypedMapReader);
 	}
 
 	public static void deserializeMapCollection(final JsonReader reader, final Collection<Map<String, Object>> res) throws IOException {
@@ -126,7 +126,7 @@ public static void deserializeMapCollection(final JsonReader reader, final Colle
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<Map<String, Object>> deserializeNullableMapCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(TypedMapReader);
+		return reader.deserializeNullableCollectionCustom(TypedMapReader);
 	}
 
 	public static void deserializeNullableMapCollection(final JsonReader reader, final Collection<Map<String, Object>> res) throws IOException {

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/StringConverter.java
Patch:
@@ -89,7 +89,7 @@ public static String deserializeNullable(final JsonReader reader) throws IOExcep
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<String> deserializeCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(READER);
+		return reader.deserializeCollectionCustom(READER);
 	}
 
 	public static void deserializeCollection(final JsonReader reader, final Collection<String> res) throws IOException {
@@ -98,7 +98,7 @@ public static void deserializeCollection(final JsonReader reader, final Collecti
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<String> deserializeNullableCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(READER);
+		return reader.deserializeNullableCollectionCustom(READER);
 	}
 
 	public static void deserializeNullableCollection(final JsonReader reader, final Collection<String> res) throws IOException {

File: app/src/main/java/com/bugsnag/android/repackaged/dslplatform/json/UUIDConverter.java
Patch:
@@ -180,7 +180,7 @@ public static UUID deserialize(final JsonReader reader) throws IOException {
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<UUID> deserializeCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeCollection(READER);
+		return reader.deserializeCollectionCustom(READER);
 	}
 
 	public static void deserializeCollection(final JsonReader reader, final Collection<UUID> res) throws IOException {
@@ -189,7 +189,7 @@ public static void deserializeCollection(final JsonReader reader, final Collecti
 
 	@SuppressWarnings("unchecked")
 	public static ArrayList<UUID> deserializeNullableCollection(final JsonReader reader) throws IOException {
-		return reader.deserializeNullableCollection(READER);
+		return reader.deserializeNullableCollectionCustom(READER);
 	}
 
 	public static void deserializeNullableCollection(final JsonReader reader, final Collection<UUID> res) throws IOException {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2555,7 +2555,7 @@ private Spanned formatAddresses(Address[] addresses, boolean full, int max) {
                         }
                     } else {
                         boolean homoPersonal = TextHelper.isSingleScript(personal);
-                        if (BuildConfig.DEBUG && !homoPersonal)
+                        if (debug && !homoPersonal)
                             personal = TextHelper.getNonLatinCodepoints(personal);
                         ssb.append(personal);
                         if (!homoPersonal) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6185,7 +6185,7 @@ private void onActionMore(TupleMessageEx message) {
 
             boolean experiments = prefs.getBoolean("experiments", false);
 
-            PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, powner, ibMore);
+            PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, powner, ibMore == null ? view : ibMore);
             popupMenu.inflate(R.menu.popup_message_more);
 
             popupMenu.getMenu().findItem(R.id.menu_unseen)

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -891,6 +891,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         identity.display + " " + identity.email +
                                         (identity.self ? "" : " !self") +
                                         " [" + (identity.provider == null ? "" : identity.provider) +
+                                        ":" + identity.user +
                                         ":" + ServiceAuthenticator.getAuthTypeName(identity.auth_type) + "]" +
                                         (TextUtils.isEmpty(identity.sender_extra_regex) ? "" : " regex=" + identity.sender_extra_regex) +
                                         (!identity.sender_extra ? "" : " edit" +

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -791,6 +791,7 @@ protected EntityFolder onExecute(Context context, Bundle args) throws Throwable
                 protected void onExecuted(Bundle args, EntityFolder inbox) {
                     FragmentBase fragment = new FragmentMessages();
                     if (inbox != null) {
+                        args.putString("type", inbox.type);
                         args.putLong("account", inbox.account);
                         args.putLong("folder", inbox.id);
                     }

File: app/src/play/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -680,6 +680,9 @@ private static String getBillingResponseText(BillingResult result) {
                 // User pressed back or canceled a dialog
                 return "USER_CANCELED";
 
+            case BillingClient.BillingResponseCode.NETWORK_ERROR:
+                return "NETWORK_ERROR";
+
             default:
                 return Integer.toString(result.getResponseCode());
         }

File: app/src/fdroid/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -176,7 +176,7 @@ static boolean isTesting(Context context) {
                 prefs.getBoolean("test_iab", false));
     }
 
-    private static String getChallenge(Context context) throws NoSuchAlgorithmException {
+    static String getChallenge(Context context) throws NoSuchAlgorithmException {
         String android_id = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
         if (android_id == null) {
             Log.e("Android ID empty");

File: app/src/main/java/eu/faircode/email/FragmentDialogOpenLink.java
Patch:
@@ -76,6 +76,7 @@
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import androidx.preference.PreferenceManager;
 
+import java.io.IOException;
 import java.net.IDN;
 import java.net.InetAddress;
 import java.net.UnknownHostException;
@@ -468,7 +469,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                         Uri uri = args.getParcelable("uri");
                         String host = UriHelper.getRootDomain(context, UriHelper.getHost(uri));
                         if (TextUtils.isEmpty(host))
-                            throw new UnknownHostException("Host unknown " + uri);
+                            throw new UnknownHostException("No root domain " + uri);
                         args.putString("host", host);
                         return Whois.get(host);
                     }
@@ -501,7 +502,7 @@ public void onClick(View v) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Log.unexpectedError(getParentFragmentManager(), ex);
+                        Log.unexpectedError(getParentFragmentManager(), ex, !(ex instanceof IOException));
                     }
                 }.execute(FragmentDialogOpenLink.this, args, "link:whois");
             }

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -464,8 +464,7 @@ private void processOperations(List<EntityOperation> ops) {
                         Log.e(outbox.name, ex);
                         EntityLog.log(this, "Send " + Log.formatThrowable(ex, false));
 
-                        boolean unrecoverable = (op.tries > RETRY_MAX ||
-                                ex instanceof OutOfMemoryError ||
+                        boolean unrecoverable = (ex instanceof OutOfMemoryError ||
                                 ex instanceof MessageRemovedException ||
                                 ex instanceof FileNotFoundException ||
                                 (ex instanceof AuthenticationFailedException && !ConnectionHelper.isIoError(ex)) ||
@@ -525,7 +524,7 @@ private void processOperations(List<EntityOperation> ops) {
                             }
                         }
 
-                        if (unrecoverable) {
+                        if (op.tries >= RETRY_MAX || unrecoverable) {
                             Log.w("Unrecoverable");
                             db.operation().deleteOperation(op.id);
                             ops.remove(op);

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -243,6 +243,7 @@ public void set(@NonNull List<TupleFolderUnified> folders, boolean expanded) {
                     f.folders += type.folders;
                     f.messages += type.messages;
                     f.unseen += type.unseen;
+                    f.unexposed += type.unexposed;
 
                     if (Objects.equals(f.color, type.color) ||
                             (f.color == null && f.folders == type.folders)) {
@@ -256,6 +257,7 @@ public void set(@NonNull List<TupleFolderUnified> folders, boolean expanded) {
                 unified.folders += type.folders;
                 unified.messages += type.messages;
                 unified.unseen += type.unseen;
+                unified.unexposed = type.unexposed;
 
                 if (Objects.equals(unified.color, type.color) ||
                         (unified.color == null && unified.folders == type.folders)) {

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -87,7 +87,9 @@ public boolean equals(Object obj) {
                     this.unseen == other.unseen &&
                     this.unexposed == other.unexposed &&
                     this.flagged == other.flagged &&
-                    this.executing == other.executing);
+                    this.executing == other.executing &&
+                    this.indentation == other.indentation &&
+                    this.childs_unseen == other.childs_unseen);
         } else
             return false;
     }

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -76,6 +76,7 @@ public interface DaoAccount {
             " LEFT JOIN folder AS drafts ON drafts.account = account.id AND drafts.type = '" + EntityFolder.DRAFTS + "'" +
             " LEFT JOIN folder AS sent ON sent.account = account.id AND sent.type = '" + EntityFolder.SENT + "'" +
             " WHERE (:settings OR account.synchronize)" +
+            " GROUP BY account.id" +
 
             " UNION " +
 

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -594,7 +594,7 @@ private void connect(
                 throw new AuthenticationFailedException(context.getString(R.string.title_service_error10), ex);
 
             if (ConnectionHelper.isAborted(ex))
-                throw new MessagingException("The server or network actively aborted the connection", ex);
+                throw new MessagingException(context.getString(R.string.title_service_abort), ex);
 
             if (purpose == PURPOSE_CHECK) {
                 if (port == 995 && !("pop3".equals(protocol) || "pop3s".equals(protocol)))

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -95,7 +95,7 @@ public void onCreate(Bundle savedInstanceState) {
         cards = prefs.getBoolean("cards", true);
         dividers = prefs.getBoolean("dividers", true);
         compact = prefs.getBoolean("compact_accounts", false) && !settings;
-        show_folders = prefs.getBoolean("folders_accounts", true) && !settings;
+        show_folders = prefs.getBoolean("folders_accounts", false) && !settings;
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -6726,7 +6726,9 @@ protected EntityMessage onExecute(final Context context, Bundle args) throws Thr
                         StrikethroughExtension.create()));
                 Parser parser = Parser.builder(options).build();
                 HtmlRenderer renderer = HtmlRenderer.builder(options).build();
-                String html = renderer.render(parser.parse(spanned.toString()));
+
+                String text = spanned.toString().replace('\u00a0', ' ');
+                String html = renderer.render(parser.parse(text));
 
                 Document doc = JsoupEx.parse(html);
                 doc.body().attr("markdown", Boolean.toString(markdown));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6772,7 +6772,7 @@ protected List<EntityMessage> onExecute(Context context, Bundle args) {
                             for (EntityMessage m : db.message().getMessagesByMsgId(message.account, ref))
                                 map.put(m.msgid, m);
 
-                    return new ArrayList(map.values());
+                    return new ArrayList<>(map.values());
                 }
 
                 @Override
@@ -7466,7 +7466,7 @@ private void onMenuShowHeaders(TupleMessageEx message) {
                 new SimpleTask<Void>() {
                     @Override
                     protected Void onExecute(Context context, Bundle args) {
-                        Long id = args.getLong("id");
+                        long id = args.getLong("id");
 
                         DB db = DB.getInstance(context);
                         try {

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -2218,7 +2218,7 @@ static DateFormat getDateInstance(Context context) {
         return getDateInstance(context, SimpleDateFormat.MEDIUM);
     }
 
-    private static DateFormat getDateInstance(Context context, int style) {
+    static DateFormat getDateInstance(Context context, int style) {
         return SimpleDateFormat.getDateInstance(style);
     }
 
@@ -2240,7 +2240,7 @@ static DateFormat getDateTimeInstance(Context context, int dateStyle, int timeSt
         return SimpleDateFormat.getDateTimeInstance(dateStyle, timeStyle);
     }
 
-    private static String getTimePattern(Context context, int style) {
+    static String getTimePattern(Context context, int style) {
         // https://issuetracker.google.com/issues/37054851
         boolean is24Hour = android.text.format.DateFormat.is24HourFormat(context);
         String skeleton = (is24Hour ? "Hm" : "hm");

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -5499,7 +5499,7 @@ static Address[] removeGroups(Address[] addresses) {
             result.add(address);
         }
 
-        return (result.size() == 0 ? null : result.toArray(new Address[0]));
+        return result.toArray(new Address[0]);
     }
 
     static void getStructure(Part part, SpannableStringBuilder ssb, int level, int textColorLink) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1448,7 +1448,7 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
                     else {
                         String email = ((InternetAddress) a[0]).getAddress();
                         String domain = UriHelper.getEmailDomain(email);
-                        String tld = UriHelper.getTld(context, domain);
+                        String tld = (domain == null ? "" : UriHelper.getTld(context, domain));
                         int resid = context.getResources().getIdentifier(
                                 "flag_" + tld, "drawable", context.getPackageName());
                         Drawable d = (resid > 0 ? context.getDrawable(resid) : null);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6361,7 +6361,8 @@ private void onActionShowInfra(TupleMessageEx message) {
 
         private boolean onOpenLink(Uri uri, String title, boolean always_confirm) {
             Log.i("Opening uri=" + uri + " title=" + title + " always confirm=" + always_confirm);
-            uri = Uri.parse(uri.toString().trim().replaceAll("\\s+", "+"));
+            if (UriHelper.isHyperLink(uri))
+                uri = Uri.parse(uri.toString().trim().replaceAll("\\s+", "+"));
 
             if (ProtectedContent.isProtectedContent(uri)) {
                 Bundle args = new Bundle();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1792,7 +1792,7 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
         }
 
         // https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxomsg/9e994fbb-b839-495f-84e3-2c8c02c7dd9b
-        if (BuildConfig.DEBUG)
+        if (BuildConfig.DEBUG && false)
             try {
                 String tindex = imessage.getHeader("Thread-Index", null);
                 if (tindex != null) {
@@ -1880,7 +1880,7 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
                 }
         }
 
-        if (thread == null && !TextUtils.isEmpty(BuildConfig.DEV_DOMAIN)) {
+        if (thread == null && !TextUtils.isEmpty(BuildConfig.DEV_DOMAIN) && false) {
             String awsses = imessage.getHeader("X-SES-Outgoing", null);
             if (!TextUtils.isEmpty(awsses)) {
                 Address[] froms = getFrom();

File: app/src/main/java/eu/faircode/email/FragmentDialogSync.java
Patch:
@@ -58,7 +58,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         } else
             tvFolder.setText(name);
 
-        etMonths.setText("12");
+        etMonths.setText("3");
 
         tvRemark.setOnClickListener(new View.OnClickListener() {
             @Override

File: app/src/main/java/eu/faircode/email/DnsHelper.java
Patch:
@@ -260,9 +260,7 @@ private static DnsRecord[] _lookup(Context context, String name, String type, in
                 } else if (answer instanceof AAAA) {
                     AAAA aaaa = (AAAA) answer;
                     result.add(new DnsRecord(aaaa.getInetAddress()));
-                } else
-                    throw new IllegalArgumentException(answer.getClass().getName());
-
+                }
             }
         }
 

File: app/src/main/java/eu/faircode/email/DnsHelper.java
Patch:
@@ -372,7 +372,7 @@ public void close() throws SecurityException {
         }
     }
 
-    private static List<String> getDnsServers(Context context) {
+    static List<String> getDnsServers(Context context) {
         List<String> result = new ArrayList<>(_getDnsServers(context));
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/eu/faircode/email/ActivityError.java
Patch:
@@ -182,9 +182,6 @@ public void onClick(View view) {
             public void onClick(View v) {
                 StringBuilder sb = new StringBuilder();
 
-                sb.append(title)
-                        .append("\n");
-
                 sb.append("auth_type=")
                         .append(ServiceAuthenticator.getAuthTypeName(auth_type))
                         .append("\n");
@@ -199,6 +196,9 @@ public void onClick(View v) {
                             .append(provider)
                             .append("\n");
 
+                if (!TextUtils.isEmpty(message))
+                    sb.append(Helper.limit(message, 384));
+
                 Uri uri = Helper.getSupportUri(v.getContext(), "Sync:error")
                         .buildUpon()
                         .appendQueryParameter("message", sb.toString())

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -337,7 +337,8 @@ protected void onException(Bundle args, Throwable ex) {
                                 public void onClick(DialogInterface dialog, int which) {
                                     Uri uri = Helper.getSupportUri(ActivityMain.this, "Main:error")
                                             .buildUpon()
-                                            .appendQueryParameter("message", Log.formatThrowable(ex, false))
+                                            .appendQueryParameter("message",
+                                                    Helper.limit(Log.formatThrowable(ex, false), 384))
                                             .build();
                                     Helper.view(ActivityMain.this, uri, true);
                                 }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1867,7 +1867,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             if (!TextUtils.isEmpty(message))
                                 uri = uri
                                         .buildUpon()
-                                        .appendQueryParameter("message", "Unexpected: " + message)
+                                        .appendQueryParameter("message", Helper.limit(message, 384))
                                         .build();
                             Helper.view(context, uri, true);
                         }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -7309,7 +7309,7 @@ public void delegate() {
                         checkMx(acc, context);
                         checkMx(abcc, context);
                     } catch (UnknownHostException ex) {
-                        args.putString("mx_error", ex.getMessage());
+                        args.putString("mx_error", context.getString(R.string.title_no_server, ex.getMessage()));
                     }
                 } catch (Throwable ignored) {
                 }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -8042,8 +8042,8 @@ private class ToolData {
         this.attachments_alt = prefs.getBoolean("attachments_alt", false);
         this.thumbnails = prefs.getBoolean("thumbnails", true);
         this.pdf_preview = prefs.getBoolean("pdf_preview", true);
-        this.video_preview = prefs.getBoolean("video_preview", false);
-        this.audio_preview = prefs.getBoolean("audio_preview", false);
+        this.video_preview = prefs.getBoolean("video_preview", true);
+        this.audio_preview = prefs.getBoolean("audio_preview", true);
         this.contrast = prefs.getBoolean("contrast", false);
         this.hyphenation = prefs.getBoolean("hyphenation", false);
         this.display_font = prefs.getString("display_font", "");

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1691,9 +1691,9 @@ private void setOptions() {
             swThumbnails.setChecked(prefs.getBoolean("thumbnails", true));
             swPdfPreview.setChecked(prefs.getBoolean("pdf_preview", true));
             swPdfPreview.setEnabled(swThumbnails.isChecked());
-            swVideoPreview.setChecked(prefs.getBoolean("video_preview", false));
+            swVideoPreview.setChecked(prefs.getBoolean("video_preview", true));
             swVideoPreview.setEnabled(swThumbnails.isChecked());
-            swAudioPreview.setChecked(prefs.getBoolean("audio_preview", false));
+            swAudioPreview.setChecked(prefs.getBoolean("audio_preview", true));
             swAudioPreview.setEnabled(swThumbnails.isChecked());
 
             swListCount.setChecked(prefs.getBoolean("list_count", false));

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1004,7 +1004,8 @@ private View getView(View view, RecyclerView parent, int pos) {
                         year0--;
                     int day0 = cal0.get(date_week ? Calendar.WEEK_OF_YEAR : Calendar.DAY_OF_YEAR);
                     int day1 = cal1.get(date_week ? Calendar.WEEK_OF_YEAR : Calendar.DAY_OF_YEAR);
-                    if (year0 == year1 && day0 == day1)
+                    if (year0 == year1 && day0 == day1 &&
+                            !EntityMessage.PRIORITIY_HIGH.equals(prev.importance))
                         dh = false;
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1412,7 +1412,7 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
                 ivImportance.setVisibility(View.VISIBLE);
             } else if (EntityMessage.PRIORITIY_LOW.equals(message.ui_importance)) {
                 ivImportance.setImageLevel(message.ui_importance);
-                ivImportance.setImageTintList(null);
+                ivImportance.setImageTintList(ColorStateList.valueOf(colorControlNormal));
                 ivImportance.setVisibility(View.VISIBLE);
             } else
                 ivImportance.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/AppCompatViewInflaterEx.java
Patch:
@@ -90,6 +90,9 @@ protected View createView(Context context, String name, AttributeSet attrs) {
         if ("FrameLayout".equals(name))
             return new FixedFrameLayout(context, attrs);
 
+        if ("ScrollView".equals(name))
+            return new FixedScrollView(context, attrs);
+
         if ("View".equals(name))
             return new FixedView(context, attrs);
 

File: app/src/main/java/eu/faircode/email/FixedRecyclerView.java
Patch:
@@ -211,7 +211,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
         }
     }
 
-    private Map<Runnable, Runnable> mapRunnable = new WeakHashMap<>();
+    private final Map<Runnable, Runnable> mapRunnable = new WeakHashMap<>();
 
     @Override
     public boolean post(Runnable action) {

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -500,7 +500,7 @@ protected Void onExecute(Context context, Bundle args) {
                     if (reload == null)
                         ServiceSynchronize.eval(context, "attachment");
                     else
-                        ServiceSynchronize.reload(context, reload, true, "attachment");
+                        ServiceSynchronize.reload(context, reload, false, "attachment");
 
                     return null;
                 }

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -295,7 +295,7 @@ protected Void onExecute(Context context, Bundle args) {
                             if (reload == null)
                                 ServiceSynchronize.eval(context, "image");
                             else
-                                ServiceSynchronize.reload(context, reload, true, "image");
+                                ServiceSynchronize.reload(context, reload, false, "image");
 
                             return null;
                         }

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -516,7 +516,7 @@ protected Void onExecute(Context context, Bundle args) {
                 }
 
                 if (force || reload)
-                    ServiceSynchronize.reload(context, null, true, "refresh");
+                    ServiceSynchronize.reload(context, null, force, "refresh");
                 else
                     ServiceSynchronize.eval(context, "refresh");
 

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -600,7 +600,7 @@ protected Void onExecute(Context context, Bundle args) {
                 }
 
                 if (force || reload)
-                    ServiceSynchronize.reload(context, null, true, "refresh");
+                    ServiceSynchronize.reload(context, null, force, "refresh");
                 else
                     ServiceSynchronize.eval(context, "refresh");
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2386,7 +2386,7 @@ protected Void onExecute(Context context, Bundle args) {
                 }
 
                 if (force || reload)
-                    ServiceSynchronize.reload(context, null, true, "refresh");
+                    ServiceSynchronize.reload(context, null, force, "refresh");
                 else
                     ServiceSynchronize.eval(context, "refresh");
 
@@ -7660,7 +7660,7 @@ protected Void onExecute(Context context, Bundle args) {
                 if (reload == null)
                     ServiceSynchronize.eval(context, "expand");
                 else
-                    ServiceSynchronize.reload(context, reload, true, "expand");
+                    ServiceSynchronize.reload(context, reload, false, "expand");
 
                 return null;
             }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -8089,13 +8089,14 @@ public boolean areContentsTheSame(
                     same = false;
                     log("uid changed", next.id);
 
-                    if (prev.uid == null && next.uid != null) { // once only
+                    if (prev.uid == null && next.uid != null && // once only
+                            properties.getValue("expanded", next.id)) {
                         // Mark seen when needed
                         if (!Boolean.TRUE.equals(next.ui_seen) && next.accountAutoSeen)
                             EntityOperation.queue(context, next, EntityOperation.SEEN, true);
 
                         // Download body when needed
-                        if (!next.content && properties.getValue("expanded", next.id))
+                        if (!next.content)
                             EntityOperation.queue(context, next, EntityOperation.BODY);
                     }
                 }

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -523,7 +523,7 @@ boolean matches(Context context, EntityMessage message, List<Header> headers, St
 
                 if (cal_start.getTimeInMillis() > cal_end.getTimeInMillis())
                     if (all)
-                        cal_end.add(Calendar.DATE, 1);
+                        cal_start.add(Calendar.DATE, -1);
                     else
                         cal_start.add(Calendar.HOUR_OF_DAY, -7 * 24);
 

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -258,7 +258,7 @@ static void cleanup(Context context, boolean manual) {
             // Cleanup attachment files
             {
                 Log.breadcrumb("worker", "cleanup", "attachment files");
-                File[] attachments = new File(EntityAttachment.getRoot(context), "attachments").listFiles();
+                File[] attachments = EntityAttachment.getRoot(context).listFiles();
                 if (attachments != null)
                     for (File file : attachments)
                         if (manual || file.lastModified() + KEEP_FILES_DURATION < now)

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -125,6 +125,7 @@ public class FragmentOptionsConnection extends FragmentBase implements SharedPre
 
     private Group grpValidated;
     private Group grpCustomDns;
+    private Group grpBC;
     private Group grpCustomSsl;
 
     private final static List<String> RESET_OPTIONS = Collections.unmodifiableList(Arrays.asList(
@@ -196,6 +197,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         grpValidated = view.findViewById(R.id.grpValidated);
         grpCustomDns = view.findViewById(R.id.grpCustomDns);
+        grpBC = view.findViewById(R.id.grpBC);
         grpCustomSsl = view.findViewById(R.id.grpCustomSsl);
 
         setOptions();
@@ -645,6 +647,7 @@ protected void onException(Bundle args, Throwable ex) {
         tvNetworkMetered.setVisibility(View.GONE);
         tvNetworkRoaming.setVisibility(View.GONE);
         grpCustomDns.setVisibility(debug || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
+        grpBC.setVisibility(debug || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         grpCustomSsl.setVisibility(SSLHelper.customTrustManager() ? View.VISIBLE : View.GONE);
         cardDebug.setVisibility(View.GONE);
 

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -326,7 +326,7 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append(String.format("Manufacturer: %s\r\n", Build.MANUFACTURER));
         sb.append(String.format("Model: %s\r\n", Build.MODEL));
         sb.append(String.format("Product: %s\r\n", Build.PRODUCT));
-        sb.append(String.format("Device: %s\r\n", Build.DEVICE));
+        sb.append(String.format("Device: %s Arc: %b\r\n", Build.DEVICE, Helper.isArc()));
         sb.append(String.format("Host: %s\r\n", Build.HOST));
         sb.append(String.format("Time: %s\r\n", new Date(Build.TIME).toString()));
         sb.append(String.format("Display: %s\r\n", Build.DISPLAY));

File: app/src/main/java/eu/faircode/email/ContactInfo.java
Patch:
@@ -976,7 +976,7 @@ static void init(final Context context) {
             ContentObserver observer = new ContentObserver(ApplicationEx.getMainHandler()) {
                 @Override
                 public void onChange(boolean selfChange, Uri uri) {
-                    Log.i("Contact changed uri=" + uri);
+                    EntityLog.log(context, EntityLog.Type.Notification, "Contact changed uri=" + uri);
                     Helper.getSerialExecutor().submit(new Runnable() {
                         @Override
                         public void run() {
@@ -1003,7 +1003,7 @@ public void run() {
 
             try {
                 Uri uri = ContactsContract.CommonDataKinds.Email.CONTENT_URI;
-                Log.i("Observing uri=" + uri);
+                EntityLog.log(context, EntityLog.Type.Notification, "Observing uri=" + uri);
                 context.getContentResolver().registerContentObserver(uri, true, observer);
             } catch (SecurityException ex) {
                 Log.w(ex);

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -803,7 +803,9 @@ else if (ACTION_MANAGE_CERTIFICATES.equals(action))
                 else if (ACTION_IMPORT_CERTIFICATE.equals(action))
                     onImportCertificate(intent);
                 else if (ACTION_SETUP_REORDER.equals(action))
-                    onMenuOrder(R.string.title_setup_reorder_accounts, intent.getStringExtra("className"));
+                    onMenuOrder(
+                            intent.getIntExtra("title", -1),
+                            intent.getStringExtra("className"));
                 else if (ACTION_SETUP_MORE.equals(action))
                     onSetupMore(intent);
             }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -778,6 +778,7 @@ public void onClick(View v) {
             public void onClick(View v) {
                 LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(v.getContext());
                 lbm.sendBroadcast(new Intent(ActivitySetup.ACTION_SETUP_REORDER)
+                        .putExtra("title", R.string.title_setup_reorder_accounts)
                         .putExtra("className", EntityAccount.class.getName()));
             }
         });
@@ -787,6 +788,7 @@ public void onClick(View v) {
             public void onClick(View v) {
                 LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(v.getContext());
                 lbm.sendBroadcast(new Intent(ActivitySetup.ACTION_SETUP_REORDER)
+                        .putExtra("title", R.string.title_setup_reorder_folders)
                         .putExtra("className", TupleFolderSort.class.getName()));
             }
         });

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2060,7 +2060,9 @@ public void onActivityResult(int requestCode, int resultCode, @Nullable Intent d
 
     @Override
     public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
-        if (!RESET_OPTIONS.contains(key))
+        if (!RESET_OPTIONS.contains(key) &&
+                !"last_cleanup".equals(key) &&
+                !"last_daily".equals(key))
             return;
 
         if ("last_cleanup".equals(key))

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -638,7 +638,9 @@ public void onDestroyView() {
 
     @Override
     public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
-        if (!RESET_OPTIONS.contains(key))
+        if (!RESET_OPTIONS.contains(key) &&
+                !"adguard_last".equals(key) &&
+                !"disconnect_last".equals(key))
             return;
 
         getMainHandler().removeCallbacks(update);

File: app/src/main/java/eu/faircode/email/ActivityDMARC.java
Patch:
@@ -154,7 +154,7 @@ protected void onException(Bundle args, @NonNull Throwable ex) {
                 if (ex instanceof NoStreamException)
                     ((NoStreamException) ex).report(ActivityDMARC.this);
                 else
-                    Log.unexpectedError(getSupportFragmentManager(), ex);
+                    Log.unexpectedError(getSupportFragmentManager(), ex, !(ex instanceof XmlPullParserException));
                 grpReady.setVisibility(View.VISIBLE);
             }
         }.execute(this, args, "dmarc:decode");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6118,7 +6118,7 @@ private void onActionMore(TupleMessageEx message) {
 
             popupMenu.getMenu().findItem(R.id.menu_unseen)
                     .setTitle(message.ui_seen ? R.string.title_unseen : R.string.title_seen)
-                    .setIcon(message.ui_seen ? R.drawable.twotone_drafts_24 : R.drawable.twotone_mail_24)
+                    .setIcon(message.ui_seen ? R.drawable.twotone_mail_24 : R.drawable.twotone_drafts_24)
                     .setEnabled(message.uid != null ||
                             message.accountProtocol != EntityAccount.TYPE_IMAP);
 

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -464,9 +464,8 @@ public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
         if ("eula".equals(key)) {
             boolean eula = prefs.getBoolean(key, false);
             if (eula) {
-                // recreate is done without animation
-                finish();
-                startActivity(getIntent());
+                // recreate is done without animation, unfortunately
+                recreate();
             }
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -369,6 +369,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
             }
         });
 
+        swDnsSecure.setVisibility(debug || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         swDnsSecure.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton buttonView, boolean checked) {

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -535,6 +535,7 @@ public void onOpen(@NonNull SupportSQLiteDatabase db) {
                                 at androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper.getWritableDatabase(FrameworkSQLiteOpenHelper.kt:104)
                                 at androidx.room.RoomDatabase.inTransaction(RoomDatabase.java:706)
                              */
+                            Log.forceCrashReporting();
                             Log.e(ex);
                             // FrameworkSQLiteOpenHelper.innerGetDatabase will delete the database
                             throw ex;

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -1065,7 +1065,7 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                     Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
                     while (interfaces != null && interfaces.hasMoreElements()) {
                         NetworkInterface ni = interfaces.nextElement();
-                        size += write(os, "Interface=" + ni + "\r\n");
+                        size += write(os, "Interface=" + ni + " up=" + ni.isUp() + "\r\n");
                         for (InterfaceAddress iaddr : ni.getInterfaceAddresses()) {
                             InetAddress addr = iaddr.getAddress();
                             size += write(os, " addr=" + addr +

File: app/src/main/java/eu/faircode/email/DnsHelper.java
Patch:
@@ -81,7 +81,9 @@ static void checkMx(Context context, Address[] addresses) throws UnknownHostExce
             String domain = UriHelper.getEmailDomain(email);
             if (domain == null)
                 continue;
-            lookup(context, domain, "mx", CHECK_TIMEOUT, MAX_FOLLOW, false);
+            DnsRecord[] records = lookup(context, domain, "mx", CHECK_TIMEOUT, MAX_FOLLOW, false);
+            if (records.length == 0)
+                throw new UnknownHostException(domain);
         }
     }
 

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -1036,8 +1036,6 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                         "\r\n");
                 size += write(os, "   caps=" + c + "\r\n");
                 size += write(os, "   props=" + p + "\r\n\r\n");
-                size += write(os, "   private DNS=" +
-                        (p == null ? null : p.isPrivateDnsActive() + " (" + p.getPrivateDnsServerName() + ")") + "\r\n");
 
                 for (Network network : cm.getAllNetworks()) {
                     size += write(os, (network.equals(active) ? "active=" : "network=") + network + "\r\n");
@@ -1096,6 +1094,9 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                 size += write(os, "VPN active=" + ConnectionHelper.vpnActive(context) + "\r\n");
                 size += write(os, "Data saving=" + ConnectionHelper.isDataSaving(context) + "\r\n");
                 size += write(os, "Airplane=" + ConnectionHelper.airplaneMode(context) + "\r\n");
+                size += write(os, "Private" +
+                        " DNS=" + ConnectionHelper.isPrivateDnsActive(context) +
+                        " server=" + ConnectionHelper.getPrivateDnsServerName(context) + "\r\n");
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                     size += write(os, "Cleartext permitted= " +
                             NetworkSecurityPolicy.getInstance().isCleartextTrafficPermitted() + "\r\n");

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -1036,6 +1036,8 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                         "\r\n");
                 size += write(os, "   caps=" + c + "\r\n");
                 size += write(os, "   props=" + p + "\r\n\r\n");
+                size += write(os, "   private DNS=" +
+                        (p == null ? null : p.isPrivateDnsActive() + " (" + p.getPrivateDnsServerName() + ")") + "\r\n");
 
                 for (Network network : cm.getAllNetworks()) {
                     size += write(os, (network.equals(active) ? "active=" : "network=") + network + "\r\n");

File: app/src/main/java/com/bugsnag/android/Event.java
Patch:
@@ -10,6 +10,7 @@
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
+import java.util.regex.Pattern;
 
 /**
  * An Event object represents a Throwable captured by Bugsnag and is available as a parameter on
@@ -418,7 +419,7 @@ EventInternal getImpl() {
         return impl;
     }
 
-    void setRedactedKeys(Collection<String> redactedKeys) {
+    void setRedactedKeys(Collection<Pattern> redactedKeys) {
         impl.setRedactedKeys(redactedKeys);
     }
 

File: app/src/main/java/com/bugsnag/android/InternalReportDelegate.java
Patch:
@@ -82,7 +82,7 @@ public void onErrorIOFailure(Exception exc, File errorFile, String context) {
     void recordStorageCacheBehavior(Event event) {
         if (storageManager != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             File cacheDir = appContext.getCacheDir();
-            File errDir = new File(cacheDir, "bugsnag-errors");
+            File errDir = new File(cacheDir, "bugsnag/errors");
 
             try {
                 boolean tombstone = storageManager.isCacheBehaviorTombstone(errDir);

File: app/src/main/java/com/bugsnag/android/SeverityReason.java
Patch:
@@ -64,6 +64,7 @@ static SeverityReason newInstance(@SeverityReasonType String reason,
         switch (reason) {
             case REASON_UNHANDLED_EXCEPTION:
             case REASON_PROMISE_REJECTION:
+            case REASON_SIGNAL:
             case REASON_ANR:
                 return new SeverityReason(reason, ERROR, true, true, null, null);
             case REASON_STRICT_MODE:

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -2308,7 +2308,7 @@ static String formatDuration(long ms) {
         return (sign < 0 ? "-" : "") +
                 (days > 0 ? days + " " : "") +
                 DateUtils.formatElapsedTime(seconds) +
-                (ms == 0 ? "" : ". " + ms);
+                (ms == 0 ? "" : "." + ms);
     }
 
     static String formatNumber(Integer number, long max, NumberFormat nf) {

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -728,7 +728,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         "accounts=" + accounts.size() +
                         " folders=" + db.folder().countSync() + "/" + db.folder().countTotal() +
                         " messages=" + db.message().countTotal() +
-                        " rules=" + db.rule().countTotal() +
+                        " rules=" + db.rule().countTotal(null, null) +
                         " ops=" + db.operation().getOperationCount() +
                         " outbox=" + db.message().countOutbox() + "\r\n" +
                         "filter " + filters + " " + sorts +
@@ -830,6 +830,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 " ondemand=" + account.ondemand + (account.ondemand ? " !!!" : "") +
                                 " msgs=" + content + "/" + messages + " max=" + account.max_messages +
                                 " blocked=" + blocked + (blocked == 0 ? "" : " !!!") +
+                                " rules=" + db.rule().countTotal(account.id, null) +
                                 " ops=" + db.operation().getOperationCount(account.id) +
                                 " schedule=" + (!ignore_schedule) + (ignore_schedule ? " !!!" : "") +
                                 " unmetered=" + unmetered + (unmetered ? " !!!" : "") +
@@ -856,6 +857,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         " factor=" + folder.poll_factor +
                                         " days=" + getDays(folder.sync_days) + "/" + getDays(folder.keep_days) +
                                         " msgs=" + folder.content + "/" + folder.messages + "/" + folder.total +
+                                        " rules=" + db.rule().countTotal(account.id, folder.id) +
                                         " ops=" + db.operation().getOperationCount(folder.id, null) +
                                         " unseen=" + unseen + " hidden=" + hidden + " notifying=" + notifying +
                                         " " + folder.state +

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -181,7 +181,7 @@ public class MessageHelper {
     static final int MAX_SUBJECT_AGE = 48; // hours
     static final int DEFAULT_THREAD_RANGE = 7; // 2^7 = 128 days
     static final int MAX_UNZIP_COUNT = 20;
-    static final long MAX_UNZIP_SIZE = 1000 * 1000 * 1000L;
+    static final long MAX_UNZIP_SIZE = 10 * 1024 * 1024L;
 
     static final List<String> UNZIP_FORMATS = Collections.unmodifiableList(Arrays.asList(
             "zip", "gz", "tar.gz"

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1824,7 +1824,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         }
                     });
 
-            if (report)
+            if (report && DebugHelper.isAvailable())
                 builder.setNeutralButton(R.string.title_report, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {

File: app/src/main/java/eu/faircode/email/DebugHelper.java
Patch:
@@ -274,7 +274,7 @@ private static StringBuilder getAppInfo(Context context) {
         boolean reporting = prefs.getBoolean("crash_reports", false);
         if (reporting || BuildConfig.TEST_RELEASE) {
             String uuid = prefs.getString("uuid", null);
-            sb.append(String.format("UUID: %s\r\n", uuid == null ? "-" : uuid));
+            sb.append(String.format("Bugsnag UUID: %s\r\n", uuid == null ? "-" : uuid));
         }
 
         try {
@@ -355,8 +355,8 @@ private static StringBuilder getAppInfo(Context context) {
             }
         }
 
-        sb.append(String.format("Log main: %b protocol: %b build: %b test: %b\r\n",
-                main_log, protocol, BuildConfig.DEBUG, BuildConfig.TEST_RELEASE));
+        boolean log = (prefs.getInt("log_level", android.util.Log.WARN) <= android.util.Log.INFO);
+        sb.append(String.format("Log main: %b debug: %b protocol: %b\r\n", main_log, log, protocol));
 
         int[] contacts = ContactInfo.getStats();
         sb.append(String.format("Contact lookup: %d cached: %d\r\n",

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3031,7 +3031,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                     final int zoom = args.getInt("zoom");
                     final float scale = args.getFloat("scale");
                     final boolean download_plain = prefs.getBoolean("download_plain", false);
-                    final boolean json_ld = prefs.getBoolean("json_ld", !Helper.isPlayStoreInstall());
+                    final boolean json_ld = prefs.getBoolean("json_ld", false);
 
                     if (message == null || !message.content)
                         return null;

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2278,7 +2278,7 @@ private void setOptions() {
             swEasyCorrect.setChecked(prefs.getBoolean("easy_correct", false));
             swInfra.setChecked(prefs.getBoolean("infra", false));
             swTldFlags.setChecked(prefs.getBoolean("tld_flags", false));
-            swJsonLd.setChecked(prefs.getBoolean("json_ld", !Helper.isPlayStoreInstall()));
+            swJsonLd.setChecked(prefs.getBoolean("json_ld", false));
             swDupMsgId.setChecked(prefs.getBoolean("dup_msgids", false));
             swThreadByRef.setChecked(prefs.getBoolean("thread_byref", true));
             swMdn.setChecked(prefs.getBoolean("mdn", swExperiments.isChecked()));

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -151,7 +151,7 @@ public void uncaughtException(@NonNull Thread thread, @NonNull Throwable ex) {
 
                     if (BuildConfig.BETA_RELEASE ||
                             !Helper.isPlayStoreInstall())
-                        Log.writeCrashLog(ApplicationEx.this, ex);
+                        DebugHelper.writeCrashLog(ApplicationEx.this, ex);
 
                     if (prev != null)
                         prev.uncaughtException(thread, ex);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -304,9 +304,6 @@ public static int e(String msg) {
             try {
                 ThrowableWrapper ex = new ThrowableWrapper();
                 ex.setMessage(msg);
-                List<StackTraceElement> ss = new ArrayList<>(Arrays.asList(ex.getStackTrace()));
-                ss.remove(0);
-                ex.setStackTrace(ss.toArray(new StackTraceElement[0]));
                 Bugsnag.notify(ex, new OnErrorCallback() {
                     @Override
                     public boolean onError(@NonNull Event event) {

File: app/src/main/java/eu/faircode/email/ThrowableWrapper.java
Patch:
@@ -70,13 +70,13 @@ public String toSafeString() {
     @Nullable
     @Override
     public String getMessage() {
-        return ex.getMessage();
+        return getSafeMessage();
     }
 
     @Nullable
     @Override
     public String getLocalizedMessage() {
-        return ex.getLocalizedMessage();
+        return getSafeMessage();
     }
 
     @NonNull
@@ -94,6 +94,6 @@ public synchronized Throwable getCause() {
     @NonNull
     @Override
     public String toString() {
-        return ex.toString();
+        return toSafeString();
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -555,11 +555,12 @@ private void onHandleOAuth(@NonNull Intent data) {
             long expire = jauthstate.optLong(FAIREMAIL_EXPIRE, -1);
             jauthstate.remove(FAIREMAIL_RANDOM);
             prefs.edit().remove("oauth." + auth.state).apply();
+            long now = new Date().getTime();
 
             if (random != returnedRandom)
                 throw new SecurityException("random " + random + " <> " + returnedRandom);
-            if (expire < new Date().getTime())
-                throw new SecurityException("Session expired");
+            if (expire < now)
+                throw new SecurityException("Session expired " + new Date(expire) + " < " + new Date(now));
 
             final AuthState authState = AuthState.jsonDeserialize(jauthstate);
 

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -104,7 +104,7 @@ private void bindTo(TupleOperationEx operation) {
                 if (jarray.length() > 0)
                     sb.append(' ').append(operation.args);
             } catch (JSONException ex) {
-                sb.append(' ').append(ex.toString());
+                Log.e(ex);
             }
 
             String folderName =

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1742,7 +1742,7 @@ public void onClick(View v) {
                     for (String key : sSystemFontMap.keySet())
                         ssb.append(key).append("\n");
                 } catch (Throwable ex) {
-                    ssb.append(ex.toString());
+                    Log.e(ex);
                 }
 
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -189,7 +189,7 @@ else if (protocol_since + PROTOCOL_LOG_DURATION < now && !BuildConfig.TEST_RELEA
         this.log = prefs.getBoolean("protocol", false);
         this.ssl_harden = prefs.getBoolean("ssl_harden", false);
         this.ssl_harden_strict = prefs.getBoolean("ssl_harden_strict", false);
-        this.cert_strict = prefs.getBoolean("cert_strict", !BuildConfig.PLAY_STORE_RELEASE);
+        this.cert_strict = prefs.getBoolean("cert_strict", true);
 
         boolean auth_plain = prefs.getBoolean("auth_plain", true);
         boolean auth_login = prefs.getBoolean("auth_login", true);

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -658,7 +658,7 @@ private void setOptions() {
             swSslHarden.setChecked(prefs.getBoolean("ssl_harden", false));
             swSslHardenStrict.setChecked(prefs.getBoolean("ssl_harden_strict", false));
             swSslHardenStrict.setEnabled(swSslHarden.isChecked());
-            swCertStrict.setChecked(prefs.getBoolean("cert_strict", !BuildConfig.PLAY_STORE_RELEASE));
+            swCertStrict.setChecked(prefs.getBoolean("cert_strict", true));
             swOpenSafe.setChecked(prefs.getBoolean("open_safe", false));
             swBouncyCastle.setChecked(prefs.getBoolean("bouncy_castle", false));
             swFipsMode.setChecked(prefs.getBoolean("bc_fips", false));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2923,7 +2923,7 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                 boolean tcp_keep_alive = prefs.getBoolean("tcp_keep_alive", false);
                 boolean ssl_harden = prefs.getBoolean("ssl_harden", false);
                 boolean ssl_harden_strict = (ssl_harden && prefs.getBoolean("ssl_harden_strict", false));
-                boolean cert_strict = prefs.getBoolean("cert_strict", !BuildConfig.PLAY_STORE_RELEASE);
+                boolean cert_strict = prefs.getBoolean("cert_strict", true);
                 boolean open_safe = prefs.getBoolean("open_safe", false);
 
                 size += write(os, "timeout=" + timeout + "s" + (timeout == EmailService.DEFAULT_CONNECT_TIMEOUT ? "" : " !!!") + "\r\n");

File: app/src/main/java/biweekly/util/Duration.java
Patch:
@@ -88,8 +88,7 @@ public static Duration parse(String value) {
 		if (first == '-' || first == '+') {
 			index++;
 		}
-
-		if (value.charAt(index) != 'P') {
+		if (index >= value.length() || value.charAt(index) != 'P') {
 			throw parseError(value);
 		}
 

File: app/src/main/java/com/sun/mail/util/SocketFetcher.java
Patch:
@@ -312,7 +312,7 @@ private static Socket createSocket(InetAddress localaddr, int localport,
 	    } else {
 				SocketFactory f = (SocketFactory) props.get("fairemail.factory");
 				eu.faircode.email.Log.i("Using socket factory=" + f);
-				socket = (f == null ? new Socket() : f.createSocket());
+				socket = (f == null ? eu.faircode.email.ConnectionHelper.getSocket(host, port) : f.createSocket());
 	    }
 	}
 	if (to >= 0) {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -125,6 +125,8 @@ public void onCreate() {
                 " process=" + android.os.Process.myPid());
         Log.logMemory(this, "App");
 
+        ConnectionHelper.setupProxy(this);
+
         if (BuildConfig.DEBUG)
             UriHelper.test(this);
 

File: app/src/main/java/eu/faircode/email/Whois.java
Patch:
@@ -42,7 +42,7 @@ static String get(String domain, String host) throws IOException {
     }
 
     static String get(String domain, String host, int port) throws IOException {
-        Socket socket = new Socket();
+        Socket socket = ConnectionHelper.getSocket(host, port);
         socket.connect(new InetSocketAddress(host, port), WHOIS_TIMEOUT);
         try {
             byte[] request = (domain + "\r\n").getBytes(StandardCharsets.UTF_8);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2617,7 +2617,7 @@ private Address[] getAddressHeader(String name) throws MessagingException {
             String email = iaddress.getAddress();
             String personal = iaddress.getPersonal();
             if (!TextUtils.isEmpty(personal))
-                personal = personal.replace("\u00ad", ""); // soft hyphen
+                personal = personal.replace("\u00ad", BuildConfig.DEBUG ? "-" : ""); // soft hyphen
 
             if (TextUtils.isEmpty(email) && TextUtils.isEmpty(personal))
                 continue;
@@ -2854,7 +2854,7 @@ String getSubject() throws MessagingException {
                 .trim()
                 .replace("\n", "")
                 .replace("\r", "")
-                .replace("\u00ad", "");  // soft hyphen
+                .replace("\u00ad", BuildConfig.DEBUG ? "-" : "");  // soft hyphen
     }
 
     Long getSize() throws MessagingException {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -5515,6 +5515,7 @@ static NotificationCompat.Builder getNotificationError(Context context, String c
         intent.putExtra("account", account.id);
         intent.putExtra("protocol", account.protocol);
         intent.putExtra("auth_type", account.auth_type);
+        intent.putExtra("address", account.user);
         intent.putExtra("faq", 22);
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         PendingIntent pi = PendingIntentCompat.getActivity(

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -413,6 +413,7 @@ protected void onExecuted(Bundle args, EntityAccount account) {
                         intent.putExtra("account", account.id);
                         intent.putExtra("protocol", account.protocol);
                         intent.putExtra("auth_type", account.auth_type);
+                        intent.putExtra("address", account.user);
                         intent.putExtra("faq", 22);
                         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                         startActivity(intent);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1504,6 +1504,7 @@ private NotificationCompat.Builder getNotificationAlert(EntityAccount account, S
         intent.putExtra("account", account.id);
         intent.putExtra("protocol", account.protocol);
         intent.putExtra("auth_type", account.auth_type);
+        intent.putExtra("address", account.user);
         intent.putExtra("faq", 23);
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         PendingIntent piAlert = PendingIntentCompat.getActivity(

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3033,7 +3033,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                     final int zoom = args.getInt("zoom");
                     final float scale = args.getFloat("scale");
                     final boolean download_plain = prefs.getBoolean("download_plain", false);
-                    final boolean json_ld = prefs.getBoolean("json_ld", false);
+                    final boolean json_ld = prefs.getBoolean("json_ld", true);
 
                     if (message == null || !message.content)
                         return null;

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2374,7 +2374,7 @@ private void setOptions() {
             swEasyCorrect.setChecked(prefs.getBoolean("easy_correct", false));
             swInfra.setChecked(prefs.getBoolean("infra", false));
             swTldFlags.setChecked(prefs.getBoolean("tld_flags", false));
-            swJsonLd.setChecked(prefs.getBoolean("json_ld", false));
+            swJsonLd.setChecked(prefs.getBoolean("json_ld", true));
             swDupMsgId.setChecked(prefs.getBoolean("dup_msgids", false));
             swThreadByRef.setChecked(prefs.getBoolean("thread_byref", true));
             swMdn.setChecked(prefs.getBoolean("mdn", swExperiments.isChecked()));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1591,6 +1591,9 @@ private List<String> getReferences(String header) {
         header = MimeUtility.unfold(header);
         if (TextUtils.isEmpty(header))
             return result;
+        header = header
+                .replaceAll("<\\s*<", "<")
+                .replaceAll(">\\s*>", ">");
         for (String ref : header.split("[,\\s]+"))
             if (!result.contains(ref))
                 result.add(ref);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2179,10 +2179,11 @@ private static StringBuilder getAppInfo(Context context) {
         ActivityManager am = Helper.getSystemService(context, ActivityManager.class);
         ActivityManager.MemoryInfo mi = new ActivityManager.MemoryInfo();
         am.getMemoryInfo(mi);
-        sb.append(String.format("Memory class: %d/%d Large: %s MB Total: %s\r\n",
+        sb.append(String.format("Memory class: %d/%d Large: %s MB Total: %s Low: %b\r\n",
                 am.getMemoryClass(), am.getLargeMemoryClass(),
                 largeHeap == null ? "?" : Boolean.toString(largeHeap),
-                Helper.humanReadableByteCount(mi.totalMem)));
+                Helper.humanReadableByteCount(mi.totalMem),
+                am.isLowRamDevice()));
 
         long storage_available = Helper.getAvailableStorageSpace();
         long storage_total = Helper.getTotalStorageSpace();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -206,7 +206,7 @@ public class MessageHelper {
     private static final String ARC_MESSAGE_SIGNATURE = "ARC-Message-Signature";
 
     static final List<String> ARC_WHITELIST_DEFAULT = Collections.unmodifiableList(Arrays.asList(
-            "google.com", "microsoft.com"
+            "google.com", "microsoft.com", "amazonses.com"
     ));
 
     private static final String DOCTYPE = "<!DOCTYPE";

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1742,6 +1742,9 @@ public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {
                 p2 = p2.parent_ref;
             }
 
+            if (p1 != null || p2 != null)
+                return false;
+
             return true;
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentDialogJunk.java
Patch:
@@ -44,6 +44,7 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
 import androidx.constraintlayout.widget.Group;
+import androidx.core.widget.TextViewCompat;
 import androidx.fragment.app.FragmentTransaction;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import androidx.preference.PreferenceManager;
@@ -384,7 +385,7 @@ public void onClick(View v) {
             cbBlockDomain.setCompoundDrawablesRelativeWithIntrinsicBounds(0, 0, R.drawable.twotone_warning_24, 0);
             cbBlockDomain.setCompoundDrawablePadding(dp6);
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
-                cbBlockDomain.setCompoundDrawableTintList(ColorStateList.valueOf(colorWarning));
+                TextViewCompat.setCompoundDrawableTintList(cbBlockDomain, ColorStateList.valueOf(colorWarning));
         }
 
         ibMore.setImageLevel(1);

File: app/src/main/java/eu/faircode/email/FragmentMoveAsk.java
Patch:
@@ -38,6 +38,7 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
 import androidx.core.content.ContextCompat;
+import androidx.core.widget.TextViewCompat;
 import androidx.preference.PreferenceManager;
 
 import java.text.Collator;
@@ -120,9 +121,9 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             if (sourceColor != null)
-                tvSourceFolders.setCompoundDrawableTintList(ColorStateList.valueOf(sourceColor));
+                TextViewCompat.setCompoundDrawableTintList(tvSourceFolders, ColorStateList.valueOf(sourceColor));
             if (targetColor != null)
-                tvTargetFolders.setCompoundDrawableTintList(ColorStateList.valueOf(targetColor));
+                TextViewCompat.setCompoundDrawableTintList(tvTargetFolders, ColorStateList.valueOf(targetColor));
         }
 
         if (notagain != null)

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3181,7 +3181,7 @@ public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)
                         " folder=" + message.folderType);
 
                 if (EntityMessage.SWIPE_ACTION_ASK.equals(action)) {
-                    redraw(viewHolder);
+                    redraw(null);
                     onSwipeAsk(message, viewHolder);
                 } else if (EntityMessage.SWIPE_ACTION_SEEN.equals(action)) {
                     redraw(viewHolder);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -130,7 +130,6 @@
 import androidx.lifecycle.OnLifecycleEvent;
 import androidx.preference.PreferenceManager;
 import androidx.recyclerview.selection.SelectionTracker;
-import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager.widget.PagerAdapter;
 
@@ -1876,7 +1875,6 @@ static void clearViews(Object instance) {
                         SelectionTracker.SelectionPredicate.class.isAssignableFrom(type) ||
                         PagerAdapter.class.isAssignableFrom(type) ||
                         RecyclerView.Adapter.class.isAssignableFrom(type) ||
-                        ItemTouchHelper.class.isAssignableFrom(type) ||
                         TwoStateOwner.class.isAssignableFrom(type))
                     try {
                         Log.i("Clearing " + fname);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1422,6 +1422,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     for (EntityFolder folder : folders) {
                         EntityFolder existing = map.get(folder.name);
                         if (existing == null) {
+                            folder.id = null;
                             folder.account = account.id;
                             folder.setSpecials(account);
                             folder.id = db.folder().insertFolder(folder);

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -337,6 +337,9 @@ static void queue(Context context, EntityMessage message, String name, Object...
                                 EntityFolder.TRASH.equals(target.type) ||
                                 EntityFolder.JUNK.equals(target.type))) {
                     message.ui_snoozed = null;
+                    message.ui_ignored = true;
+                    db.message().setMessageSnoozed(message.id, null);
+                    db.message().setMessageUiIgnored(message.id, true);
                     EntityMessage.snooze(context, message.id, null);
                 }
 

File: app/src/main/java/eu/faircode/email/DeepL.java
Patch:
@@ -347,7 +347,7 @@ public static Integer[] getUsage(Context context) throws IOException, JSONExcept
     }
 
     private static String getBaseUri(String key) {
-        String domain = (key.endsWith(":fx") ? "api-free.deepl.com" : "api.deepl.com");
+        String domain = (key != null && key.endsWith(":fx") ? "api-free.deepl.com" : "api.deepl.com");
         return "https://" + domain + "/v2/";
     }
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1690,7 +1690,7 @@ static String getUiModeType(Context context) {
         try {
             UiModeManager uimm = Helper.getSystemService(context, UiModeManager.class);
             int uiModeType = uimm.getCurrentModeType();
-            switch (uiModeType) {
+            switch (uiModeType & Configuration.UI_MODE_TYPE_MASK) {
                 case Configuration.UI_MODE_TYPE_UNDEFINED:
                     return "undefined";
                 case Configuration.UI_MODE_TYPE_NORMAL:
@@ -1702,7 +1702,7 @@ static String getUiModeType(Context context) {
                 case Configuration.UI_MODE_TYPE_TELEVISION:
                     return "television";
                 case Configuration.UI_MODE_TYPE_APPLIANCE:
-                    return "applicance";
+                    return "appliance";
                 case Configuration.UI_MODE_TYPE_WATCH:
                     return "watch";
                 case Configuration.UI_MODE_TYPE_VR_HEADSET:

File: app/src/main/java/eu/faircode/email/Widget.java
Patch:
@@ -79,7 +79,7 @@ public void run() {
                     PendingIntent pi;
                     if (folders.size() == 1 || folder >= 0) {
                         Intent view = new Intent(context, ActivityView.class);
-                        view.setAction("folder:" + folders.get(0).id);
+                        view.setAction("folder:" + (folder < 0 ? folders.get(0).id : folder));
                         view.putExtra("account", account);
                         view.putExtra("type", folders.get(0).type);
                         view.putExtra("refresh", true);

File: app/src/main/java/eu/faircode/email/ActivityCode.java
Patch:
@@ -227,6 +227,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 
         menu.findItem(R.id.menu_lines).setChecked(lines);
         menu.findItem(R.id.menu_links).setChecked(links);
+        menu.findItem(R.id.menu_check_html).setVisible(BuildConfig.DEBUG || debug);
 
         return super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/eu/faircode/email/ActivityWidget.java
Patch:
@@ -268,7 +268,7 @@ public void onClick(View view) {
                 int pos = spFontSize.getSelectedItemPosition();
 
                 SharedPreferences.Editor editor = prefs.edit();
-                if (folder == null) {
+                if (folder == null || folder.id < 0) {
                     if (account != null && account.id > 0)
                         editor.putString("widget." + appWidgetId + ".name", account.name);
                     else

File: app/src/main/java/eu/faircode/email/LanguageTool.java
Patch:
@@ -449,7 +449,7 @@ static void applySuggestions(EditText etBody, int start, int end, List<Suggestio
                     continue;
                 } else
                     Log.i("LT text='" + edit.subSequence(s, e) + "' " + suggestion);
-                edit.setSpan(span, s, e, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+                edit.setSpan(span, s, e, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE | Spanned.SPAN_COMPOSING);
             }
     }
 

File: app/src/main/java/biweekly/Biweekly.java
Patch:
@@ -240,7 +240,7 @@ public final class Biweekly {
 	static {
 		InputStream in = null;
 		try {
-			in = Biweekly.class.getResourceAsStream("biweekly.properties");
+			in = Biweekly.class.getResourceAsStream("/biweekly/biweekly.properties");
 			Properties props = new Properties();
 			props.load(in);
 

File: app/src/main/java/biweekly/Messages.java
Patch:
@@ -39,7 +39,7 @@ public enum Messages {
 	private final transient ResourceBundle messages;
 
 	Messages() {
-		messages = ResourceBundle.getBundle("biweekly/messages");
+		messages = ResourceBundle.getBundle("biweekly.messages");
 	}
 
 	/**

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3881,7 +3881,7 @@ protected Object onExecute(Context context, Bundle args) throws Throwable {
 
                             boolean permission = Helper.hasPermission(context, Manifest.permission.WRITE_CALENDAR);
 
-                            if (permission && ical_tentative && account.calendar != null) {
+                            if (permission && !ical_tentative && account.calendar != null) {
                                 if (action == R.id.btnCalendarAccept)
                                     CalendarHelper.insert(context, icalendar, event,
                                             CalendarContract.Events.STATUS_CONFIRMED, account, message);

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -631,7 +631,7 @@ static void setBackground(Context context, View view, boolean compose) {
         boolean you = theme.startsWith("you_");
 
         if (cards) {
-            if (you && !black && Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE)
+            if (you && (!dark || !black) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE)
                 view.setBackgroundColor(ContextCompat.getColor(context, dark
                         ? android.R.color.system_background_dark
                         : android.R.color.system_background_light));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1259,7 +1259,7 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
                     (EntityFolder.isOutgoing(type) || viewType == ViewType.SEARCH)) ||
                     (viewType == ViewType.UNIFIED && type == null &&
                             message.folderUnified && outgoing) ||
-                    (viewType == ViewType.FOLDER && EntityFolder.INBOX.equals(type) &&
+                    (viewType == ViewType.FOLDER &&
                             message.folderUnified && outgoing) ||
                     EntityFolder.isOutgoing(message.folderInheritedType);
             String selector = (reverse ? null : message.bimi_selector);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -761,6 +761,9 @@ else if (version < 2069) {
         } else if (version < 2089) {
             if (!prefs.contains("auto_hide_answer"))
                 editor.putBoolean("auto_hide_answer", !Helper.isAccessibilityEnabled(context));
+        } else if (version < 2108) {
+            if (!prefs.getBoolean("updown", false))
+                editor.putBoolean("updown", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1345,7 +1345,7 @@ public void afterTextChanged(Editable s) {
             }
         });
 
-        if (prefs.getBoolean("updown", false)) {
+        if (prefs.getBoolean("updown", true)) {
             boolean reversed = prefs.getBoolean("reversed", false);
             bottom_navigation.getMenu().findItem(R.id.action_prev)
                     .setIcon(reversed ? R.drawable.twotone_north_24 : R.drawable.twotone_south_24);

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -703,7 +703,7 @@ private void setOptions() {
             swDoubleTap.setChecked(prefs.getBoolean("doubletap", false));
             swSwipeNav.setChecked(prefs.getBoolean("swipenav", true));
             swVolumeNav.setChecked(prefs.getBoolean("volumenav", false));
-            swUpDown.setChecked(prefs.getBoolean("updown", false));
+            swUpDown.setChecked(prefs.getBoolean("updown", true));
             swReversed.setChecked(prefs.getBoolean("reversed", false));
             swSwipeClose.setChecked(prefs.getBoolean("swipe_close", false));
             swSwipeMove.setChecked(prefs.getBoolean("swipe_move", false));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1828,6 +1828,7 @@ static EntityMessage getDebugInfo(Context context, String source, int title, Thr
             draft.identity = identity.id;
             draft.msgid = EntityMessage.generateMessageId();
             draft.thread = draft.msgid;
+            draft.from = new Address[]{new InternetAddress(identity.email, identity.name, StandardCharsets.UTF_8.name())};
             draft.to = new Address[]{myAddress()};
             draft.subject = context.getString(R.string.app_name) + " " + getVersionInfo(context) + " debug info - " + source;
             draft.received = new Date().getTime();

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -2280,10 +2280,8 @@ protected Long onExecute(Context context, Bundle args) throws IOException, JSONE
                         db.beginTransaction();
 
                         EntityMessage draft = db.message().getMessage(id);
-                        EntityIdentity primary = db.identity().getPrimaryIdentity();
-                        if (draft != null && primary != null) {
+                        if (draft != null) {
                             draft.folder = EntityFolder.getOutbox(context).id;
-                            draft.identity = primary.id;
                             db.message().updateMessage(draft);
 
                             EntityOperation.queue(context, draft, EntityOperation.SEND);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -2280,8 +2280,10 @@ protected Long onExecute(Context context, Bundle args) throws IOException, JSONE
                         db.beginTransaction();
 
                         EntityMessage draft = db.message().getMessage(id);
-                        if (draft != null) {
+                        EntityIdentity primary = db.identity().getPrimaryIdentity();
+                        if (draft != null && primary != null) {
                             draft.folder = EntityFolder.getOutbox(context).id;
+                            draft.identity = primary.id;
                             db.message().updateMessage(draft);
 
                             EntityOperation.queue(context, draft, EntityOperation.SEND);

File: app/src/main/java/eu/faircode/email/SuggestionSpanEx.java
Patch:
@@ -36,7 +36,7 @@ public class SuggestionSpanEx extends SuggestionSpan {
     public SuggestionSpanEx(Context context, String description, String[] suggestions, boolean misspelled) {
         super(context, suggestions,
                 misspelled || Build.VERSION.SDK_INT < Build.VERSION_CODES.S
-                        ? SuggestionSpan.FLAG_MISSPELLED | SuggestionSpan.FLAG_EASY_CORRECT
+                        ? SuggestionSpan.FLAG_MISSPELLED
                         : SuggestionSpan.FLAG_GRAMMAR_ERROR);
         this.description = description;
         highlightColor = Helper.resolveColor(context, android.R.attr.textColorHighlight);

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -127,6 +127,8 @@ public class EntityIdentity {
     @NonNull
     public Boolean read_receipt = false; // obsolete
     @NonNull
+    public Integer sensitivity = 0; // Normal
+    @NonNull
     public Boolean store_sent = false; // obsolete
     public Long sent_folder = null; // obsolete
     public Long sign_key = null; // OpenPGP

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -646,7 +646,7 @@ private void setOptions() {
             tvGenericUserAgent.setText(WebViewEx.getUserAgent(getContext()));
             swGenericUserAgent.setChecked(prefs.getBoolean("generic_ua", false));
             swSafeBrowsing.setChecked(prefs.getBoolean("safe_browsing", false));
-            swLoadEmoji.setChecked(prefs.getBoolean("load_emoji", false));
+            swLoadEmoji.setChecked(prefs.getBoolean("load_emoji", true));
 
             long time = prefs.getLong("disconnect_last", -1);
             DateFormat DF = SimpleDateFormat.getDateTimeInstance();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -161,7 +161,6 @@ class Core {
     private static final int FIND_RETRY_COUNT = 3; // times
     private static final long FIND_RETRY_DELAY = 5 * 1000L; // milliseconds
     private static final int POP3_KEEP_EXTRA = 100; // messages
-    private static final long POP3_KEEP_DELETED = 3 * 24 * 3600 * 1000L; // milliseconds
 
     private static final Map<Long, List<EntityIdentity>> accountIdentities = new HashMap<>();
 
@@ -3646,9 +3645,10 @@ tuple.ui_busy < new Date().getTime())
             }
 
             if (account.max_messages != null && !account.leave_on_device) {
-                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages));
+                int hidden = db.message().setMessagesUiHide(folder.id,
+                        Math.abs(account.max_messages) + flagged);
                 int deleted = db.message().deleteMessagesKeep(folder.id,
-                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA, new Date().getTime() - POP3_KEEP_DELETED);
+                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA);
                 EntityLog.log(context, account.name + " POP" +
                         " cleanup max=" + account.max_messages +
                         " hidden=" + hidden +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -1028,8 +1028,7 @@ List<Long> getMessageUnseen(
             " AND id NOT IN (" +
             "    SELECT id FROM message" +
             "    WHERE folder = :folder" +
-            "    AND stored < :before" +
             "    ORDER BY received DESC" +
             "    LIMIT :keep)")
-    int deleteMessagesKeep(long folder, int keep, long before);
+    int deleteMessagesKeep(long folder, int keep);
 }
\ No newline at end of file

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -161,6 +161,7 @@ class Core {
     private static final int FIND_RETRY_COUNT = 3; // times
     private static final long FIND_RETRY_DELAY = 5 * 1000L; // milliseconds
     private static final int POP3_KEEP_EXTRA = 100; // messages
+    private static final long POP3_KEEP_DELETED = 3 * 24 * 3600 * 1000L; // milliseconds
 
     private static final Map<Long, List<EntityIdentity>> accountIdentities = new HashMap<>();
 
@@ -3645,10 +3646,9 @@ tuple.ui_busy < new Date().getTime())
             }
 
             if (account.max_messages != null && !account.leave_on_device) {
-                int hidden = db.message().setMessagesUiHide(folder.id,
-                        Math.abs(account.max_messages) + flagged);
+                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages));
                 int deleted = db.message().deleteMessagesKeep(folder.id,
-                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA);
+                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA, new Date().getTime() - POP3_KEEP_DELETED);
                 EntityLog.log(context, account.name + " POP" +
                         " cleanup max=" + account.max_messages +
                         " hidden=" + hidden +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -1028,7 +1028,8 @@ List<Long> getMessageUnseen(
             " AND id NOT IN (" +
             "    SELECT id FROM message" +
             "    WHERE folder = :folder" +
+            "    AND stored < :before" +
             "    ORDER BY received DESC" +
             "    LIMIT :keep)")
-    int deleteMessagesKeep(long folder, int keep);
+    int deleteMessagesKeep(long folder, int keep, long before);
 }
\ No newline at end of file

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -161,7 +161,6 @@ class Core {
     private static final int FIND_RETRY_COUNT = 3; // times
     private static final long FIND_RETRY_DELAY = 5 * 1000L; // milliseconds
     private static final int POP3_KEEP_EXTRA = 100; // messages
-    private static final long POP3_KEEP_DELETED = 3 * 24 * 3600 * 1000L; // milliseconds
 
     private static final Map<Long, List<EntityIdentity>> accountIdentities = new HashMap<>();
 
@@ -3646,9 +3645,10 @@ tuple.ui_busy < new Date().getTime())
             }
 
             if (account.max_messages != null && !account.leave_on_device) {
-                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages));
+                int hidden = db.message().setMessagesUiHide(folder.id,
+                        Math.abs(account.max_messages) + flagged);
                 int deleted = db.message().deleteMessagesKeep(folder.id,
-                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA, new Date().getTime() - POP3_KEEP_DELETED);
+                        Math.abs(account.max_messages) + flagged + POP3_KEEP_EXTRA);
                 EntityLog.log(context, account.name + " POP" +
                         " cleanup max=" + account.max_messages +
                         " hidden=" + hidden +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -1028,8 +1028,7 @@ List<Long> getMessageUnseen(
             " AND id NOT IN (" +
             "    SELECT id FROM message" +
             "    WHERE folder = :folder" +
-            "    AND stored < :before" +
             "    ORDER BY received DESC" +
             "    LIMIT :keep)")
-    int deleteMessagesKeep(long folder, int keep, long before);
+    int deleteMessagesKeep(long folder, int keep);
 }
\ No newline at end of file

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -244,7 +244,7 @@ protected void onCreate(Bundle savedInstanceState) {
         int layout = (config.screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK);
         Log.i("Orientation=" + config.orientation + " layout=" + layout +
                 " portrait rows=" + portrait2 + " cols=" + portrait2c + " min=" + portrait_min_size +
-                " landscape cols=" + landscape + " min=" + landscape);
+                " landscape cols=" + landscape + " min=" + landscape_min_size);
         boolean duo = Helper.isSurfaceDuo();
         boolean close_pane = prefs.getBoolean("close_pane", !duo);
         boolean open_pane = (!close_pane && prefs.getBoolean("open_pane", false));

File: app/src/main/java/eu/faircode/email/FragmentDialogDebug.java
Patch:
@@ -57,6 +57,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         final EditText etIssue = view.findViewById(R.id.etIssue);
         final Spinner spAccount = view.findViewById(R.id.spAccount);
         final CheckBox cbContact = view.findViewById(R.id.cbContact);
+        final CheckBox cbSend = view.findViewById(R.id.cbSend);
 
         final ArrayAdapter<EntityAccount> adapterAccount;
         etIssue.addTextChangedListener(new TextWatcher() {
@@ -131,6 +132,7 @@ public void onClick(DialogInterface dialog, int which) {
                         Bundle args = getArguments();
                         args.putString("issue", etIssue.getText().toString());
                         args.putBoolean("contact", cbContact.isChecked());
+                        args.putBoolean("send", cbSend.isChecked());
 
                         EntityAccount account = (EntityAccount) spAccount.getSelectedItem();
                         if (account != null)

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -121,6 +121,7 @@ public class EntityIdentity {
     public Boolean encrypt_default = false;
     @NonNull
     public Integer encrypt = 0; // Default method 0=PGP 1=S/MIME
+    public Integer receipt_type;
     @NonNull
     public Boolean delivery_receipt = false; // obsolete
     @NonNull
@@ -381,6 +382,7 @@ public static boolean areEqual(EntityIdentity i1, EntityIdentity other, boolean
                 Objects.equals(i1.sign_default, other.sign_default) &&
                 Objects.equals(i1.encrypt_default, other.encrypt_default) &&
                 Objects.equals(i1.encrypt, other.encrypt) &&
+                Objects.equals(i1.receipt_type, other.receipt_type) &&
                 // delivery_receipt
                 // read_receipt
                 // store_sent

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -336,6 +336,9 @@ static MimeMessageEx from(Context context, EntityMessage message, EntityIdentity
         boolean encrypt_subject = prefs.getBoolean("encrypt_subject", false);
         boolean forward_new = prefs.getBoolean("forward_new", true);
 
+        if (identity != null && identity.receipt_type != null)
+            receipt_type = identity.receipt_type;
+
         Map<String, String> c = new HashMap<>();
         c.put("id", message.id == null ? null : Long.toString(message.id));
         c.put("encrypt", message.encrypt + "/" + message.ui_encrypt);

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -759,6 +759,8 @@ private void onSend(EntityMessage message) throws JSONException, MessagingExcept
 
                 if (message.receipt_request != null && message.receipt_request) {
                     int receipt_type = prefs.getInt("receipt_type", 2);
+                    if (ident.receipt_type != null)
+                        receipt_type = ident.receipt_type;
                     if (receipt_type == 1 || receipt_type == 2) // Delivery receipt
                         iservice.setDsnNotify("SUCCESS,FAILURE,DELAY");
                 }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -230,6 +230,8 @@ public class Helper {
     private static final String[] ROMAN_10 = {"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};
     private static final String[] ROMAN_1 = {"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};
 
+    static final String REGEX_UUID = "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}";
+
     static final Pattern EMAIL_ADDRESS = Pattern.compile(
             "[\\S&&[^\"@]]{1,256}" +
                     "\\@" +

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1618,7 +1618,7 @@ static String getMIUIVersion() {
         }
     }
 
-    static Boolean getMIUIAutostart(Context context) {
+    static boolean getMIUIAutostart(Context context) {
         try {
             Class<?> c = Class.forName("android.miui.AppOpsUtils");
             Method m = c.getDeclaredMethod("getApplicationAutoStart", Context.class, String.class);
@@ -1627,7 +1627,7 @@ static Boolean getMIUIAutostart(Context context) {
             return (result != null && result.equals(0));
         } catch (Throwable ex) {
             Log.w(ex);
-            return null;
+            return false;
         }
     }
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1587,6 +1587,7 @@ static String getMIUIVersion() {
         try {
             Class<?> c = Class.forName("android.os.SystemProperties");
             Method get = c.getMethod("get", String.class);
+            get.setAccessible(true);
             String miui = (String) get.invoke(c, "ro.miui.ui.version.code");
             return (TextUtils.isEmpty(miui) ? null : miui);
         } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2005,7 +2005,9 @@ private static StringBuilder getAppInfo(Context context) {
                 Build.VERSION.RELEASE, Build.VERSION.SDK_INT, Helper.getTargetSdk(context)));
 
         String miui = Helper.getMIUIVersion();
-        sb.append(String.format("MIUI: %s\r\n", miui == null ? "-" : miui));
+        boolean autostart = (miui != null && Helper.getMIUIAutostart(context));
+        sb.append(String.format("MIUI: %s autostart=%b\r\n",
+                miui == null ? "-" : miui, autostart));
 
         boolean reporting = prefs.getBoolean("crash_reports", false);
         if (reporting || BuildConfig.TEST_RELEASE) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1287,7 +1287,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
         });
 
         tvUnzipHint.setText(getString(R.string.compressed,
-                TextUtils.join(",", MessageHelper.UNZIP_FORMATS),
+                TextUtils.join(", ", MessageHelper.UNZIP_FORMATS),
                 Integer.toString(MessageHelper.MAX_UNZIP_COUNT),
                 Helper.humanReadableByteCount(MessageHelper.MAX_UNZIP_SIZE)));
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -183,9 +183,9 @@ public class MessageHelper {
     static final int MAX_UNZIP_COUNT = 20;
     static final long MAX_UNZIP_SIZE = 1000 * 1000 * 1000L;
 
-    static final List<String> UNZIP_FORMATS = BuildConfig.PLAY_STORE_RELEASE
-            ? Collections.unmodifiableList(Arrays.asList("zip"))
-            : Collections.unmodifiableList(Arrays.asList("zip, gz, tar.gz"));
+    static final List<String> UNZIP_FORMATS = Collections.unmodifiableList(Arrays.asList(
+            "zip", "gz", "tar.gz"
+    ));
 
     static final List<String> RECEIVED_WORDS = Collections.unmodifiableList(Arrays.asList(
             "from", "by", "via", "with", "id", "for"

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -338,9 +338,8 @@ private void onReplyDirect(long id, Intent intent) throws IOException {
                 " inner=" + inner + (inner == null ? "" : " extras: " + TextUtils.join(" ", Log.getExtras(inner.getExtras()))) +
                 " results: " + Log.getExtras(results));
 
-        String body = results.getString("text");
-        if (body != null)
-            body = "<p>" + body.replaceAll("\\r?\\n", "<br>") + "</p>";
+        Object obj = results.get("text");
+        String body = (obj == null ? null : "<p>" + obj.toString().replaceAll("\\r?\\n", "<br>") + "</p>");
 
         String text = HtmlHelper.getFullText(body);
         String language = HtmlHelper.getLanguage(this, ref.subject, text);

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -195,7 +195,7 @@ else if (protocol_since + PROTOCOL_LOG_DURATION < now && !BuildConfig.TEST_RELEA
         boolean auth_sasl = prefs.getBoolean("auth_sasl", true);
         boolean auth_apop = prefs.getBoolean("auth_apop", false);
         boolean use_top = prefs.getBoolean("use_top", true);
-        boolean forget_top = prefs.getBoolean("forget_top", true);
+        boolean forget_top = prefs.getBoolean("forget_top", false);
         Log.i("Authenticate" +
                 " plain=" + auth_plain +
                 " login=" + auth_login +

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2616,7 +2616,7 @@ private void setOptions() {
             swAuthSasl.setChecked(prefs.getBoolean("auth_sasl", true));
             swAuthApop.setChecked(prefs.getBoolean("auth_apop", false));
             swUseTop.setChecked(prefs.getBoolean("use_top", true));
-            swForgetTop.setChecked(prefs.getBoolean("forget_top", true));
+            swForgetTop.setChecked(prefs.getBoolean("forget_top", false));
             swKeepAlivePoll.setChecked(prefs.getBoolean("keep_alive_poll", false));
             swEmptyPool.setChecked(prefs.getBoolean("empty_pool", true));
             swIdleDone.setChecked(prefs.getBoolean("idle_done", true));

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2630,7 +2630,7 @@ private void setOptions() {
             swDupMsgId.setChecked(prefs.getBoolean("dup_msgids", false));
             swThreadByRef.setChecked(prefs.getBoolean("thread_byref", true));
             swMdn.setChecked(prefs.getBoolean("mdn", swExperiments.isChecked()));
-            swAppChooser.setChecked(prefs.getBoolean("app_chooser", true));
+            swAppChooser.setChecked(prefs.getBoolean("app_chooser", false));
             swDeleteConfirmation.setChecked(prefs.getBoolean("delete_confirmation", true));
             etKeywords.setText(prefs.getString("global_keywords", null));
             swTestIab.setChecked(prefs.getBoolean("test_iab", false));

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -942,7 +942,7 @@ public void onDestroyed() {
 
     static Intent getChooser(Context context, Intent intent) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean app_chooser = prefs.getBoolean("app_chooser", true);
+        boolean app_chooser = prefs.getBoolean("app_chooser", false);
         if (!app_chooser)
             return intent;
 

File: app/src/main/java/eu/faircode/email/FragmentDialogSelectIdentity.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 import android.graphics.Color;
 import android.os.Bundle;
+import android.text.TextUtils;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -136,7 +137,8 @@ private void bindTo(TupleIdentityEx identity) {
 
                 Integer color = (identity.color == null ? identity.accountColor : identity.color);
                 vwColor.setBackgroundColor(color == null ? Color.TRANSPARENT : color);
-                tv.setText(identity.getDisplayName());
+                String name = identity.getDisplayName();
+                tv.setText(TextUtils.isEmpty(name) ? identity.email : name);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -375,7 +375,8 @@ static void upgrade(Context context) {
         if (version < BuildConfig.VERSION_CODE)
             editor.remove("crash_report_count");
 
-        editor.remove("photo_picker");
+        if (!BuildConfig.DEBUG)
+            editor.remove("photo_picker");
 
         if (!BuildConfig.TEST_RELEASE)
             editor.remove("test1").remove("test2").remove("test3").remove("test4").remove("test5");

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -519,7 +519,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swPhotoPicker.setVisibility(Helper.hasPhotoPicker() && false ? View.VISIBLE : View.GONE);
+        swPhotoPicker.setVisibility(Helper.hasPhotoPicker() && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         swPhotoPicker.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -56,13 +56,14 @@ public class WebViewEx extends WebView implements DownloadListener, View.OnLongC
 
     private static String userAgent = null;
 
+    static final int DEFAULT_VIEWPORT_HEIGHT = 8000;
     private static final long PAGE_LOADED_FALLBACK_DELAY = 1500L; // milliseconds
 
     public WebViewEx(Context context) {
         super(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        this.viewportHeight = prefs.getInt("viewport_height", 8000);
+        this.viewportHeight = prefs.getInt("viewport_height", DEFAULT_VIEWPORT_HEIGHT);
         boolean overview_mode = prefs.getBoolean("overview_mode", false);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2389,7 +2389,7 @@ static void onSynchronizeFolders(
                 EntityFolder inbox = db.folder().getFolderByType(account.id, EntityFolder.INBOX);
                 List<EntityFolder> children = db.folder().getChildFolders(inbox.id);
                 for (EntityFolder child : children)
-                    if (!child.poll) {
+                    if (!child.poll && EntityFolder.USER.equals(child.type)) {
                         count++;
                         db.folder().setFolderPoll(child.id, true);
                         EntityLog.log(context, "Fixed poll=" + child.name + ":" + child.type);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2504,7 +2504,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         } catch (Throwable ignored) {
                         }
 
-                        size += write(os, account.name + (account.primary ? "*" : "") +
+                        size += write(os, account.id + ":" + account.name + (account.primary ? "*" : "") +
                                 " " + (account.protocol == EntityAccount.TYPE_IMAP ? "IMAP" : "POP") +
                                 " [" + (account.provider == null ? "" : account.provider) +
                                 ":" + ServiceAuthenticator.getAuthTypeName(account.auth_type) + "]" +
@@ -2533,7 +2533,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 int unseen = db.message().countUnseen(folder.id);
                                 int hidden = db.message().countHidden(folder.id);
                                 int notifying = db.message().countNotifying(folder.id);
-                                size += write(os, "- " + folder.name + " " +
+                                size += write(os, "- " + folder.id + ":" + folder.name + " " +
                                         folder.type + (folder.inherited_type == null ? "" : "/" + folder.inherited_type) +
                                         (folder.unified ? " unified" : "") +
                                         (folder.notify ? " notify" : "") +

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2474,6 +2474,7 @@ else if (!body.endsWith("\r\n"))
                     key = Base64.decode("11qYAYKxCrfVS_7TyWQHOg7hcvPapiMlrwIaaPcHURo", Base64.URL_SAFE);
                     signature = Base64.decode("hgyY0il_MGCjP0JzlnLWG1PPOt7-09PGcvMg3AIbQR6dWbhijcNR4ki4iylGjg5BhVsPt9g7sVvpAr_MuM0KAg", Base64.URL_SAFE);
                 }
+                data = MessageDigest.getInstance("SHA-256").digest(head.toString().getBytes());
                 key = new SubjectPublicKeyInfo(new AlgorithmIdentifier(EdECObjectIdentifiers.id_Ed25519), key).getEncoded();
             }
 

File: app/src/main/java/eu/faircode/email/ServiceAuthenticator.java
Patch:
@@ -173,7 +173,7 @@ static void OAuthRefresh(Context context, String id, int auth_type, String user,
 
             EntityLog.log(context, EntityLog.Type.General, "Token" +
                     " provider=" + id + ":" + getAuthTypeName(auth_type) +
-                    " user" + user +
+                    " user=" + user +
                     " expiration=" + (expiration == null ? null : new Date(expiration)) +
                     " need=" + needsRefresh + "/" + authState.getNeedsTokenRefresh() +
                     " force=" + forceRefresh);

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -508,7 +508,7 @@ protected void onStoreAttachment(EntityAttachment attachment) {
         Intent create = new Intent(Intent.ACTION_CREATE_DOCUMENT);
         create.addCategory(Intent.CATEGORY_OPENABLE);
         create.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
-        create.setType(attachment.type);
+        create.setType(attachment.getMimeType());
         create.putExtra(Intent.EXTRA_TITLE, attachment.name);
         Helper.openAdvanced(context, create);
         PackageManager pm = context.getPackageManager();

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -139,7 +139,8 @@ public class FragmentOptions extends FragmentBase {
             "indentation", "date", "date_week", "date_fixed", "date_bold", "date_time", "threading", "threading_unread",
             "show_filtered",
             "highlight_unread", "highlight_color", "color_stripe", "color_stripe_wide",
-            "avatars", "bimi", "favicons", "generated_icons", "identicons", "circular", "saturation", "brightness", "threshold",
+            "avatars", "bimi", "gravatars", "libravatars", "favicons", "favicons_partial", "favicons_manifest", "generated_icons", "identicons",
+            "circular", "saturation", "brightness", "threshold",
             "authentication", "authentication_indicator",
             "email_format", "prefer_contact", "only_contact", "distinguish_contacts", "show_recipients",
             "font_size_sender", "sender_ellipsize",

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4932,8 +4932,8 @@ private void onHelp(TupleMessageEx message) {
                 intent.putExtra("provider", "outlookgraph");
                 intent.putExtra("account", message.account);
                 intent.putExtra("protocol", message.accountProtocol);
+                intent.putExtra("auth_type", ServiceAuthenticator.AUTH_TYPE_GRAPH);
                 intent.putExtra("identity", message.identity);
-                intent.putExtra("authorize", true);
                 intent.putExtra("personal", message.identityName);
                 intent.putExtra("address", message.identityEmail);
                 intent.putExtra("faq", 14);

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -491,8 +491,8 @@ private void processOperations(List<EntityOperation> ops) {
                                             intent.putExtra("provider", "outlookgraph");
                                             intent.putExtra("account", identity.account);
                                             intent.putExtra("protocol", protocol);
+                                            intent.putExtra("auth_type", AUTH_TYPE_GRAPH);
                                             intent.putExtra("identity", identity.id);
-                                            intent.putExtra("authorize", true);
                                             intent.putExtra("personal", identity.name);
                                             intent.putExtra("address", identity.user);
                                             intent.putExtra("faq", 14);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2010,9 +2010,9 @@ private static StringBuilder getAppInfo(Context context) {
             sb.append(String.format("UUID: %s\r\n", uuid == null ? "-" : uuid));
         }
 
+        sb.append(String.format("Play Store: %s\r\n", Helper.hasPlayStore(context)));
         sb.append(String.format("Installer: %s\r\n", installer));
         sb.append(String.format("Installed: %s\r\n", new Date(Helper.getInstallTime(context))));
-        sb.append(String.format("Play Store: %s\r\n", Helper.hasPlayStore(context)));
         sb.append(String.format("Updated: %s\r\n", new Date(Helper.getUpdateTime(context))));
         sb.append(String.format("Last cleanup: %s\r\n", new Date(last_cleanup)));
         sb.append(String.format("Now: %s\r\n", new Date()));
@@ -2537,6 +2537,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         folder.type + (folder.inherited_type == null ? "" : "/" + folder.inherited_type) +
                                         (folder.unified ? " unified" : "") +
                                         (folder.notify ? " notify" : "") +
+                                        (Boolean.TRUE.equals(folder.subscribed) ? " subscribed" : "") +
                                         " poll=" + folder.poll + (folder.poll || EntityFolder.INBOX.equals(folder.type) ? "" : " !!! ") +
                                         " factor=" + folder.poll_factor +
                                         " days=" + getDays(folder.sync_days) + "/" + getDays(folder.keep_days) +

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -730,6 +730,9 @@ else if (version < 2069) {
             if (override_width)
                 editor.putBoolean("overview_mode", true);
             editor.remove("override_width");
+        } else if (version < 2089){
+            if (!prefs.contains("auto_hide_answer"))
+                editor.putBoolean("auto_hide_answer", !Helper.isAccessibilityEnabled(context));
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -732,7 +732,7 @@ private void setOptions() {
             swAutoImportant.setChecked(prefs.getBoolean("auto_important", false));
             swResetSnooze.setChecked(prefs.getBoolean("reset_snooze", true));
             swAutoBlockSender.setChecked(prefs.getBoolean("auto_block_sender", true));
-            swAutoHideAnswer.setChecked(prefs.getBoolean("auto_hide_answer", !accessibility));
+            swAutoHideAnswer.setChecked(prefs.getBoolean("auto_hide_answer", false));
             swSwipeReply.setChecked(prefs.getBoolean("swipe_reply", false));
 
             swMoveThreadAll.setChecked(prefs.getBoolean("move_thread_all", false));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -549,6 +549,7 @@ public boolean onError(@NonNull Event event) {
                         String theme = prefs.getString("theme", "blue_orange_system");
                         event.addMetadata("extra", "theme", theme);
                         event.addMetadata("extra", "package", BuildConfig.APPLICATION_ID);
+                        event.addMetadata("extra", "locale", Locale.getDefault().toString());
                     }
 
                     return should;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5955,7 +5955,7 @@ private void onActionMore(TupleMessageEx message) {
 
             popupMenu.getMenu().findItem(R.id.menu_edit_subject)
                     .setEnabled(message.uid != null && !message.folderReadOnly)
-                    .setVisible(message.accountProtocol == EntityAccount.TYPE_IMAP && !Helper.isPlayStoreInstall());
+                    .setVisible(message.accountProtocol == EntityAccount.TYPE_IMAP && BuildConfig.DEBUG);
 
             popupMenu.getMenu().findItem(R.id.menu_move_to)
                     .setEnabled(message.uid != null && !message.folderReadOnly)

File: app/src/main/java/eu/faircode/email/UriHelper.java
Patch:
@@ -460,7 +460,8 @@ static boolean isHyperLink(Uri uri) {
     }
 
     static Uri fix(Uri uri) {
-        if ("HTTP".equals(uri.getScheme()) || "HTTPS".equals(uri.getScheme())) {
+        if ((!"http".equals(uri.getScheme()) && "http".equalsIgnoreCase(uri.getScheme())) ||
+                (!"https".equals(uri.getScheme()) && "https".equalsIgnoreCase(uri.getScheme()))) {
             String u = uri.toString();
             int semi = u.indexOf(':');
             if (semi > 0)

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2510,7 +2510,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 EmailService.getEncryptionName(account.encryption) +
                                 (account.insecure ? " !!!" : "") +
                                 " sync=" + account.synchronize +
-                                " exempted=" + account.poll_exempted +
+                                " exempted=" + account.poll_exempted + (pollInterval > 0 && account.poll_exempted ? " !!!" : "") +
                                 " poll=" + account.poll_interval +
                                 " ondemand=" + account.ondemand + (account.ondemand ? " !!!" : "") +
                                 " msgs=" + content + "/" + messages + " max=" + account.max_messages +

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2263,7 +2263,7 @@ private static void onExists(Context context, JSONArray jargs, EntityAccount acc
                 : ifolder.search(new MessageIDTerm(message.msgid));
 
         // Fallback
-        if (false)
+        if (account.isOutlook())
             if (imessages == null || imessages.length == 0)
                 try {
                     // Needed for Outlook

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4277,6 +4277,7 @@ static EntityMessage synchronizeMessage(
         boolean notify_known = prefs.getBoolean("notify_known", false);
         boolean native_dkim = prefs.getBoolean("native_dkim", false);
         boolean experiments = prefs.getBoolean("experiments", false);
+        boolean mdn = prefs.getBoolean("mdn", experiments);
         boolean pro = ActivityBilling.isPro(context);
 
         long uid = ifolder.getUID(imessage);
@@ -4614,7 +4615,7 @@ else if (MessageHelper.FLAG_HIGH_IMPORTANCE.equals(keyword))
             List<Header> headers = (needsHeaders ? helper.getAllHeaders() : null);
             String body = (needsBody ? parts.getHtml(context, download_plain) : null);
 
-            if (experiments && helper.isReport())
+            if (mdn && helper.isReport())
                 try {
                     MessageHelper.Report r = parts.getReport();
                     boolean client_id = prefs.getBoolean("client_id", true);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2515,6 +2515,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 " ops=" + db.operation().getOperationCount(account.id) +
                                 " schedule=" + (!ignore_schedule) + (ignore_schedule ? " !!!" : "") +
                                 " unmetered=" + unmetered + (unmetered ? " !!!" : "") +
+                                " quota=" + (account.quota_usage == null ? "-" : Helper.humanReadableByteCount(account.quota_usage)) +
+                                "/" + (account.quota_limit == null ? "-" : Helper.humanReadableByteCount(account.quota_limit)) +
                                 " " + account.state +
                                 (account.last_connected == null ? "" : " " + dtf.format(account.last_connected)) +
                                 (account.error == null ? "" : "\r\n" + account.error) +
@@ -2575,6 +2577,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         EmailService.getEncryptionName(identity.encryption) +
                                         (identity.insecure ? " !!!" : "") +
                                         " ops=" + db.operation().getOperationCount(EntityOperation.SEND) +
+                                        " max=" + (identity.max_size == null ? "-" : Helper.humanReadableByteCount(identity.max_size)) +
                                         " " + identity.state +
                                         (identity.last_connected == null ? "" : " " + dtf.format(identity.last_connected)) +
                                         (identity.error == null ? "" : "\r\n" + identity.error) +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5700,7 +5700,7 @@ protected String[] onExecute(Context context, Bundle args) {
                     List<String> result = new ArrayList<>();
                     if (folders != null)
                         for (EntityFolder folder : folders)
-                            if (EntityFolder.USER.equals(folder.type) && BuildConfig.DEBUG)
+                            if (EntityFolder.USER.equals(folder.type))
                                 result.add(folder.name);
 
                     Collator collator = Collator.getInstance(Locale.getDefault());

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5701,7 +5701,7 @@ protected String[] onExecute(Context context, Bundle args) {
                     List<String> result = new ArrayList<>();
                     if (folders != null)
                         for (EntityFolder folder : folders)
-                            if (EntityFolder.USER.equals(folder.type))
+                            if (EntityFolder.USER.equals(folder.type) && BuildConfig.DEBUG)
                                 result.add(folder.name);
 
                     Collator collator = Collator.getInstance(Locale.getDefault());

File: app/src/main/java/eu/faircode/email/FragmentDialogDebug.java
Patch:
@@ -109,6 +109,6 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
     private void setEnabled(boolean value) {
         Button ok = ((AlertDialog) getDialog()).getButton(AlertDialog.BUTTON_POSITIVE);
         if (ok != null)
-            ok.setEnabled(value);
+            ok.setEnabled(value || BuildConfig.DEBUG);
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -7682,7 +7682,7 @@ private void clearSearch() {
     private AdapterView.OnItemSelectedListener identitySelected = new AdapterView.OnItemSelectedListener() {
         @Override
         public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-            final Context context = view.getContext();
+            final Context context = parent.getContext();
             TupleIdentityEx identity = (TupleIdentityEx) parent.getAdapter().getItem(position);
 
             int at = (identity == null ? -1 : identity.email.indexOf('@'));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2409,7 +2409,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         Helper.getInterruptionFilter(filter) +
                                 (filter == NotificationManager.INTERRUPTION_FILTER_ALL ? "" : "!!!")) + "\r\n" +
                         "accounts=" + accounts.size() +
-                        " folders=" + db.folder().countTotal() +
+                        " folders=" + db.folder().countSync() + "/" + db.folder().countTotal() +
                         " messages=" + db.message().countTotal() +
                         " rules=" + db.rule().countTotal() +
                         " ops=" + db.operation().getOperationCount() +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2529,7 +2529,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         folder.type + (folder.inherited_type == null ? "" : "/" + folder.inherited_type) +
                                         (folder.unified ? " unified" : "") +
                                         (folder.notify ? " notify" : "") +
-                                        " poll=" + folder.poll + "/" + folder.poll_factor +
+                                        " poll=" + folder.poll + (folder.poll || EntityFolder.INBOX.equals(folder.type) ? "" : " !!! ") +
+                                        " factor=" + folder.poll_factor +
                                         " days=" + getDays(folder.sync_days) + "/" + getDays(folder.keep_days) +
                                         " msgs=" + folder.content + "/" + folder.messages + "/" + folder.total +
                                         " ops=" + db.operation().getOperationCount(folder.id, null) +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3836,7 +3836,7 @@ public void setContent(Object content, String type) throws MessagingException {
                         bpContent.setContent(imessage.getContent(), imessage.getContentType());
 
                         try (OutputStream out = new MessageHelper.CanonicalizingStream(
-                                new BufferedOutputStream(new FileOutputStream(input)))) {
+                                new BufferedOutputStream(new FileOutputStream(input)), EntityAttachment.PGP_CONTENT, null)) {
                             bpContent.writeTo(out);
                         }
                     } else {
@@ -4250,7 +4250,7 @@ public void setContent(Object content, String type) throws MessagingException {
                 // Build content
                 File sinput = new File(tmp, draft.id + ".smime_sign");
                 try (OutputStream os = new MessageHelper.CanonicalizingStream(
-                        new BufferedOutputStream(new FileOutputStream(sinput)))) {
+                        new BufferedOutputStream(new FileOutputStream(sinput)), EntityAttachment.SMIME_CONTENT, null)) {
                     bpContent.writeTo(os);
                 }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1104,8 +1104,8 @@ else if (key.endsWith("bottom"))
         for (Element p : document.select("p")) {
             p.tagName("div");
 
-            Element last = p.lastElementChild();
-            if (last != null && "br".equals(last.tagName()))
+            Node last = p.lastChild();
+            if (last != null && "br".equals(last.nodeName()))
                 last.remove();
 
             if (TextUtils.isEmpty(p.text())) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2548,7 +2548,7 @@ private void setOptions() {
             swUndoManager.setChecked(prefs.getBoolean("undo_manager", false));
             swBrowserZoom.setChecked(prefs.getBoolean("browser_zoom", false));
             swFakeDark.setChecked(prefs.getBoolean("fake_dark", false));
-            etViewportHeight.setText(Integer.toString(prefs.getInt("viewport_height", 16000)));
+            etViewportHeight.setText(Integer.toString(prefs.getInt("viewport_height", 8000)));
             swShowRecent.setChecked(prefs.getBoolean("show_recent", false));
             swModSeq.setChecked(prefs.getBoolean("use_modseq", true));
             swPreamble.setChecked(prefs.getBoolean("preamble", false));

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -62,7 +62,7 @@ public WebViewEx(Context context) {
         super(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        this.viewportHeight = prefs.getInt("viewport_height", 16000);
+        this.viewportHeight = prefs.getInt("viewport_height", 8000);
         boolean overview_mode = prefs.getBoolean("overview_mode", false);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
 

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -77,7 +77,7 @@
 import java.util.Locale;
 
 public class StyleHelper {
-    private static final List<Class<?>> CLEAR_STYLES = Collections.unmodifiableList(Arrays.asList(
+    static final List<Class<?>> CLEAR_STYLES = Collections.unmodifiableList(Arrays.asList(
             StyleSpan.class,
             UnderlineSpan.class,
             RelativeSizeSpan.class,

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -718,7 +718,8 @@ public void onClick(DialogInterface dialog, int which) {
                             startIntentSenderForResult(
                                     ex.getUserAction().getActionIntent().getIntentSender(),
                                     REQUEST_RECOVERABLE_PERMISSION,
-                                    null, 0, 0, 0, null);
+                                    null, 0, 0, 0,
+                                    Helper.getBackgroundActivityOptions());
                         } catch (IntentSender.SendIntentException ex) {
                             Log.w(ex);
                         }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -26,6 +26,7 @@
 
 import android.Manifest;
 import android.app.Activity;
+import android.app.ActivityOptions;
 import android.app.PendingIntent;
 import android.content.ClipData;
 import android.content.ClipboardManager;
@@ -4098,9 +4099,9 @@ protected void onExecuted(Bundle args, Object result) {
                             startIntentSenderForResult(
                                     pi.getIntentSender(),
                                     REQUEST_OPENPGP,
-                                    null, 0, 0, 0, null);
+                                    null, 0, 0, 0,
+                                    Helper.getBackgroundActivityOptions());
                         } catch (IntentSender.SendIntentException ex) {
-                            Log.e(ex);
                             Log.unexpectedError(getParentFragmentManager(), ex);
                         }
                     else {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -8885,7 +8885,8 @@ protected void onExecuted(Bundle args, PendingIntent pi) {
                         startIntentSenderForResult(
                                 pi.getIntentSender(),
                                 REQUEST_OPENPGP,
-                                null, 0, 0, 0, null);
+                                null, 0, 0, 0,
+                                Helper.getBackgroundActivityOptions());
                     } catch (IntentSender.SendIntentException ex) {
                         // Likely cancelled
                         Log.w(ex);

File: app/src/main/java/com/bugsnag/android/Client.java
Patch:
@@ -2,11 +2,13 @@
 
 import static com.bugsnag.android.SeverityReason.REASON_HANDLED_EXCEPTION;
 
+import com.bugsnag.android.internal.BackgroundTaskService;
 import com.bugsnag.android.internal.ImmutableConfig;
 import com.bugsnag.android.internal.InternalMetrics;
 import com.bugsnag.android.internal.InternalMetricsImpl;
 import com.bugsnag.android.internal.InternalMetricsNoop;
 import com.bugsnag.android.internal.StateObserver;
+import com.bugsnag.android.internal.TaskType;
 import com.bugsnag.android.internal.dag.ConfigModule;
 import com.bugsnag.android.internal.dag.ContextModule;
 import com.bugsnag.android.internal.dag.SystemServiceModule;
@@ -303,7 +305,7 @@ private void start() {
         registerListenersInBackground();
 
         // Leave auto breadcrumb
-        Map<String, Object> data = Collections.emptyMap();
+        Map<String, Object> data = new HashMap<>();
         leaveAutoBreadcrumb("Bugsnag loaded", BreadcrumbType.STATE, data);
 
         logger.d("Bugsnag loaded");

File: app/src/main/java/com/bugsnag/android/DeliveryDelegate.java
Patch:
@@ -2,7 +2,9 @@
 
 import static com.bugsnag.android.SeverityReason.REASON_PROMISE_REJECTION;
 
+import com.bugsnag.android.internal.BackgroundTaskService;
 import com.bugsnag.android.internal.ImmutableConfig;
+import com.bugsnag.android.internal.TaskType;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.VisibleForTesting;

File: app/src/main/java/com/bugsnag/android/EventStore.java
Patch:
@@ -1,6 +1,8 @@
 package com.bugsnag.android;
 
+import com.bugsnag.android.internal.BackgroundTaskService;
 import com.bugsnag.android.internal.ImmutableConfig;
+import com.bugsnag.android.internal.TaskType;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;

File: app/src/main/java/com/bugsnag/android/InternalReportDelegate.java
Patch:
@@ -3,8 +3,10 @@
 import static com.bugsnag.android.DeliveryHeadersKt.HEADER_INTERNAL_ERROR;
 import static com.bugsnag.android.SeverityReason.REASON_UNHANDLED_EXCEPTION;
 
+import com.bugsnag.android.internal.BackgroundTaskService;
 import com.bugsnag.android.internal.ImmutableConfig;
 import com.bugsnag.android.internal.JsonHelper;
+import com.bugsnag.android.internal.TaskType;
 
 import android.annotation.SuppressLint;
 import android.content.Context;

File: app/src/main/java/com/bugsnag/android/LibraryLoader.java
Patch:
@@ -1,5 +1,7 @@
 package com.bugsnag.android;
 
+import com.bugsnag.android.internal.TaskType;
+
 import java.util.concurrent.atomic.AtomicBoolean;
 
 class LibraryLoader {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2066,7 +2066,7 @@ private static void onAttachment(Context context, JSONArray jargs, EntityFolder
             throw new IllegalArgumentException("Local attachment not found");
         if (attachment.subsequence != null)
             throw new IllegalArgumentException("Download of sub attachment");
-        if (attachment.available)
+        if (attachment.available && !delete)
             return;
         if (message.uid == null)
             throw new IllegalArgumentException("Attachment/message uid missing");

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -505,6 +505,7 @@ Element getReplyHeader(Context context, Document document, boolean separate, boo
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean hide_timezone = prefs.getBoolean("hide_timezone", false);
         boolean language_detection = prefs.getBoolean("language_detection", false);
+        String compose_font = prefs.getString("compose_font", "");
         String l = (language_detection ? language : null);
 
         DateFormat DTF = (hide_timezone
@@ -555,6 +556,8 @@ Element getReplyHeader(Context context, Document document, boolean separate, boo
 
         Element div = document.createElement("div")
                 .attr("fairemail", "reply");
+        if (!TextUtils.isEmpty(compose_font))
+            div.attr("style", "font-family: " + StyleHelper.getFamily(compose_font));
         if (separate)
             div.appendElement("hr");
         div.appendChild(p);

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -67,7 +67,7 @@ public class EntityLog {
 
     public enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification, Rules, Cloud, Debug}
 
-    public static void log(final Context context, String data) {
+    static void log(final Context context, String data) {
         log(context, Type.General, data);
     }
 

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -67,7 +67,7 @@ public class EntityLog {
 
     public enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification, Rules, Cloud, Debug}
 
-    static void log(final Context context, String data) {
+    public static void log(final Context context, String data) {
         log(context, Type.General, data);
     }
 

File: app/src/main/java/androidx/car/app/connection/CarConnectionTypeLiveData.java
Patch:
@@ -18,7 +18,7 @@
 
 import static androidx.car.app.connection.CarConnection.ACTION_CAR_CONNECTION_UPDATED;
 import static androidx.car.app.connection.CarConnection.CAR_CONNECTION_STATE;
-import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
+//import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
 
 import android.content.AsyncQueryHandler;
 import android.content.BroadcastReceiver;

File: app/src/main/java/androidx/car/app/connection/CarConnectionTypeLiveData.java
Patch:
@@ -18,7 +18,7 @@
 
 import static androidx.car.app.connection.CarConnection.ACTION_CAR_CONNECTION_UPDATED;
 import static androidx.car.app.connection.CarConnection.CAR_CONNECTION_STATE;
-import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
+//import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
 
 import android.content.AsyncQueryHandler;
 import android.content.BroadcastReceiver;
@@ -45,6 +45,7 @@ final class CarConnectionTypeLiveData extends LiveData<@ConnectionType Integer>
     @VisibleForTesting
     static final String CAR_CONNECTION_AUTHORITY = "androidx.car.app.connection";
 
+    private static final String TAG_CONNECTION_TO_CAR = "fairemail";
     private static final int QUERY_TOKEN = 42;
     private static final Uri PROJECTION_HOST_URI = new Uri.Builder().scheme("content").authority(
             CAR_CONNECTION_AUTHORITY).build();

File: app/src/main/java/androidx/car/app/connection/CarConnectionTypeLiveData.java
Patch:
@@ -18,7 +18,7 @@
 
 import static androidx.car.app.connection.CarConnection.ACTION_CAR_CONNECTION_UPDATED;
 import static androidx.car.app.connection.CarConnection.CAR_CONNECTION_STATE;
-import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
+//import static androidx.car.app.utils.LogTags.TAG_CONNECTION_TO_CAR;
 
 import android.content.AsyncQueryHandler;
 import android.content.BroadcastReceiver;
@@ -45,6 +45,7 @@ final class CarConnectionTypeLiveData extends LiveData<@ConnectionType Integer>
     @VisibleForTesting
     static final String CAR_CONNECTION_AUTHORITY = "androidx.car.app.connection";
 
+    private static final String TAG_CONNECTION_TO_CAR = "fairemail";
     private static final int QUERY_TOKEN = 42;
     private static final Uri PROJECTION_HOST_URI = new Uri.Builder().scheme("content").authority(
             CAR_CONNECTION_AUTHORITY).build();

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -109,6 +109,7 @@ public class AdapterFolder extends RecyclerView.Adapter<AdapterFolder.ViewHolder
     private int colorUnread;
     private int colorControlNormal;
     private int colorSeparator;
+    private boolean debug;
 
     private String search = null;
     private List<Long> disabledIds = new ArrayList<>();
@@ -416,7 +417,7 @@ else if (all.size() < DENSE_ITEMS_THRESHOLD_MANY)
                                 ? textColorPrimary : textColorSecondary));
                 ibSync.setEnabled(folder.last_sync != null);
 
-                tvKeywords.setText(BuildConfig.DEBUG ?
+                tvKeywords.setText(debug ?
                         (folder.separator == null ? "" : folder.separator + " ") +
                                 (folder.namespace == null ? "" : folder.namespace + " ") +
                                 (folder.flags == null ? null : TextUtils.join(" ", folder.flags) + " ") +
@@ -1367,6 +1368,7 @@ private void onActionDeleteFolder() {
         this.colorUnread = (highlight_unread ? colorHighlight : Helper.resolveColor(context, R.attr.colorUnread));
         this.colorControlNormal = Helper.resolveColor(context, R.attr.colorControlNormal);
         this.colorSeparator = Helper.resolveColor(context, R.attr.colorSeparator);
+        this.debug = prefs.getBoolean("debug", false);
 
         setHasStableIds(true);
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -5237,7 +5237,8 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Notif
         if (redacted)
             notify_summary = true;
         if (notify_screen_on &&
-                !(Build.VERSION.SDK_INT <= Build.VERSION_CODES.TIRAMISU ||
+                !(BuildConfig.DEBUG ||
+                        Build.VERSION.SDK_INT <= Build.VERSION_CODES.TIRAMISU ||
                         Helper.hasPermission(context, "android.permission.TURN_SCREEN_ON")))
             notify_screen_on = false;
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -502,7 +502,8 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
         });
 
         grpScreenOn.setVisibility(
-                Build.VERSION.SDK_INT <= Build.VERSION_CODES.TIRAMISU ||
+                BuildConfig.DEBUG ||
+                        Build.VERSION.SDK_INT <= Build.VERSION_CODES.TIRAMISU ||
                         hasPermission("android.permission.TURN_SCREEN_ON")
                         ? View.VISIBLE : View.GONE);
         swNotifyScreenOn.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -769,7 +769,7 @@ else if (false) {
                                     // Special case:
                                     //   external draft: very dark/light font
                                     double lum = ColorUtils.calculateLuminance(color);
-                                    if (lum < 1 - MIN_LUMINANCE_COMPOSE || lum > MIN_LUMINANCE_COMPOSE)
+                                    if (dark ? lum < 1 - MIN_LUMINANCE_COMPOSE : lum > MIN_LUMINANCE_COMPOSE)
                                         color = null;
                                 }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1872,7 +1872,8 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
         }
 
         // Common reference
-        if (thread == null && refs.size() > 0) {
+        boolean thread_byref = prefs.getBoolean("thread_byref", true);
+        if (thread == null && refs.size() > 0 && thread_byref) {
             String ref = refs.get(0);
             if (!Objects.equals(ref, msgid))
                 thread = account + ":" + ref;

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1047,7 +1047,7 @@ static void view(Context context, Uri uri, String mimeType, boolean browse, bool
         String open_with_pkg = prefs.getString("open_with_pkg", null);
         boolean open_with_tabs = prefs.getBoolean("open_with_tabs", true);
 
-        Log.i("View=" + uri +
+        EntityLog.log(context, "View=" + uri +
                 " browse=" + browse +
                 " task=" + task +
                 " pkg=" + open_with_pkg + ":" + open_with_tabs +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2752,7 +2752,7 @@ protected void onExecuted(Bundle args, DeepL.Translation translation) {
 
                         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                         boolean small = prefs.getBoolean("deepl_small", false);
-                        boolean replace = prefs.getBoolean("deepl_replace", false);
+                        boolean replace = (!small && prefs.getBoolean("deepl_replace", false));
 
                         // Insert translated text
                         /*

File: app/src/main/java/eu/faircode/email/FragmentDialogCalendar.java
Patch:
@@ -137,7 +137,6 @@ public void onClick(DialogInterface dialog, int which) {
         return builder.create();
     }
 
-
     private class Calendar {
         private long id;
         private String account;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3339,7 +3339,7 @@ public static String decodeMime(String text) {
             MimeTextPart p1 = parts.get(p);
             MimeTextPart p2 = parts.get(p + 1);
             // https://bugzilla.mozilla.org/show_bug.cgi?id=1374149
-            if (!"__ISO-2022-JP__".equalsIgnoreCase(p1.charset) &&
+            if (!"ISO-2022-JP".equalsIgnoreCase(p1.charset) &&
                     p1.charset != null && p1.charset.equalsIgnoreCase(p2.charset) &&
                     p1.encoding != null && p1.encoding.equalsIgnoreCase(p2.encoding) &&
                     p1.text != null && !p1.text.endsWith("=")) {

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2720,6 +2720,9 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                 size += write(os, "Roaming=" + state.isRoaming() + "\r\n");
                 size += write(os, "\r\n");
 
+                boolean[] has46 = ConnectionHelper.has46(context);
+
+                size += write(os, "Has IPv4=" + has46[0] + " IPv6=" + has46[1] + "\r\n");
                 size += write(os, "VPN active=" + ConnectionHelper.vpnActive(context) + "\r\n");
                 size += write(os, "Data saving=" + ConnectionHelper.isDataSaving(context) + "\r\n");
                 size += write(os, "Airplane=" + ConnectionHelper.airplaneMode(context) + "\r\n");

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -351,8 +351,7 @@ String getMimeType() {
                 "application/x-zip-compressed".equals(type))
             return "application/zip"; //
 
-        if ("text/plain".equals(type) &&
-                ("ics".equals(extension) || "vcs".equals(extension)))
+        if ("ics".equals(extension) || "vcs".equals(extension))
             return "text/calendar";
 
         if ("text/plain".equals(type) && "ovpn".equals(extension))

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2726,6 +2726,7 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                 size += write(os, "\r\n");
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+                int timeout = prefs.getInt("timeout", EmailService.DEFAULT_CONNECT_TIMEOUT);
                 boolean metered = prefs.getBoolean("metered", true);
                 boolean roaming = prefs.getBoolean("roaming", true);
                 boolean rlah = prefs.getBoolean("rlah", true);
@@ -2734,6 +2735,7 @@ private static void attachNetworkInfo(Context context, long id, int sequence) {
                 boolean require_validated_captive = prefs.getBoolean("require_validated_captive", true);
                 boolean vpn_only = prefs.getBoolean("vpn_only", false);
 
+                size += write(os, "timeout=" + timeout + "s" + (timeout == EmailService.DEFAULT_CONNECT_TIMEOUT ? "" : " !!!") + "\r\n");
                 size += write(os, "metered=" + metered + (metered ? "" : " !!!") + "\r\n");
                 size += write(os, "roaming=" + roaming + (roaming ? "" : " !!!") + "\r\n");
                 size += write(os, "rlah=" + rlah + (rlah ? "" : " !!!") + "\r\n");

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -700,8 +700,6 @@ else if (version < 1994) {
                 editor.putBoolean("plain_only_reply", true);
         } else if (version < 2046)
             editor.remove("message_junk");
-        else if (version < 2068)
-            editor.remove("openai_temperature");
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
             editor.remove("background_service");

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -700,6 +700,8 @@ else if (version < 1994) {
                 editor.putBoolean("plain_only_reply", true);
         } else if (version < 2046)
             editor.remove("message_junk");
+        else if (version < 2068)
+            editor.remove("openai_temperature");
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
             editor.remove("background_service");

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1085,7 +1085,8 @@ public void afterTextChanged(Editable s) {
         sbOpenAiTemperature.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
-                prefs.edit().putFloat("openai_temperature", (float) progress / 10f).apply();
+                float temp = progress / 10f;
+                prefs.edit().putFloat("openai_temperature", temp).apply();
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -324,7 +324,7 @@ void setSpecials(EntityAccount account) {
     void inheritFrom(EntityFolder parent) {
         if (parent == null)
             return;
-        if (!EntityFolder.USER.equals(parent.type))
+        if (!EntityFolder.USER.equals(type))
             return;
 
         this.synchronize = parent.synchronize;

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -479,7 +479,7 @@ private void onDebugInfo() {
         new SimpleTask<Long>() {
             @Override
             protected Long onExecute(Context context, Bundle args) throws IOException, JSONException {
-                return Log.getDebugInfo(context, R.string.title_debug_info_remark, null, null).id;
+                return Log.getDebugInfo(context, "setup", R.string.title_debug_info_remark, null, null).id;
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1481,7 +1481,7 @@ protected Long onExecute(Context context, Bundle args) throws Throwable {
                                 sb.append(line).append("\r\n");
                         }
 
-                        return Log.getDebugInfo(context, R.string.title_crash_info_remark, null, sb.toString()).id;
+                        return Log.getDebugInfo(context, "crash", R.string.title_crash_info_remark, null, sb.toString()).id;
                     } finally {
                         file.delete();
                     }
@@ -2210,7 +2210,7 @@ protected void onPreExecute(Bundle args) {
 
             @Override
             protected Long onExecute(Context context, Bundle args) throws IOException, JSONException {
-                return Log.getDebugInfo(context, R.string.title_debug_info_remark, null, null).id;
+                return Log.getDebugInfo(context, "main", R.string.title_debug_info_remark, null, null).id;
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -419,6 +419,7 @@ else if (all.size() < DENSE_ITEMS_THRESHOLD_MANY)
                 tvKeywords.setText(BuildConfig.DEBUG ?
                         (folder.separator == null ? "" : folder.separator + " ") +
                                 (folder.namespace == null ? "" : folder.namespace + " ") +
+                                (folder.flags == null ? null : TextUtils.join(" ", folder.flags) + " ") +
                                 TextUtils.join(" ", folder.keywords) : null);
                 tvKeywords.setVisibility(show_flagged ? View.VISIBLE : View.GONE);
 

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -359,6 +359,9 @@ int setFolderProperties(
             " AND NOT (sync_days IS :sync_days AND keep_days IS :keep_days)")
     int setFolderProperties(long id, int sync_days, int keep_days);
 
+    @Query("UPDATE folder SET flags = :flags WHERE id = :id AND NOT (flags IS :flags)")
+    int setFolderFlags(long id, String flags);
+
     @Query("UPDATE folder SET keywords = :keywords WHERE id = :id AND NOT (keywords IS :keywords)")
     int setFolderKeywords(long id, String keywords);
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -125,7 +125,8 @@ public class EntityFolder extends EntityOrder implements Serializable {
     public Boolean notify = false;
 
     public Integer total; // messages on server
-    public String[] keywords;
+    public String[] flags; // system flags
+    public String[] keywords; // user flags
 
     @NonNull
     public Long selected_last = 0L;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2602,6 +2602,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 jfolder.put("selectable", folder.selectable);
                                 jfolder.put("inferiors", folder.inferiors);
                                 jfolder.put("auto_add", folder.auto_add);
+                                jfolder.put("flags", folder.flags == null ? null : TextUtils.join(",", folder.flags));
+                                jfolder.put("keywords", folder.keywords == null ? null : TextUtils.join(",", folder.keywords));
                                 jfolder.put("tbc", Boolean.TRUE.equals(folder.tbc));
                                 jfolder.put("rename", folder.rename);
                                 jfolder.put("tbd", Boolean.TRUE.equals(folder.tbd));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2491,7 +2491,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 " sync=" + account.synchronize +
                                 " exempted=" + account.poll_exempted +
                                 " poll=" + account.poll_interval +
-                                " ondemand=" + account.ondemand +
+                                " ondemand=" + account.ondemand + (account.ondemand ? " !!!" : "") +
                                 " msgs=" + content + "/" + messages + " max=" + account.max_messages +
                                 " ops=" + db.operation().getOperationCount(account.id) +
                                 " schedule=" + (!ignore_schedule) + (ignore_schedule ? " !!!" : "") +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2405,8 +2405,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                 if (schedule) {
                     int minuteStart = prefs.getInt("schedule_start", 0);
                     int minuteEnd = prefs.getInt("schedule_end", 0);
-                    int minuteStartWeekend = prefs.getInt("schedule_start_weekend", 0);
-                    int minuteEndWeekend = prefs.getInt("schedule_end_weekend", 0);
+                    int minuteStartWeekend = prefs.getInt("schedule_start_weekend", minuteStart);
+                    int minuteEndWeekend = prefs.getInt("schedule_end_weekend", minuteEnd);
 
                     size += write(os, String.format("schedule %s...%s weekend %s...%s\r\n",
                             CalendarHelper.formatHour(context, minuteStart),

File: app/src/extra/java/eu/faircode/email/Send.java
Patch:
@@ -72,7 +72,7 @@ public class Send {
 
     static final int DEFAULT_DLIMIT = 10;
     static final int DEFAULT_TLIMIT = 24; // hours
-    static final String DEFAULT_SERVER = "https://send.vis.ee/";
+    static final String DEFAULT_SERVER = "https://send.zcyph.cc/";
 
     private static final int TIMEOUT = 20 * 1000; // milliseconds
 

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -1485,7 +1485,8 @@ public static EntityRule fromJSON(JSONObject json) throws JSONException {
         if (json.has("uuid"))
             rule.uuid = json.getString("uuid");
         rule.name = json.getString("name");
-        rule.group = json.getString("group");
+        if (json.has("group") && !json.isNull("group"))
+            rule.group = json.getString("group");
         rule.order = json.getInt("order");
         rule.enabled = json.getBoolean("enabled");
         rule.daily = json.optBoolean("daily");

File: app/src/main/java/eu/faircode/email/CalendarHelper.java
Patch:
@@ -162,8 +162,8 @@ static Long insert(Context context, ICalendar icalendar, VEvent event, int statu
                 TimezoneInfo tzinfo = icalendar.getTimezoneInfo();
                 TimezoneAssignment tza = (tzinfo == null ? null : tzinfo.getTimezone(event.getDateStart()));
                 TimeZone tz = (tza == null ? null : tza.getTimeZone());
-                if (tz != null)
-                    values.put(CalendarContract.Events.EVENT_TIMEZONE, tz.getID());
+                values.put(CalendarContract.Events.EVENT_TIMEZONE,
+                        tz == null ? TimeZone.getDefault().getID() : tz.getID());
 
                 values.put(CalendarContract.Events.DTSTART, start.getTime());
                 values.put(CalendarContract.Events.DTEND, end.getTime());

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1420,7 +1420,8 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
                 time = new SpannableStringBuilderEx(Helper.getRelativeDateSpanString(context, message.received));
             else
                 time = new SpannableStringBuilderEx(
-                        (date || date_fixed) && FragmentMessages.SORT_DATE_HEADER.contains(sort)
+                        (date && !date_fixed && FragmentMessages.SORT_DATE_HEADER.contains(sort)) ||
+                                (date_fixed && "time".equals(sort))
                                 ? TF.format(message.received)
                                 : Helper.getRelativeTimeSpanString(context, message.received));
             if (show_recent && message.recent)

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -789,6 +789,7 @@ List<Long> getMessageUnseen(
     @Transaction
     @Query("UPDATE message SET ui_hide = 1" +
             " WHERE folder = :folder" +
+            " AND NOT ui_flagged" +
             " AND id NOT IN (" +
             "    SELECT id FROM message" +
             "    WHERE folder = :folder" +
@@ -1015,6 +1016,7 @@ List<Long> getMessageUnseen(
     @Transaction
     @Query("DELETE FROM message" +
             " WHERE folder = :folder" +
+            " AND NOT ui_flagged" +
             " AND id NOT IN (" +
             "    SELECT id FROM message" +
             "    WHERE folder = :folder" +

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3430,8 +3430,8 @@ tuple.ui_busy < new Date().getTime())
             }
 
             if (account.max_messages != null && !account.leave_on_device) {
-                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages) + flagged, reversed);
-                int deleted = db.message().deleteMessagesKeep(folder.id, Math.abs(account.max_messages) + flagged + 100, reversed);
+                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages) + flagged);
+                int deleted = db.message().deleteMessagesKeep(folder.id, Math.abs(account.max_messages) + flagged + 100);
                 EntityLog.log(context, account.name + " POP" +
                         " cleanup max=" + account.max_messages + "" +
                         " hidden=" + hidden + " deleted=" + deleted);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3430,8 +3430,8 @@ tuple.ui_busy < new Date().getTime())
             }
 
             if (account.max_messages != null && !account.leave_on_device) {
-                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages) + flagged);
-                int deleted = db.message().deleteMessagesKeep(folder.id, Math.abs(account.max_messages) + flagged + 100);
+                int hidden = db.message().setMessagesUiHide(folder.id, Math.abs(account.max_messages) + flagged, reversed);
+                int deleted = db.message().deleteMessagesKeep(folder.id, Math.abs(account.max_messages) + flagged + 100, reversed);
                 EntityLog.log(context, account.name + " POP" +
                         " cleanup max=" + account.max_messages + "" +
                         " hidden=" + hidden + " deleted=" + deleted);

File: app/src/main/java/eu/faircode/email/CalendarHelper.java
Patch:
@@ -81,7 +81,9 @@ static Long exists(Context context, String selectedAccount, String selectedName,
                         " OR " + CalendarContract.Calendars.CALENDAR_DISPLAY_NAME + " = ?)"
                         : CalendarContract.Calendars.CALENDAR_DISPLAY_NAME + " = ?") +
                         " AND " + CalendarContract.Events.UID_2445 + " = ?",
-                new String[]{selectedAccount, selectedName, uid},
+                selectedName == null
+                        ? new String[]{selectedAccount, selectedAccount, uid}
+                        : new String[]{selectedAccount, selectedName, uid},
                 null)) {
             if (cursor.moveToNext())
                 return cursor.getLong(0);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1396,7 +1396,6 @@ public void tail(Node node, int depth) {
             // Remove spacer, etc
             if (!show_images && !(inline_images && isInline) &&
                     TextUtils.isEmpty(img.attr("x-tracking"))) {
-                Log.i("Removing small image");
                 Integer width = Helper.parseInt(img.attr("width").trim());
                 Integer height = Helper.parseInt(img.attr("height").trim());
                 if (width != null && height != null) {
@@ -1407,6 +1406,7 @@ public void tail(Node node, int depth) {
                 }
                 if ((width != null && width <= SMALL_IMAGE_SIZE) ||
                         (height != null && height <= SMALL_IMAGE_SIZE)) {
+                    Log.i("Removing small image src=" + src);
                     img.remove();
                     continue;
                 }

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -504,7 +504,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
-        menu.findItem(R.id.menu_junk).setVisible(BuildConfig.DEBUG);
+        menu.findItem(R.id.menu_junk)
+                .setVisible(BuildConfig.DEBUG)
+                .setChecked(junk);
         menu.findItem(R.id.menu_save).setIcon(junk
                 ? R.drawable.twotone_report_24
                 : R.drawable.twotone_move_to_inbox_24);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2329,11 +2329,11 @@ private void setOptions() {
 
         swClassification.setChecked(prefs.getBoolean("classification", false));
 
-        int class_min_chance = prefs.getInt("class_min_probability", 15);
+        int class_min_chance = prefs.getInt("class_min_probability", 5);
         tvClassMinProbability.setText(getString(R.string.title_advanced_class_min_chance, NF.format(class_min_chance)));
         sbClassMinProbability.setProgress(class_min_chance);
 
-        int class_min_difference = prefs.getInt("class_min_difference", 50);
+        int class_min_difference = prefs.getInt("class_min_difference", 40);
         tvClassMinDifference.setText(getString(R.string.title_advanced_class_min_difference, NF.format(class_min_difference)));
         sbClassMinDifference.setProgress(class_min_difference);
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -280,6 +280,9 @@ String getMimeType() {
         if ("pptx".equals(extension))
             return "application/vnd.openxmlformats-officedocument.presentationml.presentation";
 
+        if ("ppsx".equals(extension))
+            return "application/vnd.openxmlformats-officedocument.presentationml.slideshow";
+
         // OpenOffice
 
         if ("odt".equals(extension))

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3119,7 +3119,7 @@ static String punyCode(String email) {
         return email;
     }
 
-    static String decodeMime(String text) {
+    public static String decodeMime(String text) {
         if (text == null)
             return null;
 

File: app/src/main/java/javax/mail/internet/InternetAddress.java
Patch:
@@ -253,7 +253,7 @@ public String getPersonal() {
 	
 	if (encodedPersonal != null) {
 	    try {
-		personal = MimeUtility.decodeText(encodedPersonal);
+		personal = eu.faircode.email.MessageHelper.decodeMime(encodedPersonal);
 		return personal;
 	    } catch (Exception ex) {
 		// 1. ParseException: either its an unencoded string or

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3171,7 +3171,8 @@ static String decodeMime(String text) {
             // https://bugzilla.mozilla.org/show_bug.cgi?id=1374149
             if (!"__ISO-2022-JP__".equalsIgnoreCase(p1.charset) &&
                     p1.charset != null && p1.charset.equalsIgnoreCase(p2.charset) &&
-                    p1.encoding != null && p1.encoding.equalsIgnoreCase(p2.encoding)) {
+                    p1.encoding != null && p1.encoding.equalsIgnoreCase(p2.encoding) &&
+                    p1.text != null && !p1.text.endsWith("=")) {
                 /*
                 try {
                     byte[] b1 = decodeWord(p1.text, p1.encoding, p1.charset);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2648,7 +2648,7 @@ protected void onExecuted(Bundle args, DeepL.Translation translation) {
                                     paragraph.first, paragraph.second, RelativeSizeSpan.class);
                             for (RelativeSizeSpan span : spans)
                                 edit.removeSpan(span);
-                            edit.setSpan(new RelativeSizeSpan(HtmlHelper.FONT_SMALL),
+                            edit.setSpan(new RelativeSizeSpan(BuildConfig.DEBUG ? HtmlHelper.FONT_XSMALL : HtmlHelper.FONT_SMALL),
                                     paragraph.first, paragraph.second,
                                     Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                         }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -4045,6 +4045,9 @@ private int decodeCompressed(Context context, EntityAttachment local, int subseq
         }
 
         private void decodeICalendar(Context context, EntityAttachment local) {
+            if (BuildConfig.DEBUG)
+                return;
+
             DB db = DB.getInstance(context);
             try {
                 boolean permission = Helper.hasPermission(context, Manifest.permission.WRITE_CALENDAR);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2510,7 +2510,7 @@ protected void onExecuted(Bundle args, OpenAI.Message[] messages) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Log.unexpectedError(getParentFragmentManager(), ex);
+                Log.unexpectedError(getParentFragmentManager(), ex, !(ex instanceof IOException));
             }
         }.execute(this, args, "openai");
     }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2444,7 +2444,7 @@ protected OpenAI.Message[] onExecute(Context context, Bundle args) throws Throwa
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 String model = prefs.getString("openai_model", "gpt-3.5-turbo");
-                float temperature = prefs.getFloat("openai_temperature", 1.0f);
+                float temperature = prefs.getFloat("openai_temperature", 0.5f);
 
                 OpenAI.Message[] completions =
                         OpenAI.completeChat(context, model, result.toArray(new OpenAI.Message[0]), temperature, 1);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2339,7 +2339,7 @@ private void setOptions() {
         tilOpenAi.getEditText().setText(prefs.getString("openai_apikey", null));
         etOpenAiModel.setText(prefs.getString("openai_model", null));
 
-        float temperature = prefs.getFloat("openai_temperature", 1f);
+        float temperature = prefs.getFloat("openai_temperature", 0.5f);
         tvOpenAiTemperature.setText(getString(R.string.title_advanced_openai_temperature, NF.format(temperature)));
         sbOpenAiTemperature.setProgress(Math.round(temperature * 10));
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1356,7 +1356,7 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
 
                 boolean verified = (auths == 3 && (!check_tls || Boolean.TRUE.equals(message.tls)));
 
-                if (message.dkim == null && message.spf == null && message.dkim == null)
+                if (message.dkim == null && message.spf == null && message.dmarc == null)
                     ibAuth.setImageLevel(1);
                 else
                     ibAuth.setImageLevel(auths + 2);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4826,6 +4826,7 @@ private void onHelp(TupleMessageEx message) {
                 intent.putExtra("message", message.error);
                 intent.putExtra("provider", "outlookgraph");
                 intent.putExtra("account", message.account);
+                intent.putExtra("protocol", message.accountProtocol);
                 intent.putExtra("identity", message.identity);
                 intent.putExtra("authorize", true);
                 intent.putExtra("personal", message.identityName);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2062,6 +2062,8 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append(String.format("Contact lookup: %d cached: %d\r\n",
                 contacts[0], contacts[1]));
 
+        sb.append(String.format("Accessibility: %b\r\n", Helper.isAccessibilityEnabled(context)));
+
         String charset = MimeUtility.getDefaultJavaCharset();
         sb.append(String.format("Default charset: %s/%s\r\n", charset, MimeUtility.mimeCharset(charset)));
 

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -119,9 +119,9 @@ public interface DaoIdentity {
             " SET password = :password, auth_type = :new_auth_type, provider = :provider" +
             " WHERE account = :account" +
             " AND user = :user" +
-            " AND (auth_type = :auth_type OR auth_type = " + ServiceAuthenticator.AUTH_TYPE_GRAPH + ")" +
+            " AND (auth_type = :auth_type OR auth_type IS NULL)" +
             " AND NOT (password IS :password AND auth_type IS :new_auth_type AND provider = :provider)")
-    int setIdentityPassword(long account, String user, String password, int auth_type, int new_auth_type, String provider);
+    int setIdentityPassword(long account, String user, String password, Integer auth_type, int new_auth_type, String provider);
 
     @Query("UPDATE identity" +
             " SET fingerprint = :fingerprint" +

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -992,7 +992,7 @@ else if (EntityFolder.ARCHIVE.equals(folder.type))
                         db.account().setAccountPassword(update.id, state[0], AUTH_TYPE_OAUTH, provider.id);
                         db.identity().setIdentityPassword(update.id, username,
                                 state[state.length - 1],
-                                update.auth_type,
+                                null,
                                 (state.length == 1 ? AUTH_TYPE_OAUTH : AUTH_TYPE_GRAPH),
                                 provider.id);
                     }

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -119,7 +119,7 @@ public interface DaoIdentity {
             " SET password = :password, auth_type = :new_auth_type, provider = :provider" +
             " WHERE account = :account" +
             " AND user = :user" +
-            " AND auth_type = :auth_type" +
+            " AND (auth_type = :auth_type OR auth_type = " + ServiceAuthenticator.AUTH_TYPE_GRAPH + ")" +
             " AND NOT (password IS :password AND auth_type IS :new_auth_type AND provider = :provider)")
     int setIdentityPassword(long account, String user, String password, int auth_type, int new_auth_type, String provider);
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -752,7 +752,7 @@ private void onSend(EntityMessage message) throws JSONException, MessagingExcept
                 db.identity().setIdentityState(ident.id, "connecting");
 
                 AuthState authState = AuthState.jsonDeserialize(ident.password);
-                ServiceAuthenticator.OAuthRefresh(ServiceSend.this, ident.provider, ident.user, authState, false);
+                ServiceAuthenticator.OAuthRefresh(ServiceSend.this, ident.provider, ident.auth_type, ident.user, authState, false);
                 Long expiration = authState.getAccessTokenExpirationTime();
                 if (expiration != null)
                     EntityLog.log(ServiceSend.this, ident.user + " token expiration=" + new Date(expiration));

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -269,6 +269,9 @@ static String generateMessageId(String domain) {
     }
 
     String getLink() {
+        // adb shell pm set-app-links --package eu.faircode.email 0 all
+        // adb shell pm verify-app-links --re-verify eu.faircode.email
+        // adb shell pm get-app-links eu.faircode.email
         return "https://link.fairemail.net/#" + id;
     }
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2434,6 +2434,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         for (TupleFolderEx folder : folders)
                             if (folder.synchronize) {
                                 int unseen = db.message().countUnseen(folder.id);
+                                int hidden = db.message().countHidden(folder.id);
                                 int notifying = db.message().countNotifying(folder.id);
                                 size += write(os, "- " + folder.name + " " +
                                         folder.type + (folder.inherited_type == null ? "" : "/" + folder.inherited_type) +
@@ -2443,7 +2444,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                         " days=" + folder.sync_days + "/" + folder.keep_days +
                                         " msgs=" + folder.content + "/" + folder.messages + "/" + folder.total +
                                         " ops=" + db.operation().getOperationCount(folder.id, null) +
-                                        " unseen=" + unseen + " notifying=" + notifying +
+                                        " unseen=" + unseen + " hidden=" + hidden + " notifying=" + notifying +
                                         " " + folder.state +
                                         (folder.last_sync == null ? "" : " " + dtf.format(folder.last_sync)) +
                                         "\r\n");

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2420,7 +2420,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 " exempted=" + account.poll_exempted +
                                 " poll=" + account.poll_interval +
                                 " ondemand=" + account.ondemand +
-                                " msgs=" + content + "/" + messages +
+                                " msgs=" + content + "/" + messages + " max=" + account.max_messages +
                                 " ops=" + db.operation().getOperationCount(account.id) +
                                 " schedule=" + (!ignore_schedule) + (ignore_schedule ? " !!!" : "") +
                                 " unmetered=" + unmetered + (unmetered ? " !!!" : "") +

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -567,6 +567,8 @@ public FilterResult tail(Node node, int depth) {
             safelist.addTags("center").addAttributes(":all", "align");
         if (!view)
             safelist.addProtocols("img", "src", "content");
+        if (BuildConfig.DEBUG)
+            safelist.addAttributes(":all", "x-computed");
 
         final Document document = new Cleaner(safelist).clean(parsed);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1870,7 +1870,7 @@ private static String mergeStyles(String base, String style, boolean element) {
             }
 
         for (String key : baseParams.keySet())
-            if (!STYLE_NO_INHERIT.contains(key))
+            if (!STYLE_NO_INHERIT.contains(key) || element)
                 result.put(key, baseParams.get(key));
 
         return TextUtils.join(";", result.values());

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2544,6 +2544,9 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 jfolder.put("selectable", folder.selectable);
                                 jfolder.put("inferiors", folder.inferiors);
                                 jfolder.put("auto_add", folder.auto_add);
+                                jfolder.put("tbc", Boolean.TRUE.equals(folder.tbc));
+                                jfolder.put("rename", folder.rename);
+                                jfolder.put("tbd", Boolean.TRUE.equals(folder.tbd));
                                 jfolder.put("operations", db.operation().getOperationCount(folder.id, null));
                                 jfolder.put("error", folder.error);
                                 if (folder.last_sync != null)

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -709,7 +709,7 @@ public void run() {
 
                     if (provider != null &&
                             provider.imap != null && provider.smtp != null) {
-                        tvUser.setText("-");
+                        tvUser.setText(TextUtils.isEmpty(provider.username) ? "-" : provider.username);
                         tvImap.setText(provider.imap.toString());
                         tvSmtp.setText(provider.smtp.toString());
                         grpSetup.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -351,6 +351,7 @@ static void upgrade(Context context) {
             EntityLog.log(context, "Upgrading from " + version + " to " + BuildConfig.VERSION_CODE);
 
         SharedPreferences.Editor editor = prefs.edit();
+        editor.remove("max_backoff_power");
 
         if (version < BuildConfig.VERSION_CODE)
             editor.remove("crash_report_count");

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -203,7 +203,7 @@ public class Helper {
     static final String PRIVACY_URI = "https://github.com/M66B/FairEmail/blob/master/PRIVACY.md";
     static final String TUTORIALS_URI = "https://github.com/M66B/FairEmail/tree/master/tutorials#main";
     static final String XDA_URI = "https://forum.xda-developers.com/showthread.php?t=3824168";
-    static final String SUPPORT_URI = "https://contact.faircode.eu/";
+    static final String SUPPORT_URI = "https://contact.faircode.eu/?product=fairemailsupport";
     static final String TEST_URI = "https://play.google.com/apps/testing/" + BuildConfig.APPLICATION_ID;
     static final String BIMI_PRIVACY_URI = "https://datatracker.ietf.org/doc/html/draft-brotman-ietf-bimi-guidance-03#section-7.4";
     static final String LT_PRIVACY_URI = "https://languagetool.org/legal/privacy";
@@ -1223,7 +1223,6 @@ static Uri getSupportUri(Context context, String reference) {
 
         return Uri.parse(SUPPORT_URI)
                 .buildUpon()
-                .appendQueryParameter("product", "fairemailsupport")
                 .appendQueryParameter("version", BuildConfig.VERSION_NAME + BuildConfig.REVISION)
                 .appendQueryParameter("locale", slocale.toString())
                 .appendQueryParameter("language", language == null ? "" : language)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1420,7 +1420,7 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
         if (target == null)
             throw new FolderNotFoundException();
         if (folder.id.equals(target.id))
-            throw new IllegalArgumentException("self");
+            throw new IllegalArgumentException("self type=" + folder.type + "/" + target.type);
         if (!target.selectable)
             throw new IllegalArgumentException("not selectable type=" + target.type);
 

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -99,6 +99,7 @@ public interface DaoAccount {
             "    AND folder.type <> '" + EntityFolder.JUNK + "'" +
             "    AND folder.type <> '" + EntityFolder.DRAFTS + "'" +
             "    AND folder.type <> '" + EntityFolder.OUTBOX + "'" +
+            "    AND folder.count_unread" +
             "    AND NOT ui_seen" +
             "    AND NOT ui_hide) AS unseen" +
             " FROM account" +

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -330,6 +330,7 @@ public interface DaoFolder {
             ", color = :color" +
             ", unified = :unified" +
             ", navigation = :navigation" +
+            ", count_unread = :count_unread" +
             ", notify = :notify" +
             ", hide = :hide" +
             ", hide_seen = :hide_seen" +
@@ -345,7 +346,8 @@ public interface DaoFolder {
             " WHERE id = :id")
     int setFolderProperties(
             long id, String rename,
-            String display, Integer color, boolean unified, boolean navigation, boolean notify,
+            String display, Integer color, boolean unified,
+            boolean navigation, boolean count_unread, boolean notify,
             boolean hide, boolean hide_seen,
             boolean synchronize, boolean poll, int poll_factor, boolean download,
             boolean auto_classify_source, boolean auto_classify_target,

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -120,6 +120,8 @@ public class EntityFolder extends EntityOrder implements Serializable {
     @NonNull
     public Boolean navigation = false;
     @NonNull
+    public Boolean count_unread = true;
+    @NonNull
     public Boolean notify = false;
 
     public Integer total; // messages on server

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -2427,6 +2427,7 @@ public void migrate(@NonNull SupportSQLiteDatabase db) {
                     @Override
                     public void migrate(@NonNull SupportSQLiteDatabase db) {
                         logMigration(startVersion, endVersion);
+                        dropTriggers(db);
                         db.execSQL("UPDATE account" +
                                 " SET max_messages = MAX(max_messages, MIN(max_messages * 4," +
                                 "   (SELECT COUNT(*) FROM folder" +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2392,6 +2392,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
 
                         size += write(os, account.name + (account.primary ? "*" : "") +
                                 " " + (account.protocol == EntityAccount.TYPE_IMAP ? "IMAP" : "POP") + "/" + account.auth_type +
+                                (account.provider == null ? "" : " [" + account.provider + "]") +
                                 " " + account.host + ":" + account.port + "/" + account.encryption +
                                 " sync=" + account.synchronize +
                                 " exempted=" + account.poll_exempted +
@@ -2447,8 +2448,9 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         for (EntityIdentity identity : identities)
                             if (identity.synchronize) {
                                 size += write(os, account.name + "/" + identity.name + (identity.primary ? "*" : "") + " " +
-                                        identity.display + " " + identity.email + " " +
+                                        identity.display + " " + identity.email +
                                         (identity.self ? "" : " !self") +
+                                        (identity.provider == null ? "" : " [" + identity.provider + "]") +
                                         (TextUtils.isEmpty(identity.sender_extra_regex) ? "" : " regex=" + identity.sender_extra_regex) +
                                         (!identity.sender_extra ? "" : " edit" +
                                                 (identity.sender_extra_name ? "+name" : "-name") +

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -659,6 +659,7 @@ private boolean onActionMove(Context context, EntityMessage message, JSONObject
 
         if (!TextUtils.isEmpty(create)) {
             Calendar calendar = Calendar.getInstance();
+            calendar.setTimeInMillis(message.received);
             String year = String.format(Locale.ROOT, "%04d", calendar.get(Calendar.YEAR));
             String month = String.format(Locale.ROOT, "%02d", calendar.get(Calendar.MONTH) + 1);
             String week = String.format(Locale.ROOT, "%02d", calendar.get(Calendar.WEEK_OF_YEAR));

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -392,7 +392,7 @@ public void onSave(MessageHelper.AttachmentPart apart) {
                                 create.setType(apart.attachment.getMimeType());
                                 if (!TextUtils.isEmpty(apart.attachment.name))
                                     create.putExtra(Intent.EXTRA_TITLE, apart.attachment.name);
-                                Helper.openAdvanced(create);
+                                Helper.openAdvanced(ActivityEML.this, create);
                                 if (create.resolveActivity(getPackageManager()) == null) // system whitelisted
                                     ToastEx.makeText(ActivityEML.this, R.string.title_no_saf, Toast.LENGTH_LONG).show();
                                 else

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -309,7 +309,7 @@ private void onMenuSelectFile() {
         intent.addCategory(Intent.CATEGORY_OPENABLE);
         intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         intent.setType("text/*");
-        Helper.openAdvanced(intent);
+        Helper.openAdvanced(ActivitySignature.this, intent);
         startActivityForResult(intent, REQUEST_FILE);
     }
 
@@ -414,7 +414,7 @@ private void insertImage() {
         intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
         intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         intent.setType("image/*");
-        Helper.openAdvanced(intent);
+        Helper.openAdvanced(ActivitySignature.this, intent);
         startActivityForResult(intent, REQUEST_IMAGE);
     }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1170,7 +1170,7 @@ private void onActionExportMessages() {
                     intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                     intent.setType("*/*");
                     intent.putExtra(Intent.EXTRA_TITLE, filename);
-                    Helper.openAdvanced(intent);
+                    Helper.openAdvanced(context, intent);
 
                     if (intent.resolveActivity(context.getPackageManager()) == null) { //  // system/GET_CONTENT whitelisted
                         ToastEx.makeText(context, R.string.title_no_saf, Toast.LENGTH_LONG).show();

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -383,7 +383,7 @@ private void onInsertImage() {
         intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
         intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         intent.setType("image/*");
-        Helper.openAdvanced(intent);
+        Helper.openAdvanced(getContext(), intent);
         startActivityForResult(intent, REQUEST_IMAGE);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentContacts.java
Patch:
@@ -392,7 +392,7 @@ private void onAccountSelected(Bundle args) {
             intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
             intent.setType("*/*");
             intent.putExtra(Intent.EXTRA_TITLE, "fairemail.vcf");
-            Helper.openAdvanced(intent);
+            Helper.openAdvanced(context, intent);
             startActivityForResult(Helper.getChooser(context, intent), REQUEST_EXPORT);
         } else {
             Intent open = new Intent(Intent.ACTION_GET_CONTENT);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2502,7 +2502,7 @@ private void onExportClassifier(Context context) {
         intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
         intent.setType("*/*");
         intent.putExtra(Intent.EXTRA_TITLE, "classifier.json");
-        Helper.openAdvanced(intent);
+        Helper.openAdvanced(context, intent);
         startActivityForResult(intent, REQUEST_CLASSIFIER);
     }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1897,7 +1897,8 @@ private static void onDelete(Context context, JSONArray jargs, EntityAccount acc
     private static void onDelete(Context context, JSONArray jargs, EntityAccount account, EntityFolder folder, List<EntityMessage> messages, POP3Folder ifolder, POP3Store istore, State state) throws MessagingException, IOException {
         // Delete from server
         if (!EntityFolder.INBOX.equals(folder.type) || account.leave_deleted)
-            throw new IllegalArgumentException("POP3: invalid DELETE");
+            throw new IllegalArgumentException("POP3: invalid DELETE" +
+                    " folder=" + folder.type + " leave=" + account.leave_deleted);
 
         Map<EntityMessage, Message> map = findMessages(context, folder, messages, istore, ifolder);
         for (EntityMessage message : messages) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4945,6 +4945,8 @@ else if ("dsn".equals(action)) {
                                         List<Address> addresses = new ArrayList<>();
                                         if (data.draft.from != null)
                                             addresses.addAll(Arrays.asList(data.draft.from));
+                                        if (data.draft.to != null)
+                                            addresses.addAll(Arrays.asList(data.draft.to));
                                         if (ref.cc != null)
                                             addresses.addAll(Arrays.asList(ref.cc));
                                         if (ref.bcc != null)

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1595,7 +1595,8 @@ protected void onExecuted(Bundle args, final EntityAccount account) {
                         boolean found = false;
                         for (int pos = 2; pos < providers.size(); pos++) {
                             EmailProvider provider = providers.get(pos);
-                            if ((provider.oauth != null) == (account.auth_type == AUTH_TYPE_OAUTH) &&
+                            if ((provider.oauth != null) ==
+                                    (account.auth_type == AUTH_TYPE_GMAIL || account.auth_type == AUTH_TYPE_OAUTH) &&
                                     provider.imap.host.equals(account.host) &&
                                     provider.imap.port == account.port &&
                                     provider.imap.starttls == (account.encryption == EmailService.ENCRYPTION_STARTTLS)) {

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -349,8 +349,9 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             //" OR (:message AND `preview` LIKE :find COLLATE NOCASE)" + // no index
             //" OR (:notes AND `notes` LIKE :find COLLATE NOCASE)" + // no index
             //" OR (:headers AND `headers` LIKE :find COLLATE NOCASE)" + // no index
-            " OR (attachment.name LIKE :find COLLATE NOCASE)" + // no index
-            " OR (attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
+            //" OR (attachment.name LIKE :find COLLATE NOCASE)" + // no index
+            //" OR (attachment.type LIKE :find COLLATE NOCASE)" +
+            ") AS matched" + // no index
             " FROM message" +
             " LEFT JOIN attachment ON attachment.message = message.id" +
             " WHERE NOT ui_hide" +

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -155,7 +155,7 @@ public void onCreate(Bundle savedInstanceState) {
         compact = prefs.getBoolean("compact_folders", true);
         show_hidden = false; // prefs.getBoolean("hidden_folders", false);
         show_flagged = prefs.getBoolean("flagged_folders", false);
-        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
 
         if (BuildConfig.DEBUG) {
             ViewModelSelected selectedModel =

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -486,7 +486,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
         cards = prefs.getBoolean("cards", true);
         dividers = prefs.getBoolean("dividers", true);
         category = prefs.getBoolean("group_category", false);

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1427,7 +1427,7 @@ private void setOptions() {
         tvColumnWidth.setText(getString(R.string.title_advanced_column_width, NF.format(column_width)));
         sbColumnWidth.setProgress(column_width);
 
-        swHideToolbar.setChecked(prefs.getBoolean("hide_toolbar", true));
+        swHideToolbar.setChecked(prefs.getBoolean("hide_toolbar", false));
         swNavOptions.setChecked(prefs.getBoolean("nav_options", true));
         swNavCategories.setChecked(prefs.getBoolean("nav_categories", false));
         swNavLastSync.setChecked(prefs.getBoolean("nav_last_sync", true));

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -155,7 +155,7 @@ public void onCreate(Bundle savedInstanceState) {
         compact = prefs.getBoolean("compact_folders", true);
         show_hidden = false; // prefs.getBoolean("hidden_folders", false);
         show_flagged = prefs.getBoolean("flagged_folders", false);
-        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
 
         if (BuildConfig.DEBUG) {
             ViewModelSelected selectedModel =

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -486,7 +486,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
         cards = prefs.getBoolean("cards", true);
         dividers = prefs.getBoolean("dividers", true);
         category = prefs.getBoolean("group_category", false);

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -155,7 +155,7 @@ public void onCreate(Bundle savedInstanceState) {
         compact = prefs.getBoolean("compact_folders", true);
         show_hidden = false; // prefs.getBoolean("hidden_folders", false);
         show_flagged = prefs.getBoolean("flagged_folders", false);
-        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
 
         if (BuildConfig.DEBUG) {
             ViewModelSelected selectedModel =

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -486,7 +486,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-        hide_toolbar = prefs.getBoolean("hide_toolbar", true);
+        hide_toolbar = prefs.getBoolean("hide_toolbar", false);
         cards = prefs.getBoolean("cards", true);
         dividers = prefs.getBoolean("dividers", true);
         category = prefs.getBoolean("group_category", false);

File: app/src/main/java/eu/faircode/email/CloudSync.java
Patch:
@@ -315,7 +315,7 @@ private static void receiveRemoteData(Context context, String user, String passw
         DB db = DB.getInstance(context);
         File dir = Helper.ensureExists(new File(context.getFilesDir(), "syncdata"));
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean cloud_receive = prefs.getBoolean("cloud_receive", true);
+        boolean cloud_receive = prefs.getBoolean("cloud_receive", false);
 
         if (!cloud_receive) {
             EntityLog.log(context, EntityLog.Type.Cloud, "Cloud skip receive");

File: app/src/main/java/eu/faircode/email/FragmentOptionsBackup.java
Patch:
@@ -248,7 +248,7 @@ public void onClick(View v) {
         Helper.linkPro(tvCloudPro);
 
         cbSend.setChecked(prefs.getBoolean("cloud_send", true));
-        cbReceive.setChecked(prefs.getBoolean("cloud_receive", true));
+        cbReceive.setChecked(prefs.getBoolean("cloud_receive", false));
 
         prefs.registerOnSharedPreferenceChangeListener(this);
         onSharedPreferenceChanged(prefs, null);

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -561,7 +561,7 @@ private static void createTriggers(@NonNull SupportSQLiteDatabase db) {
                 " AFTER UPDATE ON account" +
                 " BEGIN" +
                 "  UPDATE account SET last_modified = strftime('%s') * 1000" +
-                "  WHERE id = NEW.id" +
+                "  WHERE OLD.id = NEW.id" +
                 "  AND OLD.last_modified = NEW.last_modified" +
                 "  AND (NEW.auth_type = " + AUTH_TYPE_PASSWORD + " OR OLD.password = NEW.password)" +
                 "  AND OLD.keep_alive_ok IS NEW.keep_alive_ok" +
@@ -580,7 +580,7 @@ private static void createTriggers(@NonNull SupportSQLiteDatabase db) {
                 " AFTER UPDATE ON identity" +
                 " BEGIN" +
                 "  UPDATE identity SET last_modified = strftime('%s') * 1000" +
-                "  WHERE id = NEW.id" +
+                "  WHERE OLD.id = NEW.id" +
                 "  AND OLD.last_modified = NEW.last_modified" +
                 "  AND OLD.state IS NEW.state" +
                 "  AND OLD.error IS NEW.error" +

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -440,7 +440,7 @@ public boolean matches(@NonNull BrowserDescriptor descriptor) {
 
             String clientId = provider.oauth.clientId;
             Uri redirectUri = Uri.parse(provider.oauth.redirectUri);
-            if ("gmail".equals(id) && BuildConfig.DEBUG) {
+            if ("gmail".equals(id) && BuildConfig.DEBUG && false) {
                 clientId = "803253368361-hr8kelm53hqodj7c6brdjeb2ctn5jg3p.apps.googleusercontent.com";
                 redirectUri = Uri.parse("eu.faircode.email.debug:/");
             }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -241,7 +241,7 @@ public class MessageHelper {
             "$IsTrusted", // Fastmail
             "$X-ME-Annot-2", // Fastmail
             "$purchases", // mailbox.org
-            "$social " // mailbox.org
+            "$social" // mailbox.org
     ));
 
     // https://tools.ietf.org/html/rfc4021

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -118,7 +118,8 @@ public void beforeTextChanged(CharSequence s, int start, int count, int after) {
 
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-                if (loaded) {
+                if (loaded &&
+                        !(start == 0 && before == s.length() && count == s.length())) {
                     dirty = true;
                     saved = null;
                 }

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -377,7 +377,8 @@ else if (all.size() < DENSE_ITEMS_THRESHOLD_MANY)
                     tvType.setText(EntityFolder.localizeType(context, folder.type) +
                             (folder.inherited_type == null || !(BuildConfig.DEBUG || EntityFolder.SENT.equals(folder.inherited_type))
                                     ? ""
-                                    : "/" + EntityFolder.localizeType(context, folder.inherited_type)));
+                                    : "/" + EntityFolder.localizeType(context, folder.inherited_type)) +
+                            (EntityFolder.FLAGGED.equals(folder.subtype) ? "*" : ""));
 
                 tvTotal.setText(folder.total == null ? null : NF.format(folder.total));
 

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -304,6 +304,9 @@ public interface DaoFolder {
     @Query("UPDATE folder SET inherited_type = :type WHERE id = :id AND NOT (inherited_type IS :type)")
     int setFolderInheritedType(long id, String type);
 
+    @Query("UPDATE folder SET subtype = :subtype WHERE id = :id AND NOT (subtype IS :subtype)")
+    int setFolderSubtype(long id, String subtype);
+
     @Query("UPDATE folder SET `order` = :order WHERE id = :id AND NOT (`order` IS :order)")
     int setFolderOrder(long id, Integer order);
 

File: app/src/main/java/eu/faircode/email/CloudSync.java
Patch:
@@ -87,7 +87,7 @@ static void execute(Context context, String command)
                     continue;
                 }
 
-                if ("account".equals(s.entity) && "auth".equals(s.reference)) {
+                if ("account".equals(s.entity) && "auth".equals(s.action)) {
                     EntityAccount account = db.account().getAccountByUUID(s.reference);
                     if (account == null || account.auth_type != AUTH_TYPE_PASSWORD) {
                         if (account == null)
@@ -99,7 +99,7 @@ static void execute(Context context, String command)
                     }
                 }
 
-                if ("identity".equals(s.entity) && "auth".equals(s.reference)) {
+                if ("identity".equals(s.entity) && "auth".equals(s.action)) {
                     EntityIdentity identity = db.identity().getIdentityByUUID(s.reference);
                     if (identity == null || identity.auth_type != AUTH_TYPE_PASSWORD) {
                         if (identity == null)

File: app/src/main/java/eu/faircode/email/ActivityDmarc.java
Patch:
@@ -274,7 +274,7 @@ else if ("s".equals(text))
                                                                 String[] net = ip.substring(4).split("/");
                                                                 if (net.length > 2)
                                                                     continue;
-                                                                Integer prefix = ip.startsWith("ip4:") ? 32 : 64;
+                                                                Integer prefix = ip.startsWith("ip4:") ? 32 : 128;
                                                                 if (net.length == 2)
                                                                     prefix = Helper.parseInt(net[1]);
                                                                 if (prefix == null)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2130,7 +2130,7 @@ private static void onRaw(Context context, JSONArray jargs, EntityFolder folder,
 
     private static void onBody(Context context, JSONArray jargs, EntityFolder folder, EntityMessage message, IMAPFolder ifolder) throws MessagingException, IOException {
         boolean plain_text = jargs.optBoolean(0);
-        String charset = jargs.optString(1, null);
+        String charset = (jargs.isNull(1) ? null : jargs.optString(1, null));
 
         if (message.uid == null)
             throw new IllegalArgumentException("uid missing");

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -672,6 +672,9 @@ else if (version < 1994) {
         } else if (version < 2016) {
             if (!prefs.contains("reset_snooze"))
                 editor.putBoolean("reset_snooze", false);
+        } else if (version < 2029) {
+            if (!prefs.contains("plain_only_reply"))
+                editor.putBoolean("plain_only_reply", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4630,7 +4630,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             boolean plain_only = prefs.getBoolean("plain_only", false);
-            boolean plain_only_reply = prefs.getBoolean("plain_only_reply", true);
+            boolean plain_only_reply = prefs.getBoolean("plain_only_reply", false);
             boolean resize_reply = prefs.getBoolean("resize_reply", true);
             boolean sign_default = prefs.getBoolean("sign_default", false);
             boolean encrypt_default = prefs.getBoolean("encrypt_default", false);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -772,7 +772,7 @@ private void setOptions() {
         swAttachNew.setChecked(prefs.getBoolean("attach_new", true));
         swAutoLink.setChecked(prefs.getBoolean("auto_link", false));
         swPlainOnly.setChecked(prefs.getBoolean("plain_only", false));
-        swPlainOnlyReply.setChecked(prefs.getBoolean("plain_only_reply", true));
+        swPlainOnlyReply.setChecked(prefs.getBoolean("plain_only_reply", false));
         swFormatFlowed.setChecked(prefs.getBoolean("format_flowed", false));
         swUsenetSignature.setChecked(prefs.getBoolean("usenet_signature", false));
         swRemoveSignatures.setChecked(prefs.getBoolean("remove_signatures", false));

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -122,7 +122,7 @@ public abstract class DB extends RoomDatabase {
 
     static final String DB_NAME = "fairemail";
     static final int DEFAULT_QUERY_THREADS = 4; // AndroidX default thread count: 4
-    static final int DEFAULT_CACHE_SIZE = 10; // percentage of memory class
+    static final int DEFAULT_CACHE_SIZE = 20; // percentage of memory class
     private static final int DB_JOURNAL_SIZE_LIMIT = 1048576; // requery/sqlite-android default
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default
 

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -402,10 +402,9 @@ public void delegate() {
             }
 
             // Default disable landscape columns for small screens
-            if (!config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL)) {
+            if (!config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL))
                 editor.putBoolean("landscape", false);
-                editor.putBoolean("landscape3", false);
-            }
+            editor.putBoolean("landscape3", false);
 
             // Default send bubbles off when accessibility enabled
             if (Helper.isAccessibilityEnabled(this))

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -174,7 +174,7 @@ public class Log {
     private static final long MAX_LOG_SIZE = 8 * 1024 * 1024L;
     private static final int MAX_CRASH_REPORTS = (BuildConfig.TEST_RELEASE ? 50 : 5);
     private static final long MIN_FILE_SIZE = 1024 * 1024L;
-    private static final long MIN_ZIP_SIZE = 1024 * 1024L;
+    private static final long MIN_ZIP_SIZE = 2 * 1024 * 1024L;
     private static final String TAG = "fairemail";
 
     // https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html

File: app/src/main/java/eu/faircode/email/TupleAccountState.java
Patch:
@@ -47,6 +47,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.max_messages, other.max_messages) &&
                     this.keep_alive_noop.equals(other.keep_alive_noop) &&
                     this.poll_interval.equals(other.poll_interval) &&
+                    this.poll_exempted.equals(other.poll_exempted) &&
                     this.partial_fetch.equals(other.partial_fetch) &&
                     this.ignore_size.equals(other.ignore_size) &&
                     this.use_date.equals(other.use_date) &&

File: app/src/main/java/com/sun/mail/util/BASE64DecoderStream.java
Patch:
@@ -335,6 +335,7 @@ private int decode(byte[] outbuf, int pos, int len) throws IOException {
      */
     private int getByte() throws IOException {
 	int c;
+	int bad = 0;
 	do {
 	    if (input_pos >= input_len) {
 		try {
@@ -353,6 +354,8 @@ private int getByte() throws IOException {
 		return -2;
 	    // no, convert it
 	    c = pem_convert_array[c];
+	    if (c == -1 && ++bad > 10 && eu.faircode.email.BuildConfig.DEBUG)
+		    return -1;
 	    // loop until we get a legitimate byte
 	} while (c == -1);
 	return c;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6420,13 +6420,14 @@ private void loadMessagesNext(final boolean top) {
         @Override
         public void onLoading() {
             loading = true;
-            initialized = true;
             updateListState("Loading", SimpleTask.getCount(), adapter == null ? 0 : adapter.getItemCount());
         }
 
         @Override
         public void onLoaded(int found) {
             loading = false;
+            if (viewType == AdapterMessage.ViewType.SEARCH)
+                initialized = true;
             updateListState("Loaded found=" + found, SimpleTask.getCount(), adapter == null ? 0 : adapter.getItemCount() + found);
         }
 
@@ -6536,7 +6537,7 @@ private void updateListState(String reason, int tasks, int items) {
                 (filter_unknown && !EntityFolder.isOutgoing(type)) ||
                 (language_detection && !TextUtils.isEmpty(filter_language) && !outbox));
 
-        boolean none = (items == 0 && !loading && initialized);
+        boolean none = (items == 0 && initialized);
         boolean filtered = (filter_active && viewType != AdapterMessage.ViewType.SEARCH);
 
         pbWait.setVisibility(loading || tasks > 0 ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -1225,6 +1225,7 @@ public boolean equals(@Nullable Object obj) {
             if (obj instanceof SearchCriteria) {
                 SearchCriteria other = (SearchCriteria) obj;
                 return (Objects.equals(this.query, other.query) &&
+                        this.fts == other.fts &&
                         this.in_senders == other.in_senders &&
                         this.in_recipients == other.in_recipients &&
                         this.in_subject == other.in_subject &&

File: app/src/dummy/java/eu/faircode/email/Bimi.java
Patch:
@@ -29,6 +29,6 @@ public class Bimi {
     static Pair<Bitmap, Boolean> get(
             Context context, String _domain, String selector, int scaleToPixels)
             throws IOException {
-        throw new NotImplementedException("BIMI");
+        throw new IllegalArgumentException("BIMI");
     }
 }

File: app/src/dummy/java/eu/faircode/email/Send.java
Patch:
@@ -29,7 +29,7 @@ public class Send {
     static final String DEFAULT_SERVER = "";
 
     public static String upload(InputStream is, DocumentFile dfile, int dLimit, int timeLimit, String host, IProgress intf) {
-        throw new NotImplementedException("Send");
+        throw new IllegalArgumentException("Send");
     }
 
     public interface IProgress {

File: app/src/main/java/eu/faircode/email/TupleAccountState.java
Patch:
@@ -30,7 +30,8 @@ public class TupleAccountState extends EntityAccount {
     public boolean equals(Object obj) {
         if (obj instanceof TupleAccountState) {
             TupleAccountState other = (TupleAccountState) obj;
-            return (this.host.equals(other.host) &&
+            return (Objects.equals(this.provider, other.provider) &&
+                    this.host.equals(other.host) &&
                     this.encryption.equals(other.encryption) &&
                     this.insecure.equals(other.insecure) &&
                     this.port.equals(other.port) &&
@@ -44,6 +45,7 @@ public boolean equals(Object obj) {
                     this.leave_on_server == other.leave_on_server &&
                     this.leave_on_device == other.leave_on_device &&
                     Objects.equals(this.max_messages, other.max_messages) &&
+                    this.keep_alive_noop.equals(other.keep_alive_noop) &&
                     this.poll_interval.equals(other.poll_interval) &&
                     this.partial_fetch.equals(other.partial_fetch) &&
                     this.ignore_size.equals(other.ignore_size) &&

File: app/src/main/java/javax/mail/EventQueue.java
Patch:
@@ -89,6 +89,7 @@ synchronized void enqueue(MailEvent event,
 		executor.execute(this);
 	    } else {
 		Thread qThread = new Thread(this, "Jakarta-Mail-EventQueue");
+		qThread.setPriority(android.os.Process.THREAD_PRIORITY_BACKGROUND);
 		qThread.setDaemon(true);  // not a user thread
 		qThread.start();
 	    }

File: app/src/main/java/eu/faircode/email/AdapterRule.java
Patch:
@@ -389,7 +389,7 @@ protected Integer onExecute(Context context, Bundle args) throws JSONException,
                                     db.beginTransaction();
 
                                     EntityMessage message = db.message().getMessage(mid);
-                                    if (message == null)
+                                    if (message == null || message.ui_hide)
                                         continue;
 
                                     if (rule.matches(context, message, null, null))

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -1180,7 +1180,7 @@ protected Integer onExecute(Context context, Bundle args) throws JSONException,
                         db.beginTransaction();
 
                         EntityMessage message = db.message().getMessage(mid);
-                        if (message == null)
+                        if (message == null || message.ui_hide)
                             continue;
 
                         EntityLog.log(context, "Executing rules message=" + message.id);

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -1733,7 +1733,7 @@ protected Integer onExecute(Context context, Bundle args) throws Throwable {
                                     db.beginTransaction();
 
                                     EntityMessage message = db.message().getMessage(mid);
-                                    if (message == null)
+                                    if (message == null || message.ui_hide)
                                         continue;
 
                                     if (rule.matches(context, message, null, null))

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -668,6 +668,9 @@ else if (version < 1994) {
                     editor.putBoolean("compose_style", prefs.getBoolean("compose_block", false));
                 editor.remove("compose_block");
             }
+        } else if (version < 2016) {
+            if (!prefs.contains("reset_snooze"))
+                editor.putBoolean("reset_snooze", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -210,7 +210,7 @@ static void queue(Context context, EntityMessage message, String name, Object...
                 boolean autoread = prefs.getBoolean("autoread", false);
                 boolean autounflag = prefs.getBoolean("autounflag", false);
                 boolean reset_importance = prefs.getBoolean("reset_importance", false);
-                boolean reset_snooze = prefs.getBoolean("reset_snooze", false);
+                boolean reset_snooze = prefs.getBoolean("reset_snooze", true);
 
                 if (jargs.opt(1) != null) {
                     // rules, classify

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -624,7 +624,7 @@ private void setOptions() {
         swAutoUnflag.setChecked(prefs.getBoolean("autounflag", false));
         swAutoImportant.setChecked(prefs.getBoolean("auto_important", false));
         swResetImportance.setChecked(prefs.getBoolean("reset_importance", false));
-        swResetSnooze.setChecked(prefs.getBoolean("reset_snooze", false));
+        swResetSnooze.setChecked(prefs.getBoolean("reset_snooze", true));
         swSwipeReply.setChecked(prefs.getBoolean("swipe_reply", false));
     }
 

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -370,6 +370,7 @@ static boolean apply(int groupId, int itemId, LifecycleOwner owner, View anchor,
             }
 
             if (start == end &&
+                    itemId != R.id.menu_link &&
                     itemId != R.id.menu_clear &&
                     itemId != R.id.menu_style_align && groupId != group_style_align &&
                     itemId != R.id.menu_style_list && groupId != group_style_list &&

File: app/src/main/java/eu/faircode/email/AdapterNavSearch.java
Patch:
@@ -130,7 +130,7 @@ protected void onExecuted(Bundle args, Long[] data) {
                     try {
                         JSONObject json = new JSONObject(search.data);
                         BoundaryCallbackMessages.SearchCriteria criteria =
-                                BoundaryCallbackMessages.SearchCriteria.fromJSON(json);
+                                BoundaryCallbackMessages.SearchCriteria.fromJsonData(json);
                         criteria.id = search.id;
                         criteria.name = search.name;
                         criteria.order = search.order;

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -1249,7 +1249,7 @@ public boolean equals(@Nullable Object obj) {
                 return false;
         }
 
-        JSONObject toJson() throws JSONException {
+        JSONObject toJsonData() throws JSONException {
             JSONObject json = new JSONObject();
             json.put("query", query);
             json.put("fts", fts);
@@ -1296,7 +1296,7 @@ JSONObject toJson() throws JSONException {
             return json;
         }
 
-        public static SearchCriteria fromJSON(JSONObject json) throws JSONException {
+        public static SearchCriteria fromJsonData(JSONObject json) throws JSONException {
             SearchCriteria criteria = new SearchCriteria();
             criteria.query = json.optString("query");
             criteria.fts = json.optBoolean("fts");

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6006,7 +6006,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 search.name = args.getString("name");
                 search.order = (order < 0 ? null : order);
                 search.color = args.getInt("color", Color.TRANSPARENT);
-                search.data = criteria.toJson().toString();
+                search.data = criteria.toJsonData().toString();
 
                 if (search.color == Color.TRANSPARENT)
                     search.color = null;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1741,6 +1741,9 @@ static String formatThrowable(Throwable ex, String separator, boolean sanitize)
                 ex.getCause() instanceof SocketTimeoutException)
             ex = new Throwable("No response received from email server", ex);
 
+        if (ex.getMessage() != null && ex.getMessage().contains("Read timed out"))
+            ex = new Throwable("No response received from email server", ex);
+
         if (ex instanceof MessagingException &&
                 ex.getCause() instanceof UnknownHostException)
             ex = new Throwable("Email server address lookup failed", ex);

File: app/src/main/java/com/sun/mail/imap/IMAPBodyPart.java
Patch:
@@ -294,7 +294,8 @@ public synchronized DataHandler getDataHandler()
 		     );
 	    else if (bs.isNested() && message.isREV1() && bs.envelope != null)
 		dh = new DataHandler(
-			new IMAPNestedMessage(message, 
+			new IMAPNestedMessage(message,
+					      bs.encoding,
 					      bs.bodies[0],
 					      bs.envelope,
 					      sectionId),

File: app/src/main/java/com/sun/mail/imap/IMAPMessage.java
Patch:
@@ -830,7 +830,8 @@ else if (bs.isNested() && isREV1() && bs.envelope != null)
 		 * FETCH the components of nested messages
 		 */
 		dh = new DataHandler(
-			    new IMAPNestedMessage(this, 
+			    new IMAPNestedMessage(this,
+				bs.encoding,
 				bs.bodies[0], 
 				bs.envelope,
 				sectionId == null ? "1" : sectionId + ".1"),

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2383,7 +2383,9 @@ static void onSynchronizeFolders(
                     // Prefix folder with namespace
                     try {
                         Folder[] ns = istore.getPersonalNamespaces();
-                        if (ns != null && ns.length == 1) {
+                        Folder[] sh = istore.getSharedNamespaces();
+                        if (ns != null && ns.length == 1 &&
+                                !(sync_shared_folders && sh != null && sh.length > 0)) {
                             String n = ns[0].getFullName();
                             // Typically "" or "INBOX"
                             if (!TextUtils.isEmpty(n)) {

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -151,6 +151,7 @@ static boolean apply(int groupId, int itemId, LifecycleOwner owner, View anchor,
             }
 
             if (_start == _end &&
+                    itemId != R.id.menu_clear &&
                     itemId != R.id.menu_style_align && groupId != R.id.group_style_align &&
                     itemId != R.id.menu_style_list && groupId != R.id.group_style_list &&
                     itemId != R.id.menu_style_indentation && groupId != R.id.group_style_indentation &&
@@ -853,7 +854,7 @@ static boolean setList(int itemId, EditText etBody, int start, int end, boolean
         renumber(edit, false, context);
 
         etBody.setText(edit);
-        etBody.setSelection(select ? s : e, e);
+        etBody.setSelection(select ? s : e - 1, e - 1);
 
         return true;
     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6987,7 +6987,7 @@ protected Void onExecute(Context context, Bundle args) {
                     if (account.protocol != EntityAccount.TYPE_IMAP) {
                         if (account.auto_seen)
                             EntityOperation.queue(context, message, EntityOperation.SEEN, true);
-                    } else {
+                    } else if (message.uid != null) {
                         if (account.auto_seen)
                             EntityOperation.queue(context, message, EntityOperation.SEEN, true);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3928,7 +3928,7 @@ private void decodeICalendar(Context context, EntityAttachment local) {
                     try {
                         JSONObject jselected = new JSONObject(account.calendar);
                         selectedAccount = jselected.getString("account");
-                        selectedName = jselected.getString("name");
+                        selectedName = jselected.optString("name", null);
                     } catch (Throwable ex) {
                         Log.i(ex);
                         selectedAccount = account.calendar;

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2177,7 +2177,7 @@ private void setOptions() {
         swMainLogMem.setChecked(prefs.getBoolean("main_log_memory", false));
         swMainLogMem.setEnabled(swMainLog.isChecked());
         swProtocol.setChecked(prefs.getBoolean("protocol", false));
-        swLogInfo.setChecked(Log.isDebugLogLevel());
+        swLogInfo.setChecked(prefs.getInt("log_level", android.util.Log.WARN) <= android.util.Log.INFO);
         swDebug.setChecked(prefs.getBoolean("debug", false));
         swCanary.setChecked(prefs.getBoolean("leak_canary", false));
         swTest1.setChecked(prefs.getBoolean("test1", false));

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -321,6 +321,7 @@ public Drawable getDrawable(Element element) {
             }, null);
             etText.setText(signature);
         }
+        saved = html;
         loaded = true;
     }
 

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -290,8 +290,7 @@ private void load(String html) {
         else if (etText.isRaw())
             etText.setText(html);
         else {
-            Document d = JsoupEx.parse(html);
-            d = HtmlHelper.sanitizeView(this, d, true);
+            Document d = HtmlHelper.sanitizeCompose(this, html, true);
             Spanned signature = HtmlHelper.fromDocument(this, d, new HtmlHelper.ImageGetterEx() {
                 @Override
                 public Drawable getDrawable(Element element) {

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -229,8 +229,7 @@ protected EntityAnswer onExecute(Context context, Bundle args) {
 
                 String html = (answer == null ? args.getString("html") : answer.text);
                 if (html != null) {
-                    Document d = JsoupEx.parse(html);
-                    d = HtmlHelper.sanitizeView(context, d, true);
+                    Document d = HtmlHelper.sanitizeCompose(context, html, true);
                     Spanned spanned = HtmlHelper.fromDocument(context, d, new HtmlHelper.ImageGetterEx() {
                         @Override
                         public Drawable getDrawable(Element element) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2290,7 +2290,8 @@ public boolean getValue(String name, long id) {
         @Override
         public void setExpanded(TupleMessageEx message, boolean value, boolean scroll) {
             // Prevent flicker
-            if (value && message.accountAutoSeen) {
+            if (value && message.accountAutoSeen &&
+                    (message.uid != null || message.accountProtocol == EntityAccount.TYPE_POP)) {
                 message.unseen = 0;
                 message.ui_seen = true;
                 message.visible_unseen = 0;

File: app/src/main/java/eu/faircode/email/LanguageTool.java
Patch:
@@ -231,7 +231,7 @@ private static List<Suggestion> getSuggestions(Context context, CharSequence tex
                 Suggestion suggestion = new Suggestion();
                 suggestion.title = jmatch.getString("shortMessage");
                 suggestion.description = jmatch.getString("message");
-                suggestion.offset = jmatch.getInt("offset");
+                suggestion.offset = jmatch.getInt("offset") + start;
                 suggestion.length = jmatch.getInt("length");
 
                 JSONArray jreplacements = jmatch.getJSONArray("replacements");
@@ -380,7 +380,7 @@ static void applySuggestions(EditText etBody, int start, int end, List<Suggestio
                     Log.w("LT " + s + "..." + e + " length=" + edit.length());
                     continue;
                 }
-                edit.setSpan(span, s, e, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+                edit.setSpan(span, s, e, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE | Spanned.SPAN_COMPOSING);
             }
     }
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -442,7 +442,7 @@ else if (BuildConfig.AMAZON_RELEASE)
             etypes.setAnrs(BuildConfig.DEBUG);
             etypes.setNdkCrashes(false);
             config.setEnabledErrorTypes(etypes);
-            config.setMaxBreadcrumbs(BuildConfig.PLAY_STORE_RELEASE ? 50 : 100);
+            config.setMaxBreadcrumbs(BuildConfig.PLAY_STORE_RELEASE ? 250 : 500);
 
             Set<String> ignore = new HashSet<>();
 

File: app/src/main/java/eu/faircode/email/FragmentDialogOpenLink.java
Patch:
@@ -114,6 +114,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
 
         final Context context = getContext();
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+        boolean sanitize_links = prefs.getBoolean("sanitize_links", false);
         boolean check_links_dbl = prefs.getBoolean("check_links_dbl", BuildConfig.PLAY_STORE_RELEASE);
         boolean disconnect_links = prefs.getBoolean("disconnect_links", true);
 
@@ -575,6 +576,8 @@ protected void onException(Bundle args, Throwable ex) {
         tvDisconnectCategories.setVisibility(
                 categories == null || !BuildConfig.DEBUG ? View.GONE : View.VISIBLE);
 
+        cbSanitize.setChecked(sanitize_links);
+
         cbNotAgain.setText(context.getString(R.string.title_no_ask_for_again, uri.getHost()));
         cbNotAgain.setVisibility(
                 UriHelper.isSecure(uri) && !TextUtils.isEmpty(uri.getHost())

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -306,7 +306,7 @@ public void onClick(View v) {
                 // OAuth
                 for (EmailProvider provider : providers)
                     if (provider.oauth != null &&
-                            (provider.oauth.enabled || BuildConfig.DEBUG) &&
+                            provider.oauth.enabled &&
                             !TextUtils.isEmpty(provider.oauth.clientId)) {
                         String title = getString(R.string.title_setup_oauth, provider.description);
                         item = menu

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -281,7 +281,6 @@ else if ("email".equals(user))
                         provider.oauth.askAccount = getAttributeBooleanValue(xml, "askAccount", false);
                         provider.oauth.clientId = xml.getAttributeValue(null, "clientId");
                         provider.oauth.clientSecret = xml.getAttributeValue(null, "clientSecret");
-                        provider.oauth.pcke = getAttributeBooleanValue(xml, "pcke", false);
                         provider.oauth.scopes = xml.getAttributeValue(null, "scopes").split(",");
                         provider.oauth.authorizationEndpoint = xml.getAttributeValue(null, "authorizationEndpoint");
                         provider.oauth.tokenEndpoint = xml.getAttributeValue(null, "tokenEndpoint");
@@ -1306,7 +1305,6 @@ public static class OAuth {
         boolean askAccount;
         String clientId;
         String clientSecret;
-        boolean pcke;
         String[] scopes;
         String authorizationEndpoint;
         String tokenEndpoint;

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -460,9 +460,6 @@ public boolean matches(@NonNull BrowserDescriptor descriptor) {
                     authRequestBuilder.setLoginHint(address);
             }
 
-            if (provider.oauth.pcke)
-                authRequestBuilder.setCodeVerifier(CodeVerifierUtil.generateRandomCodeVerifier());
-
             if (!TextUtils.isEmpty(provider.oauth.prompt))
                 authRequestBuilder.setPrompt(provider.oauth.prompt);
 

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -65,7 +65,7 @@ public class EntityLog {
     @NonNull
     public String data;
 
-    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification, Rules, Debug}
+    public enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification, Rules, Debug}
 
     private static final ExecutorService executor =
             Helper.getBackgroundExecutor(1, "log");

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2911,7 +2911,7 @@ private static void onPurgeFolder(Context context, JSONArray jargs, EntityAccoun
                         ifolder.setFlags(list.toArray(new Message[0]), flags, true);
                     } catch (MessagingException ex) {
                         Log.w(ex);
-                        for (Message imessage : list)
+                        for (Message imessage : new ArrayList<>(list))
                             try {
                                 imessage.setFlag(Flags.Flag.DELETED, true);
                             } catch (MessagingException mex) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3960,8 +3960,7 @@ private void decodeICalendar(Context context, EntityAttachment local) {
 
                             try (Cursor cursor = resolver.query(CalendarContract.Calendars.CONTENT_URI,
                                     new String[]{CalendarContract.Calendars._ID},
-                                    CalendarContract.Calendars.VISIBLE + " = 1 AND " +
-                                            CalendarContract.Calendars.IS_PRIMARY + " = 1 AND " +
+                                    CalendarContract.Calendars.VISIBLE + " <> 0 AND " +
                                             CalendarContract.Calendars.ACCOUNT_NAME + " = ?" +
                                             (selectedName == null
                                                     ? ""

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1600,7 +1600,7 @@ protected UpdateInfo onExecute(Context context, Bundle args) throws Throwable {
                             // v1.1995a
                             Integer version = Helper.parseInt(c[1].substring(3, c[1].length() - 1));
                             if (version == null)
-                                return null;
+                                continue;
                             char revision = c[1].charAt(c[1].length() - 1);
 
                             if (BuildConfig.DEBUG ||
@@ -1611,8 +1611,7 @@ protected UpdateInfo onExecute(Context context, Bundle args) throws Throwable {
                                 info.html_url = BuildConfig.BITBUCKET_DOWNLOADS_URI;
                                 info.download_url = link;
                                 return info;
-                            } else
-                                return null;
+                            }
                         }
                     } else {
                         if (!jroot.has("tag_name") || jroot.isNull("tag_name"))

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1595,7 +1595,7 @@ protected UpdateInfo onExecute(Context context, Bundle args) throws Throwable {
                                     c[1].length() < 8 ||
                                     !"github".equals(c[2]) ||
                                     !"update".equals(c[3]))
-                                return null;
+                                continue;
 
                             // v1.1995a
                             Integer version = Helper.parseInt(c[1].substring(3, c[1].length() - 1));

File: app/src/main/java/eu/faircode/email/DnsBlockList.java
Patch:
@@ -71,7 +71,7 @@ public class DnsBlockList {
                     "127.0.1.106", // abused legit botnet C&C
             }),
 
-            new BlockList(true, "Spamcop", "bl.spamcop.net", true, new String[]{
+            new BlockList(false, "Spamcop", "bl.spamcop.net", true, new String[]{
                     // https://www.spamcop.net/fom-serve/cache/291.html
                     "127.0.0.2",
             }),

File: app/src/main/java/eu/faircode/email/HtmlEx.java
Patch:
@@ -43,6 +43,7 @@
 import android.text.style.URLSpan;
 import android.text.style.UnderlineSpan;
 
+import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -603,7 +604,7 @@ private <T> T[] getSpans(Spanned text, int start, int end, Class<T> type) {
                     at eu.faircode.email.FragmentCompose$54.onExecute(SourceFile:1)
                     at eu.faircode.email.SimpleTask$2.run(SourceFile:5)
              */
-            return (T[]) new Object[0];
+            return (T[]) Array.newInstance(type, 0);
         }
     }
 }

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -93,7 +93,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     @NonNull
     public Boolean download = true;
     @NonNull
-    public Boolean auto_classify; // Obsolete
+    public Boolean auto_classify = false; // Obsolete
     @NonNull
     public Boolean auto_classify_source = false;
     @NonNull

File: app/src/main/java/eu/faircode/email/ServiceAuthenticator.java
Patch:
@@ -162,7 +162,7 @@ private static void OAuthRefresh(Context context, String id, String user, AuthSt
             if (needsRefresh)
                 authState.setNeedsTokenRefresh(true);
 
-            EntityLog.log(context, EntityLog.Type.Debug, "Token user=" + id + ":" + user +
+            EntityLog.log(context, EntityLog.Type.General, "Token user=" + id + ":" + user +
                     " expiration=" + (expiration == null ? null : new Date(expiration)) +
                     " need=" + needsRefresh + "/" + authState.getNeedsTokenRefresh() +
                     " force=" + forceRefresh);

File: app/src/main/java/eu/faircode/email/EditTextMultiAutoComplete.java
Patch:
@@ -128,7 +128,7 @@ public void afterTextChanged(Editable edit) {
                         @Override
                         public void run() {
                             try {
-                                if (edit == null || backspace == null)
+                                if (edit == null || backspace == null || !hasFocus())
                                     return;
                                 ClipImageSpan[] spans = edit.getSpans(backspace, backspace, ClipImageSpan.class);
                                 if (spans.length == 1) {

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -728,7 +728,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                 switch (type) {
                                     case EntityRule.TYPE_MOVE:
                                     case EntityRule.TYPE_COPY:
-                                        long target = jaction.getLong("target");
+                                        long target = jaction.optLong("target", -1L);
                                         EntityFolder f = db.folder().getFolder(target);
                                         EntityAccount a = (f == null ? null : db.account().getAccount(f.account));
                                         if (a != null)
@@ -737,8 +737,8 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                             jaction.put("targetFolderName", f.name);
                                         break;
                                     case EntityRule.TYPE_ANSWER:
-                                        long identity = jaction.getLong("identity");
-                                        long answer = jaction.getLong("answer");
+                                        long identity = jaction.optLong("identity", -1L);
+                                        long answer = jaction.optLong("answer", -1L);
                                         EntityIdentity i = db.identity().getIdentity(identity);
                                         EntityAnswer t = db.answer().getAnswer(answer);
                                         if (i != null)

File: app/src/main/java/eu/faircode/email/Fts4DbHelper.java
Patch:
@@ -134,7 +134,7 @@ static void delete(SQLiteDatabase db, long id) {
         db.delete("message", "rowid = ?", new String[]{Long.toString(id)});
     }
 
-    private static String preprocessText(String text) {
+    static String preprocessText(String text) {
         return Normalizer.normalize(text.trim().toLowerCase(), Normalizer.Form.NFKD)
                 .replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
     }

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -788,7 +788,7 @@ else if ("mailru".equals(id)) {
                 if (pop && recent && "gmail".equals(id))
                     username = "recent:" + username;
 
-                Log.i("OAuth username=" + username);
+                Log.i("OAuth username=" + username + " shared=" + sharedname);
                 for (Pair<String, String> identity : identities)
                     Log.i("OAuth identity=" + identity.first + "/" + identity.second);
 
@@ -835,7 +835,7 @@ else if ("mailru".equals(id)) {
                     db.beginTransaction();
 
                     if (args.getBoolean("update")) {
-                        List<EntityAccount> accounts = db.account().getAccounts(username, protocol);
+                        List<EntityAccount> accounts = db.account().getAccounts(sharedname == null ? username : sharedname, protocol);
                         if (accounts != null && accounts.size() == 1)
                             update = accounts.get(0);
                     }
@@ -936,7 +936,7 @@ else if (EntityFolder.ARCHIVE.equals(folder.type))
                         EntityLog.log(context, "OAuth update account=" + update.name);
                         db.account().setAccountSynchronize(update.id, true);
                         db.account().setAccountPassword(update.id, state, AUTH_TYPE_OAUTH, provider.id);
-                        db.identity().setIdentityPassword(update.id, update.user, state, update.auth_type, AUTH_TYPE_OAUTH, provider.id);
+                        db.identity().setIdentityPassword(update.id, username, state, update.auth_type, AUTH_TYPE_OAUTH, provider.id);
                     }
 
                     db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -854,7 +854,7 @@ else if ("-".equals(w))
                     if (!text.contains(w))
                         return false;
                 } else if (minus) {
-                    if (text.contains(w))
+                    if (!html && text.contains(w))
                         return false;
                 } else
                     word.add(w);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2929,7 +2929,7 @@ private static void onSynchronizeMessages(
                 MessageHelper helper = new MessageHelper((MimeMessage) imessages[imessages.length - 1], context);
                 String msgid = helper.getMessageID();
                 if (msgid != null) {
-                    int count = db.message().countMessageByMsgId(folder.id, msgid);
+                    int count = db.message().countMessageByMsgId(folder.id, msgid, true);
                     if (count == 1) {
                         Log.i(account.name + " POP having last msgid=" + msgid);
                         sync = false;

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -452,8 +452,9 @@ List<Long> getMessageUnseen(
 
     @Query("SELECT COUNT(*) FROM message" +
             " WHERE folder = :folder" +
-            " AND msgid = :msgid")
-    int countMessageByMsgId(long folder, String msgid);
+            " AND msgid = :msgid" +
+            " AND (:hidden OR NOT message.ui_hide)")
+    int countMessageByMsgId(long folder, String msgid, boolean hidden);
 
     @Query("SELECT COUNT(*) FROM message" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -334,7 +334,7 @@ static void queue(Context context, EntityMessage message, String name, Object...
                 if (premove &&
                         message.uid != null &&
                         !TextUtils.isEmpty(message.msgid) &&
-                        db.message().countMessageByMsgId(target.id, message.msgid) == 0) {
+                        db.message().countMessageByMsgId(target.id, message.msgid, false) == 0) {
                     File msource = message.getFile(context);
 
                     // Copy message to target folder

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -237,7 +237,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     }};
 
     static final int DEFAULT_SYNC = 7; // days
-    static final int DEFAULT_KEEP = 60; // days
+    static final int DEFAULT_KEEP = 30; // days
     static final int DEFAULT_KEEP_DRAFTS = 180; // days
 
     private static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -237,7 +237,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     }};
 
     static final int DEFAULT_SYNC = 7; // days
-    static final int DEFAULT_KEEP = 30; // days
+    static final int DEFAULT_KEEP = 60; // days
     static final int DEFAULT_KEEP_DRAFTS = 180; // days
 
     private static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(
@@ -259,8 +259,8 @@ public class EntityFolder extends EntityOrder implements Serializable {
     private static final List<Boolean> SYSTEM_FOLDER_DOWNLOAD = Collections.unmodifiableList(Arrays.asList(
             true, // inbox
             true, // drafts
-            false, // sent
-            false, // archive
+            true, // sent
+            true, // archive
             false, // trash
             false // junk
     )); // MUST match SYSTEM_FOLDER_SYNC

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -300,13 +300,13 @@ public Drawable getDrawable(Element img) {
                                                     ImageHelper.fitDrawable(d, w == null ? 0 : w, h == null ? 0 : h, 1.0f, tvBody);
                                                 } catch (Throwable ex) {
                                                     Log.e(ex);
-                                                    d = ContextCompat.getDrawable(context, R.drawable.twotone_broken_image_24);
                                                 }
                                                 break;
                                             }
                                         if (d == null)
-                                            d = ContextCompat.getDrawable(context, R.drawable.twotone_image_24);
-                                    }
+                                            d = ContextCompat.getDrawable(context, R.drawable.twotone_broken_image_24);
+                                    } else
+                                        d = ContextCompat.getDrawable(context, R.drawable.twotone_image_24);
                                 } else {
                                     d = ContextCompat.getDrawable(context, R.drawable.twotone_my_location_24);
                                     d.setTint(Helper.resolveColor(context, R.attr.colorWarning));

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -277,7 +277,7 @@ static void cleanup(Context context, boolean manual) {
 
             // Cleanup attachment files
             Log.i("Cleanup attachment files");
-            File[] attachments = new File(context.getFilesDir(), "attachments").listFiles();
+            File[] attachments = new File(EntityAttachment.getRoot(context), "attachments").listFiles();
             if (attachments != null)
                 for (File file : attachments)
                     if (manual || file.lastModified() + KEEP_FILES_DURATION < now)

File: app/src/main/java/com/sun/mail/imap/IMAPBodyPart.java
Patch:
@@ -294,8 +294,7 @@ public synchronized DataHandler getDataHandler()
 		     );
 	    else if (bs.isNested() && message.isREV1() && bs.envelope != null)
 		dh = new DataHandler(
-			new IMAPNestedMessage(message,
-					      bs.encoding,
+			new IMAPNestedMessage(message, 
 					      bs.bodies[0],
 					      bs.envelope,
 					      sectionId),

File: app/src/main/java/eu/faircode/email/UriHelper.java
Patch:
@@ -313,7 +313,7 @@ static Uri sanitize(Uri uri) {
                 uri.getQueryParameter("p") != null) {
             try {
                 // Mandrill
-                String p = new String(Base64.decode(uri.getQueryParameter("p"), Base64.DEFAULT));
+                String p = new String(Base64.decode(uri.getQueryParameter("p"), Base64.URL_SAFE));
                 JSONObject json = new JSONObject(p);
                 json = new JSONObject(json.getString("p"));
                 Uri result = Uri.parse(json.getString("url"));
@@ -330,7 +330,7 @@ static Uri sanitize(Uri uri) {
             String key = uri.getQueryParameterNames().iterator().next();
             if (TextUtils.isEmpty(uri.getQueryParameter(key)))
                 try {
-                    String data = new String(Base64.decode(key, Base64.DEFAULT));
+                    String data = new String(Base64.decode(key, Base64.URL_SAFE));
                     int v = data.indexOf("ver=");
                     int u = data.indexOf("&&url=");
                     if (v == 0 && u > 0)
@@ -344,7 +344,7 @@ static Uri sanitize(Uri uri) {
         } else if (uri.getQueryParameter("redirectUrl") != null) {
             // https://.../link-tracker?redirectUrl=<base64>&sig=...&iat=...&a=...&account=...&email=...&s=...&i=...
             try {
-                byte[] bytes = Base64.decode(uri.getQueryParameter("redirectUrl"), 0);
+                byte[] bytes = Base64.decode(uri.getQueryParameter("redirectUrl"), Base64.URL_SAFE);
                 String u = URLDecoder.decode(new String(bytes), StandardCharsets.UTF_8.name());
                 Uri result = Uri.parse(u);
                 changed = (result != null);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -2043,7 +2043,7 @@ private void setOptions() {
             spLanguage.setSelection(selected);
 
         swLanguageTool.setChecked(prefs.getBoolean("lt_enabled", false));
-        swLanguageToolAuto.setChecked(prefs.getBoolean("lt_auto", false));
+        swLanguageToolAuto.setChecked(prefs.getBoolean("lt_auto", true));
         swLanguageToolAuto.setEnabled(swLanguageTool.isChecked());
         swLanguageToolPicky.setChecked(prefs.getBoolean("lt_picky", false));
         swLanguageToolPicky.setEnabled(swLanguageTool.isChecked());

File: app/src/main/java/eu/faircode/email/LanguageTool.java
Patch:
@@ -58,7 +58,7 @@ static boolean isEnabled(Context context) {
     static boolean isAuto(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean lt_enabled = prefs.getBoolean("lt_enabled", false);
-        boolean lt_auto = prefs.getBoolean("lt_auto", false);
+        boolean lt_auto = prefs.getBoolean("lt_auto", true);
         return (lt_enabled && lt_auto);
     }
 

File: app/src/dummy/java/eu/faircode/email/Send.java
Patch:
@@ -15,5 +15,7 @@ public static String upload(InputStream is, DocumentFile dfile, int dLimit, int
 
     public interface IProgress {
         void onProgress(int percentage);
+
+        boolean isRunning();
     }
 }

File: app/src/main/java/eu/faircode/email/Fts4DbHelper.java
Patch:
@@ -42,7 +42,7 @@ public class Fts4DbHelper extends SQLiteOpenHelper {
     private static Fts4DbHelper instance = null;
 
     private static final int DATABASE_VERSION = 1;
-    private static final String DATABASE_NAME = "fts4.db";
+    private static final String DATABASE_NAME = "fts4a.db";
 
     private Fts4DbHelper(Context context) {
         super(context.getApplicationContext(), DATABASE_NAME, null, DATABASE_VERSION);
@@ -75,8 +75,7 @@ public void onCreate(SQLiteDatabase db) {
                 ", `notes`" +
                 ", notindexed=`account`" +
                 ", notindexed=`folder`" +
-                ", notindexed=`time`" +
-                ", tokenize=unicode61 \"remove_diacritics=2\")");
+                ", notindexed=`time`)");
         // https://www.sqlite.org/fts3.html#tokenizer
         // https://unicode.org/reports/tr29/
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -172,7 +172,7 @@ public void onVmViolation(Violation v) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         final boolean crash_reports = prefs.getBoolean("crash_reports", false);
         final boolean leak_canary = prefs.getBoolean("leak_canary", false);
-        final boolean load_emoji = prefs.getBoolean("load_emoji", BuildConfig.PLAY_STORE_RELEASE);
+        final boolean load_emoji = prefs.getBoolean("load_emoji", false);
 
         prev = Thread.getDefaultUncaughtExceptionHandler();
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -595,7 +595,7 @@ private void setOptions() {
         tvGenericUserAgent.setText(WebViewEx.getUserAgent(getContext()));
         swGenericUserAgent.setChecked(prefs.getBoolean("generic_ua", false));
         swSafeBrowsing.setChecked(prefs.getBoolean("safe_browsing", false));
-        swLoadEmoji.setChecked(prefs.getBoolean("load_emoji", BuildConfig.PLAY_STORE_RELEASE));
+        swLoadEmoji.setChecked(prefs.getBoolean("load_emoji", false));
 
         long time = prefs.getLong("disconnect_last", -1);
         DateFormat DF = SimpleDateFormat.getDateTimeInstance();

File: app/src/main/java/eu/faircode/email/Fts4DbHelper.java
Patch:
@@ -137,7 +137,8 @@ static List<String> getSuggestions(SQLiteDatabase db, String query, int max) {
         try (Cursor cursor = db.rawQuery(
                 "SELECT term FROM message_terms" +
                         " WHERE term LIKE ?" +
-                        " ORDER BY occurrences DESC" +
+                        " GROUP BY term" +
+                        " ORDER BY SUM(occurrences) DESC" +
                         " LIMIT " + max,
                 new String[]{query})) {
             while (cursor != null && cursor.moveToNext())

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3035,14 +3035,14 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
 
                         return document.html();
                     } else {
+                        if (message.ui_found && found && !TextUtils.isEmpty(searched))
+                            HtmlHelper.highlightSearched(context, document, searched);
+
                         // Cleanup message
                         document = HtmlHelper.sanitizeView(context, document, show_images);
 
                         HtmlHelper.autoLink(document);
 
-                        if (message.ui_found && found && !TextUtils.isEmpty(searched))
-                            HtmlHelper.highlightSearched(context, document, searched);
-
                         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                             args.putParcelable("actions", getConversationActions(message, document, context));
 

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -639,7 +639,7 @@ private boolean onActionMove(Context context, EntityMessage message, JSONObject
             create = create.replace("$domain$", domain == null ? "" : domain);
 
             String name = folder.name + (folder.separator == null ? "" : folder.separator) + create;
-            EntityFolder created = db.folder().getFolderByName(message.account, name);
+            EntityFolder created = db.folder().getFolderByName(folder.account, name);
             if (created == null) {
                 created = new EntityFolder();
                 created.tbc = true;

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -808,7 +808,7 @@ protected void onException(Bundle args, Throwable ex) {
 
                 if (auth != AUTH_TYPE_PASSWORD) {
                     etUser.setEnabled(false);
-                    tilPassword.setEnabled(false);
+                    tilPassword.getEditText().setEnabled(false);
                 }
 
                 cbIgnoreSchedule.setEnabled(cbSynchronize.isChecked());

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -2447,7 +2447,7 @@ public void migrate(@NonNull SupportSQLiteDatabase db) {
                     public void migrate(@NonNull SupportSQLiteDatabase db) {
                         logMigration(startVersion, endVersion);
                         db.execSQL("ALTER TABLE `folder` ADD COLUMN `inherited_type` TEXT");
-                        db.execSQL("DROP VIEW `folder_view`");
+                        db.execSQL("DROP VIEW IF EXISTS `folder_view`");
                         db.execSQL("CREATE VIEW IF NOT EXISTS `folder_view` AS " + TupleFolderView.query);
                     }
                 }).addMigrations(new Migration(241, 242) {

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -200,7 +200,7 @@ static String replacePlaceholders(Context context, String text, Address[] addres
 
             if (c != null) {
                 v = Html.escapeHtml(SimpleDateFormat.getDateInstance(SimpleDateFormat.LONG).format(c.getTime()));
-                text = text.substring(0, s) + v + text.substring(e);
+                text = text.substring(0, s) + v + text.substring(e + 1);
                 s = text.indexOf("$date", s + v.length());
             }
         }

File: app/src/main/java/com/sun/mail/smtp/SMTPTransport.java
Patch:
@@ -1613,7 +1613,8 @@ private void expandGroups() {
     private boolean convertTo8Bit(MimePart part) {
 	boolean changed = false;
 	try {
-	    if (part.isMimeType("text/*")) {
+		// text/* will cause problems for text/calendar, etc
+	    if (part.isMimeType("text/plain") || part.isMimeType("text/html")) {
 		String enc = part.getEncoding();
 		if (enc != null && (enc.equalsIgnoreCase("quoted-printable") ||
 		    enc.equalsIgnoreCase("base64"))) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -520,7 +520,8 @@ public void onCreate(Bundle savedInstanceState) {
             setTitle(server ? R.string.title_search_server : R.string.title_search_device);
         }
 
-        if (viewType != AdapterMessage.ViewType.THREAD && EntityFolder.ARCHIVE.equals(type))
+        if (viewType != AdapterMessage.ViewType.THREAD &&
+                (EntityFolder.ARCHIVE.equals(type) || viewType == AdapterMessage.ViewType.SEARCH))
             filter_archive = false;
 
         try {

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -198,7 +198,8 @@ static boolean apply(int action, LifecycleOwner owner, View anchor, EditText etB
                     smenu.add(font.custom ? R.id.group_style_font_custom : R.id.group_style_font_standard, i, 0, ssb)
                             .setIntent(new Intent().putExtra("face", font.type));
                 }
-                smenu.add(R.id.group_style_font_standard, fonts.size(), 0, R.string.title_style_font_default);
+                smenu.add(R.id.group_style_font_standard, fonts.size(), 0, R.string.title_style_font_default)
+                        .setIntent(new Intent());
 
                 int level = -1;
                 BulletSpan[] spans = edit.getSpans(start, end, BulletSpan.class);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4133,7 +4133,7 @@ else if (viewType == ViewType.THREAD) {
                             .putExtra("found", viewType == ViewType.SEARCH)
                             .putExtra("searched", searched);
 
-                    boolean doubletap = prefs.getBoolean("doubletap", true);
+                    boolean doubletap = prefs.getBoolean("doubletap", false);
 
                     if (!doubletap ||
                             (message.uid == null && message.accountProtocol == EntityAccount.TYPE_IMAP) ||

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -648,6 +648,9 @@ else if (version < 1933) {
         else if (version < 1951) {
             if (prefs.contains("open_unsafe"))
                 editor.putBoolean("open_safe", !prefs.getBoolean("open_unsafe", true));
+        } else if (version < 1955) {
+            if (!prefs.contains("doubletap"))
+                editor.putBoolean("doubletap", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -570,7 +570,7 @@ private void setOptions() {
 
         swFolderNav.setChecked(prefs.getBoolean("foldernav", false));
 
-        swDoubleTap.setChecked(prefs.getBoolean("doubletap", true));
+        swDoubleTap.setChecked(prefs.getBoolean("doubletap", false));
         swSwipeNav.setChecked(prefs.getBoolean("swipenav", true));
         swVolumeNav.setChecked(prefs.getBoolean("volumenav", false));
         swReversed.setChecked(prefs.getBoolean("reversed", false));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -382,7 +382,7 @@ else if (EntityMessage.SENSITIVITY_CONFIDENTIAL.equals(message.sensitivity))
         } else {
             // https://datatracker.ietf.org/doc/html/rfc2822#section-3.6.6
             ByteArrayInputStream bis = new ByteArrayInputStream(message.headers.getBytes());
-            List<Header> headers = Collections.list(new InternetHeaders(bis, identity.unicode).getAllHeaders());
+            List<Header> headers = Collections.list(new InternetHeaders(bis, identity != null && identity.unicode).getAllHeaders());
 
             for (Header header : headers)
                 try {

File: app/src/main/java/eu/faircode/email/GmailState.java
Patch:
@@ -122,7 +122,8 @@ void refresh(@NonNull Context context, String id, @NonNull String user, boolean
         if (newToken != null && !newToken.equals(token)) {
             token = newToken;
             acquired = new Date().getTime();
-        }
+        } else
+            Log.e("Token refresh failed id=" + id + " token=" + (token != null));
 
         if (token == null)
             throw new AuthenticatorException("No token for " + id + ":" + user);

File: app/src/main/java/eu/faircode/email/ServiceAuthenticator.java
Patch:
@@ -219,8 +219,10 @@ public void execute(String accessToken, String idToken, AuthorizationException e
             semaphore.acquire();
             Log.i("OAuth refreshed user=" + id + ":" + user);
 
-            if (holder.error != null)
+            if (holder.error != null) {
+                Log.e(new Throwable("Token refresh failed id=" + id, holder.error));
                 throw holder.error;
+            }
         } catch (Exception ex) {
             throw new MessagingException("OAuth refresh id=" + id, ex);
         }

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -647,7 +647,8 @@ void cleanup(Context context, boolean fetch) {
         EntityLog.log(context, "Cleanup op=" + id + "/" + name + " folder=" + folder + " message=" + message);
 
         if (message != null) {
-            db.message().setMessageUiHide(message, false);
+            if (MOVE.equals(name) || DELETE.equals(name))
+                db.message().setMessageUiHide(message, false);
 
             if (SEEN.equals(name)) {
                 EntityMessage m = db.message().getMessage(message);

File: app/src/main/java/eu/faircode/email/GmailState.java
Patch:
@@ -158,6 +158,7 @@ static GmailState jsonDeserialize(@NonNull String password) {
             long acquired = jobject.getLong("acquired");
             return new GmailState(token, acquired);
         } catch (JSONException ex) {
+            Log.e(ex);
             return new GmailState(password, new Date().getTime());
         }
     }

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -680,8 +680,8 @@ static HttpURLConnection openConnectionUnsafe(Context context, URL url, int ctim
             HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
             urlConnection.setRequestMethod("GET");
             urlConnection.setDoOutput(false);
-            urlConnection.setReadTimeout(ctimeout);
-            urlConnection.setConnectTimeout(rtimeout);
+            urlConnection.setReadTimeout(rtimeout);
+            urlConnection.setConnectTimeout(ctimeout);
             urlConnection.setInstanceFollowRedirects(true);
 
             if (urlConnection instanceof HttpsURLConnection) {

File: app/src/main/java/eu/faircode/email/GmailState.java
Patch:
@@ -73,7 +73,7 @@ void refresh(@NonNull Context context, String id, @NonNull String user, boolean
                 expiration - ServiceAuthenticator.MIN_FORCE_REFRESH_INTERVAL < now)
             needsRefresh = true;
 
-        if (needsRefresh) {
+        if (needsRefresh && token != null) {
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             String key = "token." + id + "." + user;
             long last_refresh = prefs.getLong(key, 0);

File: app/src/main/java/eu/faircode/email/ServiceAuthenticator.java
Patch:
@@ -162,7 +162,7 @@ private static void OAuthRefresh(Context context, String id, String user, AuthSt
             if (needsRefresh)
                 authState.setNeedsTokenRefresh(true);
 
-            if (needsRefresh) {
+            if (needsRefresh || authState.getNeedsTokenRefresh()) {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 String key = "token." + id + "." + user;
                 long last_refresh = prefs.getLong(key, 0);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1188,9 +1188,10 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
             boolean outbox = EntityFolder.OUTBOX.equals(message.folderType);
             boolean outgoing = isOutgoing(message);
             boolean reverse = (outgoing && viewType != ViewType.THREAD &&
-                    (EntityFolder.isOutgoing(type) || viewType == ViewType.SEARCH) ||
+                    (EntityFolder.isOutgoing(type) || viewType == ViewType.SEARCH)) ||
                     (viewType == ViewType.UNIFIED && type == null &&
-                            message.folderUnified && EntityFolder.isOutgoing(message.folderType)));
+                            message.folderUnified && EntityFolder.isOutgoing(message.folderType)) ||
+                    EntityFolder.isOutgoing(message.folderInheritedType);
             String selector = (reverse ? null : message.bimi_selector);
             Address[] addresses = (reverse ? message.to : message.from);
             Address[] senders = ContactInfo.fillIn(

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -142,6 +142,7 @@
 import java.util.Map;
 import java.util.Properties;
 import java.util.Set;
+import java.util.TimeZone;
 import java.util.UUID;
 import java.util.concurrent.TimeoutException;
 
@@ -1877,6 +1878,7 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append(String.format("Updated: %s\r\n", new Date(Helper.getUpdateTime(context))));
         sb.append(String.format("Last cleanup: %s\r\n", new Date(last_cleanup)));
         sb.append(String.format("Now: %s\r\n", new Date()));
+        sb.append(String.format("Zone: %s\r\n", TimeZone.getDefault().getID()));
 
         sb.append("\r\n");
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5875,6 +5875,8 @@ private void onMenuSnooze(final TupleMessageEx message) {
             args.putLong("folder", message.folder);
             args.putString("thread", message.thread);
             args.putLong("id", message.id);
+            if (message.ui_snoozed != null)
+                args.putLong("time", message.ui_snoozed);
             args.putBoolean("finish", true);
 
             FragmentDialogDuration fragment = new FragmentDialogDuration();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3794,7 +3794,7 @@ protected void onException(Bundle args, Throwable ex) {
         }
 
         private boolean isOutgoing(TupleMessageEx message) {
-            if (EntityFolder.isOutgoing(message.folderType))
+            if (EntityFolder.isOutgoing(message.folderType) || EntityFolder.isOutgoing(message.folderInheritedType))
                 return true;
             else {
                 if (message.identityEmail == null)

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -300,6 +300,9 @@ public interface DaoFolder {
     @Query("UPDATE folder SET type = :type WHERE id = :id AND NOT (type IS :type)")
     int setFolderType(long id, String type);
 
+    @Query("UPDATE folder SET inherited_type = :type WHERE id = :id AND NOT (inherited_type IS :type)")
+    int setFolderInheritedType(long id, String type);
+
     @Query("UPDATE folder SET `order` = :order WHERE id = :id AND NOT (`order` IS :order)")
     int setFolderOrder(long id, Integer order);
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -77,6 +77,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     public String name;
     @NonNull
     public String type;
+    public String inherited_type;
     @NonNull
     public Integer level = 0; // obsolete
     @NonNull

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2301,7 +2301,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                             if (folder.synchronize) {
                                 int unseen = db.message().countUnseen(folder.id);
                                 int notifying = db.message().countNotifying(folder.id);
-                                size += write(os, "- " + folder.name + " " + folder.type +
+                                size += write(os, "- " + folder.name + " " +
+                                        folder.type + (folder.inherited_type == null ? "" : "/" + folder.inherited_type) +
                                         (folder.unified ? " unified" : "") +
                                         (folder.notify ? " notify" : "") +
                                         " poll=" + folder.poll + "/" + folder.poll_factor +
@@ -2375,6 +2376,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                                 Collections.sort(folders, folders.get(0).getComparator(context));
                             for (EntityFolder folder : folders) {
                                 JSONObject jfolder = folder.toJSON();
+                                jfolder.put("inherited_type", folder.inherited_type);
                                 jfolder.put("level", folder.level);
                                 jfolder.put("total", folder.total);
                                 jfolder.put("initialize", folder.initialize);

File: app/src/main/java/eu/faircode/email/TupleFolderView.java
Patch:
@@ -30,7 +30,7 @@
         value = TupleFolderView.query
 )
 public class TupleFolderView {
-    static final String query = "SELECT id, account, name, type, display, color, unified, notify, read_only FROM folder";
+    static final String query = "SELECT id, account, name, type, inherited_type, display, color, unified, notify, read_only FROM folder";
 
     @NonNull
     public Long id;
@@ -39,6 +39,7 @@ public class TupleFolderView {
     public String name;
     @NonNull
     public String type;
+    public String inherited_type;
     public String display;
     public Integer color;
     @NonNull
@@ -56,6 +57,7 @@ public boolean equals(@Nullable Object obj) {
                     Objects.equals(this.account, other.account) &&
                     this.name.equals(other.name) &&
                     this.type.equals(other.type) &&
+                    Objects.equals(this.inherited_type, other.inherited_type) &&
                     Objects.equals(this.display, other.display) &&
                     Objects.equals(this.color, other.color) &&
                     this.unified == other.unified &&

File: app/src/main/java/eu/faircode/email/TupleMessageEx.java
Patch:
@@ -45,6 +45,7 @@ public class TupleMessageEx extends EntityMessage {
     public Integer folderColor;
     public String folderDisplay;
     public String folderType;
+    public String folderInheritedType;
     public boolean folderUnified;
     public boolean folderReadOnly;
     public String identityName;
@@ -150,6 +151,7 @@ public boolean equals(Object obj) {
                     this.folderName.equals(other.folderName) &&
                     Objects.equals(this.folderDisplay, other.folderDisplay) &&
                     this.folderType.equals(other.folderType) &&
+                    Objects.equals(this.folderInheritedType, other.folderInheritedType) &&
                     this.folderUnified == other.folderUnified &&
                     this.folderReadOnly == other.folderReadOnly &&
                     Objects.equals(this.identityName, other.identityName) &&

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -1307,6 +1307,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
 
                             // Prevent restart
                             if ("secure".equals(key) ||
+                                    "load_emoji".equals(key) ||
                                     "shortcuts".equals(key) ||
                                     "language".equals(key) ||
                                     "wal".equals(key))

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -750,7 +750,7 @@ else if (false) {
                                     // Special case:
                                     //   external draft: very dark/light font
                                     double lum = ColorUtils.calculateLuminance(color);
-                                    if (lum < MIN_LUMINANCE_COMPOSE || lum > 1 - MIN_LUMINANCE_COMPOSE)
+                                    if (dark ? lum < 1 - MIN_LUMINANCE_COMPOSE : lum > MIN_LUMINANCE_COMPOSE)
                                         color = null;
                                 }
 
@@ -761,7 +761,7 @@ else if (false) {
                                     // Background color was suppressed because "no color"
                                     if (color != null) {
                                         double lum = ColorUtils.calculateLuminance(color);
-                                        if (dark ? lum < MIN_LUMINANCE_VIEW : lum > 1 - MIN_LUMINANCE_VIEW)
+                                        if (dark ? lum < 1 - MIN_LUMINANCE_VIEW : lum > MIN_LUMINANCE_VIEW)
                                             color = textColorPrimary;
                                     }
                                 }

File: app/src/main/java/eu/faircode/email/ActivityWidgetUnified.java
Patch:
@@ -150,6 +150,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 btnHighlight.setVisibility(checked && cbHighlight.isEnabled() ? View.VISIBLE : View.GONE);
+                btnHighlight.setEnabled(checked && cbHighlight.isEnabled());
             }
         });
 

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -384,8 +384,9 @@ public boolean onLongClick(View v) {
             ss.setSpan(new RelativeSizeSpan(0.9f), 0, ss.length(), 0);
             popupMenu.getMenu().add(Menu.NONE, 0, order++, ss).setEnabled(false);
 
-            popupMenu.getMenu().add(Menu.NONE, R.string.title_enabled, order++, R.string.title_enabled)
-                    .setCheckable(true).setChecked(account.synchronize);
+            if (settings)
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_enabled, order++, R.string.title_enabled)
+                        .setCheckable(true).setChecked(account.synchronize);
             popupMenu.getMenu().add(Menu.NONE, R.string.title_primary, order++, R.string.title_primary)
                     .setCheckable(true).setChecked(account.primary);
 

File: app/src/main/java/eu/faircode/email/FragmentDialogForwardRaw.java
Patch:
@@ -62,7 +62,6 @@ public class FragmentDialogForwardRaw extends FragmentDialogBase {
     @Override
     public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         Bundle args = getArguments();
-        long account = args.getLong("account");
         long[] ids = args.getLongArray("ids");
 
         if (savedInstanceState != null)
@@ -235,6 +234,8 @@ protected void onException(Bundle args, Throwable ex) {
                 .setPositiveButton(R.string.title_send, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
+                        long account = getArguments().getLong("account", -1L);
+                        long[] ids = getArguments().getLongArray("ids");
                         send(account, ids);
                     }
                 })

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1095,6 +1095,9 @@ private void onActionExecuteRules() {
                 }
 
                 private void onActionExportMessages() {
+                    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+                    prefs.edit().putBoolean("debug", false).apply();
+
                     String filename = Helper.sanitizeFilename(
                             folder.accountName.replace(" ", "_") + "_" +
                                     folder.getDisplayName(context).replace(" ", "_") + "_" +

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2659,7 +2659,7 @@ public void onChildDraw(
             if (EntityMessage.SWIPE_ACTION_ASK.equals(action))
                 icon = R.drawable.twotone_help_24;
             else if (EntityMessage.SWIPE_ACTION_SEEN.equals(action))
-                icon = (message.ui_seen ? R.drawable.twotone_drafts_24 : R.drawable.twotone_mail_24);
+                icon = (message.unseen > 0 ? R.drawable.twotone_drafts_24 : R.drawable.twotone_mail_24);
             else if (EntityMessage.SWIPE_ACTION_FLAG.equals(action))
                 icon = (message.ui_flagged ? R.drawable.twotone_star_border_24 : R.drawable.baseline_star_24);
             else if (EntityMessage.SWIPE_ACTION_SNOOZE.equals(action))
@@ -2795,7 +2795,7 @@ public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)
                 adapter.notifyItemChanged(pos);
                 onSwipeAsk(message, viewHolder);
             } else if (EntityMessage.SWIPE_ACTION_SEEN.equals(action))
-                onActionSeenSelection(!message.ui_seen, message.id, false);
+                onActionSeenSelection(message.unseen > 0, message.id, false);
             else if (EntityMessage.SWIPE_ACTION_FLAG.equals(action))
                 onActionFlagSelection(!message.ui_flagged, Color.TRANSPARENT, message.id, false);
             else if (EntityMessage.SWIPE_ACTION_SNOOZE.equals(action))

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -4278,7 +4278,9 @@ private void getMessageParts(Part parent, Part part, MessageParts parts, Integer
                                 "report".equalsIgnoreCase(ct.getSubType()) ||
                                 "parallel".equalsIgnoreCase(ct.getSubType()) ||
                                 "digest".equalsIgnoreCase(ct.getSubType()) ||
-                                "appledouble".equalsIgnoreCase(ct.getSubType())))
+                                "appledouble".equalsIgnoreCase(ct.getSubType()) ||
+                                "voice-message".equalsIgnoreCase(ct.getSubType())))
+                    // voice-message: https://www.rfc-editor.org/rfc/rfc3458.txt
                     Log.e(part.getContentType());
             } catch (Throwable ex) {
                 Log.e(ex);

File: app/src/main/java/com/sun/mail/imap/IMAPMessage.java
Patch:
@@ -1771,7 +1771,7 @@ public boolean isExpunged() {
                 envelope.cc == null &&
                 envelope.inReplyTo == null &&
                 envelope.messageId == null &&
-                headersLoaded && (loadedHeaders == null || loadedHeaders.size() == 0)) {
+                headersLoaded && (headers == null || !headers.getAllHeaders().hasMoreElements())) {
 			eu.faircode.email.Log.w("Expunged workaround host=" + ((IMAPStore) folder.getStore()).host);
 			return true;
 		}

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5764,7 +5764,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 DB db = DB.getInstance(context);
 
                 EntitySearch search = null;
-                if (criteria.id >= 0)
+                if (criteria.id != null)
                     search = db.search().getSearch(criteria.id);
                 if (search == null)
                     search = new EntitySearch();

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -2445,8 +2445,8 @@ public void run() {
                     }
 
                     long elapse = new Date().getTime() - start;
-                    EntityLog.log(context, EntityLog.Type.Debug,
-                            "PRAGMA wal_checkpoint(" + mode + ")=" + sb + " elapse=" + elapse + " ms");
+                    EntityLog.log(context, "PRAGMA wal_checkpoint(" + mode + ")=" + sb +
+                            " elapse=" + elapse + " ms");
                 } catch (Throwable ex) {
                     Log.e(ex);
                 }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1873,6 +1873,7 @@ private static StringBuilder getAppInfo(Context context) {
 
         sb.append(String.format("Installer: %s\r\n", installer));
         sb.append(String.format("Installed: %s\r\n", new Date(Helper.getInstallTime(context))));
+        sb.append(String.format("Updated: %s\r\n", new Date(Helper.getUpdateTime(context))));
         sb.append(String.format("Last cleanup: %s\r\n", new Date(last_cleanup)));
         sb.append(String.format("Now: %s\r\n", new Date()));
 

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -279,7 +279,7 @@ public void onClick(View v) {
                 String pkg = context.getPackageName();
                 List<EmailProvider> providers = EmailProvider.loadProfiles(context);
 
-                boolean web = false;
+                boolean web = BuildConfig.DEBUG;
                 for (EmailProvider provider : providers)
                     if ("gmail".equals(provider.id) &&
                             provider.oauth != null &&

File: app/src/main/java/eu/faircode/email/ServiceAuthenticator.java
Patch:
@@ -82,7 +82,9 @@ protected PasswordAuthentication getPasswordAuthentication() {
                 Log.e(ex);
         }
 
-        Log.i(user + " returning " + (auth == AUTH_TYPE_PASSWORD ? "password" : "token"));
+        Log.i(user + " returning " +
+                (auth == AUTH_TYPE_PASSWORD ? "password" : "token") +
+                (BuildConfig.DEBUG ? "=" + token : ""));
         return new PasswordAuthentication(user, token);
     }
 

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -19,6 +19,7 @@
     Copyright 2018-2022 by Marcel Bokhorst (M66B)
 */
 
+import static eu.faircode.email.ServiceAuthenticator.AUTH_TYPE_GMAIL;
 import static eu.faircode.email.ServiceAuthenticator.AUTH_TYPE_PASSWORD;
 
 import android.annotation.TargetApi;
@@ -202,6 +203,8 @@ private void bindTo(TupleAccountEx account) {
             ivSync.setImageResource(account.synchronize ? R.drawable.twotone_sync_24 : R.drawable.twotone_sync_disabled_24);
             ivSync.setContentDescription(context.getString(account.synchronize ? R.string.title_legend_synchronize_on : R.string.title_legend_synchronize_off));
 
+            ivOAuth.setImageDrawable(context.getDrawable(account.auth_type == AUTH_TYPE_GMAIL
+                    ? R.drawable.twotone_android_24 : R.drawable.twotone_security_24));
             ivOAuth.setVisibility(
                     settings && account.auth_type != AUTH_TYPE_PASSWORD ? View.VISIBLE : View.GONE);
             ivPrimary.setVisibility(account.primary ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -116,12 +116,12 @@ public interface DaoIdentity {
     int setIdentityPassword(long account, String user, String password, int auth_type, String domain);
 
     @Query("UPDATE identity" +
-            " SET password = :password, auth_type = :new_auth_type" +
+            " SET password = :password, auth_type = :new_auth_type, provider = :provider" +
             " WHERE account = :account" +
             " AND user = :user" +
             " AND auth_type = :auth_type" +
-            " AND NOT (password IS :password AND auth_type IS :new_auth_type)")
-    int setIdentityPassword(long account, String user, String password, int auth_type, int new_auth_type);
+            " AND NOT (password IS :password AND auth_type IS :new_auth_type AND provider = :provider)")
+    int setIdentityPassword(long account, String user, String password, int auth_type, int new_auth_type, String provider);
 
     @Query("UPDATE identity" +
             " SET fingerprint = :fingerprint" +

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -356,8 +356,8 @@ public void connect(EntityAccount account) throws MessagingException {
                     public void onPasswordChanged(Context context, String newPassword) {
                         DB db = DB.getInstance(context);
                         account.password = newPassword;
-                        int accounts = db.account().setAccountPassword(account.id, account.password, account.auth_type);
-                        int identities = db.identity().setIdentityPassword(account.id, account.user, account.password, account.auth_type, account.auth_type);
+                        int accounts = db.account().setAccountPassword(account.id, account.password, account.auth_type, account.provider);
+                        int identities = db.identity().setIdentityPassword(account.id, account.user, account.password, account.auth_type, account.auth_type, account.provider);
                         EntityLog.log(context, EntityLog.Type.Account, account,
                                 "token refreshed=" + accounts + "/" + identities);
                     }

File: app/src/main/java/eu/faircode/email/TupleAccountState.java
Patch:
@@ -37,7 +37,8 @@ public boolean equals(Object obj) {
                     this.insecure.equals(other.insecure) &&
                     this.port.equals(other.port) &&
                     this.user.equals(other.user) &&
-                    (auth_type != AUTH_TYPE_PASSWORD || this.password.equals(other.password)) &&
+                    Objects.equals(this.auth_type, other.auth_type) &&
+                    this.password.equals(other.password) &&
                     Objects.equals(this.certificate_alias, other.certificate_alias) &&
                     Objects.equals(this.realm, other.realm) &&
                     Objects.equals(this.fingerprint, other.fingerprint) &&

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -255,6 +255,9 @@ String getMimeType() {
         if ("ppt".equals(extension))
             return "application/vnd.ms-powerpoint";
 
+        if ("application/vnd.ms-pps".equals(type))
+            return "application/vnd.ms-powerpoint";
+
         if ("pptx".equals(extension))
             return "application/vnd.openxmlformats-officedocument.presentationml.presentation";
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3753,6 +3753,8 @@ public void setContent(Object content, String type) throws MessagingException {
                     // Check public key validity
                     try {
                         chain[0].checkValidity();
+                        // TODO: check digitalSignature/nonRepudiation key usage
+                        // https://datatracker.ietf.org/doc/html/rfc3850#section-4.4.2
                     } catch (CertificateException ex) {
                         String msg = ex.getMessage();
                         throw new IllegalArgumentException(

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1427,7 +1427,7 @@ else if (show_changelog) {
             Intent intent = getIntent();
             String action = (intent == null ? null : intent.getAction());
             if (action != null &&
-                    (action.startsWith("thread") || action.equals("widget")))
+                    (action.startsWith("thread") || action.startsWith("widget")))
                 return;
 
             String last = prefs.getString("changelog", null);
@@ -1753,7 +1753,7 @@ private void checkIntent() {
                 intent.putExtra("id", id);
                 onViewThread(intent);
 
-            } else if (action.equals("widget")) {
+            } else if (action.startsWith("widget")) {
                 long account = intent.getLongExtra("widget_account", -1);
                 long folder = intent.getLongExtra("widget_folder", -1);
                 String type = intent.getStringExtra("widget_type");

File: app/src/main/java/eu/faircode/email/WidgetUnified.java
Patch:
@@ -121,7 +121,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
             views.setRemoteAdapter(R.id.lv, service);
 
             Intent thread = new Intent(context, ActivityView.class);
-            thread.setAction("widget");
+            thread.setAction("widget:" + appWidgetId);
             thread.putExtra("widget_account", account);
             thread.putExtra("widget_folder", folder);
             thread.putExtra("widget_type", type);

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -126,7 +126,9 @@ protected Drawable onExecute(Context context, Bundle args) throws Throwable {
                             Log.w(ex);
                         }
 
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P)
+                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P &&
+                                !"image/svg+xml".equals(type) &&
+                                !"svg".equals(Helper.getExtension(file.getName())))
                             try {
                                 return ImageHelper.getScaledDrawable(context, file, type, max);
                             } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1533,7 +1533,8 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
         DB db = DB.getInstance(context);
 
         List<String> all = new ArrayList<>(refs);
-        all.add(msgid);
+        if (!TextUtils.isEmpty(msgid))
+            all.add(msgid);
 
         int thread_range = prefs.getInt("thread_range", MessageHelper.DEFAULT_THREAD_RANGE);
         int range = (int) Math.pow(2, thread_range);

File: app/src/main/java/eu/faircode/email/TupleThreadInfo.java
Patch:
@@ -36,6 +36,6 @@ public boolean isReferenced(String msgid) {
     }
 
     public boolean isReferencing(String msgid) {
-        return !isSelf(msgid) && !isReferenced(msgid);
+        return !TextUtils.isEmpty(msgid) && !isSelf(msgid) && !isReferenced(msgid);
     }
 }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -4273,7 +4273,7 @@ private void getMessageParts(Part parent, Part part, MessageParts parts, Integer
                     content = tryParseMultipart((String) content, part.getContentType());
 
                 if (content instanceof Multipart) {
-                    multipart = (Multipart) part.getContent();
+                    multipart = (Multipart) content;
                     int count = multipart.getCount();
                     for (int i = 0; i < count; i++)
                         try {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -7118,7 +7118,7 @@ private class ToolData {
         level = prefs.getInt("log_level", Log.getDefaultLogLevel());
 
         this.canDarken = WebViewEx.isFeatureSupported(context, WebViewFeature.ALGORITHMIC_DARKENING);
-        this.fake_dark = prefs.getBoolean("fake_dark", true);
+        this.fake_dark = prefs.getBoolean("fake_dark", false);
         this.webview_legacy = prefs.getBoolean("webview_legacy", false);
         this.show_recent = prefs.getBoolean("show_recent", false);
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -634,7 +634,8 @@ else if (version < 1781) {
         } else if (version < 1927) {
             if (!prefs.contains("auto_identity"))
                 editor.putBoolean("auto_identity", true);
-        }
+        } else if (version < 1931)
+            editor.remove("fake_dark");
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
             editor.remove("background_service");

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1783,7 +1783,7 @@ private void setOptions() {
         swUndoManager.setChecked(prefs.getBoolean("undo_manager", false));
         swWebViewLegacy.setChecked(prefs.getBoolean("webview_legacy", false));
         swBrowserZoom.setChecked(prefs.getBoolean("browser_zoom", false));
-        swFakeDark.setChecked(prefs.getBoolean("fake_dark", true));
+        swFakeDark.setChecked(prefs.getBoolean("fake_dark", false));
         swShowRecent.setChecked(prefs.getBoolean("show_recent", false));
         swModSeq.setChecked(prefs.getBoolean("use_modseq", true));
         swUid.setChecked(prefs.getBoolean("uid_command", false));

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -389,7 +389,7 @@ public static boolean isFeatureSupported(Context context, String feature) {
         if (WebViewFeature.ALGORITHMIC_DARKENING.equals(feature)) {
             if (BuildConfig.DEBUG) {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean fake_dark = prefs.getBoolean("fake_dark", true);
+                boolean fake_dark = prefs.getBoolean("fake_dark", false);
                 if (fake_dark)
                     return false;
             }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2517,6 +2517,7 @@ private void bindBody(TupleMessageEx message, final boolean scroll) {
             boolean show_images = properties.getValue("images", message.id);
             boolean show_quotes = (properties.getValue("quotes", message.id) || !collapse_quotes);
 
+            boolean dark = Helper.isDarkTheme(context);
             boolean force_light = properties.getValue("force_light", message.id);
             boolean always_images = prefs.getBoolean("html_always_images", false);
             if (always_images && show_full) {
@@ -2664,7 +2665,6 @@ public boolean onOpenLink(String url) {
             float scale = (size == 0 || textSize == 0 ? 1.0f : size / (textSize * message_zoom / 100f));
             args.putFloat("scale", scale);
 
-            boolean dark = Helper.isDarkTheme(context);
             args.putBoolean("fake_dark", !canDarken && fake_dark && dark && !force_light);
 
             new SimpleTask<Object>() {
@@ -7120,7 +7120,7 @@ private class ToolData {
         level = prefs.getInt("log_level", Log.getDefaultLogLevel());
 
         this.canDarken = WebViewEx.isFeatureSupported(context, WebViewFeature.ALGORITHMIC_DARKENING);
-        this.fake_dark = prefs.getBoolean("fake_dark", false);
+        this.fake_dark = prefs.getBoolean("fake_dark", true);
         this.webview_legacy = prefs.getBoolean("webview_legacy", false);
         this.show_recent = prefs.getBoolean("show_recent", false);
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -153,7 +153,8 @@ public class FragmentOptions extends FragmentBase {
             "language_detection",
             "quick_filter", "quick_scroll",
             "experiments", "debug", "log_level", "test1", "test2", "test3", "test4", "test5",
-            "webview_legacy", "browser_zoom", "show_recent",
+            "webview_legacy", "browser_zoom", "fake_dark",
+            "show_recent",
             "biometrics",
             "default_light"
     };

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1783,7 +1783,7 @@ private void setOptions() {
         swUndoManager.setChecked(prefs.getBoolean("undo_manager", false));
         swWebViewLegacy.setChecked(prefs.getBoolean("webview_legacy", false));
         swBrowserZoom.setChecked(prefs.getBoolean("browser_zoom", false));
-        swFakeDark.setChecked(prefs.getBoolean("fake_dark", false));
+        swFakeDark.setChecked(prefs.getBoolean("fake_dark", true));
         swShowRecent.setChecked(prefs.getBoolean("show_recent", false));
         swModSeq.setChecked(prefs.getBoolean("use_modseq", true));
         swUid.setChecked(prefs.getBoolean("uid_command", false));

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -647,7 +647,9 @@ List<Long> getMessageUnseen(
             " AND NOT ui_snoozed IS NULL")
     List<EntityMessage> getSnoozed(Long folder);
 
-    @Query("SELECT COUNT(*) FROM message WHERE NOT ui_snoozed IS NULL")
+    @Query("SELECT COUNT(*) FROM message" +
+            " WHERE NOT ui_snoozed IS NULL" +
+            " AND ui_snoozed <> " + Long.MAX_VALUE)
     int getSnoozedCount();
 
     @Query("SELECT id AS _id, subject AS suggestion FROM message" +

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -584,7 +584,7 @@ static File getRawFile(Context context, Long id) {
     }
 
     static void snooze(Context context, long id, Long wakeup) {
-        if (wakeup != null) {
+        if (wakeup != null && wakeup != Long.MAX_VALUE) {
             /*
                 java.lang.IllegalStateException: Maximum limit of concurrent alarms 500 reached for uid: u0a601, callingPackage: eu.faircode.email
                     at android.os.Parcel.createExceptionOrNull(Parcel.java:2433)

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -218,7 +218,7 @@ protected void onExecuted(Bundle args, Boolean hasAccounts) {
                         // https://developer.android.com/docs/quality-guidelines/core-app-quality
                         long now = new Date().getTime();
                         long last = prefs.getLong("last_launched", 0L);
-                        boolean restore_on_launch = prefs.getBoolean("restore_on_launch", true);
+                        boolean restore_on_launch = prefs.getBoolean("restore_on_launch", false);
                         if (!restore_on_launch || now - last > RESTORE_STATE_INTERVAL * 60 * 1000L)
                             view.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
                         else {

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -538,7 +538,7 @@ private void setOptions() {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-        swRestoreOnLaunch.setChecked(prefs.getBoolean("restore_on_launch", true));
+        swRestoreOnLaunch.setChecked(prefs.getBoolean("restore_on_launch", false));
         swSyncOnlaunch.setChecked(prefs.getBoolean("sync_on_launch", false));
         swDoubleBack.setChecked(prefs.getBoolean("double_back", false));
         swConversationActions.setChecked(prefs.getBoolean("conversation_actions", Helper.isGoogle()));

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1731,7 +1731,7 @@ private void setOptions() {
         swCleanupAttachments.setChecked(prefs.getBoolean("cleanup_attachments", false));
 
         swWatchdog.setChecked(prefs.getBoolean("watchdog", true));
-        swMainLog.setChecked(prefs.getBoolean("main_log", false));
+        swMainLog.setChecked(prefs.getBoolean("main_log", true));
         swProtocol.setChecked(prefs.getBoolean("protocol", false));
         swLogInfo.setChecked(prefs.getInt("log_level", Log.getDefaultLogLevel()) <= android.util.Log.INFO);
         swDebug.setChecked(prefs.getBoolean("debug", false));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1843,7 +1843,7 @@ private static StringBuilder getAppInfo(Context context) {
 
         ContentResolver resolver = context.getContentResolver();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean main_log = prefs.getBoolean("main_log", false);
+        boolean main_log = prefs.getBoolean("main_log", true);
         boolean protocol = prefs.getBoolean("protocol", false);
         int level = prefs.getInt("log_level", Log.getDefaultLogLevel());
         long last_cleanup = prefs.getLong("last_cleanup", 0);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1417,8 +1417,7 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
 
         // Some providers do not support the COPY operation for drafts
         boolean draft = (EntityFolder.DRAFTS.equals(folder.type) || EntityFolder.DRAFTS.equals(target.type));
-        boolean duplicate = (copy && !account.isGmail()) ||
-                (draft && EntityFolder.ARCHIVE.equals(target.type) && account.isGmail());
+        boolean duplicate = (copy && !account.isGmail()) || (draft && account.isGmail());
         if (draft || duplicate) {
             Log.i(folder.name + " " + (duplicate ? "copy" : "move") +
                     " from " + folder.type + " to " + target.type);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1737,7 +1737,7 @@ private void setOptions() {
         sbRoomQueryThreads.setProgress(query_threads);
 
         swWal.setChecked(prefs.getBoolean("wal", true));
-        swCheckpoints.setChecked(prefs.getBoolean("sqlite_checkpoints", false));
+        swCheckpoints.setChecked(prefs.getBoolean("sqlite_checkpoints", true));
         swAnalyze.setChecked(prefs.getBoolean("sqlite_analyze", true));
 
         int sqlite_cache = prefs.getInt("sqlite_cache", DB.DEFAULT_CACHE_SIZE);

File: app/src/main/java/eu/faircode/email/WorkerFts.java
Patch:
@@ -59,7 +59,7 @@ public Result doWork() {
             Context context = getApplicationContext();
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-            boolean checkpoints = prefs.getBoolean("sqlite_checkpoints", false);
+            boolean checkpoints = prefs.getBoolean("sqlite_checkpoints", true);
 
             int indexed = 0;
             List<Long> ids = new ArrayList<>(INDEX_BATCH_SIZE);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -631,6 +631,9 @@ else if (version < 1781) {
                 editor.remove("browse_links")
                         .putBoolean("open_with_tabs", !browse_links);
             }
+        } else if (version < 1927) {
+            if (!prefs.contains("auto_identity"))
+                editor.putBoolean("auto_identity", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1373,7 +1373,7 @@ protected Long onExecute(Context context, Bundle args) throws Throwable {
                 String email = args.getString("email");
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                boolean auto_identity = prefs.getBoolean("auto_identity", true);
+                boolean auto_identity = prefs.getBoolean("auto_identity", false);
                 boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
                 boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
@@ -4565,7 +4565,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
             boolean receipt_default = prefs.getBoolean("receipt_default", false);
             boolean write_below = prefs.getBoolean("write_below", false);
             boolean save_drafts = prefs.getBoolean("save_drafts", true);
-            boolean auto_identity = prefs.getBoolean("auto_identity", true);
+            boolean auto_identity = prefs.getBoolean("auto_identity", false);
             boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
             boolean suggest_received = prefs.getBoolean("suggest_received", false);
             boolean forward_new = prefs.getBoolean("forward_new", true);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -642,7 +642,7 @@ private void setOptions() {
         swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", false));
         swSuggestFrequently.setChecked(prefs.getBoolean("suggest_frequently", false));
         swSuggestFrequently.setEnabled(swSuggestSent.isChecked() || swSuggestReceived.isChecked());
-        swAutoIdentity.setChecked(prefs.getBoolean("auto_identity", true));
+        swAutoIdentity.setChecked(prefs.getBoolean("auto_identity", false));
         swSendChips.setChecked(prefs.getBoolean("send_chips", true));
         swSendReminders.setChecked(prefs.getBoolean("send_reminders", true));
         swSendPending.setChecked(prefs.getBoolean("send_pending", true));

File: app/src/main/java/com/bugsnag/android/Client.java
Patch:
@@ -170,7 +170,8 @@ public Unit invoke(Boolean hasConnection, String networkState) {
 
         DataCollectionModule dataCollectionModule = new DataCollectionModule(contextModule,
                 configModule, systemServiceModule, trackerModule,
-                bgTaskService, connectivity, storageModule.getDeviceId(), memoryTrimState);
+                bgTaskService, connectivity, storageModule.getDeviceId(),
+                storageModule.getInternalDeviceId(), memoryTrimState);
         dataCollectionModule.resolveDependencies(bgTaskService, TaskType.IO);
         appDataCollector = dataCollectionModule.getAppDataCollector();
         deviceDataCollector = dataCollectionModule.getDeviceDataCollector();

File: app/src/main/java/com/bugsnag/android/FileStore.java
Patch:
@@ -39,7 +39,7 @@ interface Delegate {
 
     private final Lock lock = new ReentrantLock();
     private final Collection<File> queuedFiles = new ConcurrentSkipListSet<>();
-    private final Logger logger;
+    protected final Logger logger;
     private final EventStore.Delegate delegate;
 
     FileStore(@NonNull File storageDir,

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -92,6 +92,7 @@
 import com.bugsnag.android.OnSessionCallback;
 import com.bugsnag.android.Session;
 import com.bugsnag.android.Severity;
+import com.bugsnag.android.Telemetry;
 import com.sun.mail.iap.BadCommandException;
 import com.sun.mail.iap.ConnectionException;
 import com.sun.mail.iap.ProtocolException;
@@ -370,6 +371,7 @@ private static void setupBugsnag(final Context context) {
             // https://docs.bugsnag.com/platforms/android/sdk/
             com.bugsnag.android.Configuration config =
                     new com.bugsnag.android.Configuration("9d2d57476a0614974449a3ec33f2604a");
+            config.setTelemetry(Collections.emptySet());
 
             if (BuildConfig.DEBUG)
                 config.setReleaseStage("debug");

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -245,7 +245,7 @@ static void setSystemProperties(Context context) {
         System.setProperty("mail.mime.encodefilename", "false");
         System.setProperty("mail.mime.decodeparameters", "true");
         System.setProperty("mail.mime.encodeparameters", "true");
-        System.setProperty("mail.mime.allowutf8", "false"); // InternetAddress, MimeBodyPart, MimeUtility
+        System.setProperty("mail.mime.allowutf8", "false"); // InternetAddress, (MimeBodyPart: session), MimeUtility
         System.setProperty("mail.mime.cachemultipart", "false");
 
         // https://docs.oracle.com/javaee/6/api/javax/mail/internet/MimeMultipart.html

File: app/src/main/java/javax/mail/internet/MimeMessage.java
Patch:
@@ -1877,7 +1877,7 @@ public void writeTo(OutputStream os, String[] ignoreList)
 	    saveChanges();
 
 	if (modified) {
-	    MimeBodyPart.writeTo(this, os, ignoreList);
+	    MimeBodyPart.writeTo(this, os, ignoreList, allowutf8);
 	    return;
 	}
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -291,7 +291,7 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                                 accounts++;
                         }
                         if (current.accountState.synchronize)
-                            operations += current.getOperations();
+                            operations += current.accountState.operations;
 
                         long account = current.command.getLong("account", -1);
                         if (account > 0 && !current.accountState.id.equals(account))

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -291,7 +291,7 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                                 accounts++;
                         }
                         if (current.accountState.synchronize)
-                            operations += current.accountState.operations;
+                            operations += current.getOperations();
 
                         long account = current.command.getLong("account", -1);
                         if (account > 0 && !current.accountState.id.equals(account))

File: app/src/main/java/eu/faircode/email/EditTextMultiAutoComplete.java
Patch:
@@ -131,7 +131,8 @@ public void run() {
                                 if (spans.length == 1) {
                                     int start = edit.getSpanStart(spans[0]);
                                     int end = edit.getSpanEnd(spans[0]);
-                                    edit.delete(start, end);
+                                    if (backspace > start)
+                                        edit.delete(start, end);
                                 }
                             } catch (Throwable ex) {
                                 Log.e(ex);

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -123,10 +123,9 @@ public abstract class DB extends RoomDatabase {
     private static Context sContext;
     private static DB sInstance;
 
+    static final String DB_NAME = "fairemail";
     static final int DEFAULT_QUERY_THREADS = 4; // AndroidX default thread count: 4
     static final int DEFAULT_CACHE_SIZE = 10; // percentage of memory class
-
-    private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default
 
     private static final String[] DB_TABLES = new String[]{

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4427,7 +4427,7 @@ private static EntityAttachment addAttachment(
             // Reset progress on failure
             Log.e(ex);
             db.attachment().setError(attachment.id, Log.formatThrowable(ex, false));
-            throw ex;
+            return null;
         }
 
         return attachment;
@@ -5425,7 +5425,7 @@ public FilterResult tail(Node node, int depth) {
 
                 if (last_attachments != null)
                     for (EntityAttachment attachment : last_attachments)
-                        if (!attachment.available && attachment.progress == null)
+                        if (!attachment.available && attachment.progress == null && attachment.error == null)
                             EntityOperation.queue(context, data.draft, EntityOperation.ATTACHMENT, attachment.id);
 
                 db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -490,7 +490,7 @@ public void onClick(View v) {
             }
         });
 
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), new OnBackPressedCallback(true) {
+        setBackPressedCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 if (Helper.isKeyboardVisible(view))

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1053,7 +1053,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
         });
 
         addKeyPressedListener(onKeyPressedListener);
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), backPressedCallback);
+        setBackPressedCallback(backPressedCallback);
 
         // Initialize
         setHasOptionsMenu(true);

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -238,7 +238,7 @@ public void onClick(View v) {
             }
         });
 
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), new OnBackPressedCallback(true) {
+        setBackPressedCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 if (Helper.isKeyboardVisible(view))

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -491,7 +491,7 @@ public void onClick(View v) {
             }
         });
 
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), new OnBackPressedCallback(true) {
+        setBackPressedCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 if (Helper.isKeyboardVisible(view))

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1629,7 +1629,7 @@ public void onClick(View v) {
         });
 
         addKeyPressedListener(keyPressedListener);
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), backPressedCallback);
+        setBackPressedCallback(backPressedCallback);
 
         // Initialize
         FragmentDialogTheme.setBackground(getContext(), view, false);

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -275,7 +275,7 @@ public void onClick(View v) {
             }
         });
 
-        getActivity().getOnBackPressedDispatcher().addCallback(getViewLifecycleOwner(), new OnBackPressedCallback(true) {
+        setBackPressedCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 if (Helper.isKeyboardVisible(view))

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -121,7 +121,7 @@ void init(int height, int maxHeight, float size, Pair<Integer, Integer> position
         boolean canDarken = WebViewEx.isFeatureSupported(WebViewFeature.ALGORITHMIC_DARKENING);
         if (canDarken)
             WebSettingsCompat.setAlgorithmicDarkeningAllowed(settings, dark && !force_light);
-        setBackgroundColor(canDarken && force_light ? Color.WHITE : Color.TRANSPARENT);
+        setBackgroundColor(canDarken && dark && !force_light ? Color.TRANSPARENT : Color.WHITE);
 
         float fontSize = 16f /* Default */ *
                 (browser_zoom ? 1f : message_zoom / 100f);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6217,7 +6217,7 @@ private void updateDebugInfo() {
         lastTime = time;
 
 
-        tvDebug.setText(perc + "% " + (nheap / (1024 * 1024)) + "M" + " " + utilization + "%");
+        tvDebug.setText(utilization + "%\n" + perc + "% " + (nheap / (1024 * 1024)) + "M");
     }
 
     private boolean handleThreadActions(

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -190,7 +190,7 @@ protected void finish() {
         finished = true;
 
         if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
-            getParentFragmentManager().popBackStackImmediate();
+            getParentFragmentManager().popBackStack();
         else
             finish = true;
     }

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1874,7 +1874,7 @@ protected void onException(Bundle args, Throwable ex) {
     }
 
     private void setLastCleanup(long time) {
-        if (!getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
+        if (getContext() == null)
             return;
 
         java.text.DateFormat DTF = Helper.getDateTimeInstance(getContext());

File: app/src/main/java/eu/faircode/email/FragmentDialogPermissions.java
Patch:
@@ -74,7 +74,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         boolean hasContactPermissions =
                 Helper.hasPermission(context, Manifest.permission.READ_CONTACTS);
         boolean hasNotificationPermissions =
-                (Helper.getTargetSdk(context) < Build.VERSION_CODES.TIRAMISU ||
+                (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU ||
                         Helper.hasPermission(context, Manifest.permission.POST_NOTIFICATIONS));
         boolean isIgnoring = !Boolean.FALSE.equals(Helper.isIgnoringOptimizations(context));
         boolean canScheduleExact = AlarmManagerCompatEx.canScheduleExactAlarms(getContext());

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -491,7 +491,7 @@ private void onExit() {
         boolean hasContactPermissions =
                 hasPermission(Manifest.permission.READ_CONTACTS);
         boolean hasNotificationPermissions =
-                (Helper.getTargetSdk(context) < Build.VERSION_CODES.TIRAMISU ||
+                (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU ||
                         hasPermission(Manifest.permission.POST_NOTIFICATIONS));
         boolean isIgnoring = !Boolean.FALSE.equals(Helper.isIgnoringOptimizations(context));
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -394,7 +394,7 @@ static boolean hasPermissions(Context context, String[] permissions) {
     static String[] getDesiredPermissions(Context context) {
         List<String> permissions = new ArrayList<>();
         permissions.add(Manifest.permission.READ_CONTACTS);
-        if (getTargetSdk(context) >= Build.VERSION_CODES.TIRAMISU)
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU)
             permissions.add(Manifest.permission.POST_NOTIFICATIONS);
         return permissions.toArray(new String[0]);
     }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3251,7 +3251,7 @@ else if (content instanceof InputStream) {
                                 // UTF-16 can be detected as US-ASCII
                                 if (StandardCharsets.UTF_8.equals(detected)) {
                                     cs = null;
-                                    result = new String(result.getBytes(StandardCharsets.ISO_8859_1), detected);
+                                    result = new String(result.getBytes(cs), detected);
                                 }
                             }
                         } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3234,7 +3234,7 @@ else if (content instanceof InputStream) {
                                 Log.w(new Throwable("Charset=" + cs + " detected=" + detected));
                             if (StandardCharsets.UTF_8.equals(detected)) {
                                 charset = null;
-                                result = new String(result.getBytes(cs), detected);
+                                result = new String(result.getBytes(StandardCharsets.ISO_8859_1), detected);
                             }
                         }
                     } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -472,6 +472,7 @@ public Header nextElement() {
                             Charset cs = Charset.forName(charset);
                             Charset detected = CharsetHelper.detect(text, cs);
                             boolean isUtf8 = CharsetHelper.isUTF8(text.getBytes(cs));
+                            boolean isUtf16 = CharsetHelper.isUTF16(text.getBytes(cs));
                             boolean isW1252 = !Objects.equals(text, CharsetHelper.utf8toW1252(text));
 
                             for (int i = 0; i < level; i++)
@@ -480,6 +481,7 @@ public Header nextElement() {
                             ssb.append("Detected: ")
                                     .append(detected == null ? "?" : detected.toString())
                                     .append(" isUTF8=").append(Boolean.toString(isUtf8))
+                                    .append(" isUTF16=").append(Boolean.toString(isUtf16))
                                     .append(" isW1252=").append(Boolean.toString(isW1252))
                                     .append('\n');
                         }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3229,10 +3229,10 @@ else if (content instanceof InputStream) {
                     try {
                         if (CHARSET16.contains(cs)) {
                             Charset detected = CharsetHelper.detect(result, cs);
+                            // UTF-16 can be detected as US-ASCII
                             if (!CHARSET16.contains(detected))
                                 Log.w(new Throwable("Charset=" + cs + " detected=" + detected));
-                            if (StandardCharsets.US_ASCII.equals(detected) ||
-                                    StandardCharsets.UTF_8.equals(detected)) {
+                            if (StandardCharsets.UTF_8.equals(detected)) {
                                 charset = null;
                                 result = new String(result.getBytes(cs), detected);
                             }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6554,7 +6554,7 @@ private Spanned getKeywords(TupleMessageEx message) {
             SpannableStringBuilder ssb = new SpannableStringBuilderEx();
             for (int i = 0; i < message.keywords.length; i++) {
                 String keyword = message.keywords[i];
-                if (MessageHelper.showKeyword(keyword)) {
+                if (debug || MessageHelper.showKeyword(keyword)) {
                     if (ssb.length() > 0)
                         ssb.append(' ');
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1630,8 +1630,9 @@ private static void onMove(Context context, JSONArray jargs, EntityAccount accou
             return;
         }
 
-        // Move from trash/drafts only
+        // Move from drafts/sent/trash+leave_delete only
         if (!EntityFolder.DRAFTS.equals(folder.type) &&
+                !EntityFolder.SENT.equals(folder.type) &&
                 !(EntityFolder.TRASH.equals(folder.type) && account.leave_deleted))
             throw new IllegalArgumentException("Invalid POP3 folder" +
                     " source=" + folder.type + " target=" + target.type +

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -531,6 +531,8 @@ public void startActivity(Intent intent) {
             Log.logExtras(intent);
             super.startActivity(intent);
         } catch (Throwable ex) {
+            if (this instanceof ActivityMain)
+                throw ex;
             Helper.reportNoViewer(this, intent, ex);
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3968,6 +3968,7 @@ private void onActionMoveSelection(final String type, boolean block) {
             @Override
             protected ArrayList<MessageTarget> onExecute(Context context, Bundle args) {
                 String type = args.getString("type");
+                boolean block = args.getBoolean("block");
                 long[] ids = args.getLongArray("ids");
                 boolean filter_archive = args.getBoolean("filter_archive");
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6772,7 +6772,7 @@ protected Void onExecute(Context context, Bundle args) {
                         if (target.copy)
                             EntityOperation.queue(context, message, EntityOperation.COPY, target.targetFolder.id);
                         else
-                            EntityOperation.queue(context, message, EntityOperation.MOVE, target.targetFolder.id);
+                            EntityOperation.queue(context, message, EntityOperation.MOVE, target.targetFolder.id, null, null, !target.block);
 
                         if (target.block &&
                                 EntityFolder.JUNK.equals(target.targetFolder.type))

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1807,6 +1807,7 @@ private static StringBuilder getAppInfo(Context context) {
 
         ContentResolver resolver = context.getContentResolver();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+        long last_cleanup = prefs.getLong("last_cleanup", 0);
 
         PackageManager pm = context.getPackageManager();
         String installer = pm.getInstallerPackageName(BuildConfig.APPLICATION_ID);
@@ -1840,6 +1841,7 @@ private static StringBuilder getAppInfo(Context context) {
 
         sb.append(String.format("Installer: %s\r\n", installer));
         sb.append(String.format("Installed: %s\r\n", new Date(Helper.getInstallTime(context))));
+        sb.append(String.format("Last cleanup: %s\r\n", new Date(last_cleanup)));
         sb.append(String.format("Now: %s\r\n", new Date()));
 
         sb.append("\r\n");

File: app/src/main/java/eu/faircode/email/FragmentDialogInsertLink.java
Patch:
@@ -99,7 +99,9 @@ public void afterTextChanged(Editable editable) {
                     return;
 
                 Uri uri = Uri.parse(editable.toString());
-                tvInsecure.setVisibility(UriHelper.isSecure(uri) ? View.GONE : View.VISIBLE);
+                tvInsecure.setVisibility(
+                        !UriHelper.isHyperLink(uri) || UriHelper.isSecure(uri)
+                                ? View.GONE : View.VISIBLE);
                 btnMetadata.setEnabled(UriHelper.isHyperLink(uri));
             }
         });

File: app/src/main/java/eu/faircode/email/NavMenuItem.java
Patch:
@@ -125,7 +125,7 @@ void onClick() {
 
     boolean onLongClick() {
         try {
-            return longClick.call();
+            return (longClick != null && longClick.call());
         } catch (Throwable ex) {
             Log.e(ex);
         }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1416,7 +1416,7 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
 
         // Some providers do not support the COPY operation for drafts
         boolean draft = (EntityFolder.DRAFTS.equals(folder.type) || EntityFolder.DRAFTS.equals(target.type));
-        boolean duplicate = (copy && !account.isGmail());
+        boolean duplicate = (copy && !account.isGmail()) || (draft && account.isGmail());
         if (draft || duplicate) {
             Log.i(folder.name + " " + (duplicate ? "copy" : "move") +
                     " from " + folder.type + " to " + target.type);

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -79,7 +79,7 @@ public class StyleHelper {
             BackgroundColorSpan.class,
             ForegroundColorSpan.class,
             AlignmentSpan.class,
-            BulletSpan.class,
+            BulletSpanEx.class, NumberSpan.class,
             QuoteSpan.class, IndentSpan.class,
             StrikethroughSpan.class,
             URLSpan.class,

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -7724,13 +7724,13 @@ public void onItemSelected(@NonNull ViewHolder holder, boolean selected) {
     @Override
     public void onViewAttachedToWindow(@NonNull ViewHolder holder) {
         // View will become visible (possibly without rebinding)
-        holder.cowner.start();
+        //holder.cowner.start();
     }
 
     @Override
     public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         // View is invisible, but can be reused (without rebinding)
-        holder.cowner.stop();
+        //holder.cowner.stop();
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1272,7 +1272,9 @@ public void tail(Node node, int depth) {
             if (view) {
                 Element parent = e.parent();
                 if ("blockquote".equals(e.tagName()) || parent == null ||
-                        !("ol".equals(parent.tagName()) || "ul".equals(parent.tagName()))) {
+                        !("li".equals(parent.tagName()) ||
+                                "ol".equals(parent.tagName()) ||
+                                "ul".equals(parent.tagName()))) {
                     if (!"false".equals(e.attr("x-line-before")))
                         e.attr("x-line-before", "true");
                     if (!"false".equals(e.attr("x-line-after")))

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -4392,7 +4392,7 @@ static InternetAddress[] dedup(InternetAddress[] addresses) {
             return null;
 
         List<String> emails = new ArrayList<>();
-        List<Address> result = new ArrayList<>();
+        List<InternetAddress> result = new ArrayList<>();
         for (InternetAddress address : addresses) {
             String email = address.getAddress();
             if (!emails.contains(email)) {

File: app/src/main/java/eu/faircode/email/UriHelper.java
Patch:
@@ -102,12 +102,12 @@ static String getRootDomain(Context context, String host) {
         String tld = getTld(context, host);
         if (tld == null)
             return null;
-        if (tld.equals(host))
+        if (tld.equalsIgnoreCase(host))
             return null;
         int len = host.length() - tld.length() - 1;
         if (len < 0) {
             Log.e("getRootDomain host=" + host + " tld=" + tld);
-            return host;
+            return null;
         }
         int dot = host.substring(0, len).lastIndexOf('.');
         if (dot < 0)

File: app/src/main/java/eu/faircode/email/FragmentDialogSync.java
Patch:
@@ -58,7 +58,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         } else
             tvFolder.setText(name);
 
-        etMonths.setText(null);
+        etMonths.setText("12");
 
         tvRemark.setOnClickListener(new View.OnClickListener() {
             @Override

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -623,6 +623,7 @@ public void onClick(View v) {
         spIdent.setOnItemSelectedListener(onItemSelectedListener);
         spAnswer.setOnItemSelectedListener(onItemSelectedListener);
 
+        cbResend.setEnabled(false);
         etTo.addTextChangedListener(new TextWatcher() {
             @Override
             public void beforeTextChanged(CharSequence s, int start, int count, int after) {
@@ -649,6 +650,7 @@ public void onClick(View v) {
             }
         });
 
+        cbAttached.setEnabled(protocol == EntityAccount.TYPE_IMAP);
         cbResend.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
@@ -657,7 +659,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 cbAnswerSubject.setEnabled(!checked);
                 cbOriginalText.setEnabled(!checked);
                 cbWithAttachments.setEnabled(!checked);
-                cbAttached.setEnabled(false);
+                cbAttached.setEnabled(!checked && protocol == EntityAccount.TYPE_IMAP);
             }
         });
 

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -129,7 +129,7 @@ else if (EntityFolder.OUTBOX.equals(folder.type)) {
             tvItem.setTypeface(count == 0 ? Typeface.DEFAULT : Typeface.DEFAULT_BOLD);
             tvItem.setVisibility(expanded ? View.VISIBLE : View.GONE);
 
-            tvItemExtra.setText(NF.format(count));
+            tvItemExtra.setText(NF.format(folder.messages));
             tvItemExtra.setVisibility(nav_count && expanded ? View.VISIBLE : View.GONE);
 
             ivExtra.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -129,7 +129,7 @@ else if (EntityFolder.OUTBOX.equals(folder.type)) {
             tvItem.setTypeface(count == 0 ? Typeface.DEFAULT : Typeface.DEFAULT_BOLD);
             tvItem.setVisibility(expanded ? View.VISIBLE : View.GONE);
 
-            tvItemExtra.setText(NF.format(folder.messages));
+            tvItemExtra.setText(NF.format(count));
             tvItemExtra.setVisibility(nav_count && expanded ? View.VISIBLE : View.GONE);
 
             ivExtra.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -157,7 +157,8 @@ public class FragmentOptions extends FragmentBase {
             "quick_filter", "quick_scroll",
             "experiments", "debug", "log_level", "test1", "test2", "test3", "test4", "test5", "webview_legacy",
             "biometrics",
-            "default_light"
+            "default_light",
+            "last_sync_time"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -2029,16 +2029,16 @@ static long getCacheQuota(Context context) {
             } catch (IOException ex) {
                 Log.w(ex);
             }
-        return -1;
+        return 0;
     }
 
-    static long getSize(File dir) {
+    static long getSizeUsed(File dir) {
         long size = 0;
         File[] listed = dir.listFiles();
         if (listed != null)
             for (File file : listed)
                 if (file.isDirectory())
-                    size += getSize(file);
+                    size += getSizeUsed(file);
                 else
                     size += file.length();
         return size;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2431,7 +2431,8 @@ protected void onExecuted(Bundle args, List<LanguageTool.Suggestion> suggestions
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Log.unexpectedError(getParentFragmentManager(), ex);
+                Throwable exex = new Throwable("LanguageTool", ex);
+                Log.unexpectedError(getParentFragmentManager(), exex, false);
             }
         }.execute(this, args, "compose:lt");
     }

File: app/src/main/java/eu/faircode/email/FragmentDialogTheme.java
Patch:
@@ -344,8 +344,7 @@ static int getTheme(Context context) {
         boolean light = (composer_light && context instanceof ActivityCompose);
         if (light)
             night = false;
-        EntityLog.log(context, "Activity theme=" + theme +
-                "light = " + light + " night=" + night);
+        Log.i("Activity theme=" + theme + " light=" + light + " night=" + night);
 
         switch (theme) {
             // Light

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6899,6 +6899,7 @@ private class ToolData {
 
         boolean contacts = Helper.hasPermission(context, Manifest.permission.READ_CONTACTS);
         boolean avatars = prefs.getBoolean("avatars", true);
+        boolean bimi = prefs.getBoolean("bimi", false);
         boolean favicons = prefs.getBoolean("favicons", false);
         boolean generated = prefs.getBoolean("generated_icons", true);
 
@@ -6910,7 +6911,7 @@ private class ToolData {
         this.threading_unread = threading && prefs.getBoolean("threading_unread", false);
         this.indentation = prefs.getBoolean("indentation", false);
 
-        this.avatars = (contacts && avatars) || (favicons || generated);
+        this.avatars = (contacts && avatars) || (bimi || favicons || generated);
         this.color_stripe = prefs.getBoolean("color_stripe", true);
         this.check_authentication = prefs.getBoolean("check_authentication", true);
         this.check_tls = prefs.getBoolean("check_tls", true);

File: app/src/main/java/eu/faircode/email/WidgetUnifiedRemoteViewsFactory.java
Patch:
@@ -113,8 +113,6 @@ public void onDataSetChanged() {
         this.colorStripeWidth = Helper.dp2pixels(context, color_stripe_wide ? 12 : 6);
 
         colorWidgetForeground = ContextCompat.getColor(context, R.color.colorWidgetForeground);
-        int highlight_color = prefs.getInt("highlight_color", colorWidgetForeground);
-        colorWidgetUnread = ColorUtils.setAlphaComponent(highlight_color, 255);
         colorWidgetRead = ContextCompat.getColor(context, R.color.colorWidgetRead);
         colorSeparator = ContextCompat.getColor(context, R.color.lightColorSeparator);
 
@@ -125,6 +123,9 @@ public void onDataSetChanged() {
             colorSeparator = ContextCompat.getColor(context, R.color.darkColorSeparator);
         }
 
+        int highlight_color = prefs.getInt("highlight_color", colorWidgetForeground);
+        colorWidgetUnread = ColorUtils.setAlphaComponent(highlight_color, 255);
+
         pro = ActivityBilling.isPro(context);
 
         DB db = DB.getInstance(context);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -6298,7 +6298,7 @@ protected void onExecuted(Bundle args, EntityMessage draft) {
             bottom_navigation.getMenu().findItem(R.id.action_redo).setVisible(draft.revision < draft.revisions);
 
             if (args.getBundle("extras").getBoolean("silent")) {
-                etBody.setTag(etBody.getText());
+                etBody.setTag(null);
                 return;
             }
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -633,7 +633,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             public void onClick(View v) {
                 Context context = getContext();
                 int editTextColor = Helper.resolveColor(context, android.R.attr.editTextColor);
-                int highlightColor = prefs.getInt("highlight_color", Helper.resolveColor(context, R.attr.colorAccent));
+                int highlightColor = prefs.getInt("highlight_color", Helper.resolveColor(context, R.attr.colorUnreadHighlight));
 
                 ColorPickerDialogBuilder builder = ColorPickerDialogBuilder
                         .with(context)
@@ -656,7 +656,7 @@ public void onClick(DialogInterface dialog, int selectedColor, Integer[] allColo
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 prefs.edit().remove("highlight_color").apply();
-                                btnHighlightColor.setColor(Helper.resolveColor(context, R.attr.colorAccent));
+                                btnHighlightColor.setColor(Helper.resolveColor(context, R.attr.colorUnreadHighlight));
                                 WidgetUnified.updateData(context);
                             }
                         });

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1036,6 +1036,7 @@ public void run() {
             @Override
             public boolean onLongClick(View view) {
                 DB.shrinkMemory(view.getContext());
+                new ViewModelProvider(getActivity()).get(ViewModelMessages.class).cleanup();
                 view.postDelayed(new Runnable() {
                     @Override
                     public void run() {

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -148,6 +148,7 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
         LifecycleObserver watcher = new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroy() {
+                EntityLog.log(context, EntityLog.Type.Debug, "Owner gone task=" + name);
                 destroyed = true;
                 owner.getLifecycle().removeObserver(this);
             }

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -388,7 +388,7 @@ else if (json.has("pop"))
         account.ignore_size = json.optBoolean("ignore_size", false);
         account.use_date = json.optBoolean("use_date", false);
         account.use_received = json.optBoolean("use_received", false);
-        account.conditions = json.optString("conditions");
+        account.conditions = json.optString("conditions", null);
 
         return account;
     }

File: app/src/main/java/eu/faircode/email/TupleAccountNetworkState.java
Patch:
@@ -20,6 +20,7 @@
 */
 
 import android.os.Bundle;
+import android.text.TextUtils;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -49,7 +50,7 @@ public TupleAccountNetworkState(
         this.accountState = accountState;
 
         this.jconditions = new JSONObject();
-        if (this.accountState.conditions != null)
+        if (!TextUtils.isEmpty(this.accountState.conditions))
             try {
                 jconditions = new JSONObject(this.accountState.conditions);
             } catch (Throwable ex) {

File: app/src/debug/java/eu.faircode.email/CoalMine.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.concurrent.TimeUnit;
 
 import kotlin.Unit;
 import kotlin.jvm.functions.Function2;
@@ -39,7 +40,7 @@
 
 public class CoalMine {
     static void install(@NonNull Application app) {
-        AppWatcher.INSTANCE.manualInstall(app, 10000);
+        AppWatcher.INSTANCE.manualInstall(app, TimeUnit.SECONDS.toMillis(5));
     }
 
     static void setup(boolean enabled) {

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -252,6 +252,8 @@ private static Boolean isMetered(Context context) {
             NetworkInfo ani = cm.getActiveNetworkInfo();
             if (ani == null || !ani.isConnected())
                 return null;
+            if (vpn_only && !vpnActive(context))
+                return null;
             return cm.isActiveNetworkMetered();
         }
 

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -147,6 +147,7 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
         LifecycleObserver watcher = new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroy() {
+                EntityLog.log(context, EntityLog.Type.Debug, "Cancelling task=" + name);
                 cancel(context);
                 owner.getLifecycle().removeObserver(this);
             }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -9137,7 +9137,7 @@ public void onPageFinished(WebView view, String url) {
                                 return;
                             }
 
-                            PrintManager printManager = Helper.getSystemService(context, PrintManager.class);
+                            PrintManager printManager = (PrintManager) context.getSystemService(Context.PRINT_SERVICE);
                             String jobName = getString(R.string.app_name);
                             if (!TextUtils.isEmpty(data[0]))
                                 jobName += " - " + data[0];

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3328,7 +3328,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
                 ByteArrayOutputStream bos = new ByteArrayOutputStream();
                 apart.part.writeTo(bos);
-                String raw = new String(bos.toByteArray());
+                String raw = new String(bos.toByteArray(), StandardCharsets.ISO_8859_1);
                 String[] parts = raw.split("\\r?\\n" + Pattern.quote("--" + boundary) + "\\r?\\n");
                 if (parts.length < 2)
                     throw new ParseException("Signed part missing");
@@ -3341,7 +3341,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
                     c = c.replaceAll(" +$", ""); // trim trailing spaces
 
                 try (OutputStream os = new FileOutputStream(file)) {
-                    os.write(c.getBytes());
+                    os.write(c.getBytes(StandardCharsets.ISO_8859_1));
                 }
 
                 db.attachment().setDownloaded(local.id, file.length());

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -155,9 +155,10 @@ public interface DaoAccount {
 
     @Query("SELECT * FROM account" +
             " WHERE user = :user" +
+            " AND pop = :protocol" +
             " AND auth_type IN (:auth_type)" +
             " AND tbd IS NULL")
-    List<EntityAccount> getAccounts(String user, int[] auth_type);
+    List<EntityAccount> getAccounts(String user, int protocol, int[] auth_type);
 
     @Query("SELECT * FROM account WHERE `primary`")
     EntityAccount getPrimaryAccount();

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -456,7 +456,9 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
 
                     if (args.getBoolean("update")) {
                         List<EntityAccount> accounts =
-                                db.account().getAccounts(user, new int[]{AUTH_TYPE_GMAIL, AUTH_TYPE_PASSWORD});
+                                db.account().getAccounts(user,
+                                        EntityAccount.TYPE_IMAP,
+                                        new int[]{AUTH_TYPE_GMAIL, AUTH_TYPE_PASSWORD});
                         if (accounts != null && accounts.size() == 1)
                             update = accounts.get(0);
                     }

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -765,7 +765,9 @@ else if ("mailru".equals(id)) {
 
                     if (args.getBoolean("update")) {
                         List<EntityAccount> accounts =
-                                db.account().getAccounts(username, new int[]{AUTH_TYPE_OAUTH, AUTH_TYPE_PASSWORD});
+                                db.account().getAccounts(username,
+                                        pop ? EntityAccount.TYPE_POP : EntityAccount.TYPE_IMAP,
+                                        new int[]{AUTH_TYPE_OAUTH, AUTH_TYPE_PASSWORD});
                         if (accounts != null && accounts.size() == 1)
                             update = accounts.get(0);
                     }

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -158,6 +158,7 @@ public void onVmViolation(Violation v) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         final boolean crash_reports = prefs.getBoolean("crash_reports", false);
+        final boolean leak_canary = prefs.getBoolean("leak_canary", false);
         final boolean load_emoji = prefs.getBoolean("load_emoji", BuildConfig.PLAY_STORE_RELEASE);
 
         prev = Thread.getDefaultUncaughtExceptionHandler();
@@ -182,7 +183,7 @@ public void uncaughtException(@NonNull Thread thread, @NonNull Throwable ex) {
         });
 
         Log.setup(this);
-        CoalMine.setup(crash_reports);
+        CoalMine.setup(leak_canary);
 
         upgrade(this);
 

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -916,7 +916,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
 
     private void setContactsPermission(boolean granted) {
         if (granted)
-            ContactInfo.init(getContext());
+            ContactInfo.init(getContext().getApplicationContext());
 
         tvPermissionsDone.setText(granted ? R.string.title_setup_done : R.string.title_setup_to_do);
         tvPermissionsDone.setTextColor(granted ? textColorPrimary : colorWarning);

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -279,7 +279,7 @@ public boolean onLongClick(View v) {
             }
         });
 
-        animator = Helper.getFabAnimator(fab, this);
+        animator = Helper.getFabAnimator(fab, getViewLifecycleOwner());
 
         // Initialize
         FragmentDialogTheme.setBackground(getContext(), view, false);

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -180,7 +180,7 @@ public void onClick(View view) {
             }
         });
 
-        animator = Helper.getFabAnimator(fab, this);
+        animator = Helper.getFabAnimator(fab, getViewLifecycleOwner());
 
         // Initialize
         FragmentDialogTheme.setBackground(getContext(), view, false);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -547,7 +547,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         fabSearch = view.findViewById(R.id.fabSearch);
         fabError = view.findViewById(R.id.fabError);
 
-        animator = Helper.getFabAnimator(fabSearch, this);
+        animator = Helper.getFabAnimator(fabSearch, getViewLifecycleOwner());
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1047,6 +1047,7 @@ protected void onPause() {
 
     @Override
     protected void onDestroy() {
+        lastSnackbar = null;
         LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(this);
         lbm.unregisterReceiver(creceiver);
         super.onDestroy();

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -105,7 +105,7 @@ static synchronized void classify(EntityMessage message, EntityFolder folder, En
                     !classified.equals(folder.name) &&
                     !TextUtils.isEmpty(message.msgid) &&
                     !message.hasKeyword(MessageHelper.FLAG_CLASSIFIED) &&
-                    !message.hasKeyword(MessageHelper.FLAG_FILTERED) &&
+                    (!message.hasKeyword(MessageHelper.FLAG_FILTERED) || BuildConfig.DEBUG) &&
                     !accountMsgIds.get(folder.account).contains(message.msgid) &&
                     !EntityFolder.JUNK.equals(folder.type)) {
                 boolean pro = ActivityBilling.isPro(context);

File: app/src/main/java/eu/faircode/email/ContactInfo.java
Patch:
@@ -108,7 +108,7 @@ public class ContactInfo {
     private static final ExecutorService executorFavicon =
             Helper.getBackgroundExecutor(0, "favicon");
 
-    private static final int GENERATED_ICON_SIZE = 96; // dp
+    private static final int GENERATED_ICON_SIZE = 48; // dp
     private static final int FAVICON_ICON_SIZE = 64; // dp
     private static final int GRAVATAR_TIMEOUT = 5 * 1000; // milliseconds
     private static final int FAVICON_CONNECT_TIMEOUT = 5 * 1000; // milliseconds

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1569,7 +1569,8 @@ public void onClick(DialogInterface dialog, int which) {
                                 editor.remove(option);
 
                         for (String key : prefs.getAll().keySet())
-                            if ((key.startsWith("translated_") && cbGeneral.isChecked()) ||
+                            if ((!BuildConfig.DEBUG &&
+                                    key.startsWith("translated_") && cbGeneral.isChecked()) ||
                                     (key.endsWith(".show_full") && cbFull.isChecked()) ||
                                     (key.endsWith(".show_images") && cbImages.isChecked()) ||
                                     (key.endsWith(".confirm_link") && cbLinks.isChecked())) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4745,7 +4745,9 @@ private static boolean downloadMessage(
             }
 
             for (EntityAttachment attachment : attachments)
-                if (!attachment.available && TextUtils.isEmpty(attachment.error))
+                if (!attachment.available &&
+                        attachment.subsequence == null &&
+                        TextUtils.isEmpty(attachment.error))
                     if (state.getNetworkState().isUnmetered() ||
                             (attachment.size != null && attachment.size < maxSize))
                         try {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -767,6 +767,8 @@ public void afterTextChanged(Editable text) {
                             text.removeSpan(span);
                         }
                     }
+
+                    translated = null;
                 }
 
                 if (lp != null)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3972,7 +3972,7 @@ else if (MessageHelper.FLAG_HIGH_IMPORTANCE.equals(keyword))
             message.tls = helper.getTLS();
             message.dkim = MessageHelper.getAuthentication("dkim", authentication);
             if (Boolean.TRUE.equals(message.dkim))
-                if (!BuildConfig.PLAY_STORE_RELEASE && dkim_verify)
+                if (BuildConfig.DEBUG && dkim_verify)
                     message.dkim = helper.verifyDKIM(context);
                 else
                     message.dkim = helper.checkDKIMRequirements();

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1138,7 +1138,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swDkimVerify.setVisibility(BuildConfig.PLAY_STORE_RELEASE ? View.GONE : View.VISIBLE);
+        swDkimVerify.setVisibility(BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         swDkimVerify.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -460,7 +460,7 @@ private static void queue(Context context, Long account, long folder, Long messa
             int count = db.operation().getOperationCount(folder, name);
             if (count >= MAX_FETCH) {
                 Log.i("Replacing fetch by sync folder=" + folder + " args=" + jargs + " count=" + count);
-                sync(context, folder, false, true);
+                sync(context, folder, false, false);
                 return;
             }
         }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2059,13 +2059,15 @@ private static void attachAccounts(Context context, long id, int sequence) {
                 boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
                 boolean schedule = prefs.getBoolean("schedule", false);
 
+                String ds = ConnectionHelper.getDataSaving(context);
                 boolean vpn = ConnectionHelper.vpnActive(context);
                 boolean ng = Helper.isInstalled(context, "eu.faircode.netguard");
                 boolean tc = Helper.isInstalled(context, "net.kollnig.missioncontrol");
 
                 size += write(os, "enabled=" + enabled + (enabled ? "" : " !!!") +
                         " interval=" + pollInterval + "\r\n" +
                         "metered=" + metered + (metered ? "" : " !!!") +
+                        " restricted=" + ds + ("enabled".equals(ds) ? " !!!" : "") +
                         " vpn=" + vpn + (vpn ? " !!!" : "") +
                         " ng=" + ng + " tc=" + tc + "\r\n" +
                         "optimizing=" + (ignoring == null ? null : !ignoring) + (Boolean.FALSE.equals(ignoring) ? " !!!" : "") +

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1535,7 +1535,7 @@ private String _getThreadIdAlt(Context context, long account, long folder, long
                         Address[] tos = (rr != null && rr.length > 0 ? rr : getTo());
                         if (tos != null && tos.length > 0) {
                             String email = ((InternetAddress) tos[0]).getAddress();
-                            if (!TextUtils.isEmpty(email))
+                            if (!TextUtils.isEmpty(email) && !email.endsWith("@faircode.eu"))
                                 thread = "ses:" + email;
                         }
                     }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -7605,6 +7605,7 @@ private static UriInfo getInfo(Uri uri, Context context) {
 
         if (TextUtils.isEmpty(result.type) ||
                 "*/*".equals(result.type) ||
+                "application/*".equals(result.type) ||
                 "application/octet-stream".equals(result.type))
             result.type = Helper.guessMimeType(result.name);
 

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -98,7 +98,7 @@ public void onCreate(Bundle savedInstanceState) {
         Bundle args = getArguments();
         personal = args.getString("personal");
         address = args.getString("address");
-        update = args.getBoolean("update");
+        update = args.getBoolean("update", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -141,7 +141,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         personal = args.getString("personal");
         address = args.getString("address");
-        update = args.getBoolean("update");
+        update = args.getBoolean("update", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -118,7 +118,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         Bundle args = getArguments();
-        update = args.getBoolean("update");
+        update = args.getBoolean("update", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1015,6 +1015,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
+        swBrowserZoom.setVisibility(BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         swBrowserZoom.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -109,7 +109,7 @@ void init(int height, int maxHeight, float size, Pair<Integer, Integer> position
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean compact = prefs.getBoolean("compact", false);
         int zoom = prefs.getInt("view_zoom", compact ? 0 : 1);
-        boolean browser_zoom = prefs.getBoolean("browser_zoom", false);
+        boolean browser_zoom = prefs.getBoolean("browser_zoom", false) && BuildConfig.DEBUG;
         int message_zoom = prefs.getInt("message_zoom", 100);
         boolean monospaced = prefs.getBoolean("monospaced", false);
         legacy = prefs.getBoolean("webview_legacy", false);

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -478,7 +478,7 @@ public void filter(Long account, boolean junk) {
         this.account = account;
         this.types = junk
                 ? Arrays.asList(EntityContact.TYPE_JUNK, EntityContact.TYPE_NO_JUNK)
-                : new ArrayList<>();
+                : Arrays.asList(EntityContact.TYPE_TO, EntityContact.TYPE_FROM);
         set(all);
     }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -3614,8 +3614,9 @@ else if (size > 1.0f)
         }
 
         for (Element line : doc.select("hr")) {
-            String style = line.attr("style");
-            line.attr("style", mergeStyles(style, "display:inline;"));
+            Element next = line.nextElementSibling();
+            if (next != null && "br".equals(next.tagName()))
+                next.remove();
         }
 
         return doc.html();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -3614,9 +3614,8 @@ else if (size > 1.0f)
         }
 
         for (Element line : doc.select("hr")) {
-            Element next = line.nextElementSibling();
-            if (next != null && "br".equals(next.tagName()))
-                next.remove();
+            String style = line.attr("style");
+            line.attr("style", mergeStyles(style, "display:inline;"));
         }
 
         return doc.html();

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1790,7 +1790,7 @@ private void onMenuRulesAccount() {
             protected EntityAccount onExecute(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
 
-                List<EntityAccount> accounts = db.account().getSynchronizingAccounts(EntityAccount.TYPE_IMAP);
+                List<EntityAccount> accounts = db.account().getSynchronizingAccounts(null);
                 if (accounts != null && accounts.size() == 1)
                     return accounts.get(0);
 

File: app/src/main/java/eu/faircode/email/FragmentDialogSelectAccount.java
Patch:
@@ -83,11 +83,12 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
             @Override
             protected List<EntityAccount> onExecute(Context context, Bundle args) {
                 boolean all = (args != null && args.getBoolean("all"));
+                Integer type = (args == null || !args.containsKey("type") ? null : args.getInt("type"));
 
                 DB db = DB.getInstance(context);
                 return (all
                         ? db.account().getAccounts()
-                        : db.account().getSynchronizingAccounts(null));
+                        : db.account().getSynchronizingAccounts(type));
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -148,6 +148,7 @@ public void onFolderSelected(@NonNull TupleFolderEx folder) {
 
                 Bundle args = getArguments();
                 args.putLong("folder", folder.id);
+                args.putString("type", folder.type);
 
                 sendResult(RESULT_OK);
                 dismiss();

File: app/src/main/java/eu/faircode/email/DaoContact.java
Patch:
@@ -103,7 +103,6 @@ public interface DaoContact {
     int deleteContacts(long before);
 
     @Query("DELETE FROM contact" +
-            " WHERE (type = " + EntityContact.TYPE_TO +
-            " OR type = " + EntityContact.TYPE_FROM + ")")
-    int clearContacts();
+            " WHERE type IN (:types)")
+    int clearContacts(int[] types);
 }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3450,7 +3450,7 @@ else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && local.isCompressed())
                                     db.attachment().setDownloaded(attachment.id, efile.length());
                                 }
                             } catch (Throwable ex) {
-                                Log.e(ex);
+                                Log.e(new Throwable(local.name, ex));
                                 db.attachment().setWarning(local.id, Log.formatThrowable(ex));
                             }
                         else
@@ -3535,7 +3535,7 @@ else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && local.isCompressed())
                                     }
                                 }
                             } catch (Throwable ex) {
-                                Log.e(ex);
+                                Log.e(new Throwable(local.name, ex));
                                 // ArchiveException: Unsupported feature encryption used in entry ...
                                 // UnsupportedZipFeatureException: No Archiver found for the stream signature
                                 if (ex instanceof ArchiveException ||

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2075,7 +2075,8 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         " folders=" + db.folder().countTotal() +
                         " messages=" + db.message().countTotal() +
                         " rules=" + db.rule().countTotal() +
-                        " operations=" + db.operation().getOperationCount() +
+                        " ops=" + db.operation().getOperationCount() +
+                        " outbox=" + db.message().countOutbox() +
                         "\r\n\r\n");
 
                 if (schedule) {

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -102,7 +102,6 @@ public interface DaoMessage {
             " AND (NOT :filter_deleted OR NOT message.ui_deleted)" +
             " AND (:filter_language IS NULL OR SUM(message.language = :filter_language) > 0)" +
             " ORDER BY -IFNULL(message.importance, 1)" +
-            ", account.category COLLATE NOCASE" +
             ", CASE" +
             "   WHEN 'unread' = :sort THEN SUM(1 - message.ui_seen) = 0" +
             "   WHEN 'starred' = :sort THEN COUNT(message.id) - SUM(1 - message.ui_flagged) = 0" +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2055,6 +2055,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                 int pollInterval = ServiceSynchronize.getPollInterval(context);
                 boolean metered = prefs.getBoolean("metered", true);
                 Boolean ignoring = Helper.isIgnoringOptimizations(context);
+                boolean canSchedule = AlarmManagerCompatEx.canScheduleExactAlarms(context);
                 boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
                 boolean schedule = prefs.getBoolean("schedule", false);
 
@@ -2068,6 +2069,7 @@ private static void attachAccounts(Context context, long id, int sequence) {
                         " vpn=" + vpn + (vpn ? " !!!" : "") +
                         " ng=" + ng + " tc=" + tc + "\r\n" +
                         "optimizing=" + (ignoring == null ? null : !ignoring) + (Boolean.FALSE.equals(ignoring) ? " !!!" : "") +
+                        " canSchedule=" + canSchedule + (canSchedule ? "" : " !!!") +
                         " auto_optimize=" + auto_optimize + (auto_optimize ? " !!!" : "") + "\r\n" +
                         "accounts=" + accounts.size() +
                         " folders=" + db.folder().countTotal() +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1666,6 +1666,7 @@ private void clearExpanded(TupleMessageEx message) {
             grpDownloading.setVisibility(View.GONE);
             tvBody.setText(null);
             tvBody.setVisibility(View.GONE);
+            vwRipple.setVisibility(View.GONE);
             // TO DO: clear web view?
             wvBody.setVisibility(View.GONE);
             pbBody.setVisibility(View.GONE);
@@ -1931,6 +1932,7 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
                     tvBody.setMinHeight(height);
                 }
             }
+            vwRipple.setVisibility(View.GONE);
             pbBody.setVisibility(View.GONE);
 
             clearCalendar();
@@ -2924,6 +2926,7 @@ public void run() {
                             public void run() {
                                 try {
                                     tvBody.setText((Spanned) result);
+                                    vwRipple.setVisibility(View.VISIBLE);
 
                                     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                                         bindConversationActions(message, args.getParcelable("actions"));

File: app/src/main/java/com/sun/mail/imap/IMAPBodyPart.java
Patch:
@@ -294,7 +294,8 @@ public synchronized DataHandler getDataHandler()
 		     );
 	    else if (bs.isNested() && message.isREV1() && bs.envelope != null)
 		dh = new DataHandler(
-			new IMAPNestedMessage(message, 
+			new IMAPNestedMessage(message,
+					      bs.encoding,
 					      bs.bodies[0],
 					      bs.envelope,
 					      sectionId),

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -417,7 +417,8 @@ private void _suggest(String query) {
             }
 
             private int getSuggestions(String query, int id, int tab, String title, View view, MatrixCursor cursor) {
-                if (view == null || "nosuggest".equals(view.getTag()))
+                if (view == null ||
+                        ("nosuggest".equals(view.getTag()) && !BuildConfig.DEBUG))
                     return id;
                 else if (view instanceof ViewGroup) {
                     ViewGroup group = (ViewGroup) view;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6847,7 +6847,7 @@ private class ToolData {
         this.flags_background = prefs.getBoolean("flags_background", false);
         this.preview = prefs.getBoolean("preview", false);
         this.preview_italic = prefs.getBoolean("preview_italic", true);
-        this.preview_lines = prefs.getInt("preview_lines", 2);
+        this.preview_lines = prefs.getInt("preview_lines", 1);
         this.message_zoom = prefs.getInt("message_zoom", 100);
         this.attachments_alt = prefs.getBoolean("attachments_alt", false);
         this.thumbnails = prefs.getBoolean("thumbnails", true);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -597,6 +597,9 @@ else if (version < 1781) {
         } else if (version < 1847) {
             if (Helper.isAccessibilityEnabled(context))
                 editor.putBoolean("send_chips", false);
+        } else if (version < 1855) {
+            if (!prefs.contains("preview_lines"))
+                editor.putInt("preview_lines", 2);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1412,7 +1412,7 @@ private void setOptions() {
         swPreview.setChecked(prefs.getBoolean("preview", false));
         swPreviewItalic.setChecked(prefs.getBoolean("preview_italic", true));
         swPreviewItalic.setEnabled(swPreview.isChecked());
-        spPreviewLines.setSelection(prefs.getInt("preview_lines", 2) - 1);
+        spPreviewLines.setSelection(prefs.getInt("preview_lines", 1) - 1);
         spPreviewLines.setEnabled(swPreview.isChecked());
 
         swAddresses.setChecked(prefs.getBoolean("addresses", false));

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1448,7 +1448,7 @@ private void setOptions() {
         swImagesPlaceholders.setChecked(prefs.getBoolean("image_placeholders", true));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swButtonExtra.setChecked(prefs.getBoolean("button_extra", false));
-        swUnzip.setChecked(prefs.getBoolean("unzip", false));
+        swUnzip.setChecked(prefs.getBoolean("unzip", true));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swThumbnails.setChecked(prefs.getBoolean("thumbnails", true));
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3386,7 +3386,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
                 else if (local.isCompressed()) {
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                    boolean unzip = prefs.getBoolean("unzip", false);
+                    boolean unzip = prefs.getBoolean("unzip", true);
 
                     if (unzip)
                         if (local.isGzip() && !local.isTarGzip())

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1440,7 +1440,7 @@ private void setOptions() {
         swImagesPlaceholders.setChecked(prefs.getBoolean("image_placeholders", true));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swButtonExtra.setChecked(prefs.getBoolean("button_extra", false));
-        swUnzip.setChecked(prefs.getBoolean("unzip", true));
+        swUnzip.setChecked(prefs.getBoolean("unzip", false));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swThumbnails.setChecked(prefs.getBoolean("thumbnails", true));
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3377,7 +3377,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
                 else if ("application/zip".equals(local.type)) {
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                    boolean unzip = prefs.getBoolean("unzip", true);
+                    boolean unzip = prefs.getBoolean("unzip", false);
 
                     if (unzip) {
                         // https://developer.android.com/reference/java/util/zip/ZipInputStream

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1440,7 +1440,7 @@ private void setOptions() {
         swImagesPlaceholders.setChecked(prefs.getBoolean("image_placeholders", true));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swButtonExtra.setChecked(prefs.getBoolean("button_extra", false));
-        swUnzip.setChecked(prefs.getBoolean("unzip", false));
+        swUnzip.setChecked(prefs.getBoolean("unzip", true));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swThumbnails.setChecked(prefs.getBoolean("thumbnails", true));
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -3377,7 +3377,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
                 else if ("application/zip".equals(local.type)) {
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                    boolean unzip = prefs.getBoolean("unzip", false);
+                    boolean unzip = prefs.getBoolean("unzip", true);
 
                     if (unzip) {
                         // https://developer.android.com/reference/java/util/zip/ZipInputStream

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -785,7 +785,7 @@ else if (false) {
                             if (fsize != null)
                                 if (fsize == 0) {
                                     if (BuildConfig.DEBUG)
-                                        if (display_hidden)
+                                        if (display_hidden && false)
                                             sb.append("text-decoration:line-through;");
                                         else if (false) {
                                             Log.i("Removing font size zero " + element.tagName());

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2838,7 +2838,7 @@ protected void onExecuted(Bundle args, final Spanned body) {
                 etBody.setText(body);
 
                 int start = args.getInt("start");
-                if (start < body.length())
+                if (start <= body.length())
                     etBody.setSelection(start);
             }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -673,7 +673,7 @@ public void run() {
                     drawerLayout.closeDrawer(drawerContainer);
                 onMenuOperations();
             }
-        });
+        }).setExtraCount(BuildConfig.DEBUG);
 
         menus.add(navOperations);
 

File: app/src/main/java/eu/faircode/email/AdapterNavSearch.java
Patch:
@@ -54,6 +54,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         private View view;
         private ImageView ivItem;
         private ImageView ivBadge;
+        private TextView tvCount;
         private TextView tvItem;
         private TextView tvItemExtra;
         private ImageView ivExtra;
@@ -65,6 +66,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
             view = itemView.findViewById(R.id.clItem);
             ivItem = itemView.findViewById(R.id.ivItem);
             ivBadge = itemView.findViewById(R.id.ivBadge);
+            tvCount = itemView.findViewById(R.id.tvCount);
             tvItem = itemView.findViewById(R.id.tvItem);
             tvItemExtra = itemView.findViewById(R.id.tvItemExtra);
             ivExtra = itemView.findViewById(R.id.ivExtra);
@@ -87,6 +89,7 @@ private void bindTo(EntitySearch search) {
                 ivItem.setColorFilter(search.color);
 
             ivBadge.setVisibility(View.GONE);
+            tvCount.setVisibility(View.GONE);
             tvItem.setText(search.name);
 
             tvItemExtra.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -62,6 +62,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         private View view;
         private ImageView ivItem;
         private ImageView ivBadge;
+        private TextView tvCount;
         private TextView tvItem;
         private TextView tvItemExtra;
         private ImageView ivExtra;
@@ -73,6 +74,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
             view = itemView.findViewById(R.id.clItem);
             ivItem = itemView.findViewById(R.id.ivItem);
             ivBadge = itemView.findViewById(R.id.ivBadge);
+            tvCount = itemView.findViewById(R.id.tvCount);
             tvItem = itemView.findViewById(R.id.tvItem);
             tvItemExtra = itemView.findViewById(R.id.tvItemExtra);
             ivExtra = itemView.findViewById(R.id.ivExtra);
@@ -111,6 +113,7 @@ else if (EntityFolder.OUTBOX.equals(folder.type)) {
                 count = folder.unseen;
 
             ivBadge.setVisibility(count == 0 || expanded ? View.GONE : View.VISIBLE);
+            tvCount.setVisibility(View.GONE);
 
             if (count == 0)
                 tvItem.setText(EntityFolder.localizeType(context, folder.type));

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -934,7 +934,7 @@ static String getFamily(String family) {
         if (faces.contains("montserrat"))
             return "Montserrat, Gotham, sans-serif";
         if (faces.contains("arimo"))
-            return "Arimo, Arial, Verdana, Helvetica, Helvetica Neue, sans-serif";
+            return "Arimo, Arial, Verdana, Helvetica, \"Helvetica Neue\", sans-serif";
         if (faces.contains("tinos"))
             return "Tinos, \"Times New Roman\", Times, serif";
         if (faces.contains("cousine"))

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -440,7 +440,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        btnClearAll.setVisibility(BuildConfig.PLAY_STORE_RELEASE ? View.GONE : View.VISIBLE);
+        btnClearAll.setVisibility(BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         btnClearAll.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -621,6 +621,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
                 message.ui_seen = true;
                 message.ui_hide = true;
                 message.ui_busy = Long.MAX_VALUE; // Needed to keep messages in user folders
+                message.raw = null;
                 message.error = null;
                 message.id = db.message().insertMessage(message);
 

File: app/src/main/java/eu/faircode/email/EditTextCompose.java
Patch:
@@ -117,7 +117,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
 
                 @Override
                 public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-                    if (item.getGroupId() == Menu.CATEGORY_ALTERNATIVE) {
+                    if (item.getGroupId() == Menu.CATEGORY_SECONDARY) {
                         int id = item.getItemId();
                         if (id == R.string.title_undo)
                             return EditTextCompose.super.onTextContextMenuItem(android.R.id.undo);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -157,7 +157,7 @@ public class Log {
     private static Context ctx;
 
     private static int level = android.util.Log.INFO;
-    private static final int MAX_CRASH_REPORTS = 5;
+    private static final int MAX_CRASH_REPORTS = (BuildConfig.TEST_RELEASE ? 50 : 5);
     private static final String TAG = "fairemail";
 
     static final String TOKEN_REFRESH_REQUIRED =

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -195,7 +195,7 @@ public class Helper {
     static final Pattern EMAIL_ADDRESS = Pattern.compile(
             "[\\S]{1,256}" +
                     "\\@" +
-                    "[\\p{L}][\\p{L}0-9\\-\\_]{0,64}" +
+                    "[\\p{L}0-9][\\p{L}0-9\\-\\_]{0,64}" +
                     "(" +
                     "\\." +
                     "[\\p{L}0-9][\\p{L}0-9\\-\\_]{0,25}" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1806,7 +1806,7 @@ private void onMenuSaveDrafts() {
 
     private void onMenuSendChips() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-        boolean send_chips = prefs.getBoolean("send_chips", true);
+        boolean send_chips = prefs.getBoolean("send_chips", false);
         prefs.edit().putBoolean("send_chips", !send_chips).apply();
 
         etTo.setText(etTo.getText());

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -44,6 +44,7 @@ public class TupleFolderEx extends EntityFolder implements Serializable {
     public String accountCategory;
     public Integer accountColor;
     public String accountState;
+    public String accountError;
     public int rules;
     public int messages;
     public int content;
@@ -74,6 +75,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.accountCategory, other.accountCategory) &&
                     Objects.equals(this.accountColor, other.accountColor) &&
                     Objects.equals(this.accountState, other.accountState) &&
+                    Objects.equals(this.accountError, other.accountError) &&
                     this.rules == other.rules &&
                     this.messages == other.messages &&
                     this.content == other.content &&

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -235,7 +235,7 @@ public void onClick(View v) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("prefix_once", checked).apply();
-                swPrefixOnce.setEnabled(checked);
+                swPrefixCount.setEnabled(checked);
             }
         });
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -596,7 +596,8 @@ static void processOperations(
                                         EntityFolder.DRAFTS.equals(folder.type)) ||
                                 (op.tries >= LOCAL_RETRY_MAX &&
                                         EntityOperation.SYNC.equals(op.name) &&
-                                        account.protocol == EntityAccount.TYPE_POP)) {
+                                        (account.protocol == EntityAccount.TYPE_POP ||
+                                                !ConnectionHelper.isIoError(ex)))) {
                             // com.sun.mail.iap.BadCommandException: BAD [TOOBIG] Message too large
                             // com.sun.mail.iap.CommandFailedException: NO [CANNOT] Cannot APPEND to a SPAM folder
                             // com.sun.mail.iap.CommandFailedException: NO [ALERT] Cannot MOVE messages out of the Drafts folder

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -543,7 +543,7 @@ static void processOperations(
                         EntityLog.log(context, folder.name +
                                 " op=" + op.name +
                                 " try=" + op.tries +
-                                " " + Log.formatThrowable(ex, false));
+                                " " + ex + "\n" + android.util.Log.getStackTraceString(ex));
 
                         try {
                             db.beginTransaction();

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1580,7 +1580,7 @@ static String formatThrowable(Throwable ex, String separator, boolean sanitize)
                     ex.getCause() instanceof SocketTimeoutException)
                 return null;
 
-            if (false &&
+            if (BuildConfig.PLAY_STORE_RELEASE &&
                     ex instanceof MessagingException &&
                     ex.getCause() instanceof UnknownHostException)
                 return null;

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1354,9 +1354,9 @@ static void autoLink(Document document) {
         // geo:<lat>,<lon>[,<alt>][;u=<uncertainty>]
         // tel:<phonenumber>
         final Pattern GPA_PATTERN = Pattern.compile("GPA\\.\\d{4}-\\d{4}-\\d{4}-\\d{5}");
+        final String BOUNDARY = "(?:\\b|$|^)";
         final Pattern pattern = Pattern.compile(
-                "(((?i:mailto):)?" + PatternsCompat.AUTOLINK_EMAIL_ADDRESS.pattern() +
-                        "(\\?[^\\s]*)" /* query parameters */ + ")" +
+                "(" + BOUNDARY + "((?i:mailto):)?" + Helper.EMAIL_ADDRESS + "(\\?[^\\s]*)?" + BOUNDARY + ")" +
                         "|" +
                         PatternsCompat.AUTOLINK_WEB_URL.pattern()
                                 .replace("(?i:http|https|rtsp)://",

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -442,7 +442,8 @@ else if (EntityMessage.SENSITIVITY_CONFIDENTIAL.equals(message.sensitivity))
 
         // Send message
         if (identity != null) {
-            if (message.headers == null || !Boolean.TRUE.equals(message.resend)) {
+            if ((message.headers == null || !Boolean.TRUE.equals(message.resend)) &&
+                    (message.dsn == null || EntityMessage.DSN_NONE.equals(message.dsn))) {
                 // Add reply to
                 if (identity.replyto != null)
                     imessage.setReplyTo(convertAddress(InternetAddress.parse(identity.replyto), identity));

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -284,8 +284,8 @@ private void bindTo(TupleAccountEx account) {
             tvWarning.setVisibility(account.warning == null || !settings ? View.GONE : View.VISIBLE);
 
             tvError.setText(account.error);
-            tvError.setVisibility(account.error == null || !settings ? View.GONE : View.VISIBLE);
-            btnHelp.setVisibility(account.error == null || !settings ? View.GONE : View.VISIBLE);
+            tvError.setVisibility(account.error == null ? View.GONE : View.VISIBLE);
+            btnHelp.setVisibility(account.error == null ? View.GONE : View.VISIBLE);
 
             ibInbox.setVisibility(settings ? View.GONE : View.VISIBLE);
             grpSettings.setVisibility(settings ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -284,8 +284,8 @@ private void bindTo(TupleAccountEx account) {
             tvWarning.setVisibility(account.warning == null || !settings ? View.GONE : View.VISIBLE);
 
             tvError.setText(account.error);
-            tvError.setVisibility(account.error == null ? View.GONE : View.VISIBLE);
-            btnHelp.setVisibility(account.error == null ? View.GONE : View.VISIBLE);
+            tvError.setVisibility(account.error == null || !settings ? View.GONE : View.VISIBLE);
+            btnHelp.setVisibility(account.error == null || !settings ? View.GONE : View.VISIBLE);
 
             ibInbox.setVisibility(settings ? View.GONE : View.VISIBLE);
             grpSettings.setVisibility(settings ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4326,7 +4326,8 @@ else if (sign_default || selected.sign_default)
                                 : db.answer().getAnswer(answer));
                         if (a != null) {
                             db.answer().applyAnswer(a.id, new Date().getTime());
-                            data.draft.subject = a.name;
+                            if (answer > 0)
+                                data.draft.subject = a.name;
                             Document d = JsoupEx.parse(a.getHtml(null));
                             document.body().append(d.body().html());
                         }

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1328,14 +1328,14 @@ private void setOptions() {
             }
 
         String sender_ellipsize = prefs.getString("sender_ellipsize", "end");
-        for (int pos = 0; pos < startupValues.length; pos++)
+        for (int pos = 0; pos < ellipsizeValues.length; pos++)
             if (ellipsizeValues[pos].equals(sender_ellipsize)) {
                 spSenderEllipsize.setSelection(pos);
                 break;
             }
 
         String subject_ellipsize = prefs.getString("subject_ellipsize", "full");
-        for (int pos = 0; pos < startupValues.length; pos++)
+        for (int pos = 0; pos < ellipsizeValues.length; pos++)
             if (ellipsizeValues[pos].equals(subject_ellipsize)) {
                 spSubjectEllipsize.setSelection(pos);
                 break;

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -3226,6 +3226,8 @@ public void tail(Node node, int depth) {
                                     .append(android.util.Log.getStackTraceString(ex)).append('\n');
                             setSpan(ssb, StyleHelper.getTypefaceSpan("Cousine", context), s, ssb.length());
                             setSpan(ssb, new RelativeSizeSpan(HtmlHelper.FONT_SMALL), s, ssb.length());
+                            int colorWarning = Helper.resolveColor(context, R.attr.colorWarning);
+                            setSpan(ssb, new ForegroundColorSpan(colorWarning), s, ssb.length());
                         }
                     }
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -242,7 +242,7 @@ String getMimeType() {
             return "audio/midi";
 
         // https://www.rfc-editor.org/rfc/rfc3555.txt
-        if ("video/jpeg".equals(type))
+        if ("image/jpg".equals(type) || "video/jpeg".equals(type))
             return "image/jpeg";
 
         if (!TextUtils.isEmpty(type) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2568,6 +2568,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                     final boolean show_quotes = args.getBoolean("show_quotes");
                     final int zoom = args.getInt("zoom");
                     final float scale = args.getFloat("scale");
+                    final boolean download_plain = prefs.getBoolean("download_plain", false);
 
                     if (message == null || !message.content)
                         return null;
@@ -2613,7 +2614,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                                     embedded.received = helper.getSent();
                                 embedded.subject = helper.getSubject();
 
-                                String html = parts.getHtml(context);
+                                String html = parts.getHtml(context, download_plain);
                                 Document d = (html == null ? Document.createShell("") : JsoupEx.parse(html));
 
                                 Element div = document.createElement("div");

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2658,7 +2658,9 @@ static String decodeMime(String text) {
         while (p + 1 < parts.size()) {
             MimeTextPart p1 = parts.get(p);
             MimeTextPart p2 = parts.get(p + 1);
-            if (p1.charset != null && p1.charset.equalsIgnoreCase(p2.charset) &&
+            // https://bugzilla.mozilla.org/show_bug.cgi?id=1374149
+            if (!"ISO-2022-JP".equalsIgnoreCase(p1.charset) &&
+                    p1.charset != null && p1.charset.equalsIgnoreCase(p2.charset) &&
                     p1.encoding != null && p1.encoding.equalsIgnoreCase(p2.encoding)) {
                 try {
                     byte[] b1 = decodeWord(p1.text, p1.encoding, p1.charset);

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -298,8 +298,10 @@ public void run() {
             Configuration config = getResources().getConfiguration();
 
             // Default enable compact mode for smaller screens
-            if (!config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_LARGE))
+            if (!config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_LARGE)) {
                 editor.putBoolean("compact", true);
+                //editor.putBoolean("compact_folders", true);
+            }
 
             // Default disable landscape columns for small screens
             if (!config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL)) {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -574,6 +574,9 @@ else if (version < 1781) {
             }
 
             editor.remove("monospaced");
+        } else if (version < 1837) {
+            if (!prefs.contains("compact_folders"))
+                editor.putBoolean("compact_folders", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -145,7 +145,7 @@ public void onCreate(Bundle savedInstanceState) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
         dividers = prefs.getBoolean("dividers", true);
-        compact = prefs.getBoolean("compact_folders", false);
+        compact = prefs.getBoolean("compact_folders", true);
         show_hidden = false; // prefs.getBoolean("hidden_folders", false);
         show_flagged = prefs.getBoolean("flagged_folders", false);
 

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -940,7 +940,7 @@ static String getFamily(String family) {
             return "Lato, Carlito, Calibri, sans-serif";
         if (faces.contains("caladea"))
             return "Caladea, Cambo, Cambria, serif";
-        if (faces.contains("opendyslexic"))
+        if (faces.contains("comic sans"))
             return "OpenDyslexic, \"Comic Sans\", \"Comic Sans MS\", sans-serif";
         return family;
     }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -3031,7 +3031,7 @@ public void tail(Node node, int depth) {
                             case "font":
                                 String face = element.attr("face");
                                 if (!TextUtils.isEmpty(face))
-                                    setSpan(ssb, new TypefaceSpan(face), start, ssb.length());
+                                    setSpan(ssb, StyleHelper.getTypefaceSpan(face, context), start, ssb.length());
                                 break;
                             case "h1":
                             case "h2":
@@ -3142,7 +3142,7 @@ public void tail(Node node, int depth) {
                                 break;
                             case "pre":
                                 // Signature
-                                setSpan(ssb, new TypefaceSpan("monospace"), start, ssb.length());
+                                setSpan(ssb, StyleHelper.getTypefaceSpan("monospace", context), start, ssb.length());
                                 break;
                             case "style":
                                 // signatures
@@ -3204,7 +3204,7 @@ public void tail(Node node, int depth) {
 
                         if (monospaced_pre &&
                                 "true".equals(element.attr("x-plain")))
-                            setSpan(ssb, new TypefaceSpan("monospace"), start, ssb.length());
+                            setSpan(ssb, StyleHelper.getTypefaceSpan("monospace", context), start, ssb.length());
                     } catch (Throwable ex) {
                         Log.e(ex);
                     }

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -940,7 +940,7 @@ static String getFamily(String family) {
             return "Lato, Carlito, Calibri, sans-serif";
         if (faces.contains("caladea"))
             return "Caladea, Cambo, Cambria, serif";
-        if (faces.contains("comic sans"))
+        if (faces.contains("opendyslexic"))
             return "OpenDyslexic, \"Comic Sans\", \"Comic Sans MS\", sans-serif";
         return family;
     }

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -98,8 +98,7 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         final Context context = getContext();
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean monospaced = prefs.getBoolean("monospaced", false);
-        String compose_font = prefs.getString("compose_font", monospaced ? "monospace" : "sans-serif");
+        String compose_font = prefs.getString("compose_font", "");
         boolean compact = prefs.getBoolean("compose_compact", false);
         int zoom = prefs.getInt("compose_zoom", compact ? 0 : 1);
         int message_zoom = prefs.getInt("message_zoom", 100);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -145,7 +145,7 @@ public class FragmentOptions extends FragmentBase {
             "subject_top", "subject_italic", "highlight_subject", "font_size_subject", "subject_ellipsize",
             "keywords_header", "labels_header", "flags", "flags_background", "preview", "preview_italic", "preview_lines",
             "message_zoom", "overview_mode", "override_width", "addresses", "button_extra", "attachments_alt", "thumbnails",
-            "contrast", "monospaced", "monospaced_pre",
+            "contrast", "display_font", "monospaced_pre",
             "background_color", "text_color", "text_size", "text_font", "text_align", "text_separators",
             "collapse_quotes", "image_placeholders", "inline_images",
             "seekbar", "actionbar", "actionbar_color",

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -888,8 +888,7 @@ static void build(Context context, EntityMessage message, List<EntityAttachment>
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean format_flowed = prefs.getBoolean("format_flowed", false);
-        boolean monospaced = prefs.getBoolean("monospaced", false);
-        String compose_font = prefs.getString("compose_font", monospaced ? "monospace" : "sans-serif");
+        String compose_font = prefs.getString("compose_font", "");
         boolean auto_link = prefs.getBoolean("auto_link", false);
 
         // Build html body
@@ -919,7 +918,7 @@ static void build(Context context, EntityMessage message, List<EntityAttachment>
                             TextUtils.isEmpty(child.attr("fairemail"))) {
                         String old = child.attr("style");
                         String style = HtmlHelper.mergeStyles(
-                                "font-family:" + compose_font, old);
+                                "font-family:" + StyleHelper.getFamily(compose_font), old);
                         if (!old.equals(style))
                             child.attr("style", style);
                     }

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -166,7 +166,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         for (int i = 0; i < fonts.size(); i++) {
             StyleHelper.FontDescriptor font = fonts.get(i);
             SpannableStringBuilder ssb = new SpannableStringBuilderEx(font.toString());
-            ssb.setSpan(new TypefaceSpan(font.type), 0, ssb.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+            ssb.setSpan(StyleHelper.getTypefaceSpan(font.type, getContext()),
+                    0, ssb.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
             fn.add(ssb);
         }
 

File: app/src/main/java/com/sun/mail/pop3/Protocol.java
Patch:
@@ -296,7 +296,7 @@ boolean isMechanismEnabled(String mech) {
      */
     synchronized String authenticate(String mech,
 				String host, String authzid,
-				String user, String passwd) {
+				String user, String passwd) throws IOException {
 	Authenticator a = authenticators.get(mech.toUpperCase(Locale.ENGLISH));
 	if (a == null)
 	    return "No such authentication mechanism: " + mech;
@@ -305,7 +305,7 @@ synchronized String authenticate(String mech,
 		return "login failed";
 	    return null;
 	} catch (IOException ex) {
-	    return ex.getMessage();
+	    throw ex;
 	}
     }
 

File: app/src/main/java/eu/faircode/email/NumberSpan.java
Patch:
@@ -82,12 +82,12 @@ public NumberSpan(int indentWidth, int gapWidth, int color, float textSize, int
                 case "a":
                 case "lower-alpha":
                 case "lower-latin":
-                    number = Character.toString((char) ((int) 'a' + index));
+                    number = Character.toString((char) ((int) 'a' + index - 1));
                     break;
                 case "A":
                 case "upper-alpha":
                 case "upper-latin":
-                    number = Character.toString((char) ((int) 'A' + index));
+                    number = Character.toString((char) ((int) 'A' + index - 1));
                     break;
                 case "i":
                 case "lower-roman":

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2751,7 +2751,7 @@ protected ArrayList<MessageTarget> onExecute(Context context, Bundle args) {
                             if (sourceFolder == null || sourceFolder.read_only)
                                 continue;
                             if (EntityFolder.TRASH.equals(targetFolder.type)) {
-                                if (EntityFolder.ARCHIVE.equals(sourceFolder.type) && filter_archive)
+                                if (EntityFolder.ARCHIVE.equals(sourceFolder.type) && thread && filter_archive)
                                     continue;
                                 if (EntityFolder.JUNK.equals(sourceFolder.type) && !threaded.folder.equals(message.folder))
                                     continue;

File: app/src/main/java/com/bugsnag/android/ForegroundDetector.java
Patch:
@@ -13,6 +13,8 @@
 
 class ForegroundDetector {
 
+    private static final int IMPORTANCE_FOREGROUND_SERVICE = 125;
+
     @Nullable
     private final ActivityManager activityManager;
 
@@ -36,8 +38,7 @@ Boolean isInForeground() {
             ActivityManager.RunningAppProcessInfo info = getProcessInfo();
 
             if (info != null) {
-                return info.importance
-                        <= ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND;
+                return info.importance <= IMPORTANCE_FOREGROUND_SERVICE;
             } else {
                 return null;
             }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -155,7 +155,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
             "download_headers", "download_eml",
             "prefer_ip4", "bind_socket", "standalone_vpn", "tcp_keep_alive", "ssl_harden", "cert_strict", // force reconnect
             "experiments", "debug", "protocol", // force reconnect
-            "auth_plain", "auth_login", "auth_ntlm", "auth_sasl", // force reconnect
+            "auth_plain", "auth_login", "auth_ntlm", "auth_sasl", "auth_apop", // force reconnect
             "keep_alive_poll", "empty_pool", "idle_done", // force reconnect
             "exact_alarms" // force schedule
     ));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2185,9 +2185,8 @@ static Boolean isTLS(String header, boolean first) {
 
         // (qmail nnn invoked by uid nnn); 1 Jan 2022 00:00:00 -0000
         // by <host name> (Postfix, from userid nnn)
-        if (first &&
-                (header.matches(".*\\(qmail \\d+ invoked by uid \\d+\\).*") ||
-                        header.matches(".*\\(Postfix, from userid \\d+\\).*"))) {
+        if (header.matches(".*\\(qmail \\d+ invoked by uid \\d+\\).*") ||
+                header.matches(".*\\(Postfix, from userid \\d+\\).*")) {
             Log.i("--- phrase");
             return true;
         }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -295,7 +295,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
 
     @Query("SELECT COUNT(*) FROM message" +
             " WHERE id IN (:ids)" +
-            " AND raw IS NULL or NOT raw")
+            " AND (raw IS NULL OR NOT raw)")
     LiveData<Integer> liveRaw(long[] ids);
 
     @Query("SELECT *" +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1944,8 +1944,9 @@ else if (config.orientation == Configuration.ORIENTATION_PORTRAIT)
             UsageStatsManager usm = (UsageStatsManager) context.getSystemService(Context.USAGE_STATS_SERVICE);
             int bucket = usm.getAppStandbyBucket();
             boolean inactive = usm.isAppInactive(BuildConfig.APPLICATION_ID);
-            sb.append(String.format("Standby bucket: %d-%s;p inactive: %b\r\n",
-                    bucket, Helper.getStandbyBucketName(bucket), inactive));
+            sb.append(String.format("Standby bucket: %d-%b-%s %s\r\n",
+                    bucket, inactive, Helper.getStandbyBucketName(bucket),
+                    (bucket == UsageStatsManager.STANDBY_BUCKET_ACTIVE && !inactive ? "" : "!!!")));
         }
 
         boolean canExact = AlarmManagerCompatEx.canScheduleExactAlarms(context);

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -468,7 +468,8 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                         !account.insecure.equals(insecure) ||
                         !account.port.equals(Integer.parseInt(port)) ||
                         !account.user.equals(user) ||
-                        !account.password.equals(password)));
+                        !account.password.equals(password) ||
+                        BuildConfig.DEBUG));
                 Log.i("Account check=" + check);
 
                 Long last_connected = null;

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -431,7 +431,8 @@ public Header nextElement() {
                             .append(size > 0 ? Helper.humanReadableByteCount(size) : "?")
                             .append('\n');
 
-                    if (!part.isMimeType("multipart/*")) {
+                    if (BuildConfig.DEBUG &&
+                            !part.isMimeType("multipart/*")) {
                         Object content = part.getContent();
                         if (content instanceof String) {
                             String text = (String) content;

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -368,7 +368,7 @@ public void onSave(MessageHelper.AttachmentPart apart) {
                 tvStructure.setText(result.structure);
                 tvHeaders.setText(result.headers);
                 grpReady.setVisibility(View.VISIBLE);
-                cardHeaders.setVisibility(!BuildConfig.PLAY_STORE_RELEASE ? View.VISIBLE : View.GONE);
+                cardHeaders.setVisibility(BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -509,7 +509,7 @@ private void setOptions() {
         swSecure.setChecked(prefs.getBoolean("secure", false));
 
         tvGenericUserAgent.setText(WebViewEx.getUserAgent(getContext()));
-        swGenericUserAgent.setChecked(prefs.getBoolean("generic_ua", true));
+        swGenericUserAgent.setChecked(prefs.getBoolean("generic_ua", false));
         swSafeBrowsing.setChecked(prefs.getBoolean("safe_browsing", false));
         swLoadEmoji.setChecked(prefs.getBoolean("load_emoji", BuildConfig.PLAY_STORE_RELEASE));
 

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -373,7 +373,7 @@ static String getUserAgent(Context context) {
     static String getUserAgent(Context context, WebView webView) {
         // https://developer.chrome.com/docs/multidevice/user-agent/#chrome-for-android
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean generic_ua = prefs.getBoolean("generic_ua", true);
+        boolean generic_ua = prefs.getBoolean("generic_ua", false);
         if (generic_ua)
             return getGenericUserAgent(context);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1860,8 +1860,9 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
             tvSignedData.setVisibility(View.GONE);
 
             // Message text
-            tvNoInternetBody.setVisibility(suitable || message.content ? View.GONE : View.VISIBLE);
-            grpDownloading.setVisibility(message.content ? View.GONE : View.VISIBLE);
+            boolean content = (message.content || message.error != null);
+            tvNoInternetBody.setVisibility(suitable || content ? View.GONE : View.VISIBLE);
+            grpDownloading.setVisibility(content ? View.GONE : View.VISIBLE);
 
             int height = properties.getHeight(message.id, 0);
             if (height == 0) {

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -563,16 +563,15 @@ private void onMenuSave() {
             @Override
             protected List<EntityAccount> onExecute(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
-                return db.account().getSynchronizingAccounts();
+                return db.account().getSynchronizingAccounts(EntityAccount.TYPE_IMAP);
             }
 
             @Override
             protected void onExecuted(Bundle args, List<EntityAccount> accounts) {
                 ArrayAdapter<EntityAccount> adapter =
                         new ArrayAdapter<>(ActivityEML.this, R.layout.spinner_item1, android.R.id.text1);
                 for (EntityAccount account : accounts)
-                    if (account.protocol == EntityAccount.TYPE_IMAP)
-                        adapter.add(account);
+                    adapter.add(account);
 
                 new AlertDialog.Builder(ActivityEML.this)
                         .setIcon(R.drawable.twotone_save_alt_24)

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -175,7 +175,7 @@ protected Boolean onExecute(Context context, Bundle args) {
                         return true;
 
                     DB db = DB.getInstance(context);
-                    List<EntityAccount> accounts = db.account().getSynchronizingAccounts();
+                    List<EntityAccount> accounts = db.account().getSynchronizingAccounts(null);
                     boolean hasAccounts = (accounts != null && accounts.size() > 0);
 
                     prefs.edit().putBoolean("has_accounts", hasAccounts).apply();

File: app/src/main/java/eu/faircode/email/ActivityWidget.java
Patch:
@@ -205,7 +205,7 @@ public void onClick(View view) {
             protected List<EntityAccount> onExecute(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
 
-                return db.account().getSynchronizingAccounts();
+                return db.account().getSynchronizingAccounts(null);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/ActivityWidgetUnified.java
Patch:
@@ -310,7 +310,7 @@ protected void onException(Bundle args, Throwable ex) {
             protected List<EntityAccount> onExecute(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
 
-                return db.account().getSynchronizingAccounts();
+                return db.account().getSynchronizingAccounts(null);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4879,7 +4879,7 @@ private void onActionMoveAccount(TupleMessageEx message, View anchor) {
                 @Override
                 protected List<EntityAccount> onExecute(Context context, Bundle args) {
                     DB db = DB.getInstance(context);
-                    return db.account().getSynchronizingAccounts();
+                    return db.account().getSynchronizingAccounts(EntityAccount.TYPE_IMAP);
                 }
 
                 @Override

File: app/src/main/java/eu/faircode/email/FragmentDialogSearch.java
Patch:
@@ -447,7 +447,7 @@ protected EntityFolder onExecute(Context context, Bundle args) {
                                     DB db = DB.getInstance(context);
                                     EntityAccount account = null;
                                     if (aid < 0) {
-                                        List<EntityAccount> accounts = db.account().getSynchronizingAccounts();
+                                        List<EntityAccount> accounts = db.account().getSynchronizingAccounts(EntityAccount.TYPE_IMAP);
                                         if (accounts == null)
                                             return null;
                                         for (EntityAccount a : accounts)

File: app/src/main/java/eu/faircode/email/FragmentDialogSelectAccount.java
Patch:
@@ -44,7 +44,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             @Override
             protected List<EntityAccount> onExecute(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
-                return db.account().getSynchronizingAccounts();
+                return db.account().getSynchronizingAccounts(null);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentOrder.java
Patch:
@@ -98,7 +98,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
                 @Override
                 protected List<EntityAccount> onExecute(Context context, Bundle args) {
                     DB db = DB.getInstance(context);
-                    return db.account().getSynchronizingAccounts();
+                    return db.account().getSynchronizingAccounts(null);
                 }
 
                 @Override

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -408,7 +408,7 @@ public void onClick(View v) {
                     @Override
                     protected List<EntityAccount> onExecute(Context context, Bundle args) {
                         DB db = DB.getInstance(context);
-                        return db.account().getSynchronizingAccounts();
+                        return db.account().getSynchronizingAccounts(EntityAccount.TYPE_IMAP);
                     }
 
                     @Override

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -648,7 +648,7 @@ public void onChanged(@Nullable List<TupleIdentityEx> identities) {
                     @Override
                     protected List<EntityAccount> onExecute(Context context, Bundle args) throws Throwable {
                         DB db = DB.getInstance(context);
-                        return db.account().getSynchronizingAccounts();
+                        return db.account().getSynchronizingAccounts(null);
                     }
 
                     @Override

File: app/src/main/java/eu/faircode/email/ServiceExternal.java
Patch:
@@ -148,7 +148,7 @@ private static void poll(Context context, Intent intent) {
         DB db = DB.getInstance(context);
         List<EntityAccount> accounts;
         if (accountName == null)
-            accounts = db.account().getSynchronizingAccounts();
+            accounts = db.account().getSynchronizingAccounts(null);
         else {
             EntityAccount account = db.account().getAccount(accountName);
             if (account == null)

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -221,9 +221,10 @@ public int compare(EntityAnswer a1, EntityAnswer a2) {
             }
 
             if (grouped && answer.applied > 0) {
+                int start = ssb.length();
                 ssb.append(" (").append(NF.format(answer.applied)).append(")");
                 ssb.setSpan(new RelativeSizeSpan(HtmlHelper.FONT_SMALL),
-                        answer.name.length() + 1, ssb.length(), 0);
+                        start, ssb.length(), 0);
             }
 
             MenuItem item;

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -568,6 +568,8 @@ static void processOperations(
                             continue;
                         }
 
+                        long attachments = (op.message == null ? 0 : db.attachment().countAttachments(op.message));
+
                         if (op.tries >= TOTAL_RETRY_MAX ||
                                 ex instanceof OutOfMemoryError ||
                                 ex instanceof FileNotFoundException ||
@@ -584,8 +586,7 @@ static void processOperations(
                                 EntityOperation.HEADERS.equals(op.name) ||
                                 EntityOperation.RAW.equals(op.name) ||
                                 EntityOperation.ATTACHMENT.equals(op.name) ||
-                                ((op.tries >= LOCAL_RETRY_MAX ||
-                                        db.attachment().countAttachments(op.message) > 0) &&
+                                ((op.tries >= LOCAL_RETRY_MAX || attachments > 0) &&
                                         EntityOperation.ADD.equals(op.name) &&
                                         EntityFolder.DRAFTS.equals(folder.type)) ||
                                 (op.tries >= LOCAL_RETRY_MAX &&

File: app/src/main/java/eu/faircode/email/FixedEditText.java
Patch:
@@ -49,7 +49,7 @@ public FixedEditText(@NonNull Context context, @Nullable AttributeSet attrs, int
     }
 
     private void init(Context context) {
-        setCustomSelectionActionModeCallback(Helper.getActionModeWrapper(context));
+        setCustomSelectionActionModeCallback(Helper.getActionModeWrapper(this));
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FixedTextView.java
Patch:
@@ -53,7 +53,7 @@ public FixedTextView(@NonNull Context context, @Nullable AttributeSet attrs, int
     }
 
     private void init(Context context) {
-        setCustomSelectionActionModeCallback(Helper.getActionModeWrapper(context));
+        setCustomSelectionActionModeCallback(Helper.getActionModeWrapper(this));
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2141,7 +2141,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                                     (folder.notify ? " notify" : "") +
                                     " poll=" + folder.poll + "/" + folder.poll_factor +
                                     " days=" + folder.sync_days + "/" + folder.keep_days +
-                                    " msgs=" + folder.content + "/" + folder.messages +
+                                    " msgs=" + folder.content + "/" + folder.messages + "/" + folder.total +
                                     " " + folder.state +
                                     (folder.last_sync == null ? "" : " " + dtf.format(folder.last_sync)) +
                                     "\r\n");

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3412,8 +3412,7 @@ else if (response.isNO()) {
                                             } else if (response.isBAD()) {
                                                 Log.e("UID FETCH " + response);
                                                 // BAD Error in IMAP command UID FETCH: Too long argument (n.nnn + n.nnn + n.nnn secs).
-                                                if (response.toString().contains("Too long argument") ||
-                                                        response.toString().contains("Command Error. 10")) {
+                                                if (response.toString().contains("Too long argument")) {
                                                     chunk_size = chunk_size / 2;
                                                     if (chunk_size > 0)
                                                         prefs.edit().putInt("chunk_size", chunk_size).apply();

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -596,7 +596,7 @@ private boolean setIndentation(MenuItem item) {
                                     edit.removeSpan(indents[0]);
                             } else {
                                 IndentSpan is = new IndentSpan(intentSize);
-                                edit.setSpan(is, prev, next, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
+                                edit.setSpan(is, prev, next + 1, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
                             }
 
                             next++;

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3408,7 +3408,8 @@ else if (response.isNO()) {
                                             } else if (response.isBAD()) {
                                                 Log.e("UID FETCH " + response);
                                                 // BAD Error in IMAP command UID FETCH: Too long argument (n.nnn + n.nnn + n.nnn secs).
-                                                if (response.toString().contains("Too long argument")) {
+                                                if (response.toString().contains("Too long argument") ||
+                                                        response.toString().contains("Command Error. 10")) {
                                                     chunk_size = chunk_size / 2;
                                                     if (chunk_size > 0)
                                                         prefs.edit().putInt("chunk_size", chunk_size).apply();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2209,15 +2209,16 @@ static String getQuoteStyle(Element e) {
     }
 
     static String getQuoteStyle(CharSequence quoted, int start, int end) {
+        String dir = "left";
         try {
             int count = end - start;
             if (TextDirectionHeuristics.FIRSTSTRONG_LTR.isRtl(quoted, start, count))
-                return "border-right:3px solid #ccc; padding-left:3px;";
+                dir = "right";
         } catch (Throwable ex) {
             Log.e(new Throwable("getQuoteStyle " + start + "..." + end, ex));
         }
 
-        return "border-left:3px solid #ccc; padding-left:3px;";
+        return "border-" + dir + ":3px solid #ccc; padding-" + dir + ":3px;margin-top:0; margin-bottom:0;";
     }
 
     static boolean hasBorder(Element e) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -31,7 +31,6 @@
 import android.database.sqlite.SQLiteDatabaseCorruptException;
 import android.graphics.Paint;
 import android.graphics.Typeface;
-import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Debug;
@@ -1433,7 +1432,7 @@ private void setOptions() {
                 Helper.humanReadableByteCount(cache_size * 1024L)));
         sbSqliteCache.setProgress(sqlite_cache);
 
-        int chunk_size = prefs.getInt("chunk_size", Core.DEFAULT_CHUNCK_SIZE);
+        int chunk_size = prefs.getInt("chunk_size", Core.DEFAULT_CHUNK_SIZE);
         tvChunkSize.setText(getString(R.string.title_advanced_chunk_size, chunk_size));
         sbChunkSize.setProgress(chunk_size);
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -923,7 +923,7 @@ static Intent getIntentIssue(Context context) {
 
             html += "<p style=\"font-size:small;\">";
             html += "Android: " + Build.VERSION.RELEASE + " (SDK " + Build.VERSION.SDK_INT + ")<br>";
-            html += "Device: " + Build.MANUFACTURER + " " + Build.DEVICE + "<br>";
+            html += "Device: " + Build.MANUFACTURER + " " + Build.MODEL + " " + Build.DEVICE + "<br>";
             html += "Locale: " + Html.escapeHtml(slocale.toString()) + "<br>";
             if (language != null)
                 html += "Language: " + Html.escapeHtml(language) + "<br>";

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -700,7 +700,7 @@ public void onResume() {
         tvDoze12.setVisibility(Helper.isOptimizing12(getContext()) ? View.VISIBLE : View.GONE);
 
         grpInexactAlarms.setVisibility(
-                !AlarmManagerCompatEx.canScheduleExactAlarms(getContext()) || BuildConfig.DEBUG
+                !AlarmManagerCompatEx.canScheduleExactAlarms(getContext())
                         ? View.VISIBLE : View.GONE);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1068,9 +1068,6 @@ static boolean isArc() {
 
     static boolean isStaminaEnabled(Context context) {
         // https://dontkillmyapp.com/sony
-        if (BuildConfig.DEBUG)
-            return true;
-
         if (!isSony())
             return false;
 

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -501,9 +501,8 @@ private void onActionEditChannel() {
                             .putExtra(Settings.EXTRA_CHANNEL_ID, EntityAccount.getNotificationChannelId(account.id));
                     try {
                         context.startActivity(intent);
-                    } catch (ActivityNotFoundException ex) {
-                        Log.w(ex);
-                        Helper.reportNoViewer(context, intent);
+                    } catch (Throwable ex) {
+                        Helper.reportNoViewer(context, intent, ex);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -300,9 +300,8 @@ protected void onException(Bundle args, Throwable ex) {
                 private void onActionShare() {
                     try {
                         context.startActivity(share);
-                    } catch (ActivityNotFoundException ex) {
-                        Log.w(ex);
-                        Helper.reportNoViewer(context, share);
+                    } catch (Throwable ex) {
+                        Helper.reportNoViewer(context, share, ex);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1106,9 +1106,8 @@ private void onActionEditChannel() {
                             .putExtra(Settings.EXTRA_CHANNEL_ID, EntityFolder.getNotificationChannelId(folder.id));
                     try {
                         context.startActivity(intent);
-                    } catch (ActivityNotFoundException ex) {
-                        Log.w(ex);
-                        Helper.reportNoViewer(context, intent);
+                    } catch (Throwable ex) {
+                        Helper.reportNoViewer(context, intent, ex);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -173,10 +173,8 @@ public void onClick(View v) {
                             null,
                             null);
                     PackageManager pm = getContext().getPackageManager();
-                    if (intent.resolveActivity(pm) == null) { // system whitelisted
+                    if (intent.resolveActivity(pm) == null) // system whitelisted
                         Log.e("newChooseAccountIntent unavailable");
-                        Helper.reportNoViewer(getContext(), intent);
-                    }
                     startActivityForResult(intent, ActivitySetup.REQUEST_CHOOSE_ACCOUNT);
                 } catch (Throwable ex) {
                     if (ex instanceof IllegalArgumentException)

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -639,8 +639,7 @@ public void onClick(View v) {
                 try {
                     getContext().startActivity(app);
                 } catch (Throwable ex) {
-                    Log.w(ex);
-                    Helper.reportNoViewer(getContext(), app);
+                    Helper.reportNoViewer(getContext(), app, ex);
                 }
             }
         });

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -396,6 +396,7 @@ private void _suggest(String query) {
                         new int[]{android.R.id.text1},
                         0
                 ));
+                searchView.getSuggestionsAdapter().notifyDataSetChanged();
             }
 
             private int getSuggestions(String query, int id, int tab, String title, View view, MatrixCursor cursor) {

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -224,6 +224,7 @@ String getMimeType() {
                     type.endsWith("/unknown") ||
                     "application/base64".equals(type) ||
                     "application/octet-stream".equals(type) ||
+                    "application/x-unknown-content-type".equals(type) ||
                     "application/zip".equals(type))
                 return gtype;
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2964,7 +2964,7 @@ private void bindExtras(TupleMessageEx message) {
                     ? R.drawable.twotone_mail_24 : R.drawable.twotone_drafts_24);
             ibSeenBottom.setVisibility(message.uid != null ||
                     message.accountProtocol == EntityAccount.TYPE_POP
-                    ? View.VISIBLE : View.GONE);
+                    ? View.VISIBLE : View.INVISIBLE);
         }
 
         private void bindAttachments(final TupleMessageEx message, @Nullable List<EntityAttachment> attachments, boolean bind_extras) {

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2471,7 +2471,7 @@ public void onClick(@NonNull View widget) {
                         j++;
                     }
 
-                    Boolean tls = MessageHelper.isTLS(h);
+                    Boolean tls = MessageHelper.isTLS(h, i == received.length - 1);
                     ssb.append(" TLS=");
                     int t = ssb.length();
                     ssb.append(tls == null ? "?" : Boolean.toString(tls));

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -231,6 +231,9 @@ public interface DaoFolder {
     @Query("SELECT download FROM folder WHERE id = :id")
     boolean getFolderDownload(long id);
 
+    @Query("SELECT COUNT(*) FROM folder")
+    int countTotal();
+
     @Insert
     long insertFolder(EntityFolder folder);
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -464,6 +464,9 @@ List<Long> getMessageUnseen(
             " AND sender = :sender")
     int countSender(long folder, String sender);
 
+    @Query("SELECT COUNT(*) FROM message")
+    int countTotal();
+
     @Query("SELECT message.*" +
             ", account.pop AS accountProtocol, account.name AS accountName, account.category AS accountCategory, identity.color AS accountColor" +
             ", account.notify AS accountNotify, account.leave_deleted AS accountLeaveDeleted, account.auto_seen AS accountAutoSeen" +

File: app/src/main/java/eu/faircode/email/DaoRule.java
Patch:
@@ -53,6 +53,9 @@ public interface DaoRule {
             " ORDER BY `order`, name COLLATE NOCASE")
     LiveData<List<TupleRuleEx>> liveRules(long folder);
 
+    @Query("SELECT COUNT(*) FROM rule")
+    int countTotal();
+
     @Insert
     long insertRule(EntityRule rule);
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1166,7 +1166,7 @@ private void onActionDeleteFolder() {
         this.context = context;
         this.owner = owner;
         this.inflater = LayoutInflater.from(context);
-        if (context instanceof FragmentActivity)
+        if (context instanceof FragmentActivity && BuildConfig.DEBUG)
             this.selectedModel = new ViewModelProvider((FragmentActivity) context)
                     .get(ViewModelSelected.class);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -713,7 +713,8 @@ public void onScrollCaptureStart(@NonNull ScrollCaptureSession session, @NonNull
 
                 @Override
                 public void onScrollCaptureImageRequest(@NonNull ScrollCaptureSession session, @NonNull CancellationSignal signal, @NonNull Rect captureArea, @NonNull Consumer<Rect> onComplete) {
-                    Canvas canvas = session.getSurface().lockCanvas(rect);
+                    //Canvas canvas = session.getSurface().lockCanvas(rect);
+                    Canvas canvas = session.getSurface().lockHardwareCanvas();
                     Log.i("Capture draw=" + captureArea + " scroll=" + session.getScrollBounds());
                     try {
                         canvas.save();
@@ -724,6 +725,7 @@ public void onScrollCaptureImageRequest(@NonNull ScrollCaptureSession session, @
                         session.getSurface().unlockCanvasAndPost(canvas);
                     }
 
+                    Log.i("Capture drawn");
                     onComplete.accept(captureArea);
                 }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3927,7 +3927,7 @@ else if (MessageHelper.FLAG_HIGH_IMPORTANCE.equals(keyword))
             if (needsHeaders || needsBody)
                 Log.i(folder.name + " needs headers=" + needsHeaders + " body=" + needsBody);
             List<Header> headers = (needsHeaders ? helper.getAllHeaders() : null);
-            String body = (needsBody ? helper.getMessageParts().getHtml(context) : null);
+            String body = (needsBody ? parts.getHtml(context) : null);
 
             if (experiments && helper.isReport())
                 try {

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1805,6 +1805,8 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append(String.format("Time: %s\r\n", new Date(Build.TIME).toString()));
         sb.append(String.format("Display: %s\r\n", Build.DISPLAY));
         sb.append(String.format("Id: %s\r\n", Build.ID));
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S)
+            sb.append(String.format("SoC: %s/%s\r\n", Build.SOC_MANUFACTURER, Build.SOC_MODEL));
         sb.append(String.format("uid: %d\r\n", android.os.Process.myUid()));
         sb.append("\r\n");
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -934,7 +934,7 @@ static Intent getIntentIssue(Context context) {
             html += "Locale: " + Html.escapeHtml(slocale.toString()) + "<br>";
             if (language != null)
                 html += "Language: " + Html.escapeHtml(language) + "<br>";
-            if (reporting && uuid != null)
+            if ((reporting || BuildConfig.TEST_RELEASE) && uuid != null)
                 html += "UUID: " + Html.escapeHtml(uuid) + "<br>";
             html += "</p>";
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -570,6 +570,7 @@ List<Long> getMessageUnseen(
             " ORDER BY folder")
     LiveData<List<TupleMessageWidgetCount>> liveWidgetUnified();
 
+    @SuppressWarnings(RoomWarnings.CURSOR_MISMATCH)
     @Query("SELECT message.*" +
             ", account.name AS accountName, COALESCE(identity.color, folder.color, account.color) AS accountColor" +
             ", SUM(1 - message.ui_seen) AS unseen" +
@@ -589,7 +590,6 @@ List<Long> getMessageUnseen(
             " GROUP BY account.id" +
             ", CASE WHEN message.thread IS NULL OR NOT :threading THEN message.id ELSE message.thread END" +
             " ORDER BY message.received DESC")
-    @SuppressWarnings(RoomWarnings.CURSOR_MISMATCH)
     List<TupleMessageWidget> getWidgetUnified(Long account, Long folder, boolean threading, boolean unseen, boolean flagged);
 
     @Query("SELECT uid FROM message" +

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3139,7 +3139,7 @@ protected MoreResult onExecute(Context context, Bundle args) {
 
                     boolean isInbox = EntityFolder.INBOX.equals(folder.type);
                     boolean isArchive = EntityFolder.ARCHIVE.equals(folder.type);
-                    boolean isTrash = (EntityFolder.TRASH.equals(folder.type) || account.protocol != EntityAccount.TYPE_IMAP);
+                    boolean isTrash = (EntityFolder.TRASH.equals(folder.type));
                     boolean isJunk = EntityFolder.JUNK.equals(folder.type);
                     boolean isDrafts = EntityFolder.DRAFTS.equals(folder.type);
                     boolean isSent = EntityFolder.SENT.equals(folder.type);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2215,6 +2215,8 @@ private static boolean isLocal(String value) {
         int e = value.indexOf(']', s + 1);
         if (s >= 0 && e > 0) {
             String ip = value.substring(s + 1, e);
+            if (ip.toLowerCase(Locale.ROOT).startsWith("ipv6:"))
+                ip = ip.substring(5);
             if (ConnectionHelper.isNumericAddress(ip) &&
                     ConnectionHelper.isLocalAddress(ip))
                 return true;

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -397,8 +397,7 @@ static List<EmailProvider> fromEmail(Context context, String email, Discover dis
                         provider.imap.host.equals(candidate.imap.host) ||
                         provider.smtp.host.equals(candidate.smtp.host)) {
                     EntityLog.log(context, "Replacing auto config by profile=" + provider.name);
-                    if (!BuildConfig.DEBUG)
-                        return Arrays.asList(provider);
+                    return Arrays.asList(provider);
                 }
 
             // https://help.dreamhost.com/hc/en-us/articles/214918038-Email-client-configuration-overview

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -475,6 +475,9 @@ public void onCreate(Bundle savedInstanceState) {
             setTitle(server ? R.string.title_search_server : R.string.title_search_device);
         }
 
+        if (viewType != AdapterMessage.ViewType.THREAD && EntityFolder.ARCHIVE.equals(type))
+            filter_archive = false;
+
         if (viewType != AdapterMessage.ViewType.THREAD)
             getParentFragmentManager().setFragmentResultListener("message.selected", this, new FragmentResultListener() {
                 @Override

File: app/src/main/java/eu/faircode/email/UnknownCharsetProvider.java
Patch:
@@ -87,6 +87,9 @@ public static Charset charsetForMime(String name) {
                     "unknown-8bit".equalsIgnoreCase(name))
                 return StandardCharsets.ISO_8859_1;
 
+            if (name.contains("1252"))
+                name = "windows-1252";
+
             // Android will prevent recursion
             String jname = MimeUtility.javaCharset(name);
             return Charset.forName(jname);

File: app/src/main/java/eu/faircode/email/TextHelper.java
Patch:
@@ -197,7 +197,7 @@ public ConversationActions call() throws Exception {
         try {
             return future.get(MAX_CONVERSATION_DURATION, TimeUnit.MILLISECONDS);
         } catch (TimeoutException ex) {
-            Log.e(ex);
+            Log.e(new Throwable("Conversation actions", ex));
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             prefs.edit().putBoolean("conversation_actions", false);
             return null;

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3933,7 +3933,7 @@ else if (MessageHelper.FLAG_HIGH_IMPORTANCE.equals(keyword))
                         if (r.isDeliveryStatus())
                             label = (r.isDelivered() ? MessageHelper.FLAG_DELIVERED : MessageHelper.FLAG_NOT_DELIVERED);
                         else if (r.isDispositionNotification())
-                            label = (r.isDelivered() ? MessageHelper.FLAG_DISPLAYED : MessageHelper.FLAG_NOT_DISPLAYED);
+                            label = (r.isDisplayed() ? MessageHelper.FLAG_DISPLAYED : MessageHelper.FLAG_NOT_DISPLAYED);
 
                         if (label != null) {
                             Map<Long, EntityFolder> map = new HashMap<>();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -181,12 +181,13 @@ static List<EntityIdentity> getIdentities(long account, Context context) {
     static void processOperations(
             Context context,
             EntityAccount account, EntityFolder folder, List<TupleOperationEx> ops,
-            Store istore, Folder ifolder,
+            EmailService iservice, Folder ifolder,
             State state, long serial)
             throws JSONException, FolderClosedException {
         try {
             Log.i(folder.name + " start process");
 
+            Store istore = iservice.getStore();
             DB db = DB.getInstance(context);
 
             NotificationManager nm =
@@ -500,6 +501,7 @@ static void processOperations(
                         for (TupleOperationEx s : similar.keySet())
                             ops.remove(s);
                     } catch (Throwable ex) {
+                        iservice.dump();
                         if (ex instanceof OperationCanceledException)
                             Log.i(folder.name, ex);
                         else

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1943,7 +1943,7 @@ public void run() {
                                                             Core.processOperations(ServiceSynchronize.this,
                                                                     account, folder,
                                                                     partition,
-                                                                    iservice.getStore(), ifolder,
+                                                                    iservice, ifolder,
                                                                     state, serial);
 
                                                         } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -626,7 +626,6 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
                 message.ui_hide = true;
                 message.ui_busy = Long.MAX_VALUE; // Needed to keep messages in user folders
                 message.error = null;
-                message.infrastructure = "fairemail";
                 message.id = db.message().insertMessage(message);
 
                 File file = EntityMessage.getFile(this, message.id);

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -626,6 +626,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
                 message.ui_hide = true;
                 message.ui_busy = Long.MAX_VALUE; // Needed to keep messages in user folders
                 message.error = null;
+                message.infrastructure = "fairemail";
                 message.id = db.message().insertMessage(message);
 
                 File file = EntityMessage.getFile(this, message.id);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1340,7 +1340,8 @@ String getThreadId(Context context, long account, long folder, long uid) throws
             boolean dsn = false;
             try {
                 dsn = imessage.isMimeType("multipart/report");
-            } catch (Throwable ignored) {
+            } catch (Throwable ex) {
+                Log.w(ex);
             }
             if (!dsn) {
                 String sender = getSortKey(getFrom());

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -722,7 +722,7 @@ private static void answer(Context context, EntityRule rule, EntityMessage messa
 
         String subject = (message.subject == null ? "" : message.subject);
         if (prefix_once)
-            EntityMessage.collapsePrefixes(context, message.language, subject, !TextUtils.isEmpty(to));
+            subject = EntityMessage.collapsePrefixes(context, message.language, subject, !TextUtils.isEmpty(to));
 
         reply.subject = context.getString(
                 TextUtils.isEmpty(to)

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -304,6 +304,7 @@ private void onJunk(long id) throws JSONException {
     private void onReplyDirect(long id, Intent intent) throws IOException {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean prefix_once = prefs.getBoolean("prefix_once", true);
+        boolean alt_re = prefs.getBoolean("alt_re", false);
         boolean plain_only = prefs.getBoolean("plain_only", false);
 
         DB db = DB.getInstance(this);
@@ -345,7 +346,7 @@ private void onReplyDirect(long id, Intent intent) throws IOException {
             reply.thread = ref.thread;
             reply.to = ref.from;
             reply.from = new Address[]{new InternetAddress(identity.email, identity.name, StandardCharsets.UTF_8.name())};
-            reply.subject = getString(R.string.title_subject_reply, subject);
+            reply.subject = getString(alt_re ? R.string.title_subject_reply_alt : R.string.title_subject_reply, subject);
             reply.received = new Date().getTime();
             reply.seen = true;
             reply.ui_seen = true;

File: app/src/main/java/com/sun/mail/smtp/SMTPTransport.java
Patch:
@@ -1313,7 +1313,7 @@ public void write(int b) throws IOException {
 
 	    Integer _fd = null;
 	    try {
-			if (false)
+			if (eu.faircode.email.BuildConfig.DEBUG)
 				_fd = ParcelFileDescriptor.fromSocket(serverSocket).getFd();
 		} catch (Throwable ex) {
 			eu.faircode.email.Log.w(ex);

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -234,7 +234,8 @@ public Drawable getDrawable(String source) {
                         }, null, context));
                 }
 
-                bottom_navigation.findViewById(R.id.action_delete).setVisibility(answer == null ? View.GONE : View.VISIBLE);
+                if (answer == null)
+                    bottom_navigation.getMenu().removeItem(R.id.action_delete);
 
                 if (ActivityAnswer.canAnswer(context))
                     cbExternal.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -1027,7 +1027,8 @@ protected void onExecuted(Bundle args, TupleRuleEx rule) {
                     Log.e(ex);
                 } finally {
                     grpReady.setVisibility(View.VISIBLE);
-                    bottom_navigation.findViewById(R.id.action_delete).setVisibility(id < 0 ? View.GONE : View.VISIBLE);
+                    if (id < 0)
+                        bottom_navigation.getMenu().removeItem(R.id.action_delete);
                     bottom_navigation.setVisibility(View.VISIBLE);
                 }
             }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -176,14 +176,14 @@ public static int d(String tag, String msg) {
     }
 
     public static int i(String msg) {
-        if (level <= android.util.Log.INFO)
+        if (level <= android.util.Log.INFO || BuildConfig.DEBUG)
             return android.util.Log.i(TAG, msg);
         else
             return 0;
     }
 
     public static int i(String tag, String msg) {
-        if (level <= android.util.Log.INFO)
+        if (level <= android.util.Log.INFO || BuildConfig.DEBUG)
             return android.util.Log.i(tag, msg);
         else
             return 0;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -426,6 +426,8 @@ public void run() {
 
                             for (EntityFolder folder : db.folder().getFolders(accountNetworkState.accountState.id, false, false)) {
                                 db.folder().setFolderState(folder.id, null);
+                                if (db.operation().getOperationCount(folder.id, EntityOperation.SYNC) == 0)
+                                    db.folder().setFolderSyncState(folder.id, null);
                                 db.folder().setFolderPollCount(folder.id, 0);
                             }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5725,7 +5725,7 @@ public void run() {
                             (EntityMessage.PGP_SIGNONLY.equals(draft.ui_encrypt) && action == R.id.action_send) ||
                             EntityMessage.SMIME_SIGNENCRYPT.equals(draft.ui_encrypt) ||
                             (EntityMessage.SMIME_SIGNONLY.equals(draft.ui_encrypt) && action == R.id.action_send);
-                    boolean needsEncryption = (shouldEncrypt && (dirty || !encrypted));
+                    boolean needsEncryption = (dirty && !encrypted && shouldEncrypt);
                     boolean autosave = extras.getBoolean("autosave");
                     if (needsEncryption && !autosave) {
                         args.putBoolean("needsEncryption", true);

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -732,6 +732,9 @@ public void report(int pos, int total) {
 
             db.identity().setIdentityError(ident.id, Log.formatThrowable(ex));
 
+            throw ex;
+        } catch (Throwable ex) {
+            iservice.dump();
             throw ex;
         } finally {
             iservice.close();

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5732,7 +5732,7 @@ public void run() {
                             (EntityMessage.PGP_SIGNONLY.equals(draft.ui_encrypt) && action == R.id.action_send) ||
                             EntityMessage.SMIME_SIGNENCRYPT.equals(draft.ui_encrypt) ||
                             (EntityMessage.SMIME_SIGNONLY.equals(draft.ui_encrypt) && action == R.id.action_send);
-                    boolean needsEncryption = (dirty && !encrypted && shouldEncrypt);
+                    boolean needsEncryption = (shouldEncrypt && (dirty || !encrypted));
                     boolean autosave = extras.getBoolean("autosave");
                     if (needsEncryption && !autosave) {
                         args.putBoolean("needsEncryption", true);

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -1037,7 +1037,7 @@ private void onActionEditRules() {
                 private void onActionExecuteRules() {
                     Bundle args = new Bundle();
                     args.putString("question", context.getString(R.string.title_execute_rules));
-                    args.putLong("folder", folder.id);
+                    args.putLong("id", folder.id);
 
                     FragmentDialogAsk ask = new FragmentDialogAsk();
                     ask.setArguments(args);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1759,6 +1759,8 @@ public void run() {
                         }
                     };
 
+                    final long serial = state.getSerial();
+
                     Log.i(account.name + " observing operations");
                     getMainHandler().post(new Runnable() {
                         @Override
@@ -1850,8 +1852,6 @@ public int compare(TupleOperationEx.PartitionKey k1, TupleOperationEx.PartitionK
                                                         " operations=" + ops);
                                             }
 
-                                            final long serial = state.getSerial();
-
                                             Map<String, String> crumb = new HashMap<>();
                                             crumb.put("account", folder.account == null ? null : Long.toString(folder.account));
                                             crumb.put("folder", folder.name + "/" + folder.type + ":" + folder.id);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4728,7 +4728,7 @@ private void onActionMore(TupleMessageEx message) {
                     .setIcon(message.ui_snoozed == null ? R.drawable.twotone_visibility_off_24 : R.drawable.twotone_visibility_24);
 
             popupMenu.getMenu().findItem(R.id.menu_flag_color)
-                    .setVisible(flags_background)
+                    .setVisible(flags || message.ui_flagged)
                     .setEnabled(message.uid != null ||
                             message.accountProtocol != EntityAccount.TYPE_IMAP);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3170,7 +3170,6 @@ protected void onExecuted(Bundle args, final MoreResult result) {
                 final Context context = getContext();
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                 boolean flags = prefs.getBoolean("flags", true);
-                boolean flags_background = prefs.getBoolean("flags_background", false);
 
                 PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, getViewLifecycleOwner(), fabMore);
 
@@ -3199,7 +3198,7 @@ protected void onExecuted(Bundle args, final MoreResult result) {
                 if (result.flagged && flags)
                     popupMenu.getMenu().add(Menu.NONE, R.string.title_unflag, order++, R.string.title_unflag)
                             .setIcon(R.drawable.twotone_star_border_24);
-                if ((result.unflagged || result.flagged) && flags_background)
+                if ((result.unflagged || result.flagged) && flags)
                     popupMenu.getMenu().add(Menu.NONE, R.string.title_flag_color, order++, R.string.title_flag_color)
                             .setIcon(R.drawable.twotone_auto_awesome_24);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5693,7 +5693,8 @@ private Spanned getKeywords(TupleMessageEx message) {
                             Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                 }
             }
-            return ssb;
+
+            return (ssb.length() == 0 ? null : ssb);
         }
 
         ItemDetailsLookup.ItemDetails<Long> getItemDetails(@NonNull MotionEvent motionEvent) {

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1959,9 +1959,10 @@ private static void attachAccounts(Context context, long id, int sequence) throw
 
             size += write(os, "accounts=" + accounts.size() +
                     " enabled=" + enabled +
-                    " interval=" + pollInterval +
-                    "\r\nmetered=" + metered +
+                    " interval=" + pollInterval + "\r\n" +
+                    " metered=" + metered +
                     " VPN=" + ConnectionHelper.vpnActive(context) +
+                    " NetGuard=" + Helper.isInstalled(context, "eu.faircode.netguard") + "\r\n" +
                     " optimizing=" + (ignoring == null ? null : !ignoring) +
                     " auto_optimize=" + auto_optimize +
                     "\r\n\r\n");

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1618,7 +1618,9 @@ public void onPrepareOptionsMenu(Menu menu) {
         ssbZoom.append(' ');
         for (int i = 0; i <= zoom; i++)
             ssbZoom.append('+');
-        menu.findItem(R.id.menu_zoom).setTitle(ssbZoom);
+        menu.findItem(R.id.menu_zoom)
+                .setTitle(ssbZoom)
+                .setIcon(R.drawable.twotone_format_size_24);
         PopupMenuLifecycle.insertIcon(context, menu.findItem(R.id.menu_zoom));
 
         int colorEncrypt = Helper.resolveColor(context, R.attr.colorEncrypt);

File: app/src/main/java/eu/faircode/email/PopupMenuLifecycle.java
Patch:
@@ -136,7 +136,7 @@ static void insertIcon(Context context, MenuItem menuItem) {
         ssb.insert(0, "\uFFFC\u2002"); // object replacement character, en space
         ssb.setSpan(imageSpan, 0, 1, 0);
         menuItem.setTitle(ssb);
-        //menuItem.setIcon(null);
+        menuItem.setIcon(null);
         menuItem.setTitleCondensed("");
     }
 }

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -526,7 +526,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean reply_move = prefs.getBoolean("reply_move", false);
-        boolean debug = prefs.getBoolean("debug", false);
+        boolean debug = (prefs.getBoolean("debug", false) || BuildConfig.DEBUG);
 
         if (message.identity == null)
             throw new IllegalArgumentException("Send without identity");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2764,7 +2764,7 @@ protected void onException(Bundle args, Throwable ex) {
                 @RequiresApi(api = Build.VERSION_CODES.Q)
                 private ConversationActions getConversationActions(TupleMessageEx message, Document document, Context context) {
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                    boolean conversation_actions = prefs.getBoolean("conversation_actions", false);
+                    boolean conversation_actions = prefs.getBoolean("conversation_actions", Helper.isGoogle());
                     boolean conversation_actions_replies = prefs.getBoolean("conversation_actions_replies", true);
                     if (!conversation_actions)
                         return null;

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -495,7 +495,7 @@ private void setOptions() {
 
         swSyncOnlaunch.setChecked(prefs.getBoolean("sync_on_launch", false));
         swDoubleBack.setChecked(prefs.getBoolean("double_back", false));
-        swConversationActions.setChecked(prefs.getBoolean("conversation_actions", false));
+        swConversationActions.setChecked(prefs.getBoolean("conversation_actions", Helper.isGoogle()));
         swConversationActionsReplies.setChecked(prefs.getBoolean("conversation_actions_replies", true));
         swConversationActionsReplies.setEnabled(swConversationActions.isChecked());
         swLanguageDetection.setChecked(prefs.getBoolean("language_detection", false));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -412,6 +412,8 @@ else if (BuildConfig.AMAZON_RELEASE)
             config.addMetadata("extra", "fingerprint", Helper.hasValidFingerprint(context));
             config.addMetadata("extra", "memory_class", am.getMemoryClass());
             config.addMetadata("extra", "memory_class_large", am.getLargeMemoryClass());
+            config.addMetadata("extra", "build_host", Build.HOST);
+            config.addMetadata("extra", "build_time", new Date(Build.TIME));
 
             config.addOnSession(new OnSessionCallback() {
                 @Override
@@ -1710,6 +1712,7 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append(String.format("Product: %s\r\n", Build.PRODUCT));
         sb.append(String.format("Device: %s\r\n", Build.DEVICE));
         sb.append(String.format("Host: %s\r\n", Build.HOST));
+        sb.append(String.format("Time: %s\r\n", new Date(Build.TIME).toString()));
         sb.append(String.format("Display: %s\r\n", Build.DISPLAY));
         sb.append(String.format("Id: %s\r\n", Build.ID));
         sb.append("\r\n");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2764,7 +2764,7 @@ protected void onException(Bundle args, Throwable ex) {
                 @RequiresApi(api = Build.VERSION_CODES.Q)
                 private ConversationActions getConversationActions(TupleMessageEx message, Document document, Context context) {
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                    boolean conversation_actions = prefs.getBoolean("conversation_actions", true);
+                    boolean conversation_actions = prefs.getBoolean("conversation_actions", false);
                     boolean conversation_actions_replies = prefs.getBoolean("conversation_actions_replies", true);
                     if (!conversation_actions)
                         return null;

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -495,7 +495,7 @@ private void setOptions() {
 
         swSyncOnlaunch.setChecked(prefs.getBoolean("sync_on_launch", false));
         swDoubleBack.setChecked(prefs.getBoolean("double_back", false));
-        swConversationActions.setChecked(prefs.getBoolean("conversation_actions", true));
+        swConversationActions.setChecked(prefs.getBoolean("conversation_actions", false));
         swConversationActionsReplies.setChecked(prefs.getBoolean("conversation_actions_replies", true));
         swConversationActionsReplies.setEnabled(swConversationActions.isChecked());
         swLanguageDetection.setChecked(prefs.getBoolean("language_detection", false));

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1035,6 +1035,8 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                         return true;
                     if (!Objects.equals(account.use_received, use_received))
                         return true;
+                    if (account.error != null && account.synchronize)
+                        return true;
 
                     EntityFolder edrafts = db.folder().getFolderByType(account.id, EntityFolder.DRAFTS);
                     if (!Objects.equals(edrafts == null ? null : edrafts.id, drafts == null ? null : drafts.id))

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -899,6 +899,8 @@ else if (encryption == EmailService.ENCRYPTION_NONE)
                         return true;
                     if (user_max_size != null && !Objects.equals(identity.max_size, user_max_size))
                         return true;
+                    if (identity.error != null && identity.synchronize)
+                        return true;
 
                     return false;
                 }

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -310,6 +310,8 @@ public void run() {
 
             if ("accounts".equals(target) && id > 0)
                 onEditAccount(intent);
+            else if ("identities".equals(target) && id > 0)
+                onEditIdentity(intent);
             else {
                 FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
                 if ("accounts".equals(target))

File: app/src/main/java/eu/faircode/email/FragmentOptionsEncryption.java
Patch:
@@ -325,6 +325,7 @@ public void onClick(View v) {
         btnImportKey.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                // https://pki-tutorial.readthedocs.io/en/latest/mime.html
                 Context context = v.getContext();
                 PackageManager pm = context.getPackageManager();
                 Intent open = new Intent(Intent.ACTION_GET_CONTENT);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1614,7 +1614,7 @@ public void messagesAdded(MessageCountEvent e) {
                                         Log.e(folder.name, ex);
                                         EntityLog.log(ServiceSynchronize.this,
                                                 folder.name + " added " + Log.formatThrowable(ex, false));
-                                        state.error(ex);
+                                        EntityOperation.sync(ServiceSynchronize.this, folder.id, false);
                                     } finally {
                                         wlMessage.release();
                                     }
@@ -1630,7 +1630,7 @@ public void messagesRemoved(MessageCountEvent e) {
                                         Log.e(folder.name, ex);
                                         EntityLog.log(ServiceSynchronize.this,
                                                 folder.name + " removed " + Log.formatThrowable(ex, false));
-                                        state.error(ex);
+                                        EntityOperation.sync(ServiceSynchronize.this, folder.id, false);
                                     } finally {
                                         wlMessage.release();
                                     }
@@ -1651,7 +1651,7 @@ public void messageChanged(MessageChangedEvent e) {
                                         Log.e(folder.name, ex);
                                         EntityLog.log(ServiceSynchronize.this,
                                                 folder.name + " changed " + Log.formatThrowable(ex, false));
-                                        state.error(ex);
+                                        EntityOperation.sync(ServiceSynchronize.this, folder.id, false);
                                     } finally {
                                         wlMessage.release();
                                     }

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -182,9 +182,6 @@ String getMimeType() {
         if ("docx".equals(extension))
             return "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
 
-        if ("mid".equals(extension) || "midi".equals(extension))
-            return "audio/midi";
-
         if ("xls".equals(extension))
             return "application/vnd.ms-excel";
 
@@ -207,6 +204,9 @@ String getMimeType() {
         if ("text/plain".equals(type) && "ovpn".equals(extension))
             return "application/x-openvpn-profile";
 
+        if ("audio/mid".equals(type))
+            return "audio/midi";
+
         // https://www.rfc-editor.org/rfc/rfc3555.txt
         if ("video/jpeg".equals(type))
             return "image/jpeg";

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2055,6 +2055,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                             jfolder.put("read_only", folder.read_only);
                             jfolder.put("selectable", folder.selectable);
                             jfolder.put("inferiors", folder.inferiors);
+                            jfolder.put("auto_add", folder.auto_add);
                             jfolder.put("error", folder.error);
                             if (folder.last_sync != null)
                                 jfolder.put("last_sync", new Date(folder.last_sync).toString());

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1125,7 +1125,7 @@ private static void onAdd(Context context, JSONArray jargs, EntityAccount accoun
 
             // Some providers do not list the new message yet
             try {
-                Log.i(folder.name + " searching for added msgid=" + message.id);
+                Log.i(folder.name + " searching for added msgid=" + message.msgid);
                 Message[] imessages = findMsgId(context, account, ifolder, message.msgid);
                 if (imessages != null) {
                     Long found = null;

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -213,6 +213,9 @@ private EmailService() {
             properties.put("mail." + protocol + ".timeout", Integer.toString(timeout * factor));
         }
 
+        boolean idle_done = prefs.getBoolean("idle_done", true);
+        properties.put("mail.idledone", Boolean.toString(idle_done));
+
         if (debug && BuildConfig.DEBUG)
             properties.put("mail.debug.auth", "true");
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -150,7 +150,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
             "download_headers", "download_eml",
             "prefer_ip4", "bind_socket", "standalone_vpn", "tcp_keep_alive", "ssl_harden", // force reconnect
             "experiments", "debug", "protocol", // force reconnect
-            "auth_plain", "auth_login", "auth_ntlm", "auth_sasl", // force reconnect
+            "auth_plain", "auth_login", "auth_ntlm", "auth_sasl", "idle_done", // force reconnect
             "exact_alarms" // force schedule
     ));
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -167,6 +167,9 @@ String getMimeType() {
         extension = extension.toLowerCase(Locale.ROOT);
 
         // Fix types
+        if ("csv".equals(extension))
+            return "text/csv";
+
         if ("dxf".equals(extension))
             return "application/dxf";
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3959,6 +3959,7 @@ private void onActionCreateChannel() {
                     channel.setGroup("contacts");
                     channel.setDescription(from.getPersonal());
                     channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+                    channel.setBypassDnd(true);
                     channel.enableLights(true);
                     nm.createNotificationChannel(channel);
                     onActionEditChannel();

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -216,6 +216,7 @@ void createNotificationChannel(Context context) {
                 NotificationManager.IMPORTANCE_HIGH);
         channel.setGroup(group.getId());
         channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+        channel.setBypassDnd(true);
         channel.enableLights(true);
         nm.createNotificationChannel(channel);
     }

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -96,6 +96,7 @@ void createNotificationChannel(Context context) {
                 NotificationManager.IMPORTANCE_HIGH);
         channel.setGroup(group.getId());
         channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+        channel.setBypassDnd(true);
         channel.enableLights(true);
         nm.createNotificationChannel(channel);
     }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2896,7 +2896,7 @@ private static void onSynchronizeMessages(
                 try {
                     if (MessageHelper.hasCapability(ifolder, "CONDSTORE")) {
                         modseq = ifolder.getHighestModSeq();
-                        modified = (force || initialize != 0 ||
+                        modified = (force || initialize != 0 || modseq < 0 ||
                                 folder.modseq == null || !folder.modseq.equals(modseq));
                         EntityLog.log(context, folder.name + " modseq=" + modseq + "/" + folder.modseq + " modified=" + modified);
                     }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1976,6 +1976,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                             " sync=" + account.synchronize +
                             " exempted=" + account.poll_exempted +
                             " poll=" + account.poll_interval +
+                            " ondemand=" + account.ondemand +
                             " messages=" + content + "/" + messages +
                             " " + account.state +
                             (account.last_connected == null ? "" : " " + dtf.format(account.last_connected)) +

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -434,6 +434,8 @@ private void showConnectionType() {
                         sb.append(lp).append("\r\n\r\n");
                 }
 
+                sb.append("VPN=")
+                        .append(ConnectionHelper.vpnActive(context)).append("\r\n");
                 sb.append("Airplane mode=")
                         .append(ConnectionHelper.airplaneMode(context)).append("\r\n");
             } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -121,7 +121,7 @@ public abstract class DB extends RoomDatabase {
     private static DB sInstance;
 
     static final int DEFAULT_QUERY_THREADS = 4; // AndroidX default thread count: 4
-    static final int DEFAULT_CACHE_SIZE = 5; // percentage
+    static final int DEFAULT_CACHE_SIZE = 7; // percentage of memory class
 
     private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -234,9 +234,7 @@ public boolean onLongClick(View view) {
 
             if (contact.state != EntityContact.STATE_IGNORE)
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_advanced_never_favorite, 1, R.string.title_advanced_never_favorite);
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.R && // should be system whitelisted
-                    share.resolveActivity(context.getPackageManager()) != null)
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_share, 2, R.string.title_share);
+            popupMenu.getMenu().add(Menu.NONE, R.string.title_share, 2, R.string.title_share); // should be system whitelisted
             if (Shortcuts.can(context))
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_pin, 3, R.string.title_pin);
             popupMenu.getMenu().add(Menu.NONE, R.string.title_advanced_edit_name, 4, R.string.title_advanced_edit_name);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -277,7 +277,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " AND ui_hide")
     LiveData<List<Long>> liveHiddenThread(long account, String thread);
 
-    @Query("SELECT * FROM message" +
+    @Query("SELECT message.* FROM message" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +
             " WHERE message.account = :account" +
             " AND message.thread = :thread" +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4698,8 +4698,7 @@ private void onActionMore(TupleMessageEx message) {
             popupMenu.getMenu().findItem(R.id.menu_show_headers).setEnabled(message.uid != null ||
                     (message.accountProtocol == EntityAccount.TYPE_POP && message.headers != null));
 
-            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setVisible(message.content &&
-                    (debug || BuildConfig.DEBUG));
+            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setVisible(message.content && BuildConfig.DEBUG);
 
             boolean canRaw = (message.uid != null ||
                     (EntityFolder.INBOX.equals(message.folderType) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4698,7 +4698,8 @@ private void onActionMore(TupleMessageEx message) {
             popupMenu.getMenu().findItem(R.id.menu_show_headers).setEnabled(message.uid != null ||
                     (message.accountProtocol == EntityAccount.TYPE_POP && message.headers != null));
 
-            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setVisible(message.content && BuildConfig.DEBUG);
+            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setVisible(message.content &&
+                    (debug || BuildConfig.DEBUG));
 
             boolean canRaw = (message.uid != null ||
                     (EntityFolder.INBOX.equals(message.folderType) &&

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -121,7 +121,7 @@ public abstract class DB extends RoomDatabase {
     private static DB sInstance;
 
     static final int DEFAULT_QUERY_THREADS = 4; // AndroidX default thread count: 4
-    static final int DEFAULT_CACHE_SIZE = 10; // percentage
+    static final int DEFAULT_CACHE_SIZE = 5; // percentage
 
     private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -633,6 +633,7 @@ public void onClick(View v) {
                 new SimpleTask<Void>() {
                     @Override
                     protected void onPostExecute(Bundle args) {
+                        prefs.edit().remove("debug").apply();
                         ToastEx.makeText(v.getContext(), R.string.title_completed, Toast.LENGTH_LONG).show();
                     }
 
@@ -710,6 +711,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         ibRoom.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                prefs.edit().remove("debug").commit();
                 ApplicationEx.restart(v.getContext());
             }
         });
@@ -748,6 +750,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         ibSqliteCache.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                prefs.edit().remove("debug").commit();
                 ApplicationEx.restart(v.getContext());
             }
         });

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -536,7 +536,9 @@ static void processOperations(
                                 EntityOperation.RAW.equals(op.name) ||
                                 EntityOperation.ATTACHMENT.equals(op.name) ||
                                 (EntityOperation.ADD.equals(op.name) &&
-                                        EntityFolder.DRAFTS.equals(folder.type))) {
+                                        EntityFolder.DRAFTS.equals(folder.type)) ||
+                                (EntityOperation.SYNC.equals(op.name) &&
+                                        account.protocol == EntityAccount.TYPE_POP)) {
                             // com.sun.mail.iap.BadCommandException: BAD [TOOBIG] Message too large
                             // com.sun.mail.iap.CommandFailedException: NO [CANNOT] Cannot APPEND to a SPAM folder
                             // com.sun.mail.iap.CommandFailedException: NO [ALERT] Cannot MOVE messages out of the Drafts folder

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -758,6 +758,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 Object tag = cbSignature.getTag();
                 if (tag == null || !tag.equals(checked)) {
                     cbSignature.setTag(checked);
+                    tvSignature.setAlpha(checked ? 1.0f : Helper.LOW_LIGHT);
                     if (tag != null)
                         onAction(R.id.action_save, "signature");
                 }

File: app/src/main/java/com/bugsnag/android/Breadcrumb.java
Patch:
@@ -1,5 +1,7 @@
 package com.bugsnag.android;
 
+import com.bugsnag.android.internal.DateUtils;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -199,7 +199,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int position,
                 if (value != current) {
                     adapterView.setTag(value);
                     prefs.edit().putInt("poll_interval", value).apply();
-                    tvPollBattery.setVisibility(value < 15 ? View.VISIBLE : View.GONE);
+                    tvPollBattery.setVisibility(value > 0 && value < 15 ? View.VISIBLE : View.GONE);
                     grpExempted.setVisibility(value == 0 ? View.GONE : View.VISIBLE);
                 }
             }
@@ -461,7 +461,7 @@ private void setOptions() {
                 break;
             }
 
-        tvPollBattery.setVisibility(pollInterval < 15 ? View.VISIBLE : View.GONE);
+        tvPollBattery.setVisibility(pollInterval > 0 && pollInterval < 15 ? View.VISIBLE : View.GONE);
         grpExempted.setVisibility(pollInterval == 0 ? View.GONE : View.VISIBLE);
 
         swSchedule.setChecked(prefs.getBoolean("schedule", false) && pro);

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -484,6 +484,7 @@ else if (EntityFolder.ARCHIVE.equals(folder.type))
                             db.endTransaction();
                         }
 
+                        fail = null;
                         break;
                     } catch (Throwable ex) {
                         Log.w(ex);

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -189,6 +189,9 @@ public interface DaoAccount {
     @Query("UPDATE account SET `primary` = :primary WHERE id = :id AND NOT (`primary` IS :primary)")
     int setAccountPrimary(long id, boolean primary);
 
+    @Query("UPDATE account SET notify = :notify WHERE id = :id AND NOT (notify IS :notify)")
+    int setAccountNotify(long id, boolean notify);
+
     @Query("UPDATE account SET thread = :thread WHERE id = :id AND NOT (thread IS :thread)")
     int setAccountThread(long id, Long thread);
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1986,9 +1986,10 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                     for (TupleFolderEx folder : folders)
                         if (folder.synchronize)
                             size += write(os, "- " + folder.name + " " + folder.type +
+                                    (folder.unified ? " unified" : "") +
+                                    (folder.notify ? " notify" : "") +
                                     " poll=" + folder.poll + "/" + folder.poll_factor +
                                     " days=" + folder.sync_days + "/" + folder.keep_days +
-                                    " notify=" + folder.notify +
                                     " msgs=" + folder.content + "/" + folder.messages +
                                     " " + folder.state +
                                     (folder.last_sync == null ? "" : " " + dtf.format(folder.last_sync)) +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1938,6 +1938,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                     " enabled=" + enabled +
                     " interval=" + pollInterval +
                     "\r\nmetered=" + metered +
+                    " VPN=" + ConnectionHelper.vpnActive(context) +
                     " optimizing=" + (ignoring == null ? null : !ignoring) +
                     " auto_optimize=" + auto_optimize +
                     "\r\n\r\n");

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -121,7 +121,7 @@ public abstract class DB extends RoomDatabase {
     private static DB sInstance;
 
     static final int DEFAULT_QUERY_THREADS = 4; // AndroidX default thread count: 4
-    static final int DEFAULT_CACHE_SIZE = 5; // percentage
+    static final int DEFAULT_CACHE_SIZE = 10; // percentage
 
     private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -393,6 +393,7 @@ else if (BuildConfig.AMAZON_RELEASE)
             String no_internet = context.getString(R.string.title_no_internet);
 
             String installer = context.getPackageManager().getInstallerPackageName(BuildConfig.APPLICATION_ID);
+            config.addMetadata("extra", "revision", BuildConfig.REVISION);
             config.addMetadata("extra", "installer", installer == null ? "-" : installer);
             config.addMetadata("extra", "installed", new Date(Helper.getInstallTime(context)).toString());
             config.addMetadata("extra", "fingerprint", Helper.hasValidFingerprint(context));

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -871,6 +871,8 @@ static Intent getIntentIssue(Context context) {
             String html = "<br><br>";
 
             html += "<p style=\"font-size:small;\">";
+            html += "Android: " + Build.VERSION.RELEASE + " (SDK " + Build.VERSION.SDK_INT + ")<br>";
+            html += "Device: " + Build.MANUFACTURER + " " + Build.DEVICE + "<br>";
             html += "Locale: " + Html.escapeHtml(slocale.toString()) + "<br>";
             if (language != null)
                 html += "Language: " + Html.escapeHtml(language) + "<br>";

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1761,6 +1761,8 @@ else if (config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_SMALL))
                 .append(" night=").append(Helper.isNight(context))
                 .append("\r\n");
 
+        sb.append(String.format("UI type: %s\r\n", Helper.getUiModeType(context)));
+
         sb.append("ExactAlarms")
                 .append(" can=")
                 .append(AlarmManagerCompatEx.canScheduleExactAlarms(context))

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1253,7 +1253,10 @@ private NotificationCompat.Builder getNotificationAlert(EntityAccount account, S
         intent.putExtra("type", "alert");
         intent.putExtra("title", title);
         intent.putExtra("message", message);
+        intent.putExtra("provider", account.provider);
         intent.putExtra("account", account.id);
+        intent.putExtra("protocol", account.protocol);
+        intent.putExtra("auth_type", account.auth_type);
         intent.putExtra("faq", 23);
         intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         PendingIntent piAlert = PendingIntentCompat.getActivity(

File: app/src/main/java/eu/faircode/email/TwoStateOwner.java
Patch:
@@ -68,7 +68,7 @@ static List<TwoStateOwner> getList() {
         owner.getLifecycle().addObserver(new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
             public void onDestroyed() {
-                Log.i(this + " parent destroyed");
+                Log.i(TwoStateOwner.this + " parent destroyed");
                 owned = false;
                 destroy();
                 owner.getLifecycle().removeObserver(this);
@@ -83,7 +83,7 @@ private void create() {
             registry.addObserver(new LifecycleObserver() {
                 @OnLifecycleEvent(Lifecycle.Event.ON_ANY)
                 public void onAny() {
-                    Log.i(this + " " + registry);
+                    Log.i(TwoStateOwner.this + " " + registry);
                     changed = new Date().getTime();
                 }
             });
@@ -93,7 +93,7 @@ public void onAny() {
                 list.add(this);
             }
         } else
-            Log.e(this + " not owned");
+            Log.e(TwoStateOwner.this + " not owned");
     }
 
     void start() {

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -143,6 +143,9 @@ private void bindTo(TupleContactEx contact) {
                 ivType.setContentDescription(null);
             }
 
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
+                ivType.setTooltipText(ivType.getContentDescription());
+
             if (contact.avatar == null || !contacts)
                 ivAvatar.setImageDrawable(null);
             else {

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -40,6 +40,7 @@
 import androidx.appcompat.widget.PopupMenu;
 import androidx.constraintlayout.widget.Group;
 import androidx.fragment.app.FragmentTransaction;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.DividerItemDecoration;
@@ -205,6 +206,8 @@ public boolean onLongClick(View v) {
         animator.addUpdateListener(new ObjectAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
+                if (!getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
+                    return;
                 fab.setAlpha((float) animation.getAnimatedValue());
             }
         });

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -32,6 +32,7 @@
 import androidx.annotation.Nullable;
 import androidx.constraintlayout.widget.Group;
 import androidx.fragment.app.FragmentTransaction;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.DividerItemDecoration;
@@ -108,6 +109,8 @@ public void onClick(View view) {
         animator.addUpdateListener(new ObjectAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
+                if (!getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
+                    return;
                 fab.setAlpha((float) animation.getAnimatedValue());
             }
         });

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5192,13 +5192,13 @@ private void loadMessagesNext(final boolean top) {
         @Override
         public void onLoading() {
             loading = true;
-            updateListState("Loading", SimpleTask.getCount(), adapter.getItemCount());
+            updateListState("Loading", SimpleTask.getCount(), adapter == null ? 0 : adapter.getItemCount());
         }
 
         @Override
         public void onLoaded(int found) {
             loading = false;
-            updateListState("Loaded found=" + found, SimpleTask.getCount(), adapter.getItemCount() + found);
+            updateListState("Loaded found=" + found, SimpleTask.getCount(), adapter == null ? 0 : adapter.getItemCount() + found);
         }
 
         @Override

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4900,7 +4900,7 @@ else if (!color.equals(mcolor)) {
                         .setAction("reply:" + message.id)
                         .putExtra("group", group);
                 PendingIntent piReply = PendingIntentCompat.getService(
-                        context, ServiceUI.PI_REPLY_DIRECT, reply, PendingIntent.FLAG_UPDATE_CURRENT);
+                        context, ServiceUI.PI_REPLY_DIRECT, reply, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_MUTABLE);
                 NotificationCompat.Action.Builder actionReply = new NotificationCompat.Action.Builder(
                         R.drawable.twotone_reply_24,
                         context.getString(R.string.title_advanced_notify_action_reply_direct),

File: app/src/main/java/eu/faircode/email/PendingIntentCompat.java
Patch:
@@ -31,21 +31,21 @@ private PendingIntentCompat() {
     }
 
     public static PendingIntent getActivity(Context context, int requestCode, Intent intent, int flags) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M)
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || (flags & PendingIntent.FLAG_MUTABLE) != 0)
             return PendingIntent.getActivity(context, requestCode, intent, flags);
         else
             return PendingIntent.getActivity(context, requestCode, intent, flags | PendingIntent.FLAG_IMMUTABLE);
     }
 
     public static PendingIntent getService(Context context, int requestCode, @NonNull Intent intent, int flags) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M)
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || (flags & PendingIntent.FLAG_MUTABLE) != 0)
             return PendingIntent.getService(context, requestCode, intent, flags);
         else
             return PendingIntent.getService(context, requestCode, intent, flags | PendingIntent.FLAG_IMMUTABLE);
     }
 
     static PendingIntent getForegroundService(Context context, int requestCode, @NonNull Intent intent, int flags) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O)
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O || (flags & PendingIntent.FLAG_MUTABLE) != 0)
             return PendingIntent.getService(context, requestCode, intent, flags);
         else
             return PendingIntent.getForegroundService(context, requestCode, intent, flags | PendingIntent.FLAG_IMMUTABLE);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5551,6 +5551,9 @@ protected ActionData onExecute(Context context, Bundle args) {
                         db.endTransaction();
                     }
 
+                    if (junkOnly == null)
+                        junkOnly = false;
+
                     ActionData data = new ActionData();
                     data.delete = (trash == null || junkOnly ||
                             (account != null && account.protocol == EntityAccount.TYPE_POP));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2212,9 +2212,10 @@ private static void attachTasks(Context context, long id, int sequence) throws I
         long size = 0;
         File file = attachment.getFile(context);
         try (OutputStream os = new BufferedOutputStream(new FileOutputStream(file))) {
-            for (SimpleTask task : SimpleTask.getList()) {
+            for (SimpleTask task : SimpleTask.getList())
                 size += write(os, String.format("%s\r\n", task.toString()));
-            }
+            for (TwoStateOwner owner : TwoStateOwner.getList())
+                size += write(os, String.format("%s\r\n", owner.toString()));
         }
 
         db.attachment().setDownloaded(attachment.id, size);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2268,6 +2268,9 @@ private void evalProperties(TupleMessageEx message) {
                 properties.setValue("full", message.id, true);
                 properties.setValue("full_asked", message.id, true);
             }
+
+            boolean default_light = prefs.getBoolean("default_light", false);
+            properties.setValue("force_light", message.id, default_light);
         }
 
         private void bindBody(TupleMessageEx message, final boolean scroll) {

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -144,7 +144,8 @@ public class FragmentOptions extends FragmentBase {
             "language_detection",
             "quick_filter", "quick_scroll",
             "experiments", "debug",
-            "biometrics"
+            "biometrics",
+            "default_light"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentDialogJunk.java
Patch:
@@ -270,6 +270,7 @@ public void onClick(DialogInterface dialog, int which) {
                 : getString(R.string.title_ask_spam_who, from));
         cbBlockSender.setEnabled(canBlock);
         cbBlockDomain.setEnabled(false);
+        cbBlockSender.setChecked(canBlock);
         ibMore.setImageLevel(1);
         cbBlocklist.setChecked(check_blocklist && use_blocklist);
         tvBlocklist.setText(TextUtils.join(", ", DnsBlockList.getNamesEnabled(context)));

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -107,9 +107,9 @@ void init(int height, float size, Pair<Integer, Integer> position, boolean force
 
         WebSettings settings = getSettings();
 
-        boolean dark = (Helper.isDarkTheme(context) && !force_light);
+        boolean dark = Helper.isDarkTheme(context);
         if (WebViewEx.isFeatureSupported(WebViewFeature.FORCE_DARK))
-            WebSettingsCompat.setForceDark(settings, dark ? FORCE_DARK_ON : FORCE_DARK_OFF);
+            WebSettingsCompat.setForceDark(settings, dark && !force_light ? FORCE_DARK_ON : FORCE_DARK_OFF);
         if (!dark)
             setBackgroundColor(ColorUtils.setAlphaComponent(Color.WHITE, 127));
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -127,7 +127,7 @@ public class FragmentOptions extends FragmentBase {
             "send_pending",
             "startup", "cards", "beige", "tabular_card_bg", "shadow_unread",
             "portrait2", "portrait2c", "landscape", "nav_count", "navbar_colorize",
-            "indentation", "date", "date_bold", "threading", "threading_unread",
+            "indentation", "date", "date_fixed", "date_bold", "threading", "threading_unread",
             "highlight_unread", "highlight_color", "color_stripe",
             "avatars", "bimi", "gravatars", "favicons", "generated_icons", "identicons", "circular", "saturation", "brightness", "threshold",
             "email_format", "prefer_contact", "only_contact", "distinguish_contacts", "show_recipients",

File: app/src/main/java/eu/faircode/email/TupleOperationEx.java
Patch:
@@ -69,8 +69,6 @@ PartitionKey getPartitionKey(boolean offline) {
             } catch (Throwable ex) {
                 Log.e(ex);
             }
-        else if (SYNC.equals(name))
-            key.id = "folder:" + folder;
         else if (!MOVE.equals(name))
             key.id = "id:" + id;
 

File: app/src/main/java/eu/faircode/email/TupleOperationEx.java
Patch:
@@ -69,6 +69,8 @@ PartitionKey getPartitionKey(boolean offline) {
             } catch (Throwable ex) {
                 Log.e(ex);
             }
+        else if (SYNC.equals(name))
+            key.id = "folder:" + folder;
         else if (!MOVE.equals(name))
             key.id = "id:" + id;
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -516,9 +516,9 @@ else if (version < 1439) {
                 if (!prefs.contains("landscape3"))
                     editor.putBoolean("landscape3", false);
             }
-        } else if (version < 17150) {
-            editor.remove("sign_algo_smime");
-            editor.remove("encrypt_algo_smime");
+        } else if (version < 1721) {
+            if (!prefs.contains("discard_delete"))
+                editor.putBoolean("discard_delete", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5251,7 +5251,7 @@ protected EntityMessage onExecute(final Context context, Bundle args) throws Thr
             EntityMessage draft;
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-            boolean discard_delete = prefs.getBoolean("discard_delete", false);
+            boolean discard_delete = prefs.getBoolean("discard_delete", true);
             boolean write_below = prefs.getBoolean("write_below", false);
             boolean save_drafts = prefs.getBoolean("save_drafts", true);
             int send_delayed = prefs.getInt("send_delayed", 0);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -572,7 +572,7 @@ private void setOptions() {
         swSignatureNew.setChecked(prefs.getBoolean("signature_new", true));
         swSignatureReply.setChecked(prefs.getBoolean("signature_reply", true));
         swSignatureForward.setChecked(prefs.getBoolean("signature_forward", true));
-        swDiscardDelete.setChecked(prefs.getBoolean("discard_delete", false));
+        swDiscardDelete.setChecked(prefs.getBoolean("discard_delete", true));
         swReplyMove.setChecked(prefs.getBoolean("reply_move", false));
 
         swAutoLink.setChecked(prefs.getBoolean("auto_link", false));

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -191,9 +191,9 @@ private void onClear(long group) {
         DB db = DB.getInstance(this);
         int cleared;
         if (group < 0)
-            cleared = db.message().ignoreAll(null, -group);
+            cleared = db.message().ignoreAll(null, -group, null);
         else
-            cleared = db.message().ignoreAll(group == 0 ? null : group, null);
+            cleared = db.message().ignoreAll(group == 0 ? null : group, null, null);
         EntityLog.log(this, EntityLog.Type.Notification,
                 "Notify clear group=" + group + " cleared=" + cleared);
     }

File: app/src/main/java/eu/faircode/email/WorkerFts.java
Patch:
@@ -57,10 +57,11 @@ public Result doWork() {
             Log.i("FTS index");
             Context context = getApplicationContext();
 
+            DB.checkpoint(context);
+
             int indexed = 0;
             List<Long> ids = new ArrayList<>(INDEX_BATCH_SIZE);
             DB db = DB.getInstance(context);
-            db.checkpoint(context);
 
             SQLiteDatabase sdb = FtsDbHelper.getInstance(context);
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1773,7 +1773,8 @@ else if (config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_SMALL))
 
         try {
             int maxKeySize = javax.crypto.Cipher.getMaxAllowedKeyLength("AES");
-            sb.append(context.getString(R.string.title_advanced_aes_key_size, maxKeySize)).append("\r\n");
+            sb.append(context.getString(R.string.title_advanced_aes_key_size,
+                    Helper.humanReadableByteCount(maxKeySize))).append("\r\n");
         } catch (Throwable ex) {
             sb.append(ex.toString()).append("\r\n");
         }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7475,10 +7475,9 @@ protected void onException(Bundle args, Throwable ex) {
                         }
                 } else if (EntityMessage.SMIME_SIGNENCRYPT.equals(type)) {
                     String algo = args.getString("algo");
-                    if (!TextUtils.isEmpty(algo)) {
+                    if (BuildConfig.DEBUG && !TextUtils.isEmpty(algo))
                         Snackbar.make(view, algo, Snackbar.LENGTH_LONG)
                                 .setGestureInsetBottomIgnored(true).show();
-                    }
                 }
             }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3538,7 +3538,7 @@ else if ("EC".equals(algorithm))
 
                 // Build message
                 ContentType ct = new ContentType("multipart/signed");
-                ct.setParameter("micalg", "sha-256");
+                ct.setParameter("micalg", micalg);
                 ct.setParameter("protocol", "application/pkcs7-signature");
                 ct.setParameter("smime-type", "signed-data");
                 String ctx = ct.toString();

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1915,13 +1915,15 @@ private static void attachAccounts(Context context, long id, int sequence) throw
             int pollInterval = ServiceSynchronize.getPollInterval(context);
             boolean metered = prefs.getBoolean("metered", true);
             Boolean ignoring = Helper.isIgnoringOptimizations(context);
+            boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
             boolean schedule = prefs.getBoolean("schedule", false);
 
             size += write(os, "accounts=" + accounts.size() +
                     " enabled=" + enabled +
                     " interval=" + pollInterval +
-                    " metered=" + metered +
+                    "\r\nmetered=" + metered +
                     " optimizing=" + (ignoring == null ? null : !ignoring) +
+                    " auto_optimize=" + auto_optimize +
                     "\r\n\r\n");
 
             if (schedule) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1927,7 +1927,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
                     boolean button_notes = prefs.getBoolean("button_notes", false);
                     boolean button_seen = prefs.getBoolean("button_seen", false);
                     boolean button_hide = prefs.getBoolean("button_hide", false);
-                    boolean button_translate = prefs.getBoolean("button_translate", false);
+                    boolean button_translate = prefs.getBoolean("button_translate", true);
                     boolean button_search = prefs.getBoolean("button_search", false);
                     boolean button_search_text = prefs.getBoolean("button_search_text", false);
                     boolean button_event = prefs.getBoolean("button_event", false);
@@ -7339,7 +7339,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             cbKeywords.setChecked(prefs.getBoolean("button_keywords", false));
             cbSearch.setChecked(prefs.getBoolean("button_search", false));
             cbSearchText.setChecked(prefs.getBoolean("button_search_text", false));
-            cbTranslate.setChecked(prefs.getBoolean("button_translate", false));
+            cbTranslate.setChecked(prefs.getBoolean("button_translate", true));
             cbEvent.setChecked(prefs.getBoolean("button_event", false));
             cbShare.setChecked(prefs.getBoolean("button_share", false));
             cbPin.setChecked(prefs.getBoolean("button_pin", false));

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -426,7 +426,6 @@ public void run() {
 
                             for (EntityFolder folder : db.folder().getFolders(accountNetworkState.accountState.id, false, false)) {
                                 db.folder().setFolderState(folder.id, null);
-                                db.folder().setFolderSyncState(folder.id, null);
                                 db.folder().setFolderPollCount(folder.id, 0);
                             }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -148,7 +148,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
             "sync_folders",
             "sync_shared_folders",
             "download_headers", "download_eml",
-            "prefer_ip4", "standalone_vpn", "tcp_keep_alive", "ssl_harden", // force reconnect
+            "prefer_ip4", "bind_socket", "standalone_vpn", "tcp_keep_alive", "ssl_harden", // force reconnect
             "experiments", "debug", "protocol", // force reconnect
             "auth_plain", "auth_login", "auth_ntlm", "auth_sasl", // force reconnect
             "exact_alarms" // force schedule

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -803,7 +803,7 @@ private static void onSeen(Context context, JSONArray jargs, EntityFolder folder
         DB db = DB.getInstance(context);
 
         boolean seen = jargs.getBoolean(0);
-        db.message().setMessageUiSeen(folder.id, seen);
+        db.message().setMessageUiSeen(message.id, seen);
     }
 
     private static void onFlag(Context context, JSONArray jargs, EntityFolder folder, EntityMessage message, IMAPFolder ifolder) throws MessagingException, JSONException, IOException {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2134,7 +2134,7 @@ public void onChildDraw(
             if (EntityMessage.SWIPE_ACTION_ASK.equals(action))
                 icon = R.drawable.twotone_help_24;
             else if (EntityMessage.SWIPE_ACTION_SEEN.equals(action))
-                icon = (message.ui_seen ? R.drawable.twotone_visibility_off_24 : R.drawable.twotone_visibility_24);
+                icon = (message.ui_seen ? R.drawable.twotone_drafts_24 : R.drawable.twotone_mail_24);
             else if (EntityMessage.SWIPE_ACTION_FLAG.equals(action))
                 icon = (message.ui_flagged ? R.drawable.twotone_star_border_24 : R.drawable.baseline_star_24);
             else if (EntityMessage.SWIPE_ACTION_SNOOZE.equals(action))

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -68,8 +68,8 @@ public class ServiceSend extends ServiceBase implements SharedPreferences.OnShar
     private Network lastActive = null;
     private boolean lastSuitable = false;
 
+    private TwoStateOwner owner;
     private PowerManager.WakeLock wlOutbox;
-    private TwoStateOwner owner = new TwoStateOwner("send");
     private List<Long> handling = new ArrayList<>();
 
     private static ExecutorService executor = Helper.getBackgroundExecutor(1, "send");
@@ -86,6 +86,8 @@ public void onCreate() {
         startForeground(NotificationHelper.NOTIFICATION_SEND,
                 getNotificationService().build());
 
+        owner = new TwoStateOwner(this, "send");
+
         PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
         wlOutbox = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, BuildConfig.APPLICATION_ID + ":send");
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -103,7 +103,7 @@ public class ActivityView extends ActivityBilling implements FragmentManager.OnB
     private View content_separator;
     private View content_pane;
 
-    private TwoStateOwner owner = new TwoStateOwner("drawer");
+    private TwoStateOwner owner;
     private DrawerLayoutEx drawerLayout;
     private ActionBarDrawerToggle drawerToggle;
     private NestedScrollView drawerContainer;
@@ -238,6 +238,7 @@ else if (config.orientation == ORIENTATION_PORTRAIT || !landscape)
             content_separator.getLayoutParams().width = Helper.dp2pixels(this, 34);
         }
 
+        owner = new TwoStateOwner(this, "drawer");
         drawerLayout = findViewById(R.id.drawer_layout);
 
         final ViewGroup childContent = (ViewGroup) drawerLayout.getChildAt(0);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2523,7 +2523,7 @@ private void normalizeText(List<TextNode> block) {
                 while (block.size() > 0) {
                     tnode = block.get(block.size() - 1);
                     text = tnode.getWholeText();
-                    if (endsWithSpace(text)) {
+                    if (endsWithSpace(text) && !"-- ".equals(text)) {
                         text = text.substring(0, text.length() - 1);
                         tnode.text(text);
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5066,7 +5066,7 @@ public void onChanged(@Nullable PagedList<TupleMessageEx> messages) {
                 if (autoscroll) {
                     ActivityView activity = (ActivityView) getActivity();
                     if (activity != null &&
-                            activity.isFolderUpdated(viewType == AdapterMessage.ViewType.UNIFIED ? -1L : folder))
+                            activity.isFolderUpdated(viewType == AdapterMessage.ViewType.UNIFIED ? null : folder, type))
                         adapter.gotoTop();
                 }
             }

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -179,9 +179,6 @@ String getMimeType() {
         if ("docx".equals(extension))
             return "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
 
-        if ("mp3".equals(extension))
-            return "audio/mpeg";
-
         if ("xls".equals(extension))
             return "application/vnd.ms-excel";
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -179,6 +179,9 @@ String getMimeType() {
         if ("docx".equals(extension))
             return "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
 
+        if ("mp3".equals(extension))
+            return "audio/mpeg";
+
         if ("xls".equals(extension))
             return "application/vnd.ms-excel";
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1800,7 +1800,8 @@ public void onClick(DialogInterface dialog, int which) {
                         @Override
                         public void onDismiss(DialogInterface dialog) {
                             Log.i("Authenticate PIN dismissed");
-                            ApplicationEx.getMainHandler().post(cancelled);
+                            if (shouldAuthenticate(activity)) // Some Android versions call dismiss on OK
+                                ApplicationEx.getMainHandler().post(cancelled);
                         }
                     })
                     .create();

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -167,6 +167,9 @@ String getMimeType() {
         extension = extension.toLowerCase(Locale.ROOT);
 
         // Fix types
+        if ("dxf".equals(extension))
+            return "application/dxf";
+
         if ("gpx".equals(extension))
             return "application/gpx+xml";
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1879,12 +1879,14 @@ private static void attachAccounts(Context context, long id, int sequence) throw
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             boolean enabled = prefs.getBoolean("enabled", true);
             int pollInterval = ServiceSynchronize.getPollInterval(context);
+            boolean metered = prefs.getBoolean("metered", true);
             Boolean ignoring = Helper.isIgnoringOptimizations(context);
             boolean schedule = prefs.getBoolean("schedule", false);
 
             size += write(os, "accounts=" + accounts.size() +
                     " enabled=" + enabled +
                     " interval=" + pollInterval +
+                    " metered=" + metered +
                     " optimizing=" + (ignoring == null ? null : !ignoring) +
                     "\r\n\r\n");
 

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -190,7 +190,8 @@ private void onClear(long group) {
             cleared = db.message().ignoreAll(null, -group);
         else
             cleared = db.message().ignoreAll(group == 0 ? null : group, null);
-        EntityLog.log(this, "Notify clear group=" + group + " cleared=" + cleared);
+        EntityLog.log(this, EntityLog.Type.Notification,
+                "Notify clear group=" + group + " cleared=" + cleared);
     }
 
     private void cancel(long group, long id) {

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -62,7 +62,7 @@ public class EntityLog {
     @NonNull
     public String data;
 
-    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification}
+    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification, Rules}
 
     private static final ExecutorService executor =
             Helper.getBackgroundExecutor(1, "log");

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -208,7 +208,8 @@ static void queue(Context context, EntityMessage message, String name, Object...
                 jargs.put(1, autoread);
                 jargs.put(3, autounflag);
 
-                EntityLog.log(context, "Move message=" + message.id +
+                EntityLog.log(context, EntityLog.Type.General,message,
+                        "Move message=" + message.id +
                         "@" + new Date(message.received) +
                         ":" + message.subject +
                         " source=" + source.id + ":" + source.type + ":" + source.name + "" +

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -62,7 +62,7 @@ public class EntityLog {
     @NonNull
     public String data;
 
-    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification}
+    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification, Notification}
 
     private static final ExecutorService executor =
             Helper.getBackgroundExecutor(1, "log");

File: app/src/main/java/eu/faircode/email/AdapterLog.java
Patch:
@@ -89,6 +89,9 @@ private void bindTo(EntityLog log) {
                 case Protocol:
                     ssb.setSpan(new ForegroundColorSpan(textColorSecondary), 0, ssb.length(), 0);
                     break;
+                case Classification:
+                    ssb.setSpan(new ForegroundColorSpan(colorAccent), 0, ssb.length(), 0);
+                    break;
             }
             tvData.setText(ssb);
         }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2463,7 +2463,7 @@ private class MediatorState extends MediatorLiveData<List<TupleAccountNetworkSta
         private List<TupleAccountState> lastAccountStates = null;
 
         private void post(Bundle command) {
-            EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Network,
+            EntityLog.log(ServiceSynchronize.this, EntityLog.Type.Scheduling,
                     "### command " + TextUtils.join(" ", Log.getExtras(command)));
 
             if (command.getBoolean("sync") || command.getBoolean("force"))

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -59,7 +59,7 @@ public class EntityLog {
     @NonNull
     public String data;
 
-    enum Type {General, Statistics, Scheduling, Network, Account, Protocol}
+    enum Type {General, Statistics, Scheduling, Network, Account, Protocol, Classification}
 
     private static final ExecutorService executor =
             Helper.getBackgroundExecutor(1, "log");

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2098,7 +2098,8 @@ private static void attachLog(Context context, long id, int sequence) throws IOE
             DateFormat TF = Helper.getTimeInstance(context);
 
             for (EntityLog entry : db.log().getLogs(from, null))
-                size += write(os, String.format("%s %s\r\n", TF.format(entry.time), entry.data));
+                size += write(os, String.format("%s [%d] %s\r\n",
+                        TF.format(entry.time), entry.type.ordinal(), entry.data));
         }
 
         db.attachment().setDownloaded(attachment.id, size);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -552,6 +552,9 @@ else if (s > 3)
             // Element style
             style = mergeStyles(style, element.attr("style"));
 
+            if ("fairemail_debug_info".equals(clazz))
+                style = mergeStyles(style, "font-size: smaller");
+
             if (text_align) {
                 // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center
                 if ("center".equals(element.tagName())) {

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1520,7 +1520,7 @@ static EntityMessage getDebugInfo(Context context, int title, Throwable ex, Stri
             sb.append(ex.toString()).append("\n").append(android.util.Log.getStackTraceString(ex));
         if (log != null)
             sb.append(log);
-        String body = "<pre>" + TextUtils.htmlEncode(sb.toString()) + "</pre>";
+        String body = "<pre class=\"fairemail_debug_info\">" + TextUtils.htmlEncode(sb.toString()) + "</pre>";
 
         EntityMessage draft;
 

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -84,7 +84,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         long from = new Date().getTime() - 24 * 3600 * 1000L;
 
         DB db = DB.getInstance(getContext());
-        db.log().liveLogs(from).observe(getViewLifecycleOwner(), new Observer<List<EntityLog>>() {
+        db.log().liveLogs(from, null).observe(getViewLifecycleOwner(), new Observer<List<EntityLog>>() {
             @Override
             public void onChanged(List<EntityLog> logs) {
                 if (logs == null)

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -2099,7 +2099,7 @@ private static void attachLog(Context context, long id, int sequence) throws IOE
             long from = new Date().getTime() - 24 * 3600 * 1000L;
             DateFormat TF = Helper.getTimeInstance(context);
 
-            for (EntityLog entry : db.log().getLogs(from))
+            for (EntityLog entry : db.log().getLogs(from, null))
                 size += write(os, String.format("%s %s\r\n", TF.format(entry.time), entry.data));
         }
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -337,8 +337,9 @@ public void beforeTextChanged(CharSequence s, int start, int count, int after) {
 
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-                if (TextUtils.isEmpty(s))
-                    tilPassword.setEndIconMode(END_ICON_PASSWORD_TOGGLE);
+                // https://github.com/material-components/material-components-android/issues/503
+                //if (TextUtils.isEmpty(s))
+                //   tilPassword.setEndIconMode(END_ICON_PASSWORD_TOGGLE);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -192,8 +192,9 @@ public void beforeTextChanged(CharSequence s, int start, int count, int after) {
 
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-                if (TextUtils.isEmpty(s))
-                    tilPassword.setEndIconMode(END_ICON_PASSWORD_TOGGLE);
+                // https://github.com/material-components/material-components-android/issues/503
+                //if (TextUtils.isEmpty(s))
+                //    tilPassword.setEndIconMode(END_ICON_PASSWORD_TOGGLE);
             }
 
             @Override

File: app/src/main/java/com/bugsnag/android/EventStore.java
Patch:
@@ -11,7 +11,6 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
-import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
 import java.util.concurrent.RejectedExecutionException;
@@ -53,7 +52,7 @@ public int compare(File lhs, File rhs) {
                Notifier notifier,
                BackgroundTaskService bgTaskSevice,
                Delegate delegate) {
-        super(new File(config.getPersistenceDirectory(), "bugsnag-errors"),
+        super(new File(config.getPersistenceDirectory().getValue(), "bugsnag-errors"),
                 config.getMaxPersistedEvents(),
                 EVENT_COMPARATOR,
                 logger,

File: app/src/main/java/com/bugsnag/android/NativeInterface.java
Patch:
@@ -56,7 +56,7 @@ public static String getContext() {
     @NonNull
     public static String getNativeReportPath() {
         ImmutableConfig config = getClient().getConfig();
-        File persistenceDirectory = config.getPersistenceDirectory();
+        File persistenceDirectory = config.getPersistenceDirectory().getValue();
         return new File(persistenceDirectory, "bugsnag-native").getAbsolutePath();
     }
 

File: app/src/main/java/com/bugsnag/android/SessionStore.java
Patch:
@@ -7,7 +7,6 @@
 
 import java.io.File;
 import java.util.Comparator;
-import java.util.Locale;
 import java.util.UUID;
 
 /**
@@ -37,7 +36,7 @@ public int compare(File lhs, File rhs) {
     SessionStore(@NonNull ImmutableConfig config,
                  @NonNull Logger logger,
                  @Nullable Delegate delegate) {
-        super(new File(config.getPersistenceDirectory(), "bugsnag-sessions"),
+        super(new File(config.getPersistenceDirectory().getValue(), "bugsnag-sessions"),
                 config.getMaxPersistedSessions(),
                 SESSION_COMPARATOR,
                 logger,

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1820,8 +1820,8 @@ else if (config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_SMALL))
             sb.append("\r\n");
         }
 
-        sb.append(new Date(Helper.getInstallTime(context))).append("\r\n");
-        sb.append(new Date()).append("\r\n");
+        sb.append(String.format("Installed: %s\r\n", new Date(Helper.getInstallTime(context))));
+        sb.append(String.format("Now: %s\r\n", new Date()));
 
         sb.append("\r\n");
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4902,6 +4902,7 @@ static NotificationCompat.Builder getNotificationError(Context context, String c
         intent.putExtra("type", channel);
         intent.putExtra("title", title);
         intent.putExtra("message", message);
+        intent.putExtra("account", account.id);
         intent.putExtra("faq", 22);
         intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         PendingIntent pi = PendingIntentCompat.getActivity(

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1171,6 +1171,7 @@ private NotificationCompat.Builder getNotificationAlert(EntityAccount account, S
         intent.putExtra("type", "alert");
         intent.putExtra("title", title);
         intent.putExtra("message", message);
+        intent.putExtra("account", account.id);
         intent.putExtra("faq", 23);
         intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         PendingIntent piAlert = PendingIntentCompat.getActivity(

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -109,6 +109,7 @@ public class ActivityView extends ActivityBilling implements FragmentManager.OnB
     private ImageButton ibExpanderExtra;
     private RecyclerView rvMenuExtra;
 
+    private boolean nav_fixed;
     private boolean expanded;
     private AdapterNavAccount adapterNavAccount;
     private AdapterNavUnified adapterNavUnified;
@@ -263,7 +264,6 @@ public void onDrawerSlide(View drawerView, float slideOffset) {
         drawerContainer = findViewById(R.id.drawer_container);
 
         int drawerWidth;
-        final boolean nav_fixed;
         DisplayMetrics dm = getResources().getDisplayMetrics();
         if (viewId == R.layout.activity_view_landscape_split && landscape3) {
             drawerWidth = Helper.dp2pixels(this, 300);
@@ -282,7 +282,6 @@ public void onDrawerSlide(View drawerView, float slideOffset) {
             int screenWidth = Math.min(dm.widthPixels, dm.heightPixels);
             int dp320 = Helper.dp2pixels(this, 320);
             drawerWidth = Math.min(screenWidth - actionBarHeight, dp320);
-            nav_fixed = false;
         }
 
         int dp48 = Helper.dp2pixels(this, 48);
@@ -770,7 +769,8 @@ public void onConfigurationChanged(Configuration newConfig) {
     @Override
     public void onBackPressed() {
         int count = getSupportFragmentManager().getBackStackEntryCount();
-        if (drawerLayout.isDrawerOpen(drawerContainer) &&
+        if (!nav_fixed &&
+                drawerLayout.isDrawerOpen(drawerContainer) &&
                 (!drawerLayout.isLocked(drawerContainer) || count == 1))
             drawerLayout.closeDrawer(drawerContainer);
         else {

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -108,7 +108,7 @@ public class FragmentOptions extends FragmentBase {
             "subscriptions",
             "check_authentication", "check_reply_domain", "check_mx", "check_blocklist",
             "send_pending",
-            "portrait2", "landscape", "landscape3", "nav_count", "startup",
+            "portrait2", "portrait3", "landscape", "landscape3", "nav_count", "startup",
             "cards", "beige", "tabular_card_bg", "shadow_unread",
             "indentation", "date", "date_bold", "threading", "threading_unread",
             "highlight_unread", "highlight_color", "color_stripe",

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2070,10 +2070,11 @@ static String getQuoteStyle(Element e) {
 
     static String getQuoteStyle(CharSequence quoted, int start, int end) {
         try {
-            if (TextDirectionHeuristics.FIRSTSTRONG_LTR.isRtl(quoted, start, end))
+            int count = end - start;
+            if (TextDirectionHeuristics.FIRSTSTRONG_LTR.isRtl(quoted, start, count))
                 return "border-right:3px solid #ccc; padding-left:3px;";
         } catch (Throwable ex) {
-            Log.e(new Throwable("getQuoteStyle", ex));
+            Log.e(new Throwable("getQuoteStyle " + start + "..." + end, ex));
         }
 
         return "border-left:3px solid #ccc; padding-left:3px;";

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -242,7 +242,8 @@ private void bindTo(TupleAccountEx account) {
             tvId.setVisibility(settings && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
 
             tvCapabilities.setText(account.capabilities);
-            tvCapabilities.setVisibility(settings && debug &&
+
+            tvCapabilities.setVisibility(settings && (debug || BuildConfig.DEBUG) &&
                     !TextUtils.isEmpty(account.capabilities) ? View.VISIBLE : View.GONE);
 
             tvIdentity.setVisibility(account.identities > 0 || !settings ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1927,6 +1927,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                         jaccount.put("state", account.state == null ? "null" : account.state);
                         jaccount.put("warning", account.warning);
                         jaccount.put("error", account.error);
+                        jaccount.put("capabilities", account.capabilities);
 
                         if (account.last_connected != null)
                             jaccount.put("last_connected", new Date(account.last_connected).toString());

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -242,8 +242,8 @@ private void bindTo(TupleAccountEx account) {
             tvId.setVisibility(settings && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
 
             tvCapabilities.setText(account.capabilities);
-            tvCapabilities.setVisibility(
-                    settings && !TextUtils.isEmpty(account.capabilities) ? View.VISIBLE : View.GONE);
+            tvCapabilities.setVisibility(settings && debug &&
+                    !TextUtils.isEmpty(account.capabilities) ? View.VISIBLE : View.GONE);
 
             tvIdentity.setVisibility(account.identities > 0 || !settings ? View.GONE : View.VISIBLE);
             tvDrafts.setVisibility(account.drafts != null || !settings ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/UriHelper.java
Patch:
@@ -26,13 +26,13 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.HashSet;
-import java.util.zip.ZipInputStream;
 
 public class UriHelper {
     // https://publicsuffix.org/
     private static final HashSet<String> suffixList = new HashSet<>();
 
-    private static final String SUFFIX_LIST_NAME = "effective_tld_names.dat.txt";
+    // https://raw.githubusercontent.com/publicsuffix/list/master/public_suffix_list.dat
+    private static final String SUFFIX_LIST_NAME = "public_suffix_list.dat";
 
     static String getParentDomain(Context context, String host) {
         if (host == null)

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2681,7 +2681,7 @@ public void tail(Node node, int depth) {
                     // Apply calculated font size
                     String xFontSize = element.attr("x-font-size-rel");
                     if (!TextUtils.isEmpty(xFontSize)) {
-                        Float fsize = Float.parseFloat(xFontSize);
+                        float fsize = Float.parseFloat(xFontSize);
                         if (fsize != 1.0f)
                             setSpan(ssb, new RelativeSizeSpan(fsize), start, ssb.length());
                     }

File: app/src/main/java/eu/faircode/email/Shortcuts.java
Patch:
@@ -202,7 +202,7 @@ private static ShortcutInfoCompat.Builder getShortcut(Context context, String em
 
         IconCompat icon = IconCompat.createWithBitmap(bitmap);
         String id = (name == null ? email : "\"" + name + "\" <" + email + ">");
-        Set<String> categories = new HashSet<>(Arrays.asList("eu.faircode.email.TEXT_SHARE_TARGET"));
+        Set<String> categories = new HashSet<>(Arrays.asList(BuildConfig.APPLICATION_ID + ".TEXT_SHARE_TARGET"));
         ShortcutInfoCompat.Builder builder = new ShortcutInfoCompat.Builder(context, id)
                 .setIcon(icon)
                 .setShortLabel(name == null ? email : name)

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2694,7 +2694,7 @@ public void tail(Node node, int depth) {
                                     else
                                         setSpan(ssb, new QuoteSpan(colorBlockquote, quoteStripe, quoteGap), start, ssb.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
                                 } else
-                                    setSpan(ssb, new IndentSpan(intentSize), start, ssb.length(), Spanned.SPAN_INCLUSIVE_INCLUSIVE);
+                                    setSpan(ssb, new IndentSpan(intentSize), start, ssb.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
                                 break;
                             case "br":
                                 ssb.append('\n');

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1923,7 +1923,6 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                     jaccount.put("keep_alive_failed", account.keep_alive_failed);
                     jaccount.put("keep_alive_succeeded", account.keep_alive_succeeded);
 
-                    jaccount.remove("user");
                     jaccount.remove("password");
 
                     size += write(os, "==========\r\n");
@@ -1940,20 +1939,22 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                         jfolder.put("subscribed", folder.subscribed);
                         jfolder.put("state", folder.state == null ? "null" : folder.state);
                         jfolder.put("sync_state", folder.sync_state == null ? "null" : folder.sync_state);
+                        jfolder.put("poll_count", folder.poll_count);
                         jfolder.put("read_only", folder.read_only);
                         jfolder.put("selectable", folder.selectable);
                         jfolder.put("inferiors", folder.inferiors);
                         jfolder.put("error", folder.error);
                         if (folder.last_sync != null)
                             jfolder.put("last_sync", new Date(folder.last_sync).toString());
+                        if (folder.last_sync_count != null)
+                            jfolder.put("last_sync_count", folder.last_sync_count);
                         size += write(os, jfolder.toString(2) + "\r\n");
                     }
 
                     List<EntityIdentity> identities = db.identity().getIdentities(account.id);
                     for (EntityIdentity identity : identities)
                         try {
                             JSONObject jidentity = identity.toJSON();
-                            jidentity.remove("user");
                             jidentity.remove("password");
                             jidentity.remove("signature");
                             size += write(os, "----------\r\n");

File: app/src/main/java/com/bugsnag/android/Event.java
Patch:
@@ -1,5 +1,7 @@
 package com.bugsnag.android;
 
+import com.bugsnag.android.internal.ImmutableConfig;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 

File: app/src/main/java/com/bugsnag/android/ExceptionHandler.java
Patch:
@@ -35,6 +35,9 @@ void uninstall() {
 
     @Override
     public void uncaughtException(@NonNull Thread thread, @NonNull Throwable throwable) {
+        if (client.getConfig().shouldDiscardError(throwable)) {
+            return;
+        }
         boolean strictModeThrowable = strictModeHandler.isStrictModeThrowable(throwable);
 
         // Notify any subscribed clients of the uncaught exception

File: app/src/main/java/com/bugsnag/android/InternalReportDelegate.java
Patch:
@@ -3,6 +3,8 @@
 import static com.bugsnag.android.DeliveryHeadersKt.HEADER_INTERNAL_ERROR;
 import static com.bugsnag.android.SeverityReason.REASON_UNHANDLED_EXCEPTION;
 
+import com.bugsnag.android.internal.ImmutableConfig;
+
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.Build;

File: app/src/main/java/com/bugsnag/android/SeverityReason.java
Patch:
@@ -69,8 +69,7 @@ static SeverityReason newInstance(@SeverityReasonType String severityReasonType,
             case REASON_LOG:
                 return new SeverityReason(severityReasonType, severity, false, attrVal);
             default:
-                String msg = String.format("Invalid argument '%s' for severityReason",
-                    severityReasonType);
+                String msg = "Invalid argument for severityReason: '" + severityReasonType + '\'';
                 throw new IllegalArgumentException(msg);
         }
     }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -784,7 +784,7 @@ List<Long> getMessageUnseen(
             "   OR (:account IS NULL AND NOT account.notify))" +
             " AND folder IN (" +
             "  SELECT id FROM folder" +
-            "  WHERE :folder IS NULL OR id = :folder)")
+            "  WHERE (:folder IS NULL AND folder.unified) OR id = :folder)")
     int ignoreAll(Long account, Long folder);
 
     @Query("UPDATE message SET ui_found = 1 WHERE id = :id AND NOT (ui_found IS 1)")

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -282,12 +282,12 @@ public void onChanged(PagedList<TupleMessageEx> messages) {
 
                         if (pos - 1 >= 0) {
                             TupleMessageEx next = messages.get(pos - 1);
-                            curState[0] = new Pair<>(next == null ? null : next.id, pos - 1);
+                            curState[2] = new Pair<>(next == null ? null : next.id, pos - 1);
                         }
 
                         if (pos + 1 < messages.size()) {
                             TupleMessageEx prev = messages.get(pos + 1);
-                            curState[2] = new Pair<>(prev == null ? null : prev.id, pos + 1);
+                            curState[0] = new Pair<>(prev == null ? null : prev.id, pos + 1);
                         }
 
                         break;

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -316,14 +316,14 @@ String checkReplyDomain(Context context) {
             int rat = (r == null ? -1 : r.indexOf('@'));
             if (rat < 0)
                 continue;
-            String rdomain = UriHelper.getParentDomain(r.substring(rat + 1));
+            String rdomain = UriHelper.getParentDomain(context, r.substring(rat + 1));
 
             for (Address _from : from) {
                 String f = ((InternetAddress) _from).getAddress();
                 int fat = (f == null ? -1 : f.indexOf('@'));
                 if (fat < 0)
                     continue;
-                String fdomain = UriHelper.getParentDomain(f.substring(fat + 1));
+                String fdomain = UriHelper.getParentDomain(context, f.substring(fat + 1));
 
                 if (!rdomain.equalsIgnoreCase(fdomain))
                     return context.getString(R.string.title_reply_domain, fdomain, rdomain);

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -867,7 +867,7 @@ static EntityRule blockSender(Context context, EntityMessage message, EntityFold
             int at = sender.indexOf('@');
             if (at > 0) {
                 boolean whitelisted = false;
-                String domain = UriHelper.getParentDomain(sender.substring(at + 1));
+                String domain = UriHelper.getParentDomain(context, sender.substring(at + 1));
                 for (String d : whitelist)
                     if (domain.matches(d)) {
                         whitelisted = true;

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1095,7 +1095,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     db.beginTransaction();
 
                     if (account != null && !account.password.equals(password)) {
-                        String domain = UriHelper.getParentDomain(account.host);
+                        String domain = UriHelper.getParentDomain(context, account.host);
                         String match = (Objects.equals(account.host, domain) ? account.host : "%." + domain);
                         int count = db.identity().setIdentityPassword(account.id, account.user, password, match);
                         Log.i("Updated passwords=" + count + " match=" + match);

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -488,7 +488,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     db.beginTransaction();
 
                     if (account != null && !account.password.equals(password)) {
-                        String domain = UriHelper.getParentDomain(account.host);
+                        String domain = UriHelper.getParentDomain(context, account.host);
                         String match = (Objects.equals(account.host, domain) ? account.host : "%." + domain);
                         int count = db.identity().setIdentityPassword(account.id, account.user, password, match);
                         Log.i("Updated passwords=" + count + " match=" + match);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -122,7 +122,7 @@ public class FragmentOptions extends FragmentBase {
             "background_color", "text_color", "text_size", "text_font", "text_align", "text_separators",
             "collapse_quotes", "image_placeholders", "inline_images",
             "seekbar", "actionbar", "actionbar_color", "navbar_colorize",
-            "autoscroll", "swipenav", "swipe_close", "swipe_move", "autoexpand", "autoclose", "onclose",
+            "autoscroll", "swipenav", "reversed", "swipe_close", "swipe_move", "autoexpand", "autoclose", "onclose",
             "language_detection",
             "quick_filter", "quick_scroll",
             "experiments", "debug",

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -295,6 +295,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int position,
                 etInterval.setText(provider.keepalive > 0 ? Integer.toString(provider.keepalive) : null);
                 cbPartialFetch.setChecked(provider.partial);
 
+                tvSentWarning.setVisibility(View.GONE);
                 grpFolders.setVisibility(View.GONE);
                 btnSave.setVisibility(View.GONE);
                 cbIdentity.setVisibility(View.GONE);
@@ -640,6 +641,7 @@ protected void onPreExecute(Bundle args) {
                 Helper.setViewsEnabled(view, false);
                 pbCheck.setVisibility(View.VISIBLE);
                 tvIdle.setVisibility(View.GONE);
+                tvSentWarning.setVisibility(View.GONE);
                 grpFolders.setVisibility(View.GONE);
                 grpError.setVisibility(View.GONE);
                 btnHelp.setVisibility(View.GONE);
@@ -766,6 +768,7 @@ public void run() {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
+                tvSentWarning.setVisibility(View.GONE);
                 grpFolders.setVisibility(View.GONE);
                 btnSave.setVisibility(View.GONE);
                 cbIdentity.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/EditTextCompose.java
Patch:
@@ -138,7 +138,7 @@ public boolean onTextContextMenuItem(int id) {
                 ClipData.Item item = cbm.getPrimaryClip().getItemAt(0);
 
                 final String html;
-                String h = item.getHtmlText();
+                String h = (raw ? null : item.getHtmlText());
                 if (h == null) {
                     CharSequence text = item.getText();
                     if (text == null)

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -73,6 +73,8 @@ static Context getLocalizedContext(Context context) {
             EntityLog.log(context, "Set language=" + language + " locale=" + locale);
             Locale.setDefault(locale);
             Configuration config = new Configuration();
+            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q)
+                config.setTo(context.getResources().getConfiguration());
             config.setLocale(locale);
             return context.createConfigurationContext(config);
         }

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -776,7 +776,7 @@ protected Void onExecute(Context context, Bundle args) {
                     db.endTransaction();
                 }
 
-                ServiceSynchronize.reload(context, folder.account, false, "delete folder");
+                ServiceSynchronize.reload(context, folder.account, true, "delete folder");
 
                 return null;
             }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1350,7 +1350,7 @@ public void folderRenamed(FolderEvent e) {
 
                                 int count = db.folder().renameFolder(account.id, old, name);
                                 Log.i("Renamed to " + name + " count=" + count);
-                                if (count == 0)
+                                if (count != 0)
                                     reload(ServiceSynchronize.this, account.id, false, "folder renamed");
                             } finally {
                                 wlFolder.release();

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1579,7 +1579,7 @@ static String getFingerprint(Context context, String hash) {
             byte[] bytes = digest.digest(cert);
             StringBuilder sb = new StringBuilder();
             for (byte b : bytes)
-                sb.append(Integer.toString(b & 0xff, 16).toUpperCase(Locale.ROOT));
+                sb.append(String.format("%02X", b));
             return sb.toString();
         } catch (Throwable ex) {
             Log.e(ex);

File: app/src/main/java/eu/faircode/email/TupleAccountNetworkState.java
Patch:
@@ -44,8 +44,8 @@ public TupleAccountNetworkState(
         this.accountState = accountState;
     }
 
-    public boolean canRun(boolean force) {
-        return (this.networkState.isSuitable() && this.accountState.shouldRun(enabled || force));
+    public boolean canRun() {
+        return (this.networkState.isSuitable() && this.accountState.shouldRun(enabled));
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/Bimi.java
Patch:
@@ -289,7 +289,7 @@ static Pair<Bitmap, Boolean> get(
                         Log.i("BIMI valid domain=" + domain);
                         verified = true;
                     } catch (Throwable ex) {
-                        Log.w(new Throwable("BIMI", ex));
+                        Log.w(new Throwable("BIMI " + domain, ex));
                     }
 
                     break;

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -68,7 +68,7 @@ static Context getLocalizedContext(Context context) {
         if (language != null) {
             Locale locale = Locale.forLanguageTag(language);
             Locale.setDefault(locale);
-            Configuration config = new Configuration(context.getResources().getConfiguration());
+            Configuration config = new Configuration();
             config.setLocale(locale);
             return context.createConfigurationContext(config);
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4352,7 +4352,7 @@ private void onActionMore(TupleMessageEx message) {
             popupMenu.getMenu().findItem(R.id.menu_show_headers).setEnabled(message.uid != null ||
                     (message.accountProtocol == EntityAccount.TYPE_POP && message.headers != null));
 
-            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setEnabled(message.content && BuildConfig.DEBUG);
+            popupMenu.getMenu().findItem(R.id.menu_share_as_html).setVisible(message.content && BuildConfig.DEBUG);
 
             popupMenu.getMenu().findItem(R.id.menu_raw_save).setEnabled(message.uid != null);
             popupMenu.getMenu().findItem(R.id.menu_raw_send).setEnabled(message.uid != null);

File: app/src/main/java/eu/faircode/email/DnsHelper.java
Patch:
@@ -80,7 +80,7 @@ static void checkMx(Context context, Address[] addresses) throws UnknownHostExce
                 String error = "Error " + lookup.getResult() + ": " + lookup.getErrorString();
                 if (lookup.getResult() == Lookup.HOST_NOT_FOUND ||
                         lookup.getResult() == Lookup.TYPE_NOT_FOUND)
-                    throw new UnknownHostException(error);
+                    throw new UnknownHostException(context.getString(R.string.title_no_server, domain));
                 else
                     Log.e(error);
             } catch (UnknownHostException ex) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -6732,7 +6732,8 @@ protected void onExecuted(Bundle args, DeepL.Translation translation) {
 
                                 @Override
                                 protected void onException(Bundle args, Throwable ex) {
-                                    tvText.setText(ex.toString());
+                                    Throwable exex = new Throwable("DeepL", ex);
+                                    ToastEx.makeText(context, Log.formatThrowable(exex), Toast.LENGTH_LONG).show();
                                 }
                             }.execute(FragmentDialogTranslate.this, args, "paragraph:translate");
                         }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -818,7 +818,8 @@ protected void onExecuted(Bundle args, DeepL.Translation translation) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Log.unexpectedError(getParentFragmentManager(), ex, false);
+                        Throwable exex = new Throwable("DeepL", ex);
+                        Log.unexpectedError(getParentFragmentManager(), exex, false);
                     }
                 }.execute(FragmentCompose.this, args, "compose:translate");
             }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -6338,7 +6338,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
                 @Override
                 public void onClick(View v) {
                     startActivity(new Intent(v.getContext(), ActivitySetup.class)
-                            .putExtra("manual", true));
+                            .putExtra("target", "accounts"));
                 }
             });
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5204,8 +5204,9 @@ public void run() {
                             if (draft.identity == null)
                                 throw new IllegalArgumentException(context.getString(R.string.title_from_missing));
 
+                            EntityAccount account = db.account().getAccount(draft.account);
                             EntityFolder sent = db.folder().getFolderByType(draft.account, EntityFolder.SENT);
-                            if (sent == null)
+                            if (account != null && account.protocol == EntityAccount.TYPE_IMAP && sent == null)
                                 args.putBoolean("sent_missing", true);
 
                             try {

File: app/src/main/java/eu/faircode/email/HtmlEx.java
Patch:
@@ -137,7 +137,9 @@ public HtmlEx(Context context){
                                   int option) {
         int next;
         for (int i = start; i < end; i = next) {
-            next = text.nextSpanTransition(i, end, LeadingMarginSpan.class);
+            int n1 = text.nextSpanTransition(i, end, QuoteSpan.class);
+            int n2 = text.nextSpanTransition(i, end, eu.faircode.email.IndentSpan.class);
+            next = Math.min(n1, n2);
             List<Object> spans = new ArrayList<>();
             for (Object span : text.getSpans(i, next, LeadingMarginSpan.class))
                 if (span instanceof QuoteSpan ||

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -831,6 +831,8 @@ else if (p[2] > 0.5)
                         case "list-style-type":
                             // https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type
                             element.attr("x-list-style", value);
+                            if (!view)
+                                sb.append(key).append(':').append(value).append(';');
                             break;
                     }
                 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -654,7 +654,7 @@ public void afterTextChanged(Editable text) {
                             int s = text.getSpanStart(indent);
                             int e = text.getSpanEnd(indent);
                             int f = text.getSpanFlags(indent);
-                            if (e - 1 > s && added + 2 == e) {
+                            if (e - 1 > s && added + 1 == e) {
                                 text.removeSpan(indent);
                                 text.setSpan(new IndentSpan(indent.getLeadingMargin(true)), s, e - 1, f);
                             }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2663,7 +2663,7 @@ public void tail(Node node, int depth) {
                                     else
                                         setSpan(ssb, new QuoteSpan(colorBlockquote, quoteStripe, quoteGap), start, ssb.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
                                 } else
-                                    setSpan(ssb, new IndentSpan(intentSize), start, ssb.length());
+                                    setSpan(ssb, new IndentSpan(intentSize), start, ssb.length(), Spanned.SPAN_INCLUSIVE_INCLUSIVE);
                                 break;
                             case "br":
                                 ssb.append('\n');

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -559,7 +559,7 @@ private boolean setIndentation(MenuItem item) {
                                     edit.removeSpan(indents[0]);
                             } else {
                                 IndentSpan is = new IndentSpan(intentSize);
-                                edit.setSpan(is, prev, next, Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
+                                edit.setSpan(is, prev, next, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
                             }
 
                             next++;

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -559,7 +559,7 @@ private boolean setIndentation(MenuItem item) {
                                     edit.removeSpan(indents[0]);
                             } else {
                                 IndentSpan is = new IndentSpan(intentSize);
-                                edit.setSpan(is, prev, next + 1, Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
+                                edit.setSpan(is, prev, next, Spanned.SPAN_INCLUSIVE_EXCLUSIVE);
                             }
 
                             next++;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2979,6 +2979,9 @@ public void setContent(Object content, String type) throws MessagingException {
                             input.delete();
                             db.identity().setIdentitySignKey(identity.id, null);
                             OpenPgpError error = result.getParcelableExtra(OpenPgpApi.RESULT_ERROR);
+                            if (error != null &&
+                                    error.getErrorId() == 0 && error.getMessage() == null)
+                                error.setMessage("General error");
                             throw new IllegalArgumentException(
                                     "OpenPgp" +
                                             " error " + (error == null ? "?" : error.getErrorId()) +

File: app/src/main/java/eu/faircode/email/BulletSpanEx.java
Patch:
@@ -111,7 +111,7 @@ public void drawLeadingMargin(@NonNull Canvas canvas, @NonNull Paint paint, int
             }
 
             final float yPosition = (top + bottom) / 2f;
-            final float xPosition = x + dir * mBulletRadius;
+            final float xPosition = x + dir * (mBulletRadius + indentWidth * (level + 1));
 
             if ("square".equals(ltype))
                 canvas.drawRect(

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -187,7 +187,7 @@ private void onClear(long group) {
             cleared = db.message().ignoreAll(null, -group);
         else
             cleared = db.message().ignoreAll(group == 0 ? null : group, null);
-        Log.i("Cleared=" + cleared);
+        EntityLog.log(this, "Notify clear group=" + group + " cleared=" + cleared);
     }
 
     private void cancel(long group, long id) {

File: app/src/fdroid/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -540,6 +540,9 @@ private void reportError(BillingResult result, String stage) {
         else {
             message = getBillingResponseText(result);
 
+            if (result.getResponseCode() == BillingClient.BillingResponseCode.BILLING_UNAVAILABLE)
+                message += " Is the Play Store app logged into the account used to install the app?";
+
             String debug = result.getDebugMessage();
             if (!TextUtils.isEmpty(debug))
                 message += " " + debug;

File: app/src/play/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -539,6 +539,9 @@ private void reportError(BillingResult result, String stage) {
         else {
             message = getBillingResponseText(result);
 
+            if (result.getResponseCode() == BillingClient.BillingResponseCode.BILLING_UNAVAILABLE)
+                message += " Is the Play Store app logged into the account used to install the app?";
+
             String debug = result.getDebugMessage();
             if (!TextUtils.isEmpty(debug))
                 message += " " + debug;

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -249,6 +249,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " FROM message" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +
             " WHERE " + is_outbox +
+            " AND NOT message.ui_hide" +
             " AND (NOT message.ui_snoozed IS NULL OR message.error IS NOT NULL)")
     LiveData<TupleOutboxStats> liveOutboxPending();
 

File: app/src/main/java/eu/faircode/email/ImageHelper.java
Patch:
@@ -315,8 +315,8 @@ static Drawable decodeImage(final Context context, final long id, String source,
             if (data && (show || inline || a.tracking))
                 try {
                     int scaleToPixels = res.getDisplayMetrics().widthPixels;
-                    ByteArrayInputStream bis = getDataUriStream(source);
-                    Bitmap bm = getScaledBitmap(bis, source, scaleToPixels);
+                    ByteArrayInputStream bis = getDataUriStream(a.source);
+                    Bitmap bm = getScaledBitmap(bis, a.source, scaleToPixels);
                     if (bm == null)
                         throw new IllegalArgumentException("decode byte array failed");
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5599,7 +5599,7 @@ private void checkAddress(InternetAddress[] addresses, Context context) throws A
                     address.validate();
                 } catch (AddressException ex) {
                     throw new AddressException(context.getString(R.string.title_address_parse_error,
-                            MessageHelper.formatAddressesCompose(addresses), ex.getMessage()));
+                            MessageHelper.formatAddressesCompose(new Address[]{address}), ex.getMessage()));
                 }
         }
 

File: app/src/main/java/eu/faircode/email/DnsBlockList.java
Patch:
@@ -54,7 +54,7 @@ public class DnsBlockList {
             }),
 
             // https://www.spamhaus.org/dbl/
-            new BlockList(true, "Spamhaus/DBL", "dbl.spamhaus.org", false, new String[]{
+            new BlockList(false, "Spamhaus/DBL", "dbl.spamhaus.org", false, new String[]{
                     // https://www.spamhaus.org/faq/section/Spamhaus%20DBL#291
                     "127.0.1.2", // spam domain
                     "127.0.1.4", // phish domain

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1318,9 +1318,9 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
                         if (uid == null)
                             throw new IllegalArgumentException("move: uid not found");
 
-                        if (draft) {
+                        if (draft || duplicate) {
                             Message icopy = itarget.getMessageByUID(uid);
-                            if (icopy != null)
+                            if (icopy == null)
                                 throw new IllegalArgumentException("move: gone uid=" + uid);
 
                             // Mark read

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -196,9 +196,6 @@ static void queue(Context context, EntityMessage message, String name, Object...
                     jargs.remove(2);
                 }
 
-                jargs.put(1, autoread);
-                jargs.put(3, autounflag);
-
                 EntityFolder source = db.folder().getFolder(message.folder);
                 EntityFolder target = db.folder().getFolder(jargs.getLong(0));
                 if (source == null || target == null || source.id.equals(target.id))
@@ -208,6 +205,9 @@ static void queue(Context context, EntityMessage message, String name, Object...
                         EntityFolder.TRASH.equals(target.type))
                     autoread = true;
 
+                jargs.put(1, autoread);
+                jargs.put(3, autounflag);
+
                 EntityLog.log(context, "Move message=" + message.id +
                         "@" + new Date(message.received) +
                         ":" + message.subject +

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -316,6 +316,8 @@ private static void setupBugsnag(final Context context) {
                 if (Helper.hasValidFingerprint(context)) {
                     if (BuildConfig.PLAY_STORE_RELEASE)
                         type = "play";
+                    else if (BuildConfig.AMAZON_RELEASE)
+                        type = "amazon";
                     else
                         type = "full";
                 } else {

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -302,7 +302,7 @@ private void suggest(String query) {
                         views = new View[TAB_PAGES.length];
                         LayoutInflater inflater = LayoutInflater.from(searchView.getContext());
                         for (int tab = 0; tab < TAB_PAGES.length; tab++) {
-                            titles[tab] = adapter.getPageTitle(tab).toString();
+                            titles[tab] = getString(PAGE_TITLES[tab]);
                             views[tab] = inflater.inflate(TAB_PAGES[tab], null);
                         }
                     }

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -495,6 +495,7 @@ public CharSequence getPageTitle(int position) {
         }
 
         private CharSequence getTitle(int titleid, int iconid, int position) {
+            String title = getString(titleid).toUpperCase();
             Drawable icon = getResources().getDrawable(iconid);
 
             int iconSize = getResources().getDimensionPixelSize(R.dimen.menu_item_icon_size);
@@ -507,7 +508,7 @@ private CharSequence getTitle(int titleid, int iconid, int position) {
 
             ImageSpan imageSpan = new ImageSpan(icon, DynamicDrawableSpan.ALIGN_BOTTOM);
 
-            SpannableStringBuilder ssb = new SpannableStringBuilder(getString(titleid));
+            SpannableStringBuilder ssb = new SpannableStringBuilder(title);
             if (position > 0)
                 ssb.setSpan(new RelativeSizeSpan(0.85f), 0, ssb.length(), 0);
             ssb.insert(0, "\uFFFC\u2002"); // object replacement character, en space

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2146,7 +2146,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
                 String c = parts[1]
                         .replaceAll(" +$", "") // trim trailing spaces
-                        .replace("\\r?\\n", "\\r\\n"); // normalize new lines
+                        .replaceAll("\\r?\\n", "\r\n"); // normalize new lines
                 try (OutputStream os = new FileOutputStream(file)) {
                     os.write(c.getBytes());
                 }

File: app/src/fdroid/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -547,6 +547,7 @@ private void reportError(BillingResult result, String stage) {
             message += " " + stage;
         }
 
+        Log.e(message);
         EntityLog.log(this, message);
 
         if (result != null) {

File: app/src/play/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -546,6 +546,7 @@ private void reportError(BillingResult result, String stage) {
             message += " " + stage;
         }
 
+        Log.e(message);
         EntityLog.log(this, message);
 
         if (result != null) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6897,7 +6897,7 @@ public byte[] getEncodedSignedAttributes() throws IOException {
                             break;
                     }
 
-                    if (result == null)
+                    if (result == null && !args.containsKey("reason"))
                         args.putString("reason", matching
                                 ? "Signature could not be verified"
                                 : "Certificates and signatures do not match");

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7260,7 +7260,7 @@ private static void checkPep(EntityMessage message, List<EntityAttachment> remot
                     }
 
                     String[] xpep = imessage.getHeader("X-pEp-Wrapped-Message-Info");
-                    if (xpep == null || xpep.length == 0 && !"INNER".equalsIgnoreCase(xpep[0]))
+                    if (xpep == null || xpep.length == 0 || !"INNER".equalsIgnoreCase(xpep[0]))
                         continue;
 
                     MessageHelper helper = new MessageHelper(imessage, context);

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -57,7 +57,7 @@ public class MessageClassifier {
 
     private static final int MAX_WORDS = 1000;
 
-    static void classify(EntityMessage message, EntityFolder folder, EntityFolder target, Context context) {
+    static synchronized void classify(EntityMessage message, EntityFolder folder, EntityFolder target, Context context) {
         try {
             if (!isEnabled(context))
                 return;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3362,6 +3362,9 @@ public boolean onKeyPressed(KeyEvent event) {
             if (message == null)
                 return false;
 
+            if (event.isCtrlPressed() || event.isAltPressed())
+                return false;
+
             switch (event.getKeyCode()) {
                 case KeyEvent.KEYCODE_ENTER:
                 case KeyEvent.KEYCODE_DPAD_CENTER:

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5769,6 +5769,9 @@ public boolean onKeyPressed(KeyEvent event) {
             if (!getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
                 return false;
 
+            if (event.isCtrlPressed() || event.isAltPressed())
+                return false;
+
             boolean up = (event.getAction() == ACTION_UP);
             boolean down = (event.getAction() == ACTION_DOWN);
 

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -139,8 +139,6 @@ private void run(final Context context, final LifecycleOwner owner, final Bundle
             tasks.add(this);
         }
 
-        updateTaskCount(context);
-
         try {
             onPreExecute(args);
         } catch (Throwable ex) {
@@ -253,6 +251,8 @@ private void deliver() {
                 });
             }
         });
+
+        updateTaskCount(context);
     }
 
     void cancel(Context context) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7444,7 +7444,8 @@ protected Void onExecute(Context context, Bundle args) throws JSONException {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException) {
-                    Snackbar snackbar = Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_INDEFINITE);
+                    Snackbar snackbar = Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_INDEFINITE)
+                            .setGestureInsetBottomIgnored(true);
                     snackbar.setAction(R.string.title_fix, new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3377,8 +3377,10 @@ static EntityMessage synchronizeMessage(
                                 "@" + new Date(message.received) +
                                 ":" + message.subject);
                         EntityFolder junk = db.folder().getFolderByType(message.account, EntityFolder.JUNK);
-                        if (junk != null)
+                        if (junk != null) {
                             EntityOperation.queue(context, message, EntityOperation.MOVE, junk.id, false);
+                            message.ui_hide = true;
+                        }
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -552,8 +552,8 @@ private static void answer(Context context, EntityRule rule, EntityMessage messa
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean prefix_once = prefs.getBoolean("prefix_once", true);
-        boolean alt_re = prefs.getBoolean("alt_re", true);
-        boolean alt_fwd = prefs.getBoolean("alt_fwd", true);
+        boolean alt_re = prefs.getBoolean("alt_re", false);
+        boolean alt_fwd = prefs.getBoolean("alt_fwd", false);
         boolean separate_reply = prefs.getBoolean("separate_reply", false);
         boolean extended_reply = prefs.getBoolean("extended_reply", false);
         boolean quote_reply = prefs.getBoolean("quote_reply", true);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -322,8 +322,8 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         prefix_once = prefs.getBoolean("prefix_once", true);
-        alt_re = prefs.getBoolean("alt_re", true);
-        alt_fwd = prefs.getBoolean("alt_fwd", true);
+        alt_re = prefs.getBoolean("alt_re", false);
+        alt_fwd = prefs.getBoolean("alt_fwd", false);
         monospaced = prefs.getBoolean("monospaced", false);
         compose_font = prefs.getString("compose_font", monospaced ? "monospace" : "sans-serif");
         media = prefs.getBoolean("compose_media", true);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1033,6 +1033,8 @@ private void updateUsage() {
         try {
             Log.i("Update usage");
 
+            Bundle args = new Bundle();
+
             new SimpleTask<StorageData>() {
                 @Override
                 protected StorageData onExecute(Context context, Bundle args) throws Throwable {
@@ -1071,7 +1073,7 @@ public void run() {
                 protected void onException(Bundle args, Throwable ex) {
                     Log.e(ex);
                 }
-            }.execute(this, null, "usage");
+            }.execute(this, args, "usage");
         } catch (Throwable ex) {
             Log.e(ex);
         }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -913,6 +913,8 @@ public boolean equals(@Nullable Object obj) {
                         this.with_notes == other.with_notes &&
                         Arrays.equals(this.with_types, other.with_types) &&
                         Objects.equals(this.with_size, other.with_size) &&
+                        this.in_trash == other.in_trash &&
+                        this.in_junk == other.in_junk &&
                         Objects.equals(this.after, other.after) &&
                         Objects.equals(this.before, other.before));
             } else

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -129,7 +129,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private static final int ACCOUNT_ERROR_AFTER_POLL = 4; // times
     private static final int FAST_FAIL_THRESHOLD = 75; // percent
     private static final int FETCH_YIELD_DURATION = 50; // milliseconds
-    private static final long WATCHDOG_INTERVAL = 60 * 60 * 1000L; // milliseconds
+    private static final long WATCHDOG_INTERVAL = (BuildConfig.DEBUG ? 15 : 60) * 60 * 1000L; // milliseconds
 
     private static final String ACTION_NEW_MESSAGE_COUNT = BuildConfig.APPLICATION_ID + ".NEW_MESSAGE_COUNT";
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4647,7 +4647,8 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                                 @Override
                                 public void run() {
                                     try {
-                                        adapter.set(a);
+                                        if (adapter != null)
+                                            adapter.set(a);
                                     } catch (Throwable ex) {
                                         Log.e(ex);
                                         /*

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1205,6 +1205,7 @@ else if (viewType == ViewType.THREAD || viewType == ViewType.SEARCH)
                         " unseen=" + message.unseen +
                         " ignored=" + message.ui_ignored +
                         " found=" + message.ui_found +
+                        "\nbusy=" + (message.ui_busy == null ? null : new Date(message.ui_busy)) +
                         "\nhash=" + message.hash +
                         "\nmsgid=" + message.msgid + "/" + message.uidl +
                         "\nthread=" + message.thread +

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2375,7 +2375,7 @@ public void tail(Node node, int depth) {
                                 setSpan(ssb, new StyleSpan(Typeface.BOLD), start, ssb.length());
                                 break;
                             case "hr":
-                                // Suppress succesive lines
+                                // Suppress successive lines
                                 LineSpan[] lines = ssb.getSpans(0, ssb.length(), LineSpan.class);
                                 int last = -1;
                                 if (lines != null)

File: app/src/main/java/eu/faircode/email/LineSpan.java
Patch:
@@ -54,7 +54,7 @@ public void draw(@NonNull Canvas canvas, CharSequence text, int start, int end,
         paint.setStrokeWidth(strokeWidth);
         if (dashLength != 0)
             paint.setPathEffect(new DashPathEffect(new float[]{dashLength, dashLength}, 0));
-        canvas.drawLine(x, ypos, canvas.getWidth(), ypos, paint);
+        canvas.drawLine(0, ypos, canvas.getWidth(), ypos, paint);
         paint.setColor(c);
         paint.setStrokeWidth(s);
         paint.setPathEffect(p);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1014,7 +1014,7 @@ static void hide(View view) {
     static boolean isNight(Context context) {
         // https://developer.android.com/guide/topics/ui/look-and-feel/darktheme#configuration_changes
         int uiMode = context.getResources().getConfiguration().uiMode;
-        Log.i("UI mode=" + Integer.toHexString(uiMode));
+        Log.i("UI mode=0x" + Integer.toHexString(uiMode));
         return ((uiMode & Configuration.UI_MODE_NIGHT_YES) != 0);
     }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1007,7 +1007,7 @@ protected UpdateInfo onExecute(Context context, Bundle args) throws Throwable {
                                 if (BuildConfig.DEBUG)
                                     return info;
                                 try {
-                                    if (Double.parseDouble(info.tag_name) <
+                                    if (Double.parseDouble(info.tag_name) <=
                                             Double.parseDouble(BuildConfig.VERSION_NAME))
                                         return null;
                                     else

File: app/src/main/java/eu/faircode/email/AlarmManagerCompatEx.java
Patch:
@@ -33,7 +33,7 @@ static void setAndAllowWhileIdle(
             @NonNull Context context, @NonNull AlarmManager am,
             int type, long trigger, @NonNull PendingIntent pi) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean exact_alarms = prefs.getBoolean("exact_alarms", false);
+        boolean exact_alarms = prefs.getBoolean("exact_alarms", true);
 
         if (exact_alarms)
             AlarmManagerCompat.setExactAndAllowWhileIdle(am, type, trigger, pi);

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -1003,7 +1003,7 @@ private void setOptions() {
         swAuthLogin.setChecked(prefs.getBoolean("auth_login", true));
         swAuthNtlm.setChecked(prefs.getBoolean("auth_ntlm", true));
         swAuthSasl.setChecked(prefs.getBoolean("auth_sasl", true));
-        swExactAlarms.setChecked(prefs.getBoolean("exact_alarms", false));
+        swExactAlarms.setChecked(prefs.getBoolean("exact_alarms", true));
         swTestIab.setChecked(prefs.getBoolean("test_iab", false));
 
         tvProcessors.setText(getString(R.string.title_advanced_processors, Runtime.getRuntime().availableProcessors()));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1174,7 +1174,7 @@ static boolean isOwnFault(Throwable ex) {
             for (StackTraceElement ste : ex.getCause().getStackTrace())
                 if ("android.view.textclassifier.TextClassifierImpl".equals(ste.getClassName()) &&
                         "validateInput".equals(ste.getMethodName()))
-                    return false;
+                    return true;
             /*
                 java.lang.RuntimeException: An error occurred while executing doInBackground()
                         at android.os.AsyncTask$3.done(AsyncTask.java:353)

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -931,7 +931,7 @@ private void checkUpdate(boolean always) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean updates = prefs.getBoolean("updates", true);
-        boolean weekly = prefs.getBoolean("weekly", true);
+        boolean weekly = prefs.getBoolean("weekly", false);
         long last_update_check = prefs.getLong("last_update_check", 0);
 
         if (!always && !updates)

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -982,7 +982,7 @@ private void setOptions() {
 
         swWatchdog.setChecked(prefs.getBoolean("watchdog", true));
         swUpdates.setChecked(prefs.getBoolean("updates", true));
-        swCheckWeekly.setChecked(prefs.getBoolean("weekly", true));
+        swCheckWeekly.setChecked(prefs.getBoolean("weekly", false));
         swCheckWeekly.setEnabled(swUpdates.isChecked());
         grpUpdates.setVisibility(!BuildConfig.DEBUG &&
                 (Helper.isPlayStoreInstall() || !Helper.hasValidFingerprint(getContext()))

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -318,7 +318,8 @@ public boolean matches(@NonNull BrowserDescriptor descriptor) {
             try {
                 authIntent = authService.getAuthorizationRequestIntent(authRequest);
             } catch (ActivityNotFoundException ex) {
-                throw new ActivityNotFoundException("Browser not found");
+                Log.e(ex);
+                throw new ActivityNotFoundException("Browser not found: " + ex.getMessage());
             }
             PackageManager pm = getContext().getPackageManager();
             if (authIntent.resolveActivity(pm) == null) // action whitelisted

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -931,7 +931,7 @@ private void checkUpdate(boolean always) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean updates = prefs.getBoolean("updates", true);
-        boolean weekly = prefs.getBoolean("weekly", false);
+        boolean weekly = prefs.getBoolean("weekly", true);
         long last_update_check = prefs.getLong("last_update_check", 0);
 
         if (!always && !updates)

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -982,7 +982,7 @@ private void setOptions() {
 
         swWatchdog.setChecked(prefs.getBoolean("watchdog", true));
         swUpdates.setChecked(prefs.getBoolean("updates", true));
-        swCheckWeekly.setChecked(prefs.getBoolean("weekly", false));
+        swCheckWeekly.setChecked(prefs.getBoolean("weekly", true));
         swCheckWeekly.setEnabled(swUpdates.isChecked());
         grpUpdates.setVisibility(!BuildConfig.DEBUG &&
                 (Helper.isPlayStoreInstall() || !Helper.hasValidFingerprint(getContext()))

File: app/src/main/java/com/bugsnag/android/Session.java
Patch:
@@ -232,7 +232,7 @@ private void serializeV1Payload(@NonNull JsonStream writer) throws IOException {
     void serializeSessionInfo(@NonNull JsonStream writer) throws IOException {
         writer.beginObject();
         writer.name("id").value(id);
-        writer.name("startedAt").value(DateUtils.toIso8601(startedAt));
+        writer.name("startedAt").value(startedAt);
         writer.name("user").value(user);
         writer.endObject();
     }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -377,9 +377,7 @@ private static void setupBugsnag(final Context context) {
                 @Override
                 public boolean onSession(@NonNull Session session) {
                     // opt-in
-                    boolean crash_reports = prefs.getBoolean("crash_reports", false);
-                    boolean vpn = ConnectionHelper.vpnActive(context);
-                    return (crash_reports && !vpn);
+                    return prefs.getBoolean("crash_reports", false);
                 }
             });
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -377,7 +377,9 @@ private static void setupBugsnag(final Context context) {
                 @Override
                 public boolean onSession(@NonNull Session session) {
                     // opt-in
-                    return prefs.getBoolean("crash_reports", false);
+                    boolean crash_reports = prefs.getBoolean("crash_reports", false);
+                    boolean vpn = ConnectionHelper.vpnActive(context);
+                    return (crash_reports && !vpn);
                 }
             });
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1856,6 +1856,7 @@ private static void attachNetworkInfo(Context context, long id, int sequence) th
             size += write(os, "Suitable=" + state.isSuitable() + "\r\n");
             size += write(os, "Unmetered=" + state.isUnmetered() + "\r\n");
             size += write(os, "Roaming=" + state.isRoaming() + "\r\n");
+            size += write(os, "Airplane=" + ConnectionHelper.airplaneMode(context) + "\r\n");
         }
 
         db.attachment().setDownloaded(attachment.id, size);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -278,7 +278,9 @@ private void suggest(String query) {
             }
 
             private int getSuggestions(String query, int id, int tab, String title, View view, MatrixCursor cursor) {
-                if (view instanceof ViewGroup) {
+                if (view == null || "debug".equals(view.getTag()))
+                    return id;
+                else if (view instanceof ViewGroup) {
                     ViewGroup group = (ViewGroup) view;
                     for (int i = 0; i <= group.getChildCount(); i++)
                         id = getSuggestions(query, id, tab, title, group.getChildAt(i), cursor);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -597,7 +597,7 @@ public void afterTextChanged(Editable text) {
                         for (QuoteSpan span : spans) {
                             int s = text.getSpanStart(span);
                             int e = text.getSpanEnd(span);
-                            int f = text.getSpanFlags(span) | Spanned.SPAN_PARAGRAPH;
+                            int f = text.getSpanFlags(span);
                             Log.i(span + " " + s + "..." + e + " added=" + added);
 
                             if (s > 0 && added - s > 0 && e - (added + 1) > 0 &&

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5276,7 +5276,7 @@ protected void onExecuted(Bundle args, EntityMessage draft) {
                 showDraft(draft);
 
             } else if (action == R.id.action_save) {
-                setFocus(args.getInt("focus"), args.getBoolean("ime"));
+                setFocus(args.getInt("focus"), args.getBoolean("ime") && false);
 
             } else if (action == R.id.action_check) {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -5626,6 +5626,7 @@ public void run() {
                         return;
 
                     imm.showSoftInput(target, InputMethodManager.SHOW_IMPLICIT);
+
                 } catch (Throwable ex) {
                     Log.e(ex);
                 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5637,6 +5637,9 @@ private void setBodyPadding() {
     }
 
     private int getAutoPos(int start, int end) {
+        if (!BuildConfig.DEBUG)
+            return -1;
+
         if (start > end || end == 0)
             return -1;
 

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -101,7 +101,8 @@ public void beforeTextChanged(CharSequence s, int start, int count, int after) {
 
             @Override
             public void onTextChanged(CharSequence s, int start, int before, int count) {
-                dirty = true;
+                if (count != s.length())
+                    dirty = true;
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -692,7 +692,7 @@ public void afterTextChanged(Editable text) {
                         for (ParagraphStyle p : ps) {
                             int start = text.getSpanStart(p);
                             int end = text.getSpanEnd(p);
-                            if (start == removed && end == removed + 1)
+                            if (start >= removed && end <= removed + 1)
                                 text.removeSpan(p);
                         }
 

File: app/src/main/java/eu/faircode/email/BulletSpanEx.java
Patch:
@@ -63,6 +63,6 @@ public int getLeadingMargin(boolean first) {
 
     @Override
     public void drawLeadingMargin(@NonNull Canvas canvas, @NonNull Paint paint, int x, int dir, int top, int baseline, int bottom, @NonNull CharSequence text, int start, int end, boolean first, @Nullable Layout layout) {
-        super.drawLeadingMargin(canvas, paint, x + indentWidth * level, dir, top, baseline, bottom, text, start, end, first, layout);
+        super.drawLeadingMargin(canvas, paint, x + indentWidth * level * dir, dir, top, baseline, bottom, text, start, end, first, layout);
     }
 }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2525,7 +2525,7 @@ else if (kar == ' ')
                     ssb.replace(i, i + 1, "_");
                 else if (kar == '\u00A0')
                     ssb.replace(i, i + 1, "•");
-                else if (!Character.isLetterOrDigit(kar))
+                else if (!Helper.isPrintableChar(kar))
                     ssb.replace(i, i + 1, "{" + Integer.toHexString(kar) + "}");
             }
 

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -303,7 +303,7 @@ public void run(AccountManagerFuture<Bundle> future) {
 
                                     Log.e(ex);
 
-                                    tvError.setText(Log.formatThrowable(ex));
+                                    tvError.setText(Log.formatThrowable(ex, false));
                                     grpError.setVisibility(View.VISIBLE);
 
                                     getMainHandler().post(new Runnable() {
@@ -525,7 +525,7 @@ protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
                     tvError.setText(ex.getMessage());
                 else
-                    tvError.setText(Log.formatThrowable(ex));
+                    tvError.setText(Log.formatThrowable(ex, false));
                 grpError.setVisibility(View.VISIBLE);
 
                 getMainHandler().post(new Runnable() {

File: app/src/main/java/eu/faircode/email/FragmentOAuth.java
Patch:
@@ -678,7 +678,7 @@ private void showError(Throwable ex) {
         if (ex instanceof IllegalArgumentException)
             tvError.setText(ex.getMessage());
         else
-            tvError.setText(Log.formatThrowable(ex));
+            tvError.setText(Log.formatThrowable(ex, false));
 
         grpError.setVisibility(View.VISIBLE);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -762,7 +762,8 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                 this, type, found, viewType,
                 compact, zoom, sort, ascending, filter_duplicates,
                 iProperties);
-        adapter.setStateRestorationPolicy(RecyclerView.Adapter.StateRestorationPolicy.PREVENT);
+        if (viewType == AdapterMessage.ViewType.THREAD)
+            adapter.setStateRestorationPolicy(RecyclerView.Adapter.StateRestorationPolicy.PREVENT);
         rvMessage.setAdapter(adapter);
 
         sbThread.setOnTouchListener(new View.OnTouchListener() {

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -411,10 +411,8 @@ static Boolean isSyntacticallyInvalid(Throwable ex) {
             return false;
         // 501 HELO requires valid address
         // 501 Syntactically invalid HELO argument(s)
-        // 451 4.7.0 Temporary server error. Please try again later. PRX4  [xxx.yyy.prod.outlook.com]
         String message = ex.getMessage().toLowerCase(Locale.ROOT);
-        return message.contains("prx4") ||
-                message.contains("syntactically invalid") ||
+        return message.contains("syntactically invalid") ||
                 message.contains("requires valid address");
     }
 

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -411,8 +411,10 @@ static Boolean isSyntacticallyInvalid(Throwable ex) {
             return false;
         // 501 HELO requires valid address
         // 501 Syntactically invalid HELO argument(s)
+        // 451 4.7.0 Temporary server error. Please try again later. PRX4  [xxx.yyy.prod.outlook.com]
         String message = ex.getMessage().toLowerCase(Locale.ROOT);
-        return message.contains("syntactically invalid") ||
+        return message.contains("prx4") ||
+                message.contains("syntactically invalid") ||
                 message.contains("requires valid address");
     }
 

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -398,7 +398,9 @@ private void connect(
                     connect(host, port, auth, user, authenticator, factory);
                 } catch (Exception ex1) {
                     Log.e(ex1);
-                    throw new AuthenticationFailedException(ex.getMessage(), ex1);
+                    throw new AuthenticationFailedException(
+                            context.getString(R.string.title_service_auth, ex.getMessage()),
+                            ex.getNextException());
                 }
             } else if (purpose == PURPOSE_CHECK) {
                 String msg = ex.getMessage();

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -511,7 +511,9 @@ void cleanup(Context context, boolean fetch) {
         if (EntityOperation.ATTACHMENT.equals(name))
             try {
                 JSONArray jargs = new JSONArray(args);
-                db.attachment().setProgress(jargs.getLong(0), null);
+                long id = jargs.getLong(0);
+                db.attachment().setProgress(id, null);
+                db.attachment().setError(id, error);
                 return;
             } catch (JSONException ex) {
                 Log.e(ex);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -228,6 +228,8 @@ private void bindTo(TupleAccountEx account) {
 
             tvMaxSize.setText(account.max_size == null ? null : Helper.humanReadableByteCount(account.max_size));
             tvMaxSize.setVisibility(settings && account.max_size != null && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
+            if (tvMaxSize.getVisibility() == View.VISIBLE)
+                tvQuota.setVisibility(View.VISIBLE);
 
             tvIdentity.setVisibility(account.identities > 0 || !settings ? View.GONE : View.VISIBLE);
             tvDrafts.setVisibility(account.drafts != null || !settings ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -455,6 +455,7 @@ private void onFlagged(TupleFolderEx folder) {
             criteria.in_message = false;
             criteria.in_notes = false;
             criteria.in_headers = false;
+            criteria.in_html = false;
             criteria.with_flagged = true;
             FragmentMessages.search(
                     context, owner, parentFragment.getParentFragmentManager(),

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2333,7 +2333,7 @@ protected ArrayList<MessageTarget> onExecute(Context context, Bundle args) {
 
                         EntityFolder targetFolder = db.folder().getFolder(tid);
                         if (targetFolder == null)
-                            return result;
+                            throw new IllegalArgumentException(context.getString(R.string.title_no_folder));
 
                         EntityAccount targetAccount = db.account().getAccount(targetFolder.account);
                         if (targetAccount == null)

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -454,6 +454,7 @@ private void onFlagged(TupleFolderEx folder) {
             criteria.in_keywords = false;
             criteria.in_message = false;
             criteria.in_notes = false;
+            criteria.in_headers = false;
             criteria.with_flagged = true;
             FragmentMessages.search(
                     context, owner, parentFragment.getParentFragmentManager(),

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -328,6 +328,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " OR (:keywords AND `keywords` LIKE :find COLLATE NOCASE)" + // no index
             " OR (:message AND `preview` LIKE :find COLLATE NOCASE)" + // no index
             " OR (:notes AND `notes` LIKE :find COLLATE NOCASE)" + // no index
+            " OR (:headers AND `headers` LIKE :find COLLATE NOCASE)" + // no index
             " OR (attachment.name LIKE :find COLLATE NOCASE)" + // no index
             " OR (attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
             " FROM message" +
@@ -350,7 +351,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " LIMIT :limit OFFSET :offset")
     List<TupleMatch> matchMessages(
             Long account, Long folder, String find,
-            boolean senders, boolean recipients, boolean subject, boolean keywords, boolean message, boolean notes,
+            boolean senders, boolean recipients, boolean subject, boolean keywords, boolean message, boolean notes, boolean headers,
             boolean unseen, boolean flagged, boolean hidden, boolean encrypted, boolean with_attachments, boolean with_notes,
             int type_count, String[] types,
             Integer size,

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -40,7 +40,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.core.app.AlarmManagerCompat;
 import androidx.core.app.NotificationCompat;
 import androidx.core.app.Person;
 import androidx.core.app.RemoteInput;
@@ -1750,7 +1749,7 @@ else if (imessages == null || imessages.length == 0) {
                     context, ServiceSend.PI_EXISTS, intent, PendingIntent.FLAG_UPDATE_CURRENT);
 
             AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-            AlarmManagerCompat.setAndAllowWhileIdle(am, AlarmManager.RTC_WAKEUP, next, piExists);
+            AlarmManagerCompatEx.setAndAllowWhileIdle(context, am, AlarmManager.RTC_WAKEUP, next, piExists);
             return;
         }
 

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -27,7 +27,6 @@
 import android.text.TextUtils;
 
 import androidx.annotation.NonNull;
-import androidx.core.app.AlarmManagerCompat;
 import androidx.preference.PreferenceManager;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
@@ -464,7 +463,7 @@ static void snooze(Context context, long id, Long wakeup) {
             am.cancel(pi);
         } else {
             Log.i("Set snooze id=" + id + " wakeup=" + new Date(wakeup));
-            AlarmManagerCompat.setAndAllowWhileIdle(am, AlarmManager.RTC_WAKEUP, wakeup, pi);
+            AlarmManagerCompatEx.setAndAllowWhileIdle(context, am, AlarmManager.RTC_WAKEUP, wakeup, pi);
         }
     }
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -35,7 +35,6 @@
 import android.text.TextUtils;
 
 import androidx.annotation.NonNull;
-import androidx.core.app.AlarmManagerCompat;
 import androidx.core.app.NotificationCompat;
 import androidx.core.content.ContextCompat;
 import androidx.lifecycle.Observer;
@@ -840,7 +839,7 @@ static void schedule(Context context, long delay) {
         long trigger = System.currentTimeMillis() + delay;
         AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
         am.cancel(pi);
-        AlarmManagerCompat.setAndAllowWhileIdle(am, AlarmManager.RTC_WAKEUP, trigger, pi);
+        AlarmManagerCompatEx.setAndAllowWhileIdle(context, am, AlarmManager.RTC_WAKEUP, trigger, pi);
     }
 
     static void watchdog(Context context) {

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2570,11 +2570,11 @@ else if (!Character.isLetterOrDigit(kar))
                     spans[i] instanceof BulletSpan ||
                     spans[i] instanceof NumberSpan) {
                 if (spans[i] instanceof AlignmentSpan &&
-                        !(e > 1 && ssb.charAt(e - 1) == '\n') &&
+                        !(e > 0 && ssb.charAt(e - 1) == '\n') &&
                         e < ssb.length() && ssb.charAt(e) == '\n')
                     e++;
-                if (s > 1 && ssb.charAt(s - 1) == '\n' &&
-                        e > 1 && ssb.charAt(e - 1) == '\n')
+                if (s > 0 && ssb.charAt(s - 1) == '\n' &&
+                        e > 0 && ssb.charAt(e - 1) == '\n')
                     f |= Spanned.SPAN_PARAGRAPH;
             }
             ssb.setSpan(spans[i], s, e, f);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -147,6 +147,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
             "sync_kept",
             "sync_folders",
             "sync_shared_folders",
+            "download_headers", "download_eml",
             "prefer_ip4", "standalone_vpn", "tcp_keep_alive", "ssl_harden", // force reconnect
             "experiments", "debug", "protocol", // force reconnect
             "auth_plain", "auth_login", "auth_ntlm", "auth_sasl" // force reconnect

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -387,6 +387,7 @@ public boolean onError(@NonNull Event event) {
                     boolean should = shouldNotify(ex);
 
                     if (should) {
+                        event.addMetadata("extra", "pid", Integer.toString(android.os.Process.myPid()));
                         event.addMetadata("extra", "thread", Thread.currentThread().getName() + ":" + Thread.currentThread().getId());
                         event.addMetadata("extra", "memory_free", getFreeMemMb());
                         event.addMetadata("extra", "memory_available", getAvailableMb());

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4507,7 +4507,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
                 Intent reply = new Intent(context, ServiceUI.class)
                         .setAction("reply:" + message.id)
                         .putExtra("group", group);
-                PendingIntent piReply = PendingIntentCompat.getService(
+                PendingIntent piReply = PendingIntent.getService(
                         context, ServiceUI.PI_REPLY_DIRECT, reply, PendingIntent.FLAG_UPDATE_CURRENT);
                 NotificationCompat.Action.Builder actionReply = new NotificationCompat.Action.Builder(
                         R.drawable.twotone_reply_24,

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -54,7 +54,7 @@ public class EntityAccount extends EntityOrder implements Serializable {
     // https://tools.ietf.org/html/rfc2177
     static final int DEFAULT_KEEP_ALIVE_INTERVAL = 15; // minutes
     static final int DEFAULT_POLL_INTERVAL = 15; // minutes
-    static final int DEFAULT_MAX_MESSAGES = 100; // POP3
+    static final int DEFAULT_MAX_MESSAGES = 250; // POP3
 
     static final int TYPE_IMAP = 0;
     static final int TYPE_POP = 1;

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -557,7 +557,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_execute_rules, order++, R.string.title_execute_rules);
             }
 
-            if (folder.accountProtocol == EntityAccount.TYPE_POP || debug)
+            if (folder.accountProtocol == EntityAccount.TYPE_POP || debug || BuildConfig.DEBUG)
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_export_messages, order++, R.string.title_export_messages);
 
             int childs = 0;

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -1227,6 +1227,8 @@ else if ("log".equals(extension))
                 return "text/plain";
             else if ("ovpn".equals(extension))
                 return "application/x-openvpn-profile";
+            else if ("mbox".equals(extension))
+                return "application/mbox"; // https://tools.ietf.org/html/rfc4155
             else
                 return "application/octet-stream";
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2498,8 +2498,10 @@ private void getMessageParts(Part part, MessageParts parts, Integer encrypt) thr
                 ContentType ct = new ContentType(part.getContentType());
                 if ("v1".equals(ct.getParameter("protected-headers"))) {
                     String[] subject = part.getHeader("subject");
-                    if (subject != null && subject.length != 0)
+                    if (subject != null && subject.length != 0) {
+                        subject[0] = subject[0].replaceAll("\\?=[\\r\\n\\t ]+=\\?", "\\?==\\?");
                         parts.protected_subject = decodeMime(subject[0]);
+                    }
                 }
             } catch (Throwable ex) {
                 Log.e(ex);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -183,7 +183,8 @@ public void onClick(View v) {
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_setup_outlook, order++, R.string.title_setup_outlook);
 
                 for (EmailProvider provider : EmailProvider.loadProfiles(getContext()))
-                    if (provider.oauth != null && provider.oauth.enabled)
+                    if (provider.oauth != null &&
+                            (provider.oauth.enabled || BuildConfig.DEBUG))
                         popupMenu.getMenu()
                                 .add(Menu.NONE, -1, order++, getString(R.string.title_setup_oauth, provider.name))
                                 .setIntent(new Intent(ActivitySetup.ACTION_QUICK_OAUTH)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4799,7 +4799,7 @@ public void run() {
                         return draft;
                     }
 
-                    if (!shouldEncrypt)
+                    if (!shouldEncrypt && !autosave)
                         for (EntityAttachment attachment : attachments)
                             if (attachment.isEncryption())
                                 db.attachment().deleteAttachment(attachment.id);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -155,7 +155,7 @@ public class Helper {
     static final String PGP_BEGIN_MESSAGE = "-----BEGIN PGP MESSAGE-----";
     static final String PGP_END_MESSAGE = "-----END PGP MESSAGE-----";
 
-    static final String FAQ_URI = "https://email.faircode.eu/faq/#top";
+    static final String FAQ_URI = "https://email.faircode.eu/faq/";
     static final String XDA_URI = "https://forum.xda-developers.com/showthread.php?t=3824168";
     static final String SUPPORT_URI = "https://contact.faircode.eu/?product=fairemailsupport";
     static final String TEST_URI = "https://play.google.com/apps/testing/" + BuildConfig.APPLICATION_ID;
@@ -700,7 +700,7 @@ public void onServiceDisconnected(ComponentName name) {
 
     static void viewFAQ(Context context, int question) {
         if (question == 0)
-            view(context, Uri.parse(FAQ_URI), false);
+            view(context, Uri.parse(FAQ_URI + "#top"), false);
         else
             view(context, Uri.parse(FAQ_URI + "#user-content-faq" + question), false);
     }

File: app/src/main/java/eu/faircode/email/FragmentDialogSearch.java
Patch:
@@ -296,7 +296,7 @@ public void onClick(DialogInterface dialog, int which) {
                             prefs.edit().putString("last_search", criteria.query).apply();
 
                         criteria.fts = cbSearchIndex.isChecked();
-                        if (!fts) {
+                        if (!criteria.fts) {
                             criteria.in_senders = cbSenders.isChecked();
                             criteria.in_recipients = cbRecipients.isChecked();
                             criteria.in_subject = cbSubject.isChecked();

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -562,7 +562,7 @@ public void run() {
                 });
             }
 
-            private Runnable backup = new Runnable() {
+            private final Runnable backup = new Runnable() {
                 @Override
                 public void run() {
                     queue.submit(new Runnable() {
@@ -595,7 +595,7 @@ public void onChanged(Integer count) {
         Core.NotificationData notificationData = new Core.NotificationData(this);
 
         db.message().liveUnseenNotify().observe(cowner, new Observer<List<TupleMessageEx>>() {
-            private ExecutorService executor =
+            private final ExecutorService executor =
                     Helper.getBackgroundExecutor(1, "notify");
 
             @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -690,7 +690,7 @@ public void onBackPressed() {
                 super.onBackPressed();
             else if (!backHandled()) {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ActivityView.this);
-                boolean double_back = prefs.getBoolean("double_back", true);
+                boolean double_back = prefs.getBoolean("double_back", false);
                 if (searching || !double_back)
                     super.onBackPressed();
                 else {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -461,6 +461,9 @@ else if (version < 1439) {
         } else if (version < 1535) {
             editor.remove("identities_asked");
             editor.remove("identities_primary_hint");
+        } else if (version < 1539) {
+            if (!prefs.contains("double_back"))
+                editor.putBoolean("double_back", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -436,7 +436,7 @@ private void setOptions() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
         swSyncOnlaunch.setChecked(prefs.getBoolean("sync_on_launch", false));
-        swDoubleBack.setChecked(prefs.getBoolean("double_back", true));
+        swDoubleBack.setChecked(prefs.getBoolean("double_back", false));
         swConversationActions.setChecked(prefs.getBoolean("conversation_actions", true));
         swConversationActionsReplies.setChecked(prefs.getBoolean("conversation_actions_replies", true));
         swConversationActionsReplies.setEnabled(swConversationActions.isChecked());

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -715,7 +715,7 @@ static Intent getIntentIssue(Context context) {
                     (BuildConfig.DEBUG ? "d" : "") +
                     (ActivityBilling.isPro(context) ? "+" : "");
             Intent intent = new Intent(Intent.ACTION_SEND);
-            intent.setPackage(BuildConfig.APPLICATION_ID);
+            //intent.setPackage(BuildConfig.APPLICATION_ID);
             intent.setType("text/plain");
             try {
                 intent.putExtra(Intent.EXTRA_EMAIL, new String[]{Log.myAddress().getAddress()});

File: app/src/main/java/eu/faircode/email/ViewTextDelayed.java
Patch:
@@ -49,7 +49,7 @@ public void setVisibility(int visibility) {
         this.visibility = visibility;
 
         if (visibility == VISIBLE) {
-            if (delaying)
+            if (delaying || super.getVisibility() == VISIBLE)
                 return;
             delaying = true;
             super.setVisibility(INVISIBLE);

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -278,7 +278,7 @@ protected Void onExecute(Context context, Bundle args) {
                             try {
                                 db.beginTransaction();
 
-                                if (identity.primary)
+                                if (primary)
                                     db.identity().resetPrimary(account);
 
                                 db.identity().setIdentityPrimary(id, primary);

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -376,6 +376,7 @@ static boolean isIoError(Throwable ex) {
                     ex instanceof IOException ||
                     ex instanceof ConnectionException ||
                     ex instanceof AccountsException ||
+                    ex instanceof InterruptedException ||
                     "EOF on socket".equals(ex.getMessage()) ||
                     "failed to connect".equals(ex.getMessage()))
                 return true;

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -158,7 +158,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("conversation_actions", checked).apply();
-                swConversationActionsReplies.setEnabled(checked);
+                swConversationActionsReplies.setEnabled(checked && Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q);
             }
         });
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -421,6 +421,9 @@ else if (version < 1439) {
         } else if (version < 1525) {
             if (!prefs.contains("download"))
                 editor.putInt("download", 512 * 1024);
+        } else if (version < 1533) {
+            if (!prefs.contains("biometrics_notify"))
+                editor.putBoolean("biometrics_notify", false);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3813,7 +3813,7 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Notif
         boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
         boolean biometrics = prefs.getBoolean("biometrics", false);
         String pin = prefs.getString("pin", null);
-        boolean biometric_notify = prefs.getBoolean("biometrics_notify", false);
+        boolean biometric_notify = prefs.getBoolean("biometrics_notify", true);
         boolean pro = ActivityBilling.isPro(context);
 
         boolean redacted = ((biometrics || !TextUtils.isEmpty(pin)) && !biometric_notify);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -560,7 +560,7 @@ private void setOptions() {
         swNotifyPreviewOnly.setChecked(prefs.getBoolean("notify_preview_only", false));
         swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", false));
         swMessagingStyle.setChecked(prefs.getBoolean("notify_messaging", false));
-        swBiometricsNotify.setChecked(prefs.getBoolean("biometrics_notify", false));
+        swBiometricsNotify.setChecked(prefs.getBoolean("biometrics_notify", true));
         swAlertOnce.setChecked(!prefs.getBoolean("alert_once", true));
 
         enableOptions();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1031,7 +1031,7 @@ else if (!newuid.equals(found)) {
                     Log.e(ex);
                 }
         } else {
-            // Lookup added messages
+            // Lookup added message
             int count = 0;
             Long found = newuid;
             while (found == null && count++ < FIND_RETRY_COUNT) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7516,8 +7516,7 @@ public Void call() throws Exception {
                                 return null;
                             }
                         }));
-                    } else
-                        img.removeAttr("src");
+                    }
                 }
 
                 for (Future<Void> future : futures)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1047,7 +1047,8 @@ else if (!newuid.equals(found)) {
                 db.beginTransaction();
 
                 if (found == null) {
-                    db.message().setMessageError(message.id, "Message not found in target folder");
+                    db.message().setMessageError(message.id,
+                            "Message not found in target folder " + account.name + "/" + folder.name);
                     db.message().setMessageUiHide(message.id, false);
                 } else {
                     // Mark source read

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -418,6 +418,9 @@ else if (version < 1439) {
         } else if (version < 1524) {
             if (BuildConfig.PLAY_STORE_RELEASE)
                 editor.remove("experiments");
+        } else if (version < 1525) {
+            if (!prefs.contains("download"))
+                editor.putInt("download", 512 * 1024);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -116,7 +116,7 @@ public class MessageHelper {
     private static File cacheDir = null;
 
     static final int SMALL_MESSAGE_SIZE = 192 * 1024; // bytes
-    static final int DEFAULT_DOWNLOAD_SIZE = 512 * 1024; // bytes
+    static final int DEFAULT_DOWNLOAD_SIZE = 4 * 1024 * 1024; // bytes
     static final String HEADER_CORRELATION_ID = "X-Correlation-ID";
 
     private static final int MAX_MESSAGE_SIZE = 10 * 1024 * 1024; // bytes

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -252,7 +252,7 @@ private void suggest(String query) {
                         views = new View[TAB_PAGES.length];
                         LayoutInflater inflater = LayoutInflater.from(searchView.getContext());
                         for (int tab = 0; tab < TAB_PAGES.length; tab++) {
-                            titles[tab] = (String) adapter.getPageTitle(tab);
+                            titles[tab] = adapter.getPageTitle(tab).toString();
                             views[tab] = inflater.inflate(TAB_PAGES[tab], null);
                         }
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6263,7 +6263,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
                                         db.message().setMessageStored(message.id, new Date().getTime());
                                         db.message().setMessageFts(message.id, false);
 
-                                        if (BuildConfig.DEBUG && false) {
+                                        if (BuildConfig.DEBUG) {
                                             File raw = message.getRawFile(context);
                                             Helper.copy(plain, raw);
                                             db.message().setMessageRaw(message.id, true);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1781,6 +1781,9 @@ private Spanned formatAddresses(Address[] addresses, boolean full) {
                 return ssb;
 
             for (int i = 0; i < addresses.length; i++) {
+                if (i > 0)
+                    ssb.append(", ");
+
                 if (addresses[i] instanceof InternetAddress) {
                     InternetAddress address = (InternetAddress) addresses[i];
                     String email = address.getAddress();

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -59,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {
             long start = new Date().getTime();
             Log.i("Main boot");
 
-            final SimpleTask boot = new SimpleTask<Boolean>() {
+            final SimpleTask<Boolean> boot = new SimpleTask<Boolean>() {
                 @Override
                 protected void onPreExecute(Bundle args) {
                     getMainHandler().postDelayed(new Runnable() {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2870,7 +2870,7 @@ else if (response.isNO() || response.isBAD())
             }
 
             db.folder().setFolderLastSync(folder.id, new Date().getTime());
-            db.folder().setFolderError(folder.id, null);
+            //db.folder().setFolderError(folder.id, null);
 
             stats.total = (SystemClock.elapsedRealtime() - search);
 

File: app/src/main/java/eu/faircode/email/WorkerFts.java
Patch:
@@ -62,6 +62,8 @@ public Result doWork() {
             int indexed = 0;
             List<Long> ids = new ArrayList<>(INDEX_BATCH_SIZE);
             DB db = DB.getInstance(context);
+            db.checkpoint(context);
+
             SQLiteDatabase sdb = FtsDbHelper.getInstance(context);
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             try (Cursor cursor = db.message().getMessageFts()) {

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -423,7 +423,7 @@ static boolean vpnActive(Context context) {
     }
 
     static boolean airplaneMode(Context context) {
-        return Settings.System.getInt(context.getContentResolver(),
+        return Settings.Global.getInt(context.getContentResolver(),
                 Settings.Global.AIRPLANE_MODE_ON, 0) != 0;
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -377,6 +377,9 @@ private void showConnectionType() {
                     if (lp != null)
                         sb.append(lp).append("\r\n\r\n");
                 }
+
+                sb.append("Airplane mode=")
+                        .append(ConnectionHelper.airplaneMode(context)).append("\r\n\r\n");
             } catch (Throwable ex) {
                 Log.e(ex);
             }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -859,7 +859,7 @@ public boolean equals(@Nullable Object obj) {
                         this.with_hidden == other.with_hidden &&
                         this.with_encrypted == other.with_encrypted &&
                         this.with_attachments == other.with_attachments &&
-                        Objects.equals(this.with_types, other.with_types) &&
+                        Arrays.equals(this.with_types, other.with_types) &&
                         Objects.equals(this.with_size, other.with_size) &&
                         Objects.equals(this.after, other.after) &&
                         Objects.equals(this.before, other.before));

File: app/src/main/java/eu/faircode/email/FragmentDialogSearch.java
Patch:
@@ -282,7 +282,8 @@ public void onClick(DialogInterface dialog, int which) {
                         else
                             prefs.edit().putString("last_search", criteria.query).apply();
 
-                        if (!cbSearchIndex.isChecked()) {
+                        criteria.fts = cbSearchIndex.isChecked();
+                        if (!fts) {
                             criteria.in_senders = cbSenders.isChecked();
                             criteria.in_recipients = cbRecipients.isChecked();
                             criteria.in_subject = cbSubject.isChecked();

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -993,7 +993,8 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                         if ("secure".equals(key) ||
                                 "shortcuts".equals(key) ||
                                 "language".equals(key) ||
-                                "query_threads".equals(key))
+                                "query_threads".equals(key) ||
+                                "wal".equals(key))
                             continue;
 
                         if (key != null && key.startsWith("widget."))

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -196,6 +196,7 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin
             case "shortcuts": // misc
             case "language": // misc
             case "query_threads": // misc
+            case "wal": // misc
                 // Should be excluded for import
                 restart();
                 break;

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -266,14 +266,15 @@ public void log(String message) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         int threads = prefs.getInt("query_threads", 4); // AndroidX default thread count: 4
-        Log.i("Query threads=" + threads);
+        boolean wal = prefs.getBoolean("wal", true);
+        Log.i("DB query threads=" + threads + " wal=" + wal);
         ExecutorService executor = Helper.getBackgroundExecutor(threads, "query");
 
         return Room
                 .databaseBuilder(context, DB.class, DB_NAME)
                 .openHelperFactory(new RequerySQLiteOpenHelperFactory())
                 .setQueryExecutor(executor)
-                .setJournalMode(JournalMode.WRITE_AHEAD_LOGGING) // using the latest sqlite
+                .setJournalMode(wal ? JournalMode.WRITE_AHEAD_LOGGING : JournalMode.TRUNCATE) // using the latest sqlite
                 .addCallback(new Callback() {
                     @Override
                     public void onOpen(@NonNull SupportSQLiteDatabase db) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -331,13 +331,15 @@ public void onClick(View v) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("badge", checked).apply();
+                ServiceSynchronize.restart(compoundButton.getContext());
             }
         });
 
         swUnseenIgnored.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("unseen_ignored", checked).apply();
+                ServiceSynchronize.restart(compoundButton.getContext());
             }
         });
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -488,6 +488,7 @@ List<Long> getMessageUnseen(
             " WHERE (:account IS NULL OR account.id = :account)" +
             " AND account.`synchronize`" +
             " AND folder.notify" +
+            " AND (account.created IS NULL OR message.received > account.created OR message.sent > account.created)" +
             " AND message.notifying <> " + EntityMessage.NOTIFYING_IGNORE +
             " AND NOT (message.ui_seen OR message.ui_hide)" +
             " GROUP BY account.id" +
@@ -501,6 +502,7 @@ List<Long> getMessageUnseen(
             " WHERE (:account IS NULL OR account.id = :account)" +
             " AND account.`synchronize`" +
             " AND folder.notify" +
+            " AND (account.created IS NULL OR message.received > account.created OR message.sent > account.created)" +
             " AND message.notifying <> " + EntityMessage.NOTIFYING_IGNORE +
             " AND NOT (message.ui_seen OR message.ui_hide)")
     TupleMessageStats getWidgetUnseen(Long account);

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -257,7 +257,7 @@ static void cleanup(Context context, boolean manual) {
             if (images != null)
                 for (File file : images)
                     if (manual || file.lastModified() + KEEP_FILES_DURATION < now) {
-                        long id = Long.parseLong(file.getName().split("_")[0]);
+                        long id = Long.parseLong(file.getName().split("[_\\.]")[0]);
                         EntityMessage message = db.message().getMessage(id);
                         if (manual || message == null ||
                                 file.lastModified() + KEEP_IMAGES_DURATION < now) {

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -196,6 +196,9 @@ public interface DaoAccount {
     @Query("UPDATE account SET `primary` = 0 WHERE NOT (`primary` IS 0)")
     void resetPrimary();
 
+    @Query("UPDATE account SET `created` = 0 WHERE id = :id")
+    void resetCreated(long id);
+
     @Query("UPDATE account SET tbd = 1 WHERE id = :id AND NOT (tbd IS 1)")
     int setAccountTbd(long id);
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -390,7 +390,7 @@ public void onClick(View v) {
             public void onCheckedChanged(RadioGroup group, int id) {
                 if (id == R.id.radio_starttls)
                     etPort.setHint("587");
-                if (id == R.id.radio_none)
+                else if (id == R.id.radio_none)
                     etPort.setHint("25");
                 else
                     etPort.setHint("465");

File: app/src/main/java/eu/faircode/email/FragmentDialogSearch.java
Patch:
@@ -350,7 +350,7 @@ protected void onExecuted(Bundle args, EntityFolder archive) {
 
                                 @Override
                                 protected void onException(Bundle args, Throwable ex) {
-                                    Log.unexpectedError(getParentFragmentManager(), ex);
+                                    Log.e(ex);
                                 }
                             }.execute(getContext(), getViewLifecycleOwner(), getArguments(), "search:raw");
                         else

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1425,8 +1425,8 @@ private static StringBuilder getAppInfo(Context context) {
         ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
         ActivityManager.MemoryInfo mi = new ActivityManager.MemoryInfo();
         am.getMemoryInfo(mi);
-        sb.append(String.format("Memory class: %d MB/%s\r\n",
-                am.getMemoryClass(), Helper.humanReadableByteCount(mi.totalMem)));
+        sb.append(String.format("Memory class: %d/%d MB/%s\r\n",
+                am.getMemoryClass(), am.getLargeMemoryClass(), Helper.humanReadableByteCount(mi.totalMem)));
 
         sb.append(String.format("Storage space: %s/%s App: %s\r\n",
                 Helper.humanReadableByteCount(Helper.getAvailableStorageSpace()),

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -893,7 +893,7 @@ private void setOptions() {
         swPortrait2.setChecked(prefs.getBoolean("portrait2", false));
         swLandscape.setChecked(prefs.getBoolean("landscape", true));
         swLandscape.setEnabled(normal);
-        swLandscape3.setChecked(prefs.getBoolean("landscape3", false));
+        swLandscape3.setChecked(prefs.getBoolean("landscape3", true));
         swLandscape3.setEnabled(normal);
 
         swThreading.setChecked(prefs.getBoolean("threading", true));

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -1076,6 +1076,7 @@ else if (ex instanceof IOException && ex.getCause() instanceof IllegalBlockSizeE
                 else {
                     boolean expected =
                             (ex instanceof IllegalArgumentException ||
+                                    ex instanceof IOException ||
                                     ex instanceof FileNotFoundException ||
                                     ex instanceof JSONException ||
                                     ex instanceof SecurityException);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -923,7 +923,7 @@ public boolean onLongClick(View v) {
                         getContext(),
                         getViewLifecycleOwner(),
                         getParentFragmentManager(),
-                        fabCompose, -1L);
+                        fabCompose, account);
                 return true;
             }
         });

File: app/src/main/java/eu/faircode/email/DrawerLayoutEx.java
Patch:
@@ -51,7 +51,7 @@ public DrawerLayoutEx(@NonNull Context context, @Nullable AttributeSet attrs, in
     void setup(Configuration config, View drawerContainer, ActionBarDrawerToggle drawerToggle) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         boolean normal = config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL);
-        boolean landscape3 = prefs.getBoolean("landscape3", false);
+        boolean landscape3 = prefs.getBoolean("landscape3", true);
 
         if (normal && landscape3 &&
                 config.orientation == Configuration.ORIENTATION_LANDSCAPE) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1028,7 +1028,7 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
         if (folder.id.equals(target.id))
             throw new IllegalArgumentException("self");
         if (!target.selectable)
-            throw new IllegalArgumentException("not selectable");
+            throw new IllegalArgumentException("not selectable type=" + target.type);
 
         // De-classify
         for (EntityMessage message : messages)

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1305,8 +1305,8 @@ static EntityMessage getDebugInfo(Context context, int title, Throwable ex, Stri
             attachLogcat(context, draft.id, 6);
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
                 attachNotificationInfo(context, draft.id, 7);
-            if (MessageClassifier.isEnabled(context))
-                attachClassifierData(context, draft.id, 8);
+            //if (MessageClassifier.isEnabled(context))
+            //    attachClassifierData(context, draft.id, 8);
 
             EntityOperation.queue(context, draft, EntityOperation.ADD);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3026,7 +3026,7 @@ else if (viewType == ViewType.THREAD) {
                             .putExtra("filter_archive", !EntityFolder.ARCHIVE.equals(message.folderType))
                             .putExtra("found", viewType == ViewType.SEARCH);
 
-                    boolean doubletap = prefs.getBoolean("doubletap", false);
+                    boolean doubletap = prefs.getBoolean("doubletap", true);
 
                     if (!doubletap ||
                             message.folderReadOnly ||

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -447,7 +447,7 @@ private void setOptions() {
         swQuickFilter.setChecked(prefs.getBoolean("quick_filter", false));
         swQuickScroll.setChecked(prefs.getBoolean("quick_scroll", true));
 
-        swDoubleTap.setChecked(prefs.getBoolean("doubletap", false));
+        swDoubleTap.setChecked(prefs.getBoolean("doubletap", true));
         swSwipeNav.setChecked(prefs.getBoolean("swipenav", true));
         swVolumeNav.setChecked(prefs.getBoolean("volumenav", false));
         swReversed.setChecked(prefs.getBoolean("reversed", false));

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -117,7 +117,7 @@ public class MessageHelper {
     private static File cacheDir = null;
 
     static final int SMALL_MESSAGE_SIZE = 192 * 1024; // bytes
-    static final int DEFAULT_DOWNLOAD_SIZE = 256 * 1024; // bytes
+    static final int DEFAULT_DOWNLOAD_SIZE = 512 * 1024; // bytes
     static final String HEADER_CORRELATION_ID = "X-Correlation-ID";
 
     private static final int MAX_MESSAGE_SIZE = 10 * 1024 * 1024; // bytes

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -5551,6 +5551,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             boolean image_dialog = prefs.getBoolean("image_dialog", true);
 
             final ViewGroup dview = (ViewGroup) LayoutInflater.from(getContext()).inflate(R.layout.dialog_add_image, null);
+            final ImageView ivType = dview.findViewById(R.id.ivType);
             final RadioGroup rgAction = dview.findViewById(R.id.rgAction);
             final CheckBox cbResize = dview.findViewById(R.id.cbResize);
             final Spinner spResize = dview.findViewById(R.id.spResize);
@@ -5559,6 +5560,8 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final CheckBox cbNotAgain = dview.findViewById(R.id.cbNotAgain);
             final TextView tvNotAgain = dview.findViewById(R.id.tvNotAgain);
 
+            ivType.setImageResource(title == R.string.title_attachment_photo
+                    ? R.drawable.twotone_photo_camera_24 : R.drawable.twotone_image_24);
             rgAction.check(add_inline ? R.id.rbInline : R.id.rbAttach);
             cbResize.setChecked(resize_images);
             spResize.setEnabled(resize_images);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2432,7 +2432,8 @@ protected void onExecuted(Bundle args, ReplyData data) {
                 popupMenu.getMenu().findItem(R.id.menu_reply_list).setVisible(message.list_post != null);
                 popupMenu.getMenu().findItem(R.id.menu_reply_receipt).setVisible(message.receipt_to != null);
                 popupMenu.getMenu().findItem(R.id.menu_reply_address_unknown)
-                        .setVisible(experiments && message.return_path != null && message.return_path.length > 0);
+                        .setVisible(experiments && (BuildConfig.DEBUG ||
+                                (message.return_path != null && message.return_path.length > 0)));
                 popupMenu.getMenu().findItem(R.id.menu_new_message).setVisible(to != null && to.length > 0);
                 popupMenu.getMenu().findItem(R.id.menu_reply_answer).setVisible(answers != 0 || !ActivityBilling.isPro(context));
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -548,7 +548,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
             }
 
             if (EntityFolder.INBOX.equals(folder.type) && folder.accountProtocol == EntityAccount.TYPE_POP)
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_edit_rules, 11, R.string.title_edit_rules);
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_edit_rules, order++, R.string.title_edit_rules);
 
             int childs = 0;
             if (folder.child_refs != null)
@@ -565,11 +565,11 @@ else if (EntityFolder.JUNK.equals(folder.type))
             }
 
             if (folder.account != null && folder.accountProtocol == EntityAccount.TYPE_IMAP)
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_create_sub_folder, 16, R.string.title_create_sub_folder)
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_create_sub_folder, order++, R.string.title_create_sub_folder)
                         .setEnabled(folder.inferiors);
 
             if (!folder.selectable && debug)
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_delete, 17, R.string.title_delete)
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_delete, order++, R.string.title_delete)
                         .setEnabled(folder.inferiors);
 
             popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3741,7 +3741,8 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                 CheckBox cbDark = dview.findViewById(R.id.cbDark);
                 CheckBox cbAlwaysImages = dview.findViewById(R.id.cbAlwaysImages);
 
-                cbDark.setChecked(prefs.getBoolean("html_dark", true));
+                boolean confirm_html = prefs.getBoolean("confirm_html", true);
+                cbDark.setChecked(prefs.getBoolean("html_dark", confirm_html));
                 cbAlwaysImages.setChecked(prefs.getBoolean("html_always_images", false));
 
                 cbDark.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -49,7 +49,8 @@ public WebViewEx(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean overview_mode = prefs.getBoolean("overview_mode", false);
         boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
-        boolean html_dark = prefs.getBoolean("html_dark", true);
+        boolean confirm_html = prefs.getBoolean("confirm_html", true);
+        boolean html_dark = prefs.getBoolean("html_dark", confirm_html);
 
         setVerticalScrollBarEnabled(false);
         setHorizontalScrollBarEnabled(false);

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -445,7 +445,7 @@ public void startActivity(Intent intent) {
             super.startActivity(intent);
         } catch (ActivityNotFoundException ex) {
             Log.w(ex);
-            ToastEx.makeText(this, getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+            Helper.reportNoViewer(this, intent);
         } catch (Throwable ex) {
             Log.e(ex);
             ToastEx.makeText(this, Log.formatThrowable(ex), Toast.LENGTH_LONG).show();
@@ -463,7 +463,7 @@ public void startActivityForResult(Intent intent, int requestCode) {
             if (Helper.isTnef(intent.getType(), null))
                 Helper.viewFAQ(this, 155);
             else
-                ToastEx.makeText(this, getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+                Helper.reportNoViewer(this, intent);
         } catch (Throwable ex) {
             Log.e(ex);
             ToastEx.makeText(this, Log.formatThrowable(ex), Toast.LENGTH_LONG).show();

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -43,7 +43,6 @@
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.PopupMenu;
@@ -427,7 +426,7 @@ private void onActionEditChannel() {
                         context.startActivity(intent);
                     } catch (ActivityNotFoundException ex) {
                         Log.w(ex);
-                        ToastEx.makeText(context, context.getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+                        Helper.reportNoViewer(context, intent);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -45,7 +45,6 @@
 import android.widget.EditText;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -289,7 +288,7 @@ private void onActionShare() {
                         context.startActivity(share);
                     } catch (ActivityNotFoundException ex) {
                         Log.w(ex);
-                        ToastEx.makeText(context, context.getString(R.string.title_no_viewer, share), Toast.LENGTH_LONG).show();
+                        Helper.reportNoViewer(context, share);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -49,7 +49,6 @@
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -863,7 +862,7 @@ private void onActionEditChannel() {
                         context.startActivity(intent);
                     } catch (ActivityNotFoundException ex) {
                         Log.w(ex);
-                        ToastEx.makeText(context, context.getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+                        Helper.reportNoViewer(context, intent);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -143,7 +143,7 @@ public void startActivity(Intent intent) {
             super.startActivity(intent);
         } catch (ActivityNotFoundException ex) {
             Log.w(ex);
-            ToastEx.makeText(getContext(), getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+            Helper.reportNoViewer(getContext(), intent);
         } catch (Throwable ex) {
             Log.e(ex);
             ToastEx.makeText(getContext(), Log.formatThrowable(ex), Toast.LENGTH_LONG).show();
@@ -158,7 +158,7 @@ public void startActivityForResult(Intent intent, int requestCode) {
             super.startActivityForResult(intent, requestCode);
         } catch (ActivityNotFoundException ex) {
             Log.w(ex);
-            ToastEx.makeText(getContext(), getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+            Helper.reportNoViewer(getContext(), intent);
         } catch (Throwable ex) {
             Log.e(ex);
             ToastEx.makeText(getContext(), Log.formatThrowable(ex), Toast.LENGTH_LONG).show();

File: app/src/main/java/eu/faircode/email/FragmentDialogBase.java
Patch:
@@ -23,7 +23,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -208,7 +207,7 @@ public void startActivity(Intent intent) {
             super.startActivity(intent);
         } catch (ActivityNotFoundException ex) {
             Log.w(ex);
-            ToastEx.makeText(getContext(), getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+            Helper.reportNoViewer(getContext(), intent);
         }
     }
 
@@ -218,7 +217,7 @@ public void startActivityForResult(Intent intent, int requestCode) {
             super.startActivityForResult(intent, requestCode);
         } catch (ActivityNotFoundException ex) {
             Log.w(ex);
-            ToastEx.makeText(getContext(), getString(R.string.title_no_viewer, intent), Toast.LENGTH_LONG).show();
+            Helper.reportNoViewer(getContext(), intent);
         }
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -440,7 +440,7 @@ public void onClick(View v) {
                     getContext().startActivity(app);
                 } catch (Throwable ex) {
                     Log.w(ex);
-                    ToastEx.makeText(getContext(), getString(R.string.title_no_viewer, app), Toast.LENGTH_LONG).show();
+                    Helper.reportNoViewer(getContext(), app);
                 }
             }
         });

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1202,8 +1202,6 @@ private static void onFetch(Context context, JSONArray jargs, EntityFolder folde
             throw new IllegalArgumentException("account missing");
 
         try {
-            db.folder().setFolderSyncState(folder.id, "syncing");
-
             if (removed) {
                 db.message().deleteMessage(folder.id, uid);
                 throw new MessageRemovedException("removed uid=" + uid);
@@ -1276,7 +1274,6 @@ private static void onFetch(Context context, JSONArray jargs, EntityFolder folde
 
             db.message().deleteMessage(folder.id, uid);
         } finally {
-            db.folder().setFolderSyncState(folder.id, null);
             int count = MessageHelper.getMessageCount(ifolder);
             db.folder().setFolderTotal(folder.id, count < 0 ? null : count);
         }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1182,7 +1182,7 @@ public void folderChanged(FolderEvent e) {
                                 String name = e.getFolder().getFullName();
                                 EntityLog.log(ServiceSynchronize.this, "Folder changed=" + name);
                                 EntityFolder folder = db.folder().getFolderByName(account.id, name);
-                                if (folder != null && folder.selectable && folder.synchronize)
+                                if (folder != null && folder.selectable)
                                     EntityOperation.sync(ServiceSynchronize.this, folder.id, false);
                             } finally {
                                 wlFolder.release();

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -428,7 +428,7 @@ public void onResume() {
 
         tvDozeDone.setText(ignoring ? R.string.title_setup_done : R.string.title_setup_to_do);
         tvDozeDone.setTextColor(ignoring ? textColorPrimary : colorWarning);
-        tvDozeDone.setTypeface(tvDozeDone.getTypeface(), ignoring ? Typeface.NORMAL : Typeface.BOLD);
+        tvDozeDone.setTypeface(null, ignoring ? Typeface.NORMAL : Typeface.BOLD);
         tvDozeDone.setCompoundDrawablesWithIntrinsicBounds(ignoring ? check : null, null, null, null);
 
         // https://developer.android.com/training/basics/network-ops/data-saver.html
@@ -456,7 +456,7 @@ private void setContactsPermission(boolean granted) {
 
         tvPermissionsDone.setText(granted ? R.string.title_setup_done : R.string.title_setup_to_do);
         tvPermissionsDone.setTextColor(granted ? textColorPrimary : colorWarning);
-        tvPermissionsDone.setTypeface(tvPermissionsDone.getTypeface(), granted ? Typeface.NORMAL : Typeface.BOLD);
+        tvPermissionsDone.setTypeface(null, granted ? Typeface.NORMAL : Typeface.BOLD);
         tvPermissionsDone.setCompoundDrawablesWithIntrinsicBounds(granted ? check : null, null, null, null);
         btnPermissions.setEnabled(!granted);
     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -126,7 +126,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private static final int CONNECT_BACKOFF_ALARM_MAX = 60; // minutes
     private static final long CONNECT_BACKOFF_GRACE = 2 * 60 * 1000L; // milliseconds
     private static final long LOST_RECENTLY = 150 * 1000L; // milliseconds
-    private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
+    private static final int ACCOUNT_ERROR_AFTER = 90; // minutes
     private static final int ACCOUNT_ERROR_AFTER_POLL = 4; // times
     private static final int FAST_FAIL_THRESHOLD = 75; // percent
     private static final int FETCH_YIELD_DURATION = 50; // milliseconds

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -401,6 +401,9 @@ else if (version < 1439) {
         } else if (version < 1461) {
             if (!prefs.contains("theme"))
                 editor.putString("theme", "blue_orange_light");
+        } else if (version < 1463) {
+            if (!prefs.contains("autoscroll"))
+                editor.putBoolean("autoscroll", true);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4647,7 +4647,7 @@ public void onChanged(@Nullable PagedList<TupleMessageEx> messages) {
                     return;
             } else {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                boolean autoscroll = prefs.getBoolean("autoscroll", true);
+                boolean autoscroll = prefs.getBoolean("autoscroll", false);
                 if (autoscroll) {
                     ActivityView activity = (ActivityView) getActivity();
                     if (activity != null &&

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -445,7 +445,7 @@ private void setOptions() {
         etDefaultSnooze.setHint("1");
 
         swPull.setChecked(prefs.getBoolean("pull", true));
-        swAutoScroll.setChecked(prefs.getBoolean("autoscroll", true));
+        swAutoScroll.setChecked(prefs.getBoolean("autoscroll", false));
         swQuickFilter.setChecked(prefs.getBoolean("quick_filter", false));
         swQuickScroll.setChecked(prefs.getBoolean("quick_scroll", true));
 

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -299,6 +299,7 @@ public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_search).setVisible(!settings);
         menu.findItem(R.id.menu_unified).setVisible(!settings);
         menu.findItem(R.id.menu_theme).setVisible(!settings);
+        menu.findItem(R.id.menu_force_sync).setVisible(!settings);
 
         super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -93,7 +93,7 @@ protected void onCreate(Bundle savedInstanceState) {
             getWindow().addFlags(WindowManager.LayoutParams.FLAG_SECURE);
 
         if (!this.getClass().equals(ActivityMain.class)) {
-            String theme = prefs.getString("theme", "light");
+            String theme = prefs.getString("theme", "blue_orange_system");
 
             // https://developer.android.com/guide/topics/ui/look-and-feel/darktheme#configuration_changes
             int uiMode = getResources().getConfiguration().uiMode;

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -394,6 +394,9 @@ else if (version < 1413)
         else if (version < 1439) {
             if (!BuildConfig.DEBUG)
                 editor.remove("experiments");
+        } else if (version < 1461) {
+            if (!prefs.contains("theme"))
+                editor.putString("theme", "blue_orange_light");
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -744,7 +744,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        String theme = prefs.getString("theme", "light");
+        String theme = prefs.getString("theme", "blue_orange_system");
         swTextColor.setEnabled(!"black_and_white".equals(theme));
 
         swTextSize.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
@@ -1085,7 +1085,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             tvSystem = dview.findViewById(R.id.tvSystem);
 
             final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-            String theme = prefs.getString("theme", "light");
+            String theme = prefs.getString("theme", "blue_orange_system");
 
             itten.setOnClickListener(new View.OnClickListener() {
                 @Override

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -356,7 +356,7 @@ static Document sanitizeView(Context context, Document parsed, boolean show_imag
 
     private static Document sanitize(Context context, Document parsed, boolean view, boolean show_images) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        String theme = prefs.getString("theme", "light");
+        String theme = prefs.getString("theme", "blue_orange_system");
         boolean text_color = (!view || (prefs.getBoolean("text_color", true) && !"black_and_white".equals(theme)));
         boolean text_size = (!view || prefs.getBoolean("text_size", true));
         boolean text_font = (!view || prefs.getBoolean("text_font", true));

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -367,7 +367,7 @@ public boolean onError(@NonNull Event event) {
                     Boolean ignoringOptimizations = Helper.isIgnoringOptimizations(context);
                     event.addMetadata("extra", "optimizing", (ignoringOptimizations != null && !ignoringOptimizations));
 
-                    String theme = prefs.getString("theme", "light");
+                    String theme = prefs.getString("theme", "blue_orange_system");
                     event.addMetadata("extra", "theme", theme);
                     event.addMetadata("extra", "package", BuildConfig.APPLICATION_ID);
                 }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1984,9 +1984,7 @@ private void bindBody(TupleMessageEx message, final boolean scroll) {
 
                 webView.setMinimumHeight(height);
 
-                webView.init(
-                        height, size, position,
-                        textSize, monospaced,
+                webView.init(height, size, position,
                         new WebViewEx.IWebView() {
                             @Override
                             public void onSizeChanged(int w, int h, int ow, int oh) {

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -86,9 +86,8 @@ void init(
 
         WebSettings settings = getSettings();
         if (textSize != 0) {
-            int dp = Helper.pixels2dp(getContext(), textSize);
-            settings.setDefaultFontSize(Math.round(dp));
-            settings.setDefaultFixedFontSize(Math.round(dp));
+            settings.setDefaultFontSize(Math.round(textSize));
+            settings.setDefaultFixedFontSize(Math.round(textSize));
         }
         if (monospaced)
             settings.setStandardFontFamily("monospace");

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -800,7 +800,7 @@ private void setOptions() {
 
         swClassification.setChecked(prefs.getBoolean("classification", false));
 
-        int class_min_chance = prefs.getInt("class_min_probability", 20);
+        int class_min_chance = prefs.getInt("class_min_probability", 15);
         tvClassMinProbability.setText(getString(R.string.title_advanced_class_min_chance, NF.format(class_min_chance)));
         sbClassMinProbability.setProgress(class_min_chance);
 

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -259,7 +259,7 @@ public int compare(Chance c1, Chance c2) {
         });
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        double class_min_chance = prefs.getInt("class_min_probability", 20) / 100.0;
+        double class_min_chance = prefs.getInt("class_min_probability", 15) / 100.0;
         double class_min_difference = prefs.getInt("class_min_difference", 50) / 100.0;
 
         // Select best class

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -366,11 +366,11 @@ public class FragmentMessages extends FragmentBase implements SharedPreferences.
             EntityFolder.OUTBOX,
             EntityFolder.DRAFTS,
             EntityFolder.SENT,
+            EntityFolder.TRASH,
+            EntityFolder.JUNK,
             EntityFolder.SYSTEM,
             EntityFolder.USER,
-            EntityFolder.ARCHIVE,
-            EntityFolder.TRASH,
-            EntityFolder.JUNK
+            EntityFolder.ARCHIVE
     ));
 
     @Override

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1785,7 +1785,8 @@ public void run() {
                         long delayed = now - account.last_connected - account.poll_interval * 60 * 1000L;
                         long maxDelayed = (pollInterval > 0 && !account.poll_exempted
                                 ? pollInterval * ACCOUNT_ERROR_AFTER_POLL : ACCOUNT_ERROR_AFTER) * 60 * 1000L;
-                        if (delayed > maxDelayed) {
+                        if (delayed > maxDelayed &&
+                                state.getBackoff() >= CONNECT_BACKOFF_ALARM_START * 60) {
                             Log.i("Reporting sync error after=" + delayed);
                             Throwable warning = new Throwable(
                                     getString(R.string.title_no_sync,
@@ -1795,7 +1796,6 @@ public void run() {
                                 NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
                                 nm.notify("receive:" + account.id, 1,
                                         Core.getNotificationError(this, "warning", account.name, warning)
-                                                .setOnlyAlertOnce(state.getBackoff() < CONNECT_BACKOFF_ALARM_START * 60 * 1000L)
                                                 .build());
                             } catch (Throwable ex1) {
                                 Log.w(ex1);

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -140,7 +140,7 @@ public class EntityMessage implements Serializable {
     public Boolean reply_domain; // differs from 'from'
     public String avatar; // lookup URI from sender
     public String sender; // sort key: from email address
-    public Address[] submitter;
+    public Address[] submitter; // sent on behalf of
     public Address[] from;
     public Address[] to;
     public Address[] cc;
@@ -488,6 +488,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.reply_domain, other.reply_domain) &&
                     Objects.equals(this.avatar, other.avatar) &&
                     Objects.equals(this.sender, other.sender) &&
+                    MessageHelper.equal(this.submitter, other.submitter) &&
                     MessageHelper.equal(this.from, other.from) &&
                     MessageHelper.equal(this.to, other.to) &&
                     MessageHelper.equal(this.cc, other.cc) &&

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -331,7 +331,7 @@ private static void processWord(long account, boolean added, String word, State
             stat.totalFrequency += f;
             stat.matchedWords++;
 
-            if (BuildConfig.DEBUG)
+            if (BuildConfig.DEBUG && false)
                 stat.words.add(current + "=" + f);
         }
     }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -498,13 +498,15 @@ static void processOperations(
                             // Fetch: NO The specified message set is invalid.
                             // Fetch: NO [SERVERBUG] SELECT Server error - Please try again later
                             // Fetch: NO [SERVERBUG] UID FETCH Server error - Please try again later
+                            // Fetch: NO Invalid message number (took n ms)
                             // Move: NO Over quota
                             // Move: NO No matching messages
                             // Move: NO [EXPUNGEISSUED] Some of the requested messages no longer exist
                             // Move: BAD parse error: invalid message sequence number:
                             // Move: NO MOVE failed or partially completed.
                             // Move: NO mailbox selected READ-ONLY
                             // Move: NO read only
+                            // Add: BAD Data length exceeds limit
                             // Delete: NO [CANNOT] STORE It's not possible to perform specified operation
                             // Delete: NO [UNAVAILABLE] EXPUNGE Backend error
                             // Delete: NO mailbox selected READ-ONLY

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -255,7 +255,7 @@ public int compare(Chance c1, Chance c2) {
         });
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        double class_min_chance = prefs.getInt("class_min_chance", 20) / 100.0;
+        double class_min_chance = prefs.getInt("class_min_probability", 50) / 100.0;
         double class_min_difference = prefs.getInt("class_min_difference", 50) / 100.0;
 
         // Select best class

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -223,12 +223,13 @@ private static String classify(long account, String currentClass, String text, b
 
             Stat stat = state.classStats.get(clazz);
 
-            double chance = stat.totalFrequency / maxMessages / state.words.size();
+            int words = state.words.size() - 2;
+            double chance = stat.totalFrequency / maxMessages / words;
             Chance c = new Chance(clazz, chance);
             chances.add(c);
             EntityLog.log(context, "Classifier " + c +
                     " frequency=" + (Math.round(stat.totalFrequency * 100.0) / 100.0) + "/" + maxMessages + " msgs" +
-                    " matched=" + stat.matchedWords + "/" + state.words.size() + " words" +
+                    " matched=" + stat.matchedWords + "/" + words + " words" +
                     " text=" + TextUtils.join(", ", stat.words));
         }
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -485,7 +485,7 @@ static boolean isOpenKeychainInstalled(Context context) {
     static boolean isComponentEnabled(Context context, Class<?> clazz) {
         PackageManager pm = context.getPackageManager();
         int state = pm.getComponentEnabledSetting(new ComponentName(context, clazz));
-        return (state != PackageManager.COMPONENT_ENABLED_STATE_DISABLED);
+        return (state == PackageManager.COMPONENT_ENABLED_STATE_ENABLED);
     }
 
     static void enableComponent(Context context, Class<?> clazz, boolean whether) {
@@ -497,7 +497,7 @@ static void enableComponent(Context context, String name, boolean whether) {
         pm.setComponentEnabledSetting(
                 new ComponentName(context, name),
                 whether
-                        ? PackageManager.COMPONENT_ENABLED_STATE_DEFAULT
+                        ? PackageManager.COMPONENT_ENABLED_STATE_ENABLED
                         : PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
                 PackageManager.DONT_KILL_APP);
     }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -999,7 +999,8 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
             throw new IllegalArgumentException("self");
 
         // De-classify
-        if (MessageClassifier.canClassify(folder.type))
+        if (MessageClassifier.canClassify(folder.type) &&
+                MessageClassifier.canClassify(target.type))
             for (EntityMessage message : messages)
                 MessageClassifier.classify(message, false, context);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1364,10 +1364,10 @@ private static Float getFontSize(String value, float current) {
         try {
             if (value.endsWith("%"))
                 return Float.parseFloat(value.substring(0, value.length() - 1).trim()) / 100 * current;
-            if (value.endsWith("em"))
-                return Float.parseFloat(value.substring(0, value.length() - 2).trim()) * current;
             if (value.endsWith("rem"))
                 return Float.parseFloat(value.substring(0, value.length() - 3).trim());
+            if (value.endsWith("em"))
+                return Float.parseFloat(value.substring(0, value.length() - 2).trim()) * current;
             if (value.endsWith("pt"))
                 return Float.parseFloat(value.substring(0, value.length() - 2).trim()) / DEFAULT_FONT_SIZE_PT;
             if (value.endsWith("px"))

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -126,7 +126,7 @@ public class EmailService implements AutoCloseable {
     static final int ENCRYPTION_STARTTLS = 1;
     static final int ENCRYPTION_NONE = 2;
 
-    final static int DEFAULT_CONNECT_TIMEOUT = 15; // seconds
+    final static int DEFAULT_CONNECT_TIMEOUT = 20; // seconds
     final static boolean SEPARATE_STORE_CONNECTION = false;
 
     private final static int SEARCH_TIMEOUT = 90 * 1000; // milliseconds

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -121,7 +121,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private static final int OPTIMIZE_KEEP_ALIVE_INTERVAL = 12; // minutes
     private static final int OPTIMIZE_POLL_INTERVAL = 15; // minutes
     private static final int CONNECT_BACKOFF_START = 8; // seconds
-    private static final int CONNECT_BACKOFF_MAX = 8; // seconds (totally 8+2x15=38 seconds)
+    private static final int CONNECT_BACKOFF_MAX = 8; // seconds (totally 8+2x20=48 seconds)
     private static final int CONNECT_BACKOFF_ALARM_START = 15; // minutes
     private static final int CONNECT_BACKOFF_ALARM_MAX = 60; // minutes
     private static final long CONNECT_BACKOFF_GRACE = 2 * 60 * 1000L; // milliseconds

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -238,6 +238,8 @@ public void onResume() {
         if (cm == null)
             return;
 
+        showConnectionType();
+
         NetworkRequest.Builder builder = new NetworkRequest.Builder();
         builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
         cm.registerNetworkCallback(builder.build(), networkCallback);

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -463,7 +463,7 @@ private void onMenuFAQ() {
     private void onDebugInfo() {
         new SimpleTask<Long>() {
             @Override
-            protected Long onExecute(Context context, Bundle args) throws IOException {
+            protected Long onExecute(Context context, Bundle args) throws IOException, JSONException {
                 return Log.getDebugInfo(context, R.string.title_debug_info_remark, null, null).id;
             }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -66,6 +66,7 @@
 import com.google.android.material.snackbar.Snackbar;
 
 import org.json.JSONArray;
+import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.io.BufferedReader;
@@ -1219,7 +1220,7 @@ private void onMenuRate() {
     private void onDebugInfo() {
         new SimpleTask<Long>() {
             @Override
-            protected Long onExecute(Context context, Bundle args) throws IOException {
+            protected Long onExecute(Context context, Bundle args) throws IOException, JSONException {
                 return Log.getDebugInfo(context, R.string.title_debug_info_remark, null, null).id;
             }
 

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -299,7 +299,7 @@ private static synchronized void load(Context context) throws IOException, JSONE
             for (int w = 0; w < jwords.length(); w++) {
                 JSONObject jword = (JSONObject) jwords.get(w);
                 long account = jword.getLong("account");
-                if (!wordClassFrequency.containsKey("account"))
+                if (!wordClassFrequency.containsKey(account))
                     wordClassFrequency.put(account, new HashMap<>());
                 String word = jword.getString("word");
                 Map<String, Integer> classFrequency = wordClassFrequency.get(account).get(word);
@@ -326,7 +326,7 @@ static boolean canClassify(String folderType) {
                 EntityFolder.USER.equals(folderType);
     }
 
-    private static File getFile(Context context) {
+    static File getFile(Context context) {
         return new File(context.getFilesDir(), "classifier.json");
     }
 

File: app/src/main/java/eu/faircode/email/MessageClassifier.java
Patch:
@@ -265,6 +265,8 @@ static synchronized void save(Context context) throws JSONException, IOException
         File file = getFile(context);
         Helper.writeText(file, jroot.toString(2));
 
+        dirty = false;
+
         Log.i("Classifier saved");
     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -896,7 +896,7 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
             boolean inbox = EntityFolder.INBOX.equals(message.folderType);
             boolean outbox = EntityFolder.OUTBOX.equals(message.folderType);
             boolean outgoing = isOutgoing(message);
-            boolean reverse = (outgoing &&
+            boolean reverse = (EntityFolder.isOutgoing(message.folderType) &&
                     (viewType != ViewType.THREAD || !threading) && !show_recipients);
             Address[] senders = ContactInfo.fillIn(reverse ? message.to : message.senders, prefer_contact);
             Address[] recipients = ContactInfo.fillIn(reverse ? message.from : message.recipients, prefer_contact);
@@ -5116,7 +5116,8 @@ else if (EntityMessage.PRIORITIY_LOW.equals(message.ui_priority))
                     result.add(context.getString(R.string.title_accessibility_attachment));
 
                 boolean outgoing = isOutgoing(message);
-                Address[] addresses = (outgoing && (viewType != ViewType.THREAD || !threading) ? message.to : message.senders);
+                Address[] addresses = (EntityFolder.isOutgoing(message.folderType) &&
+                        (viewType != ViewType.THREAD || !threading) ? message.to : message.senders);
                 String from = MessageHelper.formatAddresses(addresses, name_email, false);
                 // For a11y purpose subject is reported first when: user wishes so or this is a single outgoing message
                 if (subject_top || (outgoing && message.visible == 1)) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1384,7 +1384,7 @@ private static void onDelete(Context context, JSONArray jargs, EntityAccount acc
             // Synchronize will delete messages when needed
             db.message().setMessageUiHide(message.id, true);
         } else
-            db.message().deleteMessage(folder.id, message.id);
+            db.message().deleteMessage(message.id);
 
         if (!EntityFolder.DRAFTS.equals(folder.type) &&
                 !EntityFolder.TRASH.equals(folder.type)) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -23,6 +23,7 @@
 import android.app.Dialog;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
+import android.content.ActivityNotFoundException;
 import android.content.BroadcastReceiver;
 import android.content.ContentResolver;
 import android.content.Context;
@@ -7425,7 +7426,7 @@ public void onPageFinished(WebView view, String url) {
                             PrintJob job = printManager.print(jobName, adapter, new PrintAttributes.Builder().build());
                             EntityLog.log(context, "Print queued job=" + job.getInfo());
                         } catch (Throwable ex) {
-                            Log.unexpectedError(getParentFragmentManager(), ex);
+                            Log.unexpectedError(getParentFragmentManager(), ex, !(ex instanceof ActivityNotFoundException));
                         } finally {
                             printWebView = null;
                         }

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -132,7 +132,7 @@ public class EmailService implements AutoCloseable {
     private final static int SEARCH_TIMEOUT = 90 * 1000; // milliseconds
     private final static int FETCH_SIZE = 1024 * 1024; // bytes, default 16K
     private final static int POOL_SIZE = 1; // connections
-    private final static int POOL_TIMEOUT = 90 * 1000; // milliseconds, default 45 sec
+    private final static int POOL_TIMEOUT = 45 * 1000; // milliseconds, default 45 sec
 
     private final static int TCP_KEEP_ALIVE_INTERVAL = 9 * 60; // seconds
 

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -166,6 +166,7 @@ public interface DaoFolder {
 
     @Query("SELECT * FROM folder" +
             " WHERE folder.account = :account" +
+            " AND folder.selectable" +
             " AND folder.synchronize")
     List<EntityFolder> getSynchronizingFolders(long account);
 

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -154,7 +154,7 @@ boolean isGmail() {
     boolean isTransient(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean enabled = prefs.getBoolean("enabled", true);
-        int pollInterval = prefs.getInt("poll_interval", DEFAULT_POLL_INTERVAL);
+        int pollInterval = prefs.getInt("poll_interval", ServiceSynchronize.DEFAULT_POLL_INTERVAL);
         return (!enabled || this.ondemand || (pollInterval > 0 && !this.poll_exempted));
     }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1056,7 +1056,7 @@ private void checkIntent() {
                 onMenuOutbox();
 
             } else if (action.startsWith("thread")) {
-                intent.putExtra("thread", action.split(":", 2)[1]);
+                intent.putExtra("id", Long.parseLong(action.split(":", 2)[1]));
                 onViewThread(intent);
 
             } else if (action.equals("widget")) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3838,11 +3838,11 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
                 piContent = PendingIntent.getService(context, ServiceUI.PI_THREAD, thread, PendingIntent.FLAG_UPDATE_CURRENT);
             } else {
                 Intent thread = new Intent(context, ActivityView.class);
-                thread.setAction("thread:" + message.thread);
+                thread.setAction("thread:" + message.id);
                 thread.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 thread.putExtra("account", message.account);
                 thread.putExtra("folder", message.folder);
-                thread.putExtra("id", message.id);
+                thread.putExtra("thread", message.thread);
                 thread.putExtra("filter_archive", !EntityFolder.ARCHIVE.equals(message.folderType));
                 piContent = PendingIntent.getActivity(context, ActivityView.REQUEST_THREAD, thread, PendingIntent.FLAG_UPDATE_CURRENT);
             }

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -440,11 +440,11 @@ private void onIgnore(long id, boolean open) {
 
         if (open) {
             Intent thread = new Intent(this, ActivityView.class);
-            thread.setAction("thread:" + message.thread);
+            thread.setAction("thread:" + message.id);
             thread.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             thread.putExtra("account", message.account);
             thread.putExtra("folder", message.folder);
-            thread.putExtra("id", message.id);
+            thread.putExtra("thread", message.thread);
             thread.putExtra("filter_archive", !EntityFolder.ARCHIVE.equals(folder.type));
             startActivity(thread);
         }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -467,9 +467,6 @@ static void processOperations(
                             continue;
                         }
 
-                        if (ifolder != null && !ifolder.isOpen())
-                            break;
-
                         if (op.tries >= TOTAL_RETRY_MAX ||
                                 ex instanceof OutOfMemoryError ||
                                 ex instanceof FileNotFoundException ||

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2262,8 +2262,8 @@ else if (ex instanceof IllegalArgumentException || ex instanceof FileNotFoundExc
                     if (ex instanceof IOException &&
                             ex.getCause() instanceof ErrnoException &&
                             ((ErrnoException) ex.getCause()).errno == ENOSPC)
-                        ex = new Throwable(getContext().getString(R.string.app_cake), ex);
-                    Log.unexpectedError(getParentFragmentManager(), ex);
+                        ex = new IOException(getContext().getString(R.string.app_cake), ex);
+                    Log.unexpectedError(getParentFragmentManager(), ex, !(ex instanceof IOException));
                 }
             }
         }.execute(this, args, "compose:attachment:add");

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1323,7 +1323,9 @@ public Object doCommand(IMAPProtocol protocol) throws ProtocolException {
 
                                         // https://tools.ietf.org/html/rfc5465
                                         Argument arg = new Argument();
-                                        arg.writeAtom("SET STATUS (subscribed (MessageNew MessageExpunge FlagChange))");
+                                        arg.writeAtom("SET STATUS" +
+                                                " (selected (MessageNew (uid) MessageExpunge FlagChange))" +
+                                                " (subscribed (MessageNew MessageExpunge FlagChange))");
 
                                         Response[] responses = protocol.command("NOTIFY", arg);
 

File: app/src/main/java/eu/faircode/email/FragmentOperations.java
Patch:
@@ -236,7 +236,7 @@ private void addAll(List<EntityOperation> list, List<EntityOperation> sublist) {
                                     if (sublist != null)
                                         list.addAll(sublist);
                                 }
-                            }.execute(getContext(), getActivity(), new Bundle(), "operations:delete");
+                            }.execute(getContext(), getActivity(), args, "operations:delete");
                         }
                     })
                     .setNegativeButton(android.R.string.cancel, null)

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2336,7 +2336,7 @@ private void getMessageParts(Part part, MessageParts parts, Integer encrypt) thr
                 if ("v1".equals(ct.getParameter("protected-headers"))) {
                     String[] subject = part.getHeader("subject");
                     if (subject != null && subject.length != 0)
-                        parts.protected_subject = subject[0];
+                        parts.protected_subject = decodeMime(subject[0]);
                 }
             } catch (Throwable ex) {
                 Log.e(ex);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1182,6 +1182,8 @@ static EntityMessage getDebugInfo(Context context, int title, Throwable ex, Stri
 
             EntityIdentity identity = identities.get(0);
             EntityFolder drafts = db.folder().getFolderByType(identity.account, EntityFolder.DRAFTS);
+            if (drafts == null)
+                throw new IllegalArgumentException(context.getString(R.string.title_no_drafts));
 
             draft = new EntityMessage();
             draft.account = drafts.account;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -511,7 +511,8 @@ static boolean isOwnFault(Throwable ex) {
         if (!isSupportedDevice())
             return false;
 
-        if (ex instanceof OutOfMemoryError)
+        if (ex instanceof OutOfMemoryError ||
+                ex.getCause() instanceof OutOfMemoryError)
             return false;
 
         if (ex instanceof RemoteException)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -975,7 +975,7 @@ private void setOptions() {
         swTextSize.setChecked(prefs.getBoolean("text_size", true));
         swTextFont.setChecked(prefs.getBoolean("text_font", true));
         swTextAlign.setChecked(prefs.getBoolean("text_align", true));
-        swTextSeparators.setChecked(prefs.getBoolean("text_separators", false));
+        swTextSeparators.setChecked(prefs.getBoolean("text_separators", true));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));
         swImagesPlaceholders.setChecked(prefs.getBoolean("image_placeholders", true));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -369,7 +369,7 @@ private static Document sanitize(Context context, Document parsed, boolean view,
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
         boolean parse_classes = prefs.getBoolean("parse_classes", true);
         boolean inline_images = prefs.getBoolean("inline_images", false);
-        boolean text_separators = prefs.getBoolean("text_separators", false);
+        boolean text_separators = prefs.getBoolean("text_separators", true);
         boolean image_placeholders = prefs.getBoolean("image_placeholders", true);
 
         int textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -384,8 +384,6 @@ else if (version < 1336) {
                 editor.putBoolean("beige", false);
         } else if (version < 1385)
             editor.remove("parse_classes");
-        else if (version < 1393)
-            editor.remove("text_separators");
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
             editor.remove("background_service");

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -966,7 +966,7 @@ private void setOptions() {
         swTextSize.setChecked(prefs.getBoolean("text_size", true));
         swTextFont.setChecked(prefs.getBoolean("text_font", true));
         swTextAlign.setChecked(prefs.getBoolean("text_align", true));
-        swTextSeparators.setChecked(prefs.getBoolean("text_separators", true));
+        swTextSeparators.setChecked(prefs.getBoolean("text_separators", false));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -369,7 +369,7 @@ private static Document sanitize(Context context, Document parsed, boolean view,
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
         boolean parse_classes = prefs.getBoolean("parse_classes", true);
         boolean inline_images = prefs.getBoolean("inline_images", false);
-        boolean text_separators = prefs.getBoolean("text_separators", true);
+        boolean text_separators = prefs.getBoolean("text_separators", false);
 
         int textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -966,7 +966,7 @@ private void setOptions() {
         swTextSize.setChecked(prefs.getBoolean("text_size", true));
         swTextFont.setChecked(prefs.getBoolean("text_font", true));
         swTextAlign.setChecked(prefs.getBoolean("text_align", true));
-        swTextSeparators.setChecked(prefs.getBoolean("text_separators", !BuildConfig.PLAY_STORE_RELEASE));
+        swTextSeparators.setChecked(prefs.getBoolean("text_separators", true));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -369,7 +369,7 @@ private static Document sanitize(Context context, Document parsed, boolean view,
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
         boolean parse_classes = prefs.getBoolean("parse_classes", true);
         boolean inline_images = prefs.getBoolean("inline_images", false);
-        boolean text_separators = prefs.getBoolean("text_separators", !BuildConfig.PLAY_STORE_RELEASE);
+        boolean text_separators = prefs.getBoolean("text_separators", true);
 
         int textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3824,7 +3824,7 @@ public FilterResult tail(Node node, int depth) {
                                         });
 
                                     // Limit number of nested block quotes
-                                    boolean quote_limit = prefs.getBoolean("quote_limit", false);
+                                    boolean quote_limit = prefs.getBoolean("quote_limit", true);
                                     if (quote_limit)
                                         for (Element bq : d.select("blockquote")) {
                                             int level = 1;

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -411,7 +411,7 @@ private void setOptions() {
         swSeparateReply.setChecked(prefs.getBoolean("separate_reply", false));
         swExtendedReply.setChecked(prefs.getBoolean("extended_reply", false));
         swQuoteReply.setChecked(prefs.getBoolean("quote_reply", true));
-        swQuoteLimit.setChecked(prefs.getBoolean("quote_limit", false));
+        swQuoteLimit.setChecked(prefs.getBoolean("quote_limit", true));
         swQuoteLimit.setEnabled(swQuoteReply.isChecked());
         swResizeReply.setChecked(prefs.getBoolean("resize_reply", true));
 

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -156,7 +156,8 @@ static void queue(Context context, EntityMessage message, String name, Object...
                     keywords.add(keyword);
                 Collections.sort(keywords);
 
-                db.message().setMessageKeywords(message.id, DB.Converters.fromStringArray(keywords.toArray(new String[0])));
+                message.keywords = keywords.toArray(new String[0]);
+                db.message().setMessageKeywords(message.id, DB.Converters.fromStringArray(message.keywords));
 
             } else if (LABEL.equals(name)) {
                 String label = jargs.getString(0);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3838,7 +3838,7 @@ public FilterResult tail(Node node, int depth) {
                             Element e = d.body();
 
                             // Limit number of nested block quotes
-                            boolean quote_limit = prefs.getBoolean("quote_limit", true);
+                            boolean quote_limit = prefs.getBoolean("quote_limit", false);
                             if (quote_limit &&
                                     ("reply".equals(action) || "reply_all".equals(action)))
                                 for (Element bq : e.select("blockquote")) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -411,7 +411,7 @@ private void setOptions() {
         swSeparateReply.setChecked(prefs.getBoolean("separate_reply", false));
         swExtendedReply.setChecked(prefs.getBoolean("extended_reply", false));
         swQuoteReply.setChecked(prefs.getBoolean("quote_reply", true));
-        swQuoteLimit.setChecked(prefs.getBoolean("quote_limit", true));
+        swQuoteLimit.setChecked(prefs.getBoolean("quote_limit", false));
         swQuoteLimit.setEnabled(swQuoteReply.isChecked());
         swResizeReply.setChecked(prefs.getBoolean("resize_reply", true));
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2710,7 +2710,9 @@ public void setContent(Object content, String type) throws MessagingException {
                     try {
                         chain[0].checkValidity();
                     } catch (CertificateException ex) {
-                        throw new IllegalArgumentException(context.getString(R.string.title_invalid_key), ex);
+                        String msg = ex.getMessage();
+                        throw new IllegalArgumentException(
+                                TextUtils.isEmpty(msg) ? Log.formatThrowable(ex) : msg);
                     }
 
                     // Check public key email

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -761,8 +761,10 @@ else if (p[2] > 0.5)
                             .attr("x-block", "true");
             else
                 hs.attr("x-line-after", "true");
-        } else
+        } else {
             hs.tagName("strong");
+            hs.attr("x-line-after", "true");
+        }
 
         // Paragraphs
         for (Element p : document.select("p")) {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -382,6 +382,8 @@ else if (version < 1229) {
         else if (version < 1336) {
             if (!prefs.contains("beige"))
                 editor.putBoolean("beige", false);
+        } else if (version < 1385){
+            editor.remove("parse_classes");
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -972,7 +972,7 @@ private void setOptions() {
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swThumbnails.setChecked(prefs.getBoolean("thumbnails", true));
 
-        swParseClasses.setChecked(prefs.getBoolean("parse_classes", false));
+        swParseClasses.setChecked(prefs.getBoolean("parse_classes", true));
         swAuthentication.setChecked(prefs.getBoolean("authentication", true));
 
         updateColor();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -367,7 +367,7 @@ private static Document sanitize(Context context, Document parsed, boolean view,
         boolean text_align = prefs.getBoolean("text_align", true);
         boolean display_hidden = prefs.getBoolean("display_hidden", false);
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
-        boolean parse_classes = prefs.getBoolean("parse_classes", false);
+        boolean parse_classes = prefs.getBoolean("parse_classes", true);
         boolean inline_images = prefs.getBoolean("inline_images", false);
         boolean text_separators = prefs.getBoolean("text_separators", false);
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -90,7 +90,7 @@ public void println(String msg) {
         final boolean crash_reports = prefs.getBoolean("crash_reports", false);
 
         try {
-            boolean tcp_keep_alive = prefs.getBoolean("tcp_keep_alive", true);
+            boolean tcp_keep_alive = prefs.getBoolean("tcp_keep_alive", false);
             System.setProperty("fairemail.tcp_keep_alive", Boolean.toString(tcp_keep_alive));
         } catch (Throwable ex) {
             Log.e(ex);

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -295,7 +295,7 @@ private void setOptions() {
         etTimeout.setHint(Integer.toString(EmailService.DEFAULT_CONNECT_TIMEOUT));
 
         swPreferIp4.setChecked(prefs.getBoolean("prefer_ip4", true));
-        swTcpKeepAlive.setChecked(prefs.getBoolean("tcp_keep_alive", true));
+        swTcpKeepAlive.setChecked(prefs.getBoolean("tcp_keep_alive", false));
         swSslHarden.setChecked(prefs.getBoolean("ssl_harden", false));
     }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1377,9 +1377,6 @@ private static boolean hasVisibleContent(Element root) {
                 }
             } else if (node instanceof Element) {
                 Element element = (Element) node;
-                if (element.isBlock() ||
-                        "true".equals(element.attr("x-block")))
-                    return false;
                 if (element.hasText())
                     return true;
                 if (element.selectFirst("img[src~=.+]") != null)

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -433,7 +433,7 @@ private void connect(
             main = InetAddress.getByName(host);
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-            boolean prefer_ip4 = prefs.getBoolean("prefer_ip4", false);
+            boolean prefer_ip4 = prefs.getBoolean("prefer_ip4", true);
             if (prefer_ip4 && main instanceof Inet6Address) {
                 for (InetAddress iaddr : InetAddress.getAllByName(host))
                     if (iaddr instanceof Inet4Address) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -280,7 +280,7 @@ private void setOptions() {
         etTimeout.setText(timeout == 0 ? null : Integer.toString(timeout));
         etTimeout.setHint(Integer.toString(EmailService.DEFAULT_CONNECT_TIMEOUT));
 
-        swPreferIp4.setChecked(prefs.getBoolean("prefer_ip4", false));
+        swPreferIp4.setChecked(prefs.getBoolean("prefer_ip4", true));
         swSslHarden.setChecked(prefs.getBoolean("ssl_harden", false));
     }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1497,7 +1497,7 @@ public void run() {
                                         if (!folder.poll && capIdle) {
                                             // Sends folder NOOP
                                             if (!mapFolders.get(folder).isOpen())
-                                                throw new StoreClosedException(iservice.getStore(), folder.name);
+                                                throw new StoreClosedException(iservice.getStore(), "NOOP " + folder.name);
                                         } else {
                                             if (folder.poll_count == 0)
                                                 EntityOperation.sync(this, folder.id, false);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7647,7 +7647,7 @@ protected void onPostExecute(Bundle args) {
 
                 @Override
                 protected List<TupleIdentityEx> onExecute(Context context, Bundle args) {
-                    DB db = DB.getInstance(getContext());
+                    DB db = DB.getInstance(context);
                     return db.identity().getComposableIdentities(null);
                 }
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -206,23 +206,23 @@ public class EntityFolder extends EntityOrder implements Serializable {
     static final int DEFAULT_KEEP = 30; // days
     static final int DEFAULT_KEEP_DRAFTS = 180; // days
 
-    static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(
+    private static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(
             INBOX,
             DRAFTS,
             SENT,
             ARCHIVE,
             TRASH,
             JUNK
     ));
-    static final List<Boolean> SYSTEM_FOLDER_POLL = Collections.unmodifiableList(Arrays.asList(
+    private static final List<Boolean> SYSTEM_FOLDER_POLL = Collections.unmodifiableList(Arrays.asList(
             false, // inbox
             false, // drafts
             false, // sent
             true, // archive
             true, // trash
             true // junk
     )); // MUST match SYSTEM_FOLDER_SYNC
-    static final List<Boolean> SYSTEM_FOLDER_DOWNLOAD = Collections.unmodifiableList(Arrays.asList(
+    private static final List<Boolean> SYSTEM_FOLDER_DOWNLOAD = Collections.unmodifiableList(Arrays.asList(
             true, // inbox
             true, // drafts
             false, // sent

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -641,6 +641,8 @@ public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
             command.putString("name", "eval");
             liveAccountNetworkState.post(command);
         } else if (PREF_RELOAD.contains(key) || ConnectionHelper.PREF_NETWORK.contains(key)) {
+            if (ConnectionHelper.PREF_NETWORK.contains(key))
+                updateNetworkState(ConnectionHelper.getActiveNetwork(this), "preference");
             Bundle command = new Bundle();
             command.putString("pref", key);
             command.putString("name", "reload");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1540,7 +1540,7 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                             if (attachment.available)
                                 if (attachment.isInline() && attachment.isImage())
                                     inlineImages++;
-                                else if ("message/rfc822".equals(attachment.type))
+                                else if ("message/rfc822".equals(attachment.getMimeType()))
                                     embeddedMessages++;
 
                     int lastInlineImages = 0;
@@ -1551,7 +1551,7 @@ else if ("message/rfc822".equals(attachment.type))
                             if (attachment.available)
                                 if (attachment.isInline() && attachment.isImage())
                                     lastInlineImages++;
-                                else if ("message/rfc822".equals(attachment.type))
+                                else if ("message/rfc822".equals(attachment.getMimeType()))
                                     lastEmbeddedMessages++;
 
                     boolean show_images = properties.getValue("images", message.id);
@@ -2062,7 +2062,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
 
                     // Add embedded messages
                     for (EntityAttachment attachment : attachments)
-                        if (attachment.available && "message/rfc822".equals(attachment.type))
+                        if (attachment.available && "message/rfc822".equals(attachment.getMimeType()))
                             try (FileInputStream fis = new FileInputStream(attachment.getFile(context))) {
                                 Properties props = MessageHelper.getSessionProperties();
                                 Session isession = Session.getInstance(props, null);

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -214,7 +214,7 @@ boolean matches(Context context, EntityMessage message, Message imessage) throws
 
                     boolean found = false;
                     for (EntityAttachment attachment : attachments)
-                        if (mimeType.equalsIgnoreCase(attachment.type)) {
+                        if (mimeType.equalsIgnoreCase(attachment.getMimeType())) {
                             found = true;
                             break;
                         }

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -34,6 +34,7 @@ public interface DaoOperation {
             " WHEN operation.name = '" + EntityOperation.ATTACHMENT + "' THEN -3" +
             " WHEN operation.name = '" + EntityOperation.HEADERS + "' THEN -2" +
             " WHEN operation.name = '" + EntityOperation.RAW + "' THEN -2" +
+            " WHEN operation.name = '" + EntityOperation.PURGE + "' THEN -2" +
             " WHEN operation.name = '" + EntityOperation.SYNC + "' AND folder.account IS NULL THEN -1" + // Outbox
             " WHEN operation.name = '" + EntityOperation.SYNC + "' AND folder.account IS NOT NULL THEN 1" +
             // Other operations: add, delete, seen, answered, flag, keyword, label, subscribe, send

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -736,7 +736,6 @@ protected Void onExecute(Context context, Bundle args) {
                     }
 
                     EntityOperation.queue(context, folder, EntityOperation.PURGE);
-                    EntityOperation.sync(context, folder.id, false);
 
                     db.setTransactionSuccessful();
                 } finally {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -7278,7 +7278,6 @@ protected Void onExecute(Context context, Bundle args) {
                         }
 
                         EntityOperation.queue(context, folder, EntityOperation.PURGE);
-                        EntityOperation.sync(context, folder.id, false);
                     }
 
                     db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -117,7 +117,6 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
     private static final int ACCOUNT_ERROR_AFTER_POLL = 4; // times
     private static final int BACKOFF_ERROR_AFTER = 16; // seconds
-    private static final long FAST_ERROR_TIME = 6 * 60 * 1000L; // milliseconds
     private static final int FAST_ERROR_COUNT = 3;
     private static final int FAST_ERROR_BACKOFF = CONNECT_BACKOFF_ALARM_START;
 
@@ -1574,7 +1573,7 @@ public void run() {
 
                     // Check for fast account errors
                     if (account.last_connected != null &&
-                            now - account.last_connected < FAST_ERROR_TIME) {
+                            now - account.last_connected < account.poll_interval * 60 * 1000 / 2) {
                         errors++;
                         EntityLog.log(ServiceSynchronize.this,
                                 account.name + " fast errors=" + errors +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1673,7 +1673,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
                 protected void onException(Bundle args, Throwable ex) {
                     Log.unexpectedError(parentFragment.getParentFragmentManager(), ex);
                 }
-            }.setLog(false).execute(context, owner, sargs, "message:more");
+            }.setLog(false).execute(context, owner, sargs, "message:tools");
         }
 
         private void bindAddresses(TupleMessageEx message) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3369,7 +3369,7 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Map<L
         boolean notify_summary = prefs.getBoolean("notify_summary", false);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
         boolean notify_preview_only = prefs.getBoolean("notify_preview_only", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
         boolean biometrics = prefs.getBoolean("biometrics", false);
         String pin = prefs.getString("pin", null);
         boolean biometric_notify = prefs.getBoolean("biometrics_notify", false);
@@ -3556,7 +3556,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
         boolean flags = prefs.getBoolean("flags", true);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
         boolean notify_preview_all = prefs.getBoolean("notify_preview_all", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
         boolean notify_trash = (prefs.getBoolean("notify_trash", true) || !pro);
         boolean notify_junk = (prefs.getBoolean("notify_junk", false) && pro);
         boolean notify_archive = (prefs.getBoolean("notify_archive", true) || !pro);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -508,7 +508,7 @@ private void setOptions() {
         swNotifyPreview.setChecked(prefs.getBoolean("notify_preview", true));
         swNotifyPreviewAll.setChecked(prefs.getBoolean("notify_preview_all", false));
         swNotifyPreviewOnly.setChecked(prefs.getBoolean("notify_preview_only", false));
-        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", true));
+        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", false));
         swBiometricsNotify.setChecked(prefs.getBoolean("biometrics_notify", false));
         swAlertOnce.setChecked(!prefs.getBoolean("alert_once", true));
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3369,7 +3369,7 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Map<L
         boolean notify_summary = prefs.getBoolean("notify_summary", false);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
         boolean notify_preview_only = prefs.getBoolean("notify_preview_only", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
         boolean biometrics = prefs.getBoolean("biometrics", false);
         String pin = prefs.getString("pin", null);
         boolean biometric_notify = prefs.getBoolean("biometrics_notify", false);
@@ -3556,7 +3556,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
         boolean flags = prefs.getBoolean("flags", true);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
         boolean notify_preview_all = prefs.getBoolean("notify_preview_all", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
         boolean notify_trash = (prefs.getBoolean("notify_trash", true) || !pro);
         boolean notify_junk = (prefs.getBoolean("notify_junk", false) && pro);
         boolean notify_archive = (prefs.getBoolean("notify_archive", true) || !pro);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -508,7 +508,7 @@ private void setOptions() {
         swNotifyPreview.setChecked(prefs.getBoolean("notify_preview", true));
         swNotifyPreviewAll.setChecked(prefs.getBoolean("notify_preview_all", false));
         swNotifyPreviewOnly.setChecked(prefs.getBoolean("notify_preview_only", false));
-        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", false));
+        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", true));
         swBiometricsNotify.setChecked(prefs.getBoolean("biometrics_notify", false));
         swAlertOnce.setChecked(!prefs.getBoolean("alert_once", true));
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -468,6 +468,8 @@ public void onClick(View view) {
 
         btnAdvanced.setVisibility(View.GONE);
 
+        etEhlo.setHint(EmailService.getDefaultEhlo());
+
         btnSave.setVisibility(View.GONE);
         pbSave.setVisibility(View.GONE);
         cbTrust.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2253,7 +2253,7 @@ static void watchdog(Context context) {
     private static void start(Context context, Intent intent) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean background_service = prefs.getBoolean("background_service", false);
-        if (background_service)
+        if (background_service && Build.VERSION.SDK_INT < Build.VERSION_CODES.O)
             context.startService(intent);
         else
             ContextCompat.startForegroundService(context, intent);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1299,8 +1299,8 @@ private void onViewFolders(Intent intent) {
     private void onViewMessages(Intent intent) {
         if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED)) {
             getSupportFragmentManager().popBackStack("messages", FragmentManager.POP_BACK_STACK_INCLUSIVE);
-            if (content_pane != null)
-                getSupportFragmentManager().popBackStack("unified", 0);
+            //if (content_pane != null)
+            //    getSupportFragmentManager().popBackStack("unified", 0);
         }
 
         Bundle args = new Bundle();

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -675,7 +675,7 @@ public void onBackPressed() {
             if (exit || count > 1)
                 super.onBackPressed();
             else if (!backHandled()) {
-                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getOriginalContext());
+                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ActivityView.this);
                 boolean double_back = prefs.getBoolean("double_back", true);
                 if (searching || !double_back)
                     super.onBackPressed();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -387,7 +387,7 @@ public FilterResult tail(Node node, int depth) {
         for (Element e : parsed.select("*")) {
             String tag = e.tagName();
             if (tag.contains(":")) {
-                if (ns != null && tag.startsWith(ns)) {
+                if (ns == null || tag.startsWith(ns)) {
                     e.tagName(tag.split(":")[1]);
                     Log.i("Updated tag=" + tag + " to=" + e.tagName());
                 } else {

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -737,11 +737,11 @@ else if (child instanceof ViewGroup)
     }
 
     static void hide(View view) {
-        view.setPadding(0, 0, 0, 0);
+        view.setPadding(0, 1, 0, 0);
 
         ViewGroup.LayoutParams lparam = view.getLayoutParams();
         lparam.width = 0;
-        lparam.height = 0;
+        lparam.height = 1;
         if (lparam instanceof ConstraintLayout.LayoutParams)
             ((ConstraintLayout.LayoutParams) lparam).setMargins(0, 0, 0, 0);
         view.setLayoutParams(lparam);

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -218,7 +218,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
             false, // inbox
             false, // drafts
             false, // sent
-            false, // archive
+            true, // archive
             true, // trash
             true // junk
     )); // MUST match SYSTEM_FOLDER_SYNC

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -174,6 +174,9 @@ static void processOperations(
                             " group=" + group +
                             " retry=" + retry);
 
+                    if (!Objects.equals(folder.id, op.folder))
+                        throw new IllegalArgumentException("Invalid folder=" + folder.id + "/" + op.folder);
+
                     if (ifolder != null && !ifolder.isOpen())
                         break;
 

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -536,7 +536,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                     OutputStream os = null;
                     InputStream is = null;
                     try {
-                        os = context.getContentResolver().openOutputStream(uri);
+                        os = context.getContentResolver().openOutputStream(document.getUri());
                         is = new FileInputStream(file);
 
                         byte[] buffer = new byte[Helper.BUFFER_SIZE];
@@ -569,6 +569,7 @@ protected void onExecuted(Bundle args, Void data) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
+                Log.w(ex);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                     if (ex instanceof RecoverableSecurityException) {
                         handle((RecoverableSecurityException) ex);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4418,7 +4418,7 @@ protected void onExecuted(Bundle args, Void data) {
                 protected void onException(Bundle args, Throwable ex) {
                     Log.unexpectedError(parentFragment.getParentFragmentManager(), ex);
                 }
-            }.execute(context, owner, args, "message:share");
+            }.execute(context, owner, args, "message:resync");
         }
 
         private void onMenuSearch(TupleMessageEx message) {

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2199,7 +2199,7 @@ public void tail(Node node, int depth) {
                                 int llevel = 0;
                                 Element lparent = element.parent();
                                 while (lparent != null) {
-                                    if (lparent.tagName().equals(element.tagName()))
+                                    if ("ol".equals(element.tagName()) || "ul".equals(element.tagName()))
                                         llevel++;
                                     lparent = lparent.parent();
                                 }

File: app/src/main/java/eu/faircode/email/ActivityWidget.java
Patch:
@@ -108,10 +108,13 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         btnColor.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                int editTextColor = Helper.resolveColor(ActivityWidget.this, android.R.attr.editTextColor);
+
                 ColorPickerDialogBuilder
                         .with(ActivityWidget.this)
                         .setTitle(R.string.title_widget_background)
                         .showColorEdit(true)
+                        .setColorEditTextColor(editTextColor)
                         .wheelType(ColorPickerView.WHEEL_TYPE.FLOWER)
                         .density(6)
                         .lightnessSliderOnly()

File: app/src/main/java/eu/faircode/email/ActivityWidgetUnified.java
Patch:
@@ -114,10 +114,13 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         btnColor.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                int editTextColor = Helper.resolveColor(ActivityWidgetUnified.this, android.R.attr.editTextColor);
+
                 ColorPickerDialogBuilder
                         .with(ActivityWidgetUnified.this)
                         .setTitle(R.string.title_widget_background)
                         .showColorEdit(true)
+                        .setColorEditTextColor(editTextColor)
                         .wheelType(ColorPickerView.WHEEL_TYPE.FLOWER)
                         .density(6)
                         .lightnessSliderOnly()

File: app/src/main/java/eu/faircode/email/AdapterKeyword.java
Patch:
@@ -132,10 +132,13 @@ public void onClick(View view) {
 
             final TupleKeyword keyword = all.get(pos);
 
+            int editTextColor = Helper.resolveColor(context, android.R.attr.editTextColor);
+
             ColorPickerDialogBuilder builder = ColorPickerDialogBuilder
                     .with(context)
                     .setTitle(context.getString(R.string.title_color))
                     .showColorEdit(true)
+                    .setColorEditTextColor(editTextColor)
                     .wheelType(ColorPickerView.WHEEL_TYPE.FLOWER)
                     .density(6)
                     .lightnessSliderOnly()

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -1050,10 +1050,10 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
 
             swReverse.setChecked(reversed);
 
-            if (dark)
-                rgThemeOptions.check(R.id.rbThemeDark);
-            else if (system)
+            if (system)
                 rgThemeOptions.check(R.id.rbThemeSystem);
+            else if (dark || black)
+                rgThemeOptions.check(R.id.rbThemeDark);
             else
                 rgThemeOptions.check(R.id.rbThemeLight);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1371,15 +1371,16 @@ private void bindFlagged(TupleMessageEx message, boolean expanded) {
             boolean pro = ActivityBilling.isPro(context);
             boolean flagged = (message.count - message.unflagged) > 0;
             int color = (message.color == null || !pro ? colorAccent : message.color);
+            int tint = (flagged ? color : textColorSecondary);
 
             if (!Objects.equals(ibFlagged.getTag(), flagged)) {
                 ibFlagged.setTag(flagged);
                 ibFlagged.setImageResource(flagged ? R.drawable.baseline_star_24 : R.drawable.twotone_star_border_24);
             }
 
             ColorStateList csl = ibFlagged.getImageTintList();
-            if (csl == null || csl.getColorForState(new int[0], 0) != color)
-                ibFlagged.setImageTintList(ColorStateList.valueOf(flagged ? color : textColorSecondary));
+            if (csl == null || csl.getColorForState(new int[0], 0) != tint)
+                ibFlagged.setImageTintList(ColorStateList.valueOf(tint));
 
             ibFlagged.setEnabled(message.uid != null || message.accountProtocol != EntityAccount.TYPE_IMAP);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -117,8 +117,9 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
     private static final int ACCOUNT_ERROR_AFTER_POLL = 3; // times
     private static final int BACKOFF_ERROR_AFTER = 16; // seconds
-    private static final long FAST_ERROR_TIME = 5 * 60 * 1000L; // milliseconds
+    private static final long FAST_ERROR_TIME = 6 * 60 * 1000L; // milliseconds
     private static final int FAST_ERROR_COUNT = 3;
+    private static final int FAST_ERROR_BACKOFF = CONNECT_BACKOFF_AlARM_START * 2;
 
     private static final String ACTION_NEW_MESSAGE_COUNT = BuildConfig.APPLICATION_ID + ".NEW_MESSAGE_COUNT";
 
@@ -1566,7 +1567,7 @@ public void run() {
                                 account.name + " fast errors=" + errors +
                                         " last connected: " + new Date(account.last_connected));
                         if (errors >= FAST_ERROR_COUNT)
-                            state.setBackoff(CONNECT_BACKOFF_AlARM_START * 60);
+                            state.setBackoff(FAST_ERROR_BACKOFF * 60);
                     }
 
                     // Report account connection error

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1437,6 +1437,9 @@ public void run() {
                                             Log.i(folder.name + " poll count=" + folder.poll_count);
                                         }
                             }
+
+                            if (!first)
+                                errors = 0;
                         } catch (Throwable ex) {
                             if (tune) {
                                 account.keep_alive_failed++;
@@ -1542,7 +1545,6 @@ public void run() {
                             am.cancel(pi);
                         }
 
-                        errors = 0;
                         first = false;
                     }
 

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -85,7 +85,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentAnswers.java
Patch:
@@ -58,7 +58,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -105,7 +105,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
         compact = prefs.getBoolean("compact_folders", false);
         show_flagged = prefs.getBoolean("flagged_folders", false);
 

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -61,7 +61,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -393,7 +393,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         swipenav = prefs.getBoolean("swipenav", true);
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
         date = prefs.getBoolean("date", true);
         threading = prefs.getBoolean("threading", true);
         seekbar = prefs.getBoolean("seekbar", false);

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -819,7 +819,7 @@ private void setOptions() {
             }
 
         swCards.setChecked(prefs.getBoolean("cards", true));
-        swBeige.setChecked(prefs.getBoolean("beige", false));
+        swBeige.setChecked(prefs.getBoolean("beige", true));
         swBeige.setEnabled(swCards.isChecked());
         swDate.setChecked(prefs.getBoolean("date", true));
         swNavBarColorize.setChecked(prefs.getBoolean("navbar_colorize", false));

File: app/src/main/java/eu/faircode/email/FragmentRules.java
Patch:
@@ -101,7 +101,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        beige = prefs.getBoolean("beige", false);
+        beige = prefs.getBoolean("beige", true);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/ImageHelper.java
Patch:
@@ -263,7 +263,7 @@ static Drawable decodeImage(final Context context, final long id, String source,
                     return d;
                 } else if (!attachment.available) {
                     Log.i("Image not available CID=" + cid);
-                    Drawable d = res.getDrawable(R.drawable.baseline_hourglass_empty_24, theme);
+                    Drawable d = res.getDrawable(R.drawable.baseline_photo_library_24, theme);
                     d.setBounds(0, 0, px, px);
                     return d;
                 } else {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3596,7 +3596,6 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
                             .setContentTitle(title)
                             .setContentIntent(piContent)
                             .setNumber(messages.size())
-                            .setShowWhen(false)
                             .setDeleteIntent(piClear)
                             .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                             .setCategory(notify_summary

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -952,8 +952,8 @@ static String formatThrowable(Throwable ex) {
         return formatThrowable(ex, true);
     }
 
-    static String formatThrowable(Throwable ex, boolean santize) {
-        return formatThrowable(ex, " ", santize);
+    static String formatThrowable(Throwable ex, boolean sanitize) {
+        return formatThrowable(ex, " ", sanitize);
     }
 
     static String formatThrowable(Throwable ex, String separator, boolean sanitize) {

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -496,7 +496,8 @@ public Object doCommand(IMAPProtocol protocol) throws ProtocolException {
                         Log.i("Boundary server sync uid=" + uid);
                         EntityMessage message = db.message().getMessageByUid(browsable.id, uid);
                         if (message == null) {
-                            message = Core.synchronizeMessage(context,
+                            message = Core.synchronizeMessage(
+                                    context, -1,
                                     account, browsable,
                                     (IMAPStore) state.iservice.getStore(), state.ifolder, (MimeMessage) isub[j],
                                     true, true,

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1929,7 +1929,7 @@ public void onScrollChange(int scrollX, int scrollY) {
 
                             @Override
                             public void onOverScrolled(int scrollX, int scrollY, int dx, int dy, boolean clampedX, boolean clampedY) {
-                                if (clampedY && ((WebViewEx) wvBody).isZoomed())
+                                if (clampedY && ((WebViewEx) wvBody).isZoomedY())
                                     properties.scrollBy(0, dy);
                             }
 
@@ -2796,7 +2796,7 @@ public boolean onTouch(View view, MotionEvent ev) {
             } else {
                 //view.getParent().requestDisallowInterceptTouchEvent(false);
                 //return (view.getId() == R.id.wvBody && ev.getAction() == MotionEvent.ACTION_MOVE);
-                boolean intercept = (view.getId() == R.id.wvBody && ((WebViewEx) wvBody).isZoomed());
+                boolean intercept = (view.getId() == R.id.wvBody && ((WebViewEx) wvBody).isZoomedY());
                 view.getParent().requestDisallowInterceptTouchEvent(intercept);
                 return false;
             }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -606,9 +606,7 @@ public void onChanged(TupleOperationStats stats) {
 
     @Override
     protected void onNewIntent(Intent intent) {
-        Intent clone = new Intent(intent);
-        clone.setAction(null);
-        super.onNewIntent(clone);
+        super.onNewIntent(intent);
         setIntent(intent);
     }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -606,7 +606,9 @@ public void onChanged(TupleOperationStats stats) {
 
     @Override
     protected void onNewIntent(Intent intent) {
-        super.onNewIntent(intent);
+        Intent clone = new Intent(intent);
+        clone.setAction(null);
+        super.onNewIntent(clone);
         setIntent(intent);
     }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4076,8 +4076,8 @@ ConnectionHelper.NetworkState getNetworkState() {
             return networkState;
         }
 
-        void setBackoff(int seconds) {
-            this.backoff = seconds;
+        void setBackoff(int value) {
+            this.backoff = value;
         }
 
         int getBackoff() {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -4076,8 +4076,8 @@ ConnectionHelper.NetworkState getNetworkState() {
             return networkState;
         }
 
-        void setBackoff(int value) {
-            this.backoff = value;
+        void setBackoff(int seconds) {
+            this.backoff = seconds;
         }
 
         int getBackoff() {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5788,13 +5788,13 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
                         }
 
                         if (addr == null)
-                            throw new IllegalArgumentException("addr not found");
+                            throw new IllegalArgumentException("Autocrypt: addr not found");
 
                         if (!addr.equalsIgnoreCase(peer))
-                            throw new IllegalArgumentException("addr different from peer");
+                            throw new IllegalArgumentException("Autocrypt: addr different from peer");
 
                         if (keydata == null)
-                            throw new IllegalArgumentException("keydata not found");
+                            throw new IllegalArgumentException("Autocrypt: keydata not found");
 
                         AutocryptPeerUpdate update = AutocryptPeerUpdate.create(
                                 keydata, new Date(message.received), mutual);

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -899,7 +899,7 @@ private void setOptions() {
         swTextSize.setChecked(prefs.getBoolean("text_size", true));
         swTextFont.setChecked(prefs.getBoolean("text_font", true));
         swTextAlign.setChecked(prefs.getBoolean("text_align", true));
-        swTextSeparators.setChecked(prefs.getBoolean("text_separators", true));
+        swTextSeparators.setChecked(prefs.getBoolean("text_separators", false));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));
         swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -329,7 +329,7 @@ private static Document sanitize(Context context, Document parsed, boolean view,
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
         boolean parse_classes = prefs.getBoolean("parse_classes", false);
         boolean inline_images = prefs.getBoolean("inline_images", false);
-        boolean text_separators = prefs.getBoolean("text_separators", true);
+        boolean text_separators = prefs.getBoolean("text_separators", false);
 
         int textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);
 
@@ -1816,7 +1816,7 @@ private static SpannableStringBuilder fromDocument(
             @Nullable Html.ImageGetter imageGetter, @Nullable Html.TagHandler tagHandler) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean debug = prefs.getBoolean("debug", false);
-        boolean text_separators = prefs.getBoolean("text_separators", true);
+        boolean text_separators = prefs.getBoolean("text_separators", false);
 
         final int colorPrimary = Helper.resolveColor(context, R.attr.colorPrimary);
         final int colorAccent = Helper.resolveColor(context, R.attr.colorAccent);

File: app/src/main/java/eu/faircode/email/FixedTextView.java
Patch:
@@ -111,7 +111,7 @@ protected void onDraw(Canvas canvas) {
     @Override
     public boolean dispatchTouchEvent(MotionEvent event) {
         // https://issuetracker.google.com/issues/37068143
-        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.M &&
+        if ((BuildConfig.DEBUG || Build.VERSION.SDK_INT <= Build.VERSION_CODES.M) &&
                 hasSelection() &&
                 event.getActionMasked() == MotionEvent.ACTION_DOWN) {
             CharSequence text = getText();

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -478,6 +478,7 @@ public void onRefresh() {
             }
         });
 
+        grpSupport.setVisibility(View.GONE);
         tvSupport.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -496,7 +496,6 @@ private void enableOptions() {
         cbNotifyActionFlag.setEnabled(pro && !summary);
         cbNotifyActionSeen.setEnabled(pro && !summary);
         cbNotifyActionSnooze.setEnabled(pro && !summary);
-        swNotifyPreview.setEnabled(!summary);
         swNotifyPreviewAll.setEnabled(!summary && swNotifyPreview.isChecked());
         swNotifyPreviewOnly.setEnabled(!summary && swNotifyPreview.isChecked());
         swWearablePreview.setEnabled(!summary && swNotifyPreview.isChecked());

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -464,15 +464,15 @@ static void processOperations(
                                 ex.getCause() instanceof MessageRemovedIOException ||
                                 ex.getCause() instanceof BadCommandException ||
                                 ex.getCause() instanceof CommandFailedException ||
-                                (ex instanceof FolderClosedException &&
-                                        ex.getCause() instanceof IOException &&
+                                (ConnectionHelper.isIoError(ex) &&
                                         EntityFolder.DRAFTS.equals(folder.type) &&
                                         EntityOperation.ADD.equals(op.name))) {
                             // com.sun.mail.iap.BadCommandException: B13 BAD [TOOBIG] Message too large
                             // com.sun.mail.iap.CommandFailedException: AY3 NO [CANNOT] Cannot APPEND to a SPAM folder
                             // com.sun.mail.iap.CommandFailedException: B16 NO [ALERT] Cannot MOVE messages out of the Drafts folder
                             // Drafts: javax.mail.FolderClosedException: * BYE Jakarta Mail Exception:
                             //   javax.net.ssl.SSLException: Write error: ssl=0x8286cac0: I/O error during system call, Broken pipe
+                            // Drafts: * BYE Jakarta Mail Exception: java.io.IOException: Connection dropped by server?
                             Log.w("Unrecoverable");
 
                             try {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4382,6 +4382,7 @@ public void run() {
                     boolean autosave = extras.getBoolean("autosave");
                     if (needsEncryption && !autosave) {
                         args.putBoolean("needsEncryption", true);
+                        db.setTransactionSuccessful();
                         return draft;
                     }
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -103,9 +103,6 @@ public void uncaughtException(Thread thread, Throwable ex) {
             }
         });
 
-        Helper.enableComponent(this, ActivityMain.class, !BuildConfig.DEBUG);
-        Helper.enableComponent(this, ActivityMain.class.getName() + ".Debug", BuildConfig.DEBUG);
-
         Log.setup(this);
 
         upgrade(this);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -103,6 +103,9 @@ public void uncaughtException(Thread thread, Throwable ex) {
             }
         });
 
+        Helper.enableComponent(this, ActivityMain.class, !BuildConfig.DEBUG);
+        Helper.enableComponent(this, ActivityMain.class.getName() + ".Debug", BuildConfig.DEBUG);
+
         Log.setup(this);
 
         upgrade(this);

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -29,7 +29,6 @@
 import org.bouncycastle.asn1.x509.Extension;
 import org.bouncycastle.asn1.x509.GeneralName;
 import org.bouncycastle.asn1.x509.SubjectKeyIdentifier;
-import org.jetbrains.annotations.NotNull;
 
 import java.io.IOException;
 import java.net.Inet4Address;
@@ -1062,7 +1061,7 @@ String getFingerprint() {
             return fingerprint;
         }
 
-        @NotNull
+        @NonNull
         @Override
         public synchronized String toString() {
             return getCause().toString();

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -92,7 +92,6 @@
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 
-import org.jetbrains.annotations.NotNull;
 import org.openintents.openpgp.util.OpenPgpApi;
 
 import java.io.ByteArrayOutputStream;
@@ -301,7 +300,7 @@ public T get() throws ExecutionException, InterruptedException {
         }
 
         @Override
-        public T get(long timeout, @NotNull TimeUnit unit) throws ExecutionException, InterruptedException, TimeoutException {
+        public T get(long timeout, @NonNull TimeUnit unit) throws ExecutionException, InterruptedException, TimeoutException {
             return wrapped.get(timeout, unit);
         }
     }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1630,6 +1630,7 @@ static String truncate(String text, int at) {
         return preview + "…";
     }
 
+    @NonNull
     static String getText(Context context, String html) {
         final StringBuilder sb = new StringBuilder();
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1037,9 +1037,9 @@ private void checkIntent() {
                 onViewThread(intent);
 
             } else if (action.equals("widget")) {
-                long account = intent.getLongExtra("account", -1);
-                long folder = intent.getLongExtra("folder", -1);
-                String type = intent.getStringExtra("type");
+                long account = intent.getLongExtra("widget_account", -1);
+                long folder = intent.getLongExtra("widget_folder", -1);
+                String type = intent.getStringExtra("widget_type");
                 if (account > 0 && folder > 0 && !TextUtils.isEmpty(type)) {
                     if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED)) {
                         getSupportFragmentManager().popBackStack("messages", FragmentManager.POP_BACK_STACK_INCLUSIVE);

File: app/src/main/java/eu/faircode/email/WidgetUnified.java
Patch:
@@ -89,9 +89,9 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
 
             Intent thread = new Intent(context, ActivityView.class);
             thread.setAction("widget");
-            thread.putExtra("account", account);
-            thread.putExtra("folder", folder);
-            thread.putExtra("type", type);
+            thread.putExtra("widget_account", account);
+            thread.putExtra("widget_folder", folder);
+            thread.putExtra("widget_type", type);
             thread.putExtra("filter_archive", !EntityFolder.ARCHIVE.equals(type));
             thread.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             PendingIntent piItem = PendingIntent.getActivity(

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -747,7 +747,7 @@ boolean isBlockingSender(EntityMessage message, EntityFolder junk) throws JSONEx
         JSONObject jaction = new JSONObject(action);
         if (jaction.optInt("type", -1) != TYPE_MOVE)
             return false;
-        if (jaction.optInt("target", -1) != junk.id)
+        if (jaction.optLong("target", -1) != junk.id)
             return false;
 
         return true;

File: app/src/main/java/eu/faircode/email/ImageHelper.java
Patch:
@@ -493,8 +493,8 @@ static void fitDrawable(final Drawable d, final AnnotatedSource a, float scale,
         }
 
         Rect bounds = d.getBounds();
-        int w = Math.round(bounds.width() * scale);
-        int h = Math.round(bounds.height() * scale);
+        int w = Math.round(Helper.dp2pixels(view.getContext(), bounds.width()) * scale);
+        int h = Math.round(Helper.dp2pixels(view.getContext(), bounds.height()) * scale);
 
         if (a.width == 0 && a.height != 0)
             a.width = Math.round(a.height * w / (float) h);

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -280,7 +280,7 @@ public void connect(EntityAccount account) throws MessagingException {
                 account.certificate_alias, account.fingerprint);
         if (password != null) {
             DB db = DB.getInstance(context);
-            int count = db.account().setAccountPassword(account.id, account.password);
+            int count = db.account().setAccountPassword(account.id, password);
             Log.i(account.name + " token refreshed=" + count);
         }
     }
@@ -293,7 +293,7 @@ public void connect(EntityIdentity identity) throws MessagingException {
                 identity.certificate_alias, identity.fingerprint);
         if (password != null) {
             DB db = DB.getInstance(context);
-            int count = db.identity().setIdentityPassword(identity.id, identity.password);
+            int count = db.identity().setIdentityPassword(identity.id, password);
             Log.i(identity.email + " token refreshed=" + count);
         }
     }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -792,7 +792,7 @@ public boolean onScale(ScaleGestureDetector detector) {
                                 }
 
                             // Feedback
-                            String perc = Math.round(scale) + " %";
+                            String perc = Math.round(scale * 100) + " %";
                             if (toast != null)
                                 toast.cancel();
                             toast = ToastEx.makeText(context, perc, Toast.LENGTH_SHORT);

File: app/src/main/java/eu/faircode/email/WidgetUnified.java
Patch:
@@ -91,6 +91,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
             thread.setAction("widget");
             thread.putExtra("account", account);
             thread.putExtra("folder", folder);
+            thread.putExtra("type", type);
             thread.putExtra("filter_archive", !EntityFolder.ARCHIVE.equals(type));
             thread.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             PendingIntent piItem = PendingIntent.getActivity(

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3796,7 +3796,7 @@ public FilterResult tail(Node node, int depth) {
 
                         File file = data.draft.getFile(context);
 
-                        Document doc = (data.draft.uid == null ? Document.createShell("") : JsoupEx.parse(file));
+                        Document doc = (data.draft.content ? JsoupEx.parse(file) : Document.createShell(""));
                         doc.select("div[fairemail=signature]").remove();
                         Elements ref = doc.select("div[fairemail=reference]");
                         ref.remove();

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -208,7 +208,8 @@ private static Boolean isMetered(Context context) {
 
         // onLost [... state: DISCONNECTED/DISCONNECTED ... available: true]
         NetworkInfo ani = cm.getNetworkInfo(active);
-        if (ani == null || !ani.isConnected()) {
+        if (ani == null || ani.getState() == NetworkInfo.State.DISCONNECTED) {
+            // State can incorrectly be SUSPENDED
             Log.i("isMetered: no active info ani=" + ani);
             return null;
         }

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -123,7 +123,7 @@ public void onClick(View v) {
             }
         });
 
-        rvAccount.setHasFixedSize(false);
+        rvAccount.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvAccount.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentAnswers.java
Patch:
@@ -75,7 +75,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvAnswer.setHasFixedSize(false);
+        rvAnswer.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvAnswer.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentCertificates.java
Patch:
@@ -63,7 +63,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvCertificate.setHasFixedSize(false);
+        rvCertificate.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvCertificate.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentContacts.java
Patch:
@@ -68,7 +68,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvContacts.setHasFixedSize(false);
+        rvContacts.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvContacts.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -160,7 +160,7 @@ public void onClick(View v) {
             }
         });
 
-        rvFolder.setHasFixedSize(false);
+        rvFolder.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvFolder.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -77,7 +77,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvIdentity.setHasFixedSize(false);
+        rvIdentity.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvIdentity.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -62,7 +62,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvLog.setHasFixedSize(false);
+        rvLog.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvLog.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -508,7 +508,7 @@ public void onClick(View v) {
             }
         });
 
-        rvMessage.setHasFixedSize(false);
+        rvMessage.setHasFixedSize(true);
 
         int threads = prefs.getInt("query_threads", 4);
         if (threads >= 4)

File: app/src/main/java/eu/faircode/email/FragmentOperations.java
Patch:
@@ -66,7 +66,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvOperation.setHasFixedSize(false);
+        rvOperation.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvOperation.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/FragmentRules.java
Patch:
@@ -90,7 +90,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         // Wire controls
 
-        rvRule.setHasFixedSize(false);
+        rvRule.setHasFixedSize(true);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvRule.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/ContentLoadingProgressBar.java
Patch:
@@ -60,6 +60,7 @@ public void setVisibility(int visibility) {
             ApplicationEx.getMainHandler().postDelayed(delayedShow, VISIBILITY_DELAY);
         } else {
             ApplicationEx.getMainHandler().removeCallbacks(delayedShow);
+            delaying = false;
             super.setVisibility(visibility);
         }
     }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -148,7 +148,7 @@ public class Helper {
     static final String PGP_BEGIN_MESSAGE = "-----BEGIN PGP MESSAGE-----";
     static final String PGP_END_MESSAGE = "-----END PGP MESSAGE-----";
 
-    static final String FAQ_URI = "https://github.com/M66B/FairEmail/blob/master/FAQ.md";
+    static final String FAQ_URI = "https://email.faircode.eu/faq/";
     static final String XDA_URI = "https://forum.xda-developers.com/showthread.php?t=3824168";
     static final String SUPPORT_URI = "https://contact.faircode.eu/?product=fairemailsupport";
     static final String TEST_URI = "https://play.google.com/apps/testing/" + BuildConfig.APPLICATION_ID;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2207,7 +2207,7 @@ protected Object onExecute(Context context, Bundle args) throws Throwable {
                     Properties props = MessageHelper.getSessionProperties();
                     Session isession = Session.getInstance(props, null);
                     MimeMessage imessage = new MimeMessage(isession);
-                    MessageHelper.build(context, draft, attachments, identity, false, imessage);
+                    MessageHelper.build(context, draft, attachments, identity, true, imessage);
 
                     if (OpenPgpApi.ACTION_GET_SIGN_KEY_ID.equals(data.getAction())) {
                         // Serialize content
@@ -2501,7 +2501,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 Properties props = MessageHelper.getSessionProperties();
                 Session isession = Session.getInstance(props, null);
                 MimeMessage imessage = new MimeMessage(isession);
-                MessageHelper.build(context, draft, attachments, identity, false, imessage);
+                MessageHelper.build(context, draft, attachments, identity, true, imessage);
                 imessage.saveChanges();
                 BodyPart bpContent = new MimeBodyPart() {
                     @Override

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -425,6 +425,7 @@ public boolean onLongClick(View v) {
                 onMenuAddresses();
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
                 prefs.edit().putBoolean("cc_bcc", grpAddresses.getVisibility() == View.VISIBLE).apply();
+                ToastEx.makeText(v.getContext(), R.string.title_default_changed, Toast.LENGTH_LONG).show();
                 return true;
             }
         });

File: app/src/main/java/eu/faircode/email/ActivityDSN.java
Patch:
@@ -128,7 +128,7 @@ protected void onException(Bundle args, Throwable ex) {
                     Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG)
                             .setGestureInsetBottomIgnored(true).show();
                 else
-                    Log.unexpectedError(getSupportFragmentManager(), ex);
+                    Log.unexpectedError(getSupportFragmentManager(), ex, false);
             }
         }.execute(this, args, "disposition:decode");
     }

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -270,7 +270,7 @@ protected void onException(Bundle args, @NonNull Throwable ex) {
                     Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG)
                             .setGestureInsetBottomIgnored(true).show();
                 else
-                    Log.unexpectedError(getSupportFragmentManager(), ex);
+                    Log.unexpectedError(getSupportFragmentManager(), ex, false);
             }
         }.execute(this, args, "eml:decode");
     }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4257,7 +4257,7 @@ public void run() {
                         Document d;
                         if (extras != null && extras.containsKey("html")) {
                             // Save current revision
-                            Document c = HtmlHelper.sanitizeCompose(context, body, true);
+                            Document c = JsoupEx.parse(body);
 
                             for (Element e : ref)
                                 c.body().appendChild(e);
@@ -4266,7 +4266,7 @@ public void run() {
 
                             Helper.writeText(draft.getFile(context, draft.revision), c.html());
 
-                            d = HtmlHelper.sanitizeCompose(context, extras.getString("html"), true);
+                            d = JsoupEx.parse(extras.getString("html"));
                         } else {
                             d = HtmlHelper.sanitizeCompose(context, body, true);
 

File: app/src/main/java/eu/faircode/email/HtmlEx.java
Patch:
@@ -257,7 +257,7 @@ public HtmlEx(Context context){
                     isInBulletList = null;
                 }
 
-                String tagType = isBulletListItem != null ? "li" : "p";
+                String tagType = isBulletListItem != null ? "li" : "span";
                 out.append("<").append(tagType)
                         .append(getTextDirection(text, i, next))
                         .append(getTextStyles(text, i, next, isBulletListItem == null, true))
@@ -268,6 +268,8 @@ public HtmlEx(Context context){
                 out.append("</");
                 out.append(tagType);
                 out.append(">\n");
+                if (isBulletListItem == null)
+                    out.append("<br>\n");
 
                 if (next == end && isInBulletList != null) {
                     out.append(isInBulletList ? "</ul>\n" : "</ol>\n");

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -283,7 +283,7 @@ private static void setupBugsnag(final Context context) {
         config.setAutoTrackSessions(false);
 
         ErrorTypes etypes = new ErrorTypes();
-        etypes.setAnrs(false);
+        etypes.setAnrs(BuildConfig.DEBUG);
         etypes.setNdkCrashes(false);
         config.setEnabledErrorTypes(etypes);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4449,7 +4449,7 @@ else if (attachment.isAttachment())
                                 if (identity.unicode)
                                     props.put("mail.mime.allowutf8", "true");
                                 Session isession = Session.getInstance(props, null);
-                                Message imessage = MessageHelper.from(context, draft, identity, isession, true);
+                                Message imessage = MessageHelper.from(context, draft, identity, isession, false);
 
                                 File file = draft.getRawFile(context);
                                 try (OutputStream os = new BufferedOutputStream(new FileOutputStream(file))) {

File: app/src/main/java/com/sun/mail/imap/IMAPFolder.java
Patch:
@@ -3963,7 +3963,8 @@ protected void keepConnectionAlive(boolean keepStoreAlive)
 		protocol.noop(); 
 	}
 
-        if (keepStoreAlive && ((IMAPStore)store).hasSeparateStoreConnection()) {
+        if (keepStoreAlive && ((IMAPStore)store).hasSeparateStoreConnection() &&
+				!((IMAPStore)store).isStoreConnectionInUse()) {
             IMAPProtocol p = null;
 	    try {
 		p = ((IMAPStore)store).getFolderStoreProtocol();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -2286,7 +2286,6 @@ private void ensureMessage(boolean body) throws MessagingException {
 
     static int getMessageCount(Folder folder) throws MessagingException {
         // Keep alive
-        int total = folder.getMessageCount();
         try {
             int count = 0;
             for (Message message : folder.getMessages())
@@ -2295,8 +2294,8 @@ static int getMessageCount(Folder folder) throws MessagingException {
 
             return count;
         } catch (Throwable ex) {
-            Log.w(ex);
-            return total;
+            Log.e(ex);
+            return -1;
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -485,8 +485,7 @@ public void onTextChanged(CharSequence text, int start, int before, int count) {
                 if (activity != null)
                     activity.onUserInteraction();
 
-                if (before == 0 && count == 1 && start > 0 &&
-                        text.charAt(start) == '\n' && text.charAt(start - 1) == '\n') {
+                if (before == 0 && count == 1 && start > 0 && text.charAt(start) == '\n') {
                     // break block quotes
                     boolean qbroken = false;
                     SpannableStringBuilder ssb = new SpannableStringBuilder(text);
@@ -519,7 +518,7 @@ public void onTextChanged(CharSequence text, int start, int before, int count) {
                     for (BulletSpan span : bullets) {
                         int s = ssb.getSpanStart(span);
                         int e = ssb.getSpanEnd(span);
-                        int f = ssb.getSpanFlags(span);
+                        int f = ssb.getSpanFlags(span) | Spanned.SPAN_PARAGRAPH;
                         Log.i("Span " + s + "..." + e + " start=" + start);
 
                         if (s > 0 &&

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -563,7 +563,8 @@ static void build(Context context, EntityMessage message, List<EntityAttachment>
 
             if (send) {
                 for (Element child : document.body().children())
-                    if (TextUtils.isEmpty(child.attr("fairemail"))) {
+                    if (!TextUtils.isEmpty(child.text()) &&
+                            TextUtils.isEmpty(child.attr("fairemail"))) {
                         String style = HtmlHelper.mergeStyles(
                                 "font-family:" + compose_font, child.attr("style"));
                         child.attr("style", style);

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -49,7 +49,7 @@ public WebViewEx(Context context) {
 
         WebSettings settings = getSettings();
         settings.setUseWideViewPort(true);
-        settings.setLoadWithOverviewMode(true);
+        settings.setLoadWithOverviewMode(false);
 
         settings.setBuiltInZoomControls(true);
         settings.setDisplayZoomControls(false);
@@ -75,7 +75,7 @@ void init(
 
         this.height = (height == 0 ? getMinimumHeight() : height);
 
-        setInitialScale(size == 0 ? 1 : Math.round(size * 100));
+        setInitialScale(size == 0 ? 0 : Math.round(size * 100));
 
         if (position != null) {
             setScrollX(position.first);

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -23,6 +23,7 @@
 import androidx.room.Dao;
 import androidx.room.Insert;
 import androidx.room.Query;
+import androidx.room.Transaction;
 
 import java.util.List;
 
@@ -72,6 +73,7 @@ public interface DaoFolder {
             " WHERE account.`synchronize`")
     List<TupleFolderSort> getSortedFolders();
 
+    @Transaction
     @Query("SELECT folder.*" +
             ", account.id AS accountId, account.pop AS accountProtocol, account.`order` AS accountOrder" +
             ", account.name AS accountName, account.state AS accountState" +

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -347,7 +347,7 @@ private int load_server(final State state) throws MessagingException, IOExceptio
 
                 db.folder().setFolderError(browsable.id, null);
 
-                int count = state.ifolder.getMessageCount();
+                int count = MessageHelper.getMessageCount(state.ifolder);
                 db.folder().setFolderTotal(browsable.id, count < 0 ? null : count);
 
                 if (criteria == null) {

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1092,7 +1092,7 @@ public void folderDeleted(FolderEvent e) {
                             db.folder().setFolderState(folder.id, "connected");
                             db.folder().setFolderError(folder.id, null);
 
-                            int count = ifolder.getMessageCount();
+                            int count = MessageHelper.getMessageCount(ifolder);
                             db.folder().setFolderTotal(folder.id, count < 0 ? null : count);
 
                             Log.i(account.name + " folder " + folder.name + " flags=" + ifolder.getPermanentFlags());
@@ -1328,7 +1328,7 @@ public void run() {
                                                                     db.folder().setFolderState(folder.id, "connected");
                                                                     db.folder().setFolderError(folder.id, null);
 
-                                                                    int count = ifolder.getMessageCount();
+                                                                    int count = MessageHelper.getMessageCount(ifolder);
                                                                     db.folder().setFolderTotal(folder.id, count < 0 ? null : count);
 
                                                                     Log.i(account.name + " folder " + folder.name + " flags=" + ifolder.getPermanentFlags());

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -309,9 +309,9 @@ static Document fixEdit(Document document) {
             Element holder = body.child(body.childrenSize() - 1);
             if ("p".equals(holder.tagName())) {
                 holder.tagName("span");
-                int c = holder.childrenSize();
-                Element last = (c > 0 ? holder.child(c - 1) : null);
-                if (last == null || !"br".equals(last.tagName()))
+                int c = holder.childNodeSize();
+                Node last = (c > 0 ? holder.childNode(c - 1) : null);
+                if (last == null || !"br".equals(last.nodeName()))
                     holder.appendChild(new Element("br"));
             }
         }

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -55,6 +55,7 @@
 import androidx.lifecycle.Lifecycle;
 import androidx.preference.PreferenceManager;
 
+import java.io.IOException;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 
@@ -284,7 +285,7 @@ protected void onExecuted(Bundle args, Void data) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Log.unexpectedError(getParentFragmentManager(), ex);
+                        Log.unexpectedError(getParentFragmentManager(), ex, !(ex instanceof IOException));
                     }
                 }.execute(FragmentOptionsPrivacy.this, new Bundle(), "disconnect");
             }

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -159,7 +159,7 @@ else if (viewType == AdapterMessage.ViewType.SEARCH)
                             db.message().pagedThread(
                                     args.account, args.thread,
                                     args.threading ? null : args.id,
-                                    args.filter_archive,
+                                    args.filter_archive && args.threading,
                                     args.ascending,
                                     args.debug),
                             configThread);

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -276,7 +276,7 @@ protected void onExecuted(Bundle args, EntityFolder folder) {
                     cbNavigation.setChecked(folder == null ? false : folder.navigation);
                     cbNotify.setChecked(folder == null ? false : folder.notify);
                     cbSynchronize.setChecked(folder == null || folder.synchronize);
-                    cbPoll.setChecked(folder == null ? false : folder.poll);
+                    cbPoll.setChecked(folder == null ? true : folder.poll);
                     etPoll.setText(folder == null ? null : Integer.toString(folder.poll_factor));
                     tvPoll.setText(getString(R.string.title_factor_minutes, interval));
                     cbDownload.setChecked(folder == null ? true : folder.download);

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -287,10 +287,10 @@ public void onOpen(@NonNull SupportSQLiteDatabase db) {
 
     private static void createTriggers(@NonNull SupportSQLiteDatabase db) {
         List<String> image = new ArrayList<>();
-        for (String img : EntityAttachment.IMAGE_TYPES)
+        for (String img : Helper.IMAGE_TYPES)
             image.add("'" + img + "'");
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
-            for (String img : EntityAttachment.IMAGE_TYPES8)
+            for (String img : Helper.IMAGE_TYPES8)
                 image.add("'" + img + "'");
         String images = TextUtils.join(",", image);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4129,7 +4129,7 @@ protected void onExecuted(Bundle args, File file) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Log.unexpectedError(parentFragment.getParentFragmentManager(), ex);
+                        Log.unexpectedError(parentFragment.getParentFragmentManager(), ex, false);
                     }
                 }.execute(context, owner, args, "view:cid");
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1346,7 +1346,7 @@ public void run() {
                                                                         ServiceSynchronize.this,
                                                                         folder.name + " " + Log.formatThrowable(ex, false));
                                                                 db.folder().setFolderError(folder.id, Log.formatThrowable(ex));
-                                                                //state.error(ex);
+                                                                state.error(ex);
                                                             } finally {
                                                                 if (shouldClose) {
                                                                     if (ifolder != null && ifolder.isOpen()) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4869,9 +4869,9 @@ public boolean onKeyPressed(KeyEvent event) {
 
             switch (event.getKeyCode()) {
                 case KeyEvent.KEYCODE_VOLUME_UP:
-                    return (volumenav && onNext(context));
+                    return (down && volumenav && onNext(context));
                 case KeyEvent.KEYCODE_VOLUME_DOWN:
-                    return (volumenav && onPrevious(context));
+                    return (down && volumenav && onPrevious(context));
                 case KeyEvent.KEYCODE_A:
                     if (viewType == AdapterMessage.ViewType.THREAD)
                         return (up && onArchive(context));

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -977,6 +977,9 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
 
                 file.delete();
 
+                for (Flags.Flag flag : imessage.getFlags().getSystemFlags())
+                    icopy.setFlag(flag, true);
+
                 icopies.add(icopy);
             }
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -99,6 +99,9 @@ public void onChanged(TupleUnsent unsent) {
                     } catch (Throwable ex) {
                         Log.w(ex);
                     }
+
+                    if (unsent == null || unsent.count == 0)
+                        stopSelf();
                 }
             }
         });
@@ -110,9 +113,6 @@ public void onChanged(List<TupleOperationEx> operations) {
                 if (operations == null)
                     operations = new ArrayList<>();
 
-                if (operations.size() == 0)
-                    stopSelf();
-
                 final List<TupleOperationEx> process = new ArrayList<>();
 
                 List<Long> ops = new ArrayList<>();

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -72,7 +72,8 @@ public void onCreate() {
         getMainLooper().setMessageLogging(new Printer() {
             @Override
             public void println(String msg) {
-                Log.d("Loop: " + msg);
+                if (BuildConfig.DEBUG)
+                    Log.d("Loop: " + msg);
             }
         });
 

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -329,7 +329,8 @@ private int load_server(final State state) throws MessagingException, IOExceptio
 
                 EntityLog.log(context, "Boundary server connecting account=" + account.name);
                 state.iservice = new EmailService(
-                        context, account.getProtocol(), account.realm, account.insecure, EmailService.PURPOSE_SEARCH, debug);
+                        context, account.getProtocol(), account.realm, account.insecure,
+                        EmailService.PURPOSE_SEARCH, debug || BuildConfig.DEBUG);
                 state.iservice.setPartialFetch(account.partial_fetch);
                 state.iservice.setIgnoreBodyStructureSize(account.ignore_size);
                 state.iservice.connect(account);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -134,6 +134,8 @@ static void setSystemProperties(Context context) {
         System.setProperty("mail.mime.multipart.ignoreexistingboundaryparameter", "true"); // default false
         System.setProperty("mail.mime.multipart.ignoremissingendboundary", "true"); // default true
         System.setProperty("mail.mime.multipart.allowempty", "true"); // default false
+
+        //System.setProperty("mail.imap.parse.debug", "true");
     }
 
     static Properties getSessionProperties() {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -245,6 +245,7 @@ private enum State {NONE, LOADING, LOADED}
 
     private boolean prefix_once = false;
     private boolean monospaced = false;
+    private String compose_font;
     private Integer encrypt = null;
     private boolean media = true;
     private boolean compact = false;
@@ -292,6 +293,7 @@ public void onCreate(Bundle savedInstanceState) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         prefix_once = prefs.getBoolean("prefix_once", true);
         monospaced = prefs.getBoolean("monospaced", false);
+        compose_font = prefs.getString("compose_font", monospaced ? "monospace" : "sans-serif");
         media = prefs.getBoolean("compose_media", true);
         compact = prefs.getBoolean("compose_compact", false);
         zoom = prefs.getInt("compose_zoom", compact ? 0 : 1);
@@ -610,7 +612,7 @@ public void onClick(View v) {
             }
         });
 
-        etBody.setTypeface(monospaced ? Typeface.MONOSPACE : Typeface.DEFAULT);
+        etBody.setTypeface(Typeface.create(compose_font, Typeface.NORMAL));
         tvReference.setTypeface(monospaced ? Typeface.MONOSPACE : Typeface.DEFAULT);
         tvReference.setMovementMethod(LinkMovementMethod.getInstance());
 

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -348,6 +348,7 @@ public boolean equals(Object obj) {
                     this.poll_interval.equals(other.poll_interval) &&
                     this.partial_fetch == other.partial_fetch &&
                     this.ignore_size == other.ignore_size &&
+                    this.use_date == other.use_date &&
                     Objects.equals(this.quota_usage, other.quota_usage) &&
                     Objects.equals(this.quota_limit, other.quota_limit) &&
                     Objects.equals(this.created, other.created) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1836,7 +1836,7 @@ private void bindBody(TupleMessageEx message, final boolean scroll) {
                                     at android.webkit.WebView.<init>(WebView.java:574)
                                     at android.webkit.WebView.<init>(WebView.java:564)
                          */
-                        Log.unexpectedError(parentFragment.getParentFragmentManager(), ex);
+                        Log.unexpectedError(parentFragment.getParentFragmentManager(), ex, false);
                         return;
                     }
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1049,7 +1049,7 @@ public void onClick(DialogInterface dialog, int which) {
                             new SimpleTask<Long>() {
                                 @Override
                                 protected Long onExecute(Context context, Bundle args) throws Throwable {
-                                    return Log.getDebugInfo(context, R.string.title_crash_info_remark, ex, null).id;
+                                    return Log.getDebugInfo(context, R.string.title_unexpected_info_remark, ex, null).id;
                                 }
 
                                 @Override

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -26,7 +26,6 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.webkit.MimeTypeMap;
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.ProgressBar;
@@ -110,7 +109,7 @@ private void bindTo(EntityAttachment attachment) {
             ibDelete.setVisibility(readonly ? View.GONE : View.VISIBLE);
 
             int resid = 0;
-            String extension = MimeTypeMap.getSingleton().getExtensionFromMimeType(attachment.getMimeType());
+            String extension = Helper.guessExtension(attachment.getMimeType());
             if (extension != null)
                 resid = context.getResources().getIdentifier("file_" + extension, "drawable", context.getPackageName());
             if (resid == 0)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2879,7 +2879,9 @@ private static EntityAttachment addAttachment(
                 ftype = null;
             }
 
-        if (TextUtils.isEmpty(ftype) || "*/*".equals(ftype))
+        if (TextUtils.isEmpty(ftype) ||
+                "*/*".equals(ftype) ||
+                "application/octet-stream".equals(ftype))
             ftype = Helper.guessMimeType(fname);
 
         if (fsize != null && fsize <= 0)

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -226,7 +226,8 @@ protected void onExecuted(final Bundle args, List<TupleFolderEx> folders) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Log.unexpectedError(getParentFragmentManager(), ex);
+                tvNoFolder.setText(Log.formatThrowable(ex));
+                tvNoFolder.setVisibility(View.VISIBLE);
             }
         }.execute(this, args, "folder:select");
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -860,7 +860,7 @@ private static void onAdd(Context context, JSONArray jargs, EntityAccount accoun
         if (istore.hasCapability("UIDPLUS")) {
             // https://tools.ietf.org/html/rfc4315
             AppendUID[] uids = ifolder.appendUIDMessages(new Message[]{imessage});
-            if (uids != null && uids.length > 0 && uids[0].uid > 0) {
+            if (uids != null && uids.length > 0 && uids[0] != null && uids[0].uid > 0) {
                 newuid = uids[0].uid;
                 Log.i(folder.name + " appended uid=" + newuid);
             }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1208,7 +1208,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
             for (EntityAccount account : accounts)
                 try {
                     JSONObject jaccount = account.toJSON();
-                    jaccount.put("state", account.state == null ? "null" : account.separator);
+                    jaccount.put("state", account.state == null ? "null" : account.state);
                     jaccount.put("warning", account.warning);
                     jaccount.put("error", account.error);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -391,7 +391,7 @@ private void setOptions() {
         boolean pro = ActivityBilling.isPro(getContext());
 
         swEnabled.setChecked(prefs.getBoolean("enabled", true));
-        swOptimize.setChecked(prefs.getBoolean("auto_optimize", true));
+        swOptimize.setChecked(prefs.getBoolean("auto_optimize", false));
 
         int pollInterval = prefs.getInt("poll_interval", ServiceSynchronize.DEFAULT_POLL_INTERVAL);
         int[] pollIntervalValues = getResources().getIntArray(R.array.pollIntervalValues);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1653,7 +1653,7 @@ else if (backoff < CONNECT_BACKOFF_AlARM_MAX * 60)
 
     private void optimizeAccount(Context context, EntityAccount account, String reason) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean auto_optimize = prefs.getBoolean("auto_optimize", true);
+        boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
         if (!auto_optimize)
             return;
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -1196,7 +1196,7 @@ private static void attachAccounts(Context context, long id, int sequence) throw
             for (EntityAccount account : accounts)
                 try {
                     JSONObject jaccount = account.toJSON();
-                    jaccount.put("state", account.state);
+                    jaccount.put("state", account.state == null ? "null" : account.separator);
                     jaccount.put("warning", account.warning);
                     jaccount.put("error", account.error);
 
@@ -1222,8 +1222,8 @@ private static void attachAccounts(Context context, long id, int sequence) throw
                         jfolder.put("total", folder.total);
                         jfolder.put("initialize", folder.initialize);
                         jfolder.put("subscribed", folder.subscribed);
-                        jfolder.put("state", folder.state);
-                        jfolder.put("sync_state", folder.sync_state);
+                        jfolder.put("state", folder.state == null ? "null" : folder.state);
+                        jfolder.put("sync_state", folder.sync_state == null ? "null" : folder.sync_state);
                         jfolder.put("read_only", folder.read_only);
                         jfolder.put("selectable", folder.selectable);
                         jfolder.put("inferiors", folder.inferiors);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -278,7 +278,9 @@ else if (version < 751) {
         } else if (version < 1181) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
                 editor.remove("background_service");
-        } else if (version < 1229) {
+        } else if (version < 1195)
+            editor.remove("auto_optimize");
+        else if (version < 1229) {
             boolean monospaced = prefs.getBoolean("monospaced", false);
             if (monospaced && !BuildConfig.DEBUG)
                 editor.putBoolean("text_font", false);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -278,9 +278,7 @@ else if (version < 751) {
         } else if (version < 1181) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !BuildConfig.DEBUG)
                 editor.remove("background_service");
-        } else if (version < 1195)
-            editor.remove("auto_optimize");
-        else if (version < 1229) {
+        } else if (version < 1229) {
             boolean monospaced = prefs.getBoolean("monospaced", false);
             if (monospaced && !BuildConfig.DEBUG)
                 editor.putBoolean("text_font", false);

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -280,7 +280,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         // Observe account
         if (account < 0)
-            setSubtitle(R.string.title_folders_unified);
+            setSubtitle(primary ? R.string.title_folder_primary : R.string.title_folders_unified);
         else
             db.account().liveAccount(account).observe(getViewLifecycleOwner(), new Observer<EntityAccount>() {
                 @Override

File: app/src/main/java/eu/faircode/email/ActivityDSN.java
Patch:
@@ -125,7 +125,8 @@ protected void onExecuted(Bundle args, Result result) {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
-                    Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG).show();
+                    Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG)
+                            .setGestureInsetBottomIgnored(true).show();
                 else
                     Log.unexpectedError(getSupportFragmentManager(), ex);
             }

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -301,7 +301,8 @@ private void onImageSelected(Uri uri) {
                 etText.setSelection(start + 2);
             }
         } catch (SecurityException ex) {
-            Snackbar sb = Snackbar.make(view, R.string.title_no_stream, Snackbar.LENGTH_INDEFINITE);
+            Snackbar sb = Snackbar.make(view, R.string.title_no_stream, Snackbar.LENGTH_INDEFINITE)
+                    .setGestureInsetBottomIgnored(true);
             sb.setAction(R.string.title_info, new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {

File: app/src/main/java/eu/faircode/email/AdapterRule.java
Patch:
@@ -332,8 +332,8 @@ protected void onExecuted(Bundle args, Integer applied) {
 
                             Snackbar.make(
                                     parentFragment.getView(),
-                                    context.getString(R.string.title_rule_applied, applied),
-                                    Snackbar.LENGTH_LONG).show();
+                                    context.getString(R.string.title_rule_applied, applied), Snackbar.LENGTH_LONG)
+                                    .setGestureInsetBottomIgnored(true).show();
                         }
 
                         @Override

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -520,7 +520,8 @@ protected void onExecuted(Bundle args, Boolean dirty) {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
-                    Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
+                    Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG)
+                            .setGestureInsetBottomIgnored(true).show();
                 else {
                     tvError.setText(Log.formatThrowable(ex, false));
                     grpError.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/FragmentPro.java
Patch:
@@ -173,7 +173,8 @@ public void onError(final String message) {
                 if (view == null)
                     return;
 
-                Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE);
+                Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE)
+                        .setGestureInsetBottomIgnored(true);
                 snackbar.setAction(R.string.title_setup_help, new View.OnClickListener() {
                     @Override
                     public void onClick(View view) {

File: app/src/main/java/eu/faircode/email/StyleHelper.java
Patch:
@@ -96,8 +96,8 @@ static boolean apply(int action, View anchor, EditText etBody, Object... args) {
 
                     String[] fontNames = anchor.getResources().getStringArray(R.array.fontNameNames);
                     for (int i = 0; i < fontNames.length; i++)
-                        popupMenu.getMenu().add(R.id.group_style_font, i, Menu.NONE, fontNames[i]);
-                    popupMenu.getMenu().add(R.id.group_style_font, fontNames.length, Menu.NONE, R.string.title_style_font_default);
+                        popupMenu.getMenu().add(R.id.group_style_font, i, 3, fontNames[i]);
+                    popupMenu.getMenu().add(R.id.group_style_font, fontNames.length, 3, R.string.title_style_font_default);
 
                     popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                         @Override

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -44,7 +44,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         getSupportFragmentManager().addOnBackStackChangedListener(this);
 
-        handle(getIntent());
+        if (getSupportFragmentManager().getBackStackEntryCount() == 0)
+            handle(getIntent());
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/BehaviorBottomMargin.java
Patch:
@@ -44,7 +44,7 @@ public boolean layoutDependsOn(@NonNull CoordinatorLayout parent, @NonNull View
 
     @Override
     public boolean onDependentViewChanged(@NonNull CoordinatorLayout parent, @NonNull View child, @NonNull View dependency) {
-        setMargin(child, dependency.getHeight());
+        setMargin(child, dependency.isAttachedToWindow() ? dependency.getHeight() : 0);
         return true;
     }
 

File: app/src/main/java/eu/faircode/email/BehaviorBottomPadding.java
Patch:
@@ -44,7 +44,7 @@ public boolean layoutDependsOn(@NonNull CoordinatorLayout parent, @NonNull View
 
     @Override
     public boolean onDependentViewChanged(@NonNull CoordinatorLayout parent, @NonNull View child, @NonNull View dependency) {
-        setPadding(child, dependency.getHeight());
+        setPadding(child, dependency.isAttachedToWindow() ? dependency.getHeight() : 0);
         return true;
     }
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -287,6 +287,8 @@ else if (version < 1229) {
         } else if (version < 1238) {
             if (!prefs.contains("subject_ellipsize"))
                 editor.putString("subject_ellipsize", "middle");
+            if (!prefs.contains("auto_optimize"))
+                editor.putBoolean("auto_optimize", false);
         }
 
         if (version < BuildConfig.VERSION_CODE)

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -391,7 +391,7 @@ private void setOptions() {
                 break;
             }
 
-        swOptimize.setChecked(prefs.getBoolean("auto_optimize", false));
+        swOptimize.setChecked(prefs.getBoolean("auto_optimize", true));
         grpExempted.setVisibility(pollInterval == 0 ? View.GONE : View.VISIBLE);
 
         swSchedule.setChecked(prefs.getBoolean("schedule", false) && pro);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1652,7 +1652,7 @@ else if (backoff < CONNECT_BACKOFF_AlARM_MAX * 60)
 
     private void optimizeAccount(Context context, EntityAccount account, String reason) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
+        boolean auto_optimize = prefs.getBoolean("auto_optimize", true);
         if (!auto_optimize)
             return;
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -284,6 +284,9 @@ else if (version < 1229) {
             boolean monospaced = prefs.getBoolean("monospaced", false);
             if (monospaced && !BuildConfig.DEBUG)
                 editor.putBoolean("text_font", false);
+        } else if (version < 1238) {
+            if (!prefs.contains("subject_ellipsize"))
+                editor.putString("subject_ellipsize", "middle");
         }
 
         if (version < BuildConfig.VERSION_CODE)

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -848,7 +848,7 @@ private void setOptions() {
         swSubjectItalic.setChecked(prefs.getBoolean("subject_italic", true));
         swHighlightSubject.setChecked(prefs.getBoolean("highlight_subject", false));
 
-        String subject_ellipsize = prefs.getString("subject_ellipsize", "middle");
+        String subject_ellipsize = prefs.getString("subject_ellipsize", "full");
         String[] ellipsizeValues = getResources().getStringArray(R.array.ellipsizeValues);
         for (int pos = 0; pos < startupValues.length; pos++)
             if (ellipsizeValues[pos].equals(subject_ellipsize)) {

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -494,7 +494,7 @@ private boolean onActionTts(Context context, EntityMessage message, JSONObject j
         Resources res = context.createConfigurationContext(configuration).getResources();
 
         StringBuilder sb = new StringBuilder();
-        sb.append(context.getString(R.string.title_rule_tts_prefix)).append(". ");
+        sb.append(res.getString(R.string.title_rule_tts_prefix)).append(". ");
 
         if (message.from != null && message.from.length > 0)
             sb.append(res.getString(R.string.title_rule_tts_from))

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4314,7 +4314,7 @@ else if (action == R.id.action_redo)
                                     else
                                         id = R.string.title_draft_saved;
 
-                                    ToastEx.makeText(getContext(),
+                                    ToastEx.makeText(context,
                                             getString(id) +
                                                     (BuildConfig.DEBUG ? ":" + draft.revision : ""),
                                             Toast.LENGTH_LONG).show();

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4137,7 +4137,7 @@ public void run() {
 
                     if (action == R.id.action_undo || action == R.id.action_redo) {
                         if (action == R.id.action_undo) {
-                            if (!dirty && revision > 1)
+                            if (revision > 1)
                                 draft.revision = revision - 1;
                             else
                                 draft.revision = revision;

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -213,7 +213,9 @@ boolean replySelf(List<TupleIdentityEx> identities, long account) {
         if (identities != null && senders != null)
             for (Address sender : senders)
                 for (TupleIdentityEx identity : identities)
-                    if (identity.account == account && identity.similarAddress(sender))
+                    if (identity.account == account &&
+                            identity.self &&
+                            identity.similarAddress(sender))
                         return true;
 
         return false;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -940,6 +940,9 @@ public void notification(StoreEvent e) {
                                 }
                                 throw ex;
                             }
+                        } else {
+                            if (!BuildConfig.PLAY_STORE_RELEASE)
+                                Log.e(ex);
                         }
 
                         // Report account connection error

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -364,7 +364,8 @@ private void processOperations(List<TupleOperationEx> ops) {
                                 ex instanceof OutOfMemoryError ||
                                 ex instanceof MessageRemovedException ||
                                 ex instanceof FileNotFoundException ||
-                                ex instanceof AuthenticationFailedException ||
+                                (ex instanceof AuthenticationFailedException &&
+                                        !ConnectionHelper.isIoError(ex)) ||
                                 ex instanceof SendFailedException ||
                                 ex instanceof IllegalArgumentException) {
                             Log.w("Unrecoverable");

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -151,8 +151,6 @@ private void bindTo(EntityAttachment attachment) {
             StringBuilder sb = new StringBuilder();
             sb.append(attachment.type);
             if (debug || BuildConfig.DEBUG) {
-                if (attachment.disposition != null)
-                    sb.append(' ').append(attachment.disposition);
                 if (attachment.cid != null)
                     sb.append(' ').append(attachment.cid);
                 if (attachment.isEncryption())

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -248,6 +248,7 @@ public class AdapterMessage extends RecyclerView.Adapter<AdapterMessage.ViewHold
     private boolean preview;
     private boolean preview_italic;
     private int preview_lines;
+    private int message_zoom;
     private boolean attachments_alt;
     private boolean thumbnails;
     private boolean contrast;
@@ -1796,7 +1797,7 @@ private void bindBody(TupleMessageEx message, final boolean scroll) {
                 properties.setValue("images", message.id, true);
             }
 
-            float size = properties.getSize(message.id, show_full ? 0 : textSize);
+            float size = properties.getSize(message.id, show_full ? 0 : textSize * message_zoom / 100f);
             int height = properties.getHeight(message.id, 0);
             Pair<Integer, Integer> position = properties.getPosition(message.id);
             Log.i("Bind size=" + size + " height=" + height);
@@ -4996,6 +4997,7 @@ else if (message.signed > 0)
         this.preview = prefs.getBoolean("preview", false);
         this.preview_italic = prefs.getBoolean("preview_italic", true);
         this.preview_lines = prefs.getInt("preview_lines", 2);
+        this.message_zoom = prefs.getInt("message_zoom", 100);
         this.attachments_alt = prefs.getBoolean("attachments_alt", false);
         this.thumbnails = prefs.getBoolean("thumbnails", true);
         this.contrast = prefs.getBoolean("contrast", false);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -84,7 +84,7 @@ public class FragmentOptions extends FragmentBase {
             "name_email", "prefer_contact", "distinguish_contacts", "show_recipients", "authentication",
             "subject_top", "font_size_sender", "font_size_subject", "subject_italic", "highlight_subject", "subject_ellipsize",
             "keywords_header", "labels_header", "flags", "flags_background", "preview", "preview_italic", "preview_lines",
-            "addresses", "attachments_alt", "thumbnails",
+            "message_zoom", "addresses", "attachments_alt", "thumbnails",
             "contrast", "monospaced", "text_color", "text_size", "text_font", "text_align",
             "inline_images", "collapse_quotes", "seekbar", "actionbar", "actionbar_color", "navbar_colorize",
             "autoscroll", "swipenav", "autoexpand", "autoclose", "onclose",

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -502,6 +502,8 @@ private void _connect(
                     }
                 } catch (MessagingException ex) {
                     Log.w(ex);
+                    if (purpose == PURPOSE_CHECK)
+                        throw ex;
                 }
 
         } else if ("smtp".equals(protocol) || "smtps".equals(protocol)) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4967,12 +4967,14 @@ else if (message.signed > 0)
 
         boolean contacts = Helper.hasPermission(context, Manifest.permission.READ_CONTACTS);
         boolean avatars = prefs.getBoolean("avatars", true);
+        boolean gravatars = prefs.getBoolean("gravatars", false);
+        boolean favicons = prefs.getBoolean("favicons", false);
         boolean generated = prefs.getBoolean("generated_icons", true);
 
         this.date = prefs.getBoolean("date", true);
         this.threading = prefs.getBoolean("threading", true);
         this.threading_unread = threading && prefs.getBoolean("threading_unread", false);
-        this.avatars = (contacts && avatars) || generated;
+        this.avatars = (contacts && avatars) || (gravatars || favicons || generated);
         this.color_stripe = prefs.getBoolean("color_stripe", true);
         this.name_email = prefs.getBoolean("name_email", false);
         this.prefer_contact = prefs.getBoolean("prefer_contact", false);

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -264,6 +264,8 @@ public void onChanged(PagedList<TupleMessageEx> messages) {
                 for (int pos = 0; pos < messages.size(); pos++) {
                     TupleMessageEx item = messages.get(pos);
                     if (item != null && id == item.id) {
+                        fallback = true;
+
                         if (pos - 1 >= 0) {
                             TupleMessageEx next = messages.get(pos - 1);
                             intf.onNext(true, next == null ? null : next.id);

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -315,7 +315,7 @@ protected Pair<Long, Long> onExecute(Context context, Bundle args) {
                                     TupleMessageEx prev = (lprev != null && lprev.size() > 0 ? lprev.get(0) : null);
                                     TupleMessageEx next = (lnext != null && lnext.size() > 0 ? lnext.get(0) : null);
 
-                                    Pair result = new Pair<>(
+                                    Pair<Long, Long> result = new Pair<>(
                                             prev == null ? null : prev.id,
                                             next == null ? null : next.id);
                                     Log.i("Observe previous/next fallback=" + result);

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -279,7 +279,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.ehlo, other.ehlo) &&
                     this.synchronize.equals(other.synchronize) &&
                     this.primary.equals(other.primary) &&
-                    this.sender_extra.equals(sender_extra) &&
+                    this.sender_extra.equals(other.sender_extra) &&
                     Objects.equals(this.sender_extra_regex, other.sender_extra_regex) &&
                     Objects.equals(this.replyto, other.replyto) &&
                     Objects.equals(this.cc, other.cc) &&

File: app/src/main/java/androidx/recyclerview/selection/DefaultSelectionTracker.java
Patch:
@@ -394,7 +394,7 @@ private boolean canSetState(@NonNull K key, boolean nextState) {
 
     @SuppressWarnings({"WeakerAccess", "unchecked"}) /* synthetic access */
     void onDataSetChanged() {
-        mSelection.clearProvisionalSelection();
+        //mSelection.clearProvisionalSelection();
 
         notifySelectionRefresh();
 

File: app/src/main/java/androidx/recyclerview/selection/DefaultSelectionTracker.java
Patch:
@@ -394,7 +394,7 @@ private boolean canSetState(@NonNull K key, boolean nextState) {
 
     @SuppressWarnings({"WeakerAccess", "unchecked"}) /* synthetic access */
     void onDataSetChanged() {
-        //mSelection.clearProvisionalSelection();
+        mSelection.clearProvisionalSelection();
 
         notifySelectionRefresh();
 

File: app/src/main/java/androidx/recyclerview/selection/DefaultSelectionTracker.java
Patch:
@@ -394,7 +394,7 @@ private boolean canSetState(@NonNull K key, boolean nextState) {
 
     @SuppressWarnings({"WeakerAccess", "unchecked"}) /* synthetic access */
     void onDataSetChanged() {
-        mSelection.clearProvisionalSelection();
+        //mSelection.clearProvisionalSelection();
 
         notifySelectionRefresh();
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -551,7 +551,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
             // Connect transport
             db.identity().setIdentityState(ident.id, "connecting");
             iservice.connect(ident);
-            if (BuildConfig.DEBUG)
+            if (BuildConfig.DEBUG && false)
                 throw new IOException("Test");
             db.identity().setIdentityState(ident.id, "connected");
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -558,6 +558,8 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
 
             // Send message
             EntityLog.log(this, "Sending " + via);
+            if (BuildConfig.DEBUG && false)
+                throw new SendFailedException("Test");
             iservice.getTransport().sendMessage(imessage, to);
             long time = new Date().getTime();
             EntityLog.log(this, "Sent " + via);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3285,7 +3285,8 @@ public boolean onMenuItemClick(MenuItem item) {
 
         private void onPickContact(String name, String email) {
             Intent pick = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
-            if (pick.resolveActivity(context.getPackageManager()) == null) // system whitelisted
+            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.R && // should be system whitelisted
+                    pick.resolveActivity(context.getPackageManager()) == null)
                 Snackbar.make(view, R.string.title_no_contacts, Snackbar.LENGTH_LONG).show();
             else {
                 properties.setValue("name", name);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -440,7 +440,7 @@ public void onClick(View view) {
 
                 Intent pick = new Intent(Intent.ACTION_PICK, ContactsContract.CommonDataKinds.Email.CONTENT_URI);
                 PackageManager pm = getContext().getPackageManager();
-                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.R &&  // should be system whitelisted
+                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.R && // should be system whitelisted
                         pick.resolveActivity(pm) == null)
                     Snackbar.make(view, R.string.title_no_contacts, Snackbar.LENGTH_LONG).show();
                 else

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -440,7 +440,8 @@ public void onClick(View view) {
 
                 Intent pick = new Intent(Intent.ACTION_PICK, ContactsContract.CommonDataKinds.Email.CONTENT_URI);
                 PackageManager pm = getContext().getPackageManager();
-                if (pick.resolveActivity(pm) == null) // system whitelisted
+                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.R &&  // should be system whitelisted
+                        pick.resolveActivity(pm) == null)
                     Snackbar.make(view, R.string.title_no_contacts, Snackbar.LENGTH_LONG).show();
                 else
                     startActivityForResult(Helper.getChooser(getContext(), pick), request);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1522,7 +1522,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                     boolean button_archive_trash = prefs.getBoolean("button_archive_trash", true);
                     boolean button_move = prefs.getBoolean("button_move", true);
-                    boolean button_rule = prefs.getBoolean("button_rule", true);
+                    boolean button_rule = prefs.getBoolean("button_rule", false);
                     boolean expand_all = prefs.getBoolean("expand_all", false);
                     boolean expand_one = prefs.getBoolean("expand_one", true);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -813,7 +813,7 @@ private void setOptions() {
         swAddresses.setChecked(prefs.getBoolean("addresses", false));
         swArchiveTrash.setChecked(prefs.getBoolean("button_archive_trash", true));
         swMove.setChecked(prefs.getBoolean("button_move", true));
-        swRule.setChecked(prefs.getBoolean("button_rule", true));
+        swRule.setChecked(prefs.getBoolean("button_rule", false));
         swContrast.setChecked(prefs.getBoolean("contrast", false));
         swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
         swTextColor.setChecked(prefs.getBoolean("text_color", true));

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -311,8 +311,8 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " OR (:subject AND `subject` LIKE :find COLLATE NOCASE)" + // unsuitable index
             " OR (:keywords AND `keywords` LIKE :find COLLATE NOCASE)" + // no index
             " OR (:message AND `preview` LIKE :find COLLATE NOCASE)" + // no index
-            " OR (:attachments AND attachment.name LIKE :find COLLATE NOCASE)" + // no index
-            " OR (:attachments AND attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
+            " OR (attachment.name LIKE :find COLLATE NOCASE)" + // no index
+            " OR (attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
             " FROM message" +
             " LEFT JOIN attachment ON attachment.message = message.id" +
             " WHERE NOT ui_hide" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4789,7 +4789,7 @@ public boolean onKeyPressed(KeyEvent event) {
             if (event.isCtrlPressed() && event.getAction() == KeyEvent.ACTION_DOWN) {
                 switch (event.getKeyCode()) {
                     case KeyEvent.KEYCODE_ENTER:
-                        onAction(R.id.action_send, "enter");
+                        onAction(R.id.action_check, "enter");
                         return true;
                     case KeyEvent.KEYCODE_B:
                         if (etBody.hasSelection())

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5243,7 +5243,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 DB db = DB.getInstance(context);
                 EntityMessage message = db.message().getMessage(id);
                 if (message == null)
-                    throw new FileNotFoundException();
+                    throw new FileNotFoundException("message gone");
                 File file = message.getRawFile(context);
                 Log.i("Raw file=" + file);
 
@@ -5292,7 +5292,7 @@ protected void onExecuted(Bundle args, Void data) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                if (ex instanceof IllegalArgumentException)
+                if (ex instanceof IllegalArgumentException || ex instanceof FileNotFoundException)
                     Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
                 else
                     Log.unexpectedError(getParentFragmentManager(), ex);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4740,7 +4740,7 @@ public void run() {
                                         if (message == null || !message.ui_hide)
                                             continue;
 
-                                        Log.i("Move id=" + id + " target=" + target.folder.name);
+                                        Log.i("Move id=" + target.id + " target=" + target.folder.name);
                                         db.message().setMessageUiBusy(target.id, null);
                                         db.message().setMessageLastAttempt(target.id, new Date().getTime());
                                         EntityOperation.queue(context, message, EntityOperation.MOVE, target.folder.id);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -310,8 +310,8 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " OR (:recipients AND `bcc` LIKE :find COLLATE NOCASE)" + // no index
             " OR (:subject AND `subject` LIKE :find COLLATE NOCASE)" + // unsuitable index
             " OR (:keywords AND `keywords` LIKE :find COLLATE NOCASE)" + // no index
-            " OR (:message AND `preview` LIKE :find COLLATE NOCASE)" +
-            " OR (:attachments AND attachment.name LIKE :find COLLATE NOCASE)" +
+            " OR (:message AND `preview` LIKE :find COLLATE NOCASE)" + // no index
+            " OR (:attachments AND attachment.name LIKE :find COLLATE NOCASE)" + // no index
             " OR (:attachments AND attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
             " FROM message" +
             " LEFT JOIN attachment ON attachment.message = message.id" +

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -50,7 +50,6 @@
         indices = {
                 @Index(value = {"message"}),
                 @Index(value = {"message", "sequence"}, unique = true),
-                @Index(value = {"message", "type"}),
                 @Index(value = {"message", "cid"})
         }
 )

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -310,7 +310,9 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " OR (:recipients AND `bcc` LIKE :find COLLATE NOCASE)" + // no index
             " OR (:subject AND `subject` LIKE :find COLLATE NOCASE)" + // unsuitable index
             " OR (:keywords AND `keywords` LIKE :find COLLATE NOCASE)" + // no index
-            " OR (:message AND `preview` LIKE :find COLLATE NOCASE)) AS matched" + // no index
+            " OR (:message AND `preview` LIKE :find COLLATE NOCASE)" +
+            " OR (:attachments AND attachment.name LIKE :find COLLATE NOCASE)" +
+            " OR (:attachments AND attachment.type LIKE :find COLLATE NOCASE)) AS matched" + // no index
             " FROM message" +
             " LEFT JOIN attachment ON attachment.message = message.id" +
             " WHERE NOT ui_hide" +

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -240,7 +240,8 @@ private int load_device(State state) {
                             criteria.with_hidden,
                             criteria.with_encrypted,
                             criteria.with_attachments,
-                            criteria.with_types,
+                            criteria.with_types == null ? 0 : criteria.with_types.length,
+                            criteria.with_types == null ? new String[]{} : criteria.with_types,
                             criteria.with_size,
                             criteria.after,
                             criteria.before,

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -321,7 +321,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedThread(
             " AND (NOT :hidden OR NOT ui_snoozed IS NULL)" +
             " AND (NOT :encrypted OR ui_encrypt > 0)" +
             " AND (NOT :attachments OR attachments > 0)" +
-            " AND (:types IS NULL OR attachment.type IN (:types))" +
+            " AND (:type_count = 0 OR attachment.type IN (:types))" +
             " AND (:size IS NULL OR total > :size)" +
             " AND (:after IS NULL OR received > :after)" +
             " AND (:before IS NULL OR received < :before)" +
@@ -331,7 +331,7 @@ List<TupleMatch> matchMessages(
             Long account, Long folder, String find,
             boolean senders, boolean recipients, boolean subject, boolean keywords, boolean message,
             boolean unseen, boolean flagged, boolean hidden, boolean encrypted, boolean attachments,
-            String[] types,
+            int type_count, String[] types,
             Integer size,
             Long after, Long before,
             int limit, int offset);

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -107,7 +107,7 @@ public abstract class DB extends RoomDatabase {
 
     private static DB sInstance;
     private static final ExecutorService executor =
-            Helper.getBackgroundExecutor(4, "query"); // AndroidX default thread count
+            Helper.getBackgroundExecutor(2, "query"); // AndroidX default thread count
 
     private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default

File: app/src/main/java/eu/faircode/email/EntityCertificate.java
Patch:
@@ -174,7 +174,7 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityCertificate fromJSON(JSONObject json) throws JSONException, CertificateException, NoSuchAlgorithmException {
         EntityCertificate certificate = new EntityCertificate();
-        certificate.id = json.getLong("id");
+        // id
         certificate.intermediate = json.optBoolean("intermediate");
         certificate.email = json.getString("email");
         certificate.data = json.getString("data");

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -108,7 +108,7 @@ public class FragmentOptionsMisc extends FragmentBase implements SharedPreferenc
             "selected_folders", "move_1_confirmed", "move_n_confirmed",
             "last_search_senders", "last_search_recipients", "last_search_subject", "last_search_keywords", "last_search_message", "last_search",
             "identities_asked", "cc_bcc", "inline_image_hint", "compose_reference", "send_dialog",
-            "setup_reminder"
+            "setup_reminder", "setup_advanced"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -108,7 +108,7 @@ public class FragmentOptionsMisc extends FragmentBase implements SharedPreferenc
             "selected_folders", "move_1_confirmed", "move_n_confirmed",
             "last_search_senders", "last_search_recipients", "last_search_subject", "last_search_keywords", "last_search_message", "last_search",
             "identities_asked", "cc_bcc", "inline_image_hint", "compose_reference", "send_dialog",
-            "setup_reminder", "setup_advanced"
+            "setup_reminder"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -232,7 +232,7 @@ public void onDrawerSlide(View drawerView, float slideOffset) {
             int screenWidth = Math.min(dm.widthPixels, dm.heightPixels);
             drawerWidth = screenWidth - actionBarHeight;
         } else
-            drawerWidth = dm.widthPixels / 3;
+            drawerWidth = Helper.dp2pixels(this, 300);
 
         ViewGroup.LayoutParams lparam = drawerContainer.getLayoutParams();
         lparam.width = drawerWidth;

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -144,7 +144,6 @@ private EmailService() {
         boolean socks_enabled = prefs.getBoolean("socks_enabled", false);
         String socks_proxy = prefs.getString("socks_proxy", "localhost:9050");
 
-        boolean auth_plain = prefs.getBoolean("auth_plain", true);
         boolean auth_sasl = prefs.getBoolean("auth_sasl", true);
 
         // SOCKS proxy
@@ -164,8 +163,6 @@ private EmailService() {
         properties.put("mail.event.scope", "folder");
         properties.put("mail.event.executor", executor);
 
-        properties.put("mail." + protocol + ".auth.plain.disable", Boolean.toString(!auth_plain));
-
         properties.put("mail." + protocol + ".sasl.enable", "true");
         if (auth_sasl) {
             properties.put("mail." + protocol + ".sasl.mechanisms", "CRAM-MD5");

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4342,7 +4342,9 @@ protected Void onExecute(Context context, Bundle args) {
                                 if (!message.seen || ops > 0)
                                     EntityOperation.queue(context, message, EntityOperation.SEEN, true);
                             } else {
-                                if (!message.ui_ignored)
+                                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+                                boolean notify_remove = prefs.getBoolean("notify_remove", true);
+                                if (notify_remove && !message.ui_ignored)
                                     db.message().setMessageUiIgnored(message.id, true);
                             }
                     }

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -321,7 +321,7 @@ private static void setupBugsnag(final Context context) {
 
         String installer = context.getPackageManager().getInstallerPackageName(BuildConfig.APPLICATION_ID);
         config.addMetadata("extra", "installer", installer == null ? "-" : installer);
-        config.addMetadata("extra", "installed", new Date(Helper.getInstallTime(context)));
+        config.addMetadata("extra", "installed", new Date(Helper.getInstallTime(context)).toString());
         config.addMetadata("extra", "fingerprint", Helper.hasValidFingerprint(context));
 
         config.addOnSession(new OnSessionCallback() {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2810,7 +2810,7 @@ public void run() {
                         }, ViewConfiguration.getDoubleTapTimeout());
                     } else {
                         message.ui_seen = !message.ui_seen;
-                        message.unseen = (message.ui_seen ? 0 : message.visible);
+                        message.unseen = (message.ui_seen ? 0 : message.count);
                         bindTo(message, false);
 
                         Bundle args = new Bundle();
@@ -3975,7 +3975,7 @@ protected void onExecuted(Bundle args, Void ignored) {
 
                     properties.setExpanded(message, false);
                     message.ui_seen = args.getBoolean("seen");
-                    message.unseen = (message.ui_seen ? 0 : message.visible);
+                    message.unseen = (message.ui_seen ? 0 : message.count);
                     bindTo(message, false);
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2810,7 +2810,7 @@ public void run() {
                         }, ViewConfiguration.getDoubleTapTimeout());
                     } else {
                         message.ui_seen = !message.ui_seen;
-                        message.unseen = (message.ui_seen ? 0 : message.count);
+                        message.unseen = (message.ui_seen ? 0 : message.visible);
                         bindTo(message, false);
 
                         Bundle args = new Bundle();
@@ -3975,7 +3975,7 @@ protected void onExecuted(Bundle args, Void ignored) {
 
                     properties.setExpanded(message, false);
                     message.ui_seen = args.getBoolean("seen");
-                    message.unseen = (message.ui_seen ? 0 : message.count);
+                    message.unseen = (message.ui_seen ? 0 : message.visible);
                     bindTo(message, false);
                 }
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -440,6 +440,8 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
 
             MessageHelper.MessageParts parts = helper.getMessageParts();
             String body = parts.getHtml(this);
+            if (parts.isPlainOnly())
+                body = body.replace("<div x-plain=\"true\">", "<div>");
 
             try {
                 db.beginTransaction();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -5708,8 +5708,6 @@ private static Uri sanitize(Uri uri) {
                     !TextUtils.isEmpty(uri.getQueryParameter("url"))) {
                 changed = true;
                 url = Uri.parse(uri.getQueryParameter("url"));
-                if (url.isOpaque())
-                    return uri;
             } else if ("https".equals(uri.getScheme()) &&
                     "www.google.com".equals(uri.getHost()) &&
                     uri.getPath() != null &&
@@ -5737,6 +5735,9 @@ private static Uri sanitize(Uri uri) {
             } else
                 url = uri;
 
+            if (url.isOpaque())
+                return uri;
+
             builder = url.buildUpon();
 
             builder.clearQuery();

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -51,6 +51,7 @@
 import androidx.appcompat.app.ActionBarDrawerToggle;
 import androidx.appcompat.app.AlertDialog;
 import androidx.core.app.NotificationCompat;
+import androidx.core.widget.NestedScrollView;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
@@ -93,7 +94,7 @@ public class ActivityView extends ActivityBilling implements FragmentManager.OnB
     private TwoStateOwner owner = new TwoStateOwner("drawer");
     private DrawerLayoutEx drawerLayout;
     private ActionBarDrawerToggle drawerToggle;
-    private ScrollView drawerContainer;
+    private NestedScrollView drawerContainer;
     private ImageButton ibExpanderAccount;
     private RecyclerView rvAccount;
     private ImageButton ibExpanderUnified;

File: app/src/main/java/eu/faircode/email/AdapterNavAccount.java
Patch:
@@ -253,9 +253,11 @@ public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {
             TupleAccountEx a2 = next.get(newItemPosition);
             return Objects.equals(a1.name, a2.name) &&
                     Objects.equals(a1.color, a2.color) &&
+                    a1.primary == a2.primary &&
                     a1.unseen == a2.unseen &&
                     Objects.equals(a1.state, a2.state) &&
-                    Objects.equals(a1.last_connected, a2.last_connected);
+                    Objects.equals(a1.last_connected, a2.last_connected) &&
+                    Objects.equals(a1.error, a2.error);
         }
     }
 

File: app/src/main/java/eu/faircode/email/ImageHelper.java
Patch:
@@ -302,7 +302,7 @@ public void onHeaderDecoded(
             // Data URI
             if (data && (show || inline || a.tracking))
                 try {
-                    Bitmap bm = getDataBitmap(source);
+                    Bitmap bm = getDataBitmap(a.source);
                     if (bm == null)
                         throw new IllegalArgumentException("decode byte array failed");
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2130,7 +2130,7 @@ static EntityMessage synchronizeMessage(
 
         MessageHelper helper = new MessageHelper(imessage, context);
         boolean seen = helper.getSeen();
-        boolean answered = helper.getAnsered();
+        boolean answered = helper.getAnswered();
         boolean flagged = helper.getFlagged();
         String flags = helper.getFlags();
         String[] keywords = helper.getKeywords();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -762,7 +762,7 @@ boolean getSeen() throws MessagingException {
         return imessage.isSet(Flags.Flag.SEEN);
     }
 
-    boolean getAnsered() throws MessagingException {
+    boolean getAnswered() throws MessagingException {
         return imessage.isSet(Flags.Flag.ANSWERED);
     }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1875,7 +1875,7 @@ private void normalizeText(List<TextNode> block) {
                 if (block.size() > 0) {
                     tnode = block.get(block.size() - 1);
                     text = tnode.getWholeText();
-                    if (endsWithWhitespace(text)) {
+                    if (!"-- ".equals(text) && endsWithWhitespace(text)) {
                         text = text.substring(0, text.length() - 1);
                         tnode.text(text);
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1334,6 +1334,8 @@ private void scrollToVisibleItem(LinearLayoutManager llm, boolean bottom) {
     }
 
     private void onSwipeRefresh() {
+        swipeRefresh.onRefresh();
+
         Bundle args = new Bundle();
         args.putLong("folder", folder);
         args.putString("type", type);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3827,10 +3827,8 @@ private void updateState(List<TupleFolderEx> folders) {
             if (folder.error != null && folder.account != null /* outbox */)
                 errors = true;
             if (folder.sync_state != null &&
-                    (folder.account == null || "connected".equals(folder.accountState))) {
+                    (folder.account == null || "connected".equals(folder.accountState)))
                 refreshing = true;
-                break;
-            }
         }
 
         // Get name

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -355,7 +355,7 @@ private void bindTo(final TupleFolderEx folder) {
                 if (btnHelp != null)
                     btnHelp.setVisibility(folder.error == null ? View.GONE : View.VISIBLE);
 
-                grpFlagged.setVisibility(show_compact || !show_flagged ? View.GONE : View.VISIBLE);
+                grpFlagged.setVisibility(show_flagged ? View.VISIBLE : View.GONE);
                 grpExtended.setVisibility(show_compact ? View.GONE : View.VISIBLE);
             }
         }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1070,7 +1070,8 @@ private static void onDelete(Context context, JSONArray jargs, EntityAccount acc
                         msgid = helper.getMessageID();
 
                     Log.i("POP searching=" + message.msgid + " iterate=" + msgid);
-                    if (msgid != null && msgid.equals(message.msgid)) {
+                    if (msgid != null &&
+                            (msgid.equals(message.uidl) || msgid.equals(message.msgid))) {
                         found = true;
                         Log.i(folder.name + " POP delete=" + msgid);
                         imessage.setFlag(Flags.Flag.DELETED, true);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -795,7 +795,7 @@ else if (key.endsWith("bottom"))
             // separate columns
             if (hasVisibleContent(col.childNodes()))
                 if (col.nextElementSibling() != null)
-                    col.appendText("\u2003"); // em space
+                    col.appendText(" ");
 
             if ("th".equals(col.tagName()))
                 col.tagName("strong");
@@ -1849,7 +1849,7 @@ private void normalizeText(List<TextNode> block) {
                     // Remove multiple trailing whitespace
                     index = text.length() - 1;
                     while (isWhiteSpace(text, index) &&
-                            (i == block.size() - 1 || index == 0 || isWhiteSpace(text, index - 1)))
+                            (isWhiteSpace(text, index - 1) || i == block.size() - 1))
                         index--;
 
                     text = text.substring(0, index + 1);

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -237,6 +237,8 @@ private boolean onActionStyle(int action) {
 
         if (action == R.id.menu_link) {
             Uri uri = null;
+            final int start = etText.getSelectionStart();
+            final int end = etText.getSelectionEnd();
 
             ClipboardManager cbm = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
             if (cbm != null && cbm.hasPrimaryClip()) {
@@ -259,6 +261,7 @@ private boolean onActionStyle(int action) {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
                             String link = etLink.getText().toString();
+                            etText.setSelection(start, end);
                             StyleHelper.apply(R.id.menu_link, etText, link);
                         }
                     })

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -44,6 +44,7 @@
 import android.os.Parcel;
 import android.os.PowerManager;
 import android.os.StatFs;
+import android.provider.DocumentsContract;
 import android.security.KeyChain;
 import android.security.KeyChainAliasCallback;
 import android.security.KeyChainException;
@@ -526,7 +527,7 @@ static String getOpenKeychainPackage(Context context) {
     }
 
     static Intent getIntentIssue(Context context) {
-        if (ActivityBilling.isPro(context) && Helper.hasValidFingerprint(context)) {
+        if (ActivityBilling.isPro(context)) {
             String version = BuildConfig.VERSION_NAME + "/" +
                     (Helper.hasValidFingerprint(context) ? "1" : "3") +
                     (BuildConfig.PLAY_STORE_RELEASE ? "p" : "") +

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -44,7 +44,6 @@
 import android.os.Parcel;
 import android.os.PowerManager;
 import android.os.StatFs;
-import android.provider.DocumentsContract;
 import android.security.KeyChain;
 import android.security.KeyChainAliasCallback;
 import android.security.KeyChainException;
@@ -527,7 +526,7 @@ static String getOpenKeychainPackage(Context context) {
     }
 
     static Intent getIntentIssue(Context context) {
-        if (ActivityBilling.isPro(context)) {
+        if (ActivityBilling.isPro(context) && Helper.hasValidFingerprint(context)) {
             String version = BuildConfig.VERSION_NAME + "/" +
                     (Helper.hasValidFingerprint(context) ? "1" : "3") +
                     (BuildConfig.PLAY_STORE_RELEASE ? "p" : "") +

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -203,6 +203,9 @@ String getMimeType() {
         if ("application/x-pdf".equals(type))
             return "application/pdf";
 
+        if ("application/vnd.ms-pps".equals(type))
+            return "application/vnd.ms-powerpoint";
+
         if (TextUtils.isEmpty(type) ||
                 type.startsWith("unknown/") || type.endsWith("/unknown") ||
                 "application/octet-stream".equals(type) || "application/zip".equals(type)) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3380,6 +3380,8 @@ else if ("receipt".equals(action)) {
                             if (TextUtils.isEmpty(s)) {
                                 // Get referenced message body
                                 d = JsoupEx.parse(ref.getFile(context));
+                                for (Element e : d.select("[x-plain=true]"))
+                                    e.removeAttr("x-plain");
 
                                 // Remove signature separators
                                 boolean remove_signatures = prefs.getBoolean("remove_signatures", false);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -485,7 +485,7 @@ List<TupleMatch> matchMessages(
             " AND NOT uid IS NULL")
     List<Long> getUids(long folder, Long received);
 
-    @Query("SELECT uidl, msgid FROM message" +
+    @Query("SELECT id, uidl, msgid FROM message" +
             " WHERE folder = :folder")
     List<TupleUidl> getUidls(long folder);
 

File: app/src/main/java/eu/faircode/email/TupleUidl.java
Patch:
@@ -20,6 +20,7 @@
 */
 
 public class TupleUidl {
+    long id;
     String uidl;
     String msgid;
 }

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -107,7 +107,7 @@ public abstract class DB extends RoomDatabase {
 
     private static DB sInstance;
     private static final ExecutorService executor =
-            Helper.getBackgroundExecutor(4, "query"); // AndroidX default thread count
+            Helper.getBackgroundExecutor(1, "query"); // AndroidX default thread count
 
     private static final String DB_NAME = "fairemail";
     private static final int DB_CHECKPOINT = 1000; // requery/sqlite-android default

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -425,7 +425,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                     String name = Helper.sanitizeFilename(attachment.name);
                     if (TextUtils.isEmpty(name))
                         name = Long.toString(attachment.id);
-                    DocumentFile document = tree.createFile(attachment.type, name);
+                    DocumentFile document = tree.createFile(attachment.getMimeType(), name);
                     if (document == null)
                         throw new FileNotFoundException("Could not save " + uri + ":" + name);
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -188,6 +188,9 @@ String getMimeType() {
                 type = gtype;
         }
 
+        if ("gpx".equals(extension))
+            return "application/gpx+xml";
+
         if ("eml".equals(extension))
             return "message/rfc822";
 

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -467,7 +467,6 @@ private void _connect(
         isession.addProvider(new GmailSSLProvider());
 
         if ("pop3".equals(protocol) || "pop3s".equals(protocol)) {
-            isession.setDebug(true);
             iservice = isession.getStore(protocol);
             iservice.connect(address.getHostAddress(), port, user, password);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1554,7 +1554,7 @@ public void run() {
 
                 if (state.isRunning()) {
                     int backoff = state.getBackoff();
-                    long cbackoff = RECONNECT_BACKOFF - (new Date().getTime() - lastLost);
+                    long cbackoff = (RECONNECT_BACKOFF - (new Date().getTime() - lastLost)) / 1000L;
                     if (cbackoff > backoff) {
                         try {
                             EntityLog.log(this, account.name + " reconnect backoff=" + cbackoff);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1568,7 +1568,7 @@ private static void onSynchronizeMessages(
                         message.folder = folder.id;
                         message.uid = null;
 
-                        message.msgid = helper.getMessageID();
+                        message.msgid = msgid;
                         message.hash = helper.getHash();
                         message.references = TextUtils.join(" ", helper.getReferences());
                         message.inreplyto = helper.getInReplyTo();

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -78,10 +78,8 @@ public interface DaoMessage {
             " AND (NOT :found OR message.ui_found = :found)" +
             " AND message.thread IN" +
             "  (SELECT DISTINCT mm.thread FROM folder ff" +
-            "   JOIN account aa ON aa.id = ff.account" +
             "   JOIN message mm ON mm.folder = ff.id" +
-            "   WHERE aa.synchronize" +
-            "   AND ((:found AND mm.ui_found)" +
+            "   WHERE ((:found AND mm.ui_found)" +
             "   OR (NOT :found AND :type IS NULL AND ff.unified)" +
             "   OR (NOT :found AND :type IS NOT NULL AND ff.type = :type))" +
             "   AND (NOT mm.ui_hide OR :debug))" +

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -178,8 +178,6 @@ private EmailService() {
             properties.put("mail.debug.auth", "true");
 
         if ("pop3".equals(protocol) || "pop3s".equals(protocol)) {
-            this.debug = true;
-
             // https://javaee.github.io/javamail/docs/api/com/sun/mail/pop3/package-summary.html#properties
             properties.put("mail.pop3s.starttls.enable", "false");
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -78,8 +78,10 @@ public interface DaoMessage {
             " AND (NOT :found OR message.ui_found = :found)" +
             " AND message.thread IN" +
             "  (SELECT DISTINCT mm.thread FROM folder ff" +
+            "   JOIN account aa ON aa.id = ff.account" +
             "   JOIN message mm ON mm.folder = ff.id" +
-            "   WHERE ((:found AND mm.ui_found)" +
+            "   WHERE aa.synchronize" +
+            "   AND ((:found AND mm.ui_found)" +
             "   OR (NOT :found AND :type IS NULL AND ff.unified)" +
             "   OR (NOT :found AND :type IS NOT NULL AND ff.type = :type))" +
             "   AND (NOT mm.ui_hide OR :debug))" +

File: app/src/main/java/eu/faircode/email/InternetAddressJson.java
Patch:
@@ -106,7 +106,7 @@ private void ensureParsed() {
         if (this.json != null) {
             try {
                 JSONObject jaddress = new JSONObject("{" + this.json + "}");
-                String address = jaddress.optString("address");
+                String address = jaddress.getString("address");
                 String personal = jaddress.optString("personal");
                 if (!TextUtils.isEmpty(address))
                     super.setAddress(address);

File: app/src/main/java/eu/faircode/email/InternetAddressJson.java
Patch:
@@ -106,7 +106,7 @@ private void ensureParsed() {
         if (this.json != null) {
             try {
                 JSONObject jaddress = new JSONObject("{" + this.json + "}");
-                String address = jaddress.getString("address");
+                String address = jaddress.optString("address");
                 String personal = jaddress.optString("personal");
                 if (!TextUtils.isEmpty(address))
                     super.setAddress(address);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1324,12 +1324,12 @@ private void bindContactInfo(TupleMessageEx message, ContactInfo[] info, Address
             Address[] _senders = fillIn(senders, map);
             Address[] _recipients = fillIn(recipients, map);
             if (_senders != null || _recipients != null)
-                if (show_recipients && _recipients != null && _recipients.length > 0)
+                if (show_recipients && recipients != null && recipients.length > 0)
                     tvFrom.setText(context.getString(R.string.title_from_to,
                             MessageHelper.formatAddresses(_senders == null ? senders : _senders, name_email, false),
                             MessageHelper.formatAddresses(_recipients == null ? recipients : _recipients, name_email, false)));
                 else
-                    tvFrom.setText(MessageHelper.formatAddresses(senders, name_email, false));
+                    tvFrom.setText(MessageHelper.formatAddresses(_senders, name_email, false));
 
             if (distinguish_contacts) {
                 boolean known = false;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4700,7 +4700,7 @@ else if (message.signed > 0)
         this.name_email = prefs.getBoolean("name_email", false);
         this.prefer_contact = prefs.getBoolean("prefer_contact", false);
         this.distinguish_contacts = prefs.getBoolean("distinguish_contacts", false);
-        this.show_recipients = prefs.getBoolean("show_recipients", true);
+        this.show_recipients = prefs.getBoolean("show_recipients", false);
 
         this.subject_top = prefs.getBoolean("subject_top", false);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -750,7 +750,7 @@ private void setOptions() {
         swNameEmail.setChecked(prefs.getBoolean("name_email", false));
         swPreferContact.setChecked(prefs.getBoolean("prefer_contact", false));
         swDistinguishContacts.setChecked(prefs.getBoolean("distinguish_contacts", false));
-        swShowRecipients.setChecked(prefs.getBoolean("show_recipients", true));
+        swShowRecipients.setChecked(prefs.getBoolean("show_recipients", false));
         swSubjectTop.setChecked(prefs.getBoolean("subject_top", false));
 
         int[] fontSizeValues = getResources().getIntArray(R.array.fontSizeValues);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2528,7 +2528,7 @@ protected void onException(Bundle args, Throwable ex) {
                             public void onClick(View v) {
                                 startActivity(
                                         new Intent(getContext(), ActivitySetup.class)
-                                                .putExtra("tab", "privacy"));
+                                                .putExtra("tab", "encryption"));
                             }
                         });
                     snackbar.show();

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -201,8 +201,8 @@ public void onConfigureTab(@NonNull TabLayout.Tab tab, int position) {
             pager.setCurrentItem(3);
         else if ("display".equals(tab))
             pager.setCurrentItem(4);
-        else if ("privacy".equals(tab))
-            pager.setCurrentItem(6);
+        else if ("encryption".equals(tab))
+            pager.setCurrentItem(7);
         getActivity().getIntent().removeExtra("tab");
     }
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -68,7 +68,7 @@ public interface DaoMessage {
             "   OR (NOT :found AND :type IS NULL AND folder.unified)" +
             "   OR (NOT :found AND folder.type = :type))" +
             "   THEN message.received ELSE 0 END) AS dummy" +
-            " FROM message" +
+            " FROM (SELECT * FROM message ORDER BY received DESC) AS message" + // group_concat
             " JOIN account_view AS account ON account.id = message.account" +
             " LEFT JOIN identity_view AS identity ON identity.id = message.identity" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +
@@ -132,7 +132,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             ", message.priority AS ui_priority" +
             ", message.importance AS ui_importance" +
             ", MAX(CASE WHEN folder.id = :folder THEN message.received ELSE 0 END) AS dummy" +
-            " FROM message" +
+            " FROM (SELECT * FROM message ORDER BY received DESC) AS message" + // group_concat
             " JOIN account_view AS account ON account.id = message.account" +
             " LEFT JOIN identity_view AS identity ON identity.id = message.identity" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -636,7 +636,8 @@ protected void onPause() {
 
     @Override
     protected void onDestroy() {
-        unregisterReceiver(creceiver);
+        LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(this);
+        lbm.unregisterReceiver(creceiver);
         super.onDestroy();
     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4090,11 +4090,13 @@ public void run() {
                             int line = tvBody.getLayout().getLineForOffset(pos);
                             int y = tvBody.getLayout().getLineTop(line);
 
+                            int dy = Helper.dp2pixels(context, 48);
+
                             Rect rect = new Rect();
                             tvBody.getDrawingRect(rect);
                             ((ViewGroup) itemView).offsetDescendantRectToMyCoords(tvBody, rect);
 
-                            properties.scrollTo(apos, rect.top + y);
+                            properties.scrollTo(apos, rect.top + y - dy);
                         } catch (Throwable ex) {
                             Log.e(ex);
                         }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1546,7 +1546,9 @@ public void scrollTo(final int pos, final int y) {
                 @Override
                 public void run() {
                     LinearLayoutManager llm = (LinearLayoutManager) rvMessage.getLayoutManager();
-                    llm.scrollToPositionWithOffset(pos, -y);
+                    View child = llm.getChildAt(pos);
+                    int dy = (child == null ? 0 : llm.getTopDecorationHeight(child));
+                    llm.scrollToPositionWithOffset(pos, -y - dy);
                 }
             });
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4985,7 +4985,7 @@ public void run() {
         this.differ.addPagedListListener(new AsyncPagedListDiffer.PagedListListener<TupleMessageEx>() {
             @Override
             public void onCurrentListChanged(@Nullable PagedList<TupleMessageEx> previousList, @Nullable PagedList<TupleMessageEx> currentList) {
-                if (gotoTop) {
+                if (gotoTop && previousList != null) {
                     gotoTop = false;
                     properties.scrollTo(0, 0);
                 }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1866,7 +1866,7 @@ public void head(Node node, int depth) {
                     element = (Element) node;
                     element.attr("start-index", Integer.toString(ssb.length()));
                     if (debug)
-                        ssb.append("[" + element.tagName() + ":" + element.attr("x-font-size-rel") + "]");
+                        ssb.append("[" + element.tagName() + ":" + element.attr("style") + "]");
                 } else if (node instanceof TextNode) {
                     tnode = (TextNode) node;
                     ssb.append(tnode.getWholeText());

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4088,11 +4088,11 @@ private int find(String query, int result) {
                     public void run() {
                         try {
                             int line = tvBody.getLayout().getLineForOffset(pos);
-                            int y = Math.round(line * tvBody.getLineHeight());
+                            int y = tvBody.getLayout().getLineTop(line);
 
                             Rect rect = new Rect();
                             tvBody.getDrawingRect(rect);
-                            ((ViewGroup) view).offsetDescendantRectToMyCoords(tvBody, rect);
+                            ((ViewGroup) itemView).offsetDescendantRectToMyCoords(tvBody, rect);
 
                             properties.scrollTo(apos, rect.top + y);
                         } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1813,6 +1813,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
 
                     DB db = DB.getInstance(context);
                     List<EntityAttachment> attachments = db.attachment().getAttachments(message.id);
+                    properties.setAttachments(message.id, attachments);
 
                     boolean signed_data = false;
                     for (EntityAttachment attachment : attachments)

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -68,7 +68,8 @@ public class ServiceSend extends ServiceBase {
 
     private PowerManager.WakeLock wlOutbox;
     private TwoStateOwner owner = new TwoStateOwner("send");
-    private ExecutorService executor = Helper.getBackgroundExecutor(1, "send");
+
+    private static ExecutorService executor = Helper.getBackgroundExecutor(1, "send");
 
     private static final int PI_SEND = 1;
     private static final long CONNECTIVITY_DELAY = 5000L; // milliseconds

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1776,7 +1776,7 @@ private void normalizeText(List<TextNode> block) {
                     }
 
                     // Remove whitespace before/after newlines
-                    TRIM_WHITESPACE_NL.matcher(text).replaceAll(" ");
+                    text = TRIM_WHITESPACE_NL.matcher(text).replaceAll(" ");
 
                     if (i == 0 || endsWithWhitespace(block.get(i - 1).text()))
                         while (startsWithWhiteSpace(text))

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5268,7 +5268,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
 
                                         // Write decrypted body
                                         String text = Helper.readText(plain);
-                                        String html = "<pre>" + HtmlHelper.formatPre(text) + "</pre>";
+                                        String html = "<div>" + HtmlHelper.formatPre(text) + "</div>";
                                         Helper.writeText(message.getFile(context), html);
                                         db.message().setMessageStored(message.id, new Date().getTime());
                                         db.message().setMessageFts(message.id, false);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1589,7 +1589,7 @@ else if (content instanceof InputStream)
                 if (part.isMimeType("text/plain")) {
                     if ("flowed".equalsIgnoreCase(ct.getParameter("format")))
                         result = HtmlHelper.flow(result);
-                    result = "<pre>" + HtmlHelper.formatPre(result) + "</pre>";
+                    result = "<div>" + HtmlHelper.formatPre(result) + "</div>";
                 } else if (part.isMimeType("text/html")) {
                     if (TextUtils.isEmpty(charset)) {
                         // <meta charset="utf-8" />

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1876,7 +1876,7 @@ public void head(Node node, int depth) {
                         ssb.append("[" + element.tagName() + ":" + element.attr("x-font-size-rel") + "]");
                 } else if (node instanceof TextNode) {
                     tnode = (TextNode) node;
-                    ssb.append(tnode.text());
+                    ssb.append(tnode.getWholeText());
                 }
             }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5268,7 +5268,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
 
                                         // Write decrypted body
                                         String text = Helper.readText(plain);
-                                        String html = HtmlHelper.formatPre(text);
+                                        String html = "<pre>" + HtmlHelper.formatPre(text) + "</pre>";
                                         Helper.writeText(message.getFile(context), html);
                                         db.message().setMessageStored(message.id, new Date().getTime());
                                         db.message().setMessageFts(message.id, false);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1589,7 +1589,7 @@ else if (content instanceof InputStream)
                 if (part.isMimeType("text/plain")) {
                     if ("flowed".equalsIgnoreCase(ct.getParameter("format")))
                         result = HtmlHelper.flow(result);
-                    result = "<div>" + HtmlHelper.formatPre(result) + "</div>";
+                    result = "<pre>" + HtmlHelper.formatPre(result) + "</pre>";
                 } else if (part.isMimeType("text/html")) {
                     if (TextUtils.isEmpty(charset)) {
                         // <meta charset="utf-8" />

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2141,7 +2141,7 @@ public int getLeadingMargin(boolean first) {
 
         @Override
         public void drawLeadingMargin(Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout) {
-            if (first) {
+            if (((Spanned) text).getSpanStart(this) == start) {
                 Paint.Style ostyle = p.getStyle();
                 int ocolor = p.getColor();
                 Typeface oface = p.getTypeface();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1988,7 +1988,8 @@ public void tail(Node node, int depth) {
                             else {
                                 int index = 0;
                                 for (Node child : parent.childNodes()) {
-                                    if (child instanceof Element) {
+                                    if (child instanceof Element &&
+                                            child.nodeName().equals(element.tagName())) {
                                         index++;
                                         if (child == element)
                                             break;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4783,7 +4783,6 @@ public void onNothingSelected(AdapterView<?> parent) {
                 @Override
                 public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     prefs.edit().putBoolean("privacy_images", isChecked).apply();
-                    spResize.setEnabled(isChecked);
                 }
             });
 

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -63,6 +63,7 @@
                 @Index(value = {"folder"}),
                 @Index(value = {"identity"}),
                 @Index(value = {"folder", "uid"}, unique = true),
+                @Index(value = {"inreplyto"}),
                 @Index(value = {"msgid"}),
                 @Index(value = {"thread"}),
                 @Index(value = {"sender"}),

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1030,7 +1030,7 @@ private Address[] getAddressHeader(String name) throws MessagingException {
             return null;
 
         header = fixEncoding(name, header);
-        header = header.replaceAll("\\?=\\r?\\n\\s+=\\?", "\\?==\\?");
+        header = header.replaceAll("\\?=[\\r\\n\\t ]+=\\?", "\\?==\\?");
         Address[] addresses = InternetAddress.parseHeader(header, false);
 
         for (Address address : addresses) {
@@ -1179,7 +1179,7 @@ String getSubject() throws MessagingException {
             return null;
 
         subject = fixEncoding("subject", subject);
-        subject = subject.replaceAll("\\?=\\r?\\n\\s+=\\?", "\\?==\\?");
+        subject = subject.replaceAll("\\?=[\\r\\n\\t ]+=\\?", "\\?==\\?");
         subject = MimeUtility.unfold(subject);
         subject = decodeMime(subject);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1934,7 +1934,8 @@ public void tail(Node node, int depth) {
                     switch (element.tagName()) {
                         case "a":
                             String href = element.attr("href");
-                            ssb.setSpan(new URLSpan(href), start, ssb.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+                            if (!TextUtils.isEmpty(href))
+                                ssb.setSpan(new URLSpan(href), start, ssb.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                             break;
                         case "body":
                             // Do nothing

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -840,7 +840,7 @@ String[] getReferences() throws MessagingException {
     }
 
     private String[] getReferences(String header) {
-        return MimeUtility.unfold(header).split("[,\\s+]");
+        return MimeUtility.unfold(header).split("[,\\s]+");
     }
 
     String getDeliveredTo() throws MessagingException {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1046,6 +1046,7 @@ private Address[] getAddressHeader(String name) throws MessagingException {
             return null;
 
         header = fixEncoding(name, header);
+        header = header.replaceAll("\\?=\\r?\\n\\s+=\\?", "\\?==\\?");
         Address[] addresses = InternetAddress.parseHeader(header, false);
 
         for (Address address : addresses) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1881,7 +1881,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
 
                         HtmlHelper.setViewport(document);
                         if (inline || show_images)
-                            HtmlHelper.embedInlineImages(context, message.id, document, show_images || !inline);
+                            HtmlHelper.embedInlineImages(context, message.id, document, true);
 
                         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
                         if (disable_tracking)

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -184,7 +184,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     }};
 
     static final int DEFAULT_SYNC = 7; // days
-    static final int DEFAULT_KEEP = 90; // days
+    static final int DEFAULT_KEEP = 30; // days
 
     private static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(
             INBOX,

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3928,7 +3928,8 @@ public void run() {
                     else
                         b = HtmlHelper.sanitizeCompose(context, body, true);
 
-                    if (TextUtils.isEmpty(body) ||
+                    if (dirty ||
+                            TextUtils.isEmpty(body) ||
                             !b.body().html().equals(doc.body().html()) ||
                             (extras != null && extras.containsKey("html"))) {
                         dirty = true;

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -2019,6 +2019,8 @@ public void tail(Node node, int depth) {
                             String[] params = style.split(";");
                             for (String param : params) {
                                 int semi = param.indexOf(":");
+                                if (semi < 0)
+                                    continue;
                                 String key = param.substring(0, semi);
                                 String value = param.substring(semi + 1);
                                 switch (key) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -380,7 +380,7 @@ public String getContentType(String filename) {
                         final ContentType cts = new ContentType(attachment.type);
                         String micalg = cts.getParameter("micalg");
                         if (TextUtils.isEmpty(micalg)) {
-                            Log.e("S/MIME micalg missing");
+                            Log.e("S/MIME micalg missing type=" + attachment.type);
                             micalg = "sha-256";
                         }
                         ParameterList params = cts.getParameterList();

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1072,7 +1072,8 @@ private static Integer getFontWeight(String value) {
 
         try {
             return Integer.parseInt(value);
-        } catch (NumberFormatException ignored) {
+        } catch (NumberFormatException ex) {
+            Log.w(ex);
         }
 
         return null;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -6054,7 +6054,7 @@ protected Void onExecute(Context context, Bundle args) throws JSONException {
 
                     if ((block_sender || block_domain) &&
                             (message.from != null && message.from.length > 0)) {
-                        EntityRule rule = EntityRule.blockSender(context, message, junk, block_sender, whitelist);
+                        EntityRule rule = EntityRule.blockSender(context, message, junk, block_domain, whitelist);
                         rule.id = db.rule().insertRule(rule);
                     }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1784,6 +1784,7 @@ static Spanned fromDocument(Context context, @NonNull Document document, @Nullab
                 private List<TextNode> block = new ArrayList<>();
 
                 private String WHITESPACE = " \t\f\u00A0";
+                private String WHITESPACE_NL = WHITESPACE + "\r\n";
                 private Pattern TRIM_WHITESPACE_NL =
                         Pattern.compile("[" + WHITESPACE + "]*\\r?\\n[" + WHITESPACE + "]*");
 
@@ -1861,14 +1862,14 @@ boolean startsWithWhiteSpace(String text) {
                     int len = text.length();
                     if (len == 0)
                         return false;
-                    return WHITESPACE.contains(text.substring(0, 1));
+                    return WHITESPACE_NL.contains(text.substring(0, 1));
                 }
 
                 boolean endsWithWhitespace(String text) {
                     int len = text.length();
                     if (len == 0)
                         return false;
-                    return WHITESPACE.contains(text.substring(len - 1));
+                    return WHITESPACE_NL.contains(text.substring(len - 1));
                 }
             }, document.body());
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -245,6 +245,7 @@ public class AdapterMessage extends RecyclerView.Adapter<AdapterMessage.ViewHold
     private boolean authentication;
     private boolean language_detection;
     private static boolean debug;
+    private boolean experiments;
 
     private boolean gotoTop = false;
     private boolean firstClick = false;
@@ -1913,7 +1914,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                         }
 
                         // Add debug info
-                        if (debug) {
+                        if (debug && !experiments) {
                             document.outputSettings().prettyPrint(true).outline(true).indentAmount(1);
                             String[] lines = document.html().split("\\r?\\n");
                             for (int i = 0; i < lines.length; i++)
@@ -4646,6 +4647,7 @@ else if (message.signed > 0)
         this.language_detection = prefs.getBoolean("language_detection", false);
 
         debug = prefs.getBoolean("debug", false);
+        this.experiments = prefs.getBoolean("experiments", false);
 
         DiffUtil.ItemCallback<TupleMessageEx> callback = new DiffUtil.ItemCallback<TupleMessageEx>() {
             @Override

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1920,7 +1920,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                                 lines[i] = Html.escapeHtml(lines[i]);
                             Element pre = document.createElement("pre");
                             pre.html(TextUtils.join("<br>", lines));
-                            document.appendChild(pre);
+                            document.body().appendChild(pre);
                         }
 
                         // Draw images

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3310,7 +3310,8 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
                         .setAllowGeneratedReplies(false);
                 RemoteInput.Builder input = new RemoteInput.Builder("text")
                         .setLabel(context.getString(R.string.title_advanced_notify_action_reply));
-                actionReply.addRemoteInput(input.build()).setAllowGeneratedReplies(false);
+                actionReply.addRemoteInput(input.build())
+                        .setAllowGeneratedReplies(false);
                 mbuilder.addAction(actionReply.build());
             }
 

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -100,7 +100,7 @@ protected void onHandleIntent(@Nullable Intent intent) {
         try {
             String[] parts = action.split(":");
             long id = (parts.length > 1 ? Long.parseLong(parts[1]) : -1);
-            String group = intent.getStringExtra("group");
+            long group = intent.getLongExtra("group", -1);
 
             switch (parts[0]) {
                 case "clear":
@@ -184,7 +184,7 @@ private void onClear(long group) {
         Log.i("Cleared=" + cleared);
     }
 
-    private void cancel(String group, long id) {
+    private void cancel(long group, long id) {
         String tag = "unseen." + group + ":" + id;
 
         NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -111,7 +111,7 @@ private void unwire() {
         }
 
         private void bindTo(EntityAttachment attachment) {
-            view.setAlpha(attachment.isInline() ? Helper.LOW_LIGHT : 1.0f);
+            view.setAlpha(!attachment.isAttachment() ? Helper.LOW_LIGHT : 1.0f);
 
             ibDelete.setVisibility(readonly ? View.GONE :
                     attachment.isInline() && attachment.error == null ? View.INVISIBLE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -197,6 +197,9 @@ String getMimeType() {
         if ("text/plain".equals(type) && "ovpn".equals(extension))
             return "application/x-openvpn-profile";
 
+        if ("application/x-pdf".equals(type))
+            return "application/pdf";
+
         if (TextUtils.isEmpty(type) ||
                 type.startsWith("unknown/") || type.endsWith("/unknown") ||
                 "application/octet-stream".equals(type) || "application/zip".equals(type)) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4066,7 +4066,7 @@ public void run() {
 
                             if (draft.to == null && draft.cc == null && draft.bcc == null &&
                                     (identity == null || (identity.cc == null && identity.bcc == null)))
-                            args.putBoolean("remind_to", true);
+                                args.putBoolean("remind_to", true);
 
                             if (TextUtils.isEmpty(draft.extra) &&
                                     identity != null && identity.sender_extra)
@@ -4915,8 +4915,8 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             spPriority.setSelection(1);
             tvSendAt.setText(null);
             cbNotAgain.setChecked(!send_dialog);
-            cbNotAgain.setVisibility(dialog || send_dialog ? View.VISIBLE : View.GONE);
-            tvNotAgain.setVisibility(cbNotAgain.isChecked() && dialog ? View.VISIBLE : View.GONE);
+            cbNotAgain.setVisibility(send_dialog ? View.VISIBLE : View.GONE);
+            tvNotAgain.setVisibility(cbNotAgain.isChecked() ? View.VISIBLE : View.GONE);
 
             Helper.setViewsEnabled(dview, false);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4915,7 +4915,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             spPriority.setSelection(1);
             tvSendAt.setText(null);
             cbNotAgain.setChecked(!send_dialog);
-            cbNotAgain.setVisibility(dialog ? View.VISIBLE : View.GONE);
+            cbNotAgain.setVisibility(dialog || send_dialog ? View.VISIBLE : View.GONE);
             tvNotAgain.setVisibility(cbNotAgain.isChecked() && dialog ? View.VISIBLE : View.GONE);
 
             Helper.setViewsEnabled(dview, false);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4064,8 +4064,9 @@ public void run() {
                             if (draft.identity == null)
                                 throw new IllegalArgumentException(context.getString(R.string.title_from_missing));
 
-                            if (draft.to == null && draft.cc == null && draft.bcc == null)
-                                args.putBoolean("remind_to", true);
+                            if (draft.to == null && draft.cc == null && draft.bcc == null &&
+                                    (identity == null || (identity.cc == null && identity.bcc == null)))
+                            args.putBoolean("remind_to", true);
 
                             if (TextUtils.isEmpty(draft.extra) &&
                                     identity != null && identity.sender_extra)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -510,6 +510,8 @@ public void onChanged(List<TupleMessageStats> stats) {
                 if (!changed)
                     return;
 
+                last = stats;
+
                 Widget.update(ServiceSynchronize.this);
 
                 boolean badge = prefs.getBoolean("badge", true);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1425,7 +1425,7 @@ static void onSynchronizeFolders(Context context, EntityAccount account, Store i
                         folder.type = (EntityFolder.SYSTEM.equals(type) ? type : EntityFolder.USER);
                         folder.synchronize = false;
                         folder.subscribed = subscribed;
-                        folder.poll = account.shouldPoll();
+                        folder.poll = true;
                         folder.sync_days = EntityFolder.DEFAULT_SYNC;
                         folder.keep_days = EntityFolder.DEFAULT_KEEP;
                         folder.selectable = selectable;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1462,8 +1462,6 @@ boolean hasBody() throws MessagingException {
             List<Part> all = new ArrayList<>();
             all.addAll(plain);
             all.addAll(html);
-            if (all.size() == 0)
-                return true;
 
             for (Part p : all)
                 if (p.getSize() > 0)

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -113,7 +113,8 @@ private void unwire() {
         private void bindTo(EntityAttachment attachment) {
             view.setAlpha(attachment.isInline() && attachment.isImage() ? Helper.LOW_LIGHT : 1.0f);
 
-            ibDelete.setVisibility(readonly ? View.GONE : attachment.isInline() ? View.INVISIBLE : View.VISIBLE);
+            ibDelete.setVisibility(readonly ? View.GONE :
+                    attachment.isInline() && attachment.error == null ? View.INVISIBLE : View.VISIBLE);
             ivType.setImageDrawable(null);
             tvName.setText(attachment.name);
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -3065,7 +3065,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
 
             // Build notification
             NotificationCompat.Builder builder =
-                    new NotificationCompat.Builder(context, "notification")
+                    new NotificationCompat.Builder(context, EntityAccount.getNotificationChannelId(group))
                             .setSmallIcon(messages.size() > 1
                                     ? R.drawable.baseline_mail_more_white_24
                                     : R.drawable.baseline_mail_white_24)

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -982,7 +982,8 @@ private void bindTo(final TupleMessageEx message, boolean scroll) {
             if (viewType == ViewType.FOLDER)
                 tvFolder.setText(outbox ? message.identityEmail : message.accountName);
             else if (viewType == ViewType.THREAD || viewType == ViewType.SEARCH)
-                tvFolder.setText(message.getFolderName(context));
+                tvFolder.setText(message.getFolderName(context) +
+                        (BuildConfig.DEBUG ? ":" + message.id : ""));
             else
                 tvFolder.setText(message.accountName + "/" + message.getFolderName(context));
 
@@ -4920,7 +4921,7 @@ public void run() {
                             if (properties.getValue("expanded", id)) {
                                 Context context = parentFragment.getContext();
                                 if (context != null)
-                                    ToastEx.makeText(context, msg, Toast.LENGTH_SHORT).show();
+                                    ToastEx.makeText(context, msg + " id=" + id, Toast.LENGTH_SHORT).show();
                             }
                         }
                     });

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -190,7 +190,7 @@ public boolean onLongClick(View v) {
             popupMenu.getMenu().add(Menu.NONE, R.string.title_primary, 2, R.string.title_primary)
                     .setCheckable(true).setChecked(identity.primary);
 
-            if (identity.sign_key != null)
+            if (identity.sign_key != null || identity.sign_key_alias != null)
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_reset_sign_key, 3, R.string.title_reset_sign_key);
 
             popupMenu.getMenu().add(Menu.NONE, R.string.title_copy, 4, R.string.title_copy);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4035,8 +4035,6 @@ public void run() {
                             if (pgpService.isBound() &&
                                     !EntityMessage.PGP_SIGNENCRYPT.equals(draft.ui_encrypt)) {
                                 List<Address> recipients = new ArrayList<>();
-                                if (draft.from != null)
-                                    recipients.addAll(Arrays.asList(draft.from));
                                 if (draft.to != null)
                                     recipients.addAll(Arrays.asList(draft.to));
                                 if (draft.cc != null)

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4824,8 +4824,7 @@ public boolean areContentsTheSame(
                 }
                 if (!Objects.equals(prev.last_attempt, next.last_attempt)) {
                     same = false;
-                    log("last_attempt changed " +
-                            (prev.last_attempt % 10000) + "/" + (next.last_attempt % 10000), next.id);
+                    log("last_attempt changed " + prev.last_attempt + "/" + next.last_attempt, next.id);
                 }
 
                 // accountPop

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -100,7 +100,7 @@ public class EmailService implements AutoCloseable {
     static final int PURPOSE_USE = 2;
     static final int PURPOSE_SEARCH = 3;
 
-    final static int DEFAULT_CONNECT_TIMEOUT = 15; // seconds
+    final static int DEFAULT_CONNECT_TIMEOUT = 20; // seconds
 
     private final static int SEARCH_TIMEOUT = 2 * 60 * 1000; // milliseconds
     private final static int FETCH_SIZE = 1024 * 1024; // bytes, default 16K

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3693,7 +3693,8 @@ protected void onPreExecute(Bundle args) {
         @Override
         protected void onPostExecute(Bundle args) {
             int action = args.getInt("action");
-            if (action != R.id.action_check)
+            boolean needsEncryption = args.getBoolean("needsEncryption");
+            if (action != R.id.action_check || needsEncryption)
                 setBusy(false);
         }
 

File: app/src/main/java/eu/faircode/email/Widget.java
Patch:
@@ -105,7 +105,7 @@ public void run() {
                             ? R.drawable.baseline_mail_outline_24
                             : R.drawable.baseline_mail_24);
                     views.setTextViewText(R.id.tvCount, unseen < 100 ? nf.format(unseen) : "99+");
-                    views.setViewVisibility(R.id.tvCount, unseen == 0 ? View.GONE : View.VISIBLE);
+                    views.setViewVisibility(R.id.tvCount, layout == 1 && unseen == 0 ? View.GONE : View.VISIBLE);
 
                     if (!TextUtils.isEmpty(name)) {
                         views.setTextViewText(R.id.tvAccount, name);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -618,7 +618,7 @@ static class SearchCriteria implements Serializable {
         boolean in_senders = true;
         boolean in_receipients = true;
         boolean in_subject = true;
-        boolean in_keywords = false;
+        boolean in_keywords = true;
         boolean in_message = true;
         boolean with_unseen;
         boolean with_flagged;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1874,9 +1874,10 @@ else if (content instanceof String) {
                 ContentType contentType;
                 try {
                     String c = part.getContentType();
-                    contentType = new ContentType(c == null ? "" : c);
+                    contentType = new ContentType(
+                            TextUtils.isEmpty(c) ? "application/octet-stream" : c);
                 } catch (ParseException ex) {
-                    Log.w(ex);
+                    Log.e(ex);
                     parts.warnings.add(Log.formatThrowable(ex, false));
 
                     if (part instanceof MimeMessage)

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -101,7 +101,7 @@ public void uncaughtException(Thread thread, Throwable ex) {
             }
         });
 
-        Log.setupBugsnag(this);
+        Log.setup(this);
 
         upgrade(this);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -259,6 +259,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("debug", checked).apply();
+                Log.setDebug(checked);
                 grpDebug.setVisibility(checked || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
             }
         });

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -410,6 +410,8 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
                 message.cc = helper.getCc();
                 message.bcc = helper.getBcc();
                 message.reply = helper.getReply();
+                message.encrypt = parts.getEncryption();
+                message.ui_encrypt = message.encrypt;
                 message.received = new Date().getTime();
                 message.seen = true;
                 message.ui_seen = true;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3936,7 +3936,7 @@ public void run() {
 
                             d = JsoupEx.parse(extras.getString("html"));
                         } else {
-                            d = JsoupEx.parse(body);
+                            d = HtmlHelper.sanitizeCompose(context, body, true);
 
                             for (Element e : ref)
                                 d.body().appendChild(e);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3065,7 +3065,7 @@ public void onChanged(List<Long> ids) {
                 break;
 
             case THREAD:
-                db.message().liveThreadStats(account, thread, null).observe(getViewLifecycleOwner(), new Observer<TupleThreadStats>() {
+                db.message().liveThreadStats(account, thread, null, filter_archive).observe(getViewLifecycleOwner(), new Observer<TupleThreadStats>() {
                     @Override
                     public void onChanged(TupleThreadStats stats) {
                         if (stats == null)

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -136,7 +136,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             " AND (NOT :filter_unknown OR SUM(message.avatar IS NOT NULL AND message.sender <> identity.email) > 0" +
             "   OR " + is_outbox + " OR " + is_drafts + " OR " + is_sent + ")" +
             " AND (NOT :filter_snoozed OR message.ui_snoozed IS NULL OR " + is_outbox + " OR " + is_drafts + ")" +
-            " AND (:filter_language IS NULL OR SUM(message.language = :filter_language) > 0)" +
+            " AND (:filter_language IS NULL OR SUM(message.language = :filter_language) > 0 OR " + is_outbox + ")" +
             " ORDER BY -IFNULL(MAX(message.importance), 1)" +
             ", CASE" +
             "   WHEN 'unread' = :sort THEN SUM(1 - message.ui_seen) = 0" +

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -386,7 +386,7 @@ private void setOptions() {
         swConversationActions.setChecked(prefs.getBoolean("conversation_actions", true));
         swConversationActionsReplies.setChecked(prefs.getBoolean("conversation_actions_replies", true));
         swConversationActionsReplies.setEnabled(swConversationActions.isChecked());
-        swLanguageDetection.setChecked(prefs.getBoolean("language_detection", true));
+        swLanguageDetection.setChecked(prefs.getBoolean("language_detection", false));
         swLanguageDetection.setVisibility(Build.VERSION.SDK_INT < Build.VERSION_CODES.Q ? View.GONE : View.VISIBLE);
 
         int default_snooze = prefs.getInt("default_snooze", 1);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1108,7 +1108,7 @@ static void setViewport(Document document) {
     static String getLanguage(Context context, String body) {
         try {
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-            boolean language_detection = prefs.getBoolean("language_detection", true);
+            boolean language_detection = prefs.getBoolean("language_detection", false);
             if (!language_detection)
                 return null;
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1327,7 +1327,7 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
 
             cowner.recreate();
 
-            boolean show_addresses = !properties.getValue("addresses", message.id);
+            boolean show_addresses = properties.getValue("addresses", message.id);
             boolean show_headers = properties.getValue("headers", message.id);
 
             boolean hasFrom = (message.from != null && message.from.length > 0);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3081,7 +3081,7 @@ else if ("receipt".equals(action)) {
                         String subject = (ref.subject == null ? "" : ref.subject);
                         if ("reply".equals(action) || "reply_all".equals(action)) {
                             if (prefix_once)
-                                for (String re : Helper.getStrings(context, R.string.title_subject_reply, ""))
+                                for (String re : Helper.getStrings(context, ref.language, R.string.title_subject_reply, ""))
                                     subject = unprefix(subject, re);
                             data.draft.subject = context.getString(R.string.title_subject_reply, subject);
 
@@ -3098,7 +3098,7 @@ else if ("receipt".equals(action)) {
                             }
                         } else if ("forward".equals(action)) {
                             if (prefix_once)
-                                for (String fwd : Helper.getStrings(context, R.string.title_subject_forward, ""))
+                                for (String fwd : Helper.getStrings(context, ref.language, R.string.title_subject_forward, ""))
                                     subject = unprefix(subject, fwd);
                             data.draft.subject = context.getString(R.string.title_subject_forward, subject);
                         } else if ("editasnew".equals(action)) {

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -377,6 +377,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.sync_state, other.sync_state) &&
                     this.read_only == other.read_only &&
                     this.selectable == other.selectable &&
+                    this.inferiors == other.inferiors &&
                     Objects.equals(this.error, other.error) &&
                     Objects.equals(this.last_sync, other.last_sync));
         } else

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -267,7 +267,7 @@ private void setOptions() {
 
         swDisplayHidden.setChecked(prefs.getBoolean("display_hidden", false));
         swSecure.setChecked(prefs.getBoolean("secure", false));
-        swSafeBrowsing.setChecked(prefs.getBoolean("safe_browsing", true));
+        swSafeBrowsing.setChecked(prefs.getBoolean("safe_browsing", false));
     }
 
     public static class FragmentDialogPin extends FragmentDialogBase {

File: app/src/main/java/eu/faircode/email/WebViewEx.java
Patch:
@@ -59,7 +59,7 @@ public WebViewEx(Context context) {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-            boolean safe_browsing = prefs.getBoolean("safe_browsing", true);
+            boolean safe_browsing = prefs.getBoolean("safe_browsing", false);
             settings.setSafeBrowsingEnabled(safe_browsing);
         }
     }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -160,6 +160,7 @@ public void run() {
                     else
                         fetched = load_device(state);
                 } catch (final Throwable ex) {
+                    state.error = true;
                     Log.e("Boundary", ex);
                     if (intf != null)
                         handler.post(new Runnable() {

File: app/src/main/java/eu/faircode/email/ImageHelper.java
Patch:
@@ -532,7 +532,8 @@ private static Drawable downloadImage(Context context, long id, String source) t
                 urlConnection.setReadTimeout(DOWNLOAD_TIMEOUT);
                 urlConnection.setConnectTimeout(DOWNLOAD_TIMEOUT);
                 urlConnection.setInstanceFollowRedirects(true);
-                urlConnection.setRequestProperty("User-Agent", ua);
+                if (BuildConfig.DEBUG)
+                    urlConnection.setRequestProperty("User-Agent", ua);
                 urlConnection.connect();
 
                 int status = urlConnection.getResponseCode();

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -179,7 +179,7 @@ public class EntityFolder extends EntityOrder implements Serializable {
     }};
 
     static final int DEFAULT_SYNC = 7; // days
-    static final int DEFAULT_KEEP = 60; // days
+    static final int DEFAULT_KEEP = 90; // days
 
     private static final List<String> SYSTEM_FOLDER_SYNC = Collections.unmodifiableList(Arrays.asList(
             INBOX,

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -336,6 +336,8 @@ private int load_server(State state) throws MessagingException, IOException {
                     db.folder().setFolderReadOnly(browsable.id, true);
                 }
 
+                db.folder().setFolderError(browsable.id, null);
+
                 int count = state.ifolder.getMessageCount();
                 db.folder().setFolderTotal(browsable.id, count < 0 ? null : count);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3011,6 +3011,9 @@ private void onToggleMessage(TupleMessageEx message) {
             else {
                 boolean expanded = !properties.getValue("expanded", message.id);
                 properties.setExpanded(message, expanded);
+                // Needed to scroll to item after collapsing other items
+                if (expanded)
+                    properties.scrollTo(getAdapterPosition(), 0);
                 bindTo(message, expanded);
             }
         }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4440,9 +4440,9 @@ public boolean onKeyPressed(KeyEvent event) {
 
             switch (event.getKeyCode()) {
                 case KeyEvent.KEYCODE_VOLUME_UP:
-                    return (!up || onNext(context));
+                    return onNext(context);
                 case KeyEvent.KEYCODE_VOLUME_DOWN:
-                    return (!up || onPrevious(context));
+                    return onPrevious(context);
                 case KeyEvent.KEYCODE_ENTER:
                 case KeyEvent.KEYCODE_NUMPAD_ENTER:
                     return (!up || onViewThread(context));

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -136,7 +136,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("enabled", checked).apply();
-                ServiceSynchronize.eval(getContext(), "enabled=" + checked);
+                ServiceSynchronize.reschedule(getContext());
             }
         });
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1958,7 +1958,7 @@ else if (result == null) {
                             LinearLayout.LayoutParams lparam = new LinearLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
 
                             List<ConversationAction> actions = cactions.getConversationActions();
-                            for (ConversationAction action : actions) {
+                            for (final ConversationAction action : actions) {
                                 final RemoteAction raction = action.getAction();
                                 final CharSequence title = (raction == null
                                         ? context.getString(R.string.title_conversation_action_reply, action.getTextReply())
@@ -1976,7 +1976,7 @@ public void onClick(View v) {
                                                 Intent reply = new Intent(context, ActivityCompose.class)
                                                         .putExtra("action", "reply")
                                                         .putExtra("reference", message.id)
-                                                        .putExtra("text", title);
+                                                        .putExtra("text", action.getTextReply());
                                                 context.startActivity(reply);
                                             } else
                                                 raction.getActionIntent().send();

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -250,7 +250,7 @@ else if (version < 751) {
         } else if (version < 1021) {
             boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
             if (!highlight_unread)
-                prefs.edit().putBoolean("highlight_unread", highlight_unread);
+                editor.putBoolean("highlight_unread", highlight_unread);
         }
 
         if (BuildConfig.DEBUG && false) {

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -468,7 +468,7 @@ private void onSync(long aid, boolean reschedule) {
         if (reschedule) {
             long now = new Date().getTime();
             long[] schedule = ServiceSynchronize.getSchedule(this);
-            boolean enabled = (schedule == null || (now >= schedule[0] && now < schedule[1]));
+            boolean enabled = (schedule != null && now >= schedule[0] && now < schedule[1]);
             schedule(this, enabled);
         }
     }

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -364,7 +364,7 @@ public void onChanged(List<TupleAccountView> accounts) {
                 if (changed) {
                     Log.i("Invalidating account view");
                     last = accounts;
-                    db.getInvalidationTracker().notifyObserversByTableNames("account_view");
+                    db.getInvalidationTracker().notifyObserversByTableNames("message");
                 }
             }
         });
@@ -390,7 +390,7 @@ public void onChanged(List<TupleIdentityView> identities) {
                 if (changed) {
                     Log.i("Invalidating identity view");
                     last = identities;
-                    db.getInvalidationTracker().notifyObserversByTableNames("identity_view");
+                    db.getInvalidationTracker().notifyObserversByTableNames("message");
                 }
             }
         });
@@ -416,7 +416,7 @@ public void onChanged(List<TupleFolderView> folders) {
                 if (changed) {
                     Log.i("Invalidating folder view");
                     last = folders;
-                    db.getInvalidationTracker().notifyObserversByTableNames("folder_view");
+                    db.getInvalidationTracker().notifyObserversByTableNames("message");
                 }
             }
         });

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1085,7 +1085,7 @@ protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
                     ToastEx.makeText(ActivityView.this, ex.getMessage(), Toast.LENGTH_LONG).show();
                 else
-                    ToastEx.makeText(ActivityView.this, ex.toString(), Toast.LENGTH_LONG).show();
+                    Log.unexpectedError(getSupportFragmentManager(), ex);
             }
 
         }.execute(this, new Bundle(), "debug:info");

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -187,7 +187,8 @@ String getMimeType() {
         if ("text/plain".equals(type) && "ovpn".equals(extension))
             return "application/x-openvpn-profile";
 
-        if (TextUtils.isEmpty(type) || type.endsWith("/unknown") ||
+        if (TextUtils.isEmpty(type) ||
+                type.startsWith("unknown/") || type.endsWith("/unknown") ||
                 "application/octet-stream".equals(type) || "application/zip".equals(type)) {
             if ("log".equalsIgnoreCase(extension))
                 return "text/plain";

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4965,7 +4965,9 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
                                         db.beginTransaction();
 
                                         // Write decrypted body
-                                        Helper.copy(plain, message.getFile(context));
+                                        String text = Helper.readText(plain);
+                                        String html = HtmlHelper.formatPre(text);
+                                        Helper.writeText(message.getFile(context), html);
                                         db.message().setMessageStored(message.id, new Date().getTime());
                                         db.message().setMessageFts(message.id, false);
 

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -102,7 +102,7 @@ public void onClick(View view) {
 
             EntityAttachment attachment = items.get(pos);
             if (attachment.available)
-                Helper.share(context, attachment.getFile(context), attachment.type, attachment.name);
+                Helper.share(context, attachment.getFile(context), attachment.getMimeType(), attachment.name);
             else {
                 if (attachment.progress == null) {
                     Bundle args = new Bundle();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3387,7 +3387,7 @@ public boolean onTouchEvent(TextView widget, Spannable buffer, MotionEvent event
         private boolean onOpenLink(final Uri uri, String title) {
             Log.i("Opening uri=" + uri + " title=" + title);
 
-            if (BuildConfig.APPLICATION_ID.equals(uri.getHost()) && "/activate/".equals(uri.getPath())) {
+            if ("eu.faircode.email".equals(uri.getHost()) && "/activate/".equals(uri.getPath())) {
                 try {
                     if (ActivityBilling.activatePro(context, uri))
                         ToastEx.makeText(context, R.string.title_pro_valid, Toast.LENGTH_LONG).show();

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -1064,7 +1064,8 @@ protected void onException(Bundle args, Throwable ex) {
                     grpAdvanced.setVisibility(savedInstanceState.getInt("fair:advanced"));
                     auth = savedInstanceState.getInt("fair:auth");
                     provider = savedInstanceState.getString("fair:authprovider");
-                    signature = savedInstanceState.getString("fair:html");
+                    if (signature == null)
+                        signature = savedInstanceState.getString("fair:html");
                 }
 
                 Helper.setViewsEnabled(view, true);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5396,7 +5396,7 @@ public AttributeTable getSignedAttributes() {
                     if (is == null) {
                         if (message.identity != null)
                             db.identity().setIdentitySignKeyAlias(message.identity, null);
-                        throw new IllegalArgumentException(context.getString(R.string.title_invalid_key));
+                        throw new IllegalArgumentException(context.getString(R.string.title_unknown_key));
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -340,7 +340,7 @@ else if (auth == AUTH_TYPE_OAUTH) {
         } catch (MailConnectException ex) {
             if (ConnectionHelper.vpnActive(context)) {
                 MailConnectException mex = new MailConnectException(new SocketConnectException(
-                        "The might be caused by the VPN in use",
+                        context.getString(R.string.title_service_vpn),
                         new Exception(),
                         ex.getHost(),
                         ex.getPort(),
@@ -351,7 +351,7 @@ else if (auth == AUTH_TYPE_OAUTH) {
                 throw ex;
         } catch (MessagingException ex) {
             if (port == 995 && !("pop3".equals(protocol) || "pop3s".equals(protocol)))
-                throw new MessagingException("Please double check the port number", ex);
+                throw new MessagingException(context.getString(R.string.title_service_port), ex);
             else
                 throw ex;
         }

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -124,6 +124,8 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
 
         style_bar.setVisibility(View.GONE);
 
+        setResult(RESULT_CANCELED, new Intent());
+
         load();
     }
 

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -124,8 +124,6 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
 
         style_bar.setVisibility(View.GONE);
 
-        setResult(RESULT_CANCELED, new Intent());
-
         load();
     }
 

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -104,10 +104,10 @@ boolean isInline() {
 
     boolean isImage() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
-            if (IMAGE_TYPES8.contains(type))
+            if (IMAGE_TYPES8.contains(getMimeType()))
                 return true;
 
-        return IMAGE_TYPES.contains(type);
+        return IMAGE_TYPES.contains(getMimeType());
     }
 
     File getFile(Context context) {

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -341,7 +341,7 @@ private void onActionCopy() {
         this.inflater = LayoutInflater.from(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -747,7 +747,7 @@ private void onActionCreateFolder() {
         this.textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
 
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
 
         setHasStableIds(true);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4206,7 +4206,7 @@ else if (message.signed > 0)
         this.textColorPrimary = Helper.resolveColor(context, android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
 
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
 
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : R.attr.colorUnread);
         this.colorRead = Helper.resolveColor(context, R.attr.colorRead);

File: app/src/main/java/eu/faircode/email/AdapterNavAccount.java
Patch:
@@ -178,7 +178,7 @@ protected void onException(Bundle args, Throwable ex) {
         this.inflater = LayoutInflater.from(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
 

File: app/src/main/java/eu/faircode/email/AdapterNavFolder.java
Patch:
@@ -160,7 +160,7 @@ public void onClick(View v) {
         this.inflater = LayoutInflater.from(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.debug = prefs.getBoolean("debug", false);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);

File: app/src/main/java/eu/faircode/email/AdapterNavMenu.java
Patch:
@@ -126,7 +126,7 @@ public boolean onLongClick(View v) {
         this.inflater = LayoutInflater.from(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
 

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -131,7 +131,7 @@ public void onClick(View v) {
         this.inflater = LayoutInflater.from(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean highlight_unread = prefs.getBoolean("highlight_unread", false);
+        boolean highlight_unread = prefs.getBoolean("highlight_unread", true);
         this.colorUnread = Helper.resolveColor(context, highlight_unread ? R.attr.colorUnreadHighlight : android.R.attr.textColorPrimary);
         this.textColorSecondary = Helper.resolveColor(context, android.R.attr.textColorSecondary);
     }

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -659,7 +659,7 @@ private void setOptions() {
         swIndentation.setEnabled(swCards.isChecked());
         swActionbar.setChecked(prefs.getBoolean("actionbar", true));
 
-        swHighlightUnread.setChecked(prefs.getBoolean("highlight_unread", false));
+        swHighlightUnread.setChecked(prefs.getBoolean("highlight_unread", true));
         swColorStripe.setChecked(prefs.getBoolean("color_stripe", true));
         swAvatars.setChecked(prefs.getBoolean("avatars", true));
         swGravatars.setChecked(prefs.getBoolean("gravatars", false));

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -527,7 +527,8 @@ public void onTextChanged(CharSequence text, int start, int before, int count) {
                         }
 
                         int color = Helper.resolveColor(getContext(), android.R.attr.textColorPrimary);
-                        ssb.setSpan(new ForegroundColorSpan(color), start, start, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
+                        int flags = (Spanned.SPAN_INCLUSIVE_INCLUSIVE | Spanned.SPAN_COMPOSING);
+                        ssb.setSpan(new ForegroundColorSpan(color), start, start, flags);
 
                         etBody.setText(ssb);
                         etBody.setSelection(start);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4414,7 +4414,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final TextView tvVia = dview.findViewById(R.id.tvVia);
             final CheckBox cbPlainOnly = dview.findViewById(R.id.cbPlainOnly);
             final CheckBox cbReceipt = dview.findViewById(R.id.cbReceipt);
-            final TextView tvReceipt = dview.findViewById(R.id.tvReceipt);
+            final TextView tvReceipt = dview.findViewById(R.id.tvReceiptType);
             final Spinner spEncrypt = dview.findViewById(R.id.spEncrypt);
             final Spinner spPriority = dview.findViewById(R.id.spPriority);
             final TextView tvSendAt = dview.findViewById(R.id.tvSendAt);

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -49,7 +49,7 @@ public interface DaoIdentity {
             " WHERE (:account IS NULL OR account.id = :account)" +
             " AND identity.synchronize" +
             " AND account.synchronize" +
-            " ORDER BY account.`order`, account.`primary` DESC, account.name COLLATE NOCASE" +
+            " ORDER BY account.`primary` DESC, account.name COLLATE NOCASE" +
             ", identity.`primary` DESC, identity.display COLLATE NOCASE, identity.name COLLATE NOCASE, identity.email COLLATE NOCASE")
     List<TupleIdentityEx> getComposableIdentities(Long account);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1739,7 +1739,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
 
                         HtmlHelper.setViewport(document);
                         if (inline || show_images)
-                            HtmlHelper.embedInlineImages(context, message.id, document);
+                            HtmlHelper.embedInlineImages(context, message.id, document, show_images || !inline);
 
                         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
                         if (disable_tracking)

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -5893,7 +5893,7 @@ protected String[] onExecute(Context context, Bundle args) throws IOException {
 
                 Document document = JsoupEx.parse(file);
                 HtmlHelper.truncate(document, false);
-                HtmlHelper.embedInlineImages(context, id, document);
+                HtmlHelper.embedInlineImages(context, id, document, true);
 
                 Element p = document.createElement("p");
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -109,7 +109,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     static final int DEFAULT_POLL_INTERVAL = 0; // minutes
     private static final int STILL_THERE_POLL_INTERVAL = 15; // minutes
     private static final int CONNECT_BACKOFF_START = 8; // seconds
-    private static final int CONNECT_BACKOFF_MAX = 64; // seconds (totally 2 minutes)
+    private static final int CONNECT_BACKOFF_MAX = 32; // seconds (totally ~1 minutes)
     private static final int CONNECT_BACKOFF_AlARM_START = 15; // minutes
     private static final int CONNECT_BACKOFF_AlARM_MAX = 60; // minutes
     private static final long RECONNECT_BACKOFF = 90 * 1000L; // milliseconds

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -224,6 +224,8 @@ private void html(boolean raw) {
     private void insertImage() {
         Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
         intent.addCategory(Intent.CATEGORY_OPENABLE);
+        intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
+        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         intent.setType("image/*");
         Helper.openAdvanced(intent);
         startActivityForResult(intent, REQUEST_IMAGE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1530,7 +1530,7 @@ public void run() {
                     if (backoff <= CONNECT_BACKOFF_MAX) {
                         // Short back-off period, keep device awake
                         try {
-                            state.acquire(backoff * 1000L * (state.getMaxConnections() ? 2 : 1));
+                            state.acquire(backoff * 1000L);
                         } catch (InterruptedException ex) {
                             Log.w(account.name + " backoff " + ex.toString());
                         }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -466,7 +466,7 @@ static void customTabsWarmup(Context context) {
             CustomTabsClient.bindCustomTabsService(context, "com.android.chrome", new CustomTabsServiceConnection() {
                 @Override
                 public void onCustomTabsServiceConnected(@NonNull ComponentName name, @NonNull CustomTabsClient client) {
-                    Log.i("Warning up custom tabs");
+                    Log.i("Warming up custom tabs");
                     try {
                         client.warmup(0);
                     } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/ActivitySignature.java
Patch:
@@ -46,7 +46,6 @@
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 
-import java.io.FileNotFoundException;
 import java.io.InputStream;
 
 public class ActivitySignature extends ActivityBase {
@@ -287,7 +286,8 @@ static Drawable getDrawableByUri(Context context, Uri uri) {
                 Log.i("Loading image source=" + uri);
                 InputStream inputStream = context.getContentResolver().openInputStream(uri);
                 d = Drawable.createFromStream(inputStream, uri.toString());
-            } catch (FileNotFoundException ex) {
+            } catch (Throwable ex) {
+                // FileNotFound, Security
                 Log.w(ex);
                 d = context.getResources().getDrawable(R.drawable.baseline_broken_image_24);
             }

File: app/src/main/java/eu/faircode/email/FixedScrollView.java
Patch:
@@ -20,8 +20,8 @@
 */
 
 import android.content.Context;
-import android.graphics.Rect;
 import android.util.AttributeSet;
+import android.view.View;
 import android.widget.ScrollView;
 
 public class FixedScrollView extends ScrollView {
@@ -42,7 +42,6 @@ public FixedScrollView(Context context, AttributeSet attrs, int defStyleAttr, in
     }
 
     @Override
-    protected int computeScrollDeltaToGetChildRectOnScreen(Rect rect) {
-        return 0;
+    public void requestChildFocus(View child, View focused) {
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -369,7 +369,7 @@ private void setOptions() {
         swFts.setChecked(prefs.getBoolean("fts", false));
         swEnglish.setChecked(prefs.getBoolean("english", false));
         swWatchdog.setChecked(prefs.getBoolean("watchdog", true));
-        swOptimize.setChecked(prefs.getBoolean("auto_optimize", true));
+        swOptimize.setChecked(prefs.getBoolean("auto_optimize", false));
         swUpdates.setChecked(prefs.getBoolean("updates", true));
         swUpdates.setVisibility(
                 Helper.isPlayStoreInstall() || !Helper.hasValidFingerprint(getContext())

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -829,7 +829,7 @@ public void notification(StoreEvent e) {
                                 if (now - start > STILL_THERE_THRESHOLD)
                                     return;
 
-                                boolean auto_optimize = prefs.getBoolean("auto_optimize", true);
+                                boolean auto_optimize = prefs.getBoolean("auto_optimize", false);
                                 if (!auto_optimize)
                                     return;
 

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -128,7 +128,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         // Observe identities
-        DB.getInstance(getContext()).identity().liveIdentities(false).observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
+        DB.getInstance(getContext()).identity().liveIdentities().observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
             @Override
             public void onChanged(@Nullable List<TupleIdentityEx> identities) {
                 if (identities == null)

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -394,7 +394,7 @@ protected void onException(Bundle args, Throwable ex) {
             }
         });
 
-        db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
+        db.identity().liveComposableIdentities().observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
             @Override
             public void onChanged(@Nullable List<TupleIdentityEx> identities) {
                 boolean done = (identities != null && identities.size() > 0);

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -187,7 +187,8 @@ String getMimeType() {
         if ("text/plain".equals(type) && "ovpn".equals(extension))
             return "application/x-openvpn-profile";
 
-        if ("application/zip".equals(type) || "application/octet-stream".equals(type)) {
+        if (TextUtils.isEmpty(type) || type.endsWith("/unknown") ||
+                "application/octet-stream".equals(type) || "application/zip".equals(type)) {
             if ("log".equalsIgnoreCase(extension))
                 return "text/plain";
 

File: app/src/main/java/eu/faircode/email/TupleOperationEx.java
Patch:
@@ -58,7 +58,9 @@ PartitionKey getPartitionKey(boolean offline) {
 
         key.priority = this.priority;
 
-        if (FETCH.equals(name))
+        if (ADD.equals(name) || DELETE.equals(name)) {
+            key.id = "msg:" + message;
+        } else if (FETCH.equals(name))
             try {
                 JSONArray jargs = new JSONArray(args);
                 long uid = jargs.getLong(0);

File: app/src/main/java/eu/faircode/email/FragmentOptionsPrivacy.java
Patch:
@@ -263,7 +263,7 @@ public void run() {
                             boolean pro = ActivityBilling.isPro(getContext());
                             if (pro) {
                                 prefs.edit().putBoolean("biometrics", !biometrics).apply();
-                                btnBiometrics.setText(biometrics
+                                btnBiometrics.setText(!biometrics
                                         ? R.string.title_setup_biometrics_disable
                                         : R.string.title_setup_biometrics_enable);
                             } else

File: app/src/main/java/eu/faircode/email/FragmentBase.java
Patch:
@@ -382,7 +382,7 @@ protected void onExecuted(Bundle args, Void data) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                     if (ex instanceof RecoverableSecurityException) {
                         handle((RecoverableSecurityException) ex);
                         return;
@@ -464,7 +464,7 @@ protected void onExecuted(Bundle args, Void data) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                     if (ex instanceof RecoverableSecurityException) {
                         handle((RecoverableSecurityException) ex);
                         return;
@@ -478,7 +478,7 @@ protected void onException(Bundle args, Throwable ex) {
         }.execute(this, args, "attachments:save");
     }
 
-    @RequiresApi(api = Build.VERSION_CODES.O)
+    @RequiresApi(api = Build.VERSION_CODES.Q)
     private void handle(RecoverableSecurityException ex) {
         new AlertDialog.Builder(getContext())
                 .setMessage(ex.getMessage())

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1738,6 +1738,7 @@ protected Object onExecute(final Context context, final Bundle args) throws IOEx
                     if (show_full) {
                         if (HtmlHelper.truncate(document, false))
                             document.body()
+                                    .appendElement("br")
                                     .appendElement("p")
                                     .appendElement("em")
                                     .text(context.getString(R.string.title_truncated));

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3726,6 +3726,8 @@ public void run() {
                         body = Helper.readText(draft.getFile(context, draft.revision));
                     }
 
+                    Helper.writeText(draft.getFile(context), body);
+
                     db.message().setMessageContent(draft.id,
                             true,
                             draft.plain_only, // unchanged

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3726,8 +3726,6 @@ public void run() {
                         body = Helper.readText(draft.getFile(context, draft.revision));
                     }
 
-                    Helper.writeText(draft.getFile(context), body);
-
                     db.message().setMessageContent(draft.id,
                             true,
                             draft.plain_only, // unchanged

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -392,7 +392,7 @@ public FilterResult tail(Node node, int depth) {
                                 Integer color = parseColor(value, dark);
                                 if (color != null) {
                                     // fromHtml does not support transparency
-                                    String c = String.format("#%08x", color | 0xFF000000);
+                                    String c = String.format("#%06x", color);
                                     sb.append("color:").append(c).append(";");
                                     if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N)
                                         element.attr("color", c);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -1198,11 +1198,13 @@ static Spanned highlightHeaders(Context context, String headers) {
     }
 
     static void cleanup(Document d) {
+        // https://www.chromestatus.com/feature/5756335865987072
+        // Some messages contain 100 thousands of Apple spaces
         for (Element aspace : d.select(".Apple-converted-space")) {
             Node next = aspace.nextSibling();
             if (next instanceof TextNode) {
                 TextNode tnode = (TextNode) next;
-                tnode.text(tnode.text() + " ");
+                tnode.text(" " + tnode.text());
                 aspace.remove();
             } else
                 aspace.replaceWith(new TextNode(" "));

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -222,7 +222,8 @@ public static EntityIdentity fromJSON(JSONObject json) throws JSONException {
             identity.provider = json.getString("provider");
         identity.user = json.getString("user");
         identity.password = json.getString("password");
-        identity.certificate_alias = json.getString("certificate_alias");
+        if (json.has("certificate_alias"))
+            identity.certificate_alias = json.getString("certificate_alias");
         if (json.has("realm") && !json.isNull("realm"))
             identity.realm = json.getString("realm");
         if (json.has("fingerprint"))

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2996,7 +2996,7 @@ else if ("receipt".equals(action)) {
 
                         if (ref.plain_only != null && ref.plain_only)
                             data.draft.plain_only = true;
-                        if (ref.ui_encrypt != null && ref.ui_encrypt != EntityMessage.ENCRYPT_NONE) {
+                        if (ref.ui_encrypt != null && !EntityMessage.ENCRYPT_NONE.equals(ref.ui_encrypt)) {
                             data.draft.encrypt = ref.ui_encrypt;
                             data.draft.ui_encrypt = ref.ui_encrypt;
                         }

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -257,7 +257,8 @@ else if (json.has("pop"))
             account.provider = json.getString("provider");
         account.user = json.getString("user");
         account.password = json.getString("password");
-        account.certificate_alias = json.getString("certificate_alias");
+        if (json.has("certificate_alias"))
+            account.certificate_alias = json.getString("certificate_alias");
         if (json.has("realm"))
             account.realm = json.getString("realm");
         if (json.has("fingerprint"))

File: app/src/main/java/eu/faircode/email/ServiceExternal.java
Patch:
@@ -141,6 +141,7 @@ private NotificationCompat.Builder getNotification() {
                         .setContentTitle(getString(R.string.tile_synchronize))
                         .setAutoCancel(false)
                         .setShowWhen(false)
+                        .setDefaults(0) // disable sound on pre Android 8
                         .setPriority(NotificationCompat.PRIORITY_MIN)
                         .setCategory(NotificationCompat.CATEGORY_SERVICE)
                         .setVisibility(NotificationCompat.VISIBILITY_SECRET)

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -174,6 +174,7 @@ NotificationCompat.Builder getNotificationService() {
                         .setContentIntent(pi)
                         .setAutoCancel(false)
                         .setShowWhen(true)
+                        .setDefaults(0) // disable sound on pre Android 8
                         .setLocalOnly(true)
                         .setPriority(NotificationCompat.PRIORITY_MIN)
                         .setCategory(NotificationCompat.CATEGORY_SERVICE)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -717,6 +717,7 @@ private NotificationCompat.Builder getNotificationService(Integer accounts, Inte
                         .setAutoCancel(false)
                         .setShowWhen(false)
                         .setPriority(NotificationCompat.PRIORITY_MIN)
+                        .setDefaults(0) // disable sound on pre Android 8
                         .setCategory(NotificationCompat.CATEGORY_SERVICE)
                         .setVisibility(NotificationCompat.VISIBILITY_SECRET)
                         .setLocalOnly(true);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -778,8 +778,8 @@ private static Float getFontSize(String value) {
                 return Float.parseFloat(value.substring(0, value.length() - 2).trim());
             if (value.endsWith("px"))
                 return Integer.parseInt(value.substring(0, value.length() - 2).trim()) / 16f;
+            return Integer.parseInt(value.trim()) / 16f;
         } catch (NumberFormatException ignored) {
-
         }
 
         return null;

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -78,7 +78,7 @@ public class EntityAccount extends EntityOrder implements Serializable {
     @NonNull
     public String password;
     @NonNull
-    public Boolean certificate; // obsolete
+    public Boolean certificate = false; // obsolete
     public String certificate_alias;
     public String realm;
     public String fingerprint;

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -78,7 +78,7 @@ public class EntityIdentity {
     @NonNull
     public String password;
     @NonNull
-    public boolean certificate; // obsolete
+    public boolean certificate = false; // obsolete
     public String certificate_alias;
     public String realm;
     public String fingerprint;

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -649,7 +649,7 @@ public X509Certificate[] getAcceptedIssuers() {
                         KeyStore ks = KeyStore.getInstance("AndroidCAStore");
                         ks.load(null, null);
 
-                        KeyManagerFactory kmf = KeyManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
+                        KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
                         kmf.init(ks, null);
                         km = kmf.getKeyManagers();
                     } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -257,6 +257,7 @@ private static Document _sanitize(Context context, String html, boolean show_ima
         boolean display_hidden = prefs.getBoolean("display_hidden", false);
         boolean disable_tracking = prefs.getBoolean("disable_tracking", true);
 
+        // https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css
         Document parsed = JsoupEx.parse(html);
 
         // <!--[if ...]><!--> ... <!--<![endif]-->

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -440,6 +440,9 @@ void cleanup(Context context) {
                 Log.e(ex);
             }
 
+        if (EntityOperation.SYNC.equals(name))
+            db.folder().setFolderSyncState(folder, null);
+
         if (message != null) {
             EntityMessage m = db.message().getMessage(message);
             if (m == null || m.uid == null)

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -958,9 +958,6 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     if (!Objects.equals(account.move_to, move == null ? null : move.id))
                         return true;
 
-                    if (account.error != null)
-                        return true;
-
                     return false;
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -750,8 +750,6 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                         return true;
                     if (!Objects.equals(identity.bcc, bcc))
                         return true;
-                    if (identity.error != null)
-                        return true;
 
                     return false;
                 }

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -401,7 +401,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
                 if (body != null)
                     size = (long) body.length();
 
-                Long total = null;
+                Long total = size;
                 List<EntityAttachment> attachments = db.attachment().getAttachments(message.id);
                 for (EntityAttachment attachment : attachments)
                     if (attachment.size != null)

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -108,7 +108,7 @@ private void bindTo(TupleOperationEx operation) {
                     (operation.accountName == null ? "" : operation.accountName + "/") + operation.folderName;
 
             ivState.setVisibility(operation.state == null ? View.INVISIBLE : View.VISIBLE);
-            tvFolder.setText(folderName);
+            tvFolder.setText(folderName + ":" + operation.folder);
             tvOperation.setText(sb.toString());
             tvTime.setText(Helper.getRelativeTimeSpanString(context, operation.created));
             tvError.setText(operation.error);

File: app/src/main/java/eu/faircode/email/EmailService.java
Patch:
@@ -496,6 +496,7 @@ List<EntityFolder> getFolders() throws MessagingException {
                 }
             if (!has) {
                 guess.type = gtype;
+                guess.setProperties();
                 Log.i(guess.name + " guessed type=" + gtype);
             }
         }

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -197,7 +197,10 @@ public EntityFolder() {
     public EntityFolder(String fullName, String type) {
         this.name = fullName;
         this.type = type;
+        setProperties();
+    }
 
+    void setProperties() {
         int sync = EntityFolder.SYSTEM_FOLDER_SYNC.indexOf(type);
         this.synchronize = (sync >= 0);
         this.download = (sync < 0 || EntityFolder.SYSTEM_FOLDER_DOWNLOAD.get(sync));

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -670,6 +670,7 @@ public Object doCommand(IMAPProtocol protocol) {
                             }
                         if (!has) {
                             guess.type = gtype;
+                            guess.setProperties();
                             Log.i(guess.name + " guessed type=" + gtype);
                         }
                     }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -285,7 +285,7 @@ private int load_server(State state) throws MessagingException, IOException {
         DB db = DB.getInstance(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        final boolean search_text = prefs.getBoolean("search_text", true);
+        final boolean search_text = prefs.getBoolean("search_text", false);
         final boolean debug = (prefs.getBoolean("debug", false) || BuildConfig.BETA_RELEASE);
 
         final EntityFolder browsable = db.folder().getBrowsableFolder(folder, query != null);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1016,7 +1016,7 @@ protected List<EntityAccount> onExecute(Context context, Bundle args) {
                     @Override
                     protected void onExecuted(Bundle args, List<EntityAccount> accounts) {
                         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                        boolean search_text = prefs.getBoolean("search_text", true);
+                        boolean search_text = prefs.getBoolean("search_text", false);
 
                         PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(getContext(), getViewLifecycleOwner(), fabSearch);
 
@@ -1038,7 +1038,7 @@ protected void onExecuted(Bundle args, List<EntityAccount> accounts) {
                             public boolean onMenuItemClick(MenuItem target) {
                                 if (target.getItemId() == 1) {
                                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                                    boolean search_text = prefs.getBoolean("search_text", true);
+                                    boolean search_text = prefs.getBoolean("search_text", false);
                                     prefs.edit().putBoolean("search_text", !search_text).apply();
                                     return true;
                                 }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -78,7 +78,7 @@ public interface DaoMessage {
             "   ELSE SUM(CASE WHEN folder.type = :type THEN 1 ELSE 0 END) > 0 END)" +
             " AND (NOT :filter_seen OR SUM(1 - message.ui_seen) > 0)" +
             " AND (NOT :filter_unflagged OR COUNT(message.id) - SUM(1 - message.ui_flagged) > 0)" +
-            " AND (NOT :filter_unknown OR (message.avatar IS NOT NULL AND message.sender <> identity.email))" +
+            " AND (NOT :filter_unknown OR SUM(message.avatar IS NOT NULL AND message.sender <> identity.email) > 0)" +
             " AND (NOT :filter_snoozed OR message.ui_snoozed IS NULL OR " + is_drafts + ")" +
             " ORDER BY -IFNULL(MAX(message.importance), 1)" +
             ", CASE" +
@@ -132,7 +132,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             " HAVING SUM(CASE WHEN folder.id = :folder THEN 1 ELSE 0 END) > 0" +
             " AND (NOT :filter_seen OR SUM(1 - message.ui_seen) > 0 OR " + is_outbox + ")" +
             " AND (NOT :filter_unflagged OR COUNT(message.id) - SUM(1 - message.ui_flagged) > 0 OR " + is_outbox + ")" +
-            " AND (NOT :filter_unknown OR (message.avatar IS NOT NULL AND message.sender <> identity.email)" +
+            " AND (NOT :filter_unknown OR SUM(message.avatar IS NOT NULL AND message.sender <> identity.email) > 0" +
             "   OR " + is_outbox + " OR " + is_drafts + " OR " + is_sent + ")" +
             " AND (NOT :filter_snoozed OR message.ui_snoozed IS NULL OR " + is_outbox + " OR " + is_drafts + ")" +
             " ORDER BY -IFNULL(MAX(message.importance), 1)" +

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -995,10 +995,9 @@ String getSubject() throws MessagingException {
         if (subject == null)
             return null;
 
-        // https://github.com/eclipse-ee4j/mail/issues/423
-
         subject = subject.replaceAll("\\?=\\r?\\n\\s+=\\?", "\\?==\\?");
         subject = MimeUtility.unfold(subject);
+        subject = new String(subject.getBytes(StandardCharsets.ISO_8859_1));
         subject = decodeMime(subject);
 
         return subject;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -854,6 +854,7 @@ private Address[] getAddressHeader(String name) throws MessagingException {
         if (header == null)
             return null;
 
+        header = new String(header.getBytes(StandardCharsets.ISO_8859_1));
         Address[] addresses = InternetAddress.parseHeader(header, false);
 
         for (Address address : addresses) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -854,7 +854,6 @@ private Address[] getAddressHeader(String name) throws MessagingException {
         if (header == null)
             return null;
 
-        header = new String(header.getBytes(StandardCharsets.ISO_8859_1));
         Address[] addresses = InternetAddress.parseHeader(header, false);
 
         for (Address address : addresses) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -995,9 +995,10 @@ String getSubject() throws MessagingException {
         if (subject == null)
             return null;
 
+        // https://github.com/eclipse-ee4j/mail/issues/423
+
         subject = subject.replaceAll("\\?=\\r?\\n\\s+=\\?", "\\?==\\?");
         subject = MimeUtility.unfold(subject);
-        subject = new String(subject.getBytes(StandardCharsets.ISO_8859_1));
         subject = decodeMime(subject);
 
         return subject;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2090,7 +2090,8 @@ protected void onExecuted(Bundle args, final MoreResult result) {
                 if (result.unflagged || result.flagged)
                     popupMenu.getMenu().add(Menu.NONE, R.string.title_flag_color, order++, R.string.title_flag_color);
 
-                SubMenu importance = popupMenu.getMenu().addSubMenu(R.string.title_set_importance);
+                SubMenu importance = popupMenu.getMenu()
+                        .addSubMenu(Menu.NONE, Menu.NONE, order++, R.string.title_set_importance);
                 importance.add(Menu.NONE, R.string.title_importance_low, 1, R.string.title_importance_low);
                 importance.add(Menu.NONE, R.string.title_importance_normal, 2, R.string.title_importance_normal);
                 importance.add(Menu.NONE, R.string.title_importance_high, 3, R.string.title_importance_high);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -331,8 +331,8 @@ private static Document _sanitize(Context context, String html, boolean show_ima
                     if (kv.length == 2) {
                         String key = kv[0].trim().toLowerCase(Locale.ROOT);
                         String value = kv[1].toLowerCase(Locale.ROOT)
-                                .trim()
                                 .replace("!important", "")
+                                .trim()
                                 .replaceAll("\\s+", " ");
                         switch (key) {
                             case "color":
@@ -355,7 +355,7 @@ private static Document _sanitize(Context context, String html, boolean show_ima
 
                             case "display":
                                 if (!display_hidden && "none".equals(value)) {
-                                    Log.i("Removing element " + element.tagName());
+                                    Log.i("Removing hidden element " + element.tagName());
                                     element.empty();
                                 }
                                 if ("inline".equals(value) || "inline-block".equals(value))
@@ -368,7 +368,7 @@ private static Document _sanitize(Context context, String html, boolean show_ima
                                 //case "line-height":
                                 if (!display_hidden &&
                                         ("0".equals(value) || "0px".equals(value))) {
-                                    Log.i("Removing element " + element.tagName());
+                                    Log.i("Removing hidden element " + element.tagName());
                                     element.empty();
                                 }
                                 break;

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -500,7 +500,7 @@ private boolean onActionFlag(Context context, EntityMessage message, JSONObject
 
     private boolean onActionImportance(Context context, EntityMessage message, JSONObject jargs) throws JSONException {
         Integer importance = jargs.getInt("value");
-        if (importance == EntityMessage.PRIORITIY_NORMAL)
+        if (EntityMessage.PRIORITIY_NORMAL.equals(importance))
             importance = null;
 
         DB db = DB.getInstance(context);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -80,7 +80,7 @@ public interface DaoMessage {
             ", CASE" +
             "   WHEN 'unread' = :sort THEN SUM(1 - message.ui_seen) = 0" +
             "   WHEN 'starred' = :sort THEN COUNT(message.id) - SUM(1 - message.ui_flagged) = 0" +
-            "   WHEN 'priority' = :sort THEN -MAX(IFNULL(message.priority, 1))" +
+            "   WHEN 'priority' = :sort THEN -IFNULL(MAX(message.priority), 1)" +
             "   WHEN 'sender' = :sort THEN LOWER(message.sender)" +
             "   WHEN 'subject' = :sort THEN LOWER(message.subject)" +
             "   WHEN 'size' = :sort THEN -SUM(message.total)" +
@@ -131,7 +131,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             ", CASE" +
             "   WHEN 'unread' = :sort THEN SUM(1 - message.ui_seen) = 0" +
             "   WHEN 'starred' = :sort THEN COUNT(message.id) - SUM(1 - message.ui_flagged) = 0" +
-            "   WHEN 'priority' = :sort THEN -MAX(IFNULL(message.priority, 1))" +
+            "   WHEN 'priority' = :sort THEN -IFNULL(MAX(message.priority), 1)" +
             "   WHEN 'sender' = :sort THEN LOWER(message.sender)" +
             "   WHEN 'subject' = :sort THEN LOWER(message.subject)" +
             "   WHEN 'size' = :sort THEN -SUM(message.total)" +

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -672,7 +672,7 @@ else if (c.startsWith("hsl") && component.length >= 3)
                                 Integer.parseInt(component[2]) / 100f});
                 }
             } else if (x11ColorMap.containsKey(c))
-                color = x11ColorMap.get(c);
+                color = x11ColorMap.get(c) | 0xFF000000;
             else
                 try {
                     color = Color.parseColor(c);
@@ -690,6 +690,8 @@ else if (c.startsWith("hsl") && component.length >= 3)
         if (color != null) {
             if (dark || color != Color.BLACK)
                 color = Helper.adjustLuminance(color, dark, MIN_LUMINANCE);
+
+            color &= 0xFFFFFF;
         }
 
         return color;

File: app/src/main/java/eu/faircode/email/EditTextCompose.java
Patch:
@@ -90,7 +90,7 @@ public boolean onTextContextMenuItem(int id) {
                                 new StyledQuoteSpan(context, colorPrimary),
                                 ssb.getSpanStart(span),
                                 ssb.getSpanEnd(span),
-                                ssb.getSpanFlags(span));
+                                Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                         ssb.removeSpan(span);
                     }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -4037,7 +4037,7 @@ public Drawable getDrawable(String source) {
                             new StyledQuoteSpan(context, colorPrimary),
                             bodyBuilder.getSpanStart(quoteSpan),
                             bodyBuilder.getSpanEnd(quoteSpan),
-                            bodyBuilder.getSpanFlags(quoteSpan));
+                            Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                     bodyBuilder.removeSpan(quoteSpan);
                 }
 
@@ -4062,7 +4062,7 @@ public Drawable getDrawable(String source) {
                                 new StyledQuoteSpan(context, colorPrimary),
                                 refBuilder.getSpanStart(quoteSpan),
                                 refBuilder.getSpanEnd(quoteSpan),
-                                refBuilder.getSpanFlags(quoteSpan));
+                                Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                         refBuilder.removeSpan(quoteSpan);
                     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -886,7 +886,7 @@ private void bindTo(final TupleMessageEx message, int position) {
                     String k = message.keywords[i].toLowerCase();
                     if (!IMAP_KEYWORDS_BLACKLIST.contains(k)) {
                         if (keywords.length() > 0)
-                            keywords.append(", ");
+                            keywords.append(" ");
 
                         keywords.append(message.keywords[i]);
 
@@ -4970,7 +4970,7 @@ public void onChanged(TupleKeyword.Persisted data) {
             return new AlertDialog.Builder(getContext())
                     .setTitle(R.string.title_manage_keywords)
                     .setView(dview)
-                    .setNegativeButton(android.R.string.cancel, null)
+                    .setPositiveButton(android.R.string.ok, null)
                     .create();
         }
     }

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -266,6 +266,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.replyto, other.replyto) &&
                     Objects.equals(this.bcc, other.bcc) &&
                     Objects.equals(this.sign_key, other.sign_key) &&
+                    Objects.equals(this.sign_key_alias, other.sign_key_alias) &&
                     Objects.equals(this.state, other.state) &&
                     Objects.equals(this.error, other.error) &&
                     Objects.equals(this.last_connected, other.last_connected));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1791,7 +1791,7 @@ private void bindAttachments(final TupleMessageEx message, @Nullable List<Entity
                 if (show_inline || !inline || !attachment.available)
                     a.add(attachment);
 
-                if (attachment.available && "text/calendar".equals(attachment.type)) {
+                if (attachment.available && "text/calendar".equals(attachment.getMimeType())) {
                     calendar = true;
                     bindCalendar(message, attachment);
                 }
@@ -1960,7 +1960,7 @@ protected Object onExecute(Context context, Bundle args) throws Throwable {
 
                     List<EntityAttachment> attachments = db.attachment().getAttachments(id);
                     for (EntityAttachment attachment : attachments)
-                        if (attachment.available && "text/calendar".equals(attachment.type)) {
+                        if (attachment.available && "text/calendar".equals(attachment.getMimeType())) {
                             File file = attachment.getFile(context);
                             ICalendar icalendar = Biweekly.parse(file).first();
                             VEvent event = icalendar.getEvents().get(0);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -974,7 +974,7 @@ String getSubject() throws MessagingException {
             return null;
 
         subject = MimeUtility.unfold(subject);
-        //subject = subject.replaceAll("\\?=\\s+=\\?", "\\?==\\?");
+        subject = subject.replaceAll("\\?=\\s+=\\?", "\\?==\\?");
         subject = new String(subject.getBytes(StandardCharsets.ISO_8859_1));
         subject = decodeMime(subject);
 
@@ -1116,7 +1116,6 @@ static String decodeMime(String text) {
             parts.add(new MimeTextPart(text.substring(i)));
 
         // Fold words to not break encoding
-        /*
         int p = 0;
         while (p + 1 < parts.size()) {
             MimeTextPart p1 = parts.get(p);
@@ -1128,7 +1127,6 @@ static String decodeMime(String text) {
             } else
                 p++;
         }
-        */
 
         StringBuilder sb = new StringBuilder();
         for (MimeTextPart part : parts)

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -81,7 +81,7 @@ public interface DaoMessage {
             "  WHEN 'starred' = :sort THEN COUNT(message.id) - SUM(1 - message.ui_flagged) = 0" +
             "  WHEN 'sender' = :sort THEN LOWER(message.sender)" +
             "  WHEN 'subject' = :sort THEN LOWER(message.subject)" +
-            "  WHEN 'size' = :sort THEN -SUM(message.size)" +
+            "  WHEN 'size' = :sort THEN -SUM(message.total)" +
             "  WHEN 'snoozed' = :sort THEN SUM(CASE WHEN message.ui_snoozed IS NULL THEN 0 ELSE 1 END) = 0" +
             "  ELSE 0" +
             " END, CASE WHEN :ascending THEN message.received ELSE -message.received END")
@@ -128,7 +128,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             "  WHEN 'starred' = :sort THEN COUNT(message.id) - SUM(1 - message.ui_flagged) = 0" +
             "  WHEN 'sender' = :sort THEN LOWER(message.sender)" +
             "  WHEN 'subject' = :sort THEN LOWER(message.subject)" +
-            "  WHEN 'size' = :sort THEN -SUM(message.size)" +
+            "  WHEN 'size' = :sort THEN -SUM(message.total)" +
             "  WHEN 'snoozed' = :sort THEN SUM(CASE WHEN message.ui_snoozed IS NULL THEN 0 ELSE 1 END) = 0" +
             "  ELSE 0" +
             " END, CASE WHEN :ascending THEN message.received ELSE -message.received END")

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -29,9 +29,9 @@
 @Dao
 public interface DaoOperation {
     String priority = "CASE" +
-            " WHEN operation.name = '" + EntityOperation.BODY + "' THEN -3" +
-            " WHEN operation.name = '" + EntityOperation.ATTACHMENT + "' THEN -2" +
-            " WHEN operation.name = '" + EntityOperation.HEADERS + "' THEN -1" +
+            " WHEN operation.name = '" + EntityOperation.BODY + "' THEN -4" +
+            " WHEN operation.name = '" + EntityOperation.ATTACHMENT + "' THEN -3" +
+            " WHEN operation.name = '" + EntityOperation.HEADERS + "' THEN -2" +
             " WHEN operation.name = '" + EntityOperation.SYNC + "' THEN" +
             "  CASE WHEN folder.account IS NULL THEN -1 ELSE 1 END" + // outbox
             " ELSE 0" +

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -102,6 +102,7 @@ public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
         json.put("id", id);
         json.put("name", name);
+        json.put("favorite", favorite);
         json.put("hide", hide);
         json.put("text", text);
         return json;
@@ -111,7 +112,8 @@ public static EntityAnswer fromJSON(JSONObject json) throws JSONException {
         EntityAnswer answer = new EntityAnswer();
         answer.id = json.getLong("id");
         answer.name = json.getString("name");
-        answer.hide = (json.has("hide") && json.getBoolean("hide"));
+        answer.favorite = json.optBoolean("favorite");
+        answer.hide = json.optBoolean("hide");
         answer.text = json.getString("text");
         return answer;
     }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -384,6 +384,7 @@ List<TupleMatch> matchMessages(
             " JOIN account_view AS account ON account.id = message.account" +
             " JOIN folder_view AS folder ON folder.id = message.folder" +
             " WHERE account.`synchronize`" +
+            " AND (:account IS NULL OR account.id = :account)" +
             " AND ((:folder IS NULL AND folder.unified) OR folder.id = :folder)" +
             " AND NOT message.ui_hide" +
             " AND message.ui_snoozed IS NULL" +
@@ -393,7 +394,7 @@ List<TupleMatch> matchMessages(
             ", CASE WHEN message.thread IS NULL OR NOT :threading THEN message.id ELSE message.thread END" +
             " ORDER BY message.received DESC")
     @SuppressWarnings(RoomWarnings.CURSOR_MISMATCH)
-    List<TupleMessageWidget> getWidgetUnified(Long folder, boolean threading, boolean unseen, boolean flagged);
+    List<TupleMessageWidget> getWidgetUnified(Long account, Long folder, boolean threading, boolean unseen, boolean flagged);
 
     @Query("SELECT uid FROM message" +
             " WHERE folder = :folder" +

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -974,6 +974,7 @@ String getSubject() throws MessagingException {
             return null;
 
         subject = MimeUtility.unfold(subject);
+        //subject = subject.replaceAll("\\?=\\s+=\\?", "\\?==\\?");
         subject = new String(subject.getBytes(StandardCharsets.ISO_8859_1));
         subject = decodeMime(subject);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -367,10 +367,10 @@ else if (c.startsWith("rgb")) {
                                         try {
                                             color = Color.parseColor(c);
                                         } catch (IllegalArgumentException ex) {
-                                            color = Integer.decode(c) | 0xFF000000;
+                                            color = Integer.decode("#" + c) | 0xFF000000;
                                         }
                                 } catch (Throwable ex) {
-                                    Log.e("Color=" + c);
+                                    Log.e("Color=" + c + ": " + ex);
                                 }
 
                                 if (color != null && !(dark && color == Color.BLACK)) {

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -81,6 +81,7 @@
 import java.io.InputStreamReader;
 import java.io.OutputStream;
 import java.security.SecureRandom;
+import java.security.cert.CertificateException;
 import java.security.cert.CertificateFactory;
 import java.security.cert.X509Certificate;
 import java.security.spec.KeySpec;
@@ -1043,7 +1044,6 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
 
                     String fingerprint = EntityCertificate.getFingerprint(cert);
                     List<String> emails = EntityCertificate.getAltSubjectName(cert);
-                    String subject = EntityCertificate.getSubject(cert);
 
                     DB db = DB.getInstance(context);
                     for (String email : emails) {
@@ -1061,7 +1061,7 @@ record = EntityCertificate.from(cert, email);
                 protected void onException(Bundle args, Throwable ex) {
                     if (ex instanceof IllegalArgumentException)
                         ToastEx.makeText(ActivitySetup.this, ex.getMessage(), Toast.LENGTH_LONG).show();
-                    else if (ex instanceof IllegalStateException)
+                    else if (ex instanceof IllegalStateException || ex instanceof CertificateException)
                         ToastEx.makeText(ActivitySetup.this, R.string.title_invalid_key, Toast.LENGTH_LONG).show();
                     else
                         Log.unexpectedError(getSupportFragmentManager(), ex);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -365,7 +365,7 @@ private void quit(final Integer startId) {
                     @Override
                     public void run() {
                         Log.i("### quit startId=" + startId + "/" + lastQuitId + " ops=" + lastOperations);
-                        if (lastOperations == 0)
+                        if (lastOperations != 0)
                             return;
 
                         if (startId == null) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3592,8 +3592,9 @@ public void run() {
                             if (TextUtils.isEmpty(draft.subject))
                                 args.putBoolean("remind_subject", true);
 
-                            File refFile = draft.getRefFile(context);
-                            if (empty && !refFile.exists())
+                            Document d = JsoupEx.parse(body);
+
+                            if (empty && d.select("div[fairemail=reference]").isEmpty())
                                 args.putBoolean("remind_text", true);
 
                             int attached = 0;
@@ -3609,7 +3610,6 @@ else if (!attachment.isInline() && attachment.encryption == null)
                                 for (String text : Helper.getStrings(context, R.string.title_attachment_keywords))
                                     keywords.addAll(Arrays.asList(text.split(",")));
 
-                                Document d = JsoupEx.parse(body);
                                 d.select("div[fairemail=signature]").remove();
                                 d.select("div[fairemail=reference]").remove();
                                 String text = d.text();

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -210,7 +210,7 @@ private void onSave(EntityAttachment attachment) {
         }
 
         private void onShare(EntityAttachment attachment) {
-            Helper.share(context, attachment.getFile(context), attachment.type, attachment.name);
+            Helper.share(context, attachment.getFile(context), attachment.getMimeType(), attachment.name);
         }
 
         private void onDownload(EntityAttachment attachment) {

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -101,7 +101,7 @@ public class ServiceSynchronize extends ServiceBase implements SharedPreferences
     private MediatorState liveAccountNetworkState = new MediatorState();
 
     private static final long YIELD_DURATION = 200L; // milliseconds
-    private static final long QUIT_DELAY = 5 * 1000L; // milliseconds
+    private static final long QUIT_DELAY = 10 * 1000L; // milliseconds
     private static final int CONNECT_BACKOFF_START = 8; // seconds
     private static final int CONNECT_BACKOFF_MAX = 64; // seconds (totally 2 minutes)
     private static final int CONNECT_BACKOFF_AlARM = 15; // minutes
@@ -261,7 +261,7 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                             nm.notify(Helper.NOTIFICATION_SYNCHRONIZE, getNotificationService(lastAccounts, lastOperations).build());
                         }
                     } else
-                        stopSelf(); // will result in quit
+                        quit();
                 }
             }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1161,8 +1161,8 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
             ibImages.setVisibility(View.GONE);
             ibUnsubscribe.setVisibility(message.unsubscribe == null ? View.GONE : View.VISIBLE);
             ibJunk.setVisibility(
-                    message.uid == null || message.folderReadOnly &&
-                            (hasJunk && !EntityFolder.JUNK.equals(message.folderType))
+                    message.uid == null || message.folderReadOnly ||
+                            !hasJunk || EntityFolder.JUNK.equals(message.folderType)
                             ? View.GONE : View.VISIBLE);
             ibDecrypt.setVisibility(View.GONE);
             ibVerify.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/MailService.java
Patch:
@@ -370,8 +370,8 @@ private void _connect(
                     if (useip &&
                             ex.getMessage() != null &&
                             ex.getMessage().toLowerCase().contains("syntactically invalid")) {
-                        Log.i("Using localhost=" + domain);
-                        properties.put("mail." + protocol + ".localhost", domain);
+                        Log.w("Using localhost=" + domain, ex);
+                        ((SMTPTransport) iservice).setLocalHost(domain);
                         iservice.connect(host, port, user, password);
                     } else
                         throw ex;

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -148,8 +148,7 @@ public void onNothingSelected(AdapterView<?> adapterView) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("schedule", checked).apply();
-                if (checked)
-                    ServiceSynchronize.reschedule(getContext());
+                ServiceSynchronize.reschedule(getContext());
             }
         });
 

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -158,8 +158,8 @@ private void bindTo(TupleContactEx contact) {
                     ? R.drawable.baseline_star_24 : R.drawable.baseline_star_border_24);
             ivFavorite.setImageTintList(ColorStateList.valueOf(
                     contact.state == EntityContact.STATE_FAVORITE ? colorAccent : textColorSecondary));
-            ivFavorite.setContentDescription(context.getString(contact.state == EntityContact.STATE_FAVORITE
-                    ? R.string.title_accessibility_flagged : null));
+            ivFavorite.setContentDescription(contact.state == EntityContact.STATE_FAVORITE
+                    ? context.getString(R.string.title_accessibility_flagged) : null);
 
             view.requestLayout();
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2022,7 +2022,7 @@ protected void onExecuted(Bundle args, Object result) {
                         }
 
                         if (args.getBoolean("share"))
-                            Helper.share(context, (File) result, "text/calendar", action + ".ics");
+                            Helper.share(context, (File) result, "text/calendar", status + ".ics");
                         else {
                             Intent reply = new Intent(context, ActivityCompose.class)
                                     .putExtra("action", "participation")

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -987,10 +987,9 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     db.beginTransaction();
 
                     if (account != null && !account.password.equals(password)) {
+                        String match = "%" + ConnectionHelper.getDomain(account.host);
                         int count = db.identity().setIdentityPassword(
-                                account.id,
-                                account.user, password,
-                                "%." + ConnectionHelper.getDomain(account.host));
+                                account.id, account.user, password, match);
                         Log.i("Updated passwords=" + count);
                     }
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1213,7 +1213,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                 if (account == null)
                     return null;
 
-                AccountManager am = AccountManager.get(getContext());
+                AccountManager am = AccountManager.get(context);
                 Account[] accounts = am.getAccountsByType("com.google");
                 for (Account google : accounts)
                     if (account.user.equals(google.name))

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -888,7 +888,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                 if (identity == null)
                     return null;
 
-                AccountManager am = AccountManager.get(getContext());
+                AccountManager am = AccountManager.get(context);
                 Account[] accounts = am.getAccountsByType("com.google");
                 for (Account google : accounts)
                     if (identity.user.equals(google.name))

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -300,7 +300,7 @@ List<TupleMatch> matchMessages(
             " WHERE message.id = :id")
     LiveData<TupleMessageEx> liveMessage(long id);
 
-    @Query("SELECT account.id, COUNT(message.id) AS unseen, SUM(ABS(notifying)) AS notifying" +
+    @Query("SELECT account.id AS account, COUNT(message.id) AS unseen, SUM(ABS(notifying)) AS notifying" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2749,7 +2749,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
         boolean notify_reply_direct = (prefs.getBoolean("notify_reply_direct", false) && pro);
         boolean notify_flag = (prefs.getBoolean("notify_flag", false) && flags && pro);
         boolean notify_seen = (prefs.getBoolean("notify_seen", true) || !pro);
-        boolean notify_snooze = (prefs.getBoolean("notify_snooze", false) || !pro);
+        boolean notify_snooze = (prefs.getBoolean("notify_snooze", false) && pro);
         boolean notify_remove = prefs.getBoolean("notify_remove", true);
         boolean light = prefs.getBoolean("light", false);
         String sound = prefs.getString("sound", null);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -400,7 +400,7 @@ private void setOptions() {
         cbNotifyActionReplyDirect.setChecked(prefs.getBoolean("notify_reply_direct", false) && pro);
         cbNotifyActionFlag.setChecked(prefs.getBoolean("notify_flag", false) && pro);
         cbNotifyActionSeen.setChecked(prefs.getBoolean("notify_seen", true) || !pro);
-        cbNotifyActionSnooze.setChecked(prefs.getBoolean("notify_snooze", false) || !pro);
+        cbNotifyActionSnooze.setChecked(prefs.getBoolean("notify_snooze", false) && pro);
 
         swBiometricsNotify.setChecked(prefs.getBoolean("biometrics_notify", false));
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -637,7 +637,7 @@ public boolean onScale(ScaleGestureDetector detector) {
         private void unwire() {
             final View touch = (viewType == ViewType.THREAD ? ibExpander : header);
             touch.setOnClickListener(null);
-            view.setOnKeyListener(null);
+            header.setOnKeyListener(null);
 
             ibAvatar.setOnClickListener(null);
             ibAuth.setOnClickListener(null);

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -262,7 +262,7 @@ static void queue(Context context, EntityMessage message, String name, Object...
                 db.message().setMessageUiHide(message.id, true);
 
             else if (ATTACHMENT.equals(name))
-                db.attachment().setProgress(jargs.getLong(0), null);
+                db.attachment().setProgress(jargs.getLong(0), 0);
 
             queue(context, message.account, message.folder, message.id, name, jargs);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1304,7 +1304,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
 
             // Download attachment
             File file = EntityAttachment.getFile(context, local.id, local.name);
-            db.attachment().setProgress(local.id, null);
+            db.attachment().setProgress(local.id, 0);
 
             if (EntityAttachment.PGP_CONTENT.equals(apart.encrypt) ||
                     EntityAttachment.SMIME_CONTENT.equals(apart.encrypt)) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -635,7 +635,7 @@ public boolean onScale(ScaleGestureDetector detector) {
         }
 
         private void unwire() {
-            final View touch = (viewType == ViewType.THREAD ? ibExpander : vwColor);
+            final View touch = (viewType == ViewType.THREAD ? ibExpander : header);
             touch.setOnClickListener(null);
             view.setOnKeyListener(null);
 

File: app/src/main/java/eu/faircode/email/DrawerLayoutEx.java
Patch:
@@ -54,8 +54,9 @@ void setup(Configuration config, View drawerContainer) {
         setScrimColor(Helper.resolveColor(getContext(), R.attr.colorDrawerScrim));
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+        boolean landscape = prefs.getBoolean("landscape", true);
         boolean landscape3 = prefs.getBoolean("landscape3", false);
-        if (landscape3) {
+        if (landscape && landscape3) {
             ViewGroup childContent = (ViewGroup) getChildAt(0);
             ViewGroup childDrawer = (ViewGroup) getChildAt(1);
             if (config.orientation == Configuration.ORIENTATION_LANDSCAPE) {

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -39,7 +39,7 @@ public class FragmentOptions extends FragmentBase {
 
     static String[] OPTIONS_RESTART = new String[]{
             "subscriptions",
-            "landscape", "startup", "cards", "indentation", "date", "threading", "highlight_unread", "color_stripe",
+            "landscape", "landscape3", "startup", "cards", "indentation", "date", "threading", "highlight_unread", "color_stripe",
             "avatars", "generated_icons", "identicons", "circular", "saturation", "brightness", "threshold",
             "name_email", "distinguish_contacts", "authentication",
             "subject_top", "font_size_sender", "font_size_subject", "subject_italic", "subject_ellipsize",

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2740,7 +2740,8 @@ private void check() {
                     @Override
                     public void run() {
                         if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
-                            adapter.checkInternet();
+                            if (!rvMessage.isComputingLayout())
+                                adapter.checkInternet();
                     }
                 });
         }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2735,8 +2735,7 @@ public void onLost(Network network) {
 
         private void check() {
             if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
-                if (!rvMessage.isComputingLayout())
-                    adapter.checkInternet();
+                adapter.checkInternet();
         }
     };
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2735,7 +2735,8 @@ public void onLost(Network network) {
 
         private void check() {
             if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
-                adapter.checkInternet();
+                if (!rvMessage.isComputingLayout())
+                    adapter.checkInternet();
         }
     };
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4381,6 +4381,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
 
                                 inline = true;
                                 in = new ByteArrayInputStream(section.getBytes());
+                                out = new FileOutputStream(plain);
                             }
                         }
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -624,7 +624,7 @@ private View getView(View view, RecyclerView parent, int pos) {
                                     DAY_IN_MILLIS, 0));
 
                 view.setContentDescription(tvDate.getText().toString());
-                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P)
                     view.setAccessibilityHeading(true);
 
                 header.measure(View.MeasureSpec.makeMeasureSpec(parent.getWidth(), View.MeasureSpec.EXACTLY),

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -50,8 +50,8 @@ public class EntityAccount extends EntityOrder implements Serializable {
     static final String TABLE_NAME = "account";
 
     // https://tools.ietf.org/html/rfc2177
-    static final int DEFAULT_KEEP_ALIVE_INTERVAL = 24; // minutes
-    static final int DEFAULT_POLL_INTERVAL = 12; // minutes
+    static final int DEFAULT_KEEP_ALIVE_INTERVAL = 15; // minutes
+    static final int DEFAULT_POLL_INTERVAL = 15; // minutes
 
     static final int TYPE_IMAP = 0;
     static final int TYPE_POP = 1;

File: app/src/main/java/eu/faircode/email/EditTextCompose.java
Patch:
@@ -71,7 +71,9 @@ public boolean onTextContextMenuItem(int id) {
                 if (clipboard.hasPrimaryClip()) {
                     ClipData.Item item = clipboard.getPrimaryClip().getItemAt(0);
 
-                    String html = item.coerceToHtmlText(context);
+                    String html = item.getHtmlText();
+                    if (html == null)
+                        html = "<div>" + HtmlHelper.formatPre(item.getText().toString()) + "</div>";
                     Document document = HtmlHelper.sanitize(context, html, false, false);
                     Spanned paste = HtmlHelper.fromHtml(document.html());
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -65,7 +65,7 @@ public interface DaoMessage {
             " LEFT JOIN identity ON identity.id = message.identity" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE account.`synchronize`" +
-            " AND (:threading OR (:type IS NULL AND folder.unified) OR (:type IS NOT NULL AND folder.type = :type))" +
+            " AND (:threading OR (:type IS NULL AND (folder.unified OR :found)) OR (:type IS NOT NULL AND folder.type = :type))" +
             " AND (NOT message.ui_hide OR :debug)" +
             " AND (NOT :found OR ui_found = :found)" +
             " GROUP BY account.id, CASE WHEN message.thread IS NULL OR NOT :threading THEN message.id ELSE message.thread END" +

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -1041,7 +1041,7 @@ protected void onException(Bundle args, Throwable ex) {
                     tilPassword.setEnabled(false);
                 }
 
-                if (identity == null && identity.auth_type != MailService.AUTH_TYPE_GMAIL)
+                if (identity == null || identity.auth_type != MailService.AUTH_TYPE_GMAIL)
                     Helper.hide(btnOAuth);
 
                 cbPrimary.setEnabled(cbSynchronize.isChecked());

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -186,6 +186,7 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                     int operations = 0;
                     boolean runService = false;
                     for (TupleAccountNetworkState current : accountNetworkStates) {
+                        Log.d("### evaluating " + current);
                         if (current.accountState.shouldRun(current.enabled))
                             runService = true;
                         if ("connected".equals(current.accountState.state))
@@ -240,13 +241,13 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                                     stop(prev);
                                 if (current.canRun())
                                     start(current, current.accountState.isEnabled(current.enabled) || sync);
-                                if (current.accountState.tbd != null)
-                                    delete(current);
                             }
                         }
 
                         if (current.accountState.tbd == null)
                             accountStates.add(current);
+                        else
+                            delete(current);
                     }
 
                     if (runService) {

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -65,6 +65,7 @@ public interface DaoMessage {
             " LEFT JOIN identity ON identity.id = message.identity" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE account.`synchronize`" +
+            " AND (:threading OR (:type IS NULL AND folder.unified) OR (:type IS NOT NULL AND folder.type = :type))" +
             " AND (NOT message.ui_hide OR :debug)" +
             " AND (NOT :found OR ui_found = :found)" +
             " GROUP BY account.id, CASE WHEN message.thread IS NULL OR NOT :threading THEN message.id ELSE message.thread END" +
@@ -113,6 +114,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedUnified(
             " JOIN folder ON folder.id = message.folder" +
             " JOIN folder AS f ON f.id = :folder" +
             " WHERE (message.account = f.account OR " + is_outbox + ")" +
+            " AND (:threading OR folder.id = :folder)" +
             " AND (NOT message.ui_hide OR :debug)" +
             " AND (NOT :found OR ui_found = :found)" +
             " GROUP BY CASE WHEN message.thread IS NULL OR NOT :threading THEN message.id ELSE message.thread END" +

File: app/src/main/java/eu/faircode/email/WidgetUnifiedRemoteViewsFactory.java
Patch:
@@ -70,6 +70,7 @@ public void onDataSetChanged() {
         Log.i("Widget factory changed id=" + appWidgetId);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+        threading = prefs.getBoolean("threading", true);
         subject_top = prefs.getBoolean("subject_top", false);
         subject_italic = prefs.getBoolean("subject_italic", true);
         account = prefs.getLong("widget." + appWidgetId + ".account", -1L);
@@ -83,7 +84,7 @@ public void onDataSetChanged() {
         try {
             db.beginTransaction();
 
-            messages = db.message().getWidgetUnified(folder < 0 ? null : folder, unseen, flagged);
+            messages = db.message().getWidgetUnified(folder < 0 ? null : folder, threading, unseen, flagged);
 
             db.setTransactionSuccessful();
         } finally {

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -737,7 +737,7 @@ protected void onExecuted(Bundle args, TupleRuleEx rule) {
                     Log.e(ex);
                 } finally {
                     grpReady.setVisibility(View.VISIBLE);
-                    bottom_navigation.findViewById(R.id.action_delete).setVisibility(rule == null ? View.GONE : View.VISIBLE);
+                    bottom_navigation.findViewById(R.id.action_delete).setVisibility(id < 0 ? View.GONE : View.VISIBLE);
                     bottom_navigation.setVisibility(View.VISIBLE);
                     pbWait.setVisibility(View.GONE);
                 }

File: app/src/main/java/eu/faircode/email/MailService.java
Patch:
@@ -113,13 +113,13 @@ public synchronized boolean isServerTrusted(String server, SSLSocket sslSocket)
                             if (matches(server, name))
                                 trusted = true;
 
+                        if (getFingerPrint(certificate).equals(trustedFingerprint))
+                            trusted = true;
+
                         if (!trusted)
                             Log.e("Certificate mismatch" +
                                     " server=" + server + " names=" + TextUtils.join(",", names));
 
-                        if (getFingerPrint(certificate).equals(trustedFingerprint))
-                            trusted = true;
-
                         Log.i("Is trusted? server=" + server + " trusted=" + trusted);
                         return trusted;
                     } catch (Throwable ex) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1446,8 +1446,7 @@ MessageParts getMessageParts(Context context) throws IOException, MessagingExcep
 
     private void getMessageParts(Part part, MessageParts parts, Integer encrypt) throws IOException, MessagingException {
         try {
-            if (BuildConfig.DEBUG)
-                Log.i("Part class=" + part.getClass() + " type=" + part.getContentType());
+            Log.d("Part class=" + part.getClass() + " type=" + part.getContentType());
             if (part.isMimeType("multipart/*")) {
                 Multipart multipart;
                 Object content = part.getContent();

File: app/src/main/java/eu/faircode/email/TwoStateOwner.java
Patch:
@@ -58,8 +58,7 @@ private void create() {
         registry.addObserver(new LifecycleObserver() {
             @OnLifecycleEvent(Lifecycle.Event.ON_ANY)
             public void onAny() {
-                //if (BuildConfig.DEBUG)
-                //    Log.i("LifeCycle " + name + " state=" + registry.getCurrentState() + " " + registry);
+                Log.d("LifeCycle " + name + " state=" + registry.getCurrentState() + " " + registry);
             }
         });
 

File: app/src/main/java/eu/faircode/email/WidgetUnifiedRemoteViewsFactory.java
Patch:
@@ -70,7 +70,6 @@ public void onDataSetChanged() {
         Log.i("Widget factory changed id=" + appWidgetId);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        threading = prefs.getBoolean("threading", true);
         subject_top = prefs.getBoolean("subject_top", false);
         subject_italic = prefs.getBoolean("subject_italic", true);
         account = prefs.getLong("widget." + appWidgetId + ".account", -1L);
@@ -84,7 +83,7 @@ public void onDataSetChanged() {
         try {
             db.beginTransaction();
 
-            messages = db.message().getWidgetUnified(folder < 0 ? null : folder, threading, unseen, flagged);
+            messages = db.message().getWidgetUnified(folder < 0 ? null : folder, unseen, flagged);
 
             db.setTransactionSuccessful();
         } finally {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -187,14 +187,14 @@ public void onDrawerOpened(View drawerView) {
         final AdapterNavUnified uadapter = new AdapterNavUnified(this, this);
         rvUnified.setAdapter(uadapter);
 
-        boolean unified_system = prefs.getBoolean("unified_system", false);
+        boolean unified_system = prefs.getBoolean("unified_system", true);
         ibExpanderUnified.setImageLevel(unified_system ? 0 /* less */ : 1 /* more */);
         grpUnified.setVisibility(unified_system ? View.VISIBLE : View.GONE);
 
         ibExpanderUnified.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                boolean unified_system = !prefs.getBoolean("unified_system", false);
+                boolean unified_system = !prefs.getBoolean("unified_system", true);
                 prefs.edit().putBoolean("unified_system", unified_system).apply();
                 ibExpanderUnified.setImageLevel(unified_system ? 0 /* less */ : 1 /* more */);
                 grpUnified.setVisibility(unified_system ? View.VISIBLE : View.GONE);
@@ -421,7 +421,7 @@ public void onChanged(List<TupleFolderUnified> folders) {
                 if (folders == null)
                     folders = new ArrayList<>();
                 ibExpanderUnified.setVisibility(folders.size() > 0 ? View.VISIBLE : View.GONE);
-                boolean unified_system = prefs.getBoolean("unified_system", false);
+                boolean unified_system = prefs.getBoolean("unified_system", true);
                 grpUnified.setVisibility(unified_system && folders.size() > 0 ? View.VISIBLE : View.GONE);
                 uadapter.set(folders);
             }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -489,7 +489,7 @@ public Object doCommand(IMAPProtocol protocol) {
                                     rules, null);
                             found++;
                         }
-                        if (message != null)
+                        if (message != null && query != null)
                             if (threading)
                                 db.message().setMessageFound(message.account, message.thread);
                             else

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -245,7 +245,7 @@ File getRawFile(Context context) {
         File dir = new File(context.getFilesDir(), "raw");
         if (!dir.exists())
             dir.mkdir();
-        return new File(dir, Long.toString(id));
+        return new File(dir, id + ".eml");
     }
 
     static void snooze(Context context, long id, Long wakeup) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1110,6 +1110,8 @@ private void bindExpanded(final TupleMessageEx message, final boolean scroll) {
             ibFull.setVisibility(View.VISIBLE);
             ibImages.setVisibility(View.GONE);
             ibUnsubscribe.setVisibility(message.unsubscribe == null ? View.GONE : View.VISIBLE);
+            ibDecrypt.setVisibility(View.GONE);
+            ibVerify.setVisibility(View.GONE);
 
             // Addresses
             ibExpanderAddress.setImageLevel(show_addresses ? 0 /* less */ : 1 /* more */);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -355,6 +355,8 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
 
         Helper.linkPro(tvNotifyPro);
 
+        etInterval.setHint(Integer.toString(EntityAccount.DEFAULT_KEEP_ALIVE_INTERVAL));
+
         btnCheck.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: app/src/main/java/eu/faircode/email/FragmentPop.java
Patch:
@@ -156,6 +156,8 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
+        etInterval.setHint(Integer.toString(EntityAccount.DEFAULT_POLL_INTERVAL));
+
         btnSave.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -245,7 +247,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                 if (synchronize && TextUtils.isEmpty(password) && !insecure)
                     throw new IllegalArgumentException(context.getString(R.string.title_no_password));
                 if (TextUtils.isEmpty(interval))
-                    interval = Integer.toString(EntityAccount.DEFAULT_KEEP_ALIVE_INTERVAL);
+                    interval = Integer.toString(EntityAccount.DEFAULT_POLL_INTERVAL);
 
                 if (TextUtils.isEmpty(name))
                     name = user;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -953,6 +953,7 @@ public int compare(EntityFolder f1, EntityFolder f2) {
                             db.folder().setFolderState(folder.id, "connecting");
 
                             final IMAPFolder ifolder = (IMAPFolder) iservice.getStore().getFolder(folder.name);
+                            mapFolders.put(folder, ifolder);
                             try {
                                 if (BuildConfig.DEBUG && "Postausgang".equals(folder.name))
                                     throw new ReadOnlyFolderException(ifolder);
@@ -975,7 +976,6 @@ public int compare(EntityFolder f1, EntityFolder f2) {
                                 db.folder().setFolderError(folder.id, Log.formatThrowable(ex));
                                 throw ex;
                             }
-                            mapFolders.put(folder, ifolder);
 
                             db.folder().setFolderState(folder.id, "connected");
                             db.folder().setFolderError(folder.id, null);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -248,7 +248,7 @@ public void onChanged(List<TupleAccountState> accountStates) {
             public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                 if (accountNetworkStates == null) {
                     // Destroy
-                    for (TupleAccountNetworkState prev : serviceStates.keySet())
+                    for (TupleAccountNetworkState prev : new ArrayList<>(serviceStates.keySet()))
                         stop(prev);
 
                     quit();

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2383,7 +2383,7 @@ private static EntityAttachment addAttachment(Context context, long id, Uri uri,
                 ftype = null;
             }
 
-        if (TextUtils.isEmpty(ftype))
+        if (TextUtils.isEmpty(ftype) || "*/*".equals(ftype))
             ftype = Helper.guessMimeType(fname);
 
         if (fsize != null && fsize <= 0)

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -339,7 +339,6 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                                             try (MailService iservice = new MailService(context, account.getProtocol(), account.realm, account.insecure, false, true)) {
                                                 iservice.setPartialFetch(account.partial_fetch);
                                                 iservice.setIgnoreBodyStructureSize(account.ignore_size);
-                                                iservice.setSeparateStoreConnection();
                                                 iservice.connect(account);
 
                                                 IMAPFolder ifolder = (IMAPFolder) iservice.getStore().getFolder(inbox.name);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -282,7 +282,6 @@ private int load_server(State state) throws MessagingException, IOException {
                 state.iservice = new MailService(context, account.getProtocol(), account.realm, account.insecure, false, debug);
                 state.iservice.setPartialFetch(account.partial_fetch);
                 state.iservice.setIgnoreBodyStructureSize(account.ignore_size);
-                state.iservice.setSeparateStoreConnection();
                 state.iservice.connect(account);
 
                 Log.i("Boundary server opening folder=" + browsable.name);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -159,7 +159,7 @@ else if ("closing".equals(account.state))
                 ivState.setImageResource(R.drawable.baseline_close_24);
             else
                 ivState.setImageResource(R.drawable.baseline_cloud_off_24);
-            ivState.setVisibility(account.synchronize ? View.VISIBLE : View.INVISIBLE);
+            ivState.setVisibility(account.synchronize || account.state != null ? View.VISIBLE : View.INVISIBLE);
 
             tvHost.setText(String.format("%s:%d", account.host, account.port));
             tvLast.setText(context.getString(R.string.title_last_connected,

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -265,6 +265,7 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                                             " stop=" + prev.canRun() +
                                             " start=" + current.canRun() +
                                             " changed=" + !prev.accountState.equals(current.accountState) +
+                                            " enabled=" + current.accountState.synchronize +
                                             " state=" + current.accountState.state +
                                             " type=" + prev.networkState.getType() + "/" + current.networkState.getType());
                                 if (prev.canRun())

File: app/src/main/java/eu/faircode/email/TupleAccountState.java
Patch:
@@ -53,6 +53,6 @@ boolean isEnabled(boolean enabled) {
     }
 
     boolean shouldRun(boolean enabled) {
-        return (isEnabled(enabled) || operations > 0);
+        return (isEnabled(enabled) || (operations > 0 && synchronize));
     }
 }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -235,7 +235,8 @@ public void onChanged(List<TupleAccountNetworkState> accountNetworkStates) {
                             runService = true;
                         if ("connected".equals(current.accountState.state))
                             accounts++;
-                        operations += current.accountState.operations;
+                        if (current.accountState.synchronize)
+                            operations += current.accountState.operations;
 
                         int index = accountStates.indexOf(current);
                         if (index < 0) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -487,7 +487,7 @@ static void build(Context context, EntityMessage message, List<EntityAttachment>
 
         if (availableAttachments == 0)
             if (message.plain_only != null && message.plain_only)
-                imessage.setContent(plainContent, plainPart.getContentType());
+                imessage.setContent(plainContent, "text/plain; charset=" + Charset.defaultCharset().name());
             else
                 imessage.setContent(altMultiPart);
         else {

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -349,9 +349,10 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                                                     imessage.setFlag(Flags.Flag.DRAFT, false);
 
                                                 ifolder.appendMessages(new Message[]{imessage});
-
-                                                EntityOperation.sync(context, inbox.id, true);
                                             }
+
+                                            EntityOperation.sync(context, inbox.id, true);
+                                            ServiceSynchronize.eval(context, false, "EML");
                                         }
 
                                         return account.name + "/" + inbox.name;

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -282,6 +282,8 @@ protected Void onExecute(Context context, Bundle args) {
                         db.endTransaction();
                     }
 
+                    ServiceSynchronize.eval(context, false, "attachment");
+
                     return null;
                 }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -595,6 +595,7 @@ protected Void onExecute(Context context, Bundle args) {
                             boolean subscribed = args.getBoolean("subscribed");
 
                             EntityOperation.subscribe(context, id, subscribed);
+                            ServiceSynchronize.eval(context, false, "subscribed=" + subscribed);
 
                             return null;
                         }

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -171,6 +171,8 @@ protected Void onExecute(Context context, Bundle args) {
                                 db.endTransaction();
                             }
 
+                            ServiceSynchronize.eval(context, false, "attachment");
+
                             return null;
                         }
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -177,15 +177,13 @@ public void onClick(View view) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("badge", checked).apply();
-                ServiceSynchronize.restart(getContext(), "badge");
             }
         });
 
         swUnseenIgnored.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("unseen_ignored", checked).apply();
-                ServiceSynchronize.restart(getContext(), "unseen_ignored");
             }
         });
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -641,6 +641,8 @@ static EntityMessage getDebugInfo(Context context, int title, Throwable ex, Stri
             db.endTransaction();
         }
 
+        ServiceSynchronize.eval(context, false, "debuginfo");
+
         return draft;
     }
 

File: app/src/main/java/eu/faircode/email/WorkerPoll.java
Patch:
@@ -63,6 +63,8 @@ public Result doWork() {
             db.endTransaction();
         }
 
+        ServiceSynchronize.eval(getApplicationContext(), false, "refresh/poll");
+
         return Result.success();
     }
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -749,6 +749,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     identity.bcc = bcc;
                     identity.sent_folder = null;
                     identity.sign_key = null;
+                    identity.sign_key_alias = null;
                     identity.error = null;
                     identity.last_connected = last_connected;
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -74,6 +74,8 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             pager.setCurrentItem(3);
         else if ("display".equals(tab))
             pager.setCurrentItem(4);
+        else if ("privacy".equals(tab))
+            pager.setCurrentItem(6);
         getActivity().getIntent().removeExtra("tab");
     }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1427,7 +1427,8 @@ MessageParts getMessageParts(Context context) throws IOException, MessagingExcep
                         return parts;
                     }
                 }
-            } else if (imessage.isMimeType("application/pkcs7-mime")) {
+            } else if (imessage.isMimeType("application/pkcs7-mime") ||
+                    imessage.isMimeType("application/x-pkcs7-mime")) {
                 ContentType ct = new ContentType(imessage.getContentType());
                 String smimeType = ct.getParameter("smime-type");
                 if ("enveloped-data".equals(smimeType)) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2699,12 +2699,13 @@ private void onActionUnsubscribe(TupleMessageEx message) {
         }
 
         private void onActionDecrypt(TupleMessageEx message, boolean auto) {
+            int encrypt = (message.encrypt == null ? EntityMessage.PGP_SIGNENCRYPT /* Inline */ : message.encrypt);
             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
             lbm.sendBroadcast(
                     new Intent(FragmentMessages.ACTION_DECRYPT)
                             .putExtra("id", message.id)
                             .putExtra("auto", auto)
-                            .putExtra("type", (int) message.encrypt));
+                            .putExtra("type", encrypt));
         }
 
         private void onActionReplyMenu(TupleMessageEx message) {

File: app/src/main/java/eu/faircode/email/BehaviorBottomMargin.java
Patch:
@@ -46,12 +46,14 @@ public boolean layoutDependsOn(@NonNull CoordinatorLayout parent, @NonNull View
     public boolean onDependentViewChanged(@NonNull CoordinatorLayout parent, @NonNull View child, @NonNull View dependency) {
         CoordinatorLayout.LayoutParams lparam = (CoordinatorLayout.LayoutParams) child.getLayoutParams();
         lparam.setMargins(0, 0, 0, dependency.getHeight());
+        child.setLayoutParams(lparam);
         return true;
     }
 
     @Override
     public void onDependentViewRemoved(CoordinatorLayout parent, View child, View dependency) {
         CoordinatorLayout.LayoutParams lparam = (CoordinatorLayout.LayoutParams) child.getLayoutParams();
         lparam.setMargins(0, 0, 0, 0);
+        child.setLayoutParams(lparam);
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2197,6 +2197,7 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             boolean plain_only = prefs.getBoolean("plain_only", false);
+            boolean sign_default = prefs.getBoolean("sign_default", false);
             boolean encrypt_default = prefs.getBoolean("encrypt_default", false);
             boolean receipt_default = prefs.getBoolean("receipt_default", false);
 
@@ -2233,6 +2234,8 @@ protected DraftData onExecute(Context context, Bundle args) throws Throwable {
                         data.draft.plain_only = true;
                     if (encrypt_default)
                         data.draft.encrypt = EntityMessage.PGP_SIGNENCRYPT;
+                    else if (sign_default)
+                        data.draft.encrypt = EntityMessage.PGP_SIGNONLY;
                     if (receipt_default)
                         data.draft.receipt_request = true;
 

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -30,7 +30,6 @@
 import android.os.Handler;
 import android.provider.Settings;
 import android.util.Base64;
-import android.view.MenuItem;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
@@ -482,7 +481,7 @@ private void reportError(BillingResult result, String stage) {
                 retry(60);
         }
 
-        Log.e(message);
+        EntityLog.log(this, message);
 
         for (IBillingListener listener : listeners)
             listener.onError(message);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1251,7 +1251,7 @@ protected void onExecuted(Bundle args, final EntityAccount account) {
                     cbAutoSeen.setChecked(account == null ? true : account.auto_seen);
                     etInterval.setText(account == null ? "" : Long.toString(account.poll_interval));
                     cbPartialFetch.setChecked(account == null ? true : account.partial_fetch);
-                    cbIgnoreSize.setChecked(account == null ? true : account.ignore_size);
+                    cbIgnoreSize.setChecked(account == null ? false : account.ignore_size);
                     cbUseDate.setChecked(account == null ? false : account.use_date);
 
                     auth = (account == null ? MailService.AUTH_TYPE_PASSWORD : account.auth_type);

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -200,7 +200,8 @@ public boolean equals(Object obj) {
                     Objects.equals(this.encryption, other.encryption) &&
                     Objects.equals(this.size, other.size) &&
                     Objects.equals(this.progress, other.progress) &&
-                    this.available.equals(other.available));
+                    this.available.equals(other.available) &&
+                    Objects.equals(this.error, other.error));
         } else
             return false;
     }

File: app/src/main/java/eu/faircode/email/ActivityEML.java
Patch:
@@ -134,7 +134,7 @@ protected Result onExecute(Context context, Bundle args) throws Throwable {
                     result.from = MessageHelper.formatAddresses(helper.getFrom());
                     result.to = MessageHelper.formatAddresses(helper.getTo());
                     result.subject = helper.getSubject();
-                    result.parts = helper.getMessageParts();
+                    result.parts = helper.getMessageParts(context);
 
                     String html = result.parts.getHtml(context);
                     if (html != null) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4206,7 +4206,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
                                     try (InputStream fis = new FileInputStream(plain)) {
                                         MimeMessage imessage = new MimeMessage(isession, fis);
                                         MessageHelper helper = new MessageHelper(imessage);
-                                        parts = helper.getMessageParts();
+                                        parts = helper.getMessageParts(context);
                                     }
 
                                     try {

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -413,7 +413,7 @@ private void onSend(EntityMessage message) throws MessagingException, IOExceptio
 
                 if (sid != null) {
                     MessageHelper helper = new MessageHelper(imessage);
-                    MessageHelper.MessageParts parts = helper.getMessageParts();
+                    MessageHelper.MessageParts parts = helper.getMessageParts(this);
                     String body = parts.getHtml(this);
                     Helper.writeText(EntityMessage.getFile(this, sid), body);
                     db.message().setMessageContent(message.id,

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -80,9 +80,9 @@
 public class EntityMessage implements Serializable {
     static final String TABLE_NAME = "message";
 
-    static final Integer ENCRYPTION_NONE = 0;
-    static final Integer ENCRYPTION_SIGNENCRYPT = 1;
-    static final Integer ENCRYPTION_SIGNONLY = 2;
+    static final Integer ENCRYPT_NONE = 0;
+    static final Integer PGP_SIGNENCRYPT = 1;
+    static final Integer PGP_SIGNONLY = 2;
 
     static final Integer PRIORITIY_LOW = 0;
     static final Integer PRIORITIY_NORMAL = 1;

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -121,7 +121,7 @@ static void queue(Context context, EntityMessage message, String name, Object...
             for (Object value : values)
                 jargs.put(value);
 
-            if (MOVE.equals(name) && EntityMessage.ENCRYPTION_SIGNENCRYPT.equals(message.encrypt)) {
+            if (MOVE.equals(name) && EntityMessage.PGP_SIGNENCRYPT.equals(message.encrypt)) {
                 EntityFolder folder = db.folder().getFolder(message.folder);
                 if (folder != null && EntityFolder.DRAFTS.equals(folder.type))
                     name = DELETE;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -345,7 +345,8 @@ static List<String> getExtras(Bundle data) {
                                 elements[i] = (element == null ? null : element.toString());
                         }
                         value = TextUtils.join(",", elements);
-                    }
+                    } else
+                        value = "[" + length + "]";
                 } else if (v instanceof Long)
                     value = "0x" + Long.toHexString((Long) v);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1243,7 +1243,7 @@ MessageParts getMessageParts() throws IOException, MessagingException {
 
                     AttachmentPart apart = new AttachmentPart();
                     apart.disposition = Part.INLINE;
-                    apart.filename = "content.txt";
+                    apart.filename = "content.asc";
                     apart.encrypt = EntityAttachment.PGP_CONTENT;
                     apart.part = multipart.getBodyPart(0);
 
@@ -1253,6 +1253,7 @@ MessageParts getMessageParts() throws IOException, MessagingException {
                     apart.attachment.disposition = apart.disposition;
                     apart.attachment.name = apart.filename;
                     apart.attachment.type = ct.getBaseType().toLowerCase(Locale.ROOT);
+                    apart.attachment.size = (long) apart.part.getSize();
                     apart.attachment.encryption = apart.encrypt;
 
                     parts.attachments.add(apart);

File: app/src/main/java/androidx/recyclerview/widget/FastScrollerEx.java
Patch:
@@ -359,6 +359,7 @@ void updateScrollPosition(int offsetX, int offsetY) {
                 (int) ((verticalVisibleLength * middleScreenPos) / verticalContentLength);
             mVerticalThumbHeight = Math.min(verticalVisibleLength,
                 (verticalVisibleLength * verticalVisibleLength) / verticalContentLength);
+            mVerticalThumbHeight = Math.max(mVerticalThumbHeight, mVerticalThumbDrawable.getIntrinsicHeight());
         }
 
         if (mNeedHorizontalScrollbar) {

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -256,7 +256,7 @@ private static EmailProvider _fromISPDB(Context context, String domain, String e
         }
 
         try {
-            URL url = new URL("https://" + domain + "/.well-known/autoconfig/mail/config-v1.1.xml");
+            URL url = new URL("https://" + domain + "/.well-known/autoconfig/mail/config-v1.1.xml?emailaddress=" + email);
             return getISPDB(domain, url);
         } catch (Throwable ex) {
             Log.w(ex);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3213,10 +3213,9 @@ public void run() {
             if (!loading && SimpleTask.getCount() == 0)
                 pbWait.setVisibility(View.GONE);
 
-            boolean none = (messages.size() == 0 && !loading);
-            tvNoEmail.setVisibility(none ? View.VISIBLE : View.GONE);
+            tvNoEmail.setVisibility(messages.size() == 0 ? View.VISIBLE : View.GONE);
             tvNoEmailHint.setVisibility(
-                    none && filterActive() && viewType != AdapterMessage.ViewType.SEARCH
+                    messages.size() == 0 && filterActive() && viewType != AdapterMessage.ViewType.SEARCH
                             ? View.VISIBLE : View.GONE);
 
             grpReady.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/TupleMessageWidgetCount.java
Patch:
@@ -22,6 +22,7 @@
 import androidx.annotation.Nullable;
 
 public class TupleMessageWidgetCount {
+    public long folder;
     public int total;
     public int seen;
     public int flagged;
@@ -30,7 +31,8 @@ public class TupleMessageWidgetCount {
     public boolean equals(@Nullable Object obj) {
         if (obj instanceof TupleMessageWidgetCount) {
             TupleMessageWidgetCount other = (TupleMessageWidgetCount) obj;
-            return (this.total == other.total &&
+            return (this.folder == other.folder &&
+                    this.total == other.total &&
                     this.seen == other.seen &&
                     this.flagged == other.flagged);
         } else

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -456,9 +456,6 @@ List<TupleMatch> matchMessages(
     @Query("UPDATE message SET error = :error WHERE id = :id")
     int setMessageError(long id, String error);
 
-    @Query("UPDATE message SET signature = :signature WHERE id = :id")
-    int setMessageSignature(long id, boolean signature);
-
     @Query("UPDATE message SET revision = :revision WHERE id = :id")
     int setMessageRevision(long id, Integer revision);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2405,7 +2405,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
             }
 
             if (rvMessage != null) {
-                Parcelable rv = savedInstanceState.getBundle("fair:rv");
+                Parcelable rv = savedInstanceState.getParcelable("fair:rv");
                 rvMessage.getLayoutManager().onRestoreInstanceState(rv);
             }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1045,7 +1045,7 @@ else if (content instanceof InputStream)
             }
 
             if (part == plain)
-                result = "<pre plain=\"true\">" + result + "</pre>";
+                result = "<div>" + HtmlHelper.formatPre(result) + "</div>";
 
             return result;
         }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -100,6 +100,8 @@ static void setSystemProperties(Context context) {
         // https://docs.oracle.com/javaee/6/api/javax/mail/internet/MimeMultipart.html
         System.setProperty("mail.mime.multipart.ignoremissingboundaryparameter", "true"); // javax.mail.internet.ParseException: In parameter list
         System.setProperty("mail.mime.multipart.ignoreexistingboundaryparameter", "true");
+        System.setProperty("mail.mime.multipart.ignoremissingendboundary", "true");
+        System.setProperty("mail.mime.multipart.allowempty", "true");
     }
 
     static Properties getSessionProperties() {

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -51,7 +51,7 @@ public class ViewModelMessages extends ViewModel {
 
     private ExecutorService executor = Helper.getBackgroundExecutor(2, "model");
 
-    private static final int LOCAL_PAGE_SIZE = 100;
+    static final int LOCAL_PAGE_SIZE = 100;
     private static final int REMOTE_PAGE_SIZE = 10;
     private static final int SEARCH_PAGE_SIZE = 10;
     private static final int LOW_MEM_MB = 32;

File: app/src/main/java/eu/faircode/email/ActivityWidgetUnified.java
Patch:
@@ -96,6 +96,7 @@ public void onClick(View view) {
                     editor.remove("widget." + appWidgetId + ".name");
                 editor.putLong("widget." + appWidgetId + ".account", account == null ? -1L : account.id);
                 editor.putLong("widget." + appWidgetId + ".folder", folder == null ? -1L : folder.id);
+                editor.putString("widget." + appWidgetId + ".type", folder == null ? null : folder.type);
                 editor.putBoolean("widget." + appWidgetId + ".unseen", cbUnseen.isChecked());
                 editor.putBoolean("widget." + appWidgetId + ".flagged", cbFlagged.isChecked());
                 editor.apply();

File: app/src/main/java/eu/faircode/email/WidgetUnified.java
Patch:
@@ -71,10 +71,12 @@ private static void update(Context context, AppWidgetManager appWidgetManager, i
         for (int appWidgetId : appWidgetIds) {
             long account = prefs.getLong("widget." + appWidgetId + ".account", -1L);
             long folder = prefs.getLong("widget." + appWidgetId + ".folder", -1L);
+            String type = prefs.getString("widget." + appWidgetId + ".type", null);
 
             Intent view = new Intent(context, ActivityView.class);
             view.setAction("folder:" + folder);
             view.putExtra("account", account);
+            view.putExtra("type", type);
             view.putExtra("refresh", true);
             view.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             PendingIntent pi = PendingIntent.getActivity(context, ActivityView.REQUEST_FOLDER, view, PendingIntent.FLAG_UPDATE_CURRENT);

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -227,7 +227,7 @@ private void onShare(EntityAttachment attachment) {
 
             // Build intent
             Intent intent = new Intent(Intent.ACTION_VIEW);
-            intent.setDataAndType(uri, type);
+            intent.setDataAndTypeAndNormalize(uri, type);
             intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
             if (!TextUtils.isEmpty(attachment.name))
                 intent.putExtra(Intent.EXTRA_TITLE, Helper.sanitizeFilename(attachment.name));

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -115,7 +115,7 @@ public void onClick(View view) {
 
                 // Build intent
                 Intent intent = new Intent(Intent.ACTION_VIEW);
-                intent.setDataAndType(uri, attachment.type);
+                intent.setDataAndTypeAndNormalize(uri, attachment.type);
                 intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                 if (!TextUtils.isEmpty(attachment.name))
                     intent.putExtra(Intent.EXTRA_TITLE, attachment.name);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2417,7 +2417,7 @@ private void onAddContact(TupleMessageEx message) {
                         Uri lookupUri = ContactsContract.Contacts.getLookupUri(contactId, lookupKey);
 
                         edit.setAction(Intent.ACTION_EDIT);
-                        edit.setDataAndType(lookupUri, ContactsContract.Contacts.CONTENT_ITEM_TYPE);
+                        edit.setDataAndTypeAndNormalize(lookupUri, ContactsContract.Contacts.CONTENT_ITEM_TYPE);
                     } else {
                         edit.setAction(Intent.ACTION_INSERT);
                         edit.setType(ContactsContract.Contacts.CONTENT_TYPE);

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -154,6 +154,8 @@ String getMimeType() {
         if (encryption != null)
             return type;
 
+        // https://blogs.msdn.microsoft.com/vsofficedeveloper/2008/05/08/office-2007-file-format-mime-types-for-http-content-streaming-2/
+
         String extension = Helper.getExtension(name);
         if (extension == null)
             return type;

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -301,8 +301,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                     folders = iservice.getFolders();
 
                     if (folders == null)
-                        throw new IllegalArgumentException(
-                                context.getString(R.string.title_setup_no_settings, domain));
+                        throw new IllegalArgumentException(context.getString(R.string.title_setup_no_system_folders));
                 }
 
                 String iprotocol = provider.smtp.starttls ? "smtp" : "smtps";

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -262,8 +262,7 @@ protected EmailProvider onExecute(Context context, Bundle args) throws Throwable
                     folders = iservice.getFolders();
 
                     if (folders == null)
-                        throw new IllegalArgumentException(
-                                context.getString(R.string.title_setup_no_settings, dparts[1]));
+                        throw new IllegalArgumentException(context.getString(R.string.title_setup_no_system_folders));
                 }
 
                 String iprotocol = provider.smtp.starttls ? "smtp" : "smtps";

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -390,6 +390,9 @@ private void onWakeup(long id) {
                     db.message().deleteMessage(id);
                     message.id = null;
                     message.id = db.message().insertMessage(message);
+                    if (message.content)
+                        EntityMessage.getFile(this, id)
+                                .renameTo(message.getFile(this));
                     db.message().setMessageSnoozed(message.id, null);
                     EntityOperation.queue(this, message, EntityOperation.SEEN, false, false);
                 }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2415,7 +2415,7 @@ private static void updateContactInfo(Context context, final EntityFolder folder
         }
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean suggest_sent = prefs.getBoolean("suggest_sent", false);
+        boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
         boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
         if (type == EntityContact.TYPE_TO && !suggest_sent)

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -126,7 +126,7 @@ boolean matches(Context context, EntityMessage message, Message imessage) throws
 
                         if (known) {
                             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                            boolean suggest_sent = prefs.getBoolean("suggest_sent", false);
+                            boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
                             if (suggest_sent) {
                                 DB db = DB.getInstance(context);
                                 EntityContact contact =

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -584,7 +584,7 @@ public CharSequence convertToString(Cursor cursor) {
         });
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-        boolean suggest_sent = prefs.getBoolean("suggest_sent", false);
+        boolean suggest_sent = prefs.getBoolean("suggest_sent", true);
         boolean suggest_received = prefs.getBoolean("suggest_received", false);
 
         cadapter.setFilterQueryProvider(new FilterQueryProvider() {

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -258,7 +258,7 @@ private void setOptions() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
         swKeyboard.setChecked(prefs.getBoolean("keyboard", true));
-        swSuggestSent.setChecked(prefs.getBoolean("suggest_sent", false));
+        swSuggestSent.setChecked(prefs.getBoolean("suggest_sent", true));
         swSuggestReceived.setChecked(prefs.getBoolean("suggest_received", false));
         swPrefixOnce.setChecked(prefs.getBoolean("prefix_once", true));
         swExtendedReply.setChecked(prefs.getBoolean("extended_reply", false));

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -285,6 +285,7 @@ private void setOptions() {
                         ? View.GONE : View.VISIBLE);
         swExperiments.setChecked(prefs.getBoolean("experiments", false));
         swCrashReports.setChecked(prefs.getBoolean("crash_reports", false));
+        tvUuid.setText(prefs.getString("uuid", null));
         swDebug.setChecked(prefs.getBoolean("debug", false));
 
         tvProcessors.setText(getString(R.string.title_advanced_processors, Runtime.getRuntime().availableProcessors()));
@@ -296,8 +297,6 @@ private void setOptions() {
         tvStorageSpace.setText(getString(R.string.title_advanced_storage_space,
                 Helper.humanReadableByteCount(Helper.getStorageSpace(), true)));
 
-        tvUuid.setText(prefs.getString("uuid", null));
-
         grpDebug.setVisibility(swDebug.isChecked() || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
     }
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -293,7 +293,7 @@ private boolean shouldNotify(Throwable ex) {
 
         final String installer = context.getPackageManager().getInstallerPackageName(BuildConfig.APPLICATION_ID);
         final boolean fingerprint = Helper.hasValidFingerprint(context);
-        final boolean ignoringOptimizations = Helper.isIgnoringOptimizations(context);
+        final Boolean ignoringOptimizations = Helper.isIgnoringOptimizations(context);
 
         Bugsnag.beforeNotify(new BeforeNotify() {
             @Override
@@ -302,7 +302,7 @@ public boolean run(@NonNull Error error) {
                 error.addToTab("extra", "fingerprint", fingerprint);
                 error.addToTab("extra", "thread", Thread.currentThread().getName());
                 error.addToTab("extra", "free", Log.getFreeMemMb());
-                error.addToTab("extra", "optimizing", !ignoringOptimizations);
+                error.addToTab("extra", "optimizing", (ignoringOptimizations != null && !ignoringOptimizations));
 
                 String theme = prefs.getString("theme", "light");
                 error.addToTab("extra", "theme", theme);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4361,7 +4361,7 @@ protected void onException(Bundle args, Throwable ex) {
 
             return new AlertDialog.Builder(getContext())
                     .setView(view)
-                    .setPositiveButton(R.string.title_yes, new DialogInterface.OnClickListener() {
+                    .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
                             Uri uri = Uri.parse(etLink.getText().toString());
@@ -4375,7 +4375,7 @@ public void onClick(DialogInterface dialog, int which) {
                             Helper.view(getContext(), uri, true);
                         }
                     })
-                    .setNegativeButton(R.string.title_no, null)
+                    .setNegativeButton(android.R.string.cancel, null)
                     .create();
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2640,6 +2640,7 @@ public void onSearch(String query) {
 
         menu.findItem(R.id.menu_folders).setActionView(R.layout.action_button);
         ImageButton ib = (ImageButton) menu.findItem(R.id.menu_folders).getActionView();
+        ib.setImageResource(R.drawable.baseline_folder_24);
         ib.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -4333,7 +4334,7 @@ protected Long onExecute(Context context, Bundle args) {
                             account, thread, threading ? null : id, null);
                     for (EntityMessage threaded : messages) {
                         db.message().setMessageSnoozed(threaded.id, wakeup);
-                        db.message().setMessageUiIgnored(message.id, true);
+                        db.message().setMessageUiIgnored(threaded.id, true);
                         EntityMessage.snooze(context, threaded.id, wakeup);
                     }
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2606,7 +2606,7 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Map<L
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean notify_summary = prefs.getBoolean("notify_summary", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
         boolean biometrics = prefs.getBoolean("biometrics", false);
         boolean biometric_notify = prefs.getBoolean("biometrics_notify", false);
         boolean pro = ActivityBilling.isPro(context);
@@ -2759,7 +2759,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
         boolean name_email = prefs.getBoolean("name_email", false);
         boolean flags = prefs.getBoolean("flags", true);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
         boolean notify_trash = (prefs.getBoolean("notify_trash", true) || !pro);
         boolean notify_junk = (prefs.getBoolean("notify_junk", false) && pro);
         boolean notify_archive = (prefs.getBoolean("notify_archive", true) || !pro);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -374,7 +374,7 @@ private void setOptions() {
         swNotifyRemove.setChecked(prefs.getBoolean("notify_remove", true));
         swNotifyClear.setChecked(prefs.getBoolean("notify_clear", false));
         swNotifyPreview.setChecked(prefs.getBoolean("notify_preview", true));
-        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", true));
+        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", false));
 
         cbNotifyActionTrash.setChecked(prefs.getBoolean("notify_trash", true) || !pro);
         cbNotifyActionJunk.setChecked(prefs.getBoolean("notify_junk", false) && pro);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -195,13 +195,13 @@ else if (context.getString(R.string.title_search_special_snoozed).equals(special
                             " snoozed=" + snoozed +
                             " offset=" + state.offset +
                             " size=" + state.matches.size());
-                    if (state.matches.size() == 0)
-                        break;
-
                     state.offset += Math.min(state.matches.size(), SEARCH_LIMIT);
                     state.index = 0;
                 }
 
+                if (state.matches.size() == 0)
+                    break;
+
                 for (int i = state.index; i < state.matches.size() && found < pageSize && !state.destroyed; i++) {
                     state.index = i + 1;
 

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -215,9 +215,6 @@ static void setupBugsnag(Context context) {
         config.beforeSend(new BeforeSend() {
             @Override
             public boolean run(@NonNull Report report) {
-                if (!"eu.faircode.email".equals(BuildConfig.APPLICATION_ID))
-                    return false;
-
                 // opt-in
                 boolean crash_reports = prefs.getBoolean("crash_reports", false);
                 if (!crash_reports)
@@ -302,6 +299,7 @@ public boolean run(@NonNull Error error) {
 
                 String theme = prefs.getString("theme", "light");
                 error.addToTab("extra", "theme", theme);
+                error.addToTab("extra", "package", BuildConfig.APPLICATION_ID);
                 return true;
             }
         });

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -215,6 +215,9 @@ static void setupBugsnag(Context context) {
         config.beforeSend(new BeforeSend() {
             @Override
             public boolean run(@NonNull Report report) {
+                if (!"eu.faircode.email".equals(BuildConfig.APPLICATION_ID))
+                    return false;
+
                 // opt-in
                 boolean crash_reports = prefs.getBoolean("crash_reports", false);
                 if (!crash_reports)

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -177,7 +177,7 @@ else if (context.getString(R.string.title_search_special_snoozed).equals(special
         }
 
         if (state.matches == null) {
-            state.matches = db.message().matchMessages(folder, find, seen, flagged, snoozed);
+            state.matches = db.message().matchMessages(folder, "%" + find + "%", seen, flagged, snoozed);
             Log.i("Boundary device folder=" + folder +
                     " query=" + query +
                     " seen=" + seen +

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -166,7 +166,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("notify_preview", checked).apply();
-                swWearablePreview.setEnabled(checked);
+                enableOptions();
             }
         });
 
@@ -354,7 +354,6 @@ private void setOptions() {
         swNotifySummary.setChecked(prefs.getBoolean("notify_summary", false));
         swNotifyPreview.setChecked(prefs.getBoolean("notify_preview", true));
         swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", true));
-        swWearablePreview.setEnabled(swNotifyPreview.isChecked());
 
         cbNotifyActionTrash.setChecked(prefs.getBoolean("notify_trash", true) || !pro);
         cbNotifyActionJunk.setChecked(prefs.getBoolean("notify_junk", false) && pro);
@@ -379,6 +378,7 @@ private void enableOptions() {
         boolean checked = swNotifySummary.isChecked();
 
         swNotifyPreview.setEnabled(!checked);
+        swWearablePreview.setEnabled(!checked && swNotifyPreview.isChecked());
         cbNotifyActionTrash.setEnabled(pro && !checked);
         cbNotifyActionJunk.setEnabled(pro && !checked);
         cbNotifyActionArchive.setEnabled(pro && !checked);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2611,7 +2611,7 @@ static void notifyMessages(Context context, List<TupleMessageEx> messages, Map<L
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean notify_summary = prefs.getBoolean("notify_summary", false);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
         boolean biometrics = prefs.getBoolean("biometrics", false);
         boolean biometric_notify = prefs.getBoolean("biometrics_notify", false);
         boolean pro = ActivityBilling.isPro(context);
@@ -2759,7 +2759,7 @@ private static List<NotificationCompat.Builder> getNotificationUnseen(
         boolean name_email = prefs.getBoolean("name_email", false);
         boolean flags = prefs.getBoolean("flags", true);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
-        boolean wearable_preview = prefs.getBoolean("wearable_preview", false);
+        boolean wearable_preview = prefs.getBoolean("wearable_preview", true);
         boolean notify_trash = (prefs.getBoolean("notify_trash", true) || !pro);
         boolean notify_junk = (prefs.getBoolean("notify_junk", false) && pro);
         boolean notify_archive = (prefs.getBoolean("notify_archive", true) || !pro);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -353,7 +353,7 @@ private void setOptions() {
         swUnseenIgnored.setChecked(prefs.getBoolean("unseen_ignored", false));
         swNotifySummary.setChecked(prefs.getBoolean("notify_summary", false));
         swNotifyPreview.setChecked(prefs.getBoolean("notify_preview", true));
-        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", false));
+        swWearablePreview.setChecked(prefs.getBoolean("wearable_preview", true));
         swWearablePreview.setEnabled(swNotifyPreview.isChecked());
 
         cbNotifyActionTrash.setChecked(prefs.getBoolean("notify_trash", true) || !pro);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2408,6 +2408,7 @@ private void onToggleMessage(TupleMessageEx message) {
                 boolean expanded = !properties.getValue("expanded", message.id);
                 properties.setValue("expanded", message.id, expanded);
 
+                ibExpander.setTag(expanded);
                 ibExpander.setImageLevel(expanded ? 0 /* less*/ : 1 /* more */);
 
                 if (expanded)

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -541,6 +541,9 @@ private static StringBuilder getAppInfo(Context context) {
         ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
         sb.append(String.format("Memory class: %d\r\n", am.getMemoryClass()));
 
+        sb.append(String.format("Storage space: %s\r\n",
+                Helper.humanReadableByteCount(Helper.getStorageSpace(), true)));
+
         Runtime rt = Runtime.getRuntime();
         long hused = (rt.totalMemory() - rt.freeMemory()) / 1024L;
         long hmax = rt.maxMemory() / 1024L;

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -50,6 +50,7 @@ public class EntityAccount extends EntityOrder implements Serializable {
 
     // https://tools.ietf.org/html/rfc2177
     static final int DEFAULT_KEEP_ALIVE_INTERVAL = 24; // minutes
+    static final int DEFAULT_POLL_INTERVAL = 12; // minutes
 
     @PrimaryKey(autoGenerate = true)
     public Long id;

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -626,6 +626,8 @@ public Object doCommand(IMAPProtocol protocol) {
             protected void onExecuted(Bundle args, CheckResult result) {
                 tvIdle.setVisibility(result.idle ? View.GONE : View.VISIBLE);
                 tvUtf8.setVisibility(result.utf8 == null || result.utf8 ? View.GONE : View.VISIBLE);
+                if (!result.idle)
+                    etInterval.setText(Integer.toString(EntityAccount.DEFAULT_POLL_INTERVAL));
                 if (result.empty)
                     cbPartialFetch.setChecked(false);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -497,7 +497,7 @@ private void setOptions() {
         swCards.setChecked(prefs.getBoolean("cards", true));
         swDate.setChecked(prefs.getBoolean("date", true));
         swThreading.setChecked(prefs.getBoolean("threading", true));
-        swIndentation.setChecked(prefs.getBoolean("indentation", true));
+        swIndentation.setChecked(prefs.getBoolean("indentation", false));
         swHighlightUnread.setChecked(prefs.getBoolean("highlight_unread", false));
         swAvatars.setChecked(prefs.getBoolean("avatars", true));
         swGeneratedIcons.setChecked(prefs.getBoolean("generated_icons", true));

File: app/src/main/java/eu/faircode/email/ViewCardOptional.java
Patch:
@@ -59,7 +59,7 @@ private void init(Context context) {
         cards = prefs.getBoolean("cards", true);
         compact = prefs.getBoolean("compact", false);
         threading = prefs.getBoolean("threading", true);
-        indentation = prefs.getBoolean("indentation", true);
+        indentation = prefs.getBoolean("indentation", false);
 
         margin = Helper.dp2pixels(context, compact ? 3 : 6);
         ident = Helper.dp2pixels(context, 12 + (compact ? 3 : 6));

File: app/src/main/java/eu/faircode/email/ContactInfo.java
Patch:
@@ -106,7 +106,7 @@ static ContactInfo get(Context context, long account, Address[] addresses, boole
             return new ContactInfo();
         InternetAddress address = (InternetAddress) addresses[0];
 
-        String key = address.getAddress();
+        String key = MessageHelper.formatAddresses(new Address[]{address});
         synchronized (emailContactInfo) {
             ContactInfo info = emailContactInfo.get(key);
             if (info != null && !info.isExpired())

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -736,7 +736,7 @@ private static void onAdd(Context context, JSONArray jargs, EntityFolder folder,
         if (folder.id.equals(message.folder)) {
             // Some providers do not list the new message yet
             Long newuid = findUid(ifolder, message.msgid, true);
-            if (message.uid != null && newuid != null && newuid > message.uid) {
+            if (newuid != null && (message.uid == null || newuid > message.uid)) {
                 message.uid = newuid;
                 Log.i(folder.name + " appended uid=" + message.uid);
                 db.message().setMessageUid(message.id, message.uid);

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -277,7 +277,8 @@ protected List<Long> onExecute(Context context, Bundle args) {
                 int count = ds.countItems();
                 for (int i = 0; i < count; i += 100)
                     for (TupleMessageEx message : ds.loadRange(i, Math.min(100, count - i)))
-                        ids.add(message.id);
+                        if (message.uid != null)
+                            ids.add(message.id);
 
                 Log.i("Loaded messages #" + ids.size());
                 return ids;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -31,7 +31,7 @@
 import android.net.NetworkCapabilities;
 import android.os.Build;
 import android.os.Bundle;
-import android.os.DeadSystemException;
+import android.os.DeadObjectException;
 import android.os.Debug;
 import android.os.PowerManager;
 import android.os.RemoteException;
@@ -420,7 +420,7 @@ static boolean isOwnFault(Throwable ex) {
             return false;
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
-            if (ex instanceof RuntimeException && ex.getCause() instanceof DeadSystemException)
+            if (ex instanceof RuntimeException && ex.getCause() instanceof DeadObjectException)
                 return false;
 
         if (BuildConfig.BETA_RELEASE)

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -801,6 +801,7 @@ private void bindTo(final TupleMessageEx message) {
                     : EntityFolder.getIcon(outgoing ? EntityFolder.SENT : message.folderType));
             ivType.setVisibility(message.drafts > 0 ||
                     (viewType == ViewType.UNIFIED && type == null && !inbox) ||
+                    viewType == ViewType.SEARCH ||
                     (viewType == ViewType.THREAD && (outgoing || EntityFolder.SENT.equals(message.folderType)))
                     ? View.VISIBLE : View.GONE);
             if (ivType.getTag() == null || (int) ivType.getTag() != icon) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3610,15 +3610,15 @@ public void onCurrentListChanged(@Nullable PagedList<TupleMessageEx> previousLis
                 if (autoscroll && previousList != null)
                     for (int i = 0; i < previousList.size(); i++) {
                         TupleMessageEx message = previousList.get(i);
-                        if (message != null && !message.ui_seen)
+                        if (message != null && !message.ui_seen && !message.ui_ignored)
                             prev++;
                     }
 
                 int cur = 0;
                 if (autoscroll && currentList != null)
                     for (int i = 0; i < currentList.size(); i++) {
                         TupleMessageEx message = currentList.get(i);
-                        if (message != null && !message.ui_seen)
+                        if (message != null && !message.ui_seen && !message.ui_ignored)
                             cur++;
                     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -751,6 +751,7 @@ private void bindTo(final TupleMessageEx message) {
             tvSubject.setTextColor(colorRead);
 
             // Account color
+            vwColor.setVisibility(View.VISIBLE);
             vwColor.setBackgroundColor(message.accountColor == null || !ActivityBilling.isPro(context)
                     ? colorSeparator : message.accountColor);
 

File: app/src/main/java/eu/faircode/email/FragmentGmail.java
Patch:
@@ -289,10 +289,10 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 if (TextUtils.isEmpty(password))
                     throw new IllegalArgumentException(context.getString(R.string.title_no_password));
 
-                String domain = user.split("@")[1];
-                EmailProvider provider = EmailProvider.fromDomain(context, domain, EmailProvider.Discover.ALL);
+                EmailProvider provider = EmailProvider.fromDomain(context, "gmail.com", EmailProvider.Discover.ALL);
 
                 List<EntityFolder> folders;
+                String domain = user.split("@")[1];
 
                 String aprotocol = provider.imap.starttls ? "imap" : "imaps";
                 try (MailService iservice = new MailService(context, aprotocol, null, false, true)) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3657,8 +3657,10 @@ public void onClick(View view) {
             db.message().liveMessage(id).observe(getViewLifecycleOwner(), new Observer<TupleMessageEx>() {
                 @Override
                 public void onChanged(TupleMessageEx draft) {
-                    if (draft == null)
+                    if (draft == null) {
+                        dismiss();
                         return;
+                    }
 
                     int plus = (draft.cc == null ? 0 : draft.cc.length) +
                             (draft.bcc == null ? 0 : draft.bcc.length);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3657,10 +3657,8 @@ public void onClick(View view) {
             db.message().liveMessage(id).observe(getViewLifecycleOwner(), new Observer<TupleMessageEx>() {
                 @Override
                 public void onChanged(TupleMessageEx draft) {
-                    if (draft == null) {
-                        dismiss();
+                    if (draft == null)
                         return;
-                    }
 
                     int plus = (draft.cc == null ? 0 : draft.cc.length) +
                             (draft.bcc == null ? 0 : draft.bcc.length);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1418,7 +1418,7 @@ public boolean onLongClick(View view) {
                     tvBody.setTextSize(TypedValue.COMPLEX_UNIT_PX, size);
                 tvBody.setMinHeight(height);
 
-                tvBody.setTextColor(contrast ? colorUnread : colorRead);
+                tvBody.setTextColor(contrast ? textColorPrimary : colorRead);
                 tvBody.setTypeface(monospaced ? Typeface.MONOSPACE : Typeface.DEFAULT);
 
                 tvBody.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2189,7 +2189,7 @@ else if ("receipt".equals(action)) {
                     // Select identity matching from address
                     Address from = null;
                     EntityIdentity selected = null;
-                    long aid = args.getLong("account", -1);
+                    long aid = args.getLong("account", ref == null ? -1 : ref.account);
                     long iid = args.getLong("identity", -1);
 
                     if (iid >= 0)

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2155,7 +2155,8 @@ private static EntityMessage _synchronizeMessage(
                                 sb.append(" ").append(key).append("=").append(sid.get(key));
                             Log.e("Empty message" + sb.toString());
                         }
-                    }
+                    } else
+                        Log.e("Empty message " + account.host);
                 } catch (Throwable ex) {
                     Log.w(ex);
                 }

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        compact = prefs.getBoolean("compact_folders", true);
+        compact = prefs.getBoolean("compact_folders", false);
 
         setTitle(R.string.page_folders);
     }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -559,7 +559,7 @@ static Drawable decodeImage(final Context context, final long id, String source,
                     return d;
                 } else if (!attachment.available) {
                     Log.i("Image not available CID=" + cid);
-                    Drawable d = res.getDrawable(R.drawable.baseline_photo_library_24, theme);
+                    Drawable d = res.getDrawable(R.drawable.baseline_hourglass_empty_24, theme);
                     d.setBounds(0, 0, px, px);
                     return d;
                 } else {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3514,7 +3514,7 @@ public void onCurrentListChanged(@Nullable PagedList<TupleMessageEx> previousLis
                 boolean autoscroll =
                         (viewType == AdapterMessage.ViewType.THREAD ||
                                 (viewType != ViewType.SEARCH &&
-                                        prefs.getBoolean("autoscroll", false)));
+                                        prefs.getBoolean("autoscroll", true)));
 
                 int prev = 0;
                 if (autoscroll && previousList != null)

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -256,7 +256,7 @@ private void setOptions() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
         swPull.setChecked(prefs.getBoolean("pull", true));
-        swAutoScroll.setChecked(prefs.getBoolean("autoscroll", false));
+        swAutoScroll.setChecked(prefs.getBoolean("autoscroll", true));
         swDoubleTap.setChecked(prefs.getBoolean("doubletap", false));
         swSwipeNav.setChecked(prefs.getBoolean("swipenav", true));
         swReversed.setChecked(prefs.getBoolean("reversed", false));

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         cards = prefs.getBoolean("cards", true);
-        compact = prefs.getBoolean("compact_folders", false);
+        compact = prefs.getBoolean("compact_folders", true);
 
         setTitle(R.string.page_folders);
     }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -975,7 +975,7 @@ private void bindFlagged(TupleMessageEx message, boolean expanded) {
             if (message.color == null)
                 ibFlagged.setImageTintList(ColorStateList.valueOf(flagged > 0 ? colorAccent : textColorSecondary));
             else
-                ibFlagged.setImageTintList(ColorStateList.valueOf(expanded ? message.color : textColorSecondary));
+                ibFlagged.setImageTintList(ColorStateList.valueOf(expanded || !flags_background ? message.color : textColorSecondary));
 
             ibFlagged.setEnabled(message.uid != null || message.accountPop);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3339,7 +3339,8 @@ public void onCurrentListChanged(@Nullable PagedList<TupleMessageEx> previousLis
                             cur++;
                     }
 
-                if (gotoTop || cur > prev) {
+                if (gotoTop ||
+                        (previousList != null && currentList != null && cur > prev)) {
                     gotoTop = false;
                     properties.scrollTo(0);
                 }

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -198,12 +198,12 @@ else if (context.getString(R.string.title_search_special_snoozed).equals(special
                 state.index = i + 1;
 
                 long id = state.messages.get(i);
-                EntityMessage message = null;
+                EntityMessage message;
 
                 if (find == null || seen != null || flagged != null || snoozed != null)
                     message = db.message().getMessage(id);
                 else {
-                    message = db.message().match(id, find);
+                    message = db.message().match(id, "%" + find + "%");
                     if (message == null)
                         try {
                             File file = EntityMessage.getFile(context, id);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2179,7 +2179,7 @@ else if ("receipt".equals(action)) {
                         } else if ("participation".equals(action))
                             data.draft.subject = status + ": " + ref.subject;
 
-                        if (ref.plain_only)
+                        if (ref.plain_only != null && ref.plain_only)
                             data.draft.plain_only = ref.plain_only;
 
                         if (answer > 0) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -194,7 +194,7 @@ static void processOperations(
                                 case EntityOperation.MOVE:
                                     if (EntityOperation.MOVE.equals(next.name)) {
                                         JSONArray jnext = new JSONArray(next.args);
-                                        // Same target, autoread
+                                        // Same target
                                         if (jargs.getLong(0) == jnext.getLong(0)) {
                                             EntityMessage m = db.message().getMessage(next.message);
                                             if (m != null) {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -162,8 +162,9 @@ static void upgrade(Context context) {
                 editor.putBoolean("reversed", true);
                 editor.remove("swipe_reversed");
             }
-        }
 
+        } else if (version < 741)
+            editor.remove("send_dialog");
 
         if (BuildConfig.DEBUG && false) {
             editor.remove("app_support");

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -195,8 +195,7 @@ static void processOperations(
                                     if (EntityOperation.MOVE.equals(next.name)) {
                                         JSONArray jnext = new JSONArray(next.args);
                                         // Same target, autoread
-                                        if (jargs.getLong(0) == jnext.getLong(0) &&
-                                                jargs.getBoolean(1) == jnext.getBoolean(1)) {
+                                        if (jargs.getLong(0) == jnext.getLong(0)) {
                                             EntityMessage m = db.message().getMessage(next.message);
                                             if (m != null) {
                                                 processed.add(next.id);

File: app/src/main/java/eu/faircode/email/Identicon.java
Patch:
@@ -39,8 +39,7 @@ static Bitmap icon(@NonNull String email, int size, int pixels, boolean dark) {
         byte[] hash = getHash(email);
 
         int color = Color.argb(255, hash[0], hash[1], hash[2]);
-        color = ColorUtils.blendARGB(color,
-                dark ? Color.WHITE : Color.BLACK, MIN_LUMINANCE);
+        color = Helper.adjustLuminance(color, dark, MIN_LUMINANCE);
 
         Paint paint = new Paint();
         paint.setColor(color);
@@ -79,7 +78,7 @@ static Bitmap letter(@NonNull String email, int size, boolean dark) {
         byte[] hash = getHash(email);
 
         int color = Color.argb(255, hash[0], hash[1], hash[2]);
-        color = ColorUtils.blendARGB(color, dark ? Color.WHITE : Color.BLACK, MIN_LUMINANCE);
+        color = Helper.adjustLuminance(color, dark, MIN_LUMINANCE);
 
         Bitmap bitmap = Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888);
         Canvas canvas = new Canvas(bitmap);

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -825,7 +825,7 @@ protected Void onExecute(Context context, Bundle args) throws JSONException {
                         throw new IllegalArgumentException(context.getString(R.string.title_rule_condition_missing));
 
                     if (TextUtils.isEmpty(order))
-                        order = "1";
+                        order = "10";
 
                     DB db = DB.getInstance(context);
                     if (id < 0) {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -395,6 +395,9 @@ static void processOperations(
                                     db.message().setMessageError(m.id, Helper.formatThrowable(ex));
                             }
 
+                            if (similar.size() > 0 && !(ex instanceof IllegalArgumentException))
+                                db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
+
                             db.setTransactionSuccessful();
                         } finally {
                             db.endTransaction();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -722,7 +722,7 @@ private static void onMove(Context context, JSONArray jargs, boolean copy, Entit
 
         // Fetch appended/copied when needed
         if (!TextUtils.isEmpty(message.msgid) &&
-                (!folder.synchronize || !istore.hasCapability("IDLE")))
+                (!target.synchronize || !istore.hasCapability("IDLE")))
             try {
                 itarget.open(READ_WRITE);
                 try {

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -173,6 +173,7 @@ else if (MOVE.equals(name)) {
                     long id = message.id;
                     Long identity = message.identity;
                     long uid = message.uid;
+                    int notifying = message.notifying;
                     boolean seen = message.seen;
                     boolean ui_seen = message.ui_seen;
                     Long ui_hide = message.ui_hide;
@@ -184,6 +185,7 @@ else if (MOVE.equals(name)) {
                     message.folder = target.id;
                     message.identity = null;
                     message.uid = null;
+                    message.notifying = 0;
                     if (autoread) {
                         message.seen = true;
                         message.ui_seen = true;
@@ -200,6 +202,7 @@ else if (MOVE.equals(name)) {
                     message.folder = source.id;
                     message.identity = identity;
                     message.uid = uid;
+                    message.notifying = notifying;
                     message.seen = seen;
                     message.ui_seen = ui_seen;
                     message.ui_hide = ui_hide;

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2475,7 +2475,7 @@ private static List<Notification> getNotificationUnseen(Context context, long gr
         boolean flags = prefs.getBoolean("flags", true);
         boolean notify_preview = prefs.getBoolean("notify_preview", true);
         boolean notify_trash = (prefs.getBoolean("notify_trash", true) || !pro);
-        boolean notify_junk = (prefs.getBoolean("notify_junk", true) && pro);
+        boolean notify_junk = (prefs.getBoolean("notify_junk", false) && pro);
         boolean notify_archive = (prefs.getBoolean("notify_archive", true) || !pro);
         boolean notify_reply = (prefs.getBoolean("notify_reply", false) && pro);
         boolean notify_reply_direct = (prefs.getBoolean("notify_reply_direct", false) && pro);

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -163,8 +163,9 @@ static String generateMessageId() {
     }
 
     boolean replySelf(List<TupleIdentityEx> identities) {
-        if (identities != null && from != null)
-            for (Address sender : from)
+        Address[] senders = (reply == null || reply.length == 0 ? from : reply);
+        if (identities != null && senders != null)
+            for (Address sender : senders)
                 for (TupleIdentityEx identity : identities)
                     if (identity.similarAddress(sender))
                         return true;

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -56,6 +56,7 @@
 import javax.mail.MessagingException;
 import javax.mail.UIDFolder;
 import javax.mail.internet.InternetAddress;
+import javax.mail.internet.MimeMessage;
 import javax.mail.search.AndTerm;
 import javax.mail.search.BodyTerm;
 import javax.mail.search.ComparisonTerm;
@@ -466,7 +467,7 @@ public Object doCommand(IMAPProtocol protocol) {
                         if (message == null) {
                             message = Core.synchronizeMessage(context,
                                     account, browsable,
-                                    state.ifolder, (IMAPMessage) isub[j],
+                                    state.ifolder, (MimeMessage) isub[j],
                                     true, true,
                                     rules, null);
                             found++;

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1967,7 +1967,8 @@ static EntityMessage synchronizeMessage(
                 Log.i(folder.name + " updated id=" + message.id + " uid=" + message.uid + " seen=" + seen);
             }
 
-            if ((!message.answered.equals(answered) || !message.ui_answered.equals(message.answered))) {
+            if ((!message.answered.equals(answered) || !message.ui_answered.equals(message.answered)) &&
+                    db.operation().getOperationCount(folder.id, message.id, EntityOperation.ANSWERED) == 0) {
                 update = true;
                 message.answered = answered;
                 message.ui_answered = answered;

File: app/src/main/java/eu/faircode/email/MailService.java
Patch:
@@ -85,7 +85,7 @@ private MailService() {
             properties.put("mail." + protocol + ".writetimeout", Integer.toString(WRITE_TIMEOUT)); // one thread overhead
             properties.put("mail." + protocol + ".timeout", Integer.toString(READ_TIMEOUT));
 
-            properties.put("mail." + protocol + ".rsetbeforequit", "true");
+            //properties.put("mail." + protocol + ".rsetbeforequit", "true");
 
         } else if ("imap".equals(protocol) || "imaps".equals(protocol)) {
             // https://javaee.github.io/javamail/docs/api/com/sun/mail/imap/package-summary.html#properties

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -300,7 +300,7 @@ public void onCreate(Bundle savedInstanceState) {
         primary = args.getLong("primary", -1);
         connected = args.getBoolean("connected", false);
 
-        if (folder > 0 && type == null)
+        if (folder > 0 && type == null && TextUtils.isEmpty(query))
             Log.e("Messages for folder without type");
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());

File: app/src/main/java/eu/faircode/email/MailService.java
Patch:
@@ -206,9 +206,9 @@ public String connect(String host, int port, int auth, String user, String passw
                         }
 
                     throw new IllegalArgumentException("Account not found");
-                } catch (Throwable ex1) {
+                } catch (Exception ex1) {
                     Log.e(ex1);
-                    throw ex;
+                    throw new AuthenticationFailedException(ex.getMessage(), ex1);
                 }
             else
                 throw ex;

File: app/src/main/java/eu/faircode/email/MailService.java
Patch:
@@ -199,13 +199,13 @@ public String connect(String host, int port, int auth, String user, String passw
                             am.invalidateAuthToken(type, password);
                             String token = am.blockingGetAuthToken(account, getAuthTokenType(type), true);
                             if (token == null)
-                                throw new IllegalArgumentException("no token");
+                                throw new IllegalArgumentException("No token on refresh");
 
                             _connect(context, host, port, user, token);
                             return token;
                         }
 
-                    throw new IllegalArgumentException("no account");
+                    throw new IllegalArgumentException("Account not found");
                 } catch (Throwable ex1) {
                     Log.e(ex1);
                     throw ex;

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -105,6 +105,8 @@ public static int w(String msg) {
     }
 
     public static int e(String msg) {
+        if (BuildConfig.BETA_RELEASE)
+            Bugsnag.notify(new Throwable(msg), Severity.ERROR);
         return android.util.Log.e(TAG, msg);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -128,8 +128,7 @@ public void onRefresh() {
             public void onClick(View view) {
                 PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(getContext(), getViewLifecycleOwner(), fab);
 
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_imap, 1, R.string.title_imap)
-                        .setEnabled(Helper.hasValidFingerprint(getContext()));
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_imap, 1, R.string.title_imap);
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_pop3, 2, R.string.title_pop3);
 
                 popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -588,7 +588,7 @@ private View getView(RecyclerView parent, int pos) {
         String sort = prefs.getString("sort", "time");
         boolean ascending = prefs.getBoolean(
                 viewType == AdapterMessage.ViewType.THREAD ? "ascending_thread" : "ascending_list", false);
-        boolean filter_duplicates = prefs.getBoolean("filter_duplicates", false);
+        boolean filter_duplicates = prefs.getBoolean("filter_duplicates", true);
 
         adapter = new AdapterMessage(this, type, viewType, compact, zoom, sort, ascending, filter_duplicates, iProperties);
         rvMessage.setAdapter(adapter);
@@ -2494,7 +2494,7 @@ public void onPrepareOptionsMenu(Menu menu) {
         boolean filter_seen = prefs.getBoolean("filter_seen", false);
         boolean filter_unflagged = prefs.getBoolean("filter_unflagged", false);
         boolean filter_snoozed = prefs.getBoolean("filter_snoozed", true);
-        boolean filter_duplicates = prefs.getBoolean("filter_duplicates", false);
+        boolean filter_duplicates = prefs.getBoolean("filter_duplicates", true);
         boolean compact = prefs.getBoolean("compact", false);
         boolean experiments = prefs.getBoolean("experiments", false);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2187,7 +2187,7 @@ protected void onExecuted(Bundle args, List<TupleIdentityEx> identities) {
 
                     View anchor = bnvActions.findViewById(R.id.action_reply);
                     PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, powner, anchor);
-                    popupMenu.inflate(R.menu.menu_reply);
+                    popupMenu.inflate(R.menu.popup_reply);
                     popupMenu.getMenu().findItem(R.id.menu_reply_to_all).setVisible(recipients.length > 0);
                     popupMenu.getMenu().findItem(R.id.menu_reply_list).setVisible(message.list_post != null);
                     popupMenu.getMenu().findItem(R.id.menu_reply_receipt).setVisible(message.receipt_to != null);
@@ -2399,7 +2399,7 @@ private void onActionMore(TupleMessageEx message) {
 
             View anchor = bnvActions.findViewById(R.id.action_more);
             PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, powner, anchor);
-            popupMenu.inflate(R.menu.menu_message);
+            popupMenu.inflate(R.menu.popup_message_more);
 
             popupMenu.getMenu().findItem(R.id.menu_editasnew).setEnabled(message.content);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1530,13 +1530,13 @@ private void swipeAsk(final @NonNull TupleMessageEx message, @NonNull RecyclerVi
             PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(getContext(), getViewLifecycleOwner(), vwAnchor);
 
             if (message.ui_seen)
-                popupMenu.getMenu().add(Menu.NONE, R.string.title_unseen, 2, R.string.title_unseen);
+                popupMenu.getMenu().add(Menu.NONE, R.string.title_unseen, 1, R.string.title_unseen);
             else
                 popupMenu.getMenu().add(Menu.NONE, R.string.title_seen, 1, R.string.title_seen);
 
-            popupMenu.getMenu().add(Menu.NONE, R.string.title_snooze, 3, R.string.title_snooze);
+            popupMenu.getMenu().add(Menu.NONE, R.string.title_snooze, 2, R.string.title_snooze);
             popupMenu.getMenu().add(Menu.NONE, R.string.title_flag_color, 3, R.string.title_flag_color);
-            popupMenu.getMenu().add(Menu.NONE, R.string.title_move, 3, R.string.title_move);
+            popupMenu.getMenu().add(Menu.NONE, R.string.title_move, 4, R.string.title_move);
 
             popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                 @Override

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -147,9 +147,9 @@ public void onChanged(@Nullable TupleAccountStats stats) {
             }
         });
 
-        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
 
-        db.message().liveUnseen().observe(this, new Observer<TupleMessageStats>() {
+        db.message().liveUnseenWidget().observe(this, new Observer<TupleMessageStats>() {
             private Integer lastUnseen = null;
 
             @Override

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -248,7 +248,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedFolder(
             " WHERE message.id = :id")
     LiveData<TupleMessageEx> liveMessage(long id);
 
-    @Query("SELECT COUNT(message.id) AS unseen, SUM(message.ui_ignored) AS ignored" +
+    @Query("SELECT COUNT(message.id) AS unseen, SUM(ABS(notifying)) AS notifying" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/TupleMessageStats.java
Patch:
@@ -25,8 +25,8 @@
 import java.util.Objects;
 
 public class TupleMessageStats {
-    public Integer unseen;
-    public Integer ignored;
+    public Integer unseen = 0;
+    public Integer ignored = 0;
 
     @Override
     public boolean equals(@Nullable Object obj) {

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -523,7 +523,7 @@ private static SRVRecord lookup(Context context, String name) throws TextParseEx
                     lookup.getResult() == Lookup.TYPE_NOT_FOUND)
                 throw new UnknownHostException(name);
             else
-                throw new IllegalArgumentException(lookup.getErrorString());
+                throw new UnknownHostException(lookup.getErrorString());
 
         if (records.length == 0)
             throw new UnknownHostException(name);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -418,7 +418,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.powner.recreate();
     }
 }

File: app/src/main/java/eu/faircode/email/AdapterAnswer.java
Patch:
@@ -307,7 +307,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.powner.recreate();
     }
 }

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -421,7 +421,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.powner.recreate();
     }
 }

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -350,7 +350,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.powner.recreate();
     }
 }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3570,7 +3570,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.cowner.stop();
         holder.powner.recreate();
     }

File: app/src/main/java/eu/faircode/email/AdapterRule.java
Patch:
@@ -428,7 +428,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
     }
 
     @Override
-    public void onViewRecycled(@NonNull ViewHolder holder) {
+    public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {
         holder.powner.recreate();
     }
 }

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -340,7 +340,7 @@ static String sanitize(Context context, String html, boolean show_images) {
             public void head(Node node, int depth) {
                 if (links < MAX_AUTO_LINK && node instanceof TextNode) {
                     TextNode tnode = (TextNode) node;
-                    String text = tnode.text();
+                    String text = tnode.getWholeText();
 
                     Matcher matcher = pattern.matcher(text);
                     if (matcher.find()) {

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -236,7 +236,6 @@ private void onPurchase(Intent intent) {
                 view.setData(Uri.parse(BuildConfig.PRO_FEATURES_URI + "?challenge=" + getChallenge(this)));
                 Helper.view(this, view);
             } catch (NoSuchAlgorithmException ex) {
-                Log.e(ex);
                 Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
     }

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -378,7 +378,6 @@ private void onMenuExport() {
             try {
                 askPassword(true);
             } catch (Throwable ex) {
-                Log.e(ex);
                 Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
         } else
@@ -389,7 +388,6 @@ private void onMenuImport() {
         try {
             askPassword(false);
         } catch (Throwable ex) {
-            Log.e(ex);
             Helper.unexpectedError(getSupportFragmentManager(), ex);
         }
     }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2737,7 +2737,6 @@ private void onOpenLink(final Uri uri, String title) {
                     else
                         ToastEx.makeText(context, R.string.title_pro_invalid, Toast.LENGTH_LONG).show();
                 } catch (NoSuchAlgorithmException ex) {
-                    Log.e(ex);
                     Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             } else {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4107,7 +4107,6 @@ protected void onExecuted(Bundle args, PendingIntent pi) {
                                 REQUEST_DECRYPT,
                                 null, 0, 0, 0, null);
                     } catch (IntentSender.SendIntentException ex) {
-                        Log.e(ex);
                         Helper.unexpectedError(getFragmentManager(), ex);
                     }
             }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -529,10 +529,8 @@ public void run(AccountManagerFuture<Bundle> future) {
                                         Log.w(ex);
                                         if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.STARTED))
                                             Snackbar.make(view, Helper.formatThrowable(ex), Snackbar.LENGTH_LONG).show();
-                                    } else {
-                                        Log.e(ex);
+                                    } else
                                         Helper.unexpectedError(getFragmentManager(), ex);
-                                    }
                                 }
                             }
                         },

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -465,7 +465,9 @@ static String formatThrowable(Throwable ex, String separator, boolean sanitize)
         return sb.toString();
     }
 
-    static void unexpectedError(FragmentManager manager, final Throwable ex) {
+    static void unexpectedError(FragmentManager manager, Throwable ex) {
+        Log.e(ex);
+
         Bundle args = new Bundle();
         args.putSerializable("ex", ex);
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -53,6 +53,7 @@
 import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.ImageView;
+import android.widget.RadioButton;
 import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -292,9 +293,10 @@ static void setViewsEnabled(ViewGroup view, boolean enabled) {
                     child instanceof EditText ||
                     child instanceof CheckBox ||
                     child instanceof ImageView /* =ImageButton */ ||
+                    child instanceof RadioButton ||
                     (child instanceof Button && "disable".equals(child.getTag())))
                 child.setEnabled(enabled);
-            if (child instanceof BottomNavigationView) {
+            else if (child instanceof BottomNavigationView) {
                 Menu menu = ((BottomNavigationView) child).getMenu();
                 menu.setGroupEnabled(0, enabled);
             } else if (child instanceof ViewGroup)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -169,13 +169,13 @@ public void onChanged(Integer count) {
                     if (tag != null && tag.startsWith("unseen.")) {
                         String[] p = tag.split(("\\."));
                         long group = Long.parseLong(p[1]);
-                        long id = Long.parseLong(p[2]);
+                        long id = sbn.getNotification().extras.getLong("id", 0);
 
                         if (!groupNotifying.containsKey(group))
                             groupNotifying.put(group, new ArrayList<>());
 
                         if (id > 0) {
-                            Log.i("Notify restore " + tag);
+                            Log.i("Notify restore " + tag + " id=" + id);
                             groupNotifying.get(group).add(id);
                         }
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2909,7 +2909,8 @@ private void loadMessagesNext(final boolean top) {
         public void onLoading() {
             loading = true;
             pbWait.setVisibility(View.VISIBLE);
-            tvNoEmail.setVisibility(View.GONE);
+            if (viewType == AdapterMessage.ViewType.SEARCH)
+                tvNoEmail.setVisibility(View.GONE);
         }
 
         @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1208,7 +1208,7 @@ public void setValue(String name, long id, boolean enabled) {
             if ("expanded".equals(name)) {
                 // Collapse other messages
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                boolean expand_one = prefs.getBoolean("expand_one", false);
+                boolean expand_one = prefs.getBoolean("expand_one", true);
                 if (expand_one) {
                     for (Long other : new ArrayList<>(values.get(name)))
                         if (!other.equals(id)) {

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -262,7 +262,7 @@ private void setOptions() {
         swDoubleTap.setChecked(prefs.getBoolean("doubletap", false));
         swExpandRead.setChecked(prefs.getBoolean("expand_read", true));
         swAutoExpand.setChecked(prefs.getBoolean("autoexpand", true));
-        swExpandOne.setChecked(prefs.getBoolean("expand_one", false));
+        swExpandOne.setChecked(prefs.getBoolean("expand_one", true));
         swAutoClose.setChecked(prefs.getBoolean("autoclose", true));
 
         String onClose = prefs.getString("onclose", "");

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -166,7 +166,7 @@ static void setupBugsnag(Context context) {
 
         config.setAutoCaptureSessions(false);
 
-        config.setDetectAnrs(true);
+        config.setDetectAnrs(false);
         config.setDetectNdkCrashes(false);
 
         List<String> ignore = new ArrayList<>();

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -280,6 +280,9 @@ public boolean run(@NonNull Error error) {
                 error.addToTab("extra", "installer", installer == null ? "-" : installer);
                 error.addToTab("extra", "fingerprint", fingerprint);
                 error.addToTab("extra", "free", Log.getFreeMemMb());
+
+                String theme = prefs.getString("theme", "light");
+                error.addToTab("extra", "theme", theme);
                 return true;
             }
         });

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -4127,7 +4127,7 @@ protected Void onExecute(Context context, Bundle args) {
                                 protected void onException(Bundle args, Throwable ex) {
                                     Helper.unexpectedError(getFragmentManager(), ex);
                                 }
-                            }.execute(FragmentKeywordManage.this, args, "message:keywords:manage");
+                            }.execute(getContext(), getActivity(), args, "message:keywords:manage");
                         }
                     })
                     .setNeutralButton(R.string.title_add, new DialogInterface.OnClickListener() {
@@ -4191,7 +4191,7 @@ protected Void onExecute(Context context, Bundle args) {
                                     protected void onException(Bundle args, Throwable ex) {
                                         Helper.unexpectedError(getFragmentManager(), ex);
                                     }
-                                }.execute(FragmentKeywordAdd.this, args, "message:keyword:add");
+                                }.execute(getContext(), getActivity(), args, "message:keyword:add");
                             }
                         }
                     })

File: app/src/main/java/eu/faircode/email/FragmentContacts.java
Patch:
@@ -193,7 +193,7 @@ protected Void onExecute(Context context, Bundle args) {
                                 protected void onException(Bundle args, Throwable ex) {
                                     Helper.unexpectedError(getFragmentManager(), ex);
                                 }
-                            }.execute(FragmentDelete.this, new Bundle(), "contacts:delete");
+                            }.execute(getContext(), getActivity(), new Bundle(), "contacts:delete");
                         }
                     })
                     .setNegativeButton(android.R.string.cancel, null)

File: app/src/main/java/eu/faircode/email/FragmentOperations.java
Patch:
@@ -154,7 +154,7 @@ protected Void onExecute(Context context, Bundle args) {
                                 protected void onException(Bundle args, Throwable ex) {
                                     Helper.unexpectedError(getFragmentManager(), ex);
                                 }
-                            }.execute(DialogDelete.this, new Bundle(), "operations:delete");
+                            }.execute(getContext(), getActivity(), new Bundle(), "operations:delete");
                         }
                     })
                     .setNegativeButton(android.R.string.cancel, null)

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -507,7 +507,7 @@ protected void onException(Bundle args, Throwable ex) {
                                     else
                                         ToastEx.makeText(context, ex.toString(), Toast.LENGTH_LONG).show();
                                 }
-                            }.execute(FragmentDialogUnexpected.this, new Bundle(), "error:unexpected");
+                            }.execute(getContext(), getActivity(), new Bundle(), "error:unexpected");
                         }
                     })
                     .create();

File: app/src/main/java/eu/faircode/email/FragmentDialogEx.java
Patch:
@@ -82,7 +82,6 @@ public void onActivityResult(int requestCode, int resultCode, @Nullable Intent d
                 " request=" + requestCode + " result=" + resultCode);
         Log.logExtras(data);
         super.onActivityResult(requestCode, resultCode, data);
-
     }
 
     @NonNull

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -710,9 +710,9 @@ else if ("pre".equals(name))
             public void tail(Node node, int depth) {
                 String name = node.nodeName();
                 if ("a".equals(name))
-                    append("[" + node.absUrl("href") + "] ");
+                    append("[" + node.attr("href") + "] ");
                 else if ("img".equals(name))
-                    append("[" + node.absUrl("src") + "] ");
+                    append("[" + node.attr("src") + "] ");
                 else if ("th".equals(name) || "td".equals(name)) {
                     Node next = node.nextSibling();
                     if (next == null || !("th".equals(next.nodeName()) || "td".equals(next.nodeName())))

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -245,7 +245,8 @@ boolean execute(Context context, EntityMessage message) throws JSONException, IO
 
     private boolean onActionSeen(Context context, EntityMessage message, boolean seen) {
         EntityOperation.queue(context, message, EntityOperation.SEEN, seen);
-        message.seen = seen;
+        message.ui_seen = seen;
+        message.ui_ignored = true;
         return true;
     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1775,7 +1775,7 @@ protected void onException(Bundle args, Throwable ex) {
         }
 
         private void onHelp(TupleMessageEx message) {
-            Helper.viewFAQ(context, 22);
+            Helper.viewFAQ(context, 130);
         }
 
         private void onSearchContact(TupleMessageEx message) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1156,7 +1156,7 @@ protected void onException(Bundle args, Throwable ex) {
         private void bindAttachments(final TupleMessageEx message, @Nullable List<EntityAttachment> attachments) {
             if (attachments == null)
                 attachments = new ArrayList<>();
-            properties.setAttchments(message.id, attachments);
+            properties.setAttachments(message.id, attachments);
 
             boolean show_inline = properties.getValue("inline", message.id);
             Log.i("Show inline=" + show_inline);
@@ -3540,7 +3540,7 @@ interface IProperties {
 
         Spanned getBody(long id);
 
-        void setAttchments(long id, List<EntityAttachment> attachments);
+        void setAttachments(long id, List<EntityAttachment> attachments);
 
         List<EntityAttachment> getAttachments(long id);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1204,7 +1204,7 @@ public Spanned getBody(long id) {
         }
 
         @Override
-        public void setAttchments(long id, List<EntityAttachment> list) {
+        public void setAttachments(long id, List<EntityAttachment> list) {
             attachments.put(id, list);
         }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -1017,6 +1017,8 @@ MessageParts getMessageParts() throws IOException, FolderClosedException {
 
     private void getMessageParts(Part part, MessageParts parts, boolean pgp) throws IOException, FolderClosedException {
         try {
+            if (BuildConfig.DEBUG)
+                Log.i("Part class=" + part.getClass() + " type=" + part.getContentType());
             if (part.isMimeType("multipart/*")) {
                 Multipart multipart;
                 Object content = part.getContent();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -899,8 +899,7 @@ void downloadAttachment(Context context, EntityAttachment local) throws IOExcept
             if (index < 0)
                 for (int i = 0; i < remotes.size(); i++) {
                     EntityAttachment remote = remotes.get(i);
-                    if (remote.name == null && remote.cid == null &&
-                            Objects.equals(remote.type, local.type) &&
+                    if (Objects.equals(remote.type, local.type) &&
                             Objects.equals(remote.size, local.size)) {
                         index = i;
                         break;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3010,7 +3010,7 @@ Long getKey() {
 
         this.date = prefs.getBoolean("date", true);
         this.threading = prefs.getBoolean("threading", true);
-        this.name_email = prefs.getBoolean("name_email", !compact);
+        this.name_email = prefs.getBoolean("name_email", false);
         this.subject_top = prefs.getBoolean("subject_top", false);
         this.subject_italic = prefs.getBoolean("subject_italic", true);
         this.flags = prefs.getBoolean("flags", true);
@@ -3064,9 +3064,7 @@ PagedList<TupleMessageEx> getCurrentList() {
 
     void setCompact(boolean compact) {
         if (this.compact != compact) {
-            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             this.compact = compact;
-            this.name_email = prefs.getBoolean("name_email", !compact);
             notifyDataSetChanged();
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -359,8 +359,6 @@ private void onMenuDefault() {
     private void setOptions() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
-        boolean compact = prefs.getBoolean("compact", false);
-
         String startup = prefs.getString("startup", "unified");
         String[] startupValues = getResources().getStringArray(R.array.startupValues);
         for (int pos = 0; pos < startupValues.length; pos++)
@@ -378,7 +376,7 @@ private void setOptions() {
         swIdenticons.setChecked(prefs.getBoolean("identicons", false));
         swIdenticons.setEnabled(swGeneratedIcons.isChecked());
         swCircular.setChecked(prefs.getBoolean("circular", true));
-        swNameEmail.setChecked(prefs.getBoolean("name_email", !compact));
+        swNameEmail.setChecked(prefs.getBoolean("name_email", false));
         swSubjectTop.setChecked(prefs.getBoolean("subject_top", false));
         swSubjectItalic.setChecked(prefs.getBoolean("subject_italic", true));
         swFlags.setChecked(prefs.getBoolean("flags", true));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2403,7 +2403,7 @@ protected SpannableStringBuilder onExecute(final Context context, final Bundle a
                 Document document = Jsoup.parse(body);
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean inline = prefs.getBoolean("inline_images", true);
+                boolean inline = prefs.getBoolean("inline_images", false);
 
                 boolean has_images = false;
                 for (Element img : document.select("img")) {
@@ -3743,7 +3743,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final ContentLoadingProgressBar pbWait = dview.findViewById(R.id.pbWait);
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-            boolean inline = prefs.getBoolean("inline_images", true);
+            boolean inline = prefs.getBoolean("inline_images", false);
             boolean autocontent = prefs.getBoolean("autocontent", false);
 
             setupWebView(webView);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3098,7 +3098,7 @@ protected Void onExecute(Context context, Bundle args) {
                 long id = args.getLong("id");
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean inline_images = prefs.getBoolean("inline_images", true);
+                boolean inline_images = prefs.getBoolean("inline_images", false);
 
                 DB db = DB.getInstance(context);
                 try {

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -389,7 +389,7 @@ private void setOptions() {
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swContrast.setChecked(prefs.getBoolean("contrast", false));
         swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
-        swImagesInline.setChecked(prefs.getBoolean("inline_images", true));
+        swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
         swImagesContacts.setChecked(prefs.getBoolean("contact_images", true));
         swImagesAll.setChecked(prefs.getBoolean("all_images", false));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -357,7 +357,7 @@ static Drawable decodeImage(final Context context, final long id, String source,
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean compact = prefs.getBoolean("compact", false);
         int zoom = prefs.getInt("zoom", compact ? 0 : 1);
-        boolean inline = prefs.getBoolean("inline_images", true);
+        boolean inline = prefs.getBoolean("inline_images", false);
 
         final int px = Helper.dp2pixels(context, (zoom + 1) * 24);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2403,7 +2403,7 @@ protected SpannableStringBuilder onExecute(final Context context, final Bundle a
                 Document document = Jsoup.parse(body);
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean inline = prefs.getBoolean("inline_images", false);
+                boolean inline = prefs.getBoolean("inline_images", true);
 
                 boolean has_images = false;
                 for (Element img : document.select("img")) {
@@ -3743,7 +3743,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final ContentLoadingProgressBar pbWait = dview.findViewById(R.id.pbWait);
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-            boolean inline = prefs.getBoolean("inline_images", false);
+            boolean inline = prefs.getBoolean("inline_images", true);
             boolean autocontent = prefs.getBoolean("autocontent", false);
 
             setupWebView(webView);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3098,7 +3098,7 @@ protected Void onExecute(Context context, Bundle args) {
                 long id = args.getLong("id");
 
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-                boolean inline_images = prefs.getBoolean("inline_images", false);
+                boolean inline_images = prefs.getBoolean("inline_images", true);
 
                 DB db = DB.getInstance(context);
                 try {

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -389,7 +389,7 @@ private void setOptions() {
         swAttachmentsAlt.setChecked(prefs.getBoolean("attachments_alt", false));
         swContrast.setChecked(prefs.getBoolean("contrast", false));
         swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
-        swImagesInline.setChecked(prefs.getBoolean("inline_images", false));
+        swImagesInline.setChecked(prefs.getBoolean("inline_images", true));
         swImagesContacts.setChecked(prefs.getBoolean("contact_images", true));
         swImagesAll.setChecked(prefs.getBoolean("all_images", false));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -357,7 +357,7 @@ static Drawable decodeImage(final Context context, final long id, String source,
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean compact = prefs.getBoolean("compact", false);
         int zoom = prefs.getInt("zoom", compact ? 0 : 1);
-        boolean inline = prefs.getBoolean("inline_images", false);
+        boolean inline = prefs.getBoolean("inline_images", true);
 
         final int px = Helper.dp2pixels(context, (zoom + 1) * 24);
 

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -195,6 +195,8 @@ private void onReplyDirect(long id, Intent intent) throws IOException {
 
         Bundle results = RemoteInput.getResultsFromIntent(intent);
         String text = results.getString("text");
+        if (text != null)
+            text = "<p>" + text.replaceAll("\\r?\\n", "<br>") + "</p>";
 
         DB db = DB.getInstance(this);
         try {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -870,7 +870,7 @@ public void onClick(View v) {
                         ? View.VISIBLE : View.GONE);
         bottom_navigation.getMenu().findItem(R.id.action_prev).setEnabled(false);
         bottom_navigation.getMenu().findItem(R.id.action_next).setEnabled(false);
-        bottom_navigation.setVisibility(actionbar ? View.INVISIBLE : View.GONE);
+        bottom_navigation.setVisibility(actionbar && viewType == AdapterMessage.ViewType.THREAD ? View.INVISIBLE : View.GONE);
         grpReady.setVisibility(View.GONE);
         pbWait.setVisibility(View.VISIBLE);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -615,6 +615,8 @@ static String getPreview(String body) {
     static String getText(String html) {
         final StringBuilder sb = new StringBuilder();
 
+        html = html.replace("<br> ", "<br>");
+
         NodeTraversor.traverse(new NodeVisitor() {
             private int qlevel = 0;
             private int tlevel = 0;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -599,7 +599,7 @@ protected EntityMessage onExecute(Context context, Bundle args) throws Throwable
 
                 String ref = Helper.readText(refFile);
                 String plain = HtmlHelper.getText(ref);
-                String html = "<p>" + plain.replaceAll("\\r?\\n", "<br />" + "</p>");
+                String html = "<p>" + plain.replaceAll("\\r?\\n", "<br />") + "</p>";
 
                 try (BufferedWriter out = new BufferedWriter(new FileWriter(file))) {
                     out.write(body);

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -136,6 +136,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
             @Override
             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                 cbPoll.setEnabled(isChecked);
+                cbDownload.setEnabled(isChecked);
             }
         });
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2423,7 +2423,6 @@ private void handleFileShare() {
             @Override
             public void onClick(View v) {
                 Helper.viewFAQ(getContext(), 49);
-                finish();
             }
         });
         sb.show();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1487,6 +1487,8 @@ else if (viewType == ViewType.THREAD) {
                     // selectableItemBackground
                     card.setClickable(true);
                     card.setPressed(true);
+                    card.setPressed(false);
+                    card.setClickable(false);
                 }
 
                 if (EntityFolder.DRAFTS.equals(message.folderType) && message.visible == 1)

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -118,7 +118,7 @@ public class Helper {
     static final String SUPPORT_URI = "https://contact.faircode.eu/?product=fairemailsupport";
     static final String PGP_URI = "https://f-droid.org/en/packages/org.sufficientlysecure.keychain/";
     static final String PLAY_APPS_URI = "https://play.google.com/store/apps/dev?id=8420080860664580239";
-    static final String XDA_APPS_URI = "https://forum.xda-developers.com/search.php?searchid=457176824";
+    static final String XDA_APPS_URI = "https://forum.xda-developers.com/search.php?do=finduser&u=2799345&starteronly=1";
 
     static ThreadFactory backgroundThreadFactory = new ThreadFactory() {
         private final AtomicInteger threadId = new AtomicInteger();

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -97,8 +97,7 @@ public abstract class DB extends RoomDatabase {
     public abstract DaoLog log();
 
     private static DB sInstance;
-    private static final ExecutorService executor = Executors.newFixedThreadPool(
-            Runtime.getRuntime().availableProcessors(), Helper.backgroundThreadFactory);
+    private static final ExecutorService executor = Executors.newSingleThreadExecutor(Helper.backgroundThreadFactory);
 
     private static final String DB_NAME = "fairemail";
     private static final long VACUUM_INTERVAL = 24 * 3600 * 1000L;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -480,7 +480,7 @@ private void ensureExpanded() {
         Rect getItemRect() {
             return new Rect(
                     super.itemView.getLeft(),
-                    super.itemView.getBottom() - vwColor.getHeight(),
+                    super.itemView.getTop(),
                     super.itemView.getRight(),
                     super.itemView.getBottom());
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -964,7 +964,8 @@ private void bindExpanded(final TupleMessageEx message) {
                     if (message.to != null) {
                         String v = MessageHelper.canonicalAddress(via.getAddress());
                         for (Address t : message.to) {
-                            if (v.equals(MessageHelper.canonicalAddress(((InternetAddress) t).getAddress()))) {
+                            if (EntityFolder.isOutgoing(message.folderType) ||
+                                    v.equals(MessageHelper.canonicalAddress(((InternetAddress) t).getAddress()))) {
                                 self = true;
                                 break;
                             }

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -142,7 +142,7 @@ public void run() {
                 start.execute(this, new Bundle(), "main:accounts");
         } else {
             // Enable compact view on small screens
-            if (!getResources().getConfiguration().isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL))
+            if (!getResources().getConfiguration().isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_LARGE))
                 prefs.edit().putBoolean("compact", true).apply();
 
             setTheme(R.style.AppThemeLight);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -769,7 +769,7 @@ public boolean onMenuItemClick(MenuItem target) {
                                         return false;
 
                                     Bundle args = new Bundle();
-                                    args.putString("title", getString(R.string.title_move_to_folder));
+                                    args.putString("title", getString(R.string.title_search_in));
                                     args.putLong("account", intent.getLongExtra("account", -1));
                                     args.putLongArray("disabled", new long[]{});
                                     args.putString("query", query);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSend.java
Patch:
@@ -195,7 +195,7 @@ private void setOptions() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
         swKeyboard.setChecked(prefs.getBoolean("keyboard", true));
-        swPrefixOnce.setChecked(prefs.getBoolean("prefix_once", false));
+        swPrefixOnce.setChecked(prefs.getBoolean("prefix_once", true));
         swPlainOnly.setChecked(prefs.getBoolean("plain_only", false));
 
         swAutoResize.setChecked(prefs.getBoolean("autoresize", true));

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -787,6 +787,7 @@ public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_send_after).setVisible(state == State.LOADED);
 
         menu.findItem(R.id.menu_zoom).setEnabled(!busy);
+        menu.findItem(R.id.menu_media_toolbar).setEnabled(!busy);
         menu.findItem(R.id.menu_clear).setEnabled(!busy);
         menu.findItem(R.id.menu_contact_group).setEnabled(!busy && hasPermission(Manifest.permission.READ_CONTACTS));
         menu.findItem(R.id.menu_answer).setEnabled(!busy);
@@ -795,7 +796,6 @@ public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_send_after).setEnabled(!busy);
 
         menu.findItem(R.id.menu_media_toolbar).setChecked(style);
-
         menu.findItem(R.id.menu_plain_only).setChecked(plain_only);
         menu.findItem(R.id.menu_encrypt).setChecked(encrypt);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1369,7 +1369,7 @@ protected File onExecute(Context context, Bundle args) throws Throwable {
                             response.setMethod(Method.REPLY);
                             response.addEvent(ev);
 
-                            File ics = File.createTempFile(Long.toString(attachment.id), ".ics", context.getCacheDir());
+                            File ics = File.createTempFile("calendar", ".ics", context.getCacheDir());
                             response.write(ics);
 
                             return ics;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1913,7 +1913,7 @@ private static void resizeAttachment(Context context, EntityAttachment attachmen
                         resized = rotated;
                     }
 
-                    File tmp = File.createTempFile(Long.toString(attachment.id), ".resized", context.getCacheDir());
+                    File tmp = File.createTempFile("image", ".resized", context.getCacheDir());
                     try (OutputStream out = new FileOutputStream(tmp)) {
                         resized.compress("image/jpeg".equals(attachment.type)
                                         ? Bitmap.CompressFormat.JPEG

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -84,7 +84,7 @@ protected void onPostExecute(Bundle args) {
             }
 
             @Override
-            protected List<TupleFolderEx> onExecute(Context context, Bundle args) throws Throwable {
+            protected List<TupleFolderEx> onExecute(Context context, Bundle args) {
                 long account = args.getLong("account");
 
                 DB db = DB.getInstance(context);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2307,7 +2307,7 @@ private void checkReporting() {
             @Override
             public void onClick(View v) {
                 snackbar.dismiss();
-                new FragmentDialogReporting().show(getFragmentManager(), "first");
+                new FragmentDialogReporting().show(getFragmentManager(), "reporting");
             }
         });
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -266,6 +266,7 @@ DataSource.Factory<Integer, TupleMessageEx> pagedFolder(
 
     String widget = "SELECT message.*, account.name AS accountName" +
             ", SUM(1 - message.ui_seen) AS unseen" +
+            ", COUNT(message.id) - SUM(message.ui_flagged) AS unflagged" +
             ", MAX(message.received) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -202,6 +202,7 @@ public void onChanged(List<TupleMessageWidget> messages) {
                                 !m1.received.equals(m2.received) ||
                                 !Objects.equals(m1.subject, m2.subject) ||
                                 !(m1.unseen == m2.unseen) ||
+                                !(m1.unflagged == m2.unflagged) ||
                                 !Objects.equals(m1.accountName, m2.accountName)) {
                             changed = true;
                             break;

File: app/src/main/java/eu/faircode/email/TupleMessageWidget.java
Patch:
@@ -24,14 +24,16 @@
 public class TupleMessageWidget extends EntityMessage {
     public String accountName;
     public int unseen;
+    public int unflagged;
 
     @Override
     public boolean equals(Object obj) {
         if (obj instanceof TupleMessageEx) {
             TupleMessageEx other = (TupleMessageEx) obj;
             return (super.equals(obj) &&
                     Objects.equals(this.accountName, other.accountName) &&
-                    this.unseen == other.unseen);
+                    this.unseen == other.unseen &&
+                    this.unflagged == other.unflagged);
         }
         return false;
     }

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -114,6 +114,8 @@ static File getFile(Context context, long id, String name) {
         String filename = Long.toString(id);
         if (!TextUtils.isEmpty(name))
             filename += "." + Helper.sanitizeFilename(name);
+        if (filename.length() > 255)
+            filename = filename.substring(0, 255);
         return new File(dir, filename);
     }
 

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -178,7 +178,8 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityAccount fromJSON(JSONObject json) throws JSONException {
         EntityAccount account = new EntityAccount();
-        // id
+        if (json.has("id"))
+            account.id = json.getLong("id");
 
         if (json.has("order"))
             account.order = json.getInt("order");

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -282,7 +282,7 @@ private int load_server() throws MessagingException, IOException {
 
                 Log.i("Boundary server connecting account=" + account.name);
                 istore = (IMAPStore) isession.getStore(protocol);
-                ConnectionHelper.connect(context, isession, istore, account);
+                ConnectionHelper.connect(context, istore, account);
 
                 Log.i("Boundary server opening folder=" + browsable.name);
                 ifolder = (IMAPFolder) istore.getFolder(browsable.name);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -536,7 +536,7 @@ protected CheckResult onExecute(Context context, Bundle args) throws Throwable {
                 Session isession = Session.getInstance(props, null);
                 isession.setDebug(true);
                 try (IMAPStore istore = (IMAPStore) isession.getStore("imap" + (starttls ? "" : "s"))) {
-                    ConnectionHelper.connect(context, isession, istore, host, Integer.parseInt(port), user, password);
+                    ConnectionHelper.connect(context, istore, host, Integer.parseInt(port), user, password);
 
                     result.idle = istore.hasCapability("IDLE");
 
@@ -893,7 +893,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     isession.setDebug(true);
 
                     try (IMAPStore istore = (IMAPStore) isession.getStore("imap" + (starttls ? "" : "s"))) {
-                        ConnectionHelper.connect(context, isession, istore, host, Integer.parseInt(port), user, password);
+                        ConnectionHelper.connect(context, istore, host, Integer.parseInt(port), user, password);
 
                         for (Folder ifolder : istore.getDefaultFolder().list("*")) {
                             // Check folder attributes

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -63,6 +63,7 @@
 
 import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.textfield.TextInputLayout;
+import com.sun.mail.smtp.SMTPTransport;
 
 import java.net.Inet4Address;
 import java.net.Inet6Address;
@@ -74,7 +75,6 @@
 import java.util.Properties;
 
 import javax.mail.Session;
-import javax.mail.Transport;
 
 import static android.app.Activity.RESULT_OK;
 import static com.google.android.material.textfield.TextInputLayout.END_ICON_NONE;
@@ -702,8 +702,8 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                     isession.setDebug(true);
 
                     // Create transport
-                    try (Transport itransport = isession.getTransport(protocol)) {
-                        ConnectionHelper.connect(context, isession, itransport, host, Integer.parseInt(port), user, password);
+                    try (SMTPTransport itransport = (SMTPTransport) isession.getTransport(protocol)) {
+                        ConnectionHelper.connect(context, itransport, host, Integer.parseInt(port), user, password);
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -737,7 +737,7 @@ public void closed(ConnectionEvent e) {
                     db.account().setAccountState(account.id, "connecting");
 
                     try {
-                        ConnectionHelper.connect(this, isession, istore, account);
+                        ConnectionHelper.connect(this, istore, account);
                     } catch (Throwable ex) {
                         if (ex instanceof AuthenticationFailedException) {
                             NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3069,7 +3069,7 @@ else if (onclose != null) {
                 finish();
             else {
                 Log.i("Navigating to id=" + closeId);
-                navigate(closeId, false);
+                navigate(closeId, "previous".equals(onclose));
             }
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -141,6 +141,7 @@
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Properties;
 
 import javax.mail.Session;
@@ -1760,7 +1761,7 @@ protected Void onExecute(Context context, Bundle args) {
                             List<EntityMessage> messages = db.message().getMessagesByThread(
                                     message.account, message.thread, threading ? null : id, null);
                             for (EntityMessage threaded : messages)
-                                if (threaded.ui_flagged != flagged)
+                                if (threaded.ui_flagged != flagged || !Objects.equals(threaded.color, color))
                                     EntityOperation.queue(context, threaded, EntityOperation.FLAG, flagged, color);
                         }
                     }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -988,7 +988,7 @@ private static void onSynchronizeMessages(
             // Check uid validity
             try {
                 long uidv = ifolder.getUIDValidity();
-                if (folder.uidv != null && folder.uidv.equals(uidv)) {
+                if (folder.uidv != null && !folder.uidv.equals(uidv)) {
                     Log.w(folder.name + " uid validity changed from " + folder.uidv + " to " + uidv);
                     db.message().deleteLocalMessages(folder.id);
                 }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -970,7 +970,7 @@ private static void onSynchronizeMessages(
 
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             boolean sync_unseen = prefs.getBoolean("sync_unseen", false);
-            boolean sync_flagged = prefs.getBoolean("sync_flagged", true);
+            boolean sync_flagged = prefs.getBoolean("sync_flagged", false);
             boolean sync_kept = prefs.getBoolean("sync_kept", true);
             boolean delete_unseen = prefs.getBoolean("delete_unseen", false);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -273,7 +273,7 @@ private void setOptions() {
         tvScheduleEnd.setText(formatHour(getContext(), prefs.getInt("schedule_end", 0)));
 
         swUnseen.setChecked(prefs.getBoolean("sync_unseen", false));
-        swFlagged.setChecked(prefs.getBoolean("sync_flagged", true));
+        swFlagged.setChecked(prefs.getBoolean("sync_flagged", false));
         swDeleteUnseen.setChecked(prefs.getBoolean("delete_unseen", false));
         swSyncKept.setChecked(prefs.getBoolean("sync_kept", true));
         swSyncFolders.setChecked(prefs.getBoolean("sync_folders", true));

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -361,6 +361,9 @@ protected Boolean onExecute(Context context, Bundle args) {
 
                 boolean should = args.getBoolean("should");
 
+                if (TextUtils.isEmpty(display))
+                    display = null;
+
                 int sync_days = (TextUtils.isEmpty(sync) ? EntityFolder.DEFAULT_SYNC : Integer.parseInt(sync));
                 int keep_days = (TextUtils.isEmpty(keep) ? EntityFolder.DEFAULT_KEEP : Integer.parseInt(keep));
                 if (keep_days < sync_days)

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -158,6 +158,7 @@ private void setupBugsnag() {
         config.setAutoCaptureSessions(false);
 
         config.setDetectAnrs(false);
+        config.setDetectNdkCrashes(false);
 
         List<String> ignore = new ArrayList<>();
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -255,6 +255,8 @@ static Intent getIntentIssue(Context context) {
         if (BuildConfig.BETA_RELEASE) {
             String version = BuildConfig.VERSION_NAME + "/" +
                     (Helper.hasValidFingerprint(context) ? "1" : "3") +
+                    (BuildConfig.PLAY_STORE_RELEASE ? "p" : "") +
+                    (BuildConfig.DEBUG ? "d" : "") +
                     (Helper.isPro(context) ? "+" : "");
             Intent intent = new Intent(Intent.ACTION_SEND);
             intent.setPackage(BuildConfig.APPLICATION_ID);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -657,7 +657,7 @@ private void bindTo(final TupleMessageEx message) {
             ivType.setImageResource(message.drafts > 0
                     ? R.drawable.baseline_edit_24 : EntityFolder.getIcon(message.folderType));
             ivType.setVisibility(message.drafts > 0 ||
-                    (viewType == ViewType.UNIFIED && !EntityFolder.INBOX.equals(message.folderType)) ||
+                    (viewType == ViewType.UNIFIED && type == null && !EntityFolder.INBOX.equals(message.folderType)) ||
                     (viewType == ViewType.THREAD && EntityFolder.SENT.equals(message.folderType))
                     ? View.VISIBLE : View.GONE);
             ivAuth.setVisibility(authentication && !authenticated ? View.VISIBLE : View.GONE);
@@ -683,7 +683,7 @@ else if (type == null) {
             }
             tvFolder.setVisibility(compact &&
                     (viewType == ViewType.FOLDER ||
-                            (type == null && viewType == ViewType.UNIFIED && EntityFolder.INBOX.equals(message.folderType)))
+                            (viewType == ViewType.UNIFIED && type == null && EntityFolder.INBOX.equals(message.folderType)))
                     ? View.GONE : View.VISIBLE);
 
             if (viewType == ViewType.THREAD || !threading) {

File: app/src/main/java/eu/faircode/email/AdapterNavUnified.java
Patch:
@@ -72,7 +72,7 @@ private void unwire() {
         }
 
         private void bindTo(String type) {
-            ivItem.setImageResource(R.drawable.baseline_folder_shared_24);
+            ivItem.setImageResource(EntityFolder.getIcon(type));
             tvItem.setText(Helper.localizeFolderType(context, type));
             tvItemExtra.setVisibility(View.GONE);
             ivWarning.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -101,9 +101,9 @@ public interface DaoFolder {
             " LEFT JOIN rule ON rule.folder = folder.id" +
             " LEFT JOIN operation ON operation.folder = folder.id" +
             " WHERE account.`synchronize`" +
-            " AND folder.unified" +
+            " AND ((:type IS NULL AND folder.unified) OR folder.type = :type)" +
             " GROUP BY folder.id")
-    LiveData<List<TupleFolderEx>> liveUnified();
+    LiveData<List<TupleFolderEx>> liveUnified(String type);
 
     @Query("SELECT folder.*" +
             ", account.`order` AS accountOrder, account.name AS accountName, account.color AS accountColor" +
@@ -158,6 +158,7 @@ public interface DaoFolder {
             " FROM folder" +
             " JOIN account ON account.id = folder.account" +
             " WHERE account.synchronize" +
+            " AND folder.type <> '" + EntityFolder.SYSTEM + "'" +
             " AND folder.type <> '" + EntityFolder.USER + "'" +
             " GROUP BY folder.type" +
             " HAVING COUNT(folder.id) > 1")

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -213,6 +213,8 @@ static int getIcon(String type) {
             return R.drawable.baseline_delete_24;
         if (EntityFolder.JUNK.equals(type))
             return R.drawable.baseline_flag_24;
+        if (EntityFolder.SYSTEM.equals(type))
+            return R.drawable.baseline_folder_special_24;
         return R.drawable.baseline_folder_24;
     }
 

File: app/src/main/java/eu/faircode/email/AdapterNavAccount.java
Patch:
@@ -195,7 +195,8 @@ public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {
             return Objects.equals(a1.name, a2.name) &&
                     Objects.equals(a1.color, a2.color) &&
                     a1.unseen == a2.unseen &&
-                    Objects.equals(a1.state, a2.state);
+                    Objects.equals(a1.state, a2.state) &&
+                    Objects.equals(a1.last_connected, a2.last_connected);
         }
     }
 

File: app/src/main/java/eu/faircode/email/AdapterNavFolder.java
Patch:
@@ -225,6 +225,7 @@ public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {
                     Objects.equals(f1.accountColor, f2.accountColor) &&
                     Objects.equals(f1.state, f2.state) &&
                     Objects.equals(f1.sync_state, f2.sync_state) &&
+                    Objects.equals(f1.last_sync, f2.last_sync) &&
                     f1.unseen == f2.unseen &&
                     f1.operations == f2.operations &&
                     f1.executing == f2.executing);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -683,7 +683,7 @@ else if (type == null) {
             }
             tvFolder.setVisibility(compact &&
                     (viewType == ViewType.FOLDER ||
-                            (viewType == ViewType.UNIFIED && EntityFolder.INBOX.equals(message.folderType)))
+                            (type == null && viewType == ViewType.UNIFIED && EntityFolder.INBOX.equals(message.folderType)))
                     ? View.GONE : View.VISIBLE);
 
             if (viewType == ViewType.THREAD || !threading) {

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -54,8 +54,7 @@ public interface DaoMessage {
             ", SUM(CASE WHEN folder.type = '" + EntityFolder.DRAFTS + "' THEN 1 ELSE 0 END) AS drafts" +
             ", COUNT(DISTINCT CASE WHEN message.msgid IS NULL THEN message.id ELSE message.msgid END) AS visible" +
             ", SUM(message.size) AS totalSize" +
-            ", MAX(CASE WHEN :found OR CASE WHEN type IS NULL THEN folder.unified ELSE folder.type = :type END" +
-            "   THEN message.received ELSE 0 END) AS dummy" +
+            ", MAX(CASE WHEN :found OR (:type IS NULL AND folder.unified) OR folder.type = :type THEN message.received ELSE 0 END) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " LEFT JOIN identity ON identity.id = message.identity" +

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -195,6 +195,7 @@ JSONArray getSyncArgs() {
         jargs.put(keep_days);
         jargs.put(download);
         jargs.put(auto_delete);
+        jargs.put(initialize);
 
         return jargs;
     }

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -40,7 +40,7 @@ public class FragmentOptions extends FragmentBase {
     static String[] OPTIONS_RESTART = new String[]{
             "startup", "date", "threading", "avatars", "identicons", "circular", "name_email", "subject_italic", "flags", "preview",
             "addresses", "attachments_alt", "contrast", "monospaced", "autohtml", "autoimages", "actionbar",
-            "pull", "autoscroll", "swipenav", "autoexpand", "autoclose", "autonext",
+            "autoscroll", "swipenav", "autoexpand", "autoclose", "autonext",
             "subscriptions", "debug",
             "biometrics"
     };

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -410,6 +410,9 @@ DataSource.Factory<Integer, TupleMessageEx> pagedFolder(
     @Query("UPDATE message SET plain_only = :plain_only WHERE id = :id")
     int setMessagePlainOnly(long id, boolean plain_only);
 
+    @Query("UPDATE message SET encrypt = :encrypt WHERE id = :id")
+    int setMessageEncrypt(long id, boolean encrypt);
+
     @Query("UPDATE message SET last_attempt = :last_attempt WHERE id = :id")
     int setMessageLastAttempt(long id, long last_attempt);
 

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -115,6 +115,7 @@ public class EntityMessage implements Serializable {
     @NonNull
     public Boolean content = false;
     public Boolean plain_only = null;
+    public Boolean encrypt = null;
     public String preview;
     public Long sent; // compose = null
     @NonNull

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -824,7 +824,7 @@ static boolean isPro(Context context) {
     }
 
     static void linkPro(final TextView tv) {
-        if (isPro(tv.getContext()))
+        if (isPro(tv.getContext()) && !BuildConfig.DEBUG)
             hide(tv);
         else {
             final Intent pro = new Intent(Intent.ACTION_VIEW, Uri.parse(BuildConfig.PRO_FEATURES_URI));

File: app/src/main/java/eu/faircode/email/ConnectionHelper.java
Patch:
@@ -28,7 +28,8 @@
 import javax.mail.MessagingException;
 
 public class ConnectionHelper {
-    private static final String DEFAULT_DNS = "8.8.8.8";
+    // https://dns.watch/
+    private static final String DEFAULT_DNS = "84.200.69.80";
 
     static final int AUTH_TYPE_PASSWORD = 1;
     static final int AUTH_TYPE_GMAIL = 2;

File: app/src/main/java/eu/faircode/email/EmailProvider.java
Patch:
@@ -442,7 +442,6 @@ private static EmailProvider addSpecials(Context context, EmailProvider provider
     private static SRVRecord lookup(Context context, String record) throws TextParseException, UnknownHostException {
         Lookup lookup = new Lookup(record, Type.SRV);
 
-        // https://dns.watch/ 84.200.69.80
         SimpleResolver resolver = new SimpleResolver(ConnectionHelper.getDnsServer(context));
         lookup.setResolver(resolver);
         Log.i("Lookup record=" + record + " @" + resolver.getAddress());

File: app/src/main/java/eu/faircode/email/AdapterLog.java
Patch:
@@ -36,7 +36,6 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import java.text.DateFormat;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -48,7 +47,7 @@ public class AdapterLog extends RecyclerView.Adapter<AdapterLog.ViewHolder> {
 
     private List<EntityLog> items = new ArrayList<>();
 
-    private DateFormat TF = SimpleDateFormat.getTimeInstance();
+    private DateFormat TF;
 
     public class ViewHolder extends RecyclerView.ViewHolder {
         private TextView tvTime;
@@ -74,6 +73,8 @@ private void bindTo(EntityLog log) {
         this.owner = parentFragment.getViewLifecycleOwner();
         this.inflater = LayoutInflater.from(parentFragment.getContext());
 
+        this.TF = Helper.getTimeInstance(context);
+
         setHasStableIds(true);
 
         owner.getLifecycle().addObserver(new LifecycleObserver() {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2034,13 +2034,13 @@ private static List<Notification> getNotificationUnseen(Context context, String
                     .setPublicVersion(pub);
 
             if (!biometrics) {
-                DateFormat df = SimpleDateFormat.getDateTimeInstance(SimpleDateFormat.SHORT, SimpleDateFormat.SHORT);
+                DateFormat DTF = Helper.getDateTimeInstance(context, SimpleDateFormat.SHORT, SimpleDateFormat.SHORT);
                 StringBuilder sb = new StringBuilder();
                 for (EntityMessage message : messages) {
                     sb.append("<strong>").append(messageContact.get(message).getDisplayName(true)).append("</strong>");
                     if (!TextUtils.isEmpty(message.subject))
                         sb.append(": ").append(message.subject);
-                    sb.append(" ").append(df.format(message.received));
+                    sb.append(" ").append(DTF.format(message.received));
                     sb.append("<br>");
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -130,7 +130,6 @@
 import java.io.OutputStream;
 import java.net.UnknownHostException;
 import java.text.DateFormat;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Date;
@@ -2691,8 +2690,8 @@ public void run() {
                     if (draft.ui_snoozed == null)
                         feedback = context.getString(R.string.title_queued);
                     else {
-                        DateFormat df = SimpleDateFormat.getDateTimeInstance();
-                        feedback = context.getString(R.string.title_queued_at, df.format(draft.ui_snoozed));
+                        DateFormat DTF = Helper.getDateTimeInstance(context);
+                        feedback = context.getString(R.string.title_queued_at, DTF.format(draft.ui_snoozed));
                     }
 
                     Handler handler = new Handler(context.getMainLooper());

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4228,7 +4228,7 @@ protected String[] onExecute(Context context, Bundle args) throws IOException {
 
                     {
                         Element span = document.createElement("span");
-                        DateFormat DTF = SimpleDateFormat.getDateTimeInstance(SimpleDateFormat.LONG, SimpleDateFormat.LONG);
+                        DateFormat DTF = Helper.getDateTimeInstance(context, SimpleDateFormat.LONG, SimpleDateFormat.LONG);
                         span.text(getString(R.string.title_received) + " " + DTF.format(message.received));
                         p.append(span.html() + "<br>");
                     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -51,7 +51,6 @@
 
 import java.io.IOException;
 import java.text.DateFormat;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collections;
@@ -720,7 +719,7 @@ public void closed(ConnectionEvent e) {
                                 Log.i("Reporting sync error after=" + delayed);
                                 Throwable warning = new Throwable(
                                         getString(R.string.title_no_sync,
-                                                SimpleDateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT)
+                                                Helper.getDateTimeInstance(this, DateFormat.SHORT, DateFormat.SHORT)
                                                         .format(account.last_connected)), ex);
                                 NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
                                 nm.notify("receive:" + account.id, 1,

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -248,7 +248,8 @@ private static StringBuilder getAppInfo(Context context) {
         Point size = new Point();
         display.getSize(size);
         float density = context.getResources().getDisplayMetrics().density;
-        sb.append(String.format("Resolution: %.2f x %.2f dp %b\r\n",
+        sb.append(String.format("Density %f resolution: %.2f x %.2f dp %b\r\n",
+                density,
                 size.x / density, size.y / density,
                 context.getResources().getConfiguration().isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_NORMAL)));
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -253,7 +253,7 @@ static Intent getIntentOpenKeychain() {
     }
 
     static Intent getIntentIssue(Context context) {
-        if (BuildConfig.BETA_RELEASE && Helper.hasValidFingerprint(context)) {
+        if (BuildConfig.BETA_RELEASE) {
             String version = BuildConfig.VERSION_NAME + "/" +
                     (Helper.hasValidFingerprint(context) ? "1" : "3") +
                     (Helper.isPro(context) ? "+" : "");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2921,7 +2921,7 @@ private class ActionData {
         this.attachments_alt = prefs.getBoolean("attachments_alt", false);
         this.contrast = prefs.getBoolean("contrast", false);
         this.monospaced = prefs.getBoolean("monospaced", false);
-        this.autoimages = (this.contacts && prefs.getBoolean("autoimages", false));
+        this.autoimages = (this.contacts && prefs.getBoolean("autoimages", true));
         this.collapse_quotes = prefs.getBoolean("collapse_quotes", false);
         this.authentication = prefs.getBoolean("authentication", true);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -325,7 +325,7 @@ private void setOptions() {
         swContrast.setChecked(prefs.getBoolean("contrast", false));
         swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
         swInline.setChecked(prefs.getBoolean("inline_images", false));
-        swImages.setChecked(prefs.getBoolean("autoimages", false));
+        swImages.setChecked(prefs.getBoolean("autoimages", true));
         swCollapseQuotes.setChecked(prefs.getBoolean("collapse_quotes", false));
         swRemoteContent.setChecked(prefs.getBoolean("autocontent", false));
         swActionbar.setChecked(prefs.getBoolean("actionbar", true));

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -849,7 +849,7 @@ protected void onExecuted(Bundle args, final EntityIdentity identity) {
                     etDisplay.setText(identity == null ? null : identity.display);
 
                     String signature = (identity == null ? null : identity.signature);
-                    if (TextUtils.isEmpty(signature)) {
+                    if (identity == null) {
                         CharSequence promote = getText(R.string.app_promote);
                         if (promote instanceof Spanned)
                             signature = HtmlHelper.toHtml((Spanned) promote);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2274,7 +2274,7 @@ protected void onExecuted(Bundle args, Cursor cursor) {
                         Log.i("Suggestions=" + cursor.getCount());
                         SimpleCursorAdapter adapter = new SimpleCursorAdapter(
                                 getContext(),
-                                android.R.layout.simple_list_item_1,
+                                R.layout.search_suggestion,
                                 cursor,
                                 new String[]{"suggestion"},
                                 new int[]{android.R.id.text1},

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -26,7 +26,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.graphics.Color;
 import android.media.RingtoneManager;
 import android.net.Uri;
 import android.os.Build;
@@ -108,6 +107,7 @@
 import me.leolin.shortcutbadger.ShortcutBadger;
 
 import static android.os.Process.THREAD_PRIORITY_BACKGROUND;
+import static androidx.core.app.NotificationCompat.DEFAULT_LIGHTS;
 
 class Core {
     private static int lastUnseen = -1;
@@ -2016,7 +2016,8 @@ private static List<Notification> getNotificationUnseen(Context context, String
 
         if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
             if (light) {
-                builder.setLights(Color.WHITE, 1000, 1000);
+                builder.setDefaults(DEFAULT_LIGHTS);
+                //builder.setLights(Color.WHITE, 1000, 1000);
                 Log.i("Notify light enabled");
             }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2924,7 +2924,8 @@ private class ActionData {
         this.autoimages = (this.contacts && prefs.getBoolean("autoimages", false));
         this.collapse_quotes = prefs.getBoolean("collapse_quotes", false);
         this.authentication = prefs.getBoolean("authentication", true);
-        this.debug = prefs.getBoolean("debug", false);
+
+        debug = prefs.getBoolean("debug", false);
 
         AsyncDifferConfig<TupleMessageEx> config = new AsyncDifferConfig.Builder<>(DIFF_CALLBACK)
                 .build();

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -382,6 +382,7 @@ public boolean ownFault(Throwable ex) {
 
         if (ex.getMessage() != null &&
                 (ex.getMessage().startsWith("Bad notification posted") ||
+                        ex.getMessage().contains("ActivityRecord not found") ||
                         ex.getMessage().startsWith("Unable to create layer")))
             return false;
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -85,7 +85,7 @@ public class MessageHelper {
     private static final int APPEND_BUFFER_SIZE = 4 * 1024 * 1024; // bytes
 
     static final int ATTACHMENT_BUFFER_SIZE = 8192; // bytes
-    static final int DEFAULT_ATTACHMENT_DOWNLOAD_SIZE = 65536; // bytes
+    static final int DEFAULT_ATTACHMENT_DOWNLOAD_SIZE = 262144; // bytes
 
     static void setSystemProperties() {
         System.setProperty("mail.mime.decodetext.strict", "false");

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1105,7 +1105,7 @@ public void onReceive(Context context, Intent intent) {
                                 if (folder.synchronize)
                                     if (!folder.poll && capIdle) {
                                         if (!mapFolders.get(folder).isOpen()) // Sends folder NOOP
-                                            throw new FolderClosedException(mapFolders.get(folder));
+                                            throw new StoreClosedException(istore, folder.name);
                                     } else
                                         EntityOperation.sync(this, folder.id, false);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1143,6 +1143,7 @@ else if (data != null)
                     Bundle args = data.getBundleExtra("args");
                     onSendAfter(args.getLong("time"));
                 }
+                break;
             case REQUEST_REF_EDIT:
                 if (resultCode == RESULT_OK)
                     onReferenceEditConfirmed();

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -244,6 +244,8 @@ protected Boolean onExecute(Context context, Bundle args) {
                             boolean sync = args.getBoolean("sync");
 
                             DB db = DB.getInstance(context);
+                            if (!sync)
+                                db.account().setAccountError(id, null);
                             db.account().setAccountSynchronize(id, sync);
 
                             return sync;

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -192,6 +192,8 @@ protected Boolean onExecute(Context context, Bundle args) {
                             boolean sync = args.getBoolean("sync");
 
                             DB db = DB.getInstance(context);
+                            if (!sync)
+                                db.identity().setIdentityError(id, null);
                             db.identity().setIdentitySynchronize(id, sync);
 
                             return sync;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2109,6 +2109,7 @@ private void onOpenLink(final Uri uri, String title) {
 
         private void onOpenImage(Drawable drawable) {
             ImageView pv = new ZoomableImageView(context);
+            pv.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
             pv.setImageDrawable(drawable);
 
             // TODO: dialog fragment

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -1048,7 +1048,7 @@ public void onClick(DialogInterface dialog, int which) {
                             else {
                                 if (!export || password1.equals(password2)) {
                                     ((ActivitySetup) getActivity()).password = password1;
-                                    startActivityForResult(
+                                    getActivity().startActivityForResult(
                                             Helper.getChooser(getContext(),
                                                     export ? getIntentExport() : getIntentImport()),
                                             export ? REQUEST_EXPORT : REQUEST_IMPORT);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -547,7 +547,7 @@ public Cursor runQuery(CharSequence typed) {
     }
 
     private void onReferenceEdit() {
-        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         if (prefs.getBoolean("edit_ref_confirmed", false)) {
             onReferenceEditConfirmed();
             return;
@@ -996,7 +996,7 @@ private void onActionDiscard() {
     }
 
     private void onActionSend() {
-        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
         boolean autosend = prefs.getBoolean("autosend", false);
         if (autosend) {
             onActionSendConfirmed();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -817,11 +817,11 @@ else if (content instanceof InputStream)
                 String charset = ct.getParameter("charset");
                 if (TextUtils.isEmpty(charset)) {
                     if (BuildConfig.DEBUG)
-                        warnings.add(context.getString(R.string.title_no_charset, ct.toString()));
+                        warnings.add(context.getString(R.string.title_no_charset, ct));
                     // The first 127 characters are the same as in US-ASCII
                     result = new String(result.getBytes(StandardCharsets.ISO_8859_1));
                 } else {
-                    if ("US-ASCII".equals(charset.toUpperCase()))
+                    if ("US-ASCII".equals(charset.toUpperCase()) || "ISO-8859-1".equals(charset.toUpperCase()))
                         result = new String(result.getBytes(StandardCharsets.ISO_8859_1));
                     else {
                         if ("US-ASCII".equals(Charset.forName(charset).name()))

File: app/src/main/java/eu/faircode/email/DialogFragmentEx.java
Patch:
@@ -14,8 +14,8 @@ public class DialogFragmentEx extends DialogFragment {
 
     @Override
     public void onDismiss(@NonNull DialogInterface dialog) {
-        super.onDismiss(dialog);
         sendResult(RESULT_CANCELED);
+        super.onDismiss(dialog);
     }
 
     protected void sendResult(int result) {

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -75,12 +75,11 @@ protected void onExecuted(final Bundle args, List<TupleFolderEx> folders) {
                         account, false, new AdapterFolder.IFolderSelectedListener() {
                     @Override
                     public void onFolderSelected(TupleFolderEx folder) {
-                        dismiss();
-
                         Bundle args = getArguments();
                         args.putLong("folder", folder.id);
 
                         sendResult(RESULT_OK);
+                        dismiss();
                     }
                 });
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1816,6 +1816,7 @@ private void onShowImages(final TupleMessageEx message) {
 
             tvMessage.setText(context.getText(R.string.title_ask_show_image));
 
+            // TODO: dialog fragment
             final Dialog dialog = new AlertDialog.Builder(context)
                     .setView(dview)
                     .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
@@ -3507,7 +3508,7 @@ public void onClick(DialogInterface dialog, int which) {
                         }
                     })
                     .setNegativeButton(R.string.title_no, null)
-                    .show();
+                    .create();
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3302,6 +3302,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final ArrayAdapter<EntityAnswer> adapter =
                     new ArrayAdapter<>(getContext(), R.layout.spinner_item1, android.R.id.text1);
 
+            // TODO: spinner
             new SimpleTask<List<EntityAnswer>>() {
                 @Override
                 protected List<EntityAnswer> onExecute(Context context, Bundle args) {
@@ -3334,7 +3335,7 @@ public void onClick(DialogInterface dialog, int which) {
                             sendResult(RESULT_OK);
                         }
                     })
-                    .show();
+                    .create();
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -4357,6 +4357,7 @@ public static class FragmentDialogAccount extends DialogFragmentEx {
         public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             final ArrayAdapter<EntityAccount> adapter = new ArrayAdapter<>(getContext(), R.layout.spinner_item1, android.R.id.text1);
 
+            // TODO: spinner
             new SimpleTask<List<EntityAccount>>() {
                 @Override
                 protected List<EntityAccount> onExecute(Context context, Bundle args) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -105,7 +105,6 @@
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.StaggeredGridLayoutManager;
 
-import com.github.chrisbanes.photoview.PhotoView;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.android.material.bottomnavigation.LabelVisibilityMode;
 import com.google.android.material.snackbar.Snackbar;
@@ -2094,7 +2093,7 @@ private void onOpenLink(final Uri uri, String title) {
         }
 
         private void onOpenImage(Drawable drawable) {
-            PhotoView pv = new PhotoView(context);
+            ImageView pv = new ZoomableImageView(context);
             pv.setImageDrawable(drawable);
 
             final Dialog dialog = new Dialog(context, android.R.style.Theme_Black_NoTitleBar_Fullscreen);

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -195,7 +195,7 @@ private void onActivatePro(Intent intent) {
             }
         } catch (NoSuchAlgorithmException ex) {
             Log.e(ex);
-            Helper.unexpectedError(this, this, ex);
+            Helper.unexpectedError(getSupportFragmentManager(), ex);
         }
     }
 

File: app/src/main/java/eu/faircode/email/ActivityDSN.java
Patch:
@@ -105,7 +105,7 @@ protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
                     Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG).show();
                 else
-                    Helper.unexpectedError(ActivityDSN.this, ActivityDSN.this, ex);
+                    Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
         }.execute(this, args, "disposition:decode");
     }

File: app/src/main/java/eu/faircode/email/ActivityEml.java
Patch:
@@ -157,7 +157,7 @@ protected void onException(Bundle args, Throwable ex) {
                 if (ex instanceof IllegalArgumentException)
                     Snackbar.make(findViewById(android.R.id.content), ex.getMessage(), Snackbar.LENGTH_LONG).show();
                 else
-                    Helper.unexpectedError(ActivityEml.this, ActivityEml.this, ex);
+                    Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
         }.execute(this, args, "eml:decode");
     }

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -89,7 +89,7 @@ protected void onExecuted(Bundle args, Boolean hasAccounts) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(ActivityMain.this, ActivityMain.this, ex);
+                    Helper.unexpectedError(getSupportFragmentManager(), ex);
                 }
             }.execute(this, new Bundle(), "main:accounts");
         } else {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -729,7 +729,7 @@ protected void onException(Bundle args, Throwable ex) {
                     if (ex instanceof IllegalArgumentException || ex instanceof IOException)
                         Toast.makeText(ActivityView.this, ex.getMessage(), Toast.LENGTH_LONG).show();
                     else
-                        Helper.unexpectedError(ActivityView.this, ActivityView.this, ex);
+                        Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
         }.execute(this, args, "update:check");
     }
@@ -780,9 +780,9 @@ protected void onExecuted(Bundle args, Long folder) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(ActivityView.this, ActivityView.this, ex);
+                Helper.unexpectedError(getSupportFragmentManager(), ex);
             }
-        }.execute(this, args, "menu:inbox");
+        }.execute(this, args, "menu:outbox");
     }
 
     private void onMenuOperations() {

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -256,7 +256,7 @@ protected void onExecuted(Bundle args, Boolean sync) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "account:enable");
                 }

File: app/src/main/java/eu/faircode/email/AdapterAnswer.java
Patch:
@@ -154,7 +154,7 @@ protected Boolean onExecute(Context context, Bundle args) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "rule:enable");
                 }
@@ -166,7 +166,7 @@ protected void onException(Bundle args, Throwable ex) {
         }
     }
 
-    AdapterAnswer(Fragment parentFragment) {
+    AdapterAnswer(final Fragment parentFragment) {
         this.parentFragment = parentFragment;
 
         this.context = parentFragment.getContext();
@@ -199,7 +199,7 @@ protected void onExecuted(Bundle args, Boolean composable) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(AdapterAnswer.this.context, AdapterAnswer.this.owner, ex);
+                Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
             }
         }.execute(context, owner, new Bundle(), "answer:composable");
     }

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -185,7 +185,7 @@ protected Void onExecute(Context context, Bundle args) throws IOException {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "attachment:delete");
         }
@@ -265,7 +265,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "attachment:fetch");
         }

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -189,7 +189,7 @@ protected void onExecuted(Bundle args, Void data) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "contact:state");
         }
@@ -223,7 +223,7 @@ protected void onExecuted(Bundle args, Void data) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "contact:delete");
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -333,7 +333,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "folder:collapse");
         }
@@ -519,7 +519,7 @@ protected void onExecuted(Bundle args, Boolean reload) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "folder:enable");
                 }

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -199,7 +199,7 @@ protected Boolean onExecute(Context context, Bundle args) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "identitty:enable");
                 }

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -174,7 +174,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "image:fetch");
                 }

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -144,7 +144,7 @@ protected void onExecuted(Bundle args, EntityFolder folder) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Helper.unexpectedError(context, owner, ex);
+                        Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                     }
                 }.execute(context, owner, args, "operation:open:folder");
             } else {
@@ -171,7 +171,7 @@ protected void onExecuted(Bundle args, EntityMessage message) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Helper.unexpectedError(context, owner, ex);
+                        Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                     }
                 }.execute(context, owner, args, "operation:open:message");
             }
@@ -204,7 +204,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, owner, ex);
+                    Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                 }
             }.execute(context, owner, args, "operation:delete");
 

File: app/src/main/java/eu/faircode/email/AdapterRule.java
Patch:
@@ -218,7 +218,7 @@ protected Boolean onExecute(Context context, Bundle args) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "rule:enable");
                 }
@@ -273,7 +273,7 @@ protected void onExecuted(Bundle args, Integer applied) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, owner, ex);
+                            Helper.unexpectedError(parentFragment.getFragmentManager(), ex);
                         }
                     }.execute(context, owner, args, "rule:execute");
                 }

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -138,7 +138,7 @@ protected void onExecuted(Bundle args, EntityFolder drafts) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                        Helper.unexpectedError(getFragmentManager(), ex);
                     }
                 }.execute(FragmentAccounts.this, args, "account:drafts");
 

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -137,7 +137,7 @@ protected void onExecuted(Bundle args, EntityAnswer answer) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                Helper.unexpectedError(getFragmentManager(), ex);
             }
         }.execute(this, args, "answer:get");
     }
@@ -176,7 +176,7 @@ protected void onExecuted(Bundle args, Void data) {
 
                             @Override
                             protected void onException(Bundle args, Throwable ex) {
-                                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                                Helper.unexpectedError(getFragmentManager(), ex);
                             }
                         }.execute(FragmentAnswer.this, args, "answer:delete");
                     }
@@ -235,7 +235,7 @@ protected void onExecuted(Bundle args, Void data) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                Helper.unexpectedError(getFragmentManager(), ex);
             }
         }.execute(this, args, "answer:save");
     }

File: app/src/main/java/eu/faircode/email/FragmentContacts.java
Patch:
@@ -205,7 +205,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                                 @Override
                                 protected void onException(Bundle args, Throwable ex) {
-                                    Helper.unexpectedError(getContext(), getActivity(), ex);
+                                    Helper.unexpectedError(getFragmentManager(), ex);
                                 }
                             }.execute(getContext(), getActivity(), new Bundle(), "contacts:delete");
                         }

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -97,7 +97,7 @@ public void onFolderSelected(TupleFolderEx folder) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), getActivity(), ex);
+                Helper.unexpectedError(getFragmentManager(), ex);
             }
         }.execute(getContext(), getActivity(), args, "folder:select");
 

File: app/src/main/java/eu/faircode/email/FragmentOperations.java
Patch:
@@ -169,7 +169,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                                 @Override
                                 protected void onException(Bundle args, Throwable ex) {
-                                    Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                                    Helper.unexpectedError(getFragmentManager(), ex);
                                 }
                             }.execute(getContext(), getActivity(), new Bundle(), "operations:delete");
                         }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -244,7 +244,7 @@ protected Void onExecute(Context context, Bundle args) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                Helper.unexpectedError(getFragmentManager(), ex);
             }
         }.execute(this, new Bundle(), "outbox:create");
 

File: app/src/main/java/eu/faircode/email/Shortcuts.java
Patch:
@@ -33,6 +33,7 @@
 import android.os.Bundle;
 import android.provider.ContactsContract;
 import android.text.TextUtils;
+import android.widget.Toast;
 
 import androidx.lifecycle.LifecycleOwner;
 
@@ -99,7 +100,7 @@ protected void onExecuted(Bundle args, List<ShortcutInfo> shortcuts) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(context, owner, ex);
+                Toast.makeText(context, Helper.formatThrowable(ex, false), Toast.LENGTH_LONG).show();
             }
         }.execute(context, owner, new Bundle(), "shortcuts:update");
     }

File: app/src/main/java/eu/faircode/email/FragmentDialogDuration.java
Patch:
@@ -19,7 +19,6 @@
     Copyright 2018-2019 by Marcel Bokhorst (M66B)
 */
 
-import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -33,6 +32,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AlertDialog;
 import androidx.fragment.app.DialogFragment;
 import androidx.fragment.app.Fragment;
 

File: app/src/main/java/eu/faircode/email/FragmentDialogFolder.java
Patch:
@@ -19,7 +19,6 @@
     Copyright 2018-2019 by Marcel Bokhorst (M66B)
 */
 
-import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -30,6 +29,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AlertDialog;
 import androidx.fragment.app.DialogFragment;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -20,7 +20,6 @@
 */
 
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.app.Dialog;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
@@ -77,6 +76,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.widget.PopupMenu;
 import androidx.appcompat.widget.SearchView;
 import androidx.constraintlayout.widget.Group;

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -56,6 +56,7 @@ public class EntityAttachment {
 
     static final Integer PGP_MESSAGE = 1;
     static final Integer PGP_SIGNATURE = 2;
+    static final Integer PGP_KEY = 3;
 
     // https://developer.android.com/guide/topics/media/media-formats#image-formats
     private static final List<String> IMAGE_TYPES = Collections.unmodifiableList(Arrays.asList(

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -252,7 +252,7 @@ static MimeMessageEx from(Context context, EntityMessage message, EntityIdentity
 
         if (message.from != null && message.from.length > 0)
             for (EntityAttachment attachment : attachments)
-                if (attachment.available && EntityAttachment.PGP_SIGNATURE.equals(attachment.encryption)) {
+                if (attachment.available && EntityAttachment.PGP_KEY.equals(attachment.encryption)) {
                     InternetAddress from = (InternetAddress) message.from[0];
                     File file = attachment.getFile(context);
                     StringBuilder sb = new StringBuilder();

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1378,8 +1378,8 @@ else if (EntityFolder.JUNK.equals(folder.type))
                 spRight.setSelection(pos);
         }
 
-        grpFolders.setVisibility(folders.size() > 1 ? View.VISIBLE : View.GONE);
-        btnSave.setVisibility(folders.size() > 1 ? View.VISIBLE : View.GONE);
+        grpFolders.setVisibility(_folders.size() > 1 ? View.VISIBLE : View.GONE);
+        btnSave.setVisibility(_folders.size() > 1 ? View.VISIBLE : View.GONE);
     }
 
     private class CheckResult {

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -133,7 +133,7 @@ static void copy(Context context, long oldid, long newid) {
                     Helper.copy(source, target);
                 } catch (IOException ex) {
                     Log.e(ex);
-                    db.attachment().setProgress(attachment.id, null);
+                    db.attachment().setError(attachment.id, Helper.formatThrowable(ex, false));
                 }
             }
         }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1893,7 +1893,8 @@ private static EntityAttachment addAttachment(Context context, long id, Uri uri,
 
         } catch (IOException ex) {
             // Reset progress on failure
-            db.attachment().setProgress(attachment.id, null);
+            Log.e(ex);
+            db.attachment().setError(attachment.id, Helper.formatThrowable(ex, false));
             throw ex;
         }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -923,6 +923,7 @@ void downloadAttachment(Context context, int index, EntityAttachment local) thro
                 throw new MessagingException("downloadAttachment", ex);
             } catch (Throwable ex) {
                 // Reset progress on failure
+                Log.e(ex);
                 db.attachment().setError(local.id, Helper.formatThrowable(ex));
                 throw ex;
             }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1419,6 +1419,7 @@ protected Object onExecute(Context context, Bundle args) throws Throwable {
                                 attachment.name = (OpenPgpApi.ACTION_SIGN_AND_ENCRYPT.equals(data.getAction())
                                         ? "encrypted.asc" : "signature.asc");
                                 attachment.type = "application/octet-stream";
+                                attachment.disposition = Part.INLINE;
                                 attachment.encryption = (OpenPgpApi.ACTION_SIGN_AND_ENCRYPT.equals(data.getAction())
                                         ? EntityAttachment.PGP_MESSAGE : EntityAttachment.PGP_SIGNATURE);
                                 attachment.id = db.attachment().insertAttachment(attachment);
@@ -1779,8 +1780,7 @@ private static EntityAttachment addAttachment(Context context, long id, Uri uri,
                 attachment.type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase());
             if (attachment.type == null)
                 attachment.type = "application/octet-stream";
-            if (image)
-                attachment.disposition = Part.INLINE;
+            attachment.disposition = (image ? Part.INLINE : Part.ATTACHMENT);
 
             attachment.size = (s == null ? null : Long.parseLong(s));
             attachment.progress = 0;
@@ -2131,6 +2131,7 @@ else if ("receipt".equals(action))
                         attachment.sequence = 1;
                         attachment.name = ics.getName();
                         attachment.type = "text/calendar";
+                        attachment.disposition = Part.ATTACHMENT;
                         attachment.size = ics.length();
                         attachment.progress = null;
                         attachment.available = true;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -864,7 +864,6 @@ void downloadAttachment(Context context, EntityAttachment local) throws IOExcept
             for (int i = 0; i < remotes.size(); i++) {
                 EntityAttachment remote = remotes.get(i);
                 if (Objects.equals(remote.name, local.name) &&
-                        Objects.equals(remote.disposition, local.disposition) &&
                         Objects.equals(remote.cid, local.cid)) {
                     found = true;
                     downloadAttachment(context, i, local);

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -244,7 +244,7 @@ private void setAction(CompoundButton cb, String key, boolean checked) {
         else {
             cb.setChecked(!checked);
             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(getContext());
-            lbm.sendBroadcast(new Intent(ActivityView.ACTION_SHOW_PRO));
+            lbm.sendBroadcast(new Intent(ActivitySetup.ACTION_SHOW_PRO));
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -131,7 +131,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                     } else {
                         swSchedule.setChecked(false);
                         LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(getContext());
-                        lbm.sendBroadcast(new Intent(ActivityView.ACTION_SHOW_PRO));
+                        lbm.sendBroadcast(new Intent(ActivitySetup.ACTION_SHOW_PRO));
                     }
                 } else {
                     prefs.edit().putBoolean("schedule", false).apply();

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -413,6 +413,9 @@ public int compare(Object o1, Object o2) {
                 if (c != 0)
                     return c;
 
+                if (context == null)
+                    return collator.compare(f1.name, f2.name);
+
                 String name1 = f1.getDisplayName(context);
                 String name2 = f2.getDisplayName(context);
                 return collator.compare(name1, name2);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -617,7 +617,7 @@ public Object doCommand(IMAPProtocol protocol) {
                         altJunk.type = EntityFolder.JUNK;
 
                     if (result.folders.size() > 0)
-                        Collections.sort(result.folders, result.folders.get(0).getComparator(context));
+                        Collections.sort(result.folders, result.folders.get(0).getComparator(null));
                 }
 
                 return result;
@@ -1221,7 +1221,7 @@ protected List<EntityFolder> onExecute(Context context, Bundle args) {
                         List<EntityFolder> folders = db.folder().getFolders(account);
 
                         if (folders != null && folders.size() > 0)
-                            Collections.sort(folders, folders.get(0).getComparator(context));
+                            Collections.sort(folders, folders.get(0).getComparator(null));
 
                         return folders;
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -621,7 +621,7 @@ protected Map<EntityAccount, List<EntityFolder>> onExecute(Context context, Bund
                             for (EntityAccount account : accounts) {
                                 List<EntityFolder> folders = db.folder().getFolders(account.id);
                                 if (folders.size() > 0)
-                                    Collections.sort(folders, folders.get(0).getComparator(context));
+                                    Collections.sort(folders, folders.get(0).getComparator(null));
                                 result.put(account, folders);
                             }
 
@@ -640,7 +640,8 @@ protected void onExecuted(Bundle args, Map<EntityAccount, List<EntityFolder>> re
                                         .addSubMenu(Menu.NONE, 0, order++, account.name);
                                 int sorder = 1;
                                 for (EntityFolder folder : result.get(account)) {
-                                    MenuItem item = smenu.add(Menu.NONE, 1, sorder++, folder.getDisplayName(getContext()));
+                                    MenuItem item = smenu.add(Menu.NONE, 1, sorder++,
+                                            Helper.localizeFolderName(getContext(), folder.name));
                                     item.setIntent(new Intent().putExtra("target", folder.id));
                                 }
                             }

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -380,7 +380,7 @@ protected RefData onExecute(Context context, Bundle args) {
                     data.folders = new ArrayList<>();
 
                 if (data.folders.size() > 0)
-                    Collections.sort(data.folders, data.folders.get(0).getComparator(context));
+                    Collections.sort(data.folders, data.folders.get(0).getComparator(null));
 
                 data.identities = db.identity().getIdentities(aid);
                 data.answers = db.answer().getAnswers(false);

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -62,7 +62,7 @@ public interface DaoAccount {
             " FROM account" +
             " LEFT JOIN folder AS drafts ON drafts.account = account.id" +
             " WHERE :all OR account.synchronize" +
-            " AND drafts.type = '" + EntityFolder.DRAFTS + "'" +
+            " AND (drafts.type = '" + EntityFolder.DRAFTS + "' OR drafts.type IS NULL)" +
             " GROUP BY account.id" +
             " ORDER BY CASE WHEN :all THEN 0 ELSE account.`order` END" +
             ", CASE WHEN :all THEN 0 ELSE account.`primary` END DESC" +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1065,6 +1065,8 @@ else if (EntityFolder.JUNK.equals(folder.type))
                             message.uid != null && (inJunk || (!inArchive && hasArchive)));
                     bnvActions.getMenu().findItem(R.id.action_archive).setTitle(
                             inJunk ? R.string.title_folder_inbox : R.string.title_archive);
+                    bnvActions.getMenu().findItem(R.id.action_archive).setIcon(
+                            inJunk ? R.drawable.baseline_inbox_24 : R.drawable.baseline_archive_24);
 
                     bnvActions.getMenu().findItem(R.id.action_reply).setEnabled(message.content);
                     bnvActions.getMenu().findItem(R.id.action_reply).setVisible(!inOutbox);

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -231,8 +231,6 @@ protected Boolean onExecute(Context context, Bundle args) {
 
                 boolean should = args.getBoolean("should");
 
-                if (TextUtils.isEmpty(display) || display.equals(name))
-                    display = null;
                 int sync_days = (TextUtils.isEmpty(sync) ? EntityFolder.DEFAULT_SYNC : Integer.parseInt(sync));
                 int keep_days = (TextUtils.isEmpty(keep) ? EntityFolder.DEFAULT_KEEP : Integer.parseInt(keep));
                 if (keep_days < sync_days)
@@ -275,6 +273,9 @@ protected Boolean onExecute(Context context, Bundle args) {
                         return false;
                     }
 
+                    if (TextUtils.isEmpty(display) || display.equals(name))
+                        display = null;
+
                     if (folder == null) {
                         reload = true;
                         Log.i("Creating folder=" + name + " parent=" + parent);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3518,7 +3518,7 @@ public boolean areContentsTheSame(
                         same = false;
                         Log.i("preview changed id=" + next.id);
                     }
-                    if (!prev.sent.equals(next.sent)) {
+                    if (!Objects.equals(prev.sent, next.sent)) {
                         same = false;
                         Log.i("sent changed id=" + next.id);
                     }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2932,7 +2932,8 @@ else if (messages.size() == 1)
                 if (expand != null &&
                         (expand.content || unmetered || (expand.size != null && expand.size < download))) {
                     iProperties.setValue("expanded", expand.id, true);
-                    return true;
+                    if (!expand.ui_seen)
+                        return true;
                 }
             }
         } else {

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -44,7 +44,7 @@ public interface DaoAccount {
     LiveData<List<EntityAccount>> liveSynchronizingAccounts();
 
     @Query("SELECT account.*" +
-            ", (SELECT COUNT(message.id)" +
+            ", (SELECT COUNT(DISTINCT CASE WHEN message.msgid IS NULL THEN message.id ELSE message.msgid END)" +
             "    FROM message" +
             "    JOIN folder ON folder.id = message.folder" +
             "    WHERE message.account = account.id" +

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2934,8 +2934,10 @@ else if (messages.size() == 1)
                     expand = messages.get(0);
 
                 if (expand != null &&
-                        (expand.content || unmetered || (expand.size != null && expand.size < download)))
+                        (expand.content || unmetered || (expand.size != null && expand.size < download))) {
                     iProperties.setValue("expanded", expand.id, true);
+                    return true;
+                }
             }
         } else {
             if (autoCloseCount > 0 && (autoclose || autonext)) {

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -144,7 +144,7 @@ public void getItemOffsets(Rect outRect, View view, RecyclerView parent, Recycle
         itemDecorator.setDrawable(getContext().getDrawable(R.drawable.divider));
         rvFolder.addItemDecoration(itemDecorator);
 
-        adapter = new AdapterFolder(getContext(), getViewLifecycleOwner(), account, show_hidden, null);
+        adapter = new AdapterFolder(getContext(), getViewLifecycleOwner(), view, account, show_hidden, null);
         rvFolder.setAdapter(adapter);
 
         fab.setOnClickListener(new View.OnClickListener() {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -501,7 +501,7 @@ private View getView(RecyclerView parent, int pos) {
         boolean filter_duplicates = prefs.getBoolean("filter_duplicates", false);
 
         adapter = new AdapterMessage(
-                getContext(), getViewLifecycleOwner(),
+                getContext(), getViewLifecycleOwner(), view,
                 viewType, compact, zoom, sort, filter_duplicates, iProperties);
         rvMessage.setAdapter(adapter);
 
@@ -1926,7 +1926,7 @@ private void onActionMoveSelectionAccount(long account, List<TupleFolderEx> fold
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvFolder.setLayoutManager(llm);
 
-        final AdapterFolder adapter = new AdapterFolder(getContext(), getViewLifecycleOwner(), account, false,
+        final AdapterFolder adapter = new AdapterFolder(getContext(), getViewLifecycleOwner(), view, account, false,
                 new AdapterFolder.IFolderSelectedListener() {
                     @Override
                     public void onFolderSelected(TupleFolderEx folder) {

File: app/src/main/java/eu/faircode/email/FragmentRules.java
Patch:
@@ -78,7 +78,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvRule.setLayoutManager(llm);
 
-        adapter = new AdapterRule(getContext(), getViewLifecycleOwner());
+        adapter = new AdapterRule(getContext(), getViewLifecycleOwner(), view);
         rvRule.setAdapter(adapter);
 
         DividerItemDecoration itemDecorator = new DividerItemDecoration(getContext(), llm.getOrientation());

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -2024,7 +2024,7 @@ private static List<Notification> getNotificationUnseen(Context context, String
 
             if (notify_reply && message.content) {
                 Intent reply = new Intent(context, ActivityCompose.class)
-                        .putExtra("action", args.getString("action"))
+                        .putExtra("action", "reply")
                         .putExtra("reference", message.id);
                 reply.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 PendingIntent piReply = PendingIntent.getActivity(context, ActivityCompose.PI_REPLY, reply, PendingIntent.FLAG_UPDATE_CURRENT);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3057,7 +3057,7 @@ View getLayout(int position, View convertView, ViewGroup parent, int resid) {
         public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
             EntityIdentity identity = (EntityIdentity) parent.getAdapter().getItem(position);
 
-            encrypt = (identity != null && identity.encrypt);
+            encrypt = (identity != null && identity.encrypt && Helper.isPro(getContext()));
             getActivity().invalidateOptionsMenu();
 
             int at = (identity == null ? -1 : identity.email.indexOf('@'));

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -428,12 +428,12 @@ public Object doCommand(IMAPProtocol protocol) {
                     } catch (IOException ex) {
                         if (ex.getCause() instanceof MessagingException) {
                             Log.w(browsable.name + " boundary server", ex);
-                            db.folder().setFolderError(browsable.id, Helper.formatThrowable(ex, true));
+                            db.folder().setFolderError(browsable.id, Helper.formatThrowable(ex));
                         } else
                             throw ex;
                     } catch (Throwable ex) {
                         Log.e(browsable.name + " boundary server", ex);
-                        db.folder().setFolderError(browsable.id, Helper.formatThrowable(ex, true));
+                        db.folder().setFolderError(browsable.id, Helper.formatThrowable(ex));
                     } finally {
                         ((IMAPMessage) isub[j]).invalidateHeaders();
                     }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1027,7 +1027,7 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
 
                 if (!synchronize) {
                     NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
-                    nm.cancel("receive", account.id.intValue());
+                    nm.cancel("receive:" + account.id, 1);
                 }
 
                 return false;

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -539,7 +539,7 @@ public void onBackPressed() {
             int count = getSupportFragmentManager().getBackStackEntryCount();
             if (exit || count > 1)
                 super.onBackPressed();
-            else {
+            else if (!backHandled()) {
                 exit = true;
                 Toast.makeText(this, R.string.app_exit, Toast.LENGTH_SHORT).show();
                 new Handler().postDelayed(new Runnable() {

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1462,10 +1462,10 @@ static EntityMessage synchronizeMessage(
                 Log.i(folder.name + " updated id=" + message.id + " uid=" + message.uid + " unhide");
             }
 
-            if (message.ui_browsed) {
+            if (message.ui_browsed != browsed) {
                 update = true;
-                message.ui_browsed = false;
-                Log.i(folder.name + " updated id=" + message.id + " uid=" + message.uid + " unbrowse");
+                message.ui_browsed = browsed;
+                Log.i(folder.name + " updated id=" + message.id + " uid=" + message.uid + " browsed=" + browsed);
             }
 
             Uri uri = ContactInfo.getLookupUri(context, message.from);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2286,7 +2286,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                     return true;
                 case R.id.action_move:
                     if (EntityFolder.OUTBOX.equals(data.message.folderType))
-                        onnActionMoveOutbox(data);
+                        onActionMoveOutbox(data);
                     else
                         onActionMove(data, false);
                     return true;
@@ -3040,7 +3040,7 @@ protected void onException(Bundle args, Throwable ex) {
             }.execute(context, owner, args, "message:move:list");
         }
 
-        private void onnActionMoveOutbox(ActionData data) {
+        private void onActionMoveOutbox(ActionData data) {
             Bundle args = new Bundle();
             args.putLong("id", data.message.id);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -545,10 +545,7 @@ private Address[] getAddressHeader(String name) throws MessagingException {
         if (header == null)
             return null;
 
-        header = MimeUtility.unfold(header);
         header = new String(header.getBytes(StandardCharsets.ISO_8859_1));
-        header = decodeMime(header);
-
         return InternetAddress.parseHeader(header, false);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -74,9 +74,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         bottom_navigation = view.findViewById(R.id.bottom_navigation);
 
-        for (int i = 0; i < bottom_navigation.getMenu().size(); i++)
-            bottom_navigation.getMenu().getItem(i).getIcon().mutate();
-
         pbWait = view.findViewById(R.id.pbWait);
         grpReady = view.findViewById(R.id.grpReady);
 

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -202,9 +202,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         bottom_navigation = view.findViewById(R.id.bottom_navigation);
 
-        for (int i = 0; i < bottom_navigation.getMenu().size(); i++)
-            bottom_navigation.getMenu().getItem(i).getIcon().mutate();
-
         pbWait = view.findViewById(R.id.pbWait);
 
         grpReady = view.findViewById(R.id.grpReady);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3507,7 +3507,7 @@ protected PendingIntent onExecute(Context context, Bundle args) throws Throwable
 
                                 // Write decrypted body
                                 EntityMessage m = db.message().getMessage(id);
-                                Helper.writeText(m.getFile(context), decrypted.toString());
+                                Helper.writeText(m.getFile(context), decrypted.toString().replace("\0", ""));
 
                                 db.message().setMessageStored(id, new Date().getTime());
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -659,14 +659,16 @@ protected Boolean onExecute(Context context, Bundle args) throws Throwable {
                         return true;
                     if (!Objects.equals(identity.store_sent, store_sent))
                         return true;
+                    if (identity.error != null)
+                        return true;
 
                     return false;
                 }
 
                 String identityRealm = (identity == null ? null : identity.realm);
 
                 boolean check = (synchronize && (identity == null ||
-                        !identity.synchronize ||
+                        !identity.synchronize || identity.error != null ||
                         !host.equals(identity.host) || Integer.parseInt(port) != identity.port ||
                         !user.equals(identity.user) || !password.equals(identity.password) ||
                         !Objects.equals(realm, identityRealm) ||

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3069,6 +3069,7 @@ protected Void onExecute(Context context, Bundle args) {
                         message.id = null;
                         message.folder = drafts.id;
                         message.ui_snoozed = null;
+                        message.error = null;
                         message.id = db.message().insertMessage(message);
 
                         File target = message.getFile(context);

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -156,6 +156,7 @@ else if (MOVE.equals(name)) {
                     boolean seen = message.seen;
                     boolean ui_seen = message.ui_seen;
                     boolean ui_browsed = message.ui_browsed;
+                    String error = message.error;
 
                     message.id = null;
                     message.account = target.account;
@@ -167,6 +168,7 @@ else if (MOVE.equals(name)) {
                         message.ui_seen = true;
                     }
                     message.ui_browsed = false;
+                    message.error = null;
                     message.id = db.message().insertMessage(message);
                     File mtarget = message.getFile(context);
                     long tmpid = message.id;
@@ -179,6 +181,7 @@ else if (MOVE.equals(name)) {
                     message.seen = seen;
                     message.ui_seen = ui_seen;
                     message.ui_browsed = ui_browsed;
+                    message.error = error;
 
                     if (message.content)
                         try {

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -416,7 +416,7 @@ private void send(EntityMessage message) throws MessagingException, IOException
                 Log.i("Reporting send error after=" + delayed);
                 NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
                 nm.notify("send", message.identity.intValue(),
-                        Core.getNotificationError(this, ident.name, ex).build());
+                        Core.getNotificationError(this, "error", ident.name, ex).build());
             }
 
             throw ex;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -711,7 +711,7 @@ public int compare(EntityFolder f1, EntityFolder f2) {
                                                         .format(account.last_connected)), ex);
                                 NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
                                 nm.notify("receive", account.id.intValue(),
-                                        Core.getNotificationError(this, "warning", account.name, warning, false)
+                                        Core.getNotificationError(this, "warning", account.name, warning)
                                                 .build());
                             }
                         }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1277,7 +1277,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                     @Override
                     public void onPageFinished(WebView view, String url) {
                         try {
-                            PrintManager printManager = (PrintManager) getSystemService(Context.PRINT_SERVICE);
+                            PrintManager printManager = (PrintManager) getOriginalContext().getSystemService(Context.PRINT_SERVICE);
                             String jobName = getString(R.string.app_name);
                             if (!TextUtils.isEmpty(data[0]))
                                 jobName += " - " + data[0];

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1754,7 +1754,7 @@ private static EntityAttachment addAttachment(Context context, long id, Uri uri,
         if ("file".equals(uri.getScheme()) &&
                 !Helper.hasPermission(context, Manifest.permission.READ_EXTERNAL_STORAGE)) {
             Log.w("Add attachment uri=" + uri);
-            throw new SecurityException();
+            throw new SecurityException("Add attachment with file scheme");
         }
 
         EntityAttachment attachment = new EntityAttachment();

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -230,6 +230,7 @@ private static StringBuilder getAppInfo(Context context) {
         sb.append("\r\n");
 
         // Get device info
+        sb.append(String.format("uid: %s\r\n", android.os.Process.myUid()));
         sb.append(String.format("Brand: %s\r\n", Build.BRAND));
         sb.append(String.format("Manufacturer: %s\r\n", Build.MANUFACTURER));
         sb.append(String.format("Model: %s\r\n", Build.MODEL));

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -951,7 +951,7 @@ private static void onSynchronizeMessages(
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
             boolean sync_unseen = prefs.getBoolean("sync_unseen", false);
             boolean sync_flagged = prefs.getBoolean("sync_flagged", true);
-            boolean sync_kept = prefs.getBoolean("sync_kept", false);
+            boolean sync_kept = prefs.getBoolean("sync_kept", true);
 
             Log.i(folder.name + " start sync after=" + sync_days + "/" + keep_days +
                     " sync unseen=" + sync_unseen + " flagged=" + sync_flagged + " kept=" + sync_kept);

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -255,7 +255,7 @@ private void setOptions() {
 
         swUnseen.setChecked(prefs.getBoolean("sync_unseen", false));
         swFlagged.setChecked(prefs.getBoolean("sync_flagged", true));
-        swSyncKept.setChecked(prefs.getBoolean("sync_kept", false));
+        swSyncKept.setChecked(prefs.getBoolean("sync_kept", true));
         swSyncFolders.setChecked(prefs.getBoolean("sync_folders", true));
     }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -466,7 +466,7 @@ private View getView(RecyclerView parent, int pos) {
         seekBar.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
-                return false;
+                return true;
             }
         });
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -451,7 +451,7 @@ private static void onAdd(Context context, JSONArray jargs, EntityFolder folder,
             // Delete previous message(s) with same ID
             if (folder.id.equals(message.folder)) {
                 // Prevent adding/deleting message
-                db.message().setMessageUid(message.id, message.uid == null ? -1L : -message.uid);
+                db.message().setMessageUid(message.id, null);
 
                 if (TextUtils.isEmpty(message.msgid)) {
                     // Draft might be created somewhere else
@@ -549,8 +549,6 @@ private static void onAdd(Context context, JSONArray jargs, EntityFolder folder,
             try {
                 db.beginTransaction();
 
-                List<EntityRule> rules = db.rule().getEnabledRules(folder.id);
-
                 if (folder.id.equals(message.folder)) {
                     if (EntityFolder.DRAFTS.equals(folder.type)) {
                         Log.i(folder.name + " Setting id=" + message.id + " uid=" + uid);

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -691,6 +691,7 @@ private static void onRaw(Context context, JSONArray jargs, EntityFolder folder,
             Log.i(folder.name + " queuing ADD id=" + message.id + ":" + target);
 
             EntityOperation operation = new EntityOperation();
+            operation.account = message.account;
             operation.folder = target;
             operation.message = message.id;
             operation.name = EntityOperation.ADD;

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -320,7 +320,7 @@ public void afterTextChanged(Editable s) {
             }
         });
 
-        vwColor.setBackgroundColor(color);
+        setColor(color);
         btnColor.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -1379,7 +1379,7 @@ private void selectAccount() {
     }
 
     private void setColor(int color) {
-        FragmentAccount.this.color = color;
+        this.color = color;
 
         GradientDrawable border = new GradientDrawable();
         border.setColor(color);

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -273,7 +273,7 @@ public void afterTextChanged(Editable s) {
             }
         });
 
-        vwColor.setBackgroundColor(color);
+        setColor(color);
         btnColor.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -991,7 +991,7 @@ protected void onException(Bundle args, Throwable ex) {
     }
 
     private void setColor(int color) {
-        FragmentIdentity.this.color = color;
+        this.color = color;
 
         GradientDrawable border = new GradientDrawable();
         border.setColor(color);

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -153,7 +153,6 @@ public class EntityFolder extends EntityOrder implements Serializable {
             USER
     ));
 
-    static final int DEFAULT_INIT = 14; // days
     static final int DEFAULT_SYNC = 7; // days
     static final int DEFAULT_KEEP = 30; // days
 
@@ -190,7 +189,7 @@ JSONArray getSyncArgs() {
         }
 
         JSONArray jargs = new JSONArray();
-        jargs.put(initialize ? Math.min(DEFAULT_INIT, keep_days) : days);
+        jargs.put(initialize ? keep_days : days);
         jargs.put(keep_days);
         jargs.put(download);
         jargs.put(auto_delete);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1037,7 +1037,7 @@ else if (EntityFolder.JUNK.equals(folder.type))
 
                     ActionData data = new ActionData();
                     data.hasJunk = hasJunk;
-                    data.delete = (inTrash || !hasTrash);
+                    data.delete = (inTrash || !hasTrash || inOutbox);
                     data.message = message;
                     bnvActions.setTag(data);
 
@@ -2902,6 +2902,8 @@ protected Void onExecute(Context context, Bundle args) {
                                                 return null;
 
                                             EntityFolder folder = db.folder().getFolder(message.folder);
+                                            if (folder == null)
+                                                return null;
 
                                             if (EntityFolder.OUTBOX.equals(folder.type)) {
                                                 db.message().deleteMessage(id);

File: app/src/main/java/eu/faircode/email/Log.java
Patch:
@@ -81,7 +81,7 @@ public static int e(String msg) {
     }
 
     public static int i(Throwable ex) {
-        return android.util.Log.w(TAG, ex + "\n" + android.util.Log.getStackTraceString(ex));
+        return android.util.Log.i(TAG, ex + "\n" + android.util.Log.getStackTraceString(ex));
     }
 
     public static int w(Throwable ex) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -592,9 +592,10 @@ Address[] getReply() throws MessagingException {
     }
 
     Address[] getListPost() throws MessagingException {
+        String list = null;
         try {
             // https://www.ietf.org/rfc/rfc2369.txt
-            String list = imessage.getHeader("List-Post", null);
+            list = imessage.getHeader("List-Post", null);
             if (list == null)
                 return null;
 
@@ -613,7 +614,7 @@ Address[] getListPost() throws MessagingException {
 
             return new Address[]{new InternetAddress(mailto.getTo().split(",")[0])};
         } catch (android.net.ParseException ex) {
-            Log.w(ex);
+            Log.w(new IllegalArgumentException(list, ex));
             return null;
         } catch (AddressException ex) {
             Log.w(ex);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -170,7 +170,9 @@ public void onChanged(List<TupleMessageEx> messages) {
                 try {
                     Core.notifyMessages(ServiceSynchronize.this, notifying, messages);
                 } catch (SecurityException ex) {
-                    android.util.Log.e(Log.TAG, ex + "\n" + android.util.Log.getStackTraceString(ex));
+                    Log.w(ex);
+                    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ServiceSynchronize.this);
+                    prefs.edit().remove("sound").apply();
                 } catch (Throwable ex) {
                     Log.e(ex);
                 }

File: app/src/main/java/eu/faircode/email/FixedRecyclerView.java
Patch:
@@ -78,7 +78,7 @@ public boolean onTouchEvent(MotionEvent e) {
             return false;
         } catch (IllegalStateException ex) {
             // Range start point not set
-            Log.w(ex);
+            Log.i(ex);
             return false;
         }
     }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -310,7 +310,7 @@ public void run() {
                 }
             }));
 
-        if (BuildConfig.BETA_RELEASE && Helper.getIntentIssue(this).resolveActivity(pm) != null)
+        if (Helper.getIntentIssue(this).resolveActivity(pm) != null)
             extra.add(new NavMenuItem(R.drawable.baseline_feedback_24, R.string.menu_issue, new Runnable() {
                 @Override
                 public void run() {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1555,6 +1555,7 @@ private void onActionCreateChannel() {
                     channel.setGroup("contacts");
                     channel.setDescription(from.getPersonal());
                     channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+                    channel.enableLights(true);
                     nm.createNotificationChannel(channel);
                     onActionEditChannel();
                 }

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -310,6 +310,7 @@ private void createNotificationChannels() {
                     getString(R.string.channel_notification),
                     NotificationManager.IMPORTANCE_HIGH);
             notification.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+            notification.enableLights(true);
             nm.createNotificationChannel(notification);
 
             NotificationChannel warning = new NotificationChannel(

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -116,6 +116,7 @@ void createNotificationChannel(Context context) {
                     NotificationManager.IMPORTANCE_HIGH);
             channel.setGroup(name);
             channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+            channel.enableLights(true);
             nm.createNotificationChannel(channel);
         }
     }

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -81,6 +81,7 @@ void createNotificationChannel(Context context) {
                     NotificationManager.IMPORTANCE_HIGH);
             channel.setGroup(accountName);
             channel.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);
+            channel.enableLights(true);
             nm.createNotificationChannel(channel);
         }
     }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -926,8 +926,10 @@ void downloadAttachment(Context context, int index, long id, String name) throws
 
                 Log.i("Downloaded attachment size=" + size);
             } catch (FolderClosedIOException ex) {
+                db.attachment().setError(id, Helper.formatThrowable(ex));
                 throw new FolderClosedException(ex.getFolder(), "downloadAttachment", ex);
             } catch (MessageRemovedIOException ex) {
+                db.attachment().setError(id, Helper.formatThrowable(ex));
                 throw new MessagingException("downloadAttachment", ex);
             } catch (Throwable ex) {
                 // Reset progress on failure

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -866,6 +866,8 @@ else if (content instanceof InputStream)
                     if ("US-ASCII".equals(Charset.forName(charset).name()) &&
                             !"US-ASCII".equals(charset.toUpperCase()))
                         warnings.add(context.getString(R.string.title_no_charset, charset));
+                    if (part.isMimeType("text/plain") && "US-ASCII".equals(charset.toUpperCase()))
+                        result = fixUTF8(result);
                 }
             } catch (ParseException ex) {
                 Log.w(ex);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -608,7 +608,7 @@ Address[] getListPost() throws MessagingException {
 
                 return new Address[]{new InternetAddress(to.getTo().split(",")[0])};
             } catch (android.net.ParseException ex) {
-                throw new ParseException(list);
+                throw new IllegalArgumentException(list, ex);
             }
         } catch (android.net.ParseException ex) {
             Log.w(ex);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -151,7 +151,7 @@ private void setupBugsnag() {
         com.bugsnag.android.Configuration config =
                 new com.bugsnag.android.Configuration("9d2d57476a0614974449a3ec33f2604a");
 
-        if (BuildConfig.DEBUG)
+        if (BuildConfig.DEBUG || !Helper.hasValidFingerprint(this))
             config.setReleaseStage("development");
         else if (BuildConfig.BETA_RELEASE)
             config.setReleaseStage(BuildConfig.PLAY_STORE_RELEASE ? "beta/play" : "beta");

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2069,14 +2069,16 @@ public void onChanged(TupleThreadStats stats) {
                 db.message().liveHidden(account, thread).observe(getViewLifecycleOwner(), new Observer<List<Long>>() {
                     @Override
                     public void onChanged(List<Long> ids) {
-                        if (ids != null)
+                        if (ids != null) {
                             for (long id : ids) {
                                 Log.i("Hidden id=" + id);
                                 for (String key : values.keySet())
                                     values.get(key).remove(id);
                                 bodies.remove(id);
                                 attachments.remove(id);
                             }
+                            updateExpanded();
+                        }
                     }
                 });
                 break;

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -110,8 +110,7 @@ public void uncaughtException(Thread thread, Throwable ex) {
             }
         });
 
-        if (Helper.hasValidFingerprint(this))
-            setupBugsnag();
+        setupBugsnag();
 
         upgrade(this);
 

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -132,7 +132,7 @@ private void bindTo(TupleAccountEx account) {
                 else
                     tvName.setText(account.name);
 
-                tvName.setTypeface(null, account.unseen > 0 ? Typeface.BOLD : Typeface.NORMAL);
+                tvName.setTypeface(account.unseen > 0 ? Typeface.DEFAULT_BOLD : Typeface.DEFAULT);
                 tvName.setTextColor(account.unseen > 0 ? colorUnread : textColorSecondary);
             }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -238,7 +238,7 @@ else if ("downloading".equals(folder.sync_state))
             else
                 tvName.setText(folder.getDisplayName(context, parent));
 
-            tvName.setTypeface(null, folder.unseen > 0 ? Typeface.BOLD : Typeface.NORMAL);
+            tvName.setTypeface(folder.unseen > 0 ? Typeface.DEFAULT_BOLD : Typeface.DEFAULT);
             tvName.setTextColor(folder.unseen > 0 ? colorUnread : textColorSecondary);
 
             if (listener == null) {

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -170,9 +170,9 @@ public void onClick(View view) {
         fabError.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
-                fragmentTransaction.replace(R.id.content_frame, new FragmentAccounts()).addToBackStack("accounts");
-                fragmentTransaction.commit();
+                Intent intent = new Intent(getContext(), ActivitySetup.class)
+                        .putExtra("target", "accounts");
+                startActivity(intent);
             }
         });
 

File: app/src/main/java/eu/faircode/email/ActivityEml.java
Patch:
@@ -127,7 +127,8 @@ protected Result onExecute(Context context, Bundle args) throws Throwable {
                     result.parts = HtmlHelper.fromHtml(sb.toString());
 
                     result.html = parts.getHtml(context);
-                    result.body = HtmlHelper.fromHtml(HtmlHelper.sanitize(context, result.html));
+                    if (result.html != null)
+                        result.body = HtmlHelper.fromHtml(HtmlHelper.sanitize(context, result.html));
 
                     ByteArrayOutputStream bos = new ByteArrayOutputStream();
                     mmessage.writeTo(bos);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3231,9 +3231,9 @@ private void onActionMoveJunk(ActionData data) {
         }
 
         private void onActionReplyMenu(final ActionData data) {
-            int cc = (data.message.cc == null ? 0 : data.message.cc.length);
+            Address[] all = data.message.getAll();
 
-            if (cc == 0 &&
+            if (all.length == 0 &&
                     data.message.list_post == null &&
                     data.message.receipt_to == null &&
                     (answers == 0 && Helper.isPro(context))) {
@@ -3244,7 +3244,7 @@ private void onActionReplyMenu(final ActionData data) {
             View anchor = bnvActions.findViewById(R.id.action_reply);
             PopupMenuLifecycle popupMenu = new PopupMenuLifecycle(context, powner, anchor);
             popupMenu.inflate(R.menu.menu_reply);
-            popupMenu.getMenu().findItem(R.id.menu_reply_to_all).setVisible(cc > 1);
+            popupMenu.getMenu().findItem(R.id.menu_reply_to_all).setVisible(all.length > 0);
             popupMenu.getMenu().findItem(R.id.menu_reply_list).setVisible(data.message.list_post != null);
             popupMenu.getMenu().findItem(R.id.menu_reply_receipt).setVisible(data.message.receipt_to != null);
             popupMenu.getMenu().findItem(R.id.menu_reply_answer).setVisible(answers != 0 || !Helper.isPro(context));

File: app/src/main/java/eu/faircode/email/WorkerPoll.java
Patch:
@@ -52,9 +52,9 @@ static void init(Context context) {
         int pollInterval = prefs.getInt("poll_interval", 0);
         if (enabled && pollInterval > 0) {
             Log.i("Queuing " + getName() + " every " + pollInterval + " minutes");
+
             PeriodicWorkRequest workRequest =
                     new PeriodicWorkRequest.Builder(WorkerPoll.class, pollInterval, TimeUnit.MINUTES)
-                            .setInitialDelay(pollInterval, TimeUnit.MINUTES)
                             .build();
             WorkManager.getInstance(context)
                     .enqueueUniquePeriodicWork(getName(), ExistingPeriodicWorkPolicy.REPLACE, workRequest);

File: app/src/main/java/eu/faircode/email/WorkerWatchdog.java
Patch:
@@ -56,10 +56,9 @@ static void init(Context context) {
 
             PeriodicWorkRequest workRequest =
                     new PeriodicWorkRequest.Builder(WorkerWatchdog.class, WATCHDOG_INTERVAL, TimeUnit.MINUTES)
-                            .setInitialDelay(WATCHDOG_INTERVAL, TimeUnit.MINUTES)
                             .build();
             WorkManager.getInstance(context)
-                    .enqueueUniquePeriodicWork(getName(), ExistingPeriodicWorkPolicy.KEEP, workRequest);
+                    .enqueueUniquePeriodicWork(getName(), ExistingPeriodicWorkPolicy.REPLACE, workRequest);
 
             Log.i("Queued " + getName());
         } else {

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -193,7 +193,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("debug", checked).apply();
-                grpDebug.setVisibility(checked ? View.VISIBLE : View.GONE);
+                grpDebug.setVisibility(checked || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
                 ServiceSynchronize.reload(getContext(), "debug=" + checked);
             }
         });
@@ -266,7 +266,7 @@ private void setOptions() {
         tvMemoryClass.setText(getString(R.string.title_advanced_memory_class, class_mb + " MB"));
         tvUuid.setText(prefs.getString("uuid", null));
 
-        grpDebug.setVisibility(swDebug.isChecked() ? View.VISIBLE : View.GONE);
+        grpDebug.setVisibility(swDebug.isChecked() || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
     }
 
     private void setLastCleanup(long time) {

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -384,8 +384,6 @@ static void channelsFromJSON(Context context, JSONArray jchannels) throws JSONEx
 
                 if (jchannel.has("group") && !jchannel.isNull("group"))
                     channel.setGroup(jchannel.getString("group"));
-                else
-                    channel.setGroup("contacts");
 
                 if (jchannel.has("description") && !jchannel.isNull("description"))
                     channel.setDescription(jchannel.getString("description"));

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -361,9 +361,6 @@ protected RefData onExecute(Context context, Bundle args) {
                 if (data.folders == null)
                     data.folders = new ArrayList<>();
 
-                for (EntityFolder folder : data.folders)
-                    folder.display = folder.getDisplayName(context);
-
                 if (data.folders.size() > 0)
                     Collections.sort(data.folders, data.folders.get(0).getComparator(context));
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -986,6 +986,8 @@ private void getMessageParts(Part part, MessageParts parts, boolean pgp) throws
                 String disposition;
                 try {
                     disposition = part.getDisposition();
+                    if (disposition != null)
+                        disposition = disposition.toLowerCase();
                 } catch (MessagingException ex) {
                     Log.w(ex);
                     parts.warnings.add(Helper.formatThrowable(ex));
@@ -1061,7 +1063,7 @@ private void getMessageParts(Part part, MessageParts parts, boolean pgp) throws
                         }
                     }
 
-                    if (apart.attachment.size < 0)
+                    if (apart.attachment.size <= 0)
                         apart.attachment.size = null;
 
                     // https://tools.ietf.org/html/rfc2392

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -768,7 +768,7 @@ static void onSynchronizeFolders(Context context, EntityAccount account, Store i
         DB db = DB.getInstance(context);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        boolean subscribed_only = prefs.getBoolean("subscribed_only", true);
+        boolean subscribed_only = prefs.getBoolean("subscribed_only", false);
 
         Log.i("Start sync folders account=" + account.name);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -243,7 +243,7 @@ private void setOptions() {
 
         swBadge.setChecked(prefs.getBoolean("badge", true));
         swSubscriptions.setChecked(prefs.getBoolean("subscriptions", false));
-        swSubscribedOnly.setChecked(prefs.getBoolean("subscribed_only", true));
+        swSubscribedOnly.setChecked(prefs.getBoolean("subscribed_only", false));
         swEnglish.setChecked(prefs.getBoolean("english", false));
         swAuthentication.setChecked(prefs.getBoolean("authentication", false));
         swParanoid.setChecked(prefs.getBoolean("paranoid", true));

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -190,7 +190,7 @@ private void unwire() {
         }
 
         private void bindTo(final TupleFolderEx folder) {
-            view.setVisibility(folder.isHidden(context) && !show_hidden ? View.GONE : View.VISIBLE);
+            view.setVisibility(folder.hide && !show_hidden ? View.GONE : View.VISIBLE);
             view.setActivated(folder.tbc != null || folder.tbd != null);
             vwHidden.setAlpha(folder.hide ? Helper.LOW_LIGHT : 0.0f);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3194,7 +3194,7 @@ protected List<EntityFolder> onExecute(Context context, Bundle args) {
 
                     List<EntityFolder> targets = new ArrayList<>();
                     for (EntityFolder folder : folders)
-                        if (!folder.isHidden(context) &&
+                        if (!folder.hide &&
                                 !folder.id.equals(message.folder) &&
                                 (copy ||
                                         (!EntityFolder.ARCHIVE.equals(folder.type) &&

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1392,7 +1392,7 @@ protected MoreResult onExecute(Context context, Bundle args) {
                     List<EntityFolder> targets = new ArrayList<>();
                     List<EntityFolder> folders = db.folder().getFolders(account.id);
                     for (EntityFolder target : folders)
-                        if (!target.isHidden(context) &&
+                        if (!target.hide &&
                                 !EntityFolder.ARCHIVE.equals(target.type) &&
                                 !EntityFolder.TRASH.equals(target.type) &&
                                 !EntityFolder.JUNK.equals(target.type) &&

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -252,7 +252,7 @@ private void setOptions() {
 
         swBadge.setChecked(prefs.getBoolean("badge", true));
         swSubscriptions.setChecked(prefs.getBoolean("subscriptions", false));
-        swSubscribedOnly.setChecked(prefs.getBoolean("subscribed_only", false));
+        swSubscribedOnly.setChecked(prefs.getBoolean("subscribed_only", true));
         swEnglish.setChecked(prefs.getBoolean("english", false));
         swAuthentication.setChecked(prefs.getBoolean("authentication", false));
         swParanoid.setChecked(prefs.getBoolean("paranoid", true));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3223,8 +3223,8 @@ private void onActionArchive(ActionData data) {
 
         private void onActionReplyMenu(final ActionData data) {
             int recipients = 0;
-            if (data.message.to != null)
-                recipients += data.message.to.length;
+            if (data.message.from != null)
+                recipients += data.message.from.length;
             if (data.message.cc != null)
                 recipients += data.message.cc.length;
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -100,6 +100,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         private TextView tvName;
         private TextView tvMessages;
         private ImageView ivMessages;
+        private ImageView ivType;
         private ImageView ivUnified;
         private TextView tvType;
         private TextView tvAfter;
@@ -129,6 +130,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
             tvName = itemView.findViewById(R.id.tvName);
             tvMessages = itemView.findViewById(R.id.tvMessages);
             ivMessages = itemView.findViewById(R.id.ivMessages);
+            ivType = itemView.findViewById(R.id.ivType);
             ivUnified = itemView.findViewById(R.id.ivUnified);
             tvType = itemView.findViewById(R.id.tvType);
             tvAfter = itemView.findViewById(R.id.tvAfter);
@@ -264,6 +266,7 @@ else if ("downloading".equals(folder.sync_state))
             ivMessages.setImageResource(folder.download || EntityFolder.OUTBOX.equals(folder.type)
                     ? R.drawable.baseline_mail_24 : R.drawable.baseline_mail_outline_24);
 
+            ivType.setImageResource(EntityFolder.getIcon(folder.type));
             ivUnified.setVisibility(account > 0 && folder.unified ? View.VISIBLE : View.GONE);
 
             if (account < 0)

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -205,6 +205,8 @@ static int getIcon(String type) {
             return R.drawable.baseline_inbox_24;
         if (EntityFolder.DRAFTS.equals(type))
             return R.drawable.baseline_drafts_24;
+        if (EntityFolder.SENT.equals(type))
+            return R.drawable.baseline_send_24;
         if (EntityFolder.ARCHIVE.equals(type))
             return R.drawable.baseline_archive_24;
         if (EntityFolder.TRASH.equals(type))

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -665,7 +665,7 @@ public int compare(EntityFolder f1, EntityFolder f2) {
                         ConnectionHelper.connect(this, istore, account);
                     } catch (Throwable ex) {
                         // Report account connection error
-                        if (account.last_connected != null) {
+                        if (account.last_connected != null && !ConnectionHelper.airplaneMode(this)) {
                             EntityLog.log(this, account.name + " last connected: " + new Date(account.last_connected));
                             long now = new Date().getTime();
                             long delayed = now - account.last_connected - account.poll_interval * 60 * 1000L;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -3203,6 +3203,8 @@ public boolean onBackPressed() {
             boolean collapse = prefs.getBoolean("collapse", false);
             if ((count == 1 && collapse) || count > 1) {
                 values.get("expanded").clear();
+                ibDown.setVisibility(View.GONE);
+                ibUp.setVisibility(View.GONE);
                 adapter.notifyDataSetChanged();
                 return true;
             }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1432,6 +1432,7 @@ private void setFolders(List<EntityFolder> _folders, EntityAccount account) {
         none.name = "-";
         folders.add(0, none);
 
+        adapter.clear();
         adapter.addAll(folders);
 
         Long left = (account == null ? null : account.swipe_left);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -237,8 +237,8 @@ public boolean run(@NonNull Error error) {
 
     static void upgrade(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        int version = prefs.getInt("version", 468);
-        if (version < BuildConfig.VERSION_CODE) {
+        int version = prefs.getInt("version", BuildConfig.VERSION_CODE);
+        if (version < 468) {
             Log.i("Upgrading from " + version + " to " + BuildConfig.VERSION_CODE);
 
             SharedPreferences.Editor editor = prefs.edit();

File: app/src/main/java/androidx/recyclerview/selection/GestureSelectionHelper.java
Patch:
@@ -98,7 +98,7 @@ public boolean onInterceptTouchEvent(@NonNull RecyclerView unused, @NonNull Moti
             case MotionEvent.ACTION_MOVE:
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
-                return mStarted;
+                return mStarted && mSelectionMgr.isRangeActive();
             default:
                 return false;
         }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -182,7 +182,8 @@ static void processOperations(
 
                         // Operations should use database transaction when needed
 
-                        db.operation().setOperationState(op.id, "executing");
+                        if (!EntityOperation.SYNC.equals(op.name))
+                            db.operation().setOperationState(op.id, "executing");
 
                         switch (op.name) {
                             case EntityOperation.SEEN:

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -405,10 +405,10 @@ public boolean onLongClick(View v) {
                     NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
                     NotificationChannel channel = nm.getNotificationChannel(channelId);
                     if (channel == null)
-                        popupMenu.getMenu().add(Menu.NONE, R.string.title_create_channel, 6, R.string.title_create_channel);
+                        popupMenu.getMenu().add(Menu.NONE, R.string.title_create_channel, 8, R.string.title_create_channel);
                     else {
-                        popupMenu.getMenu().add(Menu.NONE, R.string.title_edit_channel, 7, R.string.title_edit_channel);
-                        popupMenu.getMenu().add(Menu.NONE, R.string.title_delete_channel, 8, R.string.title_delete_channel);
+                        popupMenu.getMenu().add(Menu.NONE, R.string.title_edit_channel, 9, R.string.title_edit_channel);
+                        popupMenu.getMenu().add(Menu.NONE, R.string.title_delete_channel, 10, R.string.title_delete_channel);
                     }
                 }
             }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1191,7 +1191,7 @@ private void onColor(final Intent intent) {
         int color = intent.getIntExtra("color", -1);
         int[] colors = getResources().getIntArray(R.array.colorPicker);
         ColorPickerDialog colorPickerDialog = new ColorPickerDialog();
-        colorPickerDialog.initialize(R.string.title_account_color, colors, color, 4, colors.length);
+        colorPickerDialog.initialize(R.string.title_flag_color, colors, color, 4, colors.length);
         colorPickerDialog.setOnColorSelectedListener(new ColorPickerSwatch.OnColorSelectedListener() {
             @Override
             public void onColorSelected(int color) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3201,7 +3201,7 @@ else if (size == 1.0)
 
                     int[] colors = getContext().getResources().getIntArray(R.array.colorPicker);
                     ColorPickerDialog colorPickerDialog = new ColorPickerDialog();
-                    colorPickerDialog.initialize(R.string.title_account_color, colors, color, 4, colors.length);
+                    colorPickerDialog.initialize(R.string.title_style_color, colors, color, 4, colors.length);
                     colorPickerDialog.setOnColorSelectedListener(new ColorPickerSwatch.OnColorSelectedListener() {
                         @Override
                         public void onColorSelected(int color) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1653,7 +1653,7 @@ private void onActionFlagColorSelection() {
 
         int[] colors = getResources().getIntArray(R.array.colorPicker);
         ColorPickerDialog colorPickerDialog = new ColorPickerDialog();
-        colorPickerDialog.initialize(R.string.title_account_color, colors, Color.TRANSPARENT, 4, colors.length);
+        colorPickerDialog.initialize(R.string.title_flag_color, colors, Color.TRANSPARENT, 4, colors.length);
         colorPickerDialog.setOnColorSelectedListener(new ColorPickerSwatch.OnColorSelectedListener() {
             @Override
             public void onColorSelected(int color) {

File: app/src/main/java/eu/faircode/email/FragmentRule.java
Patch:
@@ -276,7 +276,7 @@ public void onClick(View v) {
                 int color = (FragmentRule.this.color == null ? Color.TRANSPARENT : FragmentRule.this.color);
                 int[] colors = getContext().getResources().getIntArray(R.array.colorPicker);
                 ColorPickerDialog colorPickerDialog = new ColorPickerDialog();
-                colorPickerDialog.initialize(R.string.title_account_color, colors, color, 4, colors.length);
+                colorPickerDialog.initialize(R.string.title_flag_color, colors, color, 4, colors.length);
                 colorPickerDialog.setOnColorSelectedListener(new ColorPickerSwatch.OnColorSelectedListener() {
                     @Override
                     public void onColorSelected(int color) {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1368,7 +1368,7 @@ protected MoreResult onExecute(Context context, Bundle args) {
                     List<EntityFolder> targets = new ArrayList<>();
                     List<EntityFolder> folders = db.folder().getFolders(account.id);
                     for (EntityFolder target : folders)
-                        if (!target.isHidden(getContext()) &&
+                        if (!target.isHidden(context) &&
                                 !EntityFolder.ARCHIVE.equals(target.type) &&
                                 !EntityFolder.TRASH.equals(target.type) &&
                                 !EntityFolder.JUNK.equals(target.type) &&

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -184,16 +184,17 @@ else if (MOVE.equals(name)) {
                     EntityAttachment.copy(context, message.id, tmpid);
                 }
 
-                // Cross account move
                 if (source.account.equals(target.account))
                     jargs.put(2, tmpid); // Can be null
                 else {
+                    // Cross account move
                     if (message.raw != null && message.raw) {
                         name = ADD;
                         folder = target.id;
                         jargs = new JSONArray();
                         jargs.put(0, tmpid); // Can be null
                         jargs.put(1, autoread);
+                        jargs.put(2, true); // Cross account
                     } else {
                         name = RAW;
                         jargs = new JSONArray();

File: app/src/main/java/eu/faircode/email/FixedRecyclerView.java
Patch:
@@ -60,7 +60,7 @@ public boolean onTouchEvent(MotionEvent e) {
                 at androidx.recyclerview.widget.RecyclerView.dispatchOnItemTouch(SourceFile:2947)
                 at androidx.recyclerview.widget.RecyclerView.onTouchEvent(SourceFile:3090)
              */
-            Log.w(ex);
+            Log.i(ex);
             return false;
         } catch (NullPointerException ex) {
             /*

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -3187,7 +3187,7 @@ else if (size == 1.0)
 
                     etBody.setText(ss);
                     etBody.setSelection(end);
-                    return false;
+                    return true;
                 }
 
                 case R.string.title_style_color: {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2573,7 +2573,8 @@ private void loadMessagesNext(final boolean top) {
             if (boundaryCallback == null)
                 boundaryCallback = new BoundaryCallbackMessages(
                         getContext(), getViewLifecycleOwner(),
-                        folder, server, query, REMOTE_PAGE_SIZE,
+                        folder, server || viewType == AdapterMessage.ViewType.FOLDER,
+                        query, REMOTE_PAGE_SIZE,
                         new BoundaryCallbackMessages.IBoundaryCallbackMessages() {
                             @Override
                             public void onLoading() {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1067,7 +1067,7 @@ private void onViewMessages(Intent intent) {
 
     private void onSearchMessages(Intent intent) {
         long folder = intent.getLongExtra("folder", -1);
-        String query = intent.getStringExtra("search");
+        String query = intent.getStringExtra("query");
         FragmentMessages.search(
                 this, this, getSupportFragmentManager(),
                 folder, false, query);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2682,7 +2682,7 @@ public void run() {
                     // Delay sending message
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
                     int send_delayed = prefs.getInt("send_delayed", 0);
-                    if (send_delayed != 0) {
+                    if (draft.ui_snoozed == null && send_delayed != 0) {
                         draft.ui_snoozed = new Date().getTime() + send_delayed * 1000L;
                         db.message().setMessageSnoozed(draft.id, draft.ui_snoozed);
                     }

File: app/src/main/java/eu/faircode/email/WorkerWatchdog.java
Patch:
@@ -55,7 +55,7 @@ static void init(Context context) {
             Log.i("Queuing " + getName() + " every " + WATCHDOG_INTERVAL + " minutes");
 
             PeriodicWorkRequest workRequest =
-                    new PeriodicWorkRequest.Builder(WorkerCleanup.class, WATCHDOG_INTERVAL, TimeUnit.MINUTES)
+                    new PeriodicWorkRequest.Builder(WorkerWatchdog.class, WATCHDOG_INTERVAL, TimeUnit.MINUTES)
                             .build();
             WorkManager.getInstance(context)
                     .enqueueUniquePeriodicWork(getName(), ExistingPeriodicWorkPolicy.KEEP, workRequest);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -208,6 +208,7 @@ public boolean run(@NonNull Report report) {
                     if (ex instanceof FileNotFoundException &&
                             ex.getMessage() != null &&
                             (ex.getMessage().startsWith("Download image failed") ||
+                                    ex.getMessage().startsWith("https://ipinfo.io/") ||
                                     ex.getMessage().startsWith("https://autoconfig.thunderbird.net/")))
                         return false;
                 }

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -172,6 +172,7 @@ static void processOperations(
 
                         if (message != null && message.uid == null &&
                                 !(EntityOperation.ADD.equals(op.name) ||
+                                        EntityOperation.ANSWERED.equals(op.name) ||
                                         EntityOperation.DELETE.equals(op.name) ||
                                         EntityOperation.SEND.equals(op.name) ||
                                         EntityOperation.SYNC.equals(op.name) ||

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -198,7 +198,9 @@ JSONArray getSyncArgs() {
 
     static int getIcon(String type) {
         if (EntityFolder.INBOX.equals(type))
-            return R.drawable.baseline_move_to_inbox_24;
+            return R.drawable.baseline_inbox_24;
+        if (EntityFolder.DRAFTS.equals(type))
+            return R.drawable.baseline_drafts_24;
         if (EntityFolder.ARCHIVE.equals(type))
             return R.drawable.baseline_archive_24;
         if (EntityFolder.TRASH.equals(type))

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -103,7 +103,8 @@ public void uncaughtException(Thread thread, Throwable ex) {
             }
         });
 
-        setupBugsnag();
+        if ("eu.faircode.email".equals(BuildConfig.APPLICATION_ID))
+            setupBugsnag();
 
         upgrade(this);
 

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -192,7 +192,7 @@ private void setOptions() {
                 break;
             }
 
-        swRlah.setChecked(prefs.getBoolean("rlah", false));
+        swRlah.setChecked(prefs.getBoolean("rlah", true));
         swRoaming.setChecked(prefs.getBoolean("roaming", true));
     }
 

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -866,7 +866,7 @@ public void update(NetworkState newState) {
     static NetworkState getNetworkState(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         boolean metered = prefs.getBoolean("metered", true);
-        boolean rlah = prefs.getBoolean("rlah", false);
+        boolean rlah = prefs.getBoolean("rlah", true);
         boolean roaming = prefs.getBoolean("roaming", true);
 
         NetworkState state = new NetworkState();

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -132,9 +132,6 @@ public interface DaoAccount {
     @Query("UPDATE account SET last_connected = NULL")
     int clearAccountConnected();
 
-    @Query("UPDATE account SET `order` = NULL")
-    int resetAccountOrder();
-
     @Query("DELETE FROM account WHERE tbd = 1")
     int deleteAccountsTbd();
 }

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -236,9 +236,6 @@ int setFolderProperties(
     @Query("UPDATE folder SET read_only = :read_only WHERE id = :id")
     int setFolderReadOnly(long id, boolean read_only);
 
-    @Query("UPDATE folder SET `order` = NULL")
-    int resetFolderOrder();
-
     @Query("UPDATE folder SET tbc = null WHERE id = :id")
     int resetFolderTbc(long id);
 

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -113,6 +113,8 @@ else if (BuildConfig.BETA_RELEASE)
 
         config.setAutoCaptureSessions(false);
 
+        config.setDetectAnrs(false);
+
         List<String> ignore = new ArrayList<>();
         ignore.add("javax.mail.MessageRemovedException");
         if (!BuildConfig.BETA_RELEASE) {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -69,6 +69,7 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.bugsnag.android.Bugsnag;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.json.JSONArray;
@@ -706,6 +707,7 @@ public void onClick(DialogInterface dialog, int which) {
                         prefs.edit().putBoolean("crash_reports", true).apply();
                         if (cbNotAgain.isChecked())
                             prefs.edit().putBoolean("crash_reports_confirmed", true).apply();
+                        Bugsnag.startSession();
                     }
                 })
                 .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -62,7 +62,7 @@ public class FragmentOptionsMisc extends FragmentBase implements SharedPreferenc
     };
 
     private final static String[] RESET_QUESTIONS = new String[]{
-            "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "edit_ref_confirmed"
+            "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "edit_ref_confirmed", "crash_reports_confirmed"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -61,7 +61,7 @@ public class FragmentOptionsMisc extends FragmentBase implements SharedPreferenc
     };
 
     private final static String[] RESET_QUESTIONS = new String[]{
-            "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "edit_ref_confirmed", "automove", "autosend"
+            "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "edit_ref_confirmed"
     };
 
     @Override

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -811,7 +811,7 @@ else if (content instanceof InputStream)
             }
 
             if (part.isMimeType("text/plain") || text) {
-                result = Html.escapeHtml(result);
+                result = TextUtils.htmlEncode(result);
                 result = result.replaceAll("\\r?\\n", "<br />");
                 result = "<span>" + result + "</span>";
             }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1850,8 +1850,8 @@ public void onChanged(TupleThreadStats stats) {
                         setSubtitle(getString(R.string.title_folder_thread,
                                 stats == null || stats.accountName == null ? "" : stats.accountName));
 
-                        if (stats != null && stats.count != null && stats.unseen != null) {
-                            int unseen = stats.count - stats.unseen;
+                        if (stats != null && stats.count != null && stats.seen != null) {
+                            int unseen = stats.count - stats.seen;
                             if (lastUnseen == null || lastUnseen != unseen) {
                                 if (autoscroll && lastUnseen != null && lastUnseen < unseen)
                                     loadMessages(true);

File: app/src/main/java/eu/faircode/email/TupleThreadStats.java
Patch:
@@ -3,5 +3,5 @@
 public class TupleThreadStats {
     String accountName;
     Integer count;
-    Integer unseen;
+    Integer seen;
 }

File: app/src/main/java/eu/faircode/email/FragmentOptionsBehavior.java
Patch:
@@ -83,6 +83,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         swPrefixOnce = view.findViewById(R.id.swPrefixOnce);
         swAutoSend = view.findViewById(R.id.swAutoSend);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -187,7 +189,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/FragmentOptionsConnection.java
Patch:
@@ -71,6 +71,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         spDownload = view.findViewById(R.id.spDownload);
         swRoaming = view.findViewById(R.id.swRoaming);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -104,7 +106,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/FragmentOptionsDisplay.java
Patch:
@@ -84,6 +84,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         swImages = view.findViewById(R.id.swImages);
         swActionbar = view.findViewById(R.id.swActionbar);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -202,7 +204,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/FragmentOptionsMisc.java
Patch:
@@ -84,6 +84,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         grpSearchLocal = view.findViewById(R.id.grpSearchLocal);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -166,7 +168,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
 
         setLastCleanup(prefs.getLong("last_cleanup", -1));
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/FragmentOptionsNotifications.java
Patch:
@@ -81,6 +81,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         grpNotification = view.findViewById(R.id.grpNotification);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -148,7 +150,6 @@ public void onClick(View v) {
             }
         });
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/FragmentOptionsSynchronize.java
Patch:
@@ -79,6 +79,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         swUnseen = view.findViewById(R.id.swUnseen);
         swFlagged = view.findViewById(R.id.swFlagged);
 
+        setOptions();
+
         // Wire controls
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
@@ -173,7 +175,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        setOptions();
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -21,9 +21,9 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import androidx.annotation.NonNull;
+import androidx.preference.PreferenceManager;
 import androidx.room.Entity;
 import androidx.room.ForeignKey;
 import androidx.room.Index;

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -24,7 +24,6 @@
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -39,6 +38,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.preference.PreferenceManager;
 
 import com.google.android.material.snackbar.Snackbar;
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -29,13 +29,13 @@
 import android.net.NetworkCapabilities;
 import android.net.NetworkRequest;
 import android.os.PowerManager;
-import android.preference.PreferenceManager;
 import android.text.TextUtils;
 
 import androidx.core.app.NotificationCompat;
 import androidx.core.content.ContextCompat;
 import androidx.lifecycle.LifecycleService;
 import androidx.lifecycle.Observer;
+import androidx.preference.PreferenceManager;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -23,9 +23,9 @@
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.os.Build;
-import android.preference.PreferenceManager;
 
 import androidx.annotation.NonNull;
+import androidx.preference.PreferenceManager;
 import androidx.work.Constraints;
 import androidx.work.ExistingPeriodicWorkPolicy;
 import androidx.work.PeriodicWorkRequest;

File: app/src/main/java/eu/faircode/email/WorkerPoll.java
Patch:
@@ -21,9 +21,9 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import androidx.annotation.NonNull;
+import androidx.preference.PreferenceManager;
 import androidx.work.ExistingPeriodicWorkPolicy;
 import androidx.work.PeriodicWorkRequest;
 import androidx.work.WorkManager;

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -223,7 +223,7 @@ public boolean uiEquals(Object obj) {
                     Objects.equals(this.subject, other.subject) &&
                     Objects.equals(this.size, other.size) &&
                     this.content == other.content &&
-                    // plain_only
+                    Objects.equals(this.plain_only, other.plain_only) &&
                     Objects.equals(this.preview, other.preview) &&
                     // sent
                     this.received.equals(other.received) &&

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -381,8 +381,7 @@ public void onChanged(List<TupleFolderNav> folders) {
         db.operation().liveStats().observe(this, new Observer<TupleOperationStats>() {
             @Override
             public void onChanged(TupleOperationStats stats) {
-                navOperations.setIcon(stats == null || stats.errors == null || stats.errors == 0
-                        ? R.drawable.baseline_list_24 : R.drawable.baseline_warning_24);
+                navOperations.setWarning(stats != null && stats.errors != null && stats.errors > 0);
                 navOperations.setCount(stats == null ? 0 : stats.pending);
                 madapter.notifyDataSetChanged();
             }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -706,7 +706,8 @@ public void setValue(String name, long id, boolean enabled) {
             if (!values.containsKey(name))
                 values.put(name, new ArrayList<Long>());
             if (enabled) {
-                values.get(name).add(id);
+                if (!values.get(name).contains(id))
+                    values.get(name).add(id);
                 if ("expanded".equals(name))
                     handleExpand(id);
             } else

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -213,14 +213,14 @@ else if ("closing".equals(folder.state))
                 else if (folder.state == null)
                     ivState.setImageResource(R.drawable.baseline_cloud_off_24);
                 else
-                    ivState.setImageResource(android.R.drawable.stat_sys_warning);
+                    ivState.setImageResource(R.drawable.baseline_warning_24);
             } else {
                 if ("syncing".equals(folder.sync_state))
                     ivState.setImageResource(R.drawable.baseline_compare_arrows_24);
                 else if ("downloading".equals(folder.sync_state))
                     ivState.setImageResource(R.drawable.baseline_cloud_download_24);
                 else
-                    ivState.setImageResource(android.R.drawable.stat_sys_warning);
+                    ivState.setImageResource(R.drawable.baseline_warning_24);
             }
             ivState.setVisibility(
                     folder.synchronize || folder.state != null || folder.sync_state != null

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1578,6 +1578,8 @@ private void onShowFull(TupleMessageEx message) {
             boolean show_images = properties.getValue("images", message.id);
 
             WebSettings settings = webView.getSettings();
+            settings.setDefaultFontSize(Math.round(textSize));
+            settings.setDefaultFixedFontSize(Math.round(textSize));
             settings.setLoadsImagesAutomatically(show_images);
             settings.setBuiltInZoomControls(true);
             settings.setDisplayZoomControls(false);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1241,7 +1241,7 @@ public void onPageFinished(WebView view, String url) {
                     }
                 });
 
-                printWebView.loadDataWithBaseURL("email://", data[1], "text/html", "UTF-8", null);
+                printWebView.loadDataWithBaseURL(null, data[1], "text/html", "UTF-8", null);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -325,7 +325,7 @@ public void run() {
         }, new Runnable() {
             @Override
             public void run() {
-                if (Helper.isPlayStoreInstall(ActivityView.this)) {
+                if (!Helper.isPlayStoreInstall(ActivityView.this)) {
                     drawerLayout.closeDrawer(drawerContainer);
                     checkUpdate(true);
                 }

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -253,7 +253,6 @@ public boolean onQueryTextSubmit(String query) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_search).setVisible(!settings);
-        menu.findItem(R.id.menu_reset_order).setVisible(settings);
 
         super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2415,6 +2415,7 @@ protected EntityMessage onExecute(final Context context, Bundle args) throws Thr
 
                 // Move draft to new account
                 if (draft.account != aid && aid >= 0) {
+                    Log.i("Account changed");
                     Long uid = draft.uid;
                     String msgid = draft.msgid;
 
@@ -2440,6 +2441,7 @@ protected EntityMessage onExecute(final Context context, Bundle args) throws Thr
                     draft.msgid = EntityMessage.generateMessageId();
                     draft.content = true;
                     draft.ui_hide = false;
+                    db.message().updateMessage(draft);
                     EntityOperation.queue(context, db, draft, EntityOperation.ADD);
                 }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -688,7 +688,7 @@ static String formatAddresses(Address[] addresses, boolean full, boolean compose
         return TextUtils.join(", ", formatted);
     }
 
-    private static String decodeMime(String text) {
+    static String decodeMime(String text) {
         if (text == null)
             return null;
 
@@ -699,7 +699,7 @@ private static String decodeMime(String text) {
             String decode = text.substring(s, e + 2);
             try {
                 String decoded = MimeUtility.decodeText(decode);
-                text = text.substring(0, i) + decoded + text.substring(e + 2);
+                text = text.substring(0, s) + decoded + text.substring(e + 2);
                 i += decoded.length();
             } catch (UnsupportedEncodingException ex) {
                 Log.w(ex);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -136,7 +136,7 @@ public class FragmentOptions extends FragmentBase implements SharedPreferences.O
             "addresses", "monospaced", "autohtml", "autoimages", "actionbar",
             "pull", "swipenav", "autoexpand", "autoclose", "autonext", "collapse", "autoread", "automove",
             "autoresize", "resize", "prefix_once", "autosend",
-            "subscriptions", "notify_preview", "search_local", "light", "sound",
+            "badge", "subscriptions", "notify_preview", "search_local", "light", "sound",
             "authentication", "paranoid", "english", "updates", "debug",
             "first", "why", "last_update_check", "app_support", "message_swipe", "message_select", "folder_actions", "folder_sync",
             "edit_ref_confirmed", "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "show_organization", "style_toolbar"

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -268,6 +268,7 @@ public boolean equals(Object obj) {
                     this.collapsed == other.collapsed &&
                     this.unified == other.unified &&
                     this.notify == other.notify &&
+                    Objects.equals(this.subscribed, other.subscribed) &&
                     Objects.equals(this.total, other.total) &&
                     Helper.equal(this.keywords, other.keywords) &&
                     Objects.equals(this.tbd, other.tbd) &&

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -205,6 +205,7 @@ public boolean equals(Object obj) {
                     Objects.equals(this.realm, other.realm) &&
                     Objects.equals(this.name, other.name) &&
                     Objects.equals(this.color, other.color) &&
+                    Objects.equals(this.order, other.order) &&
                     this.synchronize.equals(other.synchronize) &&
                     this.primary.equals(other.primary) &&
                     this.notify.equals(other.notify) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3080,7 +3080,7 @@ Long getKey() {
                 PackageManager.COMPONENT_ENABLED_STATE_ENABLED);
         this.avatars = (prefs.getBoolean("avatars", true) ||
                 prefs.getBoolean("identicons", false));
-        this.circular = prefs.getBoolean("circular", false);
+        this.circular = prefs.getBoolean("circular", true);
         this.flags = prefs.getBoolean("flags", true);
         this.preview = prefs.getBoolean("preview", false);
         this.autohtml = prefs.getBoolean("autohtml", false);

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -695,7 +695,7 @@ private void setOptions() {
         swThreading.setChecked(prefs.getBoolean("threading", true));
         swAvatars.setChecked(prefs.getBoolean("avatars", true));
         swIdenticons.setChecked(prefs.getBoolean("identicons", false));
-        swCircular.setChecked(prefs.getBoolean("circular", false));
+        swCircular.setChecked(prefs.getBoolean("circular", true));
         swNameEmail.setChecked(prefs.getBoolean("name_email", !compact));
         swSubjectItalic.setChecked(prefs.getBoolean("subject_italic", true));
         swFlags.setChecked(prefs.getBoolean("flags", true));

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1376,7 +1376,7 @@ private static void updateContactInfo(Context context, EntityFolder folder, Enti
                     String email = ((InternetAddress) reply).getAddress();
                     String canonical = Helper.canonicalAddress(email);
                     if (!TextUtils.isEmpty(email) &&
-                            db.identity().getIdentity(folder.account, email.toLowerCase()) == null &&
+                            db.identity().getIdentity(folder.account, email) == null &&
                             (canonical.equals(email) ||
                                     db.identity().getIdentity(folder.account, canonical) == null)) {
                         me = false;
@@ -1388,7 +1388,7 @@ private static void updateContactInfo(Context context, EntityFolder folder, Enti
             }
 
             for (Address recipient : recipients) {
-                String email = ((InternetAddress) recipient).getAddress().toLowerCase();
+                String email = ((InternetAddress) recipient).getAddress();
                 String name = ((InternetAddress) recipient).getPersonal();
                 Uri avatar = ContactInfo.getLookupUri(context, new Address[]{recipient});
                 EntityContact contact = db.contact().getContact(folder.account, type, email);

File: app/src/main/java/eu/faircode/email/DaoContact.java
Patch:
@@ -55,7 +55,7 @@ public interface DaoContact {
             " FROM contact" +
             " WHERE account = :account" +
             " AND type = :type" +
-            " AND email = :email")
+            " AND email = :email COLLATE NOCASE")
     EntityContact getContact(long account, int type, String email);
 
     @Query("SELECT id AS _id, name, email" +

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -47,6 +47,7 @@ public class ActivityCompose extends ActivityBilling implements FragmentManager.
     static final int REQUEST_IMAGE = 4;
     static final int REQUEST_ATTACHMENT = 5;
     static final int REQUEST_ENCRYPT = 6;
+    static final int REQUEST_SIGN = 7;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -284,12 +284,12 @@ public String getContentType(String filename) {
                 return imessage;
             }
 
-        build(context, message, identity, imessage);
+        build(context, message, attachments, identity, imessage);
 
         return imessage;
     }
 
-    static void build(Context context, EntityMessage message, EntityIdentity identity, MimeMessage imessage) throws IOException, MessagingException {
+    static void build(Context context, EntityMessage message, List<EntityAttachment> attachments, EntityIdentity identity, MimeMessage imessage) throws IOException, MessagingException {
         DB db = DB.getInstance(context);
 
         if (message.receipt_request != null && message.receipt_request) {
@@ -350,7 +350,6 @@ static void build(Context context, EntityMessage message, EntityIdentity identit
         alternativePart.addBodyPart(htmlPart);
 
         int available = 0;
-        List<EntityAttachment> attachments = db.attachment().getAttachments(message.id);
         for (EntityAttachment attachment : attachments)
             if (attachment.available)
                 available++;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1305,12 +1305,12 @@ private void onActionSnoozeSelection() {
                     @Override
                     public void onDurationSelected(long duration, long time) {
                         if (Helper.isPro(getContext())) {
-                            selectionTracker.clearSelection();
-
                             Bundle args = new Bundle();
                             args.putLongArray("ids", getSelection());
                             args.putLong("wakeup", duration == 0 ? -1 : time);
 
+                            selectionTracker.clearSelection();
+
                             new SimpleTask<Void>() {
                                 @Override
                                 protected Void onExecute(Context context, Bundle args) {

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -44,7 +44,7 @@
 public class EntityAccount implements Serializable {
     static final String TABLE_NAME = "account";
 
-    static final int DEFAULT_KEEP_ALIVE_INTERVAL = 9; // minutes
+    static final int DEFAULT_KEEP_ALIVE_INTERVAL = 19; // minutes
 
     @PrimaryKey(autoGenerate = true)
     public Long id;

File: app/src/main/java/eu/faircode/email/AdapterContact.java
Patch:
@@ -25,7 +25,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.text.TextUtils;
-import android.text.format.DateUtils;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -108,7 +107,7 @@ else if (contact.type == EntityContact.TYPE_TO)
             tvEmail.setText(contact.accountName + "/" + contact.email);
             tvTimes.setText(nf.format(contact.times_contacted));
             tvLast.setText(contact.last_contacted == null ? null
-                    : DateUtils.getRelativeTimeSpanString(context, contact.last_contacted));
+                    : Helper.getRelativeTimeSpanString(context, contact.last_contacted));
 
             ivFavorite.setImageResource(contact.state == EntityContact.STATE_FAVORITE
                     ? R.drawable.baseline_star_24 : R.drawable.baseline_star_border_24);

File: app/src/main/java/eu/faircode/email/AdapterLog.java
Patch:
@@ -41,7 +41,7 @@ public class AdapterLog extends RecyclerView.Adapter<AdapterLog.ViewHolder> {
 
     private List<EntityLog> items = new ArrayList<>();
 
-    private DateFormat DF = SimpleDateFormat.getTimeInstance();
+    private DateFormat TF = SimpleDateFormat.getTimeInstance();
 
     public class ViewHolder extends RecyclerView.ViewHolder {
         private TextView tvTime;
@@ -55,7 +55,7 @@ public class ViewHolder extends RecyclerView.ViewHolder {
         }
 
         private void bindTo(EntityLog log) {
-            tvTime.setText(DF.format(log.time));
+            tvTime.setText(TF.format(log.time));
             tvData.setText(log.data);
         }
     }

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -23,7 +23,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.text.format.DateUtils;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -99,7 +98,7 @@ private void bindTo(TupleOperationEx operation) {
 
             tvFolder.setText(folderName);
             tvOperation.setText(sb.toString());
-            tvTime.setText(DateUtils.getRelativeTimeSpanString(context, operation.created));
+            tvTime.setText(Helper.getRelativeTimeSpanString(context, operation.created));
             tvError.setText(operation.error);
             tvError.setVisibility(operation.error == null ? View.GONE : View.VISIBLE);
         }

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -89,7 +89,7 @@ public interface DaoAccount {
             "    WHERE account.synchronize) AS operations")
     LiveData<TupleAccountStats> liveStats();
 
-    @Query("SELECT account.id, l.id, l.type AS left_type, r.id, r.type AS right_type" +
+    @Query("SELECT account.id, l.id AS swipe_left, l.type AS left_type, r.id AS swipe_right, r.type AS right_type" +
             " FROM account" +
             " LEFT JOIN folder l ON l.id = account.swipe_left" +
             " LEFT JOIN folder r ON r.id = account.swipe_right")

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -89,7 +89,7 @@ public interface DaoAccount {
             "    WHERE account.synchronize) AS operations")
     LiveData<TupleAccountStats> liveStats();
 
-    @Query("SELECT account.id, swipe_left, l.type AS left_type, swipe_right, r.type AS right_type" +
+    @Query("SELECT account.id, l.id, l.type AS left_type, r.id, r.type AS right_type" +
             " FROM account" +
             " LEFT JOIN folder l ON l.id = account.swipe_left" +
             " LEFT JOIN folder r ON r.id = account.swipe_right")

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -400,7 +400,7 @@ private static void onAdd(Context context, JSONArray jargs, EntityFolder folder,
 
         // Delete previous message(s) with same ID
         if (folder.id.equals(message.folder)) {
-            // Prevent deleting message
+            // Prevent adding/deleting message
             db.message().setMessageUid(message.id, -1L);
 
             Message[] ideletes = ifolder.search(new MessageIDTerm(message.msgid));
@@ -1111,7 +1111,8 @@ static EntityMessage synchronizeMessage(
                             message = dup;
                             update = true;
                             filter = true;
-                        }
+                        } else if (dup.uid < 0)
+                            throw new MessageRemovedException();
                     }
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -129,7 +129,7 @@ public class FragmentOptions extends FragmentBase implements SharedPreferences.O
             "startup", "date", "threading", "avatars", "identicons", "name_email", "subject_italic", "flags", "preview",
             "addresses", "monospaced", "autohtml", "autoimages", "actionbar",
             "pull", "swipenav", "autoexpand", "autoclose", "autonext", "collapse", "autoread", "automove",
-            "autoresize", "sender", "prefix_once", "autosend",
+            "autoresize", "resize", "sender", "prefix_once", "autosend",
             "notify_preview", "search_local", "light", "sound",
             "authentication", "paranoid", "english", "updates", "debug",
             "first", "why", "last_update_check", "app_support", "message_swipe", "message_select", "folder_actions", "folder_sync",

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -182,7 +182,7 @@ private enum State {NONE, LOADING, LOADED}
     private boolean encrypt = false;
     private OpenPgpServiceConnection pgpService;
 
-    static final int REDUCED_IMAGE_SIZE = 1280; // pixels
+    static final int REDUCED_IMAGE_SIZE = 1440; // pixels
     static final int REDUCED_IMAGE_QUALITY = 90; // percent
 
     @Override

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -441,6 +441,7 @@ private void bindTo(final TupleMessageEx message) {
             if (textSize != 0) {
                 tvFrom.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
                 tvSubject.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize * 0.9f);
+                tvPreview.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize * 0.9f);
                 tvBody.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
 
                 int px = Math.round(TypedValue.applyDimension(
@@ -1271,6 +1272,8 @@ private void onToggleMessage(TupleMessageEx message) {
                 boolean expanded = !properties.getValue("expanded", message.id);
                 properties.setValue("expanded", message.id, expanded);
 
+                ivExpander.setImageResource(expanded ? R.drawable.baseline_expand_less_24 : R.drawable.baseline_expand_more_24);
+
                 if (expanded) {
                     bindExpanded(message);
                     properties.scrollTo(getAdapterPosition(), 0);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -238,7 +238,7 @@ public void onCreate(Bundle savedInstanceState) {
         autoexpand = prefs.getBoolean("autoexpand", true);
         autoclose = prefs.getBoolean("autoclose", true);
         autonext = (!autoclose && prefs.getBoolean("autonext", false));
-        addresses = prefs.getBoolean("addresses", true);
+        addresses = prefs.getBoolean("addresses", false);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -641,7 +641,7 @@ private void setOptions() {
         swSubjectItalic.setChecked(prefs.getBoolean("subject_italic", true));
         swFlags.setChecked(prefs.getBoolean("flags", true));
         swPreview.setChecked(prefs.getBoolean("preview", false));
-        swAddresses.setChecked(prefs.getBoolean("addresses", true));
+        swAddresses.setChecked(prefs.getBoolean("addresses", false));
         swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
         swHtml.setChecked(prefs.getBoolean("autohtml", false));
         swImages.setChecked(prefs.getBoolean("autoimages", false));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -143,7 +143,7 @@ public class AdapterMessage extends RecyclerView.Adapter<AdapterMessage.ViewHold
     private boolean preview;
     private boolean autohtml;
     private boolean autoimages;
-    private boolean paranoid;
+    private boolean authentication;
     private boolean debug;
 
     private float textSize;
@@ -507,7 +507,7 @@ private void bindTo(final TupleMessageEx message) {
                             Boolean.FALSE.equals(message.spf) ||
                             Boolean.FALSE.equals(message.dmarc)
                             ? colorAccent : Color.TRANSPARENT);
-            vwStatus.setVisibility(paranoid ? View.VISIBLE : View.GONE);
+            vwStatus.setVisibility(authentication ? View.VISIBLE : View.GONE);
 
             // Expander
             boolean expanded = (viewType == ViewType.THREAD && properties.getValue("expanded", message.id));
@@ -2952,7 +2952,7 @@ Long getKey() {
         this.preview = prefs.getBoolean("preview", false);
         this.autohtml = prefs.getBoolean("autohtml", false);
         this.autoimages = prefs.getBoolean("autoimages", false);
-        this.paranoid = prefs.getBoolean("paranoid", true);
+        this.authentication = prefs.getBoolean("authentication", false);
         this.debug = prefs.getBoolean("debug", false);
 
         this.textSize = Helper.getTextSize(context, zoom);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -335,7 +335,7 @@ public void getItemOffsets(Rect outRect, View view, RecyclerView parent, Recycle
 
         DividerItemDecoration dateDecorator = new DividerItemDecoration(getContext(), llm.getOrientation()) {
             @Override
-            public void onDrawOver(@NonNull Canvas canvas, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
+            public void onDraw(@NonNull Canvas canvas, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
                 for (int i = 0; i < parent.getChildCount(); i++) {
                     View view = parent.getChildAt(i);
                     int pos = parent.getChildAdapterPosition(view);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -3102,7 +3102,7 @@ TupleMessageEx getItemForKey(long key) {
                     return message;
                 }
             }
-        Log.i("Item=" + null + " @Key" + key);
+        Log.i("Item=" + null + " @Key=" + key);
         return null;
     }
 

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -75,7 +75,7 @@ protected void onSaveInstanceState(Bundle outState) {
         int after = Helper.getSize(outState);
         Log.i("Saved instance " + this + " size=" + before + "/" + after);
         for (String key : outState.keySet())
-            Log.i("Saved " + key + "=" + outState.get(key));
+            Log.i("Saved " + this + " " + key + "=" + outState.get(key));
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -240,8 +240,8 @@ public void onChanged(List<EntityAccount> accounts) {
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putBoolean("fair:toggle", drawerToggle.isDrawerIndicatorEnabled());
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -549,8 +549,8 @@ protected void onException(Bundle args, Throwable ex) {
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putBoolean("fair:toggle", drawerToggle.isDrawerIndicatorEnabled());
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -1073,12 +1073,12 @@ public void run() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putInt("fair:provider", spProvider.getSelectedItemPosition());
         outState.putInt("fair:auth_type", auth_type);
         outState.putString("fair:password", tilPassword.getEditText().getText().toString());
         outState.putInt("fair:advanced", grpAdvanced.getVisibility());
         outState.putInt("fair:color", color);
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -169,9 +169,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
         outState.putString("fair:searching", searching);
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -617,9 +617,9 @@ public void onDestroyView() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putLong("fair:working", working);
         outState.putBoolean("fair:show_images", show_images);
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentContacts.java
Patch:
@@ -84,8 +84,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putString("fair:searching", searching);
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -220,8 +220,6 @@ protected void onException(Bundle args, Throwable ex) {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
         outState.putString("fair:searching", searching);
 
         outState.putLongArray("fair:parents", Helper.toLongArray(parentChilds.keySet()));
@@ -231,6 +229,8 @@ public void onSaveInstanceState(Bundle outState) {
             for (int i = 0; i < childs.size(); i++)
                 outState.putSerializable("fair:childs:" + parent + ":" + i, childs.get(i));
         }
+
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -740,13 +740,13 @@ public void run() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
         outState.putInt("fair:account", spAccount.getSelectedItemPosition());
         outState.putInt("fair:provider", spProvider.getSelectedItemPosition());
         outState.putInt("fair:auth_type", auth_type);
         outState.putString("fair:password", tilPassword.getEditText().getText().toString());
         outState.putInt("fair:advanced", grpAdvanced.getVisibility());
         outState.putInt("fair:color", color);
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1620,8 +1620,6 @@ public void onDestroyView() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
         outState.putString("fair:searching", searching);
 
         outState.putBoolean("fair:autoExpanded", autoExpanded);
@@ -1648,6 +1646,8 @@ public void onSaveInstanceState(Bundle outState) {
 
         if (selectionTracker != null)
             selectionTracker.onSaveInstanceState(outState);
+
+        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -630,7 +630,6 @@ protected Void onExecute(Context context, Bundle args) {
                 if (!Helper.getNetworkState(context).isSuitable())
                     throw new IllegalArgumentException(context.getString(R.string.title_no_internet));
 
-
                 DB db = DB.getInstance(context);
                 try {
                     db.beginTransaction();

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -257,7 +257,7 @@ private void send(EntityMessage message) throws MessagingException, IOException
         }
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean debug = debug = prefs.getBoolean("debug", false);
+        boolean debug = prefs.getBoolean("debug", false);
 
         EntityIdentity ident = db.identity().getIdentity(message.identity);
         String protocol = ident.getProtocol();

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1406,7 +1406,7 @@ static void downloadMessage(
             return;
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        long maxSize = prefs.getInt("download", 32768);
+        long maxSize = prefs.getInt("download", MessageHelper.DEFAULT_ATTACHMENT_DOWNLOAD_SIZE);
         if (maxSize == 0)
             maxSize = Long.MAX_VALUE;
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2247,7 +2247,7 @@ public int compare(TupleMessageEx d1, TupleMessageEx d2) {
                     autoExpanded = false;
 
                     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                    long download = prefs.getInt("download", 32768);
+                    long download = prefs.getInt("download", MessageHelper.DEFAULT_ATTACHMENT_DOWNLOAD_SIZE);
                     if (download == 0)
                         download = Long.MAX_VALUE;
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -605,7 +605,7 @@ private void setOptions() {
 
         swMetered.setChecked(prefs.getBoolean("metered", true));
 
-        int download = prefs.getInt("download", 32768);
+        int download = prefs.getInt("download", MessageHelper.DEFAULT_ATTACHMENT_DOWNLOAD_SIZE);
         int[] downloadValues = getResources().getIntArray(R.array.downloadValues);
         for (int pos = 0; pos < downloadValues.length; pos++)
             if (downloadValues[pos] == download) {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -71,6 +71,7 @@ public class MessageHelper {
     private final static int POOL_TIMEOUT = 45 * 1000; // milliseconds, default 45 sec
 
     static final int ATTACHMENT_BUFFER_SIZE = 8192; // bytes
+    static final int DEFAULT_ATTACHMENT_DOWNLOAD_SIZE = 65536; // bytes
 
     static void setSystemProperties() {
         System.setProperty("mail.mime.decodetext.strict", "false");

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -100,7 +100,7 @@ public class EntityMessage implements Serializable {
     public String headers;
     public Boolean raw;
     public String subject;
-    public Integer size;
+    public Long size;
     @NonNull
     public Boolean content = false;
     public String preview;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -515,8 +515,8 @@ String getSubject() throws MessagingException, UnsupportedEncodingException {
         return subject;
     }
 
-    Integer getSize() throws MessagingException {
-        int size = imessage.getSize();
+    Long getSize() throws MessagingException {
+        long size = imessage.getSize();
         if (size == 0)
             throw new MessagingException("Message empty");
         return (size < 0 ? null : size);

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -396,6 +396,8 @@ private void onMenuTheme(int id) {
                 prefs.edit().putString("theme", "system").apply();
                 break;
         }
+
+        ContactInfo.clearCache();
     }
 
     private void onMenuOptions() {

File: app/src/main/java/eu/faircode/email/Identicon.java
Patch:
@@ -40,7 +40,7 @@ static Bitmap generate(String email, int size, int pixels, boolean dark) {
         }
 
         int color = Color.argb(255, hash[0], hash[1], hash[2]);
-        color = ColorUtils.blendARGB(color, dark ? Color.BLACK : Color.WHITE, 0.2f);
+        color = ColorUtils.blendARGB(color, dark ? Color.WHITE : Color.BLACK, 0.2f);
 
         Paint paint = new Paint();
         paint.setColor(color);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -443,13 +443,14 @@ private static StringBuilder getAppInfo(Context context) {
 
         // Get version info
         String installer = context.getPackageManager().getInstallerPackageName(BuildConfig.APPLICATION_ID);
-        sb.append(String.format("%s: %s/%s %s/%s%s%s\r\n",
+        sb.append(String.format("%s: %s/%s %s/%s%s%s%s\r\n",
                 context.getString(R.string.app_name),
                 BuildConfig.APPLICATION_ID,
                 installer,
                 BuildConfig.VERSION_NAME,
                 hasValidFingerprint(context) ? "1" : "3",
                 BuildConfig.PLAY_STORE_RELEASE ? "p" : "",
+                BuildConfig.DEBUG ? "d" : "",
                 isPro(context) ? "+" : ""));
         sb.append(String.format("Android: %s (SDK %d)\r\n", Build.VERSION.RELEASE, Build.VERSION.SDK_INT));
         sb.append("\r\n");

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -625,6 +625,8 @@ public void closed(ConnectionEvent e) {
                     Log.i(account.name + " idle=" + capIdle);
 
                     db.account().setAccountState(account.id, "connected");
+                    db.account().setAccountError(account.id, null);
+                    db.account().setAccountWarning(account.id, null);
                     EntityLog.log(this, account.name + " connected");
 
                     // Update folder list

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -128,7 +128,7 @@ public class FragmentOptions extends FragmentBase implements SharedPreferences.O
             "pull", "swipenav", "autoexpand", "autoclose", "autonext", "collapse", "autoread", "automove",
             "autoresize", "sender", "autosend",
             "notify_preview", "search_local", "light", "sound",
-            "paranoid", "updates", "debug",
+            "paranoid", "english", "updates", "debug",
             "first", "why", "last_update_check", "app_support", "message_swipe", "message_select", "folder_actions", "folder_sync",
             "edit_ref_confirmed", "show_html_confirmed", "show_images_confirmed", "print_html_confirmed", "show_organization", "style_toolbar"
     };

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2975,7 +2975,7 @@ Long getKey() {
         this.compact = compact;
         this.name_email = prefs.getBoolean("name_email", !compact);
         this.subject_italic = prefs.getBoolean("subject_italic", true);
-        this.monospaced = prefs.getBoolean("monospaced", true);
+        this.monospaced = prefs.getBoolean("monospaced", false);
         this.zoom = zoom;
         this.sort = sort;
         this.duplicates = duplicates;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -189,7 +189,7 @@ public void onCreate(Bundle savedInstanceState) {
         pro = Helper.isPro(getContext());
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-        monospaced = prefs.getBoolean("monospaced", true);
+        monospaced = prefs.getBoolean("monospaced", false);
         style = prefs.getBoolean("style_toolbar", true);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -610,7 +610,7 @@ private void setOptions() {
         swFlags.setChecked(prefs.getBoolean("flags", true));
         swPreview.setChecked(prefs.getBoolean("preview", false));
         swAddresses.setChecked(prefs.getBoolean("addresses", true));
-        swMonospaced.setChecked(prefs.getBoolean("monospaced", true));
+        swMonospaced.setChecked(prefs.getBoolean("monospaced", false));
         swHtml.setChecked(prefs.getBoolean("autohtml", false));
         swTracking.setChecked(prefs.getBoolean("remove_tracking", true));
         swImages.setChecked(prefs.getBoolean("autoimages", false));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1044,6 +1044,7 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                 if (attachment.type.startsWith("image/"))
                     images.add(attachment);
             adapterImage.set(images);
+            rvImage.setVisibility(images.size() > 0 ? View.VISIBLE : View.GONE);
 
             boolean show_html = properties.getValue("html", message.id);
             if (message.content && !show_html) {
@@ -1408,7 +1409,6 @@ private void onShowHtmlConfirmed(final TupleMessageEx message) {
             ibQuotes.setVisibility(View.GONE);
             ibImages.setVisibility(View.GONE);
             tvBody.setVisibility(View.GONE);
-            rvImage.setVisibility(View.GONE);
 
             // For performance reasons the WebView is created when needed only
             if (!(vwBody instanceof WebView)) {
@@ -1685,7 +1685,6 @@ protected void onExecuted(Bundle args, SpannableStringBuilder body) {
                 tvBody.setMovementMethod(new UrlHandler());
                 tvBody.setVisibility(show_expanded ? View.VISIBLE : View.GONE);
                 pbBody.setVisibility(View.GONE);
-                rvImage.setVisibility(show_images && adapterImage.getItemCount() > 0 ? View.VISIBLE : View.GONE);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1044,7 +1044,6 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                 if (attachment.type.startsWith("image/"))
                     images.add(attachment);
             adapterImage.set(images);
-            rvImage.setVisibility(images.size() > 0 ? View.VISIBLE : View.GONE);
 
             boolean show_html = properties.getValue("html", message.id);
             if (message.content && !show_html) {
@@ -1409,6 +1408,7 @@ private void onShowHtmlConfirmed(final TupleMessageEx message) {
             ibQuotes.setVisibility(View.GONE);
             ibImages.setVisibility(View.GONE);
             tvBody.setVisibility(View.GONE);
+            rvImage.setVisibility(View.GONE);
 
             // For performance reasons the WebView is created when needed only
             if (!(vwBody instanceof WebView)) {
@@ -1685,6 +1685,7 @@ protected void onExecuted(Bundle args, SpannableStringBuilder body) {
                 tvBody.setMovementMethod(new UrlHandler());
                 tvBody.setVisibility(show_expanded ? View.VISIBLE : View.GONE);
                 pbBody.setVisibility(View.GONE);
+                rvImage.setVisibility(show_images && adapterImage.getItemCount() > 0 ? View.VISIBLE : View.GONE);
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -903,7 +903,7 @@ protected void onExecuted(Bundle args, Long folder) {
                 LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(ActivityView.this);
                 lbm.sendBroadcast(
                         new Intent(ActivityView.ACTION_VIEW_MESSAGES)
-                                .putExtra("account", -1)
+                                .putExtra("account", -1L)
                                 .putExtra("folder", folder));
             }
 

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -106,7 +106,7 @@ public void onClick(View view) {
             public void onClick(View v) {
                 startActivity(new Intent(getContext(), ActivityCompose.class)
                         .putExtra("action", "new")
-                        .putExtra("account", -1)
+                        .putExtra("account", -1L)
                 );
             }
         });

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -839,7 +839,7 @@ public void run() {
                         } else
                             folders.put(folder, null);
 
-                        final TwoStateOwner owner = new TwoStateOwner();
+                        final TwoStateOwner owner = new TwoStateOwner(ServiceSynchronize.this);
 
                         new Handler(getMainLooper()).post(new Runnable() {
                             @Override

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -770,7 +770,7 @@ static void onSynchronizeFolders(Context context, EntityAccount account, Store i
                         folder.poll = ("imap.gmail.com".equals(account.host));
                         folder.sync_days = EntityFolder.DEFAULT_SYNC;
                         folder.keep_days = EntityFolder.DEFAULT_KEEP;
-                        db.folder().insertFolder(folder);
+                        folder.id = db.folder().insertFolder(folder);
                         Log.i(folder.name + " added type=" + folder.type);
                     } else {
                         Log.i(folder.name + " exists type=" + folder.type);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -243,7 +243,7 @@ public boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {
         public boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {
             TupleAccountEx f1 = prev.get(oldItemPosition);
             TupleAccountEx f2 = next.get(newItemPosition);
-            return f1.equals(f2);
+            return f1.uiEquals(f2);
         }
     }
 

File: app/src/main/java/eu/faircode/email/DaoContact.java
Patch:
@@ -35,7 +35,7 @@ public interface DaoContact {
     List<EntityContact> getContacts();
 
     @Query("SELECT * FROM contact" +
-            " ORDER BY  times_contacted DESC, last_contacted DESC")
+            " ORDER BY times_contacted DESC, last_contacted DESC")
     LiveData<List<EntityContact>> liveContacts();
 
     @Query("SELECT * FROM contact" +

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -718,8 +718,9 @@ boolean isUnmetered() {
         }
 
         public void update(NetworkState newState) {
-            suitable = newState.suitable;
+            connected = newState.connected;
             unmetered = newState.unmetered;
+            suitable = newState.suitable;
         }
     }
 

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -549,10 +549,9 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                         OutputStream cout = new CipherOutputStream(raw, cipher);
                         cout.write(jexport.toString(2).getBytes());
                         cout.flush();
+                        raw.write(cipher.doFinal());
                     }
 
-                    raw.flush();
-
                     Log.i("Exported data");
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1776,6 +1776,7 @@ else if ("forward".equals(action))
                         List<EntityAttachment> attachments = db.attachment().getAttachments(ref.id);
                         for (EntityAttachment attachment : attachments)
                             if (attachment.available &&
+                                    !EntityAttachment.PGP_MESSAGE.equals(attachment.encryption) &&
                                     ("forward".equals(action) || attachment.isInline())) {
                                 File source = attachment.getFile(context);
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -1234,20 +1234,21 @@ static EntityMessage synchronizeMessage(
                     for (Address reply : replies) {
                         String email = ((InternetAddress) reply).getAddress();
                         String name = ((InternetAddress) reply).getPersonal();
+                        Uri avatar = ContactInfo.getLookupUri(context, new Address[]{reply});
                         EntityContact contact = db.contact().getContact(EntityContact.TYPE_FROM, email);
                         if (contact == null) {
                             contact = new EntityContact();
                             contact.type = EntityContact.TYPE_FROM;
                             contact.email = email;
                             contact.name = name;
-                            contact.avatar = message.avatar;
+                            contact.avatar = (avatar == null ? null : avatar.toString());
                             contact.times_contacted = 1;
                             contact.last_contacted = message.received;
                             contact.id = db.contact().insertContact(contact);
                             Log.i("Inserted sender contact=" + contact);
                         } else {
                             contact.name = name;
-                            contact.avatar = message.avatar;
+                            contact.avatar = (avatar == null ? null : avatar.toString());
                             contact.times_contacted++;
                             contact.last_contacted = message.received;
                             db.contact().updateContact(contact);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -44,6 +44,8 @@
 public class EntityAccount implements Serializable {
     static final String TABLE_NAME = "account";
 
+    static final int DEFAULT_KEEP_ALIVE_INTERVAL = 9; // minutes
+
     @PrimaryKey(autoGenerate = true)
     public Long id;
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -825,7 +825,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 if (synchronize && TextUtils.isEmpty(password) && !insecure)
                     throw new IllegalArgumentException(context.getString(R.string.title_no_password));
                 if (TextUtils.isEmpty(interval))
-                    interval = "19";
+                    interval = Integer.toString(EntityAccount.DEFAULT_KEEP_ALIVE_INTERVAL);
 
                 if (TextUtils.isEmpty(realm))
                     realm = null;

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -344,7 +344,7 @@ protected EmailProvider onExecute(Context context, Bundle args) throws Throwable
                     account.primary = (primary == null);
                     account.notify = false;
                     account.browse = true;
-                    account.poll_interval = 19;
+                    account.poll_interval = EntityAccount.DEFAULT_KEEP_ALIVE_INTERVAL;
                     account.prefix = provider.prefix;
 
                     account.created = now;

File: app/src/main/java/eu/faircode/email/WorkerCleanup.java
Patch:
@@ -92,7 +92,7 @@ static void cleanup(Context context, boolean manual) {
             File[] attachments = new File(context.getFilesDir(), "attachments").listFiles();
             if (attachments != null)
                 for (File file : attachments) {
-                    long id = Long.parseLong(file.getName());
+                    long id = Long.parseLong(file.getName().split("\\.")[0]);
                     if (db.attachment().countAttachment(id) == 0) {
                         Log.i("Deleting " + file);
                         if (!file.delete())

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1397,6 +1397,7 @@ public void onClick(DialogInterface dialog, int which) {
                     .show();
         }
 
+        @SuppressLint("ClickableViewAccessibility")
         private void onShowHtmlConfirmed(final TupleMessageEx message) {
             properties.setValue("html", message.id, true);
             btnHtml.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -588,8 +588,7 @@ private void bindTo(final TupleMessageEx message) {
                 tvFolder.setText((compact ? "" : message.accountName + "/") + folderName);
             }
             tvFolder.setVisibility(compact &&
-                    (!threading ||
-                            viewType == ViewType.FOLDER ||
+                    (viewType == ViewType.FOLDER ||
                             (viewType == ViewType.UNIFIED && EntityFolder.INBOX.equals(message.folderType)))
                     ? View.GONE : View.VISIBLE);
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -207,14 +207,15 @@ static String sanitize(Context context, String html, boolean showQuotes) {
                     }
 
                 if (linked)
-                    div.appendChild(img);
+                    div.appendChild(img.clone());
                 else {
                     Element a = document.createElement("a");
                     a.attr("href", uri.toString());
                     a.appendChild(img.clone());
                     div.appendChild(a);
                 }
-            }
+            } else
+                div.appendChild(img.clone());
 
             if (!TextUtils.isEmpty(alt)) {
                 div.appendElement("br");

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -210,7 +210,6 @@ static void processOperations(
                         // Operation succeeded
                         db.operation().deleteOperation(op.id);
                     } catch (Throwable ex) {
-                        // TODO: SMTP response codes: https://www.ietf.org/rfc/rfc821.txt
                         Log.e(folder.name, ex);
                         reportError(context, account, folder, ex);
 

File: app/src/main/java/eu/faircode/email/Core.java
Patch:
@@ -675,7 +675,7 @@ private static void onAttachment(Context context, JSONArray jargs, EntityFolder
         // Download attachment
         MessageHelper helper = new MessageHelper((MimeMessage) imessage);
         MessageHelper.MessageParts parts = helper.getMessageParts();
-        parts.downloadAttachment(context, db, attachment.id, sequence);
+        parts.downloadAttachment(context, sequence - 1, attachment.id);
     }
 
     private static long append(IMAPStore istore, IMAPFolder ifolder, MimeMessage imessage) throws MessagingException {
@@ -1411,7 +1411,7 @@ static void downloadMessage(
             for (EntityAttachment attachment : attachments)
                 if (!attachment.available)
                     if (!metered || (attachment.size != null && attachment.size < maxSize))
-                        if (!parts.downloadAttachment(context, db, attachment.id, attachment.sequence))
+                        if (!parts.downloadAttachment(context, attachment.sequence - 1, attachment.id))
                             break;
         }
     }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -438,12 +438,13 @@ private static StringBuilder getAppInfo(Context context) {
 
         // Get version info
         String installer = context.getPackageManager().getInstallerPackageName(BuildConfig.APPLICATION_ID);
-        sb.append(String.format("%s: %s/%s %s/%s%s\r\n",
+        sb.append(String.format("%s: %s/%s %s/%s%s%s\r\n",
                 context.getString(R.string.app_name),
                 BuildConfig.APPLICATION_ID,
                 installer,
                 BuildConfig.VERSION_NAME,
                 hasValidFingerprint(context) ? "1" : "3",
+                BuildConfig.PLAY_STORE_RELEASE ? "p" : "",
                 isPro(context) ? "+" : ""));
         sb.append(String.format("Android: %s (SDK %d)\r\n", Build.VERSION.RELEASE, Build.VERSION.SDK_INT));
         sb.append("\r\n");

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -849,7 +849,7 @@ private void bindExpanded(final TupleMessageEx message) {
 
             tvIdentityTitle.setVisibility(show_addresses && debug && via != null ? View.VISIBLE : View.GONE);
             tvIdentity.setVisibility(show_addresses && debug && via != null ? View.VISIBLE : View.GONE);
-            tvIdentity.setText(MessageHelper.formatAddresses(new Address[]{via}));
+            tvIdentity.setText(via == null ? null : MessageHelper.formatAddresses(new Address[]{via}));
 
             tvTimeExTitle.setVisibility(show_addresses ? View.VISIBLE : View.GONE);
             tvTimeEx.setVisibility(show_addresses ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -998,7 +998,7 @@ static String sanitizeKeyword(String keyword) {
             // flag-keyword    = atom
             // atom            = 1*ATOM-CHAR
             // ATOM-CHAR       = <any CHAR except atom-specials>
-            Character kar = keyword.charAt(i);
+            char kar = keyword.charAt(i);
             // atom-specials   = "(" / ")" / "{" / SP / CTL / list-wildcards / quoted-specials / resp-specials
             if (kar == '(' || kar == ')' || kar == '{' || kar == ' ' || Character.isISOControl(kar))
                 continue;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -845,8 +845,8 @@ private void bindExpanded(final TupleMessageEx message) {
             tvBcc.setVisibility(show_addresses && !TextUtils.isEmpty(bcc) ? View.VISIBLE : View.GONE);
             tvBcc.setText(bcc);
 
-            tvIdentityTitle.setVisibility(show_addresses && via != null ? View.VISIBLE : View.GONE);
-            tvIdentity.setVisibility(show_addresses && via != null ? View.VISIBLE : View.GONE);
+            tvIdentityTitle.setVisibility(show_addresses && debug && via != null ? View.VISIBLE : View.GONE);
+            tvIdentity.setVisibility(show_addresses && debug && via != null ? View.VISIBLE : View.GONE);
             tvIdentity.setText(MessageHelper.formatAddresses(new Address[]{via}));
 
             tvTimeExTitle.setVisibility(show_addresses ? View.VISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterAnswer.java
Patch:
@@ -58,7 +58,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         ViewHolder(View itemView) {
             super(itemView);
 
-            this.itemView = itemView;
+            this.itemView = itemView.findViewById(R.id.clItem);
             tvName = itemView.findViewById(R.id.tvName);
         }
 

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -80,7 +80,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         ViewHolder(View itemView) {
             super(itemView);
 
-            this.itemView = itemView;
+            this.itemView = itemView.findViewById(R.id.clItem);
             ivDelete = itemView.findViewById(R.id.ivDelete);
             tvName = itemView.findViewById(R.id.tvName);
             tvType = itemView.findViewById(R.id.tvType);

File: app/src/main/java/eu/faircode/email/AdapterImage.java
Patch:
@@ -63,7 +63,7 @@ public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickL
         ViewHolder(View itemView) {
             super(itemView);
 
-            this.itemView = itemView;
+            this.itemView = itemView.findViewById(R.id.clItem);
             image = itemView.findViewById(R.id.image);
             caption = itemView.findViewById(R.id.caption);
         }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -896,7 +896,6 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                 inbox.synchronize = true;
                                 inbox.unified = true;
                                 inbox.notify = true;
-                                inbox.initialize = true;
                                 inbox.sync_days = EntityFolder.DEFAULT_SYNC;
                                 inbox.keep_days = EntityFolder.DEFAULT_KEEP;
                             }

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -295,6 +295,7 @@ protected EmailProvider onExecute(Context context, Bundle args) throws Throwable
 
                                 if (EntityFolder.INBOX.equals(type)) {
                                     folder.unified = true;
+                                    folder.notify = true;
                                     inbox = true;
                                 }
                                 if (EntityFolder.DRAFTS.equals(type))

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -25,6 +25,7 @@ public class TupleFolderEx extends EntityFolder {
     public String accountName;
     public Integer accountColor;
     public String accountState;
+    public String accountError;
     public int messages;
     public int content;
     public int unseen;
@@ -37,6 +38,7 @@ public boolean equals(Object obj) {
                     Objects.equals(accountName, other.accountName) &&
                     Objects.equals(this.accountColor, other.accountColor) &&
                     Objects.equals(accountState, other.accountState) &&
+                    Objects.equals(accountError, other.accountError) &&
                     this.messages == other.messages &&
                     this.content == other.content &&
                     this.unseen == other.unseen);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -395,7 +395,7 @@ static Spanned fromHtml(@NonNull String html) {
     }
 
     static Spanned fromHtml(@NonNull String html, @Nullable Html.ImageGetter imageGetter, @Nullable Html.TagHandler tagHandler) {
-        return HtmlCompat.fromHtml(html, FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM, imageGetter, null);
+        return HtmlCompat.fromHtml(html, FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM, imageGetter, tagHandler);
     }
 
     static String toHtml(Spanned spanned) {

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -989,7 +989,7 @@ private void service_oneshot(boolean start) {
             } else {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ServiceSynchronize.this);
                 prefs.edit().putBoolean("oneshot", false).apply();
-                queue_reload(false, "oneshot");
+                queue_reload(true, "oneshot");
             }
         }
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -125,9 +125,8 @@ NotificationCompat.Builder getNotificationService(Integer unsent) {
                 .setVisibility(NotificationCompat.VISIBILITY_SECRET);
 
         if (lastUnsent > 0)
-            builder.setStyle(new NotificationCompat.BigTextStyle().setSummaryText(
-                    getResources().getQuantityString(
-                            R.plurals.title_notification_unsent, lastUnsent, lastUnsent)));
+            builder.setContentText(getResources().getQuantityString(
+                    R.plurals.title_notification_unsent, lastUnsent, lastUnsent));
 
         return builder;
     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -214,9 +214,8 @@ private NotificationCompat.Builder getNotificationService(TupleAccountStats stat
                 .setVisibility(NotificationCompat.VISIBILITY_SECRET);
 
         if (lastStats.operations > 0)
-            builder.setStyle(new NotificationCompat.BigTextStyle().setSummaryText(
-                    getResources().getQuantityString(
-                            R.plurals.title_notification_operations, lastStats.operations, lastStats.operations)));
+            builder.setContentText(getResources().getQuantityString(
+                    R.plurals.title_notification_operations, lastStats.operations, lastStats.operations));
 
         return builder;
     }

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -291,7 +291,7 @@ private void onProcessOperations(long fid) {
 
             // Get properties
             Properties props = MessageHelper.getSessionProperties(account.auth_type, account.realm, account.insecure);
-            props.put("mail." + protocol + ".separatestoreconnection", true);
+            props.put("mail." + protocol + ".separatestoreconnection", "true");
 
             // Create session
             final Session isession = Session.getInstance(props, null);
@@ -361,7 +361,7 @@ private void onFolderSync(long aid) {
 
             // Get properties
             Properties props = MessageHelper.getSessionProperties(account.auth_type, account.realm, account.insecure);
-            props.put("mail." + protocol + ".separatestoreconnection", true);
+            props.put("mail." + protocol + ".separatestoreconnection", "true");
 
             // Create session
             final Session isession = Session.getInstance(props, null);

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -167,7 +167,7 @@ int load() throws MessagingException, IOException {
 
                 // Get properties
                 Properties props = MessageHelper.getSessionProperties(account.auth_type, account.realm, account.insecure);
-                props.put("mail." + protocol + ".separatestoreconnection", true);
+                props.put("mail." + protocol + ".separatestoreconnection", "true");
 
                 // Create session
                 Session isession = Session.getInstance(props, null);

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -173,7 +173,7 @@ static File getRawFile(Context context, Long id) {
     }
 
     static void snooze(Context context, long id, Long wakeup) {
-        Intent snoozed = new Intent(context, ServiceSynchronize.class);
+        Intent snoozed = new Intent(context, ServiceUI.class);
         snoozed.setAction("snooze:" + id);
         PendingIntent pi = PendingIntent.getService(context, ServiceUI.PI_SNOOZED, snoozed, PendingIntent.FLAG_UPDATE_CURRENT);
 

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -72,7 +72,7 @@ public class EntityIdentity {
     public String password;
     public String realm;
     @NonNull
-    public Boolean use_ip = false; // instead of domain name
+    public Boolean use_ip = true; // instead of domain name
     @NonNull
     public Boolean synchronize;
     @NonNull

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -757,7 +757,7 @@ protected void onExecuted(Bundle args, final EntityIdentity identity) {
                     etUser.setText(identity == null ? null : identity.user);
                     tilPassword.getEditText().setText(identity == null ? null : identity.password);
                     etRealm.setText(identity == null ? null : identity.realm);
-                    cbUseIp.setChecked(identity == null ? false : identity.use_ip);
+                    cbUseIp.setChecked(identity == null ? true : identity.use_ip);
                     cbSynchronize.setChecked(identity == null ? true : identity.synchronize);
                     cbPrimary.setChecked(identity == null ? true : identity.primary);
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -290,7 +290,9 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityFolder fromJSON(JSONObject json) throws JSONException {
         EntityFolder folder = new EntityFolder();
-        folder.id = json.getLong("id");
+        if (json.has("id"))
+            folder.id = json.getLong("id");
+
         folder.name = json.getString("name");
         folder.type = json.getString("type");
 

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -54,6 +54,7 @@
 import javax.mail.internet.MimeMessage;
 
 import androidx.core.app.NotificationCompat;
+import androidx.core.content.ContextCompat;
 import androidx.lifecycle.LifecycleService;
 import androidx.lifecycle.Observer;
 
@@ -452,6 +453,7 @@ public void run() {
     }
 
     static void start(Context context) {
-        context.startService(new Intent(context, ServiceSend.class));
+        ContextCompat.startForegroundService(context,
+                new Intent(context, ServiceSend.class));
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1864,7 +1864,7 @@ protected void onException(Bundle args, Throwable ex) {
             if (ex instanceof SecurityException)
                 handleFileShare();
             else if (ex instanceof IllegalArgumentException)
-                Snackbar.make(view, ex.toString(), Snackbar.LENGTH_LONG).show();
+                Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
             else
                 Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
         }

File: app/src/main/java/eu/faircode/email/ServiceSend.java
Patch:
@@ -185,6 +185,7 @@ public void run() {
                                 Log.e(outbox.name, ex);
                                 db.folder().setFolderError(outbox.id, Helper.formatThrowable(ex, true));
                             } finally {
+                                db.folder().setFolderState(outbox.id, null);
                                 db.folder().setFolderSyncState(outbox.id, null);
                             }
                         } finally {

File: app/src/main/java/eu/faircode/email/ServiceUI.java
Patch:
@@ -306,6 +306,9 @@ private void onSyncOndemand(long fid) {
     }
 
     public static void sync(Context context, long folder) {
+        DB db = DB.getInstance(context);
+        db.folder().setFolderSyncState(folder, "requested");
+
         context.startService(
                 new Intent(context, ServiceUI.class)
                         .setAction("synchronize:" + folder));

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -250,7 +250,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                         db.message().deleteMessagesBefore(id, keep_time, true);
 
-                        EntityOperation.sync(db, folder.id);
+                        EntityOperation.sync(context, db, folder.id);
                     }
 
                     db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -269,7 +269,7 @@ protected Void onExecute(Context context, Bundle args) {
                                 DB db = DB.getInstance(context);
                                 List<EntityFolder> folders = db.folder().getFoldersAutoSync();
                                 for (EntityFolder folder : folders)
-                                    EntityOperation.sync(db, folder.id);
+                                    EntityOperation.sync(context, db, folder.id);
                                 return null;
                             }
 

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -406,7 +406,7 @@ private void checkPermissions(String[] permissions, @NonNull int[] grantResults,
                 protected Void onExecute(Context context, Bundle args) {
                     DB db = DB.getInstance(context);
                     for (EntityFolder folder : db.folder().getFoldersAutoSync())
-                        EntityOperation.sync(db, folder.id);
+                        EntityOperation.sync(context, db, folder.id);
                     return null;
                 }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1122,7 +1122,7 @@ public void run() {
                             idler.start();
                             idlers.add(idler);
 
-                            EntityOperation.sync(db, folder.id);
+                            EntityOperation.sync(this, db, folder.id);
                         } else
                             folders.put(folder, null);
 
@@ -1260,7 +1260,7 @@ public void onReceive(Context context, Intent intent) {
                                         if (!folders.get(folder).isOpen())
                                             throw new FolderClosedException(folders.get(folder));
                                     } else
-                                        EntityOperation.sync(db, folder.id);
+                                        EntityOperation.sync(this, db, folder.id);
 
                             // Successfully connected: reset back off time
                             backoff = CONNECT_BACKOFF_START;
@@ -1498,7 +1498,7 @@ private void processOperations(
                                 break;
 
                             default:
-                                throw new MessagingException("Unknown operation name=" + op.name);
+                                throw new IllegalArgumentException("Unknown operation=" + op.name);
                         }
 
                         // Operation succeeded

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -267,7 +267,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int position,
                             @Override
                             protected Void onExecute(Context context, Bundle args) {
                                 DB db = DB.getInstance(context);
-                                List<EntityFolder> folders = db.folder().getFoldersSynchronizing();
+                                List<EntityFolder> folders = db.folder().getFoldersAutoSync();
                                 for (EntityFolder folder : folders)
                                     EntityOperation.sync(db, folder.id);
                                 return null;

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -405,7 +405,7 @@ private void checkPermissions(String[] permissions, @NonNull int[] grantResults,
                 @Override
                 protected Void onExecute(Context context, Bundle args) {
                     DB db = DB.getInstance(context);
-                    for (EntityFolder folder : db.folder().getFoldersSynchronizing())
+                    for (EntityFolder folder : db.folder().getFoldersAutoSync())
                         EntityOperation.sync(db, folder.id);
                     return null;
                 }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -76,6 +76,7 @@
 import java.io.UnsupportedEncodingException;
 import java.net.Inet4Address;
 import java.net.InetAddress;
+import java.net.UnknownHostException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.text.DateFormat;
@@ -735,11 +736,11 @@ static String getExtension(String filename) {
         return filename.substring(index + 1);
     }
 
-    static InetAddress getLocalIp(Context context) {
+    static InetAddress getLocalIp(Context context) throws UnknownHostException {
         ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
 
         if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.M)
-            return null;
+            return InetAddress.getLocalHost();
 
         Network active = cm.getActiveNetwork();
         if (active == null)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1880,7 +1880,6 @@ private void doMove(EntityFolder folder, Session isession, IMAPStore istore, IMA
                 // Append target
                 long uid = append(istore, itarget, (MimeMessage) icopy);
                 Log.i(target.name + " appended id=" + message.id + " uid=" + uid);
-                db.message().setMessageUid(message.id, uid);
 
                 // Some providers, like Gmail, don't honor the appended seen flag
                 if (itarget.getPermanentFlags().contains(Flags.Flag.SEEN)) {

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -239,6 +239,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int position,
                 tvIdle.setVisibility(View.GONE);
                 tvMove.setVisibility(View.GONE);
                 tvUidPlus.setVisibility(View.GONE);
+                tvUtf8.setVisibility(View.GONE);
 
                 Object tag = adapterView.getTag();
                 if (tag != null && (Integer) tag == position)
@@ -445,6 +446,7 @@ public void onClick(View v) {
         tvIdle.setVisibility(View.GONE);
         tvMove.setVisibility(View.GONE);
         tvUidPlus.setVisibility(View.GONE);
+        tvUtf8.setVisibility(View.GONE);
 
         btnCheck.setVisibility(View.GONE);
         pbCheck.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -312,13 +312,12 @@ public Object doCommand(IMAPProtocol protocol) {
                     } catch (IOException ex) {
                         if (ex.getCause() instanceof MessagingException) {
                             Log.w(folder.name + " boundary", ex);
-                            if (!(ex.getCause() instanceof MessageRemovedException))
-                                db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
+                            db.folder().setFolderError(folder.id, Helper.formatThrowable(ex, true));
                         } else
                             throw ex;
                     } catch (Throwable ex) {
                         Log.e(folder.name + " boundary", ex);
-                        db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
+                        db.folder().setFolderError(folder.id, Helper.formatThrowable(ex, true));
                     } finally {
                         ((IMAPMessage) isub[j]).invalidateHeaders();
                     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2272,6 +2272,8 @@ private void synchronizeOnDemand(long fid) {
             synchronizeMessages(account, folder, (IMAPFolder) ifolder, folder.getSyncArgs(), new ServiceState());
 
         } catch (Throwable ex) {
+            Log.w(ex);
+            reportError(account, folder, ex);
             db.account().setAccountError(account.id, Helper.formatThrowable(ex));
             db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
         } finally {

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2219,7 +2219,7 @@ private long append(IMAPStore istore, IMAPFolder ifolder, MimeMessage imessage)
                 }
 
             if (uid < 0)
-                throw new MessageRemovedException("uid not found");
+                throw new IllegalArgumentException("uid not found");
 
             return uid;
         }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -55,7 +55,7 @@ public interface DaoMessage {
             ", " + unflagged_unified + " AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             ", SUM(CASE WHEN folder.type = '" + EntityFolder.DRAFTS + "' THEN 1 ELSE 0 END) AS drafts" +
-            ", COUNT(DISTINCT message.msgid) AS visible" +
+            ", COUNT(DISTINCT CASE WHEN message.msgid IS NULL THEN '' ELSE message.msgid END) AS visible" +
             ", MAX(CASE WHEN :found OR folder.unified THEN message.received ELSE 0 END) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
@@ -95,7 +95,7 @@ public interface DaoMessage {
             ", " + unflagged_folder + " AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             ", SUM(CASE WHEN folder.type = '" + EntityFolder.DRAFTS + "' THEN 1 ELSE 0 END) AS drafts" +
-            ", COUNT(DISTINCT message.msgid) AS visible" +
+            ", COUNT(DISTINCT CASE WHEN message.msgid IS NULL THEN '' ELSE message.msgid END) AS visible" +
             ", MAX(CASE WHEN folder.id = :folder THEN message.received ELSE 0 END) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -315,7 +315,7 @@ public int compare(EntityAccount a1, EntityAccount a2) {
                 if (Helper.getIntentFAQ().resolveActivity(getPackageManager()) != null)
                     drawerArray.add(new DrawerItem(ActivityView.this, R.layout.item_drawer, R.drawable.baseline_question_answer_24, R.string.menu_faq));
 
-                if (!BuildConfig.PLAY_STORE_RELEASE)
+                if (BuildConfig.BETA_RELEASE)
                     drawerArray.add(new DrawerItem(ActivityView.this, R.layout.item_drawer, R.drawable.baseline_report_problem_24, R.string.menu_issue));
 
                 if (Helper.getIntentPrivacy().resolveActivity(getPackageManager()) != null)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2030,8 +2030,7 @@ private void doSend(EntityMessage message, DB db) throws MessagingException, IOE
             if (message.inreplyto != null) {
                 List<EntityMessage> replieds = db.message().getMessageByMsgId(message.account, message.inreplyto);
                 for (EntityMessage replied : replieds)
-                    if (replied.uid != null)
-                        EntityOperation.queue(this, db, replied, EntityOperation.ANSWERED, true);
+                    EntityOperation.queue(this, db, replied, EntityOperation.ANSWERED, true);
             }
 
             db.identity().setIdentityConnected(ident.id, new Date().getTime());

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -653,10 +653,10 @@ public void onPause() {
         if (autosave)
             onAction(R.id.action_save);
 
-        super.onPause();
-
         ConnectivityManager cm = (ConnectivityManager) getContext().getSystemService(Context.CONNECTIVITY_SERVICE);
         cm.unregisterNetworkCallback(networkCallback);
+
+        super.onPause();
     }
 
     ConnectivityManager.NetworkCallback networkCallback = new ConnectivityManager.NetworkCallback() {

File: app/src/main/java/eu/faircode/email/MimeMessageEx.java
Patch:
@@ -38,7 +38,8 @@ public class MimeMessageEx extends MimeMessage {
         this.msgid = msgid;
     }
 
-    public String getMsgid() throws MessagingException {
+    @Override
+    public String getMessageID() throws MessagingException {
         if (this.msgid == null)
             return super.getMessageID();
         else

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -37,15 +37,15 @@ public interface DaoIdentity {
     @Query("SELECT identity.*, account.name AS accountName FROM identity" +
             " JOIN account ON account.id = identity.account" +
             " JOIN folder ON folder.account = identity.account AND folder.type = '" + EntityFolder.DRAFTS + "'" +
-            " WHERE :account IS NULL OR identity.account = :account" +
+            " WHERE (:account IS NULL OR identity.account = :account)" +
             " AND identity.synchronize" +
             " AND account.synchronize")
     List<TupleIdentityEx> getComposableIdentities(Long account);
 
     @Query("SELECT identity.*, account.name AS accountName FROM identity" +
             " JOIN account ON account.id = identity.account" +
             " JOIN folder ON folder.account = identity.account AND folder.type = '" + EntityFolder.DRAFTS + "'" +
-            " WHERE :account IS NULL OR identity.account = :account" +
+            " WHERE (:account IS NULL OR identity.account = :account)" +
             " AND identity.synchronize" +
             " AND account.synchronize")
     LiveData<List<TupleIdentityEx>> liveComposableIdentities(Long account);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -122,7 +122,7 @@ public JSONObject toJSON() throws JSONException {
         json.put("port", port);
         json.put("user", user);
         json.put("password", password);
-        json.put("realm", password);
+        json.put("realm", realm);
 
         json.put("name", name);
         json.put("color", color);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -78,7 +78,7 @@ static void setSystemProperties() {
         System.setProperty("mail.mime.base64.ignoreerrors", "true");
         System.setProperty("mail.mime.decodefilename", "true");
         System.setProperty("mail.mime.encodefilename", "true");
-        System.setProperty("mail.mime.allowutf8", "true"); // InternetAddress, MimeBodyPart, MimeUtility
+        System.setProperty("mail.mime.allowutf8", "false"); // InternetAddress, MimeBodyPart, MimeUtility
 
         // https://docs.oracle.com/javaee/6/api/javax/mail/internet/MimeMultipart.html
         System.setProperty("mail.mime.multipart.ignoremissingboundaryparameter", "true"); // javax.mail.internet.ParseException: In parameter list
@@ -167,7 +167,7 @@ static Properties getSessionProperties(int auth_type, String realm, boolean inse
         props.put("mail.smtp.timeout", Integer.toString(NETWORK_TIMEOUT));
 
         // MIME
-        props.put("mail.mime.allowutf8", "true"); // SMTPTransport, MimeMessage
+        props.put("mail.mime.allowutf8", "false"); // SMTPTransport, MimeMessage
         props.put("mail.mime.address.strict", "false");
 
         if (false) {

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -338,8 +338,6 @@ else if (EntityFolder.ARCHIVE.equals(folder.type))
                     identity.bcc = null;
                     identity.delivery_receipt = false;
                     identity.read_receipt = false;
-                    identity.store_sent = false;
-                    identity.sent_folder = null;
                     identity.error = null;
 
                     identity.id = db.identity().insertIdentity(identity);

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -58,7 +58,7 @@ protected void onExecuted(Bundle args, List<EntityAccount> accounts) {
                         startActivity(new Intent(ActivityMain.this, ActivitySetup.class));
                     else {
                         startActivity(new Intent(ActivityMain.this, ActivityView.class));
-                        ServiceSynchronize.init(ActivityMain.this);
+                        ServiceSynchronize.init(ActivityMain.this, false);
                     }
                     finish();
                 }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -98,6 +98,9 @@
 import static androidx.browser.customtabs.CustomTabsService.ACTION_CUSTOM_TABS_CONNECTION;
 
 public class Helper {
+    static final int NOTIFICATION_SYNCHRONIZE = 1;
+    static final int NOTIFICATION_EXTERNAL = 2;
+
     static final int JOB_DAILY = 1001;
 
     static final int AUTH_TYPE_PASSWORD = 1;

File: app/src/main/java/eu/faircode/email/ReceiverAutostart.java
Patch:
@@ -33,7 +33,7 @@ public void onReceive(final Context context, Intent intent) {
         if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()) ||
                 Intent.ACTION_MY_PACKAGE_REPLACED.equals(intent.getAction())) {
             EntityLog.log(context, intent.getAction());
-            ServiceSynchronize.init(context);
+            ServiceSynchronize.init(context, true);
 
             Thread thread = new Thread(new Runnable() {
                 @Override

File: app/src/main/java/eu/faircode/email/ServiceTileSynchronize.java
Patch:
@@ -44,7 +44,7 @@ public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
 
     private void update() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean enabled = prefs.getBoolean("enabled", false);
+        boolean enabled = prefs.getBoolean("enabled", true);
         Log.i("Update tile synchronize=" + enabled);
 
         Tile tile = getQsTile();
@@ -66,7 +66,7 @@ public void onClick() {
         Log.i("Click tile synchronize");
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean enabled = !prefs.getBoolean("enabled", false);
+        boolean enabled = !prefs.getBoolean("enabled", true);
         prefs.edit().putBoolean("enabled", enabled).apply();
         ServiceSynchronize.reload(this, "tile=" + enabled);
     }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1370,7 +1370,7 @@ protected String onExecute(Context context, Bundle args) throws Throwable {
                             try {
                                 String src = img.attr("src");
                                 if (src.startsWith("cid:")) {
-                                    String cid = src.substring(4);
+                                    String cid = '<' + src.substring(4) + '>';
                                     EntityAttachment attachment = DB.getInstance(context).attachment().getAttachment(id, cid);
                                     if (attachment != null && attachment.available) {
                                         InputStream is = null;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -149,7 +149,7 @@ public class ServiceSynchronize extends LifecycleService {
     private static final int SYNC_BATCH_SIZE = 20;
     private static final int DOWNLOAD_BATCH_SIZE = 20;
     private static final long RECONNECT_BACKOFF = 90 * 1000L; // milliseconds
-    private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
+    private static final int ACCOUNT_ERROR_AFTER = 90; // minutes
     private static final int BACKOFF_ERROR_AFTER = 16; // seconds
     private static final int IDENTITY_ERROR_AFTER = 30; // minutes
     private static final long STOP_DELAY = 5000L; // milliseconds

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -258,7 +258,7 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int position, l
 
         getSupportFragmentManager().addOnBackStackChangedListener(this);
 
-        DB.getInstance(this).account().liveAccounts(true, threading).observe(this, new Observer<List<TupleAccountEx>>() {
+        DB.getInstance(this).account().liveAccountsEx().observe(this, new Observer<List<TupleAccountEx>>() {
             private List<TupleAccountEx> last = new ArrayList<>();
 
             @Override

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -45,7 +45,7 @@ public interface DaoAccount {
     LiveData<List<EntityAccount>> liveAccounts(boolean synchronize);
 
     @Query("SELECT *" +
-            ", (SELECT COUNT(DISTINCT CASE WHEN :threading THEN message.thread ELSE message.id END)" +
+            ", (SELECT COUNT(message.id)" +
             "    FROM message" +
             "    JOIN folder ON folder.id = message.folder" +
             "    WHERE message.account = account.id" +
@@ -56,8 +56,8 @@ public interface DaoAccount {
             "    AND NOT ui_seen" +
             "    AND NOT ui_hide) AS unseen" +
             " FROM account" +
-            " WHERE synchronize = :synchronize")
-    LiveData<List<TupleAccountEx>> liveAccounts(boolean synchronize, boolean threading);
+            " WHERE synchronize")
+    LiveData<List<TupleAccountEx>> liveAccountsEx();
 
     @Query("SELECT * FROM account WHERE id = :id")
     EntityAccount getAccount(long id);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -749,7 +749,7 @@ private void bindExpanded(final TupleMessageEx message) {
 
             try {
                 InternetAddress via = new InternetAddress(message.identityEmail, message.identityName);
-                tvIdentity.setText(via.toString());
+                tvIdentity.setText(MessageHelper.formatAddresses(new Address[]{via}));
             } catch (UnsupportedEncodingException ex) {
                 tvIdentity.setText(ex.getMessage());
             }

File: app/src/main/java/eu/faircode/email/ContactInfo.java
Patch:
@@ -73,7 +73,7 @@ static ContactInfo get(Context context, Address[] addresses, boolean cacheOnly)
             return new ContactInfo();
         InternetAddress address = (InternetAddress) addresses[0];
 
-        String key = address.toString();
+        String key = MessageHelper.formatAddresses(new Address[]{address});
         synchronized (emailContactInfo) {
             ContactInfo info = emailContactInfo.get(key);
             if (info != null && !info.isExpired())

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -204,7 +204,7 @@ else if ("downloading".equals(folder.sync_state))
             tvKeywords.setVisibility(debug && folder.keywords.length > 0 ? View.VISIBLE : View.GONE);
 
             tvError.setText(folder.error);
-            tvError.setVisibility(folder.error != null && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
+            tvError.setVisibility(folder.error != null ? View.VISIBLE : View.GONE);
         }
 
         @Override
@@ -245,7 +245,8 @@ public boolean onLongClick(View v) {
                 popupMenu.getMenu().add(Menu.NONE, action_empty_trash, 3, R.string.title_empty_trash);
 
             if (folder.account != null) {
-                popupMenu.getMenu().add(Menu.NONE, action_edit_properties, 4, R.string.title_edit_properties);
+                if (!folder.accountPop || EntityFolder.INBOX.equals(folder.type))
+                    popupMenu.getMenu().add(Menu.NONE, action_edit_properties, 4, R.string.title_edit_properties);
                 if (!folder.accountPop)
                     popupMenu.getMenu().add(Menu.NONE, action_edit_rules, 5, R.string.title_edit_rules);
             }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -2283,7 +2283,7 @@ public Drawable getDrawable(String source) {
                                 builder.getSpanStart(quoteSpan),
                                 builder.getSpanEnd(quoteSpan),
                                 builder.getSpanFlags(quoteSpan));
-                        builder.removeSpan(quote);
+                        builder.removeSpan(quoteSpan);
                     }
 
                     spannedReference = builder;

File: app/src/main/java/eu/faircode/email/FragmentQuickSetup.java
Patch:
@@ -233,8 +233,10 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                 folder.keep_days = EntityFolder.DEFAULT_KEEP;
                                 folders.add(folder);
 
-                                if (EntityFolder.INBOX.equals(type))
+                                if (EntityFolder.INBOX.equals(type)) {
+                                    folder.unified = true;
                                     inbox = true;
+                                }
                                 if (EntityFolder.DRAFTS.equals(type))
                                     drafts = true;
                             }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -353,6 +353,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         PackageManager pm = getContext().getPackageManager();
+        menu.findItem(R.id.menu_advanced).setVisible(BuildConfig.DEBUG);
         menu.findItem(R.id.menu_help).setVisible(getIntentHelp().resolveActivity(pm) != null);
         super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2171,9 +2171,7 @@ private void onActionMore(final ActionData data) {
 
             popupMenu.getMenu().findItem(R.id.menu_delete).setVisible(debug);
 
-            popupMenu.getMenu().findItem(R.id.menu_share).setEnabled(data.message.uid != null);
-
-            popupMenu.getMenu().findItem(R.id.menu_show_headers).setEnabled(data.message.content);
+            popupMenu.getMenu().findItem(R.id.menu_share).setEnabled(data.message.content);
 
             popupMenu.getMenu().findItem(R.id.menu_show_headers).setChecked(show_headers);
             popupMenu.getMenu().findItem(R.id.menu_show_headers).setEnabled(data.message.uid != null);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -108,6 +108,7 @@ void deleteNotificationChannel(Context context) {
 
     public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
+        json.put("id", id);
         json.put("auth_type", auth_type);
         json.put("host", host);
         json.put("starttls", starttls);
@@ -139,6 +140,7 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityAccount fromJSON(JSONObject json) throws JSONException {
         EntityAccount account = new EntityAccount();
+        // id
         account.auth_type = json.getInt("auth_type");
         account.host = json.getString("host");
         account.starttls = (json.has("starttls") && json.getBoolean("starttls"));

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -71,13 +71,15 @@ static String getAnswerText(DB db, long id, Address[] from) {
 
     public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
+        json.put("id", id);
         json.put("name", name);
         json.put("text", text);
         return json;
     }
 
     public static EntityAnswer fromJSON(JSONObject json) throws JSONException {
         EntityAnswer answer = new EntityAnswer();
+        // id
         answer.name = json.getString("name");
         answer.text = json.getString("text");
         return answer;

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -253,6 +253,7 @@ public String toString() {
 
     public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
+        json.put("id", id);
         json.put("name", name);
         json.put("type", type);
         json.put("level", level);
@@ -270,6 +271,7 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityFolder fromJSON(JSONObject json) throws JSONException {
         EntityFolder folder = new EntityFolder();
+        folder.id = json.getLong("id");
         folder.name = json.getString("name");
         folder.type = json.getString("type");
 

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -89,6 +89,7 @@ public class EntityIdentity {
 
     public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
+        json.put("id", id);
         json.put("name", name);
         json.put("email", email);
         json.put("display", display);
@@ -122,6 +123,7 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityIdentity fromJSON(JSONObject json) throws JSONException {
         EntityIdentity identity = new EntityIdentity();
+        // id
         identity.name = json.getString("name");
         identity.email = json.getString("email");
         if (json.has("display"))

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -240,6 +240,7 @@ public boolean equals(Object obj) {
 
     public JSONObject toJSON() throws JSONException {
         JSONObject json = new JSONObject();
+        json.put("id", id);
         json.put("name", name);
         json.put("order", order);
         json.put("enabled", enabled);
@@ -251,6 +252,7 @@ public JSONObject toJSON() throws JSONException {
 
     public static EntityRule fromJSON(JSONObject json) throws JSONException {
         EntityRule rule = new EntityRule();
+        // id
         rule.name = json.getString("name");
         rule.order = json.getInt("order");
         rule.enabled = json.getBoolean("enabled");

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -62,6 +62,7 @@ public void uncaughtException(Thread thread, Throwable ex) {
         });
 
         createNotificationChannels();
+        MessageHelper.setSystemProperties();
     }
 
     private void createNotificationChannels() {

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -355,6 +355,7 @@ static EntityMessage getDebugInfo(Context context, int title, Throwable ex, Stri
             draft.folder = drafts.id;
             draft.identity = (primary == null ? null : primary.id);
             draft.msgid = EntityMessage.generateMessageId();
+            draft.thread = draft.msgid;
             draft.to = new Address[]{myAddress()};
             draft.subject = context.getString(R.string.app_name) + " " + BuildConfig.VERSION_NAME + " debug info";
             draft.received = new Date().getTime();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -793,7 +793,7 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                     bindAttachments(message, attachments);
                 }
             };
-            liveAttachments = db.attachment().liveAttachments(message.id, true);
+            liveAttachments = db.attachment().liveAttachments(message.id);
             liveAttachments.observe(owner, observerAttachments);
 
             // Setup actions

File: app/src/main/java/eu/faircode/email/DaoAttachment.java
Patch:
@@ -30,9 +30,8 @@
 public interface DaoAttachment {
     @Query("SELECT * FROM attachment" +
             " WHERE message = :message" +
-            " AND (:inline OR disposition <> 'inline')" +
             " ORDER BY sequence")
-    LiveData<List<EntityAttachment>> liveAttachments(long message, boolean inline);
+    LiveData<List<EntityAttachment>> liveAttachments(long message);
 
     @Query("SELECT ifnull(MAX(sequence), 0)" +
             " FROM attachment" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1808,7 +1808,7 @@ protected void onException(Bundle args, Throwable ex) {
 
             DB db = DB.getInstance(getContext());
 
-            db.attachment().liveAttachments(result.draft.id, false).observe(getViewLifecycleOwner(),
+            db.attachment().liveAttachments(result.draft.id).observe(getViewLifecycleOwner(),
                     new Observer<List<EntityAttachment>>() {
                         private int last_available = 0;
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1945,6 +1945,7 @@ protected EntityMessage onExecute(final Context context, Bundle args) throws Thr
                     draft.msgid = EntityMessage.generateMessageId();
                     draft.content = true;
                     draft.ui_hide = false;
+                    EntityOperation.queue(context, db, draft, EntityOperation.ADD);
                 }
 
                 List<EntityAttachment> attachments = db.attachment().getAttachments(draft.id);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -991,7 +991,8 @@ else if (view.getId() == R.id.ibImages)
                             new Intent(ActivityView.ACTION_VIEW_THREAD)
                                     .putExtra("account", message.account)
                                     .putExtra("thread", message.thread)
-                                    .putExtra("id", message.id));
+                                    .putExtra("id", message.id)
+                                    .putExtra("found", viewType == ViewType.SEARCH));
                 }
             }
         }

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -147,7 +147,8 @@ protected void onExecuted(Bundle args, EntityMessage message) {
                                 new Intent(ActivityView.ACTION_VIEW_THREAD)
                                         .putExtra("account", message.account)
                                         .putExtra("thread", message.thread)
-                                        .putExtra("id", message.id));
+                                        .putExtra("id", message.id)
+                                        .putExtra("found", false));
                     }
 
                     @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -476,8 +476,6 @@ public void onSelectionChanged() {
 
     @Override
     public void onDestroy() {
-        if (selectionPredicate != null)
-            selectionPredicate.destroy();
         selectionTracker = null;
         super.onDestroy();
     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -364,6 +364,8 @@ public void run() {
 
                                     long id = Long.parseLong(parts[1]);
                                     EntityMessage message = db.message().getMessage(id);
+                                    if (message == null)
+                                        return;
 
                                     switch (parts[0]) {
                                         case "seen":

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -198,7 +198,7 @@ int setFolderProperties(
     @Query("UPDATE folder SET last_sync = :last_sync WHERE id = :id")
     int setFolderSync(long id, long last_sync);
 
-    @Query("UPDATE folder SET tbc = 0 WHERE id = :id")
+    @Query("UPDATE folder SET tbc = null WHERE id = :id")
     int resetFolderTbc(long id);
 
     @Query("UPDATE folder SET tbd = 1 WHERE id = :id")

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -156,7 +156,7 @@ static Drawable decodeImage(String source, Context context, long id, boolean sho
                     return d;
                 } else {
                     Drawable d = new BitmapDrawable(bm);
-                    d.setBounds(0, 0, bm.getWidth(), bm.getHeight());
+                    d.setBounds(0, 0, d.getIntrinsicWidth(), d.getIntrinsicHeight());
                     return d;
                 }
             }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -303,7 +303,7 @@ static void build(Context context, EntityMessage message, MimeMessage imessage)
         StringBuilder body = new StringBuilder();
         body.append(Helper.readText(EntityMessage.getFile(context, message.id)));
 
-        if (Helper.isPro(context) && message.identity != null) {
+        if (message.identity != null) {
             EntityIdentity identity = db.identity().getIdentity(message.identity);
             if (!TextUtils.isEmpty(identity.signature))
                 body.append(identity.signature);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1257,7 +1257,6 @@ private void onShowHtmlConfirmed(final TupleMessageEx message) {
             ibQuotes.setVisibility(View.GONE);
             ibImages.setVisibility(View.GONE);
             tvBody.setVisibility(View.GONE);
-            pbBody.setVisibility(View.VISIBLE);
 
             if (!(vwBody instanceof WebView)) {
                 // For performance reasons the WebView is created when needed only

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -37,8 +37,8 @@ public interface DaoIdentity {
     @Query("SELECT identity.*, account.name AS accountName FROM identity" +
             " JOIN account ON account.id = identity.account" +
             " JOIN folder ON folder.account = identity.account AND folder.type = '" + EntityFolder.DRAFTS + "'" +
-            " WHERE NOT :synchronize OR account.synchronize")
-    List<TupleIdentityEx> getComposableIdentities(boolean synchronize);
+            " WHERE identity.synchronize AND account.synchronize")
+    List<TupleIdentityEx> getComposableIdentities();
 
     @Query("SELECT * FROM identity WHERE account = :account")
     List<EntityIdentity> getIdentities(long account);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1487,7 +1487,7 @@ protected DraftAccount onExecute(Context context, Bundle args) throws IOExceptio
                     if ("edit".equals(action))
                         throw new IllegalStateException("Draft not found hide=" + (result.draft != null));
 
-                    List<TupleIdentityEx> identities = db.identity().getComposableIdentities(true);
+                    List<TupleIdentityEx> identities = db.identity().getComposableIdentities();
 
                     EntityMessage ref = db.message().getMessage(reference);
                     if (ref == null) {
@@ -1752,7 +1752,7 @@ protected void onExecuted(Bundle args, final DraftAccount result) {
                 @Override
                 protected List<TupleIdentityEx> onExecute(Context context, Bundle args) {
                     DB db = DB.getInstance(context);
-                    List<TupleIdentityEx> identities = db.identity().getComposableIdentities(true);
+                    List<TupleIdentityEx> identities = db.identity().getComposableIdentities();
                     if (identities == null)
                         identities = new ArrayList<>();
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -2243,8 +2243,7 @@ protected Void onExecute(Context context, Bundle args) {
 
                                             EntityFolder folder = db.folder().getFolder(message.folder);
 
-                                            if (EntityFolder.OUTBOX.equals(folder.type) &&
-                                                    (message.ui_snoozed != null || !TextUtils.isEmpty(message.error))) {
+                                            if (EntityFolder.OUTBOX.equals(folder.type)) {
                                                 db.message().deleteMessage(id);
 
                                                 db.folder().setFolderError(message.folder, null);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -827,6 +827,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 String accountRealm = (account == null ? null : account.realm);
 
                 boolean check = (synchronize && (account == null ||
+                        auth_type != account.auth_type ||
                         !host.equals(account.host) || Integer.parseInt(port) != account.port ||
                         !user.equals(account.user) || !password.equals(account.password) ||
                         (realm == null ? accountRealm != null : !realm.equals(accountRealm))));

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -569,6 +569,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 String identityRealm = (identity == null ? null : identity.realm);
 
                 boolean check = (synchronize && (identity == null ||
+                        auth_type != identity.auth_type ||
                         !host.equals(identity.host) || Integer.parseInt(port) != identity.port ||
                         !user.equals(identity.user) || !password.equals(identity.password) ||
                         (realm == null ? identityRealm != null : !realm.equals(identityRealm))));

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -116,14 +116,14 @@ public class EntityFolder implements Serializable {
             "Flagged"
     );
     private static final List<String> SYSTEM_FOLDER_TYPE = Arrays.asList(
-            ARCHIVE,
+            ARCHIVE, // All
             ARCHIVE,
             DRAFTS,
             TRASH,
             JUNK,
             SENT,
-            SYSTEM,
-            SYSTEM
+            SYSTEM, // Important
+            SYSTEM // Flagged
     ); // MUST match SYSTEM_FOLDER_ATTR
 
     static final List<String> FOLDER_SORT_ORDER = Arrays.asList(

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2218,7 +2218,7 @@ private void synchronizeFolders(EntityAccount account, IMAPStore istore, Service
                         folder.account = account.id;
                         folder.name = fullName;
                         folder.display = display;
-                        folder.type = EntityFolder.USER;
+                        folder.type = (EntityFolder.SYSTEM.equals(type) ? type : EntityFolder.USER);
                         folder.level = level;
                         folder.synchronize = false;
                         folder.poll = ("imap.gmail.com".equals(account.host));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -510,7 +510,7 @@ protected ContactInfo onExecute(Context context, Bundle args) {
                     protected void onExecuted(Bundle args, ContactInfo info) {
                         long id = args.getLong("id");
                         TupleMessageEx amessage = getMessage();
-                        if (amessage == null || !amessage.equals(id))
+                        if (amessage == null || !amessage.id.equals(id))
                             return;
 
                         showContactInfo(info, message);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1885,7 +1885,7 @@ public void onError(Throwable ex) {
 
         builder.setFetchExecutor(executor);
 
-        modelMessages.setMessages(viewType, getActivity(), builder.build());
+        modelMessages.setMessages(viewType, getViewLifecycleOwner(), builder.build());
         modelMessages.observe(viewType, getViewLifecycleOwner(), observer);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -283,7 +283,7 @@ public void onClick(View v) {
         if (viewType == AdapterMessage.ViewType.THREAD) {
             if (actionbar) {
                 ViewModelMessages model = ViewModelProviders.of(getActivity()).get(ViewModelMessages.class);
-                model.observePrevNext(getViewLifecycleOwner(), thread, new ViewModelMessages.IPrevNext() {
+                model.observePrevNext(getViewLifecycleOwner(), id, new ViewModelMessages.IPrevNext() {
                     @Override
                     public void onPrevious(boolean exists, Long id) {
                         bottom_navigation.getMenu().findItem(R.id.action_prev).setIntent(new Intent().putExtra("id", id));
@@ -1777,7 +1777,7 @@ private void onMenuSnoozed() {
     private void loadMessages() {
         if (viewType == AdapterMessage.ViewType.THREAD && autonext) {
             ViewModelMessages model = ViewModelProviders.of(getActivity()).get(ViewModelMessages.class);
-            model.observePrevNext(getViewLifecycleOwner(), thread, new ViewModelMessages.IPrevNext() {
+            model.observePrevNext(getViewLifecycleOwner(), id, new ViewModelMessages.IPrevNext() {
                 boolean once = false;
 
                 @Override

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2062,8 +2062,10 @@ protected void onException(Bundle args, Throwable ex) {
                 pbWait.setVisibility(View.GONE);
             if (boundaryCallback == null && messages.size() == 0)
                 tvNoEmail.setVisibility(View.VISIBLE);
-            if (messages.size() > 0)
+            if (messages.size() > 0) {
+                tvNoEmail.setVisibility(View.GONE);
                 grpReady.setVisibility(View.VISIBLE);
+            }
         }
     };
 

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -30,7 +30,7 @@
 public interface DaoOperation {
     @Query("SELECT operation.*, account.name AS accountName, folder.name AS folderName" +
             " ,((account.synchronize IS NULL OR account.synchronize)" +
-            " AND (NOT folder.account IS NULL OR identity.synchronize)) AS synchronize" +
+            " AND (NOT folder.account IS NULL OR identity.synchronize IS NULL OR identity.synchronize)) AS synchronize" +
             " FROM operation" +
             " JOIN folder ON folder.id = operation.folder" +
             " LEFT JOIN message ON message.id = operation.message" +
@@ -51,7 +51,7 @@ public interface DaoOperation {
             " LEFT JOIN identity ON identity.id = message.identity" +
             " WHERE operation.folder = :folder" +
             " AND (account.synchronize IS NULL OR account.synchronize)" +
-            " AND (NOT folder.account IS NULL OR identity.synchronize)" +
+            " AND (NOT folder.account IS NULL OR identity.synchronize IS NULL OR identity.synchronize)" +
             " ORDER BY" +
             "  CASE WHEN operation.name = '" + EntityOperation.SYNC + "' THEN" +
             "    CASE WHEN folder.account IS NULL THEN -1 ELSE 1 END" + // outbox

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -116,6 +116,7 @@ public class EntityMessage implements Serializable {
     public Boolean answered = false;
     @NonNull
     public Boolean flagged = false;
+    public String flags; // system flags
     public String[] keywords; // user flags
     @NonNull
     public Boolean ui_seen = false;
@@ -217,6 +218,7 @@ public boolean uiEquals(Object obj) {
                     //this.seen.equals(other.seen) &&
                     //this.answered.equals(other.answered) &&
                     //this.flagged.equals(other.flagged) &&
+                    (!BuildConfig.DEBUG || (this.flags == null ? other.flags == null : this.flags.equals(other.flags))) &&
                     Helper.equal(this.keywords, other.keywords) &&
                     this.ui_seen.equals(other.ui_seen) &&
                     this.ui_answered.equals(other.ui_answered) &&
@@ -263,6 +265,7 @@ public boolean equals(Object obj) {
                     this.seen.equals(other.seen) &&
                     this.answered.equals(other.answered) &&
                     this.flagged.equals(other.flagged) &&
+                    (this.flags == null ? other.flags == null : this.flags.equals(other.flags)) &&
                     Helper.equal(this.keywords, other.keywords) &&
                     this.ui_seen.equals(other.ui_seen) &&
                     this.ui_answered.equals(other.ui_answered) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -20,6 +20,7 @@
 */
 
 import android.Manifest;
+import android.annotation.SuppressLint;
 import android.app.NotificationManager;
 import android.content.ContentResolver;
 import android.content.Context;
@@ -411,6 +412,7 @@ private void clear() {
             grpExpanded.setVisibility(View.GONE);
         }
 
+        @SuppressLint("WrongConstant")
         private void bindTo(int position, final TupleMessageEx message) {
             final DB db = DB.getInstance(context);
             final boolean show_expanded = properties.getValue("expanded", message.id);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -844,9 +844,9 @@ protected MoreResult onExecute(Context context, Bundle args) {
                     boolean isDrafts = EntityFolder.DRAFTS.equals(folder.type);
 
                     result.isArchive = (result.isArchive == null ? isArchive : result.isArchive && isArchive);
-                    result.isTrash = (result.isTrash == null ? isTrash : result.isTrash && isArchive);
-                    result.isJunk = (result.isJunk == null ? isJunk : result.isJunk && isArchive);
-                    result.isDrafts = (result.isDrafts == null ? isDrafts : result.isDrafts && isArchive);
+                    result.isTrash = (result.isTrash == null ? isTrash : result.isTrash && isTrash);
+                    result.isJunk = (result.isJunk == null ? isJunk : result.isJunk && isJunk);
+                    result.isDrafts = (result.isDrafts == null ? isDrafts : result.isDrafts && isDrafts);
 
                     boolean hasArchive = (db.folder().getFolderByType(message.account, EntityFolder.ARCHIVE) != null);
                     boolean hasTrash = (db.folder().getFolderByType(message.account, EntityFolder.TRASH) != null);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1481,7 +1481,7 @@ protected void onException(Bundle args, Throwable ex) {
 
         private void onMenuJunk(final ActionData data) {
             new DialogBuilderLifecycle(context, owner)
-                    .setMessage(R.string.title_ask_spam)
+                    .setMessage(context.getResources().getQuantityString(R.plurals.title_ask_spam, 1, 1))
                     .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -39,7 +39,7 @@ public class BoundaryCallbackMessages extends PagedList.BoundaryCallback<TupleMe
     interface IBoundaryCallbackMessages {
         void onLoading();
 
-        void onLoaded(boolean empty);
+        void onLoaded();
 
         void onError(Throwable ex);
     }
@@ -103,7 +103,7 @@ public void run() {
                     handler.post(new Runnable() {
                         @Override
                         public void run() {
-                            intf.onLoaded(model == null || model.isEmpty());
+                            intf.onLoaded();
                         }
                     });
                 }

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -96,7 +96,7 @@ public void onChanged(PagedList<TupleMessageEx> list) {
                         } else
                             intf.onNext(null);
 
-                        if (pos + 1 <= list.size()) {
+                        if (pos + 1 < list.size()) {
                             TupleMessageEx prev = list.get(pos + 1);
                             if (prev == null)
                                 load = true;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1233,8 +1233,8 @@ public Drawable getDrawable(String source) {
             }, new Html.TagHandler() {
                 @Override
                 public void handleTag(boolean opening, String tag, Editable output, XMLReader xmlReader) {
-                    if (BuildConfig.DEBUG)
-                        Log.i("HTML tag=" + tag + " opening=" + opening);
+                    //if (BuildConfig.DEBUG)
+                    //    Log.i("HTML tag=" + tag + " opening=" + opening);
                 }
             });
         }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -340,7 +340,7 @@ public void onResume() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             ConnectivityManager cm = (ConnectivityManager) getContext().getSystemService(Context.CONNECTIVITY_SERVICE);
             boolean saving = (cm.getRestrictBackgroundStatus() == ConnectivityManager.RESTRICT_BACKGROUND_STATUS_ENABLED);
-            btnData.setVisibility(saving ? View.VISIBLE : View.GONE);
+            btnData.setVisibility(saving || BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         }
     }
 

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -104,7 +104,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         // Observe identities
-        DB.getInstance(getContext()).identity().liveIdentities().observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
+        DB.getInstance(getContext()).identity().liveIdentities(false).observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
             @Override
             public void onChanged(@Nullable List<TupleIdentityEx> identities) {
                 if (identities == null)

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -309,9 +309,9 @@ public void onChanged(EntityFolder archive) {
             }
         });
 
-        db.identity().liveIdentities(null, true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
+        db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
             @Override
-            public void onChanged(@Nullable List<EntityIdentity> identities) {
+            public void onChanged(@Nullable List<TupleIdentityEx> identities) {
                 boolean done = (identities != null && identities.size() > 0);
                 tvIdentityDone.setText(done ? R.string.title_setup_done : R.string.title_setup_to_do);
                 tvIdentityDone.setTextColor(done ? textColorPrimary : colorWarning);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -144,7 +144,7 @@ public class ServiceSynchronize extends LifecycleService {
     private static final int SYNC_BATCH_SIZE = 20;
     private static final int DOWNLOAD_BATCH_SIZE = 20;
     private static final long RECONNECT_BACKOFF = 90 * 1000L; // milliseconds
-    private static final int ACCOUNT_ERROR_AFTER = 90; // minutes
+    private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
     private static final int IDENTITY_ERROR_AFTER = 30; // minutes
     private static final long STOP_DELAY = 5000L; // milliseconds
     private static final long YIELD_DURATION = 200L; // milliseconds
@@ -917,7 +917,7 @@ public void closed(ConnectionEvent e) {
                         if (account.last_connected != null) {
                             EntityLog.log(this, account.name + " last connected: " + new Date(account.last_connected));
                             long now = new Date().getTime();
-                            long delayed = now - account.last_connected;
+                            long delayed = now - account.last_connected - account.poll_interval * 60 * 1000L;
                             if (delayed > ACCOUNT_ERROR_AFTER * 60 * 1000L) {
                                 Log.i("Reporting sync error after=" + delayed);
                                 Throwable warning = new Throwable(

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -144,7 +144,7 @@ public class ServiceSynchronize extends LifecycleService {
     private static final int SYNC_BATCH_SIZE = 20;
     private static final int DOWNLOAD_BATCH_SIZE = 20;
     private static final long RECONNECT_BACKOFF = 90 * 1000L; // milliseconds
-    private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
+    private static final int ACCOUNT_ERROR_AFTER = 90; // minutes
     private static final int IDENTITY_ERROR_AFTER = 30; // minutes
     private static final long STOP_DELAY = 5000L; // milliseconds
     private static final long YIELD_DURATION = 200L; // milliseconds

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -2145,7 +2145,7 @@ public void run() {
                             db.beginTransaction();
 
                             for (MessageTarget target : result) {
-                                EntityMessage message = db.message().getMessage(id);
+                                EntityMessage message = db.message().getMessage(target.id);
                                 if (message != null && message.ui_hide) {
                                     Log.i("Move id=" + id + " target=" + target.folder.name);
                                     EntityOperation.queue(context, db, message, EntityOperation.MOVE, target.folder.id);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -326,9 +326,9 @@ private void wire() {
                 public void run() {
                     Rect rect = new Rect(
                             itemView.getLeft(),
-                            touch.getTop(),
+                            vwColor.getTop(),
                             itemView.getRight(),
-                            touch.getBottom());
+                            vwColor.getBottom());
                     Log.i("Touch delegate=" + rect);
                     itemView.setTouchDelegate(new TouchDelegate(rect, touch));
                 }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -685,7 +685,7 @@ protected UpdateInfo onExecute(Context context, Bundle args) throws Throwable {
                         }
                     }
 
-                    throw new IOException("Asset name field missing");
+                    return null;
                 } finally {
                     if (urlConnection != null)
                         urlConnection.disconnect();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -424,6 +424,8 @@ private void bindTo(int position, final TupleMessageEx message) {
 
             pbLoading.setVisibility(View.GONE);
 
+            setDisplacement(0);
+
             if (textSize != 0) {
                 tvDay.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
                 tvFrom.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -191,7 +191,7 @@ public boolean equals(Object obj) {
                     (this.created == null ? other.created == null : this.created.equals(other.created)) &&
                     (this.tbd == null ? other.tbd == null : this.tbd.equals(other.tbd)) &&
                     (this.state == null ? other.state == null : this.state.equals(other.state)) &&
-                    (this.error == null ? other.error == null : this.error.equals(other.error)) ||
+                    (this.error == null ? other.error == null : this.error.equals(other.error)) &&
                     (this.last_connected == null ? other.last_connected == null : this.last_connected.equals(other.last_connected)));
         } else
             return false;

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -94,7 +94,7 @@ void load() throws MessagingException, IOException {
             return;
 
         DB db = DB.getInstance(state.context);
-        final List<EntityFolder> folders = db.folder().getFolders(
+        final List<EntityFolder> folders = db.folder().getBrowsableFolders(
                 state.fid < 0 ? null : state.fid, state.search != null);
         Log.i("Search fid=" + (state.fid < 0 ? null : state.fid) + " search=" + (state.search == null) + " count=" + folders.size());
         if (folders.size() == 0)

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -95,8 +95,8 @@ void load() throws MessagingException, IOException {
 
         DB db = DB.getInstance(state.context);
         final List<EntityFolder> folders = db.folder().getFolders(
-                state.fid < 0 ? null : state.fid, state.search == null);
-        Log.i("Search fid=" + (state.fid < 0 ? null : state.fid) + " browse=" + (state.search == null) + " count=" + folders.size());
+                state.fid < 0 ? null : state.fid, state.search != null);
+        Log.i("Search fid=" + (state.fid < 0 ? null : state.fid) + " search=" + (state.search == null) + " count=" + folders.size());
         if (folders.size() == 0)
             return;
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1232,7 +1232,9 @@ public void run() {
                                                     } catch (Throwable ex) {
                                                         Log.e(folder.name, ex);
                                                         reportError(account, folder, ex);
-                                                        db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
+                                                        // IllegalStateException: sync when store disconnected
+                                                        if (!(ex instanceof IllegalStateException))
+                                                            db.folder().setFolderError(folder.id, Helper.formatThrowable(ex));
                                                         state.error();
                                                     } finally {
                                                         if (shouldClose) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -525,8 +525,10 @@ protected void onException(Bundle args, Throwable ex) {
                         Helper.unexpectedError(context, owner, ex);
                     }
                 }.execute(context, owner, aargs, "message:avatar");
-            } else
+            } else {
                 ivAvatar.setVisibility(View.GONE);
+                tvFrom.setText(MessageHelper.formatAddresses(outgoing ? message.to : message.from, !compact, false));
+            }
 
             vwColor.setBackgroundColor(message.accountColor == null ? Color.TRANSPARENT : message.accountColor);
             vwColor.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2409,8 +2409,7 @@ static EntityMessage synchronizeMessage(
                         " folder=" + dfolder.type + ":" + dup.folder + "/" + folder.type + ":" + folder.id +
                         " msgid=" + dup.msgid + " thread=" + dup.thread);
 
-                if (dup.folder.equals(folder.id) ||
-                        (EntityFolder.OUTBOX.equals(dfolder.type) && EntityFolder.SENT.equals(folder.type))) {
+                if (dup.folder.equals(folder.id)) {
                     String thread = helper.getThreadId(uid);
                     Log.i(folder.name + " found as id=" + dup.id + "/" +
                             " uid=" + dup.uid + "/" + uid +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -429,7 +429,8 @@ protected ContactInfo onExecute(Context context, Bundle args) {
 
                         ContactInfo info = ContactInfo.get(context, addresses);
 
-                        if ((info == null || !info.hasPhoto()) && identicons) {
+                        if ((info == null || !info.hasPhoto()) &&
+                                identicons && addresses != null && addresses.length > 0) {
                             Drawable ident = new BitmapDrawable(
                                     context.getResources(),
                                     Identicon.generate(addresses[0].toString(),

File: app/src/main/java/eu/faircode/email/EntityRule.java
Patch:
@@ -134,7 +134,7 @@ void execute(Context context, DB db, EntityMessage message) {
         try {
             JSONObject jargs = new JSONObject(action);
             int type = jargs.getInt("type");
-            Log.i("Executing rule=" + type + " message=" + message.id);
+            Log.i("Executing rule=" + type + ":" + name + " message=" + message.id);
 
             switch (type) {
                 case TYPE_SEEN:

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2638,7 +2638,8 @@ static void downloadMessage(
                 EntityAttachment attachment = attachments.get(i);
                 if (!attachment.available)
                     if (!metered || (attachment.size != null && attachment.size < maxSize))
-                        parts.downloadAttachment(context, db, attachment.id, attachment.sequence);
+                        if (!parts.downloadAttachment(context, db, attachment.id, attachment.sequence))
+                            break;
             }
         }
     }

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -145,6 +145,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
+        setOptions();
+
         swEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
@@ -337,8 +339,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        setOptions();
-
         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);
 
         return view;

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -69,6 +69,7 @@ public class EntityAttachment {
     public Integer progress;
     @NonNull
     public Boolean available = false;
+    public String error;
 
     boolean isInline() {
         return (disposition != null && disposition.equalsIgnoreCase(Part.INLINE));

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -305,6 +305,9 @@ public interface DaoMessage {
     @Query("UPDATE message SET headers = :headers WHERE id = :id")
     int setMessageHeaders(long id, String headers);
 
+    @Query("UPDATE message SET raw = :raw WHERE id = :id")
+    int setMessageRaw(long id, Boolean raw);
+
     @Query("UPDATE message SET stored = :stored WHERE id = :id")
     int setMessageStored(long id, long stored);
 

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -73,6 +73,7 @@ public class EntityOperation {
     static final String FLAG = "flag";
     static final String KEYWORD = "keyword";
     static final String HEADERS = "headers";
+    static final String RAW = "raw";
     static final String BODY = "body";
     static final String ATTACHMENT = "attachment";
     static final String SYNC = "sync";

File: app/src/main/java/eu/faircode/email/FragmentPro.java
Patch:
@@ -89,7 +89,7 @@ public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
         if ("pro".equals(key)) {
             boolean pro = prefs.getBoolean(key, false);
             tvActivated.setVisibility(pro ? View.VISIBLE : View.GONE);
-            btnPurchase.setEnabled(!pro);
+            btnPurchase.setEnabled(BuildConfig.DEBUG || !pro);
         }
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -616,9 +616,11 @@ public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_addresses).setVisible(working >= 0);
         menu.findItem(R.id.menu_clear).setVisible(state == State.LOADED);
         menu.findItem(R.id.menu_encrypt).setVisible(state == State.LOADED);
+        menu.findItem(R.id.menu_send_after).setVisible(state == State.LOADED);
 
         menu.findItem(R.id.menu_clear).setEnabled(!busy);
         menu.findItem(R.id.menu_encrypt).setEnabled(!busy);
+        menu.findItem(R.id.menu_send_after).setEnabled(!busy);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -41,7 +41,7 @@ abstract class ActivityBase extends AppCompatActivity implements SharedPreferenc
     private boolean contacts;
 
     private static String[] restart = new String[]{
-            "unified", "threading", "compact", "avatars", "identicons", "preview",
+            "unified", "threading", "compact", "avatars", "identicons", "preview", "addresses",
             "pull", "actionbar", "autoclose", "confirm", "debug"
     };
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -596,7 +596,7 @@ protected void onException(Bundle args, Throwable ex) {
 
                 Spanned body = properties.getBody(message.id);
                 tvBody.setText(body);
-                tvBody.setMovementMethod(new UrlHandler());
+                tvBody.setMovementMethod(null);
                 if (internet || message.content)
                     pbBody.setVisibility(View.VISIBLE);
                 else
@@ -1070,6 +1070,7 @@ protected void onExecuted(Bundle args, SpannableStringBuilder body) {
                 tvBody.setMovementMethod(new UrlHandler());
                 pbBody.setVisibility(View.GONE);
                 properties.setBody(message.id, body);
+
             }
 
             @Override

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -704,7 +704,8 @@ protected void onExecuted(Bundle args, final EntityIdentity identity) {
                     etEmail.setText(identity == null ? null : identity.email);
 
                     etDisplay.setText(identity == null ? null : identity.display);
-                    etSignature.setText(identity == null || identity.signature == null ? null : Html.fromHtml(identity.signature));
+                    etSignature.setText(identity == null ||
+                            TextUtils.isEmpty(identity.signature) ? null : Html.fromHtml(identity.signature));
 
                     etHost.setText(identity == null ? null : identity.host);
                     cbStartTls.setChecked(identity == null ? false : identity.starttls);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -395,8 +395,8 @@ public void run() {
                                             if (EntityFolder.OUTBOX.equals(folder.type)) {
                                                 Log.i("Delayed send id=" + message.id);
                                                 EntityOperation.queue(ServiceSynchronize.this, db, message, EntityOperation.SEND);
-                                            } else
-                                                db.message().setMessageSnoozed(message.id, null);
+                                            }
+                                            db.message().setMessageSnoozed(message.id, null);
                                             break;
 
                                         default:

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -103,7 +103,7 @@ private void unwire() {
         }
 
         private void bindTo(EntityAttachment attachment) {
-            ivDelete.setVisibility(readonly ? View.GONE : attachment.isInline() ? View.INVISIBLE : View.VISIBLE);
+            ivDelete.setVisibility(readonly ? View.GONE : View.VISIBLE);
             tvName.setText(attachment.name);
 
             if (attachment.size != null)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1180,8 +1180,10 @@ private static EntityAttachment addAttachment(Context context, long id, Uri uri,
                         db.attachment().setProgress(attachment.id, size * 100 / attachment.size);
                 }
 
-                if (image)
+                if (image) {
                     attachment.cid = "<" + BuildConfig.APPLICATION_ID + "." + attachment.id + ">";
+                    db.attachment().setCid(attachment.id, attachment.cid);
+                }
 
                 db.attachment().setDownloaded(attachment.id, size);
             } finally {

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -616,6 +616,7 @@ private static List<EntityAttachment> getAttachments(BodyPart part, boolean pgp)
         }
 
         if (content instanceof InputStream || content instanceof String) {
+            // https://www.iana.org/assignments/cont-disp/cont-disp.xhtml
             String disposition;
             try {
                 disposition = part.getDisposition();

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -151,7 +151,7 @@ public class EntityFolder implements Serializable {
     );
     static final List<Boolean> SYSTEM_FOLDER_DOWNLOAD = Arrays.asList(
             true, // drafts
-            true, // sent
+            false, // sent
             false, // archive
             false, // trash
             false // junk

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1376,8 +1376,10 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                 long id = args.getLong("id");
                 Uri uri = args.getParcelable("uri");
 
-                if ("file".equals(uri.getScheme()))
+                if ("file".equals(uri.getScheme())) {
+                    Log.w("Save attachment uri=" + uri);
                     throw new IllegalArgumentException(context.getString(R.string.title_no_stream));
+                }
 
                 File file = EntityAttachment.getFile(context, id);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -89,7 +89,7 @@ public class FragmentMessages extends FragmentEx {
     private ImageButton ibHintSelect;
     private ImageButton ibHintCompact;
     private TextView tvNoEmail;
-    private RecyclerView rvMessage;
+    private FixedRecyclerView rvMessage;
     private BottomNavigationView bottom_navigation;
     private ContentLoadingProgressBar pbWait;
     private Group grpSupport;
@@ -193,7 +193,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         ibHintSelect = view.findViewById(R.id.ibHintSelect);
         ibHintCompact = view.findViewById(R.id.ibHintCompact);
         tvNoEmail = view.findViewById(R.id.tvNoEmail);
-        rvMessage = view.findViewById(R.id.rvFolder);
+        rvMessage = view.findViewById(R.id.rvMessage);
         bottom_navigation = view.findViewById(R.id.bottom_navigation);
         pbWait = view.findViewById(R.id.pbWait);
         grpSupport = view.findViewById(R.id.grpSupport);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -524,10 +524,12 @@ protected CheckResult onExecute(Context context, Bundle args) throws Throwable {
                                     DB db = DB.getInstance(context);
                                     EntityFolder folder = db.folder().getFolderByName(id, ifolder.getFullName());
                                     if (folder == null) {
+                                        int sync = EntityFolder.SYSTEM_FOLDER_SYNC.indexOf(type);
                                         folder = new EntityFolder();
                                         folder.name = ifolder.getFullName();
                                         folder.type = (type == null ? EntityFolder.USER : type);
-                                        folder.synchronize = (type != null && EntityFolder.SYSTEM_FOLDER_SYNC.contains(type));
+                                        folder.synchronize = (sync >= 0);
+                                        folder.download = (sync < 0 ? true : EntityFolder.SYSTEM_FOLDER_DOWNLOAD.get(sync));
                                         folder.sync_days = EntityFolder.DEFAULT_SYNC;
                                         folder.keep_days = EntityFolder.DEFAULT_KEEP;
                                     }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -338,11 +338,13 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                                     }
 
                                     if (selectable && type != null) {
+                                        int sync = EntityFolder.SYSTEM_FOLDER_SYNC.indexOf(type);
                                         EntityFolder folder = new EntityFolder();
                                         folder.name = ifolder.getFullName();
                                         folder.type = type;
                                         folder.level = EntityFolder.getLevel(separator, folder.name);
-                                        folder.synchronize = EntityFolder.SYSTEM_FOLDER_SYNC.contains(type);
+                                        folder.synchronize = (sync >= 0);
+                                        folder.download = (sync < 0 ? true : EntityFolder.SYSTEM_FOLDER_DOWNLOAD.get(sync));
                                         folder.sync_days = EntityFolder.DEFAULT_SYNC;
                                         folder.keep_days = EntityFolder.DEFAULT_KEEP;
                                         folders.add(folder);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1632,6 +1632,7 @@ protected Void onExecute(Context context, Bundle args) {
                                                 // outbox
                                                 db.message().deleteMessage(id);
 
+                                                db.folder().setFolderError(message.folder, null);
                                                 db.identity().setIdentityError(message.identity, null);
 
                                                 NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -353,7 +353,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
 
                                 if (!drafts)
                                     throw new IllegalArgumentException(
-                                            context.getString(R.string.title_setup_no_settings));
+                                            context.getString(R.string.title_setup_no_settings, dparts[1]));
                             } finally {
                                 if (istore != null)
                                     istore.close();

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -296,6 +296,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                         EntityFolder inbox = new EntityFolder();
                         inbox.name = "INBOX";
                         inbox.type = EntityFolder.INBOX;
+                        inbox.level = 0;
                         inbox.synchronize = true;
                         inbox.unified = true;
                         inbox.notify = true;

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -301,6 +301,7 @@ protected Void onExecute(Context context, Bundle args) throws Throwable {
                         inbox.notify = true;
                         inbox.sync_days = EntityFolder.DEFAULT_SYNC;
                         inbox.keep_days = EntityFolder.DEFAULT_KEEP;
+                        folders.add(inbox);
 
                         {
                             Properties props = MessageHelper.getSessionProperties(auth_type, false);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -250,7 +250,7 @@ public interface DaoMessage {
 
     @Query("SELECT uid FROM message" +
             " WHERE folder = :folder" +
-            " AND (received IS NULL OR received >= :received)" +
+            " AND (:received IS NULL OR received >= :received)" +
             " AND NOT uid IS NULL")
     List<Long> getUids(long folder, Long received);
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -136,9 +136,9 @@ public class EntityFolder implements Serializable {
             USER
     );
 
-    static final int DEFAULT_INIT = 7; // days
-    static final int DEFAULT_SYNC = 1; // days
-    static final int DEFAULT_KEEP = 14; // days
+    static final int DEFAULT_INIT = 14; // days
+    static final int DEFAULT_SYNC = 7; // days
+    static final int DEFAULT_KEEP = 30; // days
 
     static final List<String> SYSTEM_FOLDER_SYNC = Arrays.asList(
             DRAFTS,

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -161,7 +161,8 @@ public interface DaoFolder {
 
     @Query("UPDATE folder" +
             " SET type = '" + EntityFolder.USER + "'" +
-            " WHERE account = :account")
+            " WHERE account = :account" +
+            " AND type <> '" + EntityFolder.SYSTEM + "'")
     int setFoldersUser(long account);
 
     @Query("UPDATE folder" +

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2025,10 +2025,10 @@ private void synchronizeFolders(EntityAccount account, IMAPStore istore, Service
 
                         db.folder().setFolderLevel(folder.id, level);
 
+                        // Compatibility
                         if ("Inbox_sub".equals(folder.type))
                             db.folder().setFolderType(folder.id, EntityFolder.USER);
-                        else if (EntityFolder.USER.equals(folder.type) &&
-                                type != null && !EntityFolder.USER.equals(type))
+                        if (EntityFolder.USER.equals(folder.type) && EntityFolder.SYSTEM.equals(type))
                             db.folder().setFolderType(folder.id, type);
                     }
                 }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -189,7 +189,7 @@ else if (zoom == 2)
             else
                 ta = context.obtainStyledAttributes(
                         R.style.TextAppearance_AppCompat_Medium, new int[]{android.R.attr.textSize});
-            return ta.getDimension(0, 0) / context.getResources().getDisplayMetrics().density;
+            return ta.getDimension(0, 0);
         } finally {
             if (ta != null)
                 ta.recycle();

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -189,6 +189,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                 prefs.edit().putBoolean("compact", checked).apply();
+                prefs.edit().remove("zoom").apply();
             }
         });
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1855,7 +1855,7 @@ protected void onLoaded(Bundle args, Boolean[] data) {
 
                             @Override
                             protected void onException(Bundle args, Throwable ex) {
-
+                                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                             }
                         }.load(FragmentMessages.this, args);
                     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -616,7 +616,7 @@ private List<Notification> getNotificationUnseen(long account, String accountNam
 
             mbuilder
                     .addExtras(args)
-                    .setSmallIcon(R.drawable.baseline_mail_24)
+                    .setSmallIcon(R.drawable.baseline_email_white_24)
                     .setContentTitle(MessageHelper.getFormattedAddresses(message.from, true))
                     .setSubText(message.accountName + " · " + folderName)
                     .setContentIntent(piContent)

File: app/src/main/java/eu/faircode/email/TupleMessageEx.java
Patch:
@@ -30,6 +30,7 @@ public class TupleMessageEx extends EntityMessage {
     public int unseen;
     public int unflagged;
     public int attachments;
+    public int visible;
     public boolean duplicate;
 
     @Override
@@ -47,6 +48,7 @@ public boolean uiEquals(Object obj) {
                     this.unseen == other.unseen &&
                     this.unflagged == other.unflagged &&
                     this.attachments == other.attachments &&
+                    this.visible == other.visible &&
                     this.duplicate == other.duplicate);
         }
         return false;
@@ -67,6 +69,7 @@ public boolean equals(Object obj) {
                     this.unseen == other.unseen &&
                     this.unflagged == other.unflagged &&
                     this.attachments == other.attachments &&
+                    this.visible == other.visible &&
                     this.duplicate == other.duplicate);
         }
         return false;

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -222,10 +222,10 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (!Patterns.EMAIL_ADDRESS.matcher(email).matches())
                             throw new IllegalArgumentException(context.getString(R.string.title_email_invalid));
 
-                        String domain = email.split("@")[1];
-                        Provider provider = Provider.fromDomain(context, domain);
+                        String[] dparts = email.split("@");
+                        Provider provider = Provider.fromDomain(context, dparts[1]);
 
-                        String user = email; // TODO
+                        String user = (provider.user == Provider.UserType.EMAIL ? email : dparts[0]);
 
                         Character separator;
                         long now = new Date().getTime();

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -665,8 +665,8 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(prefix))
                             prefix = null;
 
-                        long now = new Date().getTime();
                         Character separator = null;
+                        long now = new Date().getTime();
 
                         DB db = DB.getInstance(context);
                         EntityAccount account = db.account().getAccount(id);
@@ -697,8 +697,8 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                     } else
                                         throw ex;
                                 }
-                            } finally {
                                 separator = istore.getDefaultFolder().getSeparator();
+                            } finally {
                                 if (istore != null)
                                     istore.close();
                             }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -419,7 +419,7 @@ protected void onException(Bundle args, Throwable ex) {
                 flagged = (message.count - message.unflagged > 0);
             ivFlagged.setImageResource(flagged ? R.drawable.baseline_star_24 : R.drawable.baseline_star_border_24);
             ivFlagged.setImageTintList(ColorStateList.valueOf(flagged ? colorAccent : textColorSecondary));
-            ivFlagged.setVisibility(message.uid == null ? View.GONE : View.VISIBLE);
+            ivFlagged.setVisibility(message.uid == null ? View.INVISIBLE : View.VISIBLE);
 
             tvFrom.setText(MessageHelper.getFormattedAddresses(outgoing ? message.to : message.from, false));
             tvSize.setText(message.size == null ? null : Helper.humanReadableByteCount(message.size, true));

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -170,6 +170,7 @@ public interface DaoMessage {
             " AND thread = :thread" +
             " AND (:id IS NULL OR message.id = :id)" +
             " AND (:folder IS NULL OR message.folder = :folder)" +
+            " AND NOT uid IS NULL" +
             " AND NOT ui_hide")
     List<EntityMessage> getMessageByThread(long account, String thread, Long id, Long folder);
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -144,8 +144,8 @@ public class EntityFolder implements Serializable {
             DRAFTS,
             SENT,
             ARCHIVE,
-            TRASH
-            // not spam
+            TRASH,
+            JUNK
     );
 
     public EntityFolder() {

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -402,7 +402,7 @@ public void onClick(View v) {
                     new Handler().post(new Runnable() {
                         @Override
                         public void run() {
-                            ((ScrollView) view).smoothScrollTo(0, cbPrimary.getTop());
+                            ((ScrollView) view).smoothScrollTo(0, cbSynchronize.getTop());
                         }
                     });
             }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -180,9 +180,7 @@ static MimeMessageEx from(Context context, EntityMessage message, Session isessi
         if (message.replying != null)
             replying = db.message().getMessage(message.replying);
 
-        if (replying == null)
-            imessage.addHeader("References", message.msgid);
-        else {
+        if (replying != null) {
             imessage.addHeader("In-Reply-To", replying.msgid);
             imessage.addHeader("References", (replying.references == null ? "" : replying.references + " ") + replying.msgid);
         }

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -47,9 +47,9 @@ public class EntityIdentity {
     public Long id;
     @NonNull
     public String name;
-    public String display;
     @NonNull
     public String email;
+    public String display;
     public String replyto;
     public String bcc;
     @NonNull

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -87,7 +87,7 @@ private void load() {
                 @Override
                 public void run() {
                     try {
-                        searching = true;
+                        searching = model.isSearching();
                         handler.post(new Runnable() {
                             @Override
                             public void run() {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -430,8 +430,8 @@ protected void onException(Bundle args, Throwable ex) {
             selectionTracker.addObserver(new SelectionTracker.SelectionObserver() {
                 @Override
                 public void onSelectionChanged() {
-                    swipeRefresh.setEnabled(false);
                     if (selectionTracker.hasSelection()) {
+                        swipeRefresh.setEnabled(false);
                         if (messages != null)
                             messages.removeObservers(getViewLifecycleOwner());
                         fabMore.show();

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -84,6 +84,8 @@ void load() throws MessagingException, IOException {
         EntityFolder folder = db.folder().getFolder(state.fid);
         if (folder == null) // unified inbox
             return;
+        if (folder.account == null) // outbox
+            return;
 
         if (state.search == null) {
             EntityAccount account = db.account().getAccount(folder.account);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1297,6 +1297,7 @@ protected void onLoaded(Bundle args, PendingIntent pi) {
                                 ActivityView.REQUEST_DECRYPT,
                                 null, 0, 0, 0, null);
                     } catch (IntentSender.SendIntentException ex) {
+                        Log.e(ex);
                         Helper.unexpectedError(ActivityView.this, ActivityView.this, ex);
                     }
             }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -765,6 +765,7 @@ protected void onLoaded(Bundle args, PendingIntent pi) {
                                 ActivityCompose.REQUEST_ENCRYPT,
                                 null, 0, 0, 0, null);
                     } catch (IntentSender.SendIntentException ex) {
+                        Log.e(ex);
                         Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                     }
             }

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -135,6 +135,7 @@ static void view(Context context, LifecycleOwner owner, Uri uri, boolean browse)
             } catch (ActivityNotFoundException ex) {
                 Toast.makeText(context, context.getString(R.string.title_no_viewer, uri.toString()), Toast.LENGTH_LONG).show();
             } catch (Throwable ex) {
+                Log.e(ex);
                 Helper.unexpectedError(context, owner, ex);
             }
         }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -247,6 +247,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int position,
                 tilPassword.getEditText().setText(null);
 
                 etName.setText(position > 1 ? provider.name : null);
+                etPrefix.setText(provider.prefix);
 
                 grpFolders.setVisibility(View.GONE);
                 btnSave.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -728,12 +728,12 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                             if (!update)
                                 account.created = now;
+
+                            account.error = null;
+
                             if (synchronize)
                                 account.last_connected = now;
 
-                            if (!synchronize)
-                                account.error = null;
-
                             if (account.primary)
                                 db.account().resetPrimary();
 

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -222,12 +222,10 @@ protected Void onLoad(Context context, Bundle args) {
                                         display, unified, notify, hide,
                                         synchronize, poll, download,
                                         sync_days, keep_days);
+                                db.folder().setFolderError(id, null);
 
                                 db.message().deleteMessagesBefore(id, keep_time, true);
 
-                                if (!synchronize)
-                                    db.folder().setFolderError(id, null);
-
                                 EntityOperation.sync(db, folder.id);
                             }
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -516,9 +516,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                             identity.primary = (identity.synchronize && primary);
                             identity.store_sent = false;
                             identity.sent_folder = (sent == null ? null : sent.id);
-
-                            if (!identity.synchronize)
-                                identity.error = null;
+                            identity.error = null;
 
                             if (identity.primary)
                                 db.identity().resetPrimary();

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -79,6 +79,7 @@
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
+import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -1372,7 +1373,8 @@ else if (TextUtils.isEmpty(etSubject.getText()))
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
+                    if (!(ex instanceof FileNotFoundException))
+                        Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                 }
             }.load(FragmentCompose.this, a);
 

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -155,6 +155,9 @@ public interface DaoFolder {
     @Query("UPDATE folder SET type = :type WHERE id = :id")
     int setFolderType(long id, String type);
 
+    @Query("UPDATE folder SET display = :display WHERE id = :id")
+    int setFolderDisplay(long id, String display);
+
     @Query("UPDATE folder SET level = :level WHERE id = :id")
     int setFolderLevel(long id, int level);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1772,6 +1772,7 @@ private void doSend(EntityMessage message, DB db) throws MessagingException, IOE
                 message.sent = imessage.getSentDate().getTime();
                 message.seen = true;
                 message.ui_seen = true;
+                message.error = null;
                 db.message().updateMessage(message);
 
                 if (ident.store_sent || ident.sent_folder != null) {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -1352,6 +1352,7 @@ private void onViewThread(Intent intent) {
         else {
             pane = R.id.content_pane;
             grpPane.setVisibility(View.VISIBLE);
+            args.putBoolean("pane", true);
         }
 
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();

File: app/src/main/java/eu/faircode/email/FragmentEx.java
Patch:
@@ -121,7 +121,8 @@ public void onDestroy() {
 
     private void updateSubtitle() {
         AppCompatActivity activity = (AppCompatActivity) getActivity();
-        if (activity != null) {
+        Bundle args = getArguments();
+        if (activity != null && (args == null || !args.getBoolean("pane"))) {
             ActionBar actionbar = activity.getSupportActionBar();
             if (actionbar != null)
                 actionbar.setSubtitle(subtitle);

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -86,7 +86,8 @@ public class EntityFolder implements Serializable {
     @NonNull
     public Boolean notify = false;
     public String[] keywords;
-    public Boolean tbd;
+    public Boolean tbc; // to be created
+    public Boolean tbd; // to be deleted
     public String state;
     public String sync_state;
     public String error;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -248,8 +248,6 @@ public class ViewHolder extends RecyclerView.ViewHolder implements
             grpHeaders = itemView.findViewById(R.id.grpHeaders);
             grpAttachments = itemView.findViewById(R.id.grpAttachments);
             grpExpanded = itemView.findViewById(R.id.grpExpanded);
-
-            tvBody.setMovementMethod(new UrlHandler());
         }
 
         private void wire() {
@@ -493,6 +491,7 @@ else if (zoom == 2)
                 ta.recycle();
 
                 tvBody.setText(null);
+                tvBody.setMovementMethod(null);
                 pbBody.setVisibility(View.VISIBLE);
 
                 if (message.content) {
@@ -849,6 +848,7 @@ protected void onLoaded(Bundle args, SpannableStringBuilder body) {
                 ibQuotes.setVisibility(has_quotes && show_expanded && !show_quotes ? View.VISIBLE : View.GONE);
                 ibImages.setVisibility(has_images && show_expanded && !show_images ? View.VISIBLE : View.GONE);
                 tvBody.setText(body);
+                tvBody.setMovementMethod(new UrlHandler());
                 pbBody.setVisibility(View.GONE);
             }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1951,7 +1951,7 @@ private void synchronizeFolders(EntityAccount account, IMAPStore istore, Service
                         names.remove(folder.name);
                         Log.i(Helper.TAG, folder.name + " exists");
                         db.folder().setFolderLevel(folder.id, level);
-                        if (EntityFolder.USER.equals(folder.type) && type != null)
+                        if (EntityFolder.USER.equals(folder.type) && EntityFolder.SYSTEM.equals(type))
                             db.folder().setFolderType(folder.id, type);
                     }
                 }

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -139,6 +139,7 @@ static Properties getSessionProperties(int auth_type, boolean insecure) {
         props.put("mail.mime.decodetext.strict", "false");
 
         props.put("mail.mime.ignoreunknownencoding", "true"); // Content-Transfer-Encoding
+        props.put("mail.mime.base64.ignoreerrors", "true");
         props.put("mail.mime.decodefilename", "true");
         props.put("mail.mime.encodefilename", "true");
 

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -41,7 +41,7 @@ public interface DaoOperation {
     @Query("SELECT operation.*, account.name AS accountName, folder.name AS folderName" +
             " FROM operation" +
             " JOIN folder ON folder.id = operation.folder" +
-            " JOIN account ON account.id = folder.account" +
+            " LEFT JOIN account ON account.id = folder.account" +
             " ORDER BY operation.id")
     LiveData<List<TupleOperationEx>> liveOperations();
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -357,6 +357,7 @@ private void bindTo(int position, final TupleMessageEx message) {
                     : View.INVISIBLE);
 
             vwColor.setBackgroundColor(message.accountColor == null ? Color.TRANSPARENT : message.accountColor);
+            vwColor.setVisibility(View.VISIBLE);
 
             ivExpander.setImageResource(show_expanded ? R.drawable.baseline_expand_less_24 : R.drawable.baseline_expand_more_24);
             if (viewType == ViewType.THREAD && threading)

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -373,7 +373,7 @@ public void onChanged(@Nullable List<EntityAccount> accounts) {
                     livePrimaryDrafts.removeObservers(getViewLifecycleOwner());
 
                 if (livePrimaryArchive == null)
-                    livePrimaryArchive = db.folder().livePrimaryDrafts();
+                    livePrimaryArchive = db.folder().livePrimaryArchive();
                 else
                     livePrimaryArchive.removeObservers(getViewLifecycleOwner());
 

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -213,7 +213,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                                 Log.i(Helper.TAG, "Updating folder=" + name);
                                 db.folder().setFolderProperties(id,
-                                        name, display, unified, hide, notify,
+                                        name, display, unified, notify, hide,
                                         synchronize, poll, download,
                                         sync_days, keep_days);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -439,7 +439,7 @@ private void bindTo(int position, final TupleMessageEx message) {
 
             grpAddress.setVisibility(viewType == ViewType.THREAD && show_expanded && show_addresses ? View.VISIBLE : View.GONE);
             tvKeywords.setVisibility(View.GONE);
-            ivAddContact.setVisibility(viewType == ViewType.THREAD && show_expanded && contacts && message.from != null ? View.VISIBLE : View.GONE);
+            ivAddContact.setVisibility(viewType == ViewType.THREAD && show_expanded && show_addresses && contacts && message.from != null ? View.VISIBLE : View.GONE);
             pbHeaders.setVisibility(View.GONE);
             grpHeaders.setVisibility(show_headers && show_expanded ? View.VISIBLE : View.GONE);
             bnvActions.setVisibility(viewType == ViewType.THREAD && show_expanded ? View.INVISIBLE : View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1664,6 +1664,7 @@ protected void onLoaded(Bundle args, EntityMessage draft) {
 
         @Override
         protected void onException(Bundle args, Throwable ex) {
+            busy = false;
             Helper.setViewsEnabled(view, true);
             getActivity().invalidateOptionsMenu();
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -599,7 +599,8 @@ private static List<EntityAttachment> getAttachments(BodyPart part) throws
 
                 // Try to guess a better content type
                 // Sometimes PDF files are sent using the wrong type
-                if ("application/octet-stream".equals(attachment.type)) {
+                if ("application/octet-stream".equals(attachment.type) ||
+                        "message/disposition-notification".equals(attachment.type)) {
                     String extension = Helper.getExtension(attachment.name);
                     if (extension != null) {
                         String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase());

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1064,7 +1064,7 @@ protected DraftAccount onLoad(Context context, Bundle args) throws IOException {
                     if (aid < 0) {
                         result.account = db.account().getPrimaryAccount();
                         if (result.account == null)
-                            throw new IllegalArgumentException(context.getString(R.string.title_no_account));
+                            throw new IllegalArgumentException(context.getString(R.string.title_no_primary_drafts));
                     } else
                         result.account = db.account().getAccount(aid);
                 } else {
@@ -1815,4 +1815,4 @@ public boolean onBackPressed() {
             return true;
         }
     };
-}
\ No newline at end of file
+}

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -175,6 +175,9 @@ int setFolderProperties(
     @Query("UPDATE folder SET name = :name WHERE account = :account AND name = :old")
     int renameFolder(long account, String old, String name);
 
+    @Query("UPDATE folder SET initialize = 0 WHERE id = :id")
+    int setFolderInitialized(long id);
+
     @Query("UPDATE folder SET tbd = 1 WHERE id = :id")
     int setFolderTbd(long id);
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -281,9 +281,7 @@ public int compare(EntityAccount a1, EntityAccount a2) {
 
                 drawerArray.add(new DrawerItem(R.layout.item_drawer_separator));
 
-                if (PreferenceManager.getDefaultSharedPreferences(ActivityView.this).getBoolean("debug", false))
-                    drawerArray.add(new DrawerItem(ActivityView.this, R.layout.item_drawer, R.drawable.baseline_list_24, R.string.menu_operations));
-
+                drawerArray.add(new DrawerItem(ActivityView.this, R.layout.item_drawer, R.drawable.baseline_list_24, R.string.menu_operations));
                 drawerArray.add(new DrawerItem(ActivityView.this, R.layout.item_drawer, R.drawable.baseline_help_24, R.string.menu_legend));
 
                 if (getIntentFAQ().resolveActivity(getPackageManager()) != null)

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -87,7 +87,7 @@ private void bindTo(TupleIdentityEx identity) {
             itemView.setActivated(identity.tbd != null);
             vwColor.setBackgroundColor(identity.color == null ? Color.TRANSPARENT : identity.color);
             ivPrimary.setVisibility(identity.primary ? View.VISIBLE : View.INVISIBLE);
-            tvName.setText(identity.name);
+            tvName.setText(identity.getDisplayName());
             ivSync.setImageResource(identity.synchronize ? R.drawable.baseline_sync_24 : R.drawable.baseline_sync_disabled_24);
             tvUser.setText(identity.email);
             tvHost.setText(String.format("%s:%d", identity.host, identity.port));

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1397,7 +1397,7 @@ public void onChanged(@Nullable List<EntityIdentity> identities) {
                                     Collections.sort(identities, new Comparator<EntityIdentity>() {
                                         @Override
                                         public int compare(EntityIdentity i1, EntityIdentity i2) {
-                                            return i1.name.compareTo(i2.name);
+                                            return i1.toString().compareTo(i2.toString());
                                         }
                                     });
 
@@ -1819,7 +1819,7 @@ View getLayout(int position, View convertView, ViewGroup parent, int resid) {
             EntityIdentity identity = identities.get(position);
 
             TextView text1 = view.findViewById(android.R.id.text1);
-            text1.setText(identity.name);
+            text1.setText(identity.toString());
 
             TextView text2 = view.findViewById(android.R.id.text2);
             text2.setText(identity.email);

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -189,7 +189,7 @@ static String formatThrowable(Throwable ex) {
     }
 
     static void unexpectedError(final Context context, final LifecycleOwner owner, final Throwable ex) {
-        Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
+        ApplicationEx.writeCrashLog(context, ex);
 
         if (owner.getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
             new DialogBuilderLifecycle(context, owner)

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -47,9 +47,6 @@ public interface DaoAccount {
     @Query("SELECT * FROM account WHERE `primary`")
     EntityAccount getPrimaryAccount();
 
-    @Query("SELECT COUNT(*) FROM account WHERE synchronize")
-    int getSynchronizingAccountCount();
-
     @Query("SELECT * FROM account WHERE `primary`")
     LiveData<EntityAccount> livePrimaryAccount();
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -177,6 +177,8 @@ public void onDrawerOpened(View drawerView) {
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 DrawerItem item = (DrawerItem) parent.getAdapter().getItem(position);
                 switch (item.getId()) {
+                    case 0: // separator
+                        return;
                     case -1:
                         onMenuFolders((long) item.getData());
                         break;
@@ -1124,6 +1126,7 @@ private class DrawerItem {
         private Object data;
 
         DrawerItem(int layout) {
+            this.id = 0;
             this.layout = layout;
         }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1223,7 +1223,7 @@ private void onManageKeywords(ActionData data) {
 
             new SimpleTask<EntityFolder>() {
                 @Override
-                protected EntityFolder onLoad(Context context, Bundle args) throws Throwable {
+                protected EntityFolder onLoad(Context context, Bundle args) {
                     EntityMessage message = (EntityMessage) args.getSerializable("message");
                     return DB.getInstance(context).folder().getFolder(message.folder);
                 }
@@ -1265,7 +1265,7 @@ public void onClick(DialogInterface dialog, int which) {
 
                                     new SimpleTask<Void>() {
                                         @Override
-                                        protected Void onLoad(Context context, Bundle args) throws Throwable {
+                                        protected Void onLoad(Context context, Bundle args) {
                                             EntityMessage message = (EntityMessage) args.getSerializable("message");
                                             String[] keywords = args.getStringArray("keywords");
                                             boolean[] selected = args.getBooleanArray("selected");
@@ -1312,7 +1312,7 @@ public void onClick(DialogInterface dialog, int which) {
 
                                                         new SimpleTask<Void>() {
                                                             @Override
-                                                            protected Void onLoad(Context context, Bundle args) throws Throwable {
+                                                            protected Void onLoad(Context context, Bundle args) {
                                                                 EntityMessage message = (EntityMessage) args.getSerializable("message");
                                                                 String keyword = args.getString("keyword");
 

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -153,7 +153,7 @@ public boolean onLongClick(View view) {
 
             new SimpleTask<Void>() {
                 @Override
-                protected Void onLoad(Context context, Bundle args) throws Throwable {
+                protected Void onLoad(Context context, Bundle args) {
                     DB.getInstance(context).operation().deleteOperation(args.getLong("id"));
                     return null;
                 }

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -180,7 +180,4 @@ int setFolderProperties(
 
     @Query("DELETE FROM folder WHERE id = :id")
     void deleteFolder(long id);
-
-    @Query("DELETE FROM folder WHERE account= :account AND name = :name")
-    void deleteFolder(long account, String name);
 }

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -142,7 +142,7 @@ public class EntityMessage implements Serializable {
     public Long last_attempt; // send
 
     static String generateMessageId() {
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         sb.append('<')
                 .append(Math.abs(new Random().nextInt())).append('.')
                 .append(System.currentTimeMillis()).append('.')

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1452,7 +1452,7 @@ public void onNothingSelected(AdapterView<?> parent) {
 
                     // Select account
                     for (int pos = 0; pos < accounts.size(); pos++)
-                        if (accounts.get(pos).id == result.draft.account) {
+                        if (accounts.get(pos).id.equals(result.draft.account)) {
                             spAccount.setSelection(pos);
                             break;
                         }

File: app/src/main/java/eu/faircode/email/FragmentLegend.java
Patch:
@@ -33,8 +33,6 @@ public class FragmentLegend extends FragmentEx {
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         setSubtitle(R.string.menu_legend);
 
-        View view = inflater.inflate(R.layout.fragment_legend, container, false);
-
-        return view;
+        return inflater.inflate(R.layout.fragment_legend, container, false);
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentWebView.java
Patch:
@@ -48,6 +48,7 @@
 
 import java.io.File;
 import java.io.FileInputStream;
+import java.io.IOException;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -148,7 +149,8 @@ protected String onLoad(Context context, Bundle args) throws Throwable {
 
                                             fis = new FileInputStream(file);
                                             byte[] bytes = new byte[(int) file.length()];
-                                            fis.read(bytes);
+                                            if (fis.read(bytes) != bytes.length)
+                                                throw new IOException("length");
 
                                             StringBuilder sb = new StringBuilder();
                                             sb.append("data:");

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -272,7 +272,7 @@ static Address myAddress() throws UnsupportedEncodingException {
     }
 
     static String canonicalAddress(String address) {
-        String[] a = address.split("\\@");
+        String[] a = address.split("@");
         if (a.length > 0)
             a[0] = a[0].split("\\+")[0];
         return TextUtils.join("@", a);

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -34,7 +34,7 @@
 public class HtmlHelper {
     private static Pattern pattern = Pattern.compile("([http|https]+://[\\w\\S(\\.|:|/)]+)");
 
-    public static String sanitize(String html) {
+    static String sanitize(String html) {
         Document document = Jsoup.parse(Jsoup.clean(html, Whitelist.relaxed().addProtocols("img", "src", "cid")));
 
         for (Element tr : document.select("tr"))

File: app/src/main/java/eu/faircode/email/MimeMessageEx.java
Patch:
@@ -28,7 +28,7 @@
 public class MimeMessageEx extends MimeMessage {
     private String msgid;
 
-    public MimeMessageEx(Session session, String msgid) {
+    MimeMessageEx(Session session, String msgid) {
         super(session);
         this.msgid = msgid;
     }

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -828,7 +828,7 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     private void onMenuInvite() {
-        startActivityForResult(getIntentInvite(), REQUEST_INVITE);
+        startActivityForResult(Helper.getChooser(this, getIntentInvite()), REQUEST_INVITE);
     }
 
     private void onMenuOtherApps() {
@@ -1279,7 +1279,7 @@ private void onStoreAttachment(Intent intent) {
         if (create.resolveActivity(getPackageManager()) == null)
             Snackbar.make(getVisibleView(), R.string.title_no_saf, Snackbar.LENGTH_LONG).show();
         else
-            startActivityForResult(create, REQUEST_ATTACHMENT);
+            startActivityForResult(Helper.getChooser(this, create), REQUEST_ATTACHMENT);
     }
 
     private void onDecrypt(Intent intent) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -246,7 +246,7 @@ public void onClick(View view) {
                 if (pick.resolveActivity(getContext().getPackageManager()) == null)
                     Snackbar.make(view, R.string.title_no_contacts, Snackbar.LENGTH_LONG).show();
                 else
-                    startActivityForResult(pick, request);
+                    startActivityForResult(Helper.getChooser(getContext(), pick), request);
             }
         };
 
@@ -554,7 +554,7 @@ private void onMenuImage() {
         if (intent.resolveActivity(pm) == null)
             Snackbar.make(view, R.string.title_no_saf, Snackbar.LENGTH_LONG).show();
         else
-            startActivityForResult(intent, ActivityCompose.REQUEST_IMAGE);
+            startActivityForResult(Helper.getChooser(getContext(), intent), ActivityCompose.REQUEST_IMAGE);
     }
 
     private void onMenuAttachment() {
@@ -565,7 +565,7 @@ private void onMenuAttachment() {
         if (intent.resolveActivity(pm) == null)
             Snackbar.make(view, R.string.title_no_saf, Snackbar.LENGTH_LONG).show();
         else
-            startActivityForResult(intent, ActivityCompose.REQUEST_ATTACHMENT);
+            startActivityForResult(Helper.getChooser(getContext(), intent), ActivityCompose.REQUEST_ATTACHMENT);
     }
 
     private void onMenuAddresses() {

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -218,7 +218,7 @@ public void onClick(View v) {
                 intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TITLE, getString(R.string.title_advanced_sound));
                 intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
                 intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI, sound == null ? null : Uri.parse(sound));
-                startActivityForResult(intent, ActivitySetup.REQUEST_SOUND);
+                startActivityForResult(Helper.getChooser(getContext(), intent), ActivitySetup.REQUEST_SOUND);
             }
         });
 

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -500,7 +500,7 @@ private void onMenuLegend() {
     private void onMenuExport() {
         if (Helper.isPro(getContext()))
             try {
-                startActivityForResult(getIntentExport(), ActivitySetup.REQUEST_EXPORT);
+                startActivityForResult(Helper.getChooser(getContext(), getIntentExport()), ActivitySetup.REQUEST_EXPORT);
             } catch (Throwable ex) {
                 Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
             }
@@ -513,7 +513,7 @@ private void onMenuExport() {
 
     private void onMenuImport() {
         try {
-            startActivityForResult(getIntentImport(), ActivitySetup.REQUEST_IMPORT);
+            startActivityForResult(Helper.getChooser(getContext(), getIntentImport()), ActivitySetup.REQUEST_IMPORT);
         } catch (Throwable ex) {
             Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1437,6 +1437,9 @@ protected Void onLoad(Context context, Bundle args) {
                                             if (message.uid == null && !TextUtils.isEmpty(message.error)) {
                                                 // outbox
                                                 db.message().deleteMessage(id);
+
+                                                db.identity().setIdentityError(message.identity, null);
+
                                                 NotificationManager nm = context.getSystemService(NotificationManager.class);
                                                 nm.cancel("send", message.account.intValue());
                                             } else

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -196,13 +196,11 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             @Override
             public void onRefresh() {
                 Bundle args = new Bundle();
-                args.putLong("account", account);
                 args.putLong("folder", folder);
 
                 new SimpleTask<Boolean>() {
                     @Override
                     protected Boolean onLoad(Context context, Bundle args) {
-                        long aid = args.getLong("account");
                         long fid = args.getLong("folder");
 
                         boolean connected = false;
@@ -212,7 +210,7 @@ protected Boolean onLoad(Context context, Bundle args) {
                             db.beginTransaction();
 
                             List<EntityFolder> folders = new ArrayList<>();
-                            if (aid < 0)
+                            if (fid < 0)
                                 folders.addAll(db.folder().getUnifiedFolders());
                             else
                                 folders.add(db.folder().getFolder(fid));

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -212,7 +212,7 @@ protected Long onLoad(Context context, Bundle args) throws Throwable {
                                             draft.folder = drafts.id;
                                             draft.msgid = EntityMessage.generateMessageId();
                                             draft.to = new Address[]{Helper.myAddress()};
-                                            draft.subject = context.getString(R.string.app_name) + " " + BuildConfig.VERSION_NAME + " crash log";
+                                            draft.subject = context.getString(R.string.app_name) + " " + BuildConfig.VERSION_NAME + " unexpected error";
                                             draft.content = true;
                                             draft.received = new Date().getTime();
                                             draft.setContactInfo(context);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1829,6 +1829,7 @@ private void synchronizeFolders(EntityAccount account, IMAPStore istore, Service
                         folder.type = EntityFolder.USER;
                         folder.level = level;
                         folder.synchronize = false;
+                        folder.poll = ("imap.gmail.com".equals(account.host));
                         folder.sync_days = EntityFolder.DEFAULT_USER_SYNC;
                         folder.keep_days = EntityFolder.DEFAULT_USER_SYNC;
                         db.folder().insertFolder(folder);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1376,10 +1376,9 @@ public int compare(EntityAccount a1, EntityAccount a2) {
                         public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                             EntityAccount account = (EntityAccount) parent.getAdapter().getItem(position);
 
-                            if (liveIdentities == null)
-                                liveIdentities = db.identity().liveIdentities(account.id, true);
-                            else
+                            if (liveIdentities != null)
                                 liveIdentities.removeObservers(getViewLifecycleOwner());
+                            liveIdentities = db.identity().liveIdentities(account.id, true);
 
                             liveIdentities.observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
                                 @Override

File: app/src/main/java/eu/faircode/email/ServiceTileUnseen.java
Patch:
@@ -86,8 +86,10 @@ public void onChanged(List<TupleMessageEx> messages) {
 
     public void onStopListening() {
         Log.i(Helper.TAG, "Stop tile unseen");
-        if (liveMessages != null)
+        if (liveMessages != null) {
             liveMessages.removeObservers(owner);
+            liveMessages = null;
+        }
     }
 
     public void onClick() {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -202,6 +202,7 @@ public void onRefresh() {
                 Bundle args = new Bundle();
                 args.putLong("account", account);
                 args.putLong("folder", folder);
+
                 new SimpleTask<Void>() {
                     @Override
                     protected Void onLoad(Context context, Bundle args) {

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -148,6 +148,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                 Session isession = Session.getInstance(props, null);
                                 istore = (IMAPStore) isession.getStore(account.starttls ? "imap" : "imaps");
                                 Helper.connect(context, istore, account);
+                                char separator = istore.getDefaultFolder().getSeparator();
 
                                 if (folder == null) {
                                     Log.i(Helper.TAG, "Creating folder=" + name);
@@ -160,6 +161,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                     EntityFolder create = new EntityFolder();
                                     create.account = aid;
                                     create.name = name;
+                                    create.level = EntityFolder.getLevel(separator, name);
                                     create.display = display;
                                     create.hide = hide;
                                     create.type = EntityFolder.USER;

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -313,6 +313,7 @@ protected Void onLoad(Context context, Bundle args) {
                         outbox = new EntityFolder();
                         outbox.name = "OUTBOX";
                         outbox.type = EntityFolder.OUTBOX;
+                        outbox.level = 0;
                         outbox.synchronize = false;
                         outbox.sync_days = 0;
                         outbox.keep_days = 0;

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1469,8 +1469,7 @@ else if (messages.size() == 1)
                 grpReady.setVisibility(View.VISIBLE);
 
                 if (messages.size() == 0) {
-                    if (searchCallback == null)
-                        tvNoEmail.setVisibility(View.VISIBLE);
+                    tvNoEmail.setVisibility(searching ? View.GONE : View.VISIBLE);
                     rvMessage.setVisibility(View.GONE);
                 } else {
                     tvNoEmail.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -37,6 +37,9 @@ public interface DaoOperation {
     @Query("SELECT * FROM operation ORDER BY id")
     LiveData<List<EntityOperation>> liveOperations();
 
+    @Query("SELECT * FROM operation ORDER BY id")
+    List<EntityOperation> getOperations();
+
     @Query("SELECT COUNT(id) FROM operation WHERE folder = :folder")
     int getOperationCount(long folder);
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -370,6 +370,9 @@ protected void onResume() {
             if ("unified".equals(action))
                 getSupportFragmentManager().popBackStack("unified", 0);
 
+            else if ("error".equals(action))
+                onDebugInfo();
+
             else if (action.startsWith("thread")) {
                 ViewModelMessages model = ViewModelProviders.of(this).get(ViewModelMessages.class);
                 model.setMessages(null);

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -40,6 +40,9 @@ public interface DaoOperation {
     @Query("SELECT COUNT(id) FROM operation WHERE folder = :folder")
     int getOperationCount(long folder);
 
+    @Query("UPDATE operation SET error = :error WHERE id = :id")
+    int setOperationError(long id, String error);
+
     @Insert
     long insertOperation(EntityOperation operation);
 

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -64,6 +64,7 @@ public class EntityOperation {
     public String args;
     @NonNull
     public Long created;
+    public String error;
 
     public static final String ADD = "add";
     public static final String MOVE = "move";
@@ -138,7 +139,8 @@ public boolean equals(Object obj) {
                     this.message.equals(other.message) &&
                     this.name.equals(other.name) &&
                     this.args.equals(other.args) &&
-                    this.created.equals(other.created));
+                    this.created.equals(other.created) &&
+                    (this.error == null ? other.error == null : this.error.equals(other.error)));
         } else
             return false;
     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1335,6 +1335,7 @@ private void processOperations(EntityFolder folder, Session isession, IMAPStore
                             if (message == null)
                                 throw new MessageRemovedException();
 
+                            db.operation().setOperationError(op.id, null);
                             db.message().setMessageError(message.id, null);
 
                             if (message.uid == null &&
@@ -1388,6 +1389,7 @@ else if (EntityOperation.ATTACHMENT.equals(op.name))
                             // TODO: SMTP response codes: https://www.ietf.org/rfc/rfc821.txt
                             reportError(null, folder.name, ex);
 
+                            db.operation().setOperationError(op.id, Helper.formatThrowable(ex));
                             if (message != null &&
                                     !(ex instanceof MessageRemovedException) &&
                                     !(ex instanceof FolderClosedException) &&

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -138,7 +138,7 @@ private void onPurchase(Intent intent) {
             if (responseCode != BillingClient.BillingResponse.OK)
                 Snackbar.make(getView(), text, Snackbar.LENGTH_LONG).show();
         } else
-            Helper.view(this, getIntentPro());
+            Helper.view(this, this, getIntentPro());
     }
 
     private void onActivatePro(Intent intent) {
@@ -160,7 +160,7 @@ private void onActivatePro(Intent intent) {
             }
         } catch (NoSuchAlgorithmException ex) {
             Log.e(Helper.TAG, Log.getStackTraceString(ex));
-            Helper.unexpectedError(this, ex);
+            Helper.unexpectedError(this, this, ex);
         }
     }
 

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -152,7 +152,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
-                        Helper.unexpectedError(context, ex);
+                        Helper.unexpectedError(context, owner, ex);
                     }
                 }.load(context, owner, args);
 
@@ -264,7 +264,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                             @Override
                             protected void onException(Bundle args, Throwable ex) {
-                                Helper.unexpectedError(context, ex);
+                                Helper.unexpectedError(context, owner, ex);
                             }
                         }.load(context, owner, args);
                     }

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -250,7 +250,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                         @Override
                         public void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(context, ex);
+                            Helper.unexpectedError(context, owner, ex);
                         }
                     }.load(context, owner, args);
                 }
@@ -292,7 +292,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                                         @Override
                                         protected void onException(Bundle args, Throwable ex) {
-                                            Helper.unexpectedError(context, ex);
+                                            Helper.unexpectedError(context, owner, ex);
                                         }
                                     }.load(context, owner, args);
                                 }

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -98,7 +98,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(context, ex);
+                    Helper.unexpectedError(context, owner, ex);
                 }
             }.load(context, owner, args);
 

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -125,7 +125,7 @@ protected void onLoaded(Bundle args, EntityAnswer answer) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), ex);
+                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
             }
         }.load(this, args);
     }
@@ -157,7 +157,7 @@ protected void onLoaded(Bundle args, Void data) {
                             @Override
                             protected void onException(Bundle args, Throwable ex) {
                                 Helper.setViewsEnabled(view, true);
-                                Helper.unexpectedError(getContext(), ex);
+                                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                             }
                         }.load(FragmentAnswer.this, args);
                     }
@@ -205,7 +205,7 @@ protected void onLoaded(Bundle args, Void data) {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 Helper.setViewsEnabled(view, true);
-                Helper.unexpectedError(getContext(), ex);
+                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
             }
         }.load(this, args);
     }

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -238,7 +238,7 @@ protected void onException(Bundle args, Throwable ex) {
                         if (ex instanceof IllegalArgumentException)
                             Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
                         else
-                            Helper.unexpectedError(getContext(), ex);
+                            Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                     }
                 }.load(FragmentFolder.this, args);
             }
@@ -311,7 +311,7 @@ protected void onException(Bundle args, Throwable ex) {
                                         if (ex instanceof IllegalArgumentException)
                                             Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
                                         else
-                                            Helper.unexpectedError(getContext(), ex);
+                                            Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                                     }
                                 }.load(FragmentFolder.this, args);
                             }
@@ -369,7 +369,7 @@ protected void onLoaded(Bundle args, EntityFolder folder) {
 
             @Override
             protected void onException(Bundle args, Throwable ex) {
-                Helper.unexpectedError(getContext(), ex);
+                Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
             }
         }.load(this, args);
     }

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -178,7 +178,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                         @Override
                         protected void onException(Bundle args, Throwable ex) {
-                            Helper.unexpectedError(getContext(), ex);
+                            Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                         }
                     }.load(FragmentOptions.this, null);
             }

File: app/src/main/java/eu/faircode/email/FragmentWebView.java
Patch:
@@ -85,7 +85,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                     setSubtitle(url);
                     return false;
                 } else {
-                    Helper.view(getContext(), Uri.parse(url));
+                    Helper.view(getContext(), getViewLifecycleOwner(), Uri.parse(url));
                     return true;
                 }
             }
@@ -180,7 +180,7 @@ protected void onLoaded(Bundle args, String html) {
 
                 @Override
                 protected void onException(Bundle args, Throwable ex) {
-                    Helper.unexpectedError(getContext(), ex);
+                    Helper.unexpectedError(getContext(), getViewLifecycleOwner(), ex);
                 }
             }.load(this, args);
         }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -300,6 +300,7 @@ private void clear() {
             pbBody.setVisibility(View.GONE);
 
             grpAddress.setVisibility(View.GONE);
+            ivAddContact.setVisibility(View.GONE);
             grpHeaders.setVisibility(View.GONE);
             grpAttachments.setVisibility(View.GONE);
             grpExpanded.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -403,7 +403,8 @@ public void onChanged(List<EntityOperation> operations) {
                                 "\n" + (message.ui_hide ? "HIDDEN " : "") +
                                 "seen=" + message.seen + "/" + message.ui_seen + "/" + message.unseen +
                                 " found=" + message.ui_found +
-                                "\n" + message.msgid;
+                                "\n" + message.msgid +
+                                "\n" + message.thread;
                         if (operations != null)
                             for (EntityOperation op : operations)
                                 text += "\n" + op.id + ":" + op.name + " " + df.format(new Date(op.created));

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -504,6 +504,7 @@ private List<Notification> getNotificationUnseen(long account, String accountNam
             thread.setAction("thread:" + message.thread);
             thread.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             thread.putExtra("account", message.account);
+            thread.putExtra("id", message.id);
             PendingIntent piContent = PendingIntent.getActivity(
                     this, ActivityView.REQUEST_THREAD, thread, PendingIntent.FLAG_UPDATE_CURRENT);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1230,6 +1230,7 @@ public void onReceive(Context context, Intent intent) {
                     Log.e(Helper.TAG, account.name + " " + ex + "\n" + Log.getStackTraceString(ex));
                     reportError(account.name, null, ex);
 
+                    EntityLog.log(ServiceSynchronize.this, account.name + " " + Helper.formatThrowable(ex));
                     db.account().setAccountError(account.id, Helper.formatThrowable(ex));
                 } finally {
                     EntityLog.log(this, account.name + " closing");
@@ -2381,6 +2382,7 @@ public void run() {
                                         monitorAccount(account, astate);
                                     } catch (Throwable ex) {
                                         Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
+                                        EntityLog.log(ServiceSynchronize.this, account.name + " " + Helper.formatThrowable(ex));
                                         db.account().setAccountError(account.id, Helper.formatThrowable(ex));
                                     }
                                 }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1184,7 +1184,7 @@ public void onReceive(Context context, Intent intent) {
                     // Keep alive
                     AlarmManager am = getSystemService(AlarmManager.class);
                     try {
-                        while (state.alive()) {
+                        while (state.running()) {
                             if (!istore.isConnected())
                                 throw new StoreClosedException(istore);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1206,6 +1206,8 @@ public void onReceive(Context context, Intent intent) {
                                             throw new FolderClosedException(folders.get(folder));
                                     } else
                                         synchronizeMessages(account, folder, folders.get(folder), state);
+
+                                db.account().setAccountConnected(account.id, new Date().getTime());
                             }
 
                         }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -818,7 +818,7 @@ public void closed(ConnectionEvent e) {
 
                     db.account().setAccountState(account.id, "connected");
                     db.account().setAccountConnected(account.id, new Date().getTime());
-                    db.account().setAccountError(account.id, null);
+                    db.account().setAccountError(account.id, capIdle ? null : getString(R.string.title_no_idle));
 
                     NotificationManager nm = getSystemService(NotificationManager.class);
                     nm.cancel("receive", account.id.intValue());

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1130,7 +1130,7 @@ protected void onException(Bundle args, Throwable ex) {
         private void onShowHeaders(ActionData data) {
             boolean show_headers = !properties.showHeaders(data.message.id);
             properties.setHeaders(data.message.id, show_headers);
-            if (show_headers) {
+            if (show_headers && data.message.headers == null) {
                 grpHeaders.setVisibility(View.VISIBLE);
                 pbHeaders.setVisibility(View.VISIBLE);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2098,10 +2098,10 @@ static Long synchronizeMessage(Context context, EntityFolder folder, IMAPFolder
             message.sent = (imessage.getSentDate() == null ? null : imessage.getSentDate().getTime());
             message.seen = seen;
             message.answered = answered;
-            message.flagged = false;
+            message.flagged = flagged;
             message.ui_seen = seen;
             message.ui_answered = answered;
-            message.ui_flagged = false;
+            message.ui_flagged = flagged;
             message.ui_hide = false;
             message.ui_found = found;
             message.ui_ignored = false;

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -279,6 +279,7 @@ public boolean equals(Object obj) {
                     this.seen.equals(other.seen) &&
                     this.answered.equals(other.answered) &&
                     this.flagged.equals(other.flagged) &&
+                    Helper.equal(this.keywords, other.keywords) &&
                     this.ui_seen.equals(other.ui_seen) &&
                     this.ui_answered.equals(other.ui_answered) &&
                     this.ui_flagged.equals(other.ui_flagged) &&

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -286,6 +286,8 @@ private void clear() {
             tvError.setVisibility(View.GONE);
             pbLoading.setVisibility(View.VISIBLE);
 
+            tvKeywords.setVisibility(View.GONE);
+
             pbHeaders.setVisibility(View.GONE);
             bnvActions.setVisibility(View.GONE);
             vSeparatorBody.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -137,7 +137,7 @@ public class ServiceSynchronize extends LifecycleService {
     private static final int DOWNLOAD_BATCH_SIZE = 20;
     private static final long RECONNECT_BACKOFF = 60 * 1000L; // milliseconds
     private static final int PREVIEW_SIZE = 250;
-    private static final int ACCOUNT_ERROR_AFTER = 60; // minutes
+    private static final int ACCOUNT_ERROR_AFTER = 90; // minutes
 
     static final int PI_WHY = 1;
     static final int PI_CLEAR = 2;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -640,6 +640,7 @@ else if (TextUtils.isEmpty(folder))
                 !(ex instanceof IllegalStateException) &&
                 !(ex instanceof AuthenticationFailedException) && // Also: Too many simultaneous connections
                 !(ex instanceof StoreClosedException) &&
+                !(ex instanceof MessageRemovedException) &&
                 !(ex instanceof MessagingException && ex.getCause() instanceof UnknownHostException) &&
                 !(ex instanceof MessagingException && ex.getCause() instanceof ConnectionException) &&
                 !(ex instanceof MessagingException && ex.getCause() instanceof SocketException) &&
@@ -1908,8 +1909,7 @@ static Long synchronizeMessage(Context context, EntityFolder folder, IMAPFolder
                         " folder=" + dfolder.type + ":" + dup.folder + "/" + folder.type + ":" + folder.id +
                         " msgid=" + dup.msgid + " thread=" + dup.thread);
 
-                if (!EntityFolder.ARCHIVE.equals(dfolder.type) &&
-                        dup.folder.equals(folder.id) || outbox) {
+                if (dup.folder.equals(folder.id) || outbox) {
                     String thread = helper.getThreadId(uid);
                     Log.i(Helper.TAG, folder.name + " found as id=" + dup.id + "/" + uid +
                             " msgid=" + msgid + " thread=" + thread);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -50,7 +50,7 @@ public interface DaoMessage {
             "    AND NOT folder.type = '" + EntityFolder.DRAFTS + "' THEN 0 ELSE 1 END) AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             ", 0 AS duplicate" +
-            ", MAX(CASE WHEN folder.unified THEN message.id ELSE 0 END) AS dummy" +
+            ", MAX(CASE WHEN folder.unified THEN message.received ELSE 0 END) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " LEFT JOIN identity ON identity.id = message.identity" +
@@ -82,7 +82,7 @@ public interface DaoMessage {
             "    AND NOT (folder.id <> :folder AND folder.type = '" + EntityFolder.DRAFTS + "') THEN 0 ELSE 1 END) AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             ", 0 AS duplicate" +
-            ", MAX(CASE WHEN folder.id = :folder THEN message.id ELSE 0 END) AS dummy" +
+            ", MAX(CASE WHEN folder.id = :folder THEN message.received ELSE 0 END) AS dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " LEFT JOIN identity ON identity.id = message.identity" +

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1360,7 +1360,7 @@ else if (EntityOperation.ATTACHMENT.equals(op.name))
                             if (ex instanceof SendFailedException)
                                 reportError(null, folder.name, ex);
 
-                            if (message != null)
+                            if (message != null && !(ex instanceof MessageRemovedException))
                                 db.message().setMessageError(message.id, Helper.formatThrowable(ex));
 
                             if (ex instanceof MessageRemovedException ||

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -143,7 +143,7 @@ else if ("downloading".equals(folder.state))
             }
 
             tvError.setText(folder.error);
-            tvError.setVisibility(folder.error == null ? View.GONE : View.VISIBLE);
+            tvError.setVisibility(folder.error != null && BuildConfig.DEBUG ? View.VISIBLE : View.GONE);
         }
 
         @Override

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -596,6 +596,7 @@ private Notification.Builder getNotificationError(String action, Throwable ex) {
                 .setAutoCancel(false)
                 .setShowWhen(true)
                 .setPriority(Notification.PRIORITY_MAX)
+                .setOnlyAlertOnce(true)
                 .setCategory(Notification.CATEGORY_ERROR)
                 .setVisibility(Notification.VISIBILITY_SECRET);
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -26,6 +26,7 @@
 import androidx.room.Dao;
 import androidx.room.Insert;
 import androidx.room.Query;
+import androidx.room.RoomWarnings;
 import androidx.room.Update;
 
 @Dao
@@ -63,6 +64,7 @@ public interface DaoMessage {
             "  WHEN 'starred' = :sort THEN message.ui_flagged" +
             "  ELSE 0" +
             " END DESC, message.received DESC, message.sent DESC")
+    @SuppressWarnings(RoomWarnings.CURSOR_MISMATCH)
     DataSource.Factory<Integer, TupleMessageEx> pagedUnifiedInbox(String sort, boolean debug);
 
     @Query("SELECT message.*" +
@@ -94,6 +96,7 @@ public interface DaoMessage {
             "  WHEN 'starred' = :sort THEN message.ui_flagged" +
             "  ELSE 0" +
             " END DESC, message.received DESC, message.sent DESC")
+    @SuppressWarnings(RoomWarnings.CURSOR_MISMATCH)
     DataSource.Factory<Integer, TupleMessageEx> pagedFolder(long folder, String sort, boolean found, boolean debug);
 
     @Query("SELECT message.*" +

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -84,7 +84,6 @@ private void createNotificationChannels() {
                     "error",
                     getString(R.string.channel_error),
                     NotificationManager.IMPORTANCE_HIGH);
-            error.setShowBadge(false);
             error.setLockscreenVisibility(Notification.VISIBILITY_SECRET);
             nm.createNotificationChannel(error);
         }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -656,6 +656,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         boolean check = (synchronize && (account == null ||
                                 !host.equals(account.host) || Integer.parseInt(port) != account.port ||
                                 !user.equals(account.user) || !password.equals(account.password)));
+                        boolean reload = (account == null || account.synchronize != synchronize || check);
 
                         // Check IMAP server
                         if (check) {
@@ -770,7 +771,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                             db.endTransaction();
                         }
 
-                        if (check)
+                        if (reload)
                             ServiceSynchronize.reload(getContext(), "save account");
 
                         return null;

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -438,6 +438,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         boolean check = (synchronize && (identity == null ||
                                 !host.equals(identity.host) || Integer.parseInt(port) != identity.port ||
                                 !user.equals(identity.user) || !password.equals(identity.password)));
+                        boolean reload = (identity == null || identity.synchronize != synchronize || check);
 
                         // Check SMTP server
                         if (check) {
@@ -500,7 +501,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                             db.endTransaction();
                         }
 
-                        if (check)
+                        if (reload)
                             ServiceSynchronize.reload(getContext(), "save identity");
 
                         return null;

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -378,11 +378,10 @@ private void bindTo(int position, final TupleMessageEx message) {
                     @Override
                     public void onChanged(List<EntityOperation> operations) {
                         String text = message.error +
-                                "\n" + message.id + " " + df.format(new Date(message.received)) +
+                                "\n" + message.uid + "/" + message.id + " " + df.format(new Date(message.received)) +
                                 "\n" + (message.ui_hide ? "HIDDEN " : "") +
                                 "seen=" + message.seen + "/" + message.ui_seen + "/" + message.unseen +
-                                "found=" + message.ui_found +
-                                " " + message.uid + "/" + message.id +
+                                " found=" + message.ui_found +
                                 "\n" + message.msgid;
                         if (operations != null)
                             for (EntityOperation op : operations)

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -381,6 +381,7 @@ public void onChanged(List<EntityOperation> operations) {
                                 "\n" + message.id + " " + df.format(new Date(message.received)) +
                                 "\n" + (message.ui_hide ? "HIDDEN " : "") +
                                 "seen=" + message.seen + "/" + message.ui_seen + "/" + message.unseen +
+                                "found=" + message.ui_found +
                                 " " + message.uid + "/" + message.id +
                                 "\n" + message.msgid;
                         if (operations != null)

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -1369,7 +1369,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                     List<EntityMessage> messages = db.message().getMessageByThread(account, thread);
 
                     for (EntityMessage message : messages)
-                        if (!target.id.equals(message.folder)) {
+                        if (message.uid != null && !target.id.equals(message.folder)) {
                             db.message().setMessageUiHide(message.id, true);
                             EntityOperation.queue(db, message, EntityOperation.MOVE, target.id);
                         }

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -42,6 +42,7 @@
 import java.security.NoSuchAlgorithmException;
 import java.util.List;
 
+import androidx.annotation.Nullable;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
 abstract class ActivityBilling extends ActivityBase implements PurchasesUpdatedListener {
@@ -192,7 +193,7 @@ public void run() {
     };
 
     @Override
-    public void onPurchasesUpdated(int responseCode, @android.support.annotation.Nullable List<Purchase> purchases) {
+    public void onPurchasesUpdated(int responseCode, @Nullable List<Purchase> purchases) {
         String text = Helper.getBillingResponseText(responseCode);
         Log.i(Helper.TAG, "IAB purchases updated response=" + text);
         if (responseCode == BillingClient.BillingResponse.OK)

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -33,7 +33,6 @@
 import android.os.Build;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
-import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.Menu;
@@ -68,6 +67,7 @@
 import javax.mail.MessagingException;
 import javax.mail.internet.InternetAddress;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AlertDialog;
 import androidx.browser.customtabs.CustomTabsIntent;
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -199,7 +199,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swSender.setChecked(prefs.getBoolean("sender", true));
+        swSender.setChecked(prefs.getBoolean("sender", false));
         swSender.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -186,12 +186,10 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                     signature = "&nbsp;";
 
                 String html = Html.toHtml(etBody.getText());
-                Log.i(Helper.TAG, html);
                 int cstart = html.indexOf("<tt>");
                 int cend = html.lastIndexOf("</tt>");
                 if (cstart >= 0 && cend > cstart) {
                     html = html.substring(0, cstart + 4) + signature + html.substring(cend);
-                    Log.i(Helper.TAG, "tt html="+html);
                     etBody.setText(Html.fromHtml(html));
                 }
             }
@@ -1508,7 +1506,7 @@ protected EntityMessage onLoad(final Context context, Bundle args) throws Throwa
                 Log.i(Helper.TAG, "Load action id=" + draft.id + " action=" + action);
 
                 // Move draft to new account
-                if (draft.account != aid) {
+                if (draft.account != aid && aid >= 0) {
                     Long uid = draft.uid;
                     String msgid = draft.msgid;
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1144,7 +1144,7 @@ protected DraftAccount onLoad(Context context, Bundle args) throws IOException {
                         body = body.replaceAll("\\r?\\n", "<br />");
 
                     if (pro)
-                        body += "<p>&nbsp;</p><p><tt>&nbsp;</tt></p>";
+                        body += "<br /><p><tt>&nbsp;</tt></p>";
                 } else {
                     result.draft.thread = ref.thread;
 
@@ -1209,7 +1209,7 @@ protected DraftAccount onLoad(Context context, Bundle args) throws IOException {
 
                         body = text + body;
                     } else
-                        body = "<p>&nbsp;</p>" + body;
+                        body = "<br />" + body;
                 }
 
                 result.draft.content = true;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -188,9 +188,10 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                 String html = Html.toHtml(etBody.getText());
                 Log.i(Helper.TAG, html);
                 int cstart = html.indexOf("<tt>");
-                int cend = html.indexOf("</tt>");
+                int cend = html.lastIndexOf("</tt>");
                 if (cstart >= 0 && cend > cstart) {
                     html = html.substring(0, cstart + 4) + signature + html.substring(cend);
+                    Log.i(Helper.TAG, "tt html="+html);
                     etBody.setText(Html.fromHtml(html));
                 }
             }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1681,7 +1681,7 @@ private void synchronizeMessages(EntityAccount account, EntityFolder folder, IMA
             if (sync < 0)
                 sync = 0;
 
-            long keep = cal_sync.getTimeInMillis();
+            long keep = cal_keep.getTimeInMillis();
             if (keep < 0)
                 keep = 0;
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1464,7 +1464,7 @@ protected EntityMessage onLoad(final Context context, Bundle args) throws Throwa
 
                 // Move draft to new account
                 if (draft.account != aid) {
-                    long uid = draft.uid;
+                    Long uid = draft.uid;
                     String msgid = draft.msgid;
 
                     draft.uid = null;

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -35,9 +35,10 @@ public interface DaoIdentity {
 
     @Query("SELECT identity.* FROM identity" +
             " JOIN account ON account.id = identity.account" +
-            " WHERE account.synchronize = :synchronize" +
+            " WHERE (:account IS NULL OR account.id = :account)" +
+            " AND account.synchronize = :synchronize" +
             " AND identity.synchronize = :synchronize")
-    LiveData<List<EntityIdentity>> liveIdentities(boolean synchronize);
+    LiveData<List<EntityIdentity>> liveIdentities(Long account, boolean synchronize);
 
     @Query("SELECT * FROM identity")
     List<EntityIdentity> getIdentities();

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1299,8 +1299,8 @@ public void run() {
 
             DB db = DB.getInstance(getContext());
 
-            db.identity().liveIdentities(true).removeObservers(getViewLifecycleOwner());
-            db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
+            db.identity().liveIdentities(result.draft.account, true).removeObservers(getViewLifecycleOwner());
+            db.identity().liveIdentities(result.draft.account, true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
                 @Override
                 public void onChanged(@Nullable List<EntityIdentity> identities) {
                     if (identities == null)

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -354,7 +354,7 @@ public void onChanged(@Nullable List<EntityAccount> accounts) {
             }
         });
 
-        db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
+        db.identity().liveIdentities(null, true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable List<EntityIdentity> identities) {
                 boolean done = (identities != null && identities.size() > 0);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -391,6 +391,7 @@ public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
         menu.findItem(R.id.menu_bold).setVisible(working >= 0);
         menu.findItem(R.id.menu_italic).setVisible(working >= 0);
+        menu.findItem(R.id.menu_clear).setVisible(working >= 0);
         menu.findItem(R.id.menu_link).setVisible(working >= 0);
         menu.findItem(R.id.menu_image).setVisible(working >= 0);
         menu.findItem(R.id.menu_attachment).setVisible(working >= 0);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -2036,13 +2036,15 @@ public void run() {
                         outbox = db.folder().getOutbox();
                         if (outbox == null) {
                             EntityLog.log(ServiceSynchronize.this, "No outbox, halt");
+                            Thread.sleep(3000);
                             stopSelf();
                             return;
                         }
 
                         List<EntityAccount> accounts = db.account().getAccounts(true);
                         if (accounts.size() == 0) {
                             EntityLog.log(ServiceSynchronize.this, "No accounts, halt");
+                            Thread.sleep(3000);
                             stopSelf();
                             return;
                         }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -375,7 +375,7 @@ private List<Notification> getNotificationUnseen(List<EntityMessage> messages) {
                 .setNumber(messages.size())
                 .setShowWhen(false)
                 .setDeleteIntent(piClear)
-                .setPriority(Notification.PRIORITY_HIGH)
+                .setPriority(Notification.PRIORITY_DEFAULT)
                 .setCategory(Notification.CATEGORY_STATUS)
                 .setVisibility(Notification.VISIBILITY_PRIVATE)
                 .setGroup(BuildConfig.APPLICATION_ID)
@@ -457,7 +457,7 @@ private List<Notification> getNotificationUnseen(List<EntityMessage> messages) {
                     .setSound(uri)
                     .setWhen(message.sent == null ? message.received : message.sent)
                     .setDeleteIntent(piDelete)
-                    .setPriority(Notification.PRIORITY_HIGH)
+                    .setPriority(Notification.PRIORITY_DEFAULT)
                     .setCategory(Notification.CATEGORY_STATUS)
                     .setVisibility(Notification.VISIBILITY_PRIVATE)
                     .setGroup(BuildConfig.APPLICATION_ID)

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -160,7 +160,7 @@ public interface DaoMessage {
 
     @Query("SELECT id FROM message" +
             " WHERE content" +
-            " AND preview IS NULL")
+            " AND (preview IS NULL OR preview = '')")
     List<Long> getMessageWithoutPreview();
 
     @Query("SELECT message.*" +
@@ -225,8 +225,8 @@ public interface DaoMessage {
     @Query("UPDATE message SET error = :error WHERE id = :id")
     int setMessageError(long id, String error);
 
-    @Query("UPDATE message SET content = NOT preview IS NULL, preview = :preview WHERE id = :id")
-    int setMessageContent(long id, String preview);
+    @Query("UPDATE message SET content = :content, preview = :preview WHERE id = :id")
+    int setMessageContent(long id, boolean content, String preview);
 
     @Query("UPDATE message SET headers = :headers WHERE id = :id")
     int setMessageHeaders(long id, String headers);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1435,7 +1435,7 @@ private void doBody(EntityFolder folder, IMAPFolder ifolder, EntityMessage messa
 
         MessageHelper helper = new MessageHelper((MimeMessage) imessage);
         String html = helper.getHtml();
-        String text = Jsoup.parse(html).text();
+        String text = (html == null ? "" : Jsoup.parse(html).text());
         String preview = text.substring(0, Math.min(text.length(), PREVIEW_SIZE));
         message.write(this, html);
         db.message().setMessageContent(message.id, preview);
@@ -1896,7 +1896,7 @@ private static void downloadMessage(Context context, EntityFolder folder, IMAPFo
         if (!message.content)
             if (!metered || (message.size != null && message.size < download)) {
                 String html = helper.getHtml();
-                String text = Jsoup.parse(html).text();
+                String text = (html == null ? "" : Jsoup.parse(html).text());
                 String preview = text.substring(0, Math.min(text.length(), PREVIEW_SIZE));
                 message.write(context, html);
                 db.message().setMessageContent(message.id, preview);

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -50,7 +50,7 @@ public interface DaoFolder {
             ", SUM(CASE WHEN message.ui_seen = 0 THEN 1 ELSE 0 END) AS unseen" +
             " FROM folder" +
             " LEFT JOIN account ON account.id = folder.account" +
-            " LEFT JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
+            " LEFT JOIN message ON message.folder = folder.id AND NOT message.ui_hide AND NOT message.ui_found" +
             " WHERE folder.account = :account OR folder.account IS NULL" +
             " GROUP BY folder.id")
     LiveData<List<TupleFolderEx>> liveFolders(long account);
@@ -66,7 +66,7 @@ public interface DaoFolder {
             ", SUM(CASE WHEN message.ui_seen = 0 THEN 1 ELSE 0 END) AS unseen" +
             " FROM folder" +
             " JOIN account ON account.id = folder.account" +
-            " JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
+            " JOIN message ON message.folder = folder.id AND NOT message.ui_hide AND NOT message.ui_found" +
             " WHERE account.`synchronize`" +
             " AND folder.unified" +
             " GROUP BY folder.id")
@@ -81,7 +81,7 @@ public interface DaoFolder {
             ", SUM(CASE WHEN message.ui_seen = 0 THEN 1 ELSE 0 END) AS unseen" +
             " FROM folder" +
             " LEFT JOIN account ON account.id = folder.account" +
-            " LEFT JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
+            " LEFT JOIN message ON message.folder = folder.id AND NOT message.ui_hide AND NOT message.ui_found" +
             " WHERE folder.id = :id")
     LiveData<TupleFolderEx> liveFolderEx(long id);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -209,6 +209,8 @@ public void onClick(View v) {
         });
 
         rvMessage.setHasFixedSize(false);
+        //rvMessage.setItemViewCacheSize(10);
+        //rvMessage.getRecycledViewPool().setMaxRecycledViews(0, 10);
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvMessage.setLayoutManager(llm);
 

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -47,7 +47,7 @@ public abstract class SimpleTask<T> implements LifecycleObserver {
     private Bundle args;
     private Result stored;
 
-    private ExecutorService executor = Executors.newCachedThreadPool(Helper.backgroundThreadFactory);
+    private static ExecutorService executor = Executors.newCachedThreadPool(Helper.backgroundThreadFactory);
 
     public void load(Context context, LifecycleOwner owner, Bundle args) {
         run(context, owner, args);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1405,7 +1405,7 @@ ItemDetailsLookup.ItemDetails<Long> getItemDetails(@NonNull MotionEvent motionEv
         this.contacts = (ContextCompat.checkSelfPermission(context, Manifest.permission.READ_CONTACTS)
                 == PackageManager.PERMISSION_GRANTED);
         this.avatars = (prefs.getBoolean("avatars", true) && this.contacts);
-        this.identicons = prefs.getBoolean("identicons", true);
+        this.identicons = prefs.getBoolean("identicons", false);
         this.compact = prefs.getBoolean("compact", false);
         this.debug = prefs.getBoolean("debug", false);
 

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -86,7 +86,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
             }
         });
 
-        swIdenticons.setChecked(prefs.getBoolean("identicons", true));
+        swIdenticons.setChecked(prefs.getBoolean("identicons", false));
         swIdenticons.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterAnswer.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterLog.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -31,13 +31,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoAnswer.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoAttachment.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoLog.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/DialogBuilderLifecycle.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityAnswer.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityLog.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentAnswers.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentEula.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentLegend.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentLogs.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentOperations.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentOptions.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentPro.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/FragmentWebView.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ItemDetailsLookupMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ItemDetailsMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ItemKeyProviderMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/JobDaily.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/MimeMessageEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/Provider.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ReceiverAutostart.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/SelectionPredicateMessage.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/TupleAccountStats.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/TupleFolderEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/TupleIdentityEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/TupleMessageEx.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ViewModelBrowse.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/Widget.java
Patch:
@@ -8,13 +8,13 @@
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.
 
-    NetGuard is distributed in the hope that it will be useful,
+    FairEmail is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
-    along with NetGuard.  If not, see <http://www.gnu.org/licenses/>.
+    along with FairEmail.  If not, see <http://www.gnu.org/licenses/>.
 
     Copyright 2018 by Marcel Bokhorst (M66B)
 */

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -978,7 +978,7 @@ private void onUnseen(final ActionData data) {
 
             new SimpleTask<Void>() {
                 @Override
-                protected Void onLoad(Context context, Bundle args) throws Throwable {
+                protected Void onLoad(Context context, Bundle args) {
                     long id = args.getLong("id");
 
                     DB db = DB.getInstance(context);
@@ -1015,7 +1015,7 @@ private void onFlag(ActionData data) {
 
             new SimpleTask<Void>() {
                 @Override
-                protected Void onLoad(Context context, Bundle args) throws Throwable {
+                protected Void onLoad(Context context, Bundle args) {
                     long id = args.getLong("id");
                     boolean flagged = args.getBoolean("flagged");
                     DB db = DB.getInstance(context);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -254,6 +254,8 @@ private void clear() {
             tvError.setVisibility(View.GONE);
             pbLoading.setVisibility(View.VISIBLE);
             pbHeaders.setVisibility(View.GONE);
+            bnvActions.setVisibility(View.GONE);
+            vSeparatorBody.setVisibility(View.GONE);
             btnImages.setVisibility(View.GONE);
             pbBody.setVisibility(View.GONE);
             grpHeaders.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -82,6 +82,7 @@ public JSONObject toJSON() throws JSONException {
         json.put("host", host);
         json.put("port", port);
         json.put("starttls", starttls);
+        json.put("insecure", insecure);
         json.put("user", user);
         json.put("password", "");
         json.put("auth_type", auth_type);
@@ -100,6 +101,7 @@ public static EntityIdentity fromJSON(JSONObject json) throws JSONException {
         identity.host = json.getString("host");
         identity.port = json.getInt("port");
         identity.starttls = json.getBoolean("starttls");
+        identity.insecure = (json.has("insecure") && json.getBoolean("insecure"));
         identity.user = json.getString("user");
         identity.password = json.getString("password");
         identity.auth_type = json.getInt("auth_type");

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -106,6 +106,8 @@ public class FragmentSetup extends FragmentEx {
             "light",
             "browse",
             "swipe",
+            "compat",
+            "insecure",
             "sort"
     );
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -948,7 +948,7 @@ public void onChanged(@Nullable EntityAccount account) {
 
                     cbSynchronize.setChecked(account == null ? true : account.synchronize);
                     cbPrimary.setChecked(account == null ? true : account.primary);
-                    etInterval.setText(Long.toString(account == null ? 9 : account.poll_interval));
+                    etInterval.setText(account == null ? "" : Long.toString(account.poll_interval));
 
                     color = (account == null || account.color == null ? Color.TRANSPARENT : account.color);
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -654,7 +654,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(password) && !insecure)
                             throw new Throwable(getContext().getString(R.string.title_no_password));
                         if (TextUtils.isEmpty(interval))
-                            interval = "9";
+                            interval = "19";
                         if (synchronize && drafts == null)
                             throw new Throwable(getContext().getString(R.string.title_no_drafts));
                         if (Color.TRANSPARENT == color)

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -942,7 +942,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                         EntityMessage message = db.message().getMessage(id);
                         db.message().setMessageUiSeen(message.id, false);
-                        EntityOperation.queue(db, message, EntityOperation.SEEN, true);
+                        EntityOperation.queue(db, message, EntityOperation.SEEN, false);
 
                         db.setTransactionSuccessful();
                     } finally {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -304,6 +304,7 @@ protected void onResume() {
             setIntent(intent);
 
             intent.putExtra("thread", action.split(":", 2)[1]);
+            getSupportFragmentManager().popBackStack("unified", 0);
             onViewThread(intent);
         }
     }
@@ -766,8 +767,6 @@ private void onViewMessages(Intent intent) {
     }
 
     private void onViewThread(Intent intent) {
-        getFragmentManager().popBackStack("thread", FragmentManager.POP_BACK_STACK_INCLUSIVE);
-
         Bundle args = new Bundle();
         args.putLong("account", intent.getLongExtra("account", -1));
         args.putString("thread", intent.getStringExtra("thread"));

File: app/src/main/java/eu/faircode/email/ViewModelMessages.java
Patch:
@@ -11,10 +11,12 @@ void setMessages(PagedList<TupleMessageEx> messages) {
     }
 
     String[] getPrevNext(String thread) {
+        if (messages == null)
+            return new String[]{null, null};
+
         boolean found = false;
         TupleMessageEx prev = null;
         TupleMessageEx next = null;
-
         for (int i = 0; i < messages.size(); i++) {
             TupleMessageEx item = messages.get(i);
             if (item == null)

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -303,7 +303,6 @@ protected void onResume() {
             intent.setAction(null);
             setIntent(intent);
 
-            getSupportFragmentManager().popBackStack("unified", 0);
             intent.putExtra("thread", action.split(":", 2)[1]);
             onViewThread(intent);
         }
@@ -767,6 +766,8 @@ private void onViewMessages(Intent intent) {
     }
 
     private void onViewThread(Intent intent) {
+        getFragmentManager().popBackStack("thread", FragmentManager.POP_BACK_STACK_INCLUSIVE);
+
         Bundle args = new Bundle();
         args.putLong("account", intent.getLongExtra("account", -1));
         args.putString("thread", intent.getStringExtra("thread"));

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -52,7 +52,6 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.SearchView;
 import androidx.constraintlayout.widget.Group;
-import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.LiveData;
@@ -475,8 +474,6 @@ public void onClick(View view) {
         View.OnClickListener navigate = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                getFragmentManager().popBackStack("thread", FragmentManager.POP_BACK_STACK_INCLUSIVE);
-
                 LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(getContext());
                 lbm.sendBroadcast(
                         new Intent(ActivityView.ACTION_VIEW_THREAD)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1157,7 +1157,7 @@ private void processOperations(EntityFolder folder, Session isession, IMAPStore
                                             EntityOperation.DELETE.equals(op.name) ||
                                             EntityOperation.MOVE.equals(op.name) ||
                                             EntityOperation.HEADERS.equals(op.name)))
-                                throw new IllegalArgumentException(op.name + " without uid");
+                                throw new IllegalArgumentException(op.name + " without uid " + op.args);
 
                             JSONArray jargs = new JSONArray(op.args);
 
@@ -2139,6 +2139,7 @@ public void run() {
                                 Log.i(Helper.TAG, outbox.name + " start operations");
                                 db.folder().setFolderState(outbox.id, "syncing");
                                 processOperations(outbox, null, null, null);
+                                db.folder().setFolderError(outbox.id, null);
                             } catch (Throwable ex) {
                                 Log.e(Helper.TAG, outbox.name + " " + ex + "\n" + Log.getStackTraceString(ex));
                                 reportError(null, outbox.name, ex);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -223,7 +223,7 @@ public void onCheckedChanged(CompoundButton button, boolean checked) {
                         prefs.edit().putString("theme", checked ? "dark" : "light").apply();
                     }
                 } else {
-                    prefs.edit().putString("theme", "light").apply();
+                    prefs.edit().remove("theme").apply();
                     if (checked) {
                         tbDarkTheme.setChecked(false);
                         FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -90,11 +90,12 @@ protected Long onLoad(Context context, Bundle args) throws UnsupportedEncodingEx
                         sb.append(context.getString(R.string.title_debug_info_remark) + "\n\n\n\n");
 
                         // Get version info
-                        sb.append(String.format("%s: %s %s/%s\r\n",
+                        sb.append(String.format("%s: %s %s/%s%s\r\n",
                                 context.getString(R.string.app_name),
                                 BuildConfig.APPLICATION_ID,
                                 BuildConfig.VERSION_NAME,
-                                Helper.hasValidFingerprint(context) ? "1" : "3"));
+                                Helper.hasValidFingerprint(context) ? "1" : "3",
+                                Helper.isPro(context) ? "+" : ""));
                         sb.append(String.format("Android: %s (SDK %d)\r\n", Build.VERSION.RELEASE, Build.VERSION.SDK_INT));
                         sb.append("\r\n");
 

File: app/src/main/java/eu/faircode/email/TupleAccountStats.java
Patch:
@@ -20,7 +20,7 @@
 */
 
 public class TupleAccountStats {
-    public Integer accounts;
-    public Integer operations;
-    public Integer unsent;
+    public Integer accounts = 0;
+    public Integer operations = 0;
+    public Integer unsent = 0;
 }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -794,6 +794,9 @@ private class ActionData {
         @Override
         public boolean onNavigationItemSelected(@NonNull MenuItem item) {
             ActionData data = (ActionData) bnvActions.getTag();
+            if (data == null)
+                return false;
+
             switch (item.getItemId()) {
                 case R.id.action_more:
                     onMore(data);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -1027,7 +1027,8 @@ public int compare(EntityAnswer a1, EntityAnswer a2) {
                         }
                     });
 
-                    PopupMenu popupMenu = new PopupMenu(context, itemView);
+                    View anchor = bnvActions.findViewById(R.id.action_more);
+                    PopupMenu popupMenu = new PopupMenu(context, anchor);
 
                     int order = 0;
                     for (EntityAnswer answer : answers)

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -626,7 +626,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(password))
                             throw new Throwable(getContext().getString(R.string.title_no_password));
                         if (TextUtils.isEmpty(interval))
-                            interval = "12";
+                            interval = "9";
                         if (synchronize && drafts == null)
                             throw new Throwable(getContext().getString(R.string.title_no_drafts));
                         if (Color.TRANSPARENT == color)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -860,7 +860,6 @@ public void messageChanged(MessageChangedEvent e) {
                                 @Override
                                 public void run() {
                                     try {
-                                        wl.acquire();
                                         Log.i(Helper.TAG, folder.name + " start idle");
                                         while (state.running) {
                                             Log.i(Helper.TAG, folder.name + " do idle");
@@ -878,7 +877,6 @@ public void run() {
                                         yieldWakelock();
                                     } finally {
                                         Log.i(Helper.TAG, folder.name + " end idle");
-                                        wl.release();
                                     }
                                 }
                             }, "idler." + folder.id);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -625,7 +625,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(password))
                             throw new Throwable(getContext().getString(R.string.title_no_password));
                         if (TextUtils.isEmpty(interval))
-                            interval = "19";
+                            interval = "12";
                         if (synchronize && drafts == null)
                             throw new Throwable(getContext().getString(R.string.title_no_drafts));
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -625,7 +625,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(password))
                             throw new Throwable(getContext().getString(R.string.title_no_password));
                         if (TextUtils.isEmpty(interval))
-                            interval = "12";
+                            interval = "19";
                         if (synchronize && drafts == null)
                             throw new Throwable(getContext().getString(R.string.title_no_drafts));
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -625,7 +625,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(password))
                             throw new Throwable(getContext().getString(R.string.title_no_password));
                         if (TextUtils.isEmpty(interval))
-                            interval = "9";
+                            interval = "12";
                         if (synchronize && drafts == null)
                             throw new Throwable(getContext().getString(R.string.title_no_drafts));
 

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -137,7 +137,7 @@ public boolean equals(Object obj) {
                     this.name.equals(other.name) &&
                     this.type.equals(other.type) &&
                     this.synchronize.equals(other.synchronize) &&
-                    this.after.equals(other.after) &&
+                    (this.poll_interval == null ? other.poll_interval == null : this.poll_interval.equals(other.poll_interval)) && this.after.equals(other.after) &&
                     (this.display == null ? other.display == null : this.display.equals(other.display)) &&
                     this.hide == other.hide &&
                     this.unified == other.unified &&

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -241,7 +241,4 @@ public interface DaoMessage {
 
     @Query("DELETE FROM message WHERE folder = :folder AND received < :received AND NOT uid IS NULL")
     int deleteMessagesBefore(long folder, long received);
-
-    @Query("DELETE FROM message WHERE ui_found")
-    int deleteFoundMessages();
 }
\ No newline at end of file

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -326,7 +326,7 @@ private Notification.Builder getNotificationService(int accounts, int operations
             builder = new Notification.Builder(this);
 
         builder
-                .setSmallIcon(R.drawable.baseline_compare_arrows_24)
+                .setSmallIcon(R.drawable.baseline_compare_arrows_white_24)
                 .setContentTitle(getResources().getQuantityString(R.plurals.title_notification_synchronizing, accounts, accounts))
                 .setContentIntent(pi)
                 .setAutoCancel(false)
@@ -375,7 +375,7 @@ private List<Notification> getNotificationUnseen(List<EntityMessage> messages) {
             builder = new Notification.Builder(this, "notification");
 
         builder
-                .setSmallIcon(R.drawable.baseline_mail_24)
+                .setSmallIcon(R.drawable.baseline_email_white_24)
                 .setContentTitle(getResources().getQuantityString(R.plurals.title_notification_unseen, messages.size(), messages.size()))
                 .setContentText("")
                 .setContentIntent(piView)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -214,7 +214,7 @@ public void onDestroy() {
         ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
         cm.unregisterNetworkCallback(serviceManager);
 
-        serviceManager.stop();
+        serviceManager.onLost(null);
 
         stopForeground(true);
 
@@ -1864,7 +1864,7 @@ public void onLost(Network network) {
 
             if (running) {
                 ConnectivityManager cm = getSystemService(ConnectivityManager.class);
-                NetworkInfo ani = cm.getActiveNetworkInfo();
+                NetworkInfo ani = (network == null ? null : cm.getActiveNetworkInfo());
                 EntityLog.log(ServiceSynchronize.this, "Network active=" + (ani == null ? null : ani.toString()));
                 if (ani == null || !ani.isConnected()) {
                     EntityLog.log(ServiceSynchronize.this, "Network disconnected=" + ani);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1272,7 +1272,8 @@ private void doSend(EntityMessage message, DB db) throws MessagingException, IOE
                 itransport.connect(ident.host, ident.port, ident.user, ident.password);
             } catch (AuthenticationFailedException ex) {
                 if (ident.auth_type == Helper.AUTH_TYPE_GMAIL) {
-                    ident.password = Helper.refreshToken(this, "com.google", ident.user, ident.password);
+                    EntityAccount account = db.account().getAccount(ident.account);
+                    ident.password = Helper.refreshToken(this, "com.google", ident.user, account.password);
                     DB.getInstance(this).identity().setIdentityPassword(ident.id, ident.password);
                     itransport.connect(ident.host, ident.port, ident.user, ident.password);
                 } else

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -99,7 +99,7 @@ public interface DaoMessage {
             ", account.name AS accountName, account.color AS accountColor" +
             ", folder.name AS folderName, folder.display AS folderDisplay, folder.type AS folderType" +
             ", 0 AS threaded" +
-            ", 1 AS count" +
+            ", (SELECT COUNT(m1.id) FROM message m1 WHERE m1.account = message.account AND m1.thread = message.thread AND NOT m1.ui_hide) AS count" +
             ", CASE WHEN message.ui_seen THEN 0 ELSE 1 END AS unseen" +
             ", CASE WHEN message.ui_flagged THEN 0 ELSE 1 END AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -101,7 +101,7 @@ public interface DaoMessage {
             ", 0 AS threaded" +
             ", 1 AS count" +
             ", CASE WHEN message.ui_seen THEN 0 ELSE 1 END AS unseen" +
-            ", CASE WHEN  message.ui_flagged THEN 0 ELSE 1 END AS unflagged" +
+            ", CASE WHEN message.ui_flagged THEN 0 ELSE 1 END AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
@@ -162,8 +162,8 @@ public interface DaoMessage {
             ", folder.name AS folderName, folder.display AS folderDisplay, folder.type AS folderType" +
             ", 0 AS threaded" +
             ", (SELECT COUNT(m1.id) FROM message m1 WHERE m1.account = message.account AND m1.thread = message.thread AND NOT m1.ui_hide) AS count" +
-            ", (SELECT COUNT(m2.id) FROM message m2 WHERE m2.account = message.account AND m2.thread = message.thread AND NOT m2.ui_hide AND NOT m2.ui_seen) AS unseen" +
-            ", (SELECT COUNT(m3.id) FROM message m3 WHERE m3.account = message.account AND m3.thread = message.thread AND NOT m3.ui_hide AND NOT m3.ui_flagged) AS unflagged" +
+            ", CASE WHEN message.ui_seen THEN 0 ELSE 1 END AS unseen" +
+            ", CASE WHEN message.ui_flagged THEN 0 ELSE 1 END AS unflagged" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             " FROM message" +
             " LEFT JOIN account ON account.id = message.account" +

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -263,7 +263,7 @@ public boolean onLongClick(View view) {
             final TupleMessageEx message = getItem(pos);
 
             PopupMenu popupMenu = new PopupMenu(context, itemView);
-            if (!EntityFolder.OUTBOX.equals(message.folderType)) {
+            if (!message.threaded && !EntityFolder.OUTBOX.equals(message.folderType)) {
                 popupMenu.getMenu().add(Menu.NONE, action_flag, 1, message.ui_flagged ? R.string.title_unflag : R.string.title_flag);
                 popupMenu.getMenu().add(Menu.NONE, action_seen, 2, message.ui_seen ? R.string.title_unseen : R.string.title_seen);
             }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -181,7 +181,7 @@ public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder v
                     return 0;
 
                 TupleMessageEx message = ((AdapterMessage) rvMessage.getAdapter()).getCurrentList().get(pos);
-                if (EntityFolder.OUTBOX.equals(message.folderType))
+                if (message.threaded || EntityFolder.OUTBOX.equals(message.folderType))
                     return 0;
 
                 return makeMovementFlags(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -263,7 +263,7 @@ public boolean onLongClick(View view) {
             final TupleMessageEx message = getItem(pos);
 
             PopupMenu popupMenu = new PopupMenu(context, itemView);
-            if (!message.threaded && !EntityFolder.OUTBOX.equals(message.folderType)) {
+            if (!EntityFolder.OUTBOX.equals(message.folderType)) {
                 popupMenu.getMenu().add(Menu.NONE, action_flag, 1, message.ui_flagged ? R.string.title_unflag : R.string.title_flag);
                 popupMenu.getMenu().add(Menu.NONE, action_seen, 2, message.ui_seen ? R.string.title_unseen : R.string.title_seen);
             }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -263,7 +263,7 @@ public boolean onLongClick(View view) {
             final TupleMessageEx message = getItem(pos);
 
             PopupMenu popupMenu = new PopupMenu(context, itemView);
-            if (!EntityFolder.OUTBOX.equals(message.folderType)) {
+            if (!message.threaded && !EntityFolder.OUTBOX.equals(message.folderType)) {
                 popupMenu.getMenu().add(Menu.NONE, action_flag, 1, message.ui_flagged ? R.string.title_unflag : R.string.title_flag);
                 popupMenu.getMenu().add(Menu.NONE, action_seen, 2, message.ui_seen ? R.string.title_unseen : R.string.title_seen);
             }

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -127,7 +127,7 @@ public interface DaoFolder {
             ", hide = :hide" +
             ", synchronize = :synchronize" +
             ", unified = :unified" +
-            ", after = :after" +
+            ", `after` = :after" +
             " WHERE id = :id")
     int setFolderProperties(long id, String name, String display, boolean hide, boolean synchronize, boolean unified, int after);
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
-import android.preference.PreferenceManager;
 import android.text.Editable;
 import android.text.Html;
 import android.text.TextUtils;
@@ -339,7 +338,7 @@ public void run() {
         btnColor.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("pro", false)) {
+                if (Helper.isPro(getContext())) {
                     int[] colors = getContext().getResources().getIntArray(R.array.colorPicker);
                     ColorPickerDialog colorPickerDialog = new ColorPickerDialog();
                     colorPickerDialog.initialize(R.string.title_account_color, colors, color, 4, colors.length);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -380,7 +380,7 @@ public void onClick(View view) {
         tvNoEmail.setVisibility(View.GONE);
         grpReady.setVisibility(View.GONE);
         pbWait.setVisibility(View.VISIBLE);
-        fab.setVisibility(View.GONE);
+        fab.hide();
 
         return view;
     }
@@ -494,7 +494,7 @@ protected Long onLoad(Context context, Bundle args) {
             protected void onLoaded(Bundle args, Long account) {
                 if (account != null) {
                     fab.setTag(account);
-                    fab.setVisibility(View.VISIBLE);
+                    fab.show();
                 }
             }
 

File: app/src/main/java/eu/faircode/email/DialogBuilderLifecycle.java
Patch:
@@ -32,5 +32,7 @@ public AlertDialog create() {
     @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)
     public void onDestroy() {
         dialog.dismiss();
+        owner = null;
+        dialog = null;
     }
 }

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -101,10 +101,9 @@ public class FragmentSetup extends FragmentEx {
     };
 
     static final List<String> EXPORT_SETTINGS = Arrays.asList(
-            "compress",
             "avatars",
             "light",
-            "theme"
+            "sort"
     );
 
     @Override
@@ -221,6 +220,7 @@ public void onCheckedChanged(CompoundButton button, boolean checked) {
                         prefs.edit().putString("theme", checked ? "dark" : "light").apply();
                     }
                 } else {
+                    prefs.edit().putString("theme", "light").apply();
                     if (checked) {
                         tbDarkTheme.setChecked(false);
                         FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();

File: app/src/main/java/eu/faircode/email/Helper.java
Patch:
@@ -329,7 +329,7 @@ static String getBillingResponseText(@BillingClient.BillingResponse int response
     }
 
     static boolean isPro(Context context) {
-        if (true && BuildConfig.DEBUG)
+        if (false && BuildConfig.DEBUG)
             return true;
         return PreferenceManager.getDefaultSharedPreferences(context).getBoolean("pro", false);
     }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -218,9 +218,6 @@ public interface DaoMessage {
     @Query("UPDATE message SET ui_found = :found WHERE id = :id")
     int setMessageFound(long id, boolean found);
 
-    @Query("UPDATE message SET ui_found = 0 WHERE folder = :folder")
-    int resetFound(long folder);
-
     @Query("UPDATE message SET content = :content WHERE id = :id")
     int setMessageContent(long id, boolean content);
 

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -136,7 +136,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                 Properties props = MessageHelper.getSessionProperties(context, account.auth_type);
                                 Session isession = Session.getInstance(props, null);
                                 istore = (IMAPStore) isession.getStore("imaps");
-                                istore.connect(account.host, account.port, account.user, account.password);
+                                Helper.connect(context, istore, account);
 
                                 if (folder == null) {
                                     Log.i(Helper.TAG, "Creating folder=" + name);
@@ -239,7 +239,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                             Properties props = MessageHelper.getSessionProperties(context, account.auth_type);
                                             Session isession = Session.getInstance(props, null);
                                             istore = (IMAPStore) isession.getStore("imaps");
-                                            istore.connect(account.host, account.port, account.user, account.password);
+                                            Helper.connect(context, istore, account);
 
                                             IMAPFolder ifolder = (IMAPFolder) istore.getFolder(folder.name);
                                             ifolder.delete(false);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -352,7 +352,8 @@ public void onColorSelected(int color) {
                     colorPickerDialog.show(getFragmentManager(), "colorpicker");
                 } else {
                     FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
-                    fragmentTransaction.replace(R.id.content_frame, new FragmentPro()).addToBackStack("pro");
+                    fragmentTransaction.hide(FragmentAccount.this);
+                    fragmentTransaction.add(R.id.content_frame, new FragmentPro()).addToBackStack("pro");
                     fragmentTransaction.commit();
                 }
             }

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -323,7 +323,8 @@ public void run() {
             @Override
             public void onClick(View v) {
                 FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
-                fragmentTransaction.replace(R.id.content_frame, new FragmentPro()).addToBackStack("pro");
+                fragmentTransaction.hide(FragmentAccount.this);
+                fragmentTransaction.add(R.id.content_frame, new FragmentPro()).addToBackStack("pro");
                 fragmentTransaction.commit();
             }
         });

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -459,10 +459,10 @@ private static List<EntityAttachment> getAttachments(BodyPart part) throws
 
                 // Try to guess a better content type
                 // Sometimes PDF files are sent using the wrong type
-                if ("application/octet-stream".equals(attachment.type) && attachment.name != null) {
-                    String extension = MimeTypeMap.getFileExtensionFromUrl(attachment.name.toLowerCase());
+                if ("application/octet-stream".equals(attachment.type)) {
+                    String extension = Helper.getExtension(attachment.name);
                     if (extension != null) {
-                        String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
+                        String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase());
                         if (type != null) {
                             Log.w(Helper.TAG, "Guessing file=" + attachment.name + " type=" + type);
                             attachment.type = type;

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -120,7 +120,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         boolean unified = args.getBoolean("unified");
                         String after = args.getString("after");
 
-                        if (TextUtils.isEmpty(display))
+                        if (TextUtils.isEmpty(display) || display.equals(name))
                             display = null;
                         int days = (TextUtils.isEmpty(after) ? EntityFolder.DEFAULT_USER_SYNC : Integer.parseInt(after));
 
@@ -312,7 +312,7 @@ public void onChanged(@Nullable final EntityFolder folder) {
 
                 if (savedInstanceState == null) {
                     etRename.setText(folder == null ? null : folder.name);
-                    etDisplay.setText(folder == null ? null : folder.display);
+                    etDisplay.setText(folder == null ? null : (folder.display == null ? folder.name : folder.display));
                     etDisplay.setHint(folder == null ? null : folder.name);
                     cbUnified.setChecked(folder == null ? false : folder.unified);
                     etAfter.setText(Integer.toString(folder == null ? EntityFolder.DEFAULT_USER_SYNC : folder.after));

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -436,7 +436,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     private void checkIntent(Intent intent) {
         Log.i(Helper.TAG, "View intent=" + intent + " action=" + intent.getAction());
         String action = intent.getAction();
-        if ("unseen".equals(action)) {
+        if ("notification".equals(action)) {
             intent.setAction(null);
             setIntent(intent);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -108,7 +108,6 @@
 import javax.net.ssl.SSLException;
 
 import androidx.annotation.Nullable;
-import androidx.core.app.NotificationCompat;
 import androidx.core.content.ContextCompat;
 import androidx.lifecycle.LifecycleService;
 import androidx.lifecycle.Observer;

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -758,6 +758,7 @@ protected Void onLoad(Context context, Bundle args) {
                     if (!message.content)
                         EntityOperation.queue(db, message, EntityOperation.BODY);
 
+                    db.message().setMessageUiSeen(message.id, true);
                     EntityOperation.queue(db, message, EntityOperation.SEEN, true);
 
                     db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -937,7 +937,7 @@ protected Void onLoad(Context context, Bundle args) {
                                         if (message.uid == null && !TextUtils.isEmpty(message.error)) // outbox
                                             db.message().deleteMessage(id);
                                         else {
-                                            db.message().setMessageUiHide(id, true);
+                                            db.message().setMessageUiHide(message.id, true);
                                             EntityOperation.queue(db, message, EntityOperation.DELETE);
                                         }
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -395,7 +395,7 @@ protected List<EntityFolder> onLoad(Context context, Bundle args) throws Throwab
                         if (TextUtils.isEmpty(host))
                             throw new Throwable(getContext().getString(R.string.title_no_host));
                         if (TextUtils.isEmpty(port))
-                            throw new Throwable(getContext().getString(R.string.title_no_port));
+                            port = "993";
                         if (TextUtils.isEmpty(user))
                             throw new Throwable(getContext().getString(R.string.title_no_user));
                         if (TextUtils.isEmpty(password))
@@ -622,7 +622,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(host))
                             throw new Throwable(getContext().getString(R.string.title_no_host));
                         if (TextUtils.isEmpty(port))
-                            throw new Throwable(getContext().getString(R.string.title_no_port));
+                            port = "993";
                         if (TextUtils.isEmpty(user))
                             throw new Throwable(getContext().getString(R.string.title_no_user));
                         if (TextUtils.isEmpty(password))

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -324,7 +324,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         if (TextUtils.isEmpty(host))
                             throw new IllegalArgumentException(getContext().getString(R.string.title_no_host));
                         if (TextUtils.isEmpty(port))
-                            throw new IllegalArgumentException(getContext().getString(R.string.title_no_port));
+                            port = "465";
                         if (TextUtils.isEmpty(user))
                             throw new IllegalArgumentException(getContext().getString(R.string.title_no_user));
                         if (TextUtils.isEmpty(password))

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -138,9 +138,6 @@ private void onActivatePro(Intent intent) {
                 Log.i(Helper.TAG, "Response invalid");
                 Snackbar.make(getView(), R.string.title_pro_invalid, Snackbar.LENGTH_LONG).show();
             }
-
-            intent.setData(null);
-            setIntent(intent);
         } catch (NoSuchAlgorithmException ex) {
             Log.e(Helper.TAG, Log.getStackTraceString(ex));
             Helper.unexpectedError(this, ex);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -210,6 +210,7 @@ public void onCheckedChanged(CompoundButton button, boolean checked) {
                         prefs.edit().putString("theme", checked ? "dark" : "light").apply();
                     }
                 } else {
+                    tbDarkTheme.setChecked(false);
                     FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();
                     fragmentTransaction.replace(R.id.content_frame, new FragmentPro()).addToBackStack("pro");
                     fragmentTransaction.commit();

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -35,10 +35,9 @@ abstract class ActivityBase extends AppCompatActivity implements SharedPreferenc
     protected void onCreate(Bundle savedInstanceState) {
         Log.i(Helper.TAG, "Create " + this.getClass().getName() + " version=" + BuildConfig.VERSION_NAME);
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean pro = prefs.getBoolean("pro", false);
-        String theme = (pro ? prefs.getString("theme", "light") : "light");
+        String theme = (Helper.isPro(this) ? prefs.getString("theme", "light") : "light");
         setTheme("light".equals(theme) ? R.style.AppThemeLight : R.style.AppThemeDark);
-        PreferenceManager.getDefaultSharedPreferences(this).registerOnSharedPreferenceChangeListener(this);
+        prefs.registerOnSharedPreferenceChangeListener(this);
         super.onCreate(savedInstanceState);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -861,7 +861,7 @@ protected void onLoaded(Bundle args, Integer count) {
 
                 Helper.setViewsEnabled(view, true);
 
-                boolean pro = PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("pro", false);
+                boolean pro = Helper.isPro(getContext());
                 etSignature.setHint(pro ? R.string.title_optional : R.string.title_pro_feature);
                 etSignature.setEnabled(pro);
                 if (pro) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -31,7 +31,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
-import android.preference.PreferenceManager;
 import android.provider.ContactsContract;
 import android.provider.OpenableColumns;
 import android.text.Html;
@@ -713,7 +712,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
             long id = args.getLong("id", -1);
             long reference = args.getLong("reference", -1);
             long answer = args.getLong("answer", -1);
-            boolean pro = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("pro", false);
+            boolean pro = Helper.isPro(getContext());
 
             Log.i(Helper.TAG, "Load draft action=" + action + " id=" + id + " reference=" + reference);
 

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -807,7 +807,7 @@ public int compare(EntityAnswer a1, EntityAnswer a2) {
                 popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                     @Override
                     public boolean onMenuItemClick(MenuItem target) {
-                        if (PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("pro", false)) {
+                        if (Helper.isPro(getContext())) {
                             startActivity(new Intent(getContext(), ActivityCompose.class)
                                     .putExtra("action", "reply")
                                     .putExtra("reference", message.id)

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -203,7 +203,7 @@ public void onClick(View v) {
         tbDarkTheme.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton button, boolean checked) {
-                if (prefs.getBoolean("pro", false)) {
+                if (Helper.isPro(getContext())) {
                     if (checked != (Boolean) button.getTag()) {
                         button.setTag(checked);
                         tbDarkTheme.setChecked(checked);
@@ -346,8 +346,7 @@ public void onPrepareOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.menu_export:
-                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                if (prefs.getBoolean("pro", false))
+                if (Helper.isPro(getContext()))
                     startActivityForResult(getIntentExport(), ActivitySetup.REQUEST_EXPORT);
                 else {
                     FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction();

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -310,7 +310,7 @@ private Notification.Builder getNotificationUnseen(List<EntityMessage> messages)
             builder.setLights(0xff00ff00, 1000, 1000);
         }
 
-        if (prefs.getBoolean("pro", false)) {
+        if (Helper.isPro(this)) {
             DateFormat df = SimpleDateFormat.getDateTimeInstance(SimpleDateFormat.SHORT, SimpleDateFormat.SHORT);
             StringBuilder sb = new StringBuilder();
             for (EntityMessage message : messages) {

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -517,6 +517,8 @@ public void onActivityCreated(@Nullable final Bundle savedInstanceState) {
             ivContactAdd.setLayoutParams(lp);
         }
 
+        pbBody.setVisibility(View.VISIBLE);
+
         pbWait.setVisibility(View.GONE);
 
         grpHeader.setVisibility(free ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1404,8 +1404,8 @@ private void synchronizeMessages(EntityAccount account, EntityFolder folder, IMA
                 for (int j = isub.length - 1; j >= 0; j--)
                     try {
                         Log.i(Helper.TAG, folder.name + " download index=" + (from + j) + " id=" + ids[from + j]);
-                        if (ids[i - j] != null)
-                            downloadMessage(this, folder, ids[i - j], (IMAPMessage) isub[j]);
+                        if (ids[from + j] != null)
+                            downloadMessage(this, folder, ids[from + j], (IMAPMessage) isub[j]);
                     } catch (FolderClosedException ex) {
                         throw ex;
                     } catch (FolderClosedIOException ex) {

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -424,7 +424,7 @@ private void monitorAccount(final EntityAccount account, final ServiceState stat
             // Create session
             Properties props = MessageHelper.getSessionProperties(this, account.auth_type);
             final Session isession = Session.getInstance(props, null);
-            isession.setDebug(debug || BuildConfig.DEBUG);
+            isession.setDebug(debug);
             // adb -t 1 logcat | grep "fairemail\|System.out"
 
             final IMAPStore istore = (IMAPStore) isession.getStore("imaps");

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1353,7 +1353,7 @@ private void synchronizeMessages(EntityAccount account, EntityFolder folder, IMA
             Long[] ids = new Long[imessages.length];
             Log.i(Helper.TAG, folder.name + " add=" + imessages.length);
             for (int i = imessages.length - 1; i >= 0; i -= SYNC_BATCH_SIZE) {
-                int from = Math.max(0, i - SYNC_BATCH_SIZE) + 1;
+                int from = Math.max(0, i - SYNC_BATCH_SIZE + 1);
                 Log.i(Helper.TAG, folder.name + " update " + from + " .. " + i);
 
                 Message[] isub = Arrays.copyOfRange(imessages, from, i + 1);
@@ -1382,7 +1382,7 @@ private void synchronizeMessages(EntityAccount account, EntityFolder folder, IMA
             // Download messages/attachments
             Log.i(Helper.TAG, folder.name + " download=" + imessages.length);
             for (int i = imessages.length - 1; i >= 0; i -= DOWNLOAD_BATCH_SIZE) {
-                int from = Math.max(0, i - DOWNLOAD_BATCH_SIZE) + 1;
+                int from = Math.max(0, i - DOWNLOAD_BATCH_SIZE + 1);
                 Log.i(Helper.TAG, folder.name + " download " + from + " .. " + i);
 
                 Message[] isub = Arrays.copyOfRange(imessages, from, i + 1);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -441,7 +441,7 @@ private static List<EntityAttachment> getAttachments(BodyPart part) throws
 
                 EntityAttachment attachment = new EntityAttachment();
                 attachment.name = filename;
-                attachment.type = ct.getBaseType();
+                attachment.type = ct.getBaseType().toLowerCase();
                 attachment.size = part.getSize();
                 attachment.cid = (cid == null || cid.length == 0 ? null : cid[0]);
                 attachment.part = part;

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -538,6 +538,9 @@ protected UpdateInfo onLoad(Context context, Bundle args) throws Throwable {
 
             @Override
             protected void onLoaded(Bundle args, UpdateInfo info) {
+                if (info == null)
+                    return;
+
                 final Intent update = new Intent(Intent.ACTION_VIEW, Uri.parse(info.html_url));
                 if (update.resolveActivity(getPackageManager()) != null)
                     new AlertDialog.Builder(ActivityView.this)

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1600,6 +1600,7 @@ public void run() {
                         LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(ServiceSynchronize.this);
                         lbm.registerReceiver(outboxReceiver, f);
                         db.folder().setFolderState(outbox.id, "connected");
+                        db.folder().setFolderError(outbox.id, null);
 
                         lbm.sendBroadcast(new Intent(ACTION_PROCESS_OPERATIONS)
                                 .setType("account/outbox")

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -310,6 +310,7 @@ public void onChanged(@Nullable EntityFolder folder) {
                 // Consider previous save as cancelled
                 pbWait.setVisibility(View.GONE);
                 Helper.setViewsEnabled(view, true);
+                etRename.setEnabled(folder == null || EntityFolder.USER.equals(folder.type));
                 btnSave.setEnabled(true);
                 ibDelete.setEnabled(true);
                 ibDelete.setVisibility(folder == null ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/ActivityBilling.java
Patch:
@@ -12,7 +12,6 @@
 import android.provider.Settings;
 import android.util.Log;
 import android.view.View;
-import android.widget.Toast;
 
 import com.android.billingclient.api.BillingClient;
 import com.android.billingclient.api.BillingClientStateListener;
@@ -144,7 +143,7 @@ private void onActivatePro(Intent intent) {
             setIntent(intent);
         } catch (NoSuchAlgorithmException ex) {
             Log.e(Helper.TAG, Log.getStackTraceString(ex));
-            Toast.makeText(this, ex.getMessage(), Toast.LENGTH_LONG).show();
+            Helper.unexpectedError(this, ex);
         }
     }
 

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -31,7 +31,6 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import java.text.Collator;
 import java.util.ArrayList;
@@ -204,7 +203,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                                 @Override
                                 public void onException(Bundle args, Throwable ex) {
-                                    Toast.makeText(context, ex.toString(), Toast.LENGTH_LONG).show();
+                                    Helper.unexpectedError(context, ex);
                                 }
                             }.load(context, owner, args);
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -44,7 +44,6 @@
 import android.widget.ImageView;
 import android.widget.ProgressBar;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import java.io.InputStream;
 import java.text.DateFormat;
@@ -328,7 +327,7 @@ protected Void onLoad(Context context, Bundle args) {
 
                         @Override
                         public void onException(Bundle args, Throwable ex) {
-                            Toast.makeText(context, ex.toString(), Toast.LENGTH_LONG).show();
+                            Helper.unexpectedError(context, ex);
                         }
                     }.load(context, owner, args);
 

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -29,7 +29,6 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import java.io.BufferedOutputStream;
 import java.io.BufferedReader;
@@ -242,7 +241,7 @@ protected void onLoaded(Bundle args, Long id) {
                     @Override
                     protected void onException(Bundle args, Throwable ex) {
                         btnDebugInfo.setEnabled(true);
-                        Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                        Helper.unexpectedError(getContext(), ex);
                     }
                 }.load(FragmentAbout.this, new Bundle());
             }

File: app/src/main/java/eu/faircode/email/FragmentAnswer.java
Patch:
@@ -28,7 +28,6 @@
 import android.view.ViewGroup;
 import android.widget.EditText;
 import android.widget.ProgressBar;
-import android.widget.Toast;
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 
@@ -130,7 +129,7 @@ protected void onLoaded(Bundle args, Void data) {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 Helper.setViewsEnabled(view, true);
-                Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                Helper.unexpectedError(getContext(), ex);
             }
         }.load(this, args);
     }
@@ -174,7 +173,7 @@ protected void onLoaded(Bundle args, Void data) {
             @Override
             protected void onException(Bundle args, Throwable ex) {
                 Helper.setViewsEnabled(view, true);
-                Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                Helper.unexpectedError(getContext(), ex);
             }
         }.load(this, args);
     }

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.EditText;
 import android.widget.ImageButton;
 import android.widget.ProgressBar;
-import android.widget.Toast;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.sun.mail.imap.IMAPFolder;
@@ -193,7 +192,7 @@ protected void onException(Bundle args, Throwable ex) {
                         if (ex instanceof IllegalArgumentException)
                             Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
                         else
-                            Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                            Helper.unexpectedError(getContext(), ex);
                     }
                 }.load(FragmentFolder.this, args);
             }
@@ -266,7 +265,7 @@ protected void onException(Bundle args, Throwable ex) {
                                         if (ex instanceof IllegalArgumentException)
                                             Snackbar.make(view, ex.getMessage(), Snackbar.LENGTH_LONG).show();
                                         else
-                                            Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                                            Helper.unexpectedError(getContext(), ex);
                                     }
                                 }.load(FragmentFolder.this, args);
                             }

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -35,7 +35,6 @@
 import android.widget.ImageButton;
 import android.widget.ProgressBar;
 import android.widget.Spinner;
-import android.widget.Toast;
 
 import com.google.android.material.textfield.TextInputLayout;
 
@@ -340,7 +339,7 @@ protected void onException(Bundle args, Throwable ex) {
 
                         new AlertDialog.Builder(getContext())
                                 .setMessage(Helper.formatThrowable(ex))
-                                .setPositiveButton(android.R.string.ok, null)
+                                .setPositiveButton(android.R.string.cancel, null)
                                 .create()
                                 .show();
                     }
@@ -379,7 +378,7 @@ protected void onLoaded(Bundle args, Void data) {
 
                                     @Override
                                     protected void onException(Bundle args, Throwable ex) {
-                                        Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                                        Helper.unexpectedError(getContext(), ex);
                                     }
                                 }.load(FragmentIdentity.this, args);
                             }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -305,7 +305,7 @@ private Notification.Builder getNotificationUnseen(List<EntityMessage> messages)
                 .setDeleteIntent(pid);
 
         if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.O &&
-                prefs.getBoolean("light", true)) {
+                prefs.getBoolean("light", false)) {
             builder.setDefaults(Notification.DEFAULT_SOUND | Notification.DEFAULT_LIGHTS);
             builder.setLights(0xff00ff00, 1000, 1000);
         }

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -40,6 +40,9 @@ public class ActivitySetup extends ActivityBilling implements FragmentManager.On
     static final int REQUEST_PERMISSION = 1;
     static final int REQUEST_CHOOSE_ACCOUNT = 2;
 
+    static final int REQUEST_EXPORT = 3;
+    static final int REQUEST_IMPORT = 4;
+
     static final String ACTION_EDIT_ACCOUNT = BuildConfig.APPLICATION_ID + ".EDIT_ACCOUNT";
     static final String ACTION_EDIT_IDENTITY = BuildConfig.APPLICATION_ID + ".EDIT_IDENTITY";
 

File: app/src/main/java/eu/faircode/email/DaoAccount.java
Patch:
@@ -29,6 +29,9 @@
 
 @Dao
 public interface DaoAccount {
+    @Query("SELECT * FROM account")
+    List<EntityAccount> getAccounts();
+
     @Query("SELECT * FROM account WHERE synchronize = :synchronize")
     List<EntityAccount> getAccounts(boolean synchronize);
 

File: app/src/main/java/eu/faircode/email/DaoAnswer.java
Patch:
@@ -29,6 +29,9 @@
 
 @Dao
 public interface DaoAnswer {
+    @Query("SELECT * FROM answer")
+    List<EntityAnswer> getAnswers();
+
     @Query("SELECT * FROM answer WHERE id = :id")
     EntityAnswer getAnswer(long id);
 

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -42,6 +42,9 @@ public interface DaoIdentity {
     @Query("SELECT * FROM identity")
     List<EntityIdentity> getIdentities();
 
+    @Query("SELECT * FROM identity WHERE account = :account")
+    List<EntityIdentity> getIdentities(long account);
+
     @Query("SELECT * FROM identity WHERE id = :id")
     EntityIdentity getIdentity(long id);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -193,6 +193,8 @@ public String getContentType(String filename) {
                         }
                     });
                     bpAttachment.setDataHandler(new DataHandler(dataSource));
+                    if (attachment.cid != null)
+                        bpAttachment.setHeader("Content-ID", attachment.cid);
 
                     multipart.addBodyPart(bpAttachment);
                 }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -868,10 +868,10 @@ private void processOperations(EntityFolder folder, Session isession, IMAPStore
                                 " args=" + op.args);
 
                         EntityMessage message = db.message().getMessage(op.message);
-                        if (message == null)
-                            throw new MessageRemovedException();
-
                         try {
+                            if (message == null)
+                                throw new MessageRemovedException();
+
                             db.message().setMessageError(message.id, null);
 
                             if (message.uid == null &&

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -64,10 +64,10 @@ public interface DaoMessage {
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             ", MAX(CASE WHEN folder.id = :folder THEN message.id ELSE 0 END) as dummy" +
             " FROM message" +
-            " LEFT JOIN account ON account.id = message.account" +
+            " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +
             " JOIN folder f ON f.id = :folder" +
-            " WHERE (message.account IS NULL OR message.account = f.account)" +
+            " WHERE (message.account = f.account OR folder.type = '" + EntityFolder.OUTBOX + "')" +
             " AND (NOT message.ui_hide OR :debug)" +
             " AND (NOT :found OR ui_found = :found)" +
             " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
@@ -82,7 +82,7 @@ public interface DaoMessage {
             ", CASE WHEN message.ui_seen THEN 0 ELSE 1 END as unseen" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             " FROM message" +
-            " LEFT JOIN account ON account.id = message.account" +
+            " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE (NOT message.ui_hide OR :debug)" +
             " AND message.account = (SELECT m1.account FROM message m1 WHERE m1.id = :msgid)" +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -109,8 +109,9 @@ public interface DaoMessage {
     @Query("SELECT message.* FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE message.account = :account" +
-            " AND message.msgid = :msgid")
-    List<EntityMessage> getMessageByMsgId(long account, String msgid);
+            " AND (message.msgid = :msgid" +
+            " OR message.msgid = :reference)")
+    List<EntityMessage> getMessageByMsgId(long account, String msgid, String reference);
 
     @Query("SELECT message.* FROM message" +
             " JOIN folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -78,7 +78,7 @@ public interface DaoMessage {
             ", account.name AS accountName, account.color AS accountColor" +
             ", folder.name as folderName, folder.type as folderType" +
             ", 1 AS count" +
-            ", SUM(CASE WHEN message.ui_seen THEN 0 ELSE 1 END) as unseen" +
+            ", CASE WHEN message.ui_seen THEN 0 ELSE 1 END as unseen" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
             " FROM message" +
             " LEFT JOIN account ON account.id = message.account" +

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -377,7 +377,7 @@ protected void onResume() {
         if (newMessages) {
             newMessages = false;
             FragmentManager fm = getSupportFragmentManager();
-            fm.popBackStack("unified", 0);
+            fm.popBackStackImmediate("unified", 0);
             FragmentMessages fragment = (FragmentMessages) fm.findFragmentById(R.id.content_frame);
             fragment.onNewMessages();
         }

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -49,6 +49,7 @@ public class EntityAccount {
     public Boolean primary;
     @NonNull
     public Boolean synchronize;
+    public Integer color;
     @NonNull
     public Boolean store_sent; // obsolete
     @NonNull

File: app/src/main/java/eu/faircode/email/TupleMessageEx.java
Patch:
@@ -21,6 +21,7 @@
 
 public class TupleMessageEx extends EntityMessage {
     public String accountName;
+    public Integer accountColor;
     public String folderName;
     public String folderType;
     public int count;
@@ -33,6 +34,7 @@ public boolean equals(Object obj) {
             TupleMessageEx other = (TupleMessageEx) obj;
             return (super.equals(obj) &&
                     (this.accountName == null ? other.accountName == null : this.accountName.equals(other.accountName)) &&
+                    (this.accountColor == null ? other.accountColor == null : this.accountColor.equals(other.accountColor)) &&
                     this.folderName.equals(other.folderName) &&
                     this.folderType.equals(other.folderType) &&
                     this.count == other.count &&

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -968,6 +968,7 @@ public int compare(EntityIdentity i1, EntityIdentity i2) {
                 }
             });
 
+            db.attachment().liveAttachments(draft.id).removeObservers(getViewLifecycleOwner());
             db.attachment().liveAttachments(draft.id).observe(getViewLifecycleOwner(),
                     new Observer<List<EntityAttachment>>() {
                         @Override
@@ -976,11 +977,11 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                                 attachments = new ArrayList<>();
 
                             adapter.set(attachments);
-                            if (!free)
-                                grpAttachments.setVisibility(attachments.size() > 0 ? View.VISIBLE : View.GONE);
+                            grpAttachments.setVisibility(!free && attachments.size() > 0 ? View.VISIBLE : View.GONE);
                         }
                     });
 
+            db.message().liveMessage(draft.id).removeObservers(getViewLifecycleOwner());
             db.message().liveMessage(draft.id).observe(getViewLifecycleOwner(), new Observer<EntityMessage>() {
                 @Override
                 public void onChanged(final EntityMessage draft) {

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -80,7 +80,7 @@ interface IBoundaryCallbackMessages {
             @Override
             public void onStateChanged(LifecycleOwner source, Lifecycle.Event event) {
                 if (event == Lifecycle.Event.ON_DESTROY)
-                    new Thread(new Runnable() {
+                    executor.submit(new Runnable() {
                         @Override
                         public void run() {
                             Log.i(Helper.TAG, "Boundary close");
@@ -95,7 +95,7 @@ public void run() {
                                 imessages = null;
                             }
                         }
-                    }).start();
+                    });
             }
         });
     }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -371,7 +371,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         } else {
             long id = savedInstanceState.getLong("working");
             Bundle args = new Bundle();
-            args.putString("action", "edit");
+            args.putString("action", id < 0 ? "new" : "edit");
             args.putLong("id", id);
             args.putLong("account", -1);
             args.putLong("reference", -1);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -815,10 +815,10 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                         if (answer > 0) {
                             text = db.answer().getAnswer(answer).text;
 
-                            String name = "";
+                            String name = null;
                             if (draft.to != null && draft.to.length > 0)
                                 name = ((InternetAddress) draft.to[0]).getPersonal();
-                            text = text.replace("$name$", name);
+                            text = text.replace("$name$", name == null ? "" : name);
                         }
                         draft.subject = context.getString(R.string.title_subject_reply, ref.subject);
                         body = String.format("%s<br><br>%s %s:<br><br>%s",

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -777,7 +777,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                         body = body.replaceAll("\\r?\\n", "<br />");
 
                     if (pro && !TextUtils.isEmpty(account.signature))
-                        body = "<br>" + account.signature.replaceAll("\\r?\\n", "<br />") + "<br>" + body;
+                        body = "<br />" + account.signature + body;
 
                 } else {
                     draft.thread = ref.thread;
@@ -835,7 +835,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                     }
 
                     if (pro && !TextUtils.isEmpty(account.signature))
-                        body = "<br>" + account.signature.replaceAll("\\r?\\n", "<br />") + "<br>" + body;
+                        body = "<br />" + account.signature + body;
                 }
 
                 draft.received = new Date().getTime();

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -78,8 +78,11 @@ static Properties getSessionProperties(Context context, int auth_type) {
         props.put("mail.imaps.timeout", Integer.toString(NETWORK_TIMEOUT));
         props.put("mail.imaps.writetimeout", Integer.toString(NETWORK_TIMEOUT)); // one thread overhead
 
+        props.put("mail.imaps.connectionpool.debug", "true");
         props.put("mail.imaps.connectionpooltimeout", Integer.toString(3 * 60 * 1000)); // default: 45 sec
 
+        // "mail.imaps.finalizecleanclose"
+
         // https://tools.ietf.org/html/rfc4978
         // https://docs.oracle.com/javase/8/docs/api/java/util/zip/Deflater.html
         if (prefs.getBoolean("compress", true)) {

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -82,6 +82,7 @@ public class EntityMessage implements Serializable {
     public String references;
     public String inreplyto;
     public String thread; // compose = null
+    public String avatar; // URI
     public Address[] from;
     public Address[] to;
     public Address[] cc;
@@ -186,6 +187,7 @@ public boolean equals(Object obj) {
                     (this.references == null ? other.references == null : this.references.equals(other.references)) &&
                     (this.inreplyto == null ? other.inreplyto == null : this.inreplyto.equals(other.inreplyto)) &&
                     (this.thread == null ? other.thread == null : this.thread.equals(other.thread)) &&
+                    (this.avatar == null ? other.avatar == null : this.avatar.equals(other.avatar)) &&
                     equal(this.from, other.from) &&
                     equal(this.to, other.to) &&
                     equal(this.cc, other.cc) &&

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -544,7 +544,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                         }
 
                         if (TextUtils.isEmpty(name))
-                            name = host + "/" + user;
+                            name = user;
 
                         DB db = DB.getInstance(getContext());
                         try {

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -286,7 +286,7 @@ protected Long onLoad(Context context, Bundle args) throws Throwable {
                             draft.folder = drafts.id;
                             draft.msgid = EntityMessage.generateMessageId();
                             draft.to = new Address[]{Helper.myAddress()};
-                            draft.subject = context.getString(R.string.app_name) + " crash log";
+                            draft.subject = context.getString(R.string.app_name) + " " + BuildConfig.VERSION_NAME + " crash log";
                             draft.received = new Date().getTime();
                             draft.seen = false;
                             draft.ui_seen = false;

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -123,7 +123,7 @@ protected Long onLoad(Context context, Bundle args) throws UnsupportedEncodingEx
                             draft.folder = drafts.id;
                             draft.msgid = EntityMessage.generateMessageId();
                             draft.to = new Address[]{Helper.myAddress()};
-                            draft.subject = context.getString(R.string.app_name) + " debug info";
+                            draft.subject = context.getString(R.string.app_name) + " " + BuildConfig.VERSION_NAME + " debug info";
                             draft.received = new Date().getTime();
                             draft.seen = false;
                             draft.ui_seen = false;

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -690,7 +690,6 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                                 Log.i(Helper.TAG, "Swapping from/to");
                                 Address[] tmp = ref.to;
                                 ref.to = ref.from;
-                                ref.reply = null;
                                 ref.from = tmp;
                                 break;
                             }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -252,6 +252,7 @@ public void onClick(View v) {
                     s.setSpan(new StyleSpan(v.getId() == ibBold.getId() ? Typeface.BOLD : Typeface.ITALIC),
                             start, end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                     etBody.setText(s);
+                    etBody.setSelection(end);
                 }
             }
         };

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -290,6 +290,8 @@ protected Long onLoad(Context context, Bundle args) throws Throwable {
                             draft.received = new Date().getTime();
                             draft.seen = false;
                             draft.ui_seen = false;
+                            draft.flagged = false;
+                            draft.ui_flagged = false;
                             draft.ui_hide = false;
                             draft.ui_found = false;
                             draft.id = db.message().insertMessage(draft);

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -72,6 +72,7 @@ public class EntityOperation {
     public static final String SEND = "send";
     public static final String ATTACHMENT = "attachment";
     public static final String HEADERS = "headers";
+    public static final String FLAG = "flag";
 
     private static List<Intent> queue = new ArrayList<>();
 

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -127,6 +127,8 @@ protected Long onLoad(Context context, Bundle args) throws UnsupportedEncodingEx
                             draft.received = new Date().getTime();
                             draft.seen = false;
                             draft.ui_seen = false;
+                            draft.flagged = false;
+                            draft.ui_flagged = false;
                             draft.ui_hide = false;
                             draft.ui_found = false;
                             draft.id = db.message().insertMessage(draft);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -780,6 +780,8 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                 draft.received = new Date().getTime();
                 draft.seen = false;
                 draft.ui_seen = false;
+                draft.flagged = false;
+                draft.ui_flagged = false;
                 draft.ui_hide = false;
                 draft.ui_found = false;
 
@@ -1027,7 +1029,6 @@ protected EntityMessage onLoad(Context context, Bundle args) throws Throwable {
                     draft.uid = null;
                     draft.msgid = msgid;
                     draft.ui_hide = false;
-                    draft.ui_found = false;
                     draft.id = db.message().insertMessage(draft);
                     draft.write(getContext(), pbody);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -716,7 +716,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                         body = body.replaceAll("\\r?\\n", "<br />");
 
                     if (pro && !TextUtils.isEmpty(account.signature))
-                        body = "<br>" + account.signature + "<br>" + body;
+                        body = "<br>" + account.signature.replaceAll("\\r?\\n", "<br />") + "<br>" + body;
 
                 } else {
                     draft.thread = ref.thread;
@@ -768,7 +768,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                     }
 
                     if (pro && !TextUtils.isEmpty(account.signature))
-                        body = "<br>" + account.signature + "<br>" + body;
+                        body = "<br>" + account.signature.replaceAll("\\r?\\n", "<br />") + "<br>" + body;
                 }
 
                 draft.received = new Date().getTime();

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -34,7 +34,7 @@
 import androidx.lifecycle.Observer;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
-public class ActivitySetup extends ActivityBase implements FragmentManager.OnBackStackChangedListener {
+public class ActivitySetup extends ActivityBilling implements FragmentManager.OnBackStackChangedListener {
     private boolean hasAccount;
 
     static final int REQUEST_PERMISSION = 1;

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -34,6 +34,7 @@ public class EntityAccount {
     @PrimaryKey(autoGenerate = true)
     public Long id;
     public String name;
+    public String signature;
     @NonNull
     public String host; // IMAP
     @NonNull

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -285,7 +285,7 @@ String getHtml() throws MessagingException, IOException {
         return getHtml(imessage);
     }
 
-    static String getHtml(Part part) throws MessagingException, IOException {
+    private static String getHtml(Part part) throws MessagingException, IOException {
         if (part.isMimeType("text/*")) {
             String s;
             try {
@@ -353,7 +353,7 @@ public List<EntityAttachment> getAttachments() throws IOException, MessagingExce
         return result;
     }
 
-    static List<EntityAttachment> getAttachments(BodyPart part) throws
+    private static List<EntityAttachment> getAttachments(BodyPart part) throws
             IOException, MessagingException {
         List<EntityAttachment> result = new ArrayList<>();
 

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -61,7 +61,7 @@ public interface DaoFolder {
             " JOIN account ON account.id = folder.account" +
             " JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
             " WHERE account.`synchronize`" +
-            " AND folder.type = '" + EntityFolder.INBOX + "'" +
+            " AND folder.unified" +
             " GROUP BY folder.id")
     LiveData<List<TupleFolderEx>> liveUnified();
 
@@ -114,8 +114,8 @@ public interface DaoFolder {
             " AND type = :type")
     int setFolderUser(long account, String type);
 
-    @Query("UPDATE folder SET synchronize = :synchronize, after = :after WHERE id = :id")
-    int setFolderProperties(long id, boolean synchronize, int after);
+    @Query("UPDATE folder SET synchronize = :synchronize, unified = :unified, after = :after WHERE id = :id")
+    int setFolderProperties(long id, boolean synchronize, boolean unified, int after);
 
     @Query("DELETE FROM folder WHERE account= :account AND name = :name")
     void deleteFolder(Long account, String name);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -39,14 +39,14 @@ public interface DaoMessage {
             ", COUNT(message.id) as count" +
             ", SUM(CASE WHEN message.ui_seen THEN 0 ELSE 1 END) as unseen" +
             ", (SELECT COUNT(a.id) FROM attachment a WHERE a.message = message.id) AS attachments" +
-            ", MAX(CASE WHEN folder.type = '" + EntityFolder.INBOX + "' THEN message.id ELSE 0 END) as dummy" +
+            ", MAX(CASE WHEN folder.unified THEN message.id ELSE 0 END) as dummy" +
             " FROM message" +
             " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE account.`synchronize`" +
             " AND (NOT message.ui_hide OR :debug)" +
             " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
-            " HAVING SUM(CASE WHEN folder.type = '" + EntityFolder.INBOX + "' THEN 1 ELSE 0 END) > 0" +
+            " HAVING SUM(unified) > 0" +
             " ORDER BY message.received DESC")
     DataSource.Factory<Integer, TupleMessageEx> pagedUnifiedInbox(boolean debug);
 
@@ -127,7 +127,7 @@ public interface DaoMessage {
             " JOIN account ON account.id = message.account" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE account.`synchronize`" +
-            " AND folder.type = '" + EntityFolder.INBOX + "'" +
+            " AND folder.unified" +
             " AND NOT message.ui_seen AND NOT message.ui_hide" +
             " AND (account.seen_until IS NULL OR message.stored > account.seen_until)" +
             " ORDER BY message.received")

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -556,6 +556,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                             inbox.name = "INBOX";
                             inbox.type = EntityFolder.INBOX;
                             inbox.synchronize = true;
+                            inbox.unified = true;
                             inbox.after = EntityFolder.DEFAULT_INBOX_SYNC;
 
                             folders.add(inbox);

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -66,7 +66,7 @@ interface IBoundaryCallbackMessages {
 
         void onLoaded();
 
-        void onError(Throwable ex);
+        void onError(Context context, Throwable ex);
     }
 
     BoundaryCallbackMessages(Context context, LifecycleOwner owner, long folder, String search, IBoundaryCallbackMessages intf) {
@@ -177,7 +177,7 @@ public void run() {
                     mainHandler.post(new Runnable() {
                         @Override
                         public void run() {
-                            intf.onError(ex);
+                            intf.onError(context, ex);
                         }
                     });
                 } finally {

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -385,8 +385,8 @@ public void onLoaded() {
                             }
 
                             @Override
-                            public void onError(Throwable ex) {
-                                Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
+                            public void onError(Context context, Throwable ex) {
+                                Toast.makeText(context, ex.toString(), Toast.LENGTH_LONG).show();
                             }
                         });
 

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -35,7 +35,7 @@
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
 public class ActivitySetup extends ActivityBase implements FragmentManager.OnBackStackChangedListener {
-    boolean hasAccount;
+    private boolean hasAccount;
 
     static final int REQUEST_PERMISSION = 1;
     static final int REQUEST_CHOOSE_ACCOUNT = 2;

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -144,6 +144,7 @@ public void onClick(View view) {
         pbAccount.setVisibility(View.GONE);
         pbIdentity.setVisibility(View.GONE);
         tvAccountDone.setText(R.string.title_setup_to_do);
+        btnIdentity.setEnabled(false);
         tvIdentityDone.setText(R.string.title_setup_to_do);
         tvPermissionsDone.setText(R.string.title_setup_to_do);
 
@@ -198,6 +199,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
             @Override
             public void onChanged(@Nullable List<EntityAccount> accounts) {
                 tvAccountDone.setText(accounts != null && accounts.size() > 0 ? R.string.title_setup_done : R.string.title_setup_to_do);
+                btnIdentity.setEnabled(accounts != null && accounts.size() > 0);
             }
         });
 

File: app/src/main/java/eu/faircode/email/BoundaryCallbackMessages.java
Patch:
@@ -169,6 +169,8 @@ public void run() {
                         index--;
                     }
 
+                    EntityOperation.process(context); // download small attachments
+
                     Log.i(Helper.TAG, "Boundary done");
                 } catch (final Throwable ex) {
                     Log.e(Helper.TAG, "Boundary " + ex + "\n" + Log.getStackTraceString(ex));

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -119,7 +119,7 @@ else if ("syncing".equals(folder.state))
                 ivState.setImageResource(R.drawable.baseline_compare_arrows_24);
             else
                 ivState.setImageResource(R.drawable.baseline_cloud_off_24);
-            ivState.setVisibility(folder.synchronize || outbox ? View.VISIBLE : View.INVISIBLE);
+            ivState.setVisibility(folder.synchronize || "syncing".equals(folder.state) || outbox ? View.VISIBLE : View.INVISIBLE);
 
             tvError.setText(folder.error);
             tvError.setVisibility(folder.error == null ? View.GONE : View.VISIBLE);

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -127,7 +127,7 @@ void write(Context context, String body) throws IOException {
         try {
             this.body = (body == null ? "" : body);
             out = new BufferedWriter(new FileWriter(file));
-            out.write(body);
+            out.write(this.body);
         } finally {
             if (out != null)
                 try {

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -230,7 +230,7 @@ public void onClick(View view) {
         tvBody.setMovementMethod(new LinkMovementMethod() {
             public boolean onTouchEvent(TextView widget, Spannable buffer, MotionEvent event) {
                 if (event.getAction() != MotionEvent.ACTION_UP)
-                    return super.onTouchEvent(widget, buffer, event);
+                    return false;
 
                 int x = (int) event.getX();
                 int y = (int) event.getY();

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1584,7 +1584,7 @@ public void run() {
                             reportError(null, outbox.name, ex);
                         } finally {
                             Log.i(Helper.TAG, outbox.name + " end operations");
-                            db.folder().setFolderState(outbox.id, "connected");
+                            db.folder().setFolderState(outbox.id, null);
                         }
                     }
                 });

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -306,7 +306,7 @@ private Notification.Builder getNotificationUnseen(List<EntityMessage> messages)
                 if (!TextUtils.isEmpty(message.subject))
                     sb.append(": ").append(message.subject);
                 sb.append(" ").append(df.format(new Date(message.sent)));
-                sb.append("\n");
+                sb.append("<br>");
             }
 
             builder.setStyle(new Notification.BigTextStyle().bigText(Html.fromHtml(sb.toString())));

File: app/src/main/java/eu/faircode/email/SearchDataSource.java
Patch:
@@ -11,6 +11,7 @@
 import com.sun.mail.imap.IMAPFolder;
 import com.sun.mail.imap.IMAPStore;
 
+import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
@@ -109,7 +110,7 @@ public void loadRange(LoadRangeParams params, LoadRangeCallback<TupleMessageEx>
         }
     }
 
-    private SearchResult search(String term, int from, int count) throws MessagingException, UnsupportedEncodingException {
+    private SearchResult search(String term, int from, int count) throws MessagingException, IOException {
         Log.i(Helper.TAG, "SDS search from=" + from + " count=" + count);
 
         if (istore == null) {

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -203,7 +203,8 @@ public static Address[] decodeAddresses(String json) {
                                 jaddress.getString("address")));
                 }
             } catch (Throwable ex) {
-                Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
+                // Compose can store invalid addresses
+                Log.w(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
             }
             return result.toArray(new Address[0]);
         }

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -221,7 +221,7 @@ public void onClick(View v) {
                 args.putString("email", etEmail.getText().toString());
                 args.putString("replyto", etReplyTo.getText().toString());
                 args.putLong("account", account == null ? -1 : account.id);
-                args.putInt("auth_type", account == null ? Helper.AUTH_TYPE_PASSWORD : account.auth_type);
+                args.putInt("auth_type", account == null || account.auth_type == null ? Helper.AUTH_TYPE_PASSWORD : account.auth_type);
                 args.putString("host", etHost.getText().toString());
                 args.putBoolean("starttls", cbStartTls.isChecked());
                 args.putString("port", etPort.getText().toString());

File: app/src/main/java/eu/faircode/email/DaoIdentity.java
Patch:
@@ -48,6 +48,9 @@ public interface DaoIdentity {
     @Query("SELECT * FROM identity WHERE id = :id")
     LiveData<EntityIdentity> liveIdentity(long id);
 
+    @Query("SELECT * FROM identity WHERE account = :account AND `primary`")
+    EntityIdentity getPrimaryIdentity(long account);
+
     @Insert
     long insertIdentity(EntityIdentity identity);
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1054,7 +1054,9 @@ protected EntityMessage onLoad(Context context, Bundle args) throws Throwable {
                     EntityOperation.queue(db, draft, EntityOperation.MOVE, trash.id);
 
                 } else if (action == R.id.action_save) {
-                    if (ato == null && acc == null && abcc == null &&
+                    EntityIdentity primary = db.identity().getPrimaryIdentity(draft.account);
+                    if ((primary == null || draft.identity == primary.id) &&
+                            ato == null && acc == null && abcc == null &&
                             TextUtils.isEmpty(subject) &&
                             TextUtils.isEmpty(body) &&
                             db.attachment().getAttachmentCount(draft.id) == 0)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -865,9 +865,9 @@ protected void onLoaded(Bundle args, final EntityMessage draft) {
             final String action = getArguments().getString("action");
             Log.i(Helper.TAG, "Loaded draft id=" + draft.id + " action=" + action);
 
-            etTo.setText(draft.to == null ? null : MessageHelper.getFormattedAddresses(draft.to, true));
-            etCc.setText(draft.cc == null ? null : MessageHelper.getFormattedAddresses(draft.cc, true));
-            etBcc.setText(draft.bcc == null ? null : MessageHelper.getFormattedAddresses(draft.bcc, true));
+            etTo.setText(MessageHelper.getFormattedAddresses(draft.to, true));
+            etCc.setText(MessageHelper.getFormattedAddresses(draft.cc, true));
+            etBcc.setText(MessageHelper.getFormattedAddresses(draft.bcc, true));
             etSubject.setText(draft.subject);
 
             etBody.setText(null);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -252,8 +252,8 @@ Address[] getReply() throws MessagingException {
     }
 
     static String getFormattedAddresses(Address[] addresses, boolean full) {
-        if (addresses == null)
-            return null;
+        if (addresses == null || addresses.length == 0)
+            return "";
 
         List<String> formatted = new ArrayList<>();
         for (Address address : addresses)

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -255,7 +255,7 @@ protected List<EntityFolder> onLoad(Context context, Bundle args) throws Throwab
 
                         // Check IMAP server / get folders
                         List<EntityFolder> folders = new ArrayList<>();
-                        Properties props = MessageHelper.getSessionProperties(auth_type);
+                        Properties props = MessageHelper.getSessionProperties(context, auth_type);
                         Session isession = Session.getInstance(props, null);
                         isession.setDebug(true);
                         IMAPStore istore = null;
@@ -481,7 +481,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                         // Check IMAP server
                         if (synchronize) {
-                            Session isession = Session.getInstance(MessageHelper.getSessionProperties(auth_type), null);
+                            Session isession = Session.getInstance(MessageHelper.getSessionProperties(context, auth_type), null);
                             isession.setDebug(true);
                             IMAPStore istore = null;
                             try {

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -273,7 +273,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                         // Check SMTP server
                         if (synchronize) {
-                            Properties props = MessageHelper.getSessionProperties(auth_type);
+                            Properties props = MessageHelper.getSessionProperties(context, auth_type);
                             Session isession = Session.getInstance(props, null);
                             isession.setDebug(true);
                             Transport itransport = isession.getTransport(starttls ? "smtp" : "smtps");

File: app/src/main/java/eu/faircode/email/SearchDataSource.java
Patch:
@@ -123,7 +123,7 @@ private SearchResult search(String term, int from, int count) throws MessagingEx
                 db.account().setAccountPassword(account.id, account.password);
             }
 
-            Properties props = MessageHelper.getSessionProperties(account.auth_type);
+            Properties props = MessageHelper.getSessionProperties(context, account.auth_type);
             props.setProperty("mail.imap.throwsearchexception", "true");
             Session isession = Session.getInstance(props, null);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -402,7 +402,7 @@ private void monitorAccount(final EntityAccount account, final ServiceState stat
                 db.account().setAccountPassword(account.id, account.password);
             }
 
-            Properties props = MessageHelper.getSessionProperties(account.auth_type);
+            Properties props = MessageHelper.getSessionProperties(this, account.auth_type);
             final Session isession = Session.getInstance(props, null);
             isession.setDebug(debug);
             // adb -t 1 logcat | grep "fairemail\|System.out"
@@ -987,7 +987,7 @@ private void doSend(EntityMessage message, DB db) throws MessagingException, IOE
         }
 
         // Create session
-        Properties props = MessageHelper.getSessionProperties(ident.auth_type);
+        Properties props = MessageHelper.getSessionProperties(this, ident.auth_type);
         final Session isession = Session.getInstance(props, null);
 
         // Create message

File: app/src/main/java/eu/faircode/email/FragmentEx.java
Patch:
@@ -54,13 +54,14 @@ protected void finish() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
+        Log.i(Helper.TAG, "Save instance " + this);
         super.onSaveInstanceState(outState);
         outState.putString("subtitle", subtitle);
     }
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        Log.i(Helper.TAG, "Create " + this);
+        Log.i(Helper.TAG, "Create " + this + " saved=" + (savedInstanceState != null));
         super.onCreate(savedInstanceState);
         if (savedInstanceState != null)
             subtitle = savedInstanceState.getString("subtitle");
@@ -74,7 +75,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
-        Log.i(Helper.TAG, "Activity " + this);
+        Log.i(Helper.TAG, "Activity " + this + " saved=" + (savedInstanceState != null));
         super.onActivityCreated(savedInstanceState);
     }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -98,9 +98,11 @@ static Properties getSessionProperties(int auth_type) {
         props.put("mail.mime.decodetext.strict", "false");
 
         // https://javaee.github.io/javamail/OAuth2
+        Log.i(Helper.TAG, "Auth type=" + auth_type);
         if (auth_type == Helper.AUTH_TYPE_GMAIL) {
             props.put("mail.imaps.auth.mechanisms", "XOAUTH2");
             props.put("mail.smtps.auth.mechanisms", "XOAUTH2");
+            props.put("mail.smtp.auth.mechanisms", "XOAUTH2");
         }
 
         return props;

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -160,7 +160,7 @@ public void onChanged(int position, int count, Object payload) {
                 Log.i(Helper.TAG, "Changed @" + position + " #" + count);
             }
         });
-        diff.dispatchUpdatesTo(AdapterAccount.this);
+        diff.dispatchUpdatesTo(this);
     }
 
     private class MessageDiffCallback extends DiffUtil.Callback {

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -267,7 +267,7 @@ public void onChanged(int position, int count, Object payload) {
                 Log.i(Helper.TAG, "Changed @" + position + " #" + count);
             }
         });
-        diff.dispatchUpdatesTo(AdapterAttachment.this);
+        diff.dispatchUpdatesTo(this);
     }
 
     private class MessageDiffCallback extends DiffUtil.Callback {

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -218,7 +218,7 @@ public void onChanged(int position, int count, Object payload) {
                 Log.i(Helper.TAG, "Changed @" + position + " #" + count);
             }
         });
-        diff.dispatchUpdatesTo(AdapterFolder.this);
+        diff.dispatchUpdatesTo(this);
     }
 
     private class MessageDiffCallback extends DiffUtil.Callback {

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -161,7 +161,7 @@ public void onChanged(int position, int count, Object payload) {
                 Log.i(Helper.TAG, "Changed @" + position + " #" + count);
             }
         });
-        diff.dispatchUpdatesTo(AdapterIdentity.this);
+        diff.dispatchUpdatesTo(this);
     }
 
     private class MessageDiffCallback extends DiffUtil.Callback {

File: app/src/main/java/eu/faircode/email/AdapterOperation.java
Patch:
@@ -139,7 +139,7 @@ public void onChanged(int position, int count, Object payload) {
                 Log.i(Helper.TAG, "Changed @" + position + " #" + count);
             }
         });
-        diff.dispatchUpdatesTo(AdapterOperation.this);
+        diff.dispatchUpdatesTo(this);
     }
 
     private class MessageDiffCallback extends DiffUtil.Callback {

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -126,7 +126,7 @@ void write(Context context, String body) throws IOException {
         BufferedWriter out = null;
         try {
             out = new BufferedWriter(new FileWriter(file));
-            out.write(body);
+            out.write(body == null ? "" : body);
         } finally {
             if (out != null)
                 try {

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -572,7 +572,6 @@ protected void onLoaded(Bundle args, Void data) {
                                     @Override
                                     protected void onException(Bundle args, Throwable ex) {
                                         Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
-                                        // TODO: recover from error
                                     }
                                 }.load(FragmentAccount.this, args);
                             }

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -362,7 +362,6 @@ protected void onLoaded(Bundle args, Void data) {
                                     @Override
                                     protected void onException(Bundle args, Throwable ex) {
                                         Toast.makeText(getContext(), ex.toString(), Toast.LENGTH_LONG).show();
-                                        // TODO: recover from error
                                     }
                                 }.load(FragmentIdentity.this, args);
                             }

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -28,7 +28,9 @@
 
 @Dao
 public interface DaoFolder {
-    @Query("SELECT * FROM folder WHERE account = :account")
+    @Query("SELECT * FROM folder" +
+            " WHERE account = :account" +
+            " ORDER BY CASE WHEN folder.type = '" + EntityFolder.USER + "' THEN 1 ELSE 0 END")
     List<EntityFolder> getFolders(long account);
 
     @Query("SELECT * FROM folder" +

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -126,9 +126,11 @@ public class ServiceSynchronize extends LifecycleService {
 
     public ServiceSynchronize() {
         // https://docs.oracle.com/javaee/6/api/javax/mail/internet/package-summary.html
+        // https://docs.oracle.com/javaee/6/api/javax/mail/internet/MimeMultipart.html
         System.setProperty("mail.mime.ignoreunknownencoding", "true");
         System.setProperty("mail.mime.decodefilename", "true");
         System.setProperty("mail.mime.encodefilename", "true");
+        System.setProperty("mail.mime.multipart.ignoreexistingboundaryparameter", "true");
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -103,7 +103,8 @@ public interface DaoMessage {
     @Query("SELECT message.* FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE message.account = :account" +
-            " AND message.thread = :thread")
+            " AND message.thread = :thread" +
+            " AND folder.type <> '" + EntityFolder.OUTBOX + "'")
     List<EntityMessage> getMessageByThread(long account, String thread);
 
     @Query("SELECT message.*, account.name AS accountName, folder.name as folderName, folder.type as folderType" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -1027,8 +1027,6 @@ protected EntityMessage onLoad(Context context, Bundle args) throws Throwable {
                     db.message().updateMessage(draft);
                     draft.write(context, pbody);
 
-                    EntityOperation.queue(db, draft, EntityOperation.SEEN, true);
-
                     EntityFolder trash = db.folder().getFolderByType(draft.account, EntityFolder.TRASH);
                     EntityOperation.queue(db, draft, EntityOperation.MOVE, trash.id);
 

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -36,6 +36,7 @@ public class ActivityCompose extends ActivityBase implements FragmentManager.OnB
     static final int REQUEST_CONTACT_CC = 2;
     static final int REQUEST_CONTACT_BCC = 3;
     static final int REQUEST_ATTACHMENT = 4;
+    static final int REQUEST_OPENPGP = 5;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -453,6 +453,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                             account.password = password;
                             account.synchronize = synchronize;
                             account.primary = (account.synchronize && primary);
+                            account.store_sent = false;
                             account.poll_interval = Integer.parseInt(poll_interval);
 
                             if (!synchronize)

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -57,8 +57,9 @@ public interface DaoFolder {
             ", SUM(CASE WHEN message.ui_seen = 0 THEN 1 ELSE 0 END) AS unseen" +
             " FROM folder" +
             " JOIN account ON account.id = folder.account" +
-            " LEFT JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
-            " WHERE folder.type = '" + EntityFolder.INBOX + "'" +
+            " JOIN message ON message.folder = folder.id AND NOT message.ui_hide" +
+            " WHERE account.`synchronize`" +
+            " AND folder.type = '" + EntityFolder.INBOX + "'" +
             " GROUP BY folder.id")
     LiveData<List<TupleFolderEx>> liveUnified();
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1129,6 +1129,9 @@ private void synchronizeMessages(EntityAccount account, EntityFolder folder, IMA
             cal.set(Calendar.MILLISECOND, 0);
 
             long ago = cal.getTimeInMillis();
+            if (ago < 0)
+                ago = 0;
+
             Log.i(Helper.TAG, folder.name + " ago=" + new Date(ago));
 
             // Delete old local messages

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -965,9 +965,11 @@ protected EntityMessage onLoad(Context context, Bundle args) throws Throwable {
 
                     // Restore attachments
                     for (EntityAttachment attachment : attachments) {
+                        File file = EntityAttachment.getFile(context, attachment.id);
                         attachment.id = null;
                         attachment.message = draft.id;
-                        db.attachment().insertAttachment(attachment);
+                        attachment.id = db.attachment().insertAttachment(attachment);
+                        Helper.copy(file, EntityAttachment.getFile(context, attachment.id));
                     }
 
                     EntityOperation.queue(db, draft, EntityOperation.SEND);

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -313,7 +313,6 @@ public void onChanged(@Nullable final TupleMessageEx message) {
                 }
 
                 FragmentMessage.this.message = message;
-                getActivity().invalidateOptionsMenu();
                 setSubtitle(Helper.localizeFolderName(getContext(), message.folderName));
 
                 if (savedInstanceState == null) {
@@ -339,6 +338,8 @@ public void onChanged(@Nullable final TupleMessageEx message) {
                     }
                 }
 
+                getActivity().invalidateOptionsMenu();
+
                 Bundle args = new Bundle();
                 args.putLong("id", message.id);
 

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -96,9 +96,7 @@ public interface DaoMessage {
     @Query("SELECT message.* FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE message.account = :account" +
-            " AND message.msgid = :msgid" +
-            " AND folder.type <> '" + EntityFolder.INBOX + "'" +
-            " AND folder.type <> '" + EntityFolder.ARCHIVE + "'")
+            " AND message.msgid = :msgid")
     List<EntityMessage> getMessageByMsgId(long account, String msgid);
 
     @Query("SELECT message.* FROM message" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -712,11 +712,10 @@ protected EntityMessage onLoad(Context context, Bundle args) throws IOException
                 draft.id = db.message().insertMessage(draft);
                 draft.write(context, body == null ? "" : body);
 
-                if (args.containsKey("attachments")) {
-                    ArrayList<Uri> uris = args.getParcelableArrayList("attachments");
+                ArrayList<Uri> uris = args.getParcelableArrayList("attachments");
+                if (uris != null)
                     for (Uri uri : uris)
                         addAttachment(context, draft.id, uri);
-                }
 
                 EntityOperation.queue(db, draft, EntityOperation.ADD);
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -352,7 +352,7 @@ private List<EntityAttachment> getAttachments(BodyPart part) throws IOException,
                 filename = null;
             }
 
-            if (disposition == null || Part.ATTACHMENT.equalsIgnoreCase(disposition) || !TextUtils.isEmpty(filename)) {
+            if (Part.ATTACHMENT.equalsIgnoreCase(disposition) || !TextUtils.isEmpty(filename)) {
                 ContentType ct = new ContentType(part.getContentType());
                 EntityAttachment attachment = new EntityAttachment();
                 attachment.name = filename;

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -52,8 +52,8 @@ public abstract class SimpleTask<T> implements LifecycleObserver {
 
     static {
         handlerThread = new HandlerThread("SimpleTask");
-        handlerThread.setPriority(THREAD_PRIORITY_BACKGROUND);
         handlerThread.start();
+        handlerThread.setPriority(THREAD_PRIORITY_BACKGROUND);
         handler = new Handler(handlerThread.getLooper());
     }
 

File: app/src/main/java/eu/faircode/email/HtmlHelper.java
Patch:
@@ -52,6 +52,7 @@ public void head(Node node, int depth) {
         String name = node.nodeName();
         if (node instanceof TextNode) {
             String text = ((TextNode) node).text();
+            text = Html.escapeHtml(text);
             Matcher matcher = pattern.matcher(text);
             while (matcher.find()) {
                 String ref = matcher.group();

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -626,7 +626,7 @@ public void onChanged(@Nullable EntityAccount account) {
                     tilPassword.getEditText().setText(account == null ? null : account.password);
                     cbSynchronize.setChecked(account == null ? true : account.synchronize);
                     cbPrimary.setChecked(account == null ? true : account.primary);
-                    cbStoreSent.setChecked(account == null ? true : account.store_sent);
+                    cbStoreSent.setChecked(account == null ? false : account.store_sent);
                 } else {
                     int provider = savedInstanceState.getInt("provider");
                     spProvider.setTag(provider);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -587,9 +587,9 @@ protected void onException(Bundle args, Throwable ex) {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
         outState.putInt("provider", spProvider.getSelectedItemPosition());
         outState.putString("password", tilPassword.getEditText().getText().toString());
-        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -311,6 +311,7 @@ public void onDestroyView() {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
         if (autosave)
             onAction(R.id.action_save);
         outState.putLong("working", working);

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -375,10 +375,10 @@ protected void onException(Bundle args, Throwable ex) {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
         outState.putInt("account", spAccount.getSelectedItemPosition());
         outState.putInt("provider", spProvider.getSelectedItemPosition());
         outState.putString("password", tilPassword.getEditText().getText().toString());
-        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -291,10 +291,10 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
 
     @Override
     public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
         outState.putBoolean("free", free);
         outState.putInt("addresses", grpAddresses.getVisibility());
         outState.putInt("attachments", rvAttachment.getVisibility());
-        super.onSaveInstanceState(outState);
     }
 
     @Override

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -80,7 +80,7 @@ public void onStart() {
 
     @OnLifecycleEvent(Lifecycle.Event.ON_STOP)
     public void onStop() {
-        Log.i(Helper.TAG, "Resume tak " + this);
+        Log.i(Helper.TAG, "Stop task " + this);
     }
 
     @OnLifecycleEvent(Lifecycle.Event.ON_RESUME)

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -914,6 +914,7 @@ protected EntityMessage onLoad(Context context, Bundle args) throws Throwable {
                     draft.msgid = msgid;
                     draft.ui_hide = false;
                     draft.id = db.message().insertMessage(draft);
+                    draft.write(getContext(), body);
 
                     // Restore attachments
                     for (EntityAttachment attachment : attachments) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -76,6 +76,7 @@
 import androidx.core.content.ContextCompat;
 import androidx.cursoradapter.widget.SimpleCursorAdapter;
 import androidx.fragment.app.FragmentTransaction;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -799,7 +800,8 @@ public void onChanged(@Nullable List<EntityAttachment> attachments) {
                 public void onChanged(final EntityMessage draft) {
                     // Draft was deleted
                     if (draft == null || draft.ui_hide) {
-                        getFragmentManager().popBackStack();
+                        if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
+                            getFragmentManager().popBackStack();
                         return;
                     }
                 }

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -33,6 +33,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 
 public class FragmentFolder extends FragmentEx {
@@ -148,7 +149,8 @@ public void onActivityCreated(@Nullable final Bundle savedInstanceState) {
             @Override
             public void onChanged(@Nullable EntityFolder folder) {
                 if (folder == null) {
-                    getFragmentManager().popBackStack();
+                    if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
+                        getFragmentManager().popBackStack();
                     return;
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -33,6 +33,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.constraintlayout.widget.Group;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -108,7 +109,8 @@ public void onChanged(@Nullable EntityAccount account) {
             @Override
             public void onChanged(@Nullable List<TupleFolderEx> folders) {
                 if (folders == null) {
-                    getFragmentManager().popBackStack();
+                    if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
+                        getFragmentManager().popBackStack();
                     return;
                 }
 

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -64,6 +64,7 @@
 import androidx.constraintlayout.widget.Group;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.Observer;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -305,7 +306,7 @@ public void onActivityCreated(@Nullable final Bundle savedInstanceState) {
             public void onChanged(@Nullable final TupleMessageEx message) {
                 if (message == null || (!(debug && BuildConfig.DEBUG) && message.ui_hide)) {
                     // Message gone (moved, deleted)
-                    if (FragmentMessage.this.isVisible())
+                    if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
                         getFragmentManager().popBackStack();
                 } else {
                     setSubtitle(Helper.localizeFolderName(getContext(), message.folderName));

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -40,6 +40,7 @@
 import androidx.annotation.Nullable;
 import androidx.constraintlayout.widget.Group;
 import androidx.fragment.app.FragmentTransaction;
+import androidx.lifecycle.Lifecycle;
 import androidx.lifecycle.LiveData;
 import androidx.lifecycle.Observer;
 import androidx.paging.LivePagedListBuilder;
@@ -154,7 +155,8 @@ public void onChanged(@Nullable TupleFolderEx folder) {
             @Override
             public void onChanged(@Nullable PagedList<TupleMessageEx> messages) {
                 if (messages == null) {
-                    getFragmentManager().popBackStack();
+                    if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED))
+                        getFragmentManager().popBackStack();
                     return;
                 }
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -109,6 +109,8 @@
 import androidx.lifecycle.Observer;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
+import static android.os.Process.THREAD_PRIORITY_BACKGROUND;
+
 public class ServiceSynchronize extends LifecycleService {
     private final Object lock = new Object();
     private ServiceManager serviceManager = new ServiceManager();
@@ -1451,6 +1453,7 @@ public void run() {
                     }
                 }
             }, "sync.main");
+            main.setPriority(THREAD_PRIORITY_BACKGROUND); // will be inherited
             main.start();
         }
 

File: app/src/main/java/eu/faircode/email/SimpleTask.java
Patch:
@@ -33,6 +33,8 @@
 import androidx.lifecycle.LifecycleService;
 import androidx.lifecycle.OnLifecycleEvent;
 
+import static android.os.Process.THREAD_PRIORITY_BACKGROUND;
+
 //
 // This simple task is simple to use, but it is also simple to cause bugs that can easily lead to crashes
 // Make sure to not access any member in any outer scope from onLoad
@@ -50,6 +52,7 @@ public abstract class SimpleTask<T> implements LifecycleObserver {
 
     static {
         handlerThread = new HandlerThread("SimpleTask");
+        handlerThread.setPriority(THREAD_PRIORITY_BACKGROUND);
         handlerThread.start();
         handler = new Handler(handlerThread.getLooper());
     }

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -340,8 +340,6 @@ public void onChanged(@Nullable final TupleMessageEx message) {
                             : R.drawable.baseline_visibility_24);
                     actionSeen.setTitle(message.ui_seen ? R.string.title_unseen : R.string.title_seen);
 
-                    tvBody.setText(null);
-
                     Bundle args = new Bundle();
                     args.putLong("id", message.id);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -779,6 +779,8 @@ private void processOperations(EntityFolder folder, Session isession, IMAPStore
                             throw new IllegalArgumentException(op.name + " without uid");
 
                         try {
+                            db.message().setMessageError(message.id, null);
+
                             JSONArray jargs = new JSONArray(op.args);
 
                             if (EntityOperation.SEEN.equals(op.name))

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -51,13 +51,13 @@ public void uncaughtException(Thread thread, Throwable ex) {
                     out = new FileWriter(file);
                     out.write(ex.toString() + "\n" + Log.getStackTraceString(ex));
                 } catch (IOException e) {
-                    Log.e(Helper.TAG, e + "\n" + Log.getStackTraceString(ex));
+                    Log.e(Helper.TAG, e + "\n" + Log.getStackTraceString(e));
                 } finally {
                     if (out != null) {
                         try {
                             out.close();
                         } catch (IOException e) {
-                            Log.e(Helper.TAG, e + "\n" + Log.getStackTraceString(ex));
+                            Log.e(Helper.TAG, e + "\n" + Log.getStackTraceString(e));
                         }
                     }
                 }

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -57,7 +57,7 @@ public class FragmentMessages extends FragmentEx {
     private long primary = -1;
     private AdapterMessage adapter;
 
-    private static final int PAGE_SIZE = 100;
+    private static final int PAGE_SIZE = 50;
 
     @Override
     @Nullable

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -85,7 +85,7 @@ public interface DaoMessage {
             " WHERE msgid = :msgid" +
             " AND folder.type <> '" + EntityFolder.INBOX + "'" +
             " AND folder.type <> '" + EntityFolder.ARCHIVE + "'")
-    EntityMessage getMessageByMsgId(String msgid);
+    List<EntityMessage> getMessageByMsgId(String msgid);
 
     @Query("SELECT message.* FROM message" +
             " JOIN folder ON folder.id = message.folder" +

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -645,9 +645,10 @@ protected void onLoaded(Bundle args, final EntityMessage draft) {
 
             etBody.setText(TextUtils.isEmpty(draft.body) ? null : Html.fromHtml(draft.body));
 
-            if ("reply".equals(action) || "reply_all".equals(action))
+            if ("reply".equals(action) || "reply_all".equals(action)) {
                 etBody.requestFocus();
-            else if ("forward".equals(action))
+                etBody.setSelection(0);
+            } else if ("forward".equals(action))
                 etTo.requestFocus();
 
             Helper.setViewsEnabled(view, true);

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -411,10 +411,11 @@ public void onChanged(@Nullable final EntityIdentity identity) {
                 } else
                     tilPassword.getEditText().setText(savedInstanceState.getString("password"));
 
+                Helper.setViewsEnabled(view, true);
+
                 cbPrimary.setEnabled(cbSynchronize.isChecked());
                 ibDelete.setVisibility(identity == null ? View.GONE : View.VISIBLE);
 
-                Helper.setViewsEnabled(view, true);
                 btnSave.setEnabled(true);
                 pbWait.setVisibility(View.GONE);
 

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -71,7 +71,7 @@ public abstract class DB extends RoomDatabase {
 
     private static DB sInstance;
 
-    private static final String DB_NAME = "fairemail.db";
+    private static final String DB_NAME = "fairemail";
 
     public static synchronized DB getInstance(Context context) {
         if (sInstance == null)

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -61,6 +61,7 @@ public boolean equals(Object obj) {
                     this.password.equals(other.password) &&
                     this.primary.equals(other.primary) &&
                     this.synchronize.equals(other.synchronize) &&
+                    (this.seen_until == null ? other.seen_until == null : this.seen_until.equals(other.seen_until)) &&
                     (this.state == null ? other.state == null : this.state.equals(other.state)) &&
                     (this.error == null ? other.error == null : this.error.equals(other.error)));
         } else

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -276,6 +276,9 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                 identity.synchronize = synchronize;
                                 identity.primary = (identity.synchronize && args.getBoolean("primary"));
 
+                                if (!identity.synchronize)
+                                    identity.error = null;
+
                                 if (identity.primary)
                                     db.identity().resetPrimary();
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -565,7 +565,7 @@ protected EntityMessage onLoad(Context context, Bundle args) {
                 draft = new EntityMessage();
                 draft.account = account;
                 draft.folder = drafts.id;
-                draft.msgid = draft.generateMessageId(); // for multiple appends
+                draft.msgid = EntityMessage.generateMessageId(); // for multiple appends
 
                 if (ref != null) {
                     draft.thread = ref.thread;

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -63,10 +63,11 @@ static Properties getSessionProperties() {
         props.put("mail.imaps.ssl.checkserveridentity", "true");
         props.put("mail.imaps.ssl.trust", "*");
         props.put("mail.imaps.starttls.enable", "false");
-        props.put("mail.imaps.timeout", "20000");
+
         props.put("mail.imaps.connectiontimeout", "20000");
+        props.put("mail.imaps.timeout", "20000");
+        props.put("mail.imaps.writetimeout", "20000"); // one thread overhead
 
-        // https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#properties
         props.put("mail.smtps.ssl.checkserveridentity", "true");
         props.put("mail.smtps.ssl.trust", "*");
         props.put("mail.smtps.starttls.enable", "false");

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -19,8 +19,6 @@
     Copyright 2018 by Marcel Bokhorst (M66B)
 */
 
-import android.text.TextUtils;
-
 import java.util.Date;
 import java.util.Random;
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -135,7 +135,7 @@ public void onChanged(List<EntityOperation> operations) {
                                 "\n" + message.msgid;
                         if (operations != null)
                             for (EntityOperation op : operations)
-                                text += "\n" + op.name + " " + df.format(new Date(op.created));
+                                text += "\n" + op.id + ":" + op.name + " " + df.format(new Date(op.created));
 
                         tvError.setText(text);
                         tvError.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -502,7 +502,7 @@ protected Void onLoad(Context context, Bundle args) {
                                 for (EntityMessage tmessage : db.message().getMessageByThread(message.account, message.thread)) {
                                     db.message().setMessageUiSeen(tmessage.id, true);
 
-                                    EntityOperation.queue(db, tmessage, EntityOperation.SEEN, tmessage.ui_seen);
+                                    EntityOperation.queue(db, tmessage, EntityOperation.SEEN, true);
                                 }
 
                             db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -413,7 +413,7 @@ protected Void onLoad(Context context, Bundle args) {
                     for (EntityMessage tmessage : db.message().getMessageByThread(message.account, message.thread)) {
                         db.message().setMessageUiSeen(tmessage.id, !message.ui_seen);
 
-                        EntityOperation.queue(db, tmessage, EntityOperation.SEEN, tmessage.ui_seen);
+                        EntityOperation.queue(db, tmessage, EntityOperation.SEEN, !tmessage.ui_seen);
                     }
 
                     db.setTransactionSuccessful();

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1286,7 +1286,7 @@ private int synchronizeMessage(EntityFolder folder, IMAPFolder ifolder, IMAPMess
                 }
 
                 if (message != null) {
-                    if (message.seen != seen) {
+                    if (message.seen != seen || message.seen != message.ui_seen) {
                         message.seen = seen;
                         message.ui_seen = seen;
                         db.message().updateMessage(message);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -448,6 +448,9 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
                                 else
                                     account.id = db.account().insertAccount(account);
 
+                                if (!synchronize)
+                                    db.account().setAccountError(account.id, null);
+
                                 List<EntityFolder> folders = new ArrayList<>();
 
                                 EntityFolder inbox = new EntityFolder();

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -89,6 +89,8 @@ protected Void onLoad(Context context, Bundle args) {
                                 db.beginTransaction();
 
                                 db.folder().setFolderProperties(id, synchronize, days);
+                                if (!synchronize)
+                                    db.folder().setFolderError(id, null);
 
                                 EntityFolder folder = db.folder().getFolder(id);
                                 if (!folder.synchronize)

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -600,8 +600,8 @@ public void onChanged(@Nullable EntityAccount account) {
                 cbPrimary.setEnabled(account == null ? true : account.synchronize);
                 ibDelete.setVisibility(account == null ? View.GONE : View.VISIBLE);
 
-                btnCheck.setVisibility(account.synchronize ? View.VISIBLE : View.GONE);
-                btnSave.setVisibility(account.synchronize ? View.GONE : View.VISIBLE);
+                btnCheck.setVisibility(account == null || account.synchronize ? View.VISIBLE : View.GONE);
+                btnSave.setVisibility(account == null || account.synchronize ? View.GONE : View.VISIBLE);
 
                 btnCheck.setEnabled(true);
                 pbWait.setVisibility(View.GONE);

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -202,6 +202,9 @@ protected List<EntityFolder> onLoad(Context context, Bundle args) throws Throwab
                             if (!istore.hasCapability("IDLE"))
                                 throw new MessagingException(getContext().getString(R.string.title_no_idle));
 
+                            if (!istore.hasCapability("UIDPLUS"))
+                                throw new MessagingException(getContext().getString(R.string.title_no_uidplus));
+
                             for (Folder ifolder : istore.getDefaultFolder().list("*")) {
                                 String type = null;
 

File: app/src/main/java/eu/faircode/email/DaoOperation.java
Patch:
@@ -34,6 +34,9 @@ public interface DaoOperation {
     @Query("SELECT * FROM operation WHERE folder = :folder ORDER BY id")
     List<EntityOperation> getOperationsByFolder(long folder);
 
+    @Query("SELECT * FROM operation ORDER BY id")
+    LiveData<List<EntityOperation>> liveOperations();
+
     @Query("SELECT COUNT(id) FROM operation WHERE folder = :folder")
     int getOperationCount(long folder);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1185,6 +1185,7 @@ private int synchronizeMessage(EntityFolder folder, IMAPFolder ifolder, IMAPMess
             DB db = DB.getInstance(this);
             try {
                 int result = 0;
+
                 db.beginTransaction();
 
                 // Find message by uid (fast, no headers required)

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -468,7 +468,6 @@ protected Void onLoad(Context context, Bundle args) {
                     EntityOperation.queue(db, draft, EntityOperation.ADD);
 
                     db.setTransactionSuccessful();
-
                 } finally {
                     db.endTransaction();
                 }

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -403,7 +403,7 @@ protected Void onLoad(Context context, Bundle args) throws IOException {
                         String extension = MimeTypeMap.getFileExtensionFromUrl(attachment.name.toLowerCase());
                         if (extension != null)
                             attachment.type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
-                        if (extension == null)
+                        if (attachment.type == null)
                             attachment.type = "application/octet-stream";
 
                         String size = cursor.getString(cursor.getColumnIndex(OpenableColumns.SIZE));

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -145,8 +145,9 @@ public void set(@NonNull List<TupleFolderEx> folders) {
         Collections.sort(folders, new Comparator<TupleFolderEx>() {
             @Override
             public int compare(TupleFolderEx f1, TupleFolderEx f2) {
-                int s = ((Integer) EntityFolder.FOLDER_SORT_ORDER.indexOf(f1.type))
-                        .compareTo(EntityFolder.FOLDER_SORT_ORDER.indexOf(f2.type));
+                int s = Integer.compare(
+                        EntityFolder.FOLDER_SORT_ORDER.indexOf(f1.type),
+                        EntityFolder.FOLDER_SORT_ORDER.indexOf(f2.type));
                 if (s != 0)
                     return s;
                 int c = -f1.synchronize.compareTo(f2.synchronize);

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -203,7 +203,7 @@ public boolean onLongClick(View view) {
         this.debug = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("debug", false);
     }
 
-    public static final DiffUtil.ItemCallback<TupleMessageEx> DIFF_CALLBACK =
+    private static final DiffUtil.ItemCallback<TupleMessageEx> DIFF_CALLBACK =
             new DiffUtil.ItemCallback<TupleMessageEx>() {
                 @Override
                 public boolean areItemsTheSame(

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -75,7 +75,7 @@ public void onClick(View v) {
 
                 new SimpleTask<Void>() {
                     @Override
-                    protected Void onLoad(Context context, Bundle args) throws Throwable {
+                    protected Void onLoad(Context context, Bundle args) {
                         try {
                             ServiceSynchronize.stop(getContext(), "folder");
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -278,7 +278,7 @@ protected Void onLoad(Context context, Bundle args) throws Throwable {
 
                             return null;
                         } finally {
-                            ServiceSynchronize.restart(getContext(), "account");
+                            ServiceSynchronize.restart(getContext(), "identity");
                         }
                     }
 

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -337,7 +337,7 @@ else if (EntityFolder.USER.equals(folder.type))
                             top_navigation.setVisibility(View.VISIBLE);
 
                             bottom_navigation.getMenu().findItem(R.id.action_spam).setVisible(!inOutbox && !inArchive && !inJunk && hasJunk);
-                            bottom_navigation.getMenu().findItem(R.id.action_trash).setVisible(!inOutbox && !inArchive && hasTrash);
+                            bottom_navigation.getMenu().findItem(R.id.action_trash).setVisible(!inOutbox && hasTrash);
                             bottom_navigation.getMenu().findItem(R.id.action_move).setVisible(!inOutbox && (!inInbox || hasUser));
                             bottom_navigation.getMenu().findItem(R.id.action_archive).setVisible(!inOutbox && !inArchive && hasArchive);
                             bottom_navigation.getMenu().findItem(R.id.action_reply).setVisible(!inOutbox);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -155,7 +155,7 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
         // Create outbox
         new SimpleTask<Void>() {
             @Override
-            protected Void onLoad(Context context, Bundle args) throws Throwable {
+            protected Void onLoad(Context context, Bundle args) {
                 DB db = DB.getInstance(context);
                 try {
                     db.beginTransaction();

File: app/src/main/java/eu/faircode/email/ActivityMain.java
Patch:
@@ -27,7 +27,7 @@ protected void onCreate(Bundle savedInstanceState) {
             DB.getInstance(this).account().liveAccounts(true).observe(this, new Observer<List<EntityAccount>>() {
                 @Override
                 public void onChanged(@Nullable List<EntityAccount> accounts) {
-                    if (accounts.size() == 0)
+                    if (accounts == null || accounts.size() == 0)
                         startActivity(new Intent(ActivityMain.this, ActivitySetup.class));
                     else {
                         startActivity(new Intent(ActivityMain.this, ActivityView.class));

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -45,7 +45,7 @@
                 @Index(value = {"identity"}),
                 @Index(value = {"replying"}),
                 @Index(value = {"folder", "uid"}, unique = true),
-                @Index(value = {"msgid"}, unique = true),
+                @Index(value = {"msgid", "folder"}, unique = true),
                 @Index(value = {"thread"}),
                 @Index(value = {"received"}),
                 @Index(value = {"ui_seen"}),

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -93,7 +93,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         DB.getInstance(getContext()).account().liveAccounts().observe(getViewLifecycleOwner(), new Observer<List<EntityAccount>>() {
             @Override
             public void onChanged(@Nullable List<EntityAccount> accounts) {
-                adapter.set(accounts);
+                if (accounts != null)
+                    adapter.set(accounts);
 
                 pbWait.setVisibility(View.GONE);
                 grpReady.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -93,7 +93,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         DB.getInstance(getContext()).identity().liveIdentities().observe(getViewLifecycleOwner(), new Observer<List<TupleIdentityEx>>() {
             @Override
             public void onChanged(@Nullable List<TupleIdentityEx> identities) {
-                adapter.set(identities);
+                if (identities != null)
+                    adapter.set(identities);
 
                 pbWait.setVisibility(View.GONE);
                 grpReady.setVisibility(View.VISIBLE);

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -196,14 +196,14 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         db.account().liveAccounts(true).observe(getViewLifecycleOwner(), new Observer<List<EntityAccount>>() {
             @Override
             public void onChanged(@Nullable List<EntityAccount> accounts) {
-                tvAccountDone.setVisibility(accounts.size() > 0 ? View.VISIBLE : View.INVISIBLE);
+                tvAccountDone.setVisibility(accounts != null && accounts.size() > 0 ? View.VISIBLE : View.INVISIBLE);
             }
         });
 
         db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable List<EntityIdentity> identities) {
-                tvIdentityDone.setVisibility(identities.size() > 0 ? View.VISIBLE : View.INVISIBLE);
+                tvIdentityDone.setVisibility(identities != null && identities.size() > 0 ? View.VISIBLE : View.INVISIBLE);
             }
         });
     }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -98,6 +98,7 @@ public interface DaoMessage {
     @Query("SELECT uid FROM message WHERE folder = :folder AND received >= :received AND NOT uid IS NULL")
     List<Long> getUids(long folder, long received);
 
+    // in case of duplicate message IDs
     @Insert(onConflict = OnConflictStrategy.REPLACE)
     long insertMessage(EntityMessage message);
 

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -76,7 +76,9 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         LinearLayoutManager llm = new LinearLayoutManager(getContext());
         rvMessage.setLayoutManager(llm);
 
-        adapter = new AdapterMessage(getContext(),
+        adapter = new AdapterMessage(
+                getContext(),
+                getViewLifecycleOwner(),
                 thread < 0
                         ? AdapterMessage.ViewType.FOLDER
                         : AdapterMessage.ViewType.THREAD);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -396,7 +396,7 @@ else if (requestCode == ActivityCompose.REQUEST_CONTACT_BCC)
                 InternetAddress address = new InternetAddress(email, name);
                 StringBuilder sb = new StringBuilder(text);
                 if (sb.length() > 0)
-                    sb.append("; ");
+                    sb.append(", ");
                 sb.append(address.toString());
 
                 if (requestCode == ActivityCompose.REQUEST_CONTACT_TO)
@@ -542,7 +542,6 @@ public EntityMessage onLoad(Bundle args) {
                     draft = new EntityMessage();
                     draft.account = account;
                     draft.folder = drafts.id;
-                    draft.msgid = draft.generateMessageId();
 
                     if (ref != null) {
                         draft.thread = ref.thread;

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -44,7 +44,7 @@ public interface DaoMessage {
             " FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE (NOT message.ui_hide OR :debug)" +
-            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
+            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END, message.subject" +
             " HAVING SUM(CASE WHEN folder.type = '" + EntityFolder.INBOX + "' THEN 1 ELSE 0 END) > 0" +
             " ORDER BY message.received DESC")
     DataSource.Factory<Integer, TupleMessageEx> pagedUnifiedInbox(boolean debug);
@@ -57,7 +57,7 @@ public interface DaoMessage {
             " FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE (NOT message.ui_hide OR :debug)" +
-            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
+            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END, message.subject" +
             " HAVING SUM(CASE WHEN folder.id = :folder THEN 1 ELSE 0 END) > 0" +
             " ORDER BY message.received DESC, message.sent DESC")
     DataSource.Factory<Integer, TupleMessageEx> pagedFolder(long folder, boolean debug);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -542,6 +542,7 @@ public EntityMessage onLoad(Bundle args) {
                     draft = new EntityMessage();
                     draft.account = account;
                     draft.folder = drafts.id;
+                    draft.msgid = draft.generateMessageId();
 
                     if (ref != null) {
                         draft.thread = ref.thread;

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -722,6 +722,8 @@ private void processOperations(EntityFolder folder, Session isession, IMAPStore
                     try {
                         JSONArray jargs = new JSONArray(op.args);
                         EntityMessage message = db.message().getMessage(op.message);
+                        if (message == null)
+                            throw new MessageRemovedException();
 
                         if (EntityOperation.SEEN.equals(op.name))
                             doSeen(folder, ifolder, message, jargs);

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -99,7 +99,7 @@ private static void queue(DB db, EntityMessage message, String name, JSONArray j
         operation.id = db.operation().insertOperation(operation);
 
         Intent intent = new Intent();
-        intent.setType("account/" + (message.account == null ? "outbox" : message.account));
+        intent.setType("account/" + (SEND.equals(name) ? "outbox" : message.account));
         intent.setAction(ServiceSynchronize.ACTION_PROCESS_OPERATIONS);
         intent.putExtra("folder", message.folder);
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -184,9 +184,9 @@ public int compare(EntityAccount a1, EntityAccount a2) {
         new SimpleLoader<Long>() {
             @Override
             public Long onLoad(Bundle args) throws Throwable {
-                File file = new File(getCacheDir(), "crash.log");
+                File file = new File(getContext().getCacheDir(), "crash.log");
                 if (file.exists()) {
-                    DB db = DB.getInstance(ActivityView.this);
+                    DB db = DB.getInstance(getContext());
                     EntityFolder drafts = db.folder().getPrimaryDrafts();
                     if (drafts != null) {
                         Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
@@ -352,7 +352,7 @@ private void checkIntent(Intent intent) {
                 @Override
                 public Object onLoad(Bundle args) {
                     long time = args.getLong("time");
-                    DaoAccount dao = DB.getInstance(ActivityView.this).account();
+                    DaoAccount dao = DB.getInstance(getContext()).account();
                     for (EntityAccount account : dao.getAccounts(true)) {
                         account.seen_until = time;
                         dao.updateAccount(account);

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -47,6 +47,7 @@ public class EntityAccount {
     @NonNull
     public Boolean synchronize;
     public Long seen_until;
+    public String error;
 
     @Override
     public boolean equals(Object obj) {
@@ -58,7 +59,8 @@ public boolean equals(Object obj) {
                     this.user.equals(other.user) &&
                     this.password.equals(other.password) &&
                     this.primary.equals(other.primary) &&
-                    this.synchronize.equals(other.synchronize));
+                    this.synchronize.equals(other.synchronize) &&
+                    (this.error == null ? other.error == null : this.error.equals(other.error)));
         } else
             return false;
     }

File: app/src/main/java/eu/faircode/email/EntityMessage.java
Patch:
@@ -82,6 +82,7 @@ public class EntityMessage {
     public Boolean ui_seen;
     @NonNull
     public Boolean ui_hide;
+    public String error;
 
     @Override
     public boolean equals(Object obj) {
@@ -107,7 +108,8 @@ public boolean equals(Object obj) {
                     this.received.equals(other.received) &&
                     this.seen.equals(other.seen) &&
                     this.ui_seen.equals(other.ui_seen) &&
-                    this.ui_hide.equals(other.ui_hide));
+                    this.ui_hide.equals(other.ui_hide) &&
+                    (this.error == null ? other.error == null : this.error.equals(other.error)));
         }
         return false;
     }

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -175,7 +175,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         Log.i(Helper.TAG, "Service start");
         super.onStartCommand(intent, flags, startId);
 
-        if ("unseen".equals(intent.getAction())) {
+        if (intent != null && "unseen".equals(intent.getAction())) {
             final long now = new Date().getTime();
             executor.submit(new Runnable() {
                 @Override

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -73,6 +73,7 @@ public class ActivityView extends ActivityBase implements FragmentManager.OnBack
     static final int LOADER_MESSAGE_MOVE = 9;
     static final int LOADER_MESSAGE_ARCHIVE = 10;
     static final int LOADER_SEEN_UNTIL = 11;
+    static final int LOADER_DEBUG_INFO = 12;
 
     static final int REQUEST_VIEW = 1;
     static final int REQUEST_UNSEEN = 2;

File: app/src/main/java/eu/faircode/email/SimpleLoader.java
Patch:
@@ -26,7 +26,7 @@ public void load(Fragment fragment, int id, Bundle args) {
         manager.restartLoader(id, args, callbacks).forceLoad();
     }
 
-    public Object onLoad(Bundle args) {
+    public Object onLoad(Bundle args) throws Throwable {
         return null;
     }
 

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -439,7 +439,8 @@ public Object onLoad(Bundle args) {
                         DB db = DB.getInstance(ActivityView.this);
                         EntityMessage message = db.message().getMessage(id);
                         EntityFolder folder = db.folder().getFolder(message.folder);
-                        if (!EntityFolder.OUTBOX.equals(folder.type)) {
+                        if (!EntityFolder.OUTBOX.equals(folder.type) &&
+                                !EntityFolder.ARCHIVE.equals(folder.type)) {
                             if (!message.seen && !message.ui_seen) {
                                 try {
                                     db.beginTransaction();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -89,10 +89,10 @@ private void bindTo(TupleMessageEx message) {
             if (EntityFolder.DRAFTS.equals(message.folderType) ||
                     EntityFolder.OUTBOX.equals(message.folderType) ||
                     EntityFolder.SENT.equals(message.folderType)) {
-                tvFrom.setText(MessageHelper.getFormattedAddresses(message.to));
+                tvFrom.setText(MessageHelper.getFormattedAddresses(message.to, false));
                 tvTime.setText(DateUtils.getRelativeTimeSpanString(context, message.sent == null ? message.received : message.sent));
             } else {
-                tvFrom.setText(MessageHelper.getFormattedAddresses(message.from));
+                tvFrom.setText(MessageHelper.getFormattedAddresses(message.from, false));
                 tvTime.setText(DateUtils.getRelativeTimeSpanString(context, message.received));
             }
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -166,7 +166,7 @@ Address[] getReply() throws MessagingException {
         return imessage.getReplyTo();
     }
 
-    static String getFormattedAddresses(Address[] addresses) {
+    static String getFormattedAddresses(Address[] addresses, boolean full) {
         if (addresses == null)
             return null;
 
@@ -177,6 +177,8 @@ static String getFormattedAddresses(Address[] addresses) {
                 String personal = a.getPersonal();
                 if (TextUtils.isEmpty(personal))
                     formatted.add(address.toString());
+                else if (full)
+                    formatted.add(personal + " <" + a.getAddress() + ">");
                 else
                     formatted.add(personal);
             } else

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -44,7 +44,7 @@ public void uncaughtException(Thread thread, Throwable ex) {
                 DB db = null;
                 try {
                     db = DB.getBlockingInstance(ApplicationEx.this);
-                    EntityFolder drafts = db.folder().getLocalDrafts();
+                    EntityFolder drafts = EntityFolder.getDrafts(ApplicationEx.this, db, -1);
                     if (drafts != null) {
                         Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
 

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -61,7 +61,7 @@ public void onClick(View view) {
                     public void run() {
                         try {
                             DB db = DB.getInstance(getContext());
-                            EntityFolder drafts = db.folder().getLocalDrafts();
+                            EntityFolder drafts = EntityFolder.getDrafts(getContext(), db, -1);
                             if (drafts != null) {
                                 StringBuilder info = Helper.getDebugInfo();
                                 info.insert(0, getString(R.string.title_debug_info_remark) + "\n\n\n\n");

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -309,6 +309,7 @@ private void monitorAccount(final EntityAccount account) {
                 Properties props = MessageHelper.getSessionProperties();
                 props.put("mail.imaps.peek", "true");
                 props.setProperty("mail.mime.address.strict", "false");
+                props.setProperty("mail.mime.decodetext.strict", "false");
                 //props.put("mail.imaps.minidletime", "5000");
                 Session isession = Session.getInstance(props, null);
                 // isession.setDebug(true);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -43,7 +43,7 @@ public void uncaughtException(Thread thread, Throwable ex) {
                 DB db = null;
                 try {
                     db = DB.getBlockingInstance(ApplicationEx.this);
-                    EntityFolder drafts = db.folder().getPrimaryFolder(EntityFolder.TYPE_DRAFTS);
+                    EntityFolder drafts = db.folder().getLocalDrafts();
                     if (drafts != null) {
                         Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
                         String body = ex + "\n" + Log.getStackTraceString(ex);

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -61,7 +61,7 @@ public void onClick(View view) {
                     public void run() {
                         try {
                             DB db = DB.getInstance(getContext());
-                            EntityFolder drafts = db.folder().getPrimaryFolder(EntityFolder.TYPE_DRAFTS);
+                            EntityFolder drafts = db.folder().getLocalDrafts();
                             if (drafts != null) {
                                 StringBuilder info = Helper.getDebugInfo();
                                 info.insert(0, getString(R.string.title_debug_info_remark) + "\n\n\n\n");

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -324,16 +324,15 @@ public Throwable loadInBackground() {
                                     drafts = true;
                             }
                         }
-/*
+
                         if (!drafts) {
                             EntityFolder folder = new EntityFolder();
-                            folder.name = getContext().getString(R.string.title_local_drafts);
+                            folder.name = getContext().getString(R.string.title_folder_local_drafts);
                             folder.type = EntityFolder.TYPE_DRAFTS;
                             folder.synchronize = false;
                             folder.after = 0;
                             folders.add(folder);
                         }
-*/
                     } finally {
                         if (istore != null)
                             istore.close();

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -202,7 +202,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         long id = (args == null ? -1 : args.getLong("id", -1));
 
         // Observe
-        DB.getInstance(getContext()).account().liveAccount(id).observe(this, new Observer<EntityAccount>() {
+        DB.getInstance(getContext()).account().liveAccount(id).observe(getViewLifecycleOwner(), new Observer<EntityAccount>() {
             @Override
             public void onChanged(@Nullable EntityAccount account) {
                 etName.setText(account == null ? null : account.name);

File: app/src/main/java/eu/faircode/email/FragmentAccounts.java
Patch:
@@ -90,7 +90,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         // Observe accounts
-        DB.getInstance(getContext()).account().liveAccounts().observe(this, new Observer<List<EntityAccount>>() {
+        DB.getInstance(getContext()).account().liveAccounts().observe(getViewLifecycleOwner(), new Observer<List<EntityAccount>>() {
             @Override
             public void onChanged(@Nullable List<EntityAccount> accounts) {
                 adapter.set(accounts);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -190,7 +190,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        DB.getInstance(getContext()).identity().liveIdentities(true).observe(FragmentCompose.this, new Observer<List<EntityIdentity>>() {
+        DB.getInstance(getContext()).identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable final List<EntityIdentity> identities) {
                 Collections.sort(identities, new Comparator<EntityIdentity>() {

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -101,7 +101,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         long id = (args == null ? -1 : args.getLong("id"));
 
         // Observe
-        DB.getInstance(getContext()).folder().liveFolder(id).observe(this, new Observer<EntityFolder>() {
+        DB.getInstance(getContext()).folder().liveFolder(id).observe(getViewLifecycleOwner(), new Observer<EntityFolder>() {
             @Override
             public void onChanged(@Nullable EntityFolder folder) {
                 if (folder != null) {

File: app/src/main/java/eu/faircode/email/FragmentFolders.java
Patch:
@@ -90,15 +90,15 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         DB db = DB.getInstance(getContext());
 
         // Observe account
-        db.account().liveAccount(account).observe(this, new Observer<EntityAccount>() {
+        db.account().liveAccount(account).observe(getViewLifecycleOwner(), new Observer<EntityAccount>() {
             @Override
             public void onChanged(@Nullable EntityAccount account) {
                 setSubtitle(account.name);
             }
         });
 
         // Observe folders
-        db.folder().liveFolders(account).observe(this, new Observer<List<TupleFolderEx>>() {
+        db.folder().liveFolders(account).observe(getViewLifecycleOwner(), new Observer<List<TupleFolderEx>>() {
             @Override
             public void onChanged(@Nullable List<TupleFolderEx> folders) {
                 adapter.set(folders);

File: app/src/main/java/eu/faircode/email/FragmentIdentities.java
Patch:
@@ -90,7 +90,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         // Observe identities
-        DB.getInstance(getContext()).identity().liveIdentities().observe(this, new Observer<List<EntityIdentity>>() {
+        DB.getInstance(getContext()).identity().liveIdentities().observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable List<EntityIdentity> identities) {
                 adapter.set(identities);

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -231,7 +231,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         long id = (args == null ? -1 : args.getLong("id", -1));
 
         // Observer
-        DB.getInstance(getContext()).identity().liveIdentity(id).observe(this, new Observer<EntityIdentity>() {
+        DB.getInstance(getContext()).identity().liveIdentity(id).observe(getViewLifecycleOwner(), new Observer<EntityIdentity>() {
             @Override
             public void onChanged(@Nullable EntityIdentity identity) {
                 etName.setText(identity == null ? null : identity.name);

File: app/src/main/java/eu/faircode/email/FragmentMessages.java
Patch:
@@ -118,7 +118,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
                 setSubtitle(R.string.title_folder_unified);
                 messages = new LivePagedListBuilder<>(db.message().pagedUnifiedInbox(debug), PAGE_SIZE).build();
             } else {
-                db.folder().liveFolderEx(folder).observe(this, new Observer<TupleFolderEx>() {
+                db.folder().liveFolderEx(folder).observe(getViewLifecycleOwner(), new Observer<TupleFolderEx>() {
                     @Override
                     public void onChanged(@Nullable TupleFolderEx folder) {
                         setSubtitle(folder == null ? null : Helper.localizeFolderName(getContext(), folder.name));
@@ -132,7 +132,7 @@ public void onChanged(@Nullable TupleFolderEx folder) {
         }
 
         Log.i(Helper.TAG, "Observing messages");
-        messages.observe(this, new Observer<PagedList<TupleMessageEx>>() {
+        messages.observe(getViewLifecycleOwner(), new Observer<PagedList<TupleMessageEx>>() {
             @Override
             public void onChanged(@Nullable PagedList<TupleMessageEx> messages) {
                 Log.i(Helper.TAG, "Submit messages=" + messages.size());

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -178,14 +178,14 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         DB db = DB.getInstance(getContext());
 
-        db.account().liveAccounts(true).observe(this, new Observer<List<EntityAccount>>() {
+        db.account().liveAccounts(true).observe(getViewLifecycleOwner(), new Observer<List<EntityAccount>>() {
             @Override
             public void onChanged(@Nullable List<EntityAccount> accounts) {
                 tvAccountDone.setVisibility(accounts.size() > 0 ? View.VISIBLE : View.INVISIBLE);
             }
         });
 
-        db.identity().liveIdentities(true).observe(this, new Observer<List<EntityIdentity>>() {
+        db.identity().liveIdentities(true).observe(getViewLifecycleOwner(), new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable List<EntityIdentity> identities) {
                 tvIdentityDone.setVisibility(identities.size() > 0 ? View.VISIBLE : View.INVISIBLE);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -944,7 +944,7 @@ private void synchronizeFolders(EntityAccount account, IMAPStore istore) throws
                         folder.name = ifolder.getFullName();
                         folder.type = EntityFolder.TYPE_USER;
                         folder.synchronize = false;
-                        folder.after = 0;
+                        folder.after = EntityFolder.DEFAULT_USER_SYNC;
                         dao.insertFolder(folder);
                         Log.i(Helper.TAG, folder.name + " added");
                     } else

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -266,9 +266,9 @@ public void onChanged(@Nullable List<TupleAttachment> attachments) {
                     bottom_navigation.setTag(message.folderType);
 
                     db.folder().liveFolders(message.account).removeObservers(FragmentMessage.this);
-                    db.folder().liveFolders(message.account).observe(FragmentMessage.this, new Observer<List<EntityFolder>>() {
+                    db.folder().liveFolders(message.account).observe(FragmentMessage.this, new Observer<List<TupleFolderEx>>() {
                         @Override
-                        public void onChanged(@Nullable final List<EntityFolder> folders) {
+                        public void onChanged(@Nullable final List<TupleFolderEx> folders) {
                             boolean hasTrash = false;
                             boolean hasJunk = false;
                             boolean hasArchive = false;

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -46,6 +46,7 @@ public class EntityAccount {
     public Boolean primary;
     @NonNull
     public Boolean synchronize;
+    public Long seen_until;
 
     @Override
     public boolean equals(Object obj) {

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -44,7 +44,7 @@ public interface DaoMessage {
             " FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE (NOT message.ui_hide OR :debug)" +
-            " GROUP BY message.thread" +
+            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
             " HAVING SUM(CASE WHEN folder.type = '" + EntityFolder.TYPE_INBOX + "' THEN 1 ELSE 0 END) > 0" +
             " ORDER BY message.received DESC")
     DataSource.Factory<Integer, TupleMessageEx> pagedUnifiedInbox(boolean debug);
@@ -57,7 +57,7 @@ public interface DaoMessage {
             " FROM message" +
             " JOIN folder ON folder.id = message.folder" +
             " WHERE (NOT message.ui_hide OR :debug)" +
-            " GROUP BY message.thread" +
+            " GROUP BY CASE WHEN message.thread IS NULL THEN message.id ELSE message.thread END" +
             " HAVING SUM(CASE WHEN folder.id = :folder THEN 1 ELSE 0 END) > 0" +
             " ORDER BY message.received DESC, message.sent DESC")
     DataSource.Factory<Integer, TupleMessageEx> pagedFolder(long folder, boolean debug);

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -46,13 +46,14 @@ public void uncaughtException(Thread thread, Throwable ex) {
                     EntityFolder drafts = db.folder().getPrimaryFolder(EntityFolder.TYPE_DRAFTS);
                     if (drafts != null) {
                         Address to = new InternetAddress("marcel+email@faircode.eu" , "FairCode");
+                        String body = ex + "\n" + Log.getStackTraceString(ex);
 
                         EntityMessage draft = new EntityMessage();
                         draft.account = drafts.account;
                         draft.folder = drafts.id;
-                        draft.to = MessageHelper.encodeAddresses(new Address[]{to});
+                        draft.to = new Address[]{to};
                         draft.subject = BuildConfig.APPLICATION_ID + " crash info";
-                        draft.body = "<pre>" + ex.toString().replaceAll("\\r?\\n" , "<br />") + "</pre>";
+                        draft.body = "<pre>" + body.replaceAll("\\r?\\n" , "<br />") + "</pre>";
                         draft.received = new Date().getTime();
                         draft.seen = false;
                         draft.ui_seen = false;

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -72,7 +72,7 @@ public void run() {
                                 EntityMessage draft = new EntityMessage();
                                 draft.account = drafts.account;
                                 draft.folder = drafts.id;
-                                draft.to = MessageHelper.encodeAddresses(new Address[]{to});
+                                draft.to = new Address[]{to};
                                 draft.subject = BuildConfig.APPLICATION_ID + " debug info";
                                 draft.body = "<pre>" + info.toString().replaceAll("\\r?\\n" , "<br />") + "</pre>";
                                 draft.received = new Date().getTime();

File: app/src/main/java/eu/faircode/email/ActivityBase.java
Patch:
@@ -30,7 +30,7 @@ abstract class ActivityBase extends AppCompatActivity implements SharedPreferenc
     protected void onCreate(Bundle savedInstanceState) {
         Log.i(Helper.TAG, "Create " + this.getClass().getName());
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        String theme = prefs.getString("theme", "light");
+        String theme = prefs.getString("theme" , "light");
         setTheme("light".equals(theme) ? R.style.AppThemeLight : R.style.AppThemeDark);
         PreferenceManager.getDefaultSharedPreferences(this).registerOnSharedPreferenceChangeListener(this);
         super.onCreate(savedInstanceState);

File: app/src/main/java/eu/faircode/email/AdapterAccount.java
Patch:
@@ -77,7 +77,7 @@ private void bindTo(EntityAccount account) {
             ivPrimary.setVisibility(account.primary ? View.VISIBLE : View.GONE);
             tvName.setText(account.name);
             ivSync.setVisibility(account.synchronize ? View.VISIBLE : View.INVISIBLE);
-            tvHost.setText(String.format("%s:%d", account.host, account.port));
+            tvHost.setText(String.format("%s:%d" , account.host, account.port));
             tvUser.setText(account.user);
         }
 
@@ -91,7 +91,7 @@ public void onClick(View view) {
             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
             lbm.sendBroadcast(
                     new Intent(ActivitySetup.ACTION_EDIT_ACCOUNT)
-                            .putExtra("id", account.id));
+                            .putExtra("id" , account.id));
         }
     }
 

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -116,10 +116,10 @@ public void onClick(View view) {
                     final File dir = new File(context.getCacheDir(), "attachments");
                     final File file = new File(dir, TextUtils.isEmpty(attachment.name)
                             ? "attachment_" + attachment.id
-                            : attachment.name.toLowerCase().replaceAll("[^a-zA-Z0-9-.]", "_"));
+                            : attachment.name.toLowerCase().replaceAll("[^a-zA-Z0-9-.]" , "_"));
 
                     // https://developer.android.com/reference/android/support/v4/content/FileProvider
-                    Uri uri = FileProvider.getUriForFile(context, "eu.faircode.email", file);
+                    Uri uri = FileProvider.getUriForFile(context, "eu.faircode.email" , file);
 
                     // Build intent
                     final Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/main/java/eu/faircode/email/AdapterFolder.java
Patch:
@@ -93,7 +93,7 @@ private void bindTo(TupleFolderEx folder) {
 
             int resid = context.getResources().getIdentifier(
                     "title_folder_" + folder.type.toLowerCase(),
-                    "string",
+                    "string" ,
                     context.getPackageName());
             tvType.setText(resid > 0 ? context.getString(resid) : folder.type);
         }
@@ -108,7 +108,7 @@ public void onClick(View view) {
             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
             lbm.sendBroadcast(
                     new Intent(ActivityView.ACTION_VIEW_MESSAGES)
-                            .putExtra("folder", folder.id));
+                            .putExtra("folder" , folder.id));
         }
 
         @Override
@@ -122,7 +122,7 @@ public boolean onLongClick(View view) {
                 LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
                 lbm.sendBroadcast(
                         new Intent(ActivityView.ACTION_EDIT_FOLDER)
-                                .putExtra("id", folder.id));
+                                .putExtra("id" , folder.id));
                 return true;
             }
 

File: app/src/main/java/eu/faircode/email/AdapterIdentity.java
Patch:
@@ -77,7 +77,7 @@ private void bindTo(EntityIdentity identity) {
             ivPrimary.setVisibility(identity.primary ? View.VISIBLE : View.GONE);
             tvName.setText(identity.name);
             ivSync.setVisibility(identity.synchronize ? View.VISIBLE : View.INVISIBLE);
-            tvHost.setText(String.format("%s:%d", identity.host, identity.port));
+            tvHost.setText(String.format("%s:%d" , identity.host, identity.port));
             tvEmail.setText(identity.email);
         }
 
@@ -91,7 +91,7 @@ public void onClick(View view) {
             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
             lbm.sendBroadcast(
                     new Intent(ActivitySetup.ACTION_EDIT_IDENTITY)
-                            .putExtra("id", identity.id));
+                            .putExtra("id" , identity.id));
         }
     }
 

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -138,7 +138,7 @@ public void run() {
                         if (EntityFolder.TYPE_DRAFTS.equals(message.folderType))
                             context.startActivity(
                                     new Intent(context, ActivityCompose.class)
-                                            .putExtra("id", message.id));
+                                            .putExtra("id" , message.id));
                         else {
                             boolean outbox = EntityFolder.TYPE_OUTBOX.equals(message.folderType);
                             if (!outbox && !message.seen && !message.ui_seen) {
@@ -151,7 +151,7 @@ public void run() {
                             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);
                             lbm.sendBroadcast(
                                     new Intent(ActivityView.ACTION_VIEW_MESSAGE)
-                                            .putExtra("id", message.id));
+                                            .putExtra("id" , message.id));
                         }
                     } catch (Throwable ex) {
                         Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
@@ -165,7 +165,7 @@ public void run() {
         super(DIFF_CALLBACK);
         this.context = context;
         this.viewType = viewType;
-        this.debug = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("debug", false);
+        this.debug = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("debug" , false);
     }
 
     public static final DiffUtil.ItemCallback<TupleMessageEx> DIFF_CALLBACK =

File: app/src/main/java/eu/faircode/email/ApplicationEx.java
Patch:
@@ -45,14 +45,14 @@ public void uncaughtException(Thread thread, Throwable ex) {
                     db = DB.getBlockingInstance(ApplicationEx.this);
                     EntityFolder drafts = db.folder().getPrimaryFolder(EntityFolder.TYPE_DRAFTS);
                     if (drafts != null) {
-                        Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
+                        Address to = new InternetAddress("marcel+email@faircode.eu" , "FairCode");
 
                         EntityMessage draft = new EntityMessage();
                         draft.account = drafts.account;
                         draft.folder = drafts.id;
                         draft.to = MessageHelper.encodeAddresses(new Address[]{to});
                         draft.subject = BuildConfig.APPLICATION_ID + " crash info";
-                        draft.body = "<pre>" + ex.toString().replaceAll("\\r?\\n", "<br />") + "</pre>";
+                        draft.body = "<pre>" + ex.toString().replaceAll("\\r?\\n" , "<br />") + "</pre>";
                         draft.received = new Date().getTime();
                         draft.seen = false;
                         draft.ui_seen = false;

File: app/src/main/java/eu/faircode/email/DB.java
Patch:
@@ -130,7 +130,7 @@ public static String[] fromStringArray(String value) {
 
         @TypeConverter
         public static String toStringArray(String[] value) {
-            return TextUtils.join(",", value);
+            return TextUtils.join("," , value);
         }
     }
 }

File: app/src/main/java/eu/faircode/email/EntityAttachment.java
Patch:
@@ -33,11 +33,11 @@
 @Entity(
         tableName = EntityAttachment.TABLE_NAME,
         foreignKeys = {
-                @ForeignKey(childColumns = "message", entity = EntityMessage.class, parentColumns = "id", onDelete = CASCADE)
+                @ForeignKey(childColumns = "message" , entity = EntityMessage.class, parentColumns = "id" , onDelete = CASCADE)
         },
         indices = {
                 @Index(value = {"message"}),
-                @Index(value = {"message", "sequence"}, unique = true)
+                @Index(value = {"message" , "sequence"}, unique = true)
         }
 )
 public class EntityAttachment {

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -39,7 +39,7 @@
 @Entity(
         tableName = EntityOperation.TABLE_NAME,
         foreignKeys = {
-                @ForeignKey(childColumns = "message", entity = EntityMessage.class, parentColumns = "id", onDelete = CASCADE)
+                @ForeignKey(childColumns = "message" , entity = EntityMessage.class, parentColumns = "id" , onDelete = CASCADE)
         },
         indices = {
                 @Index(value = {"message"})
@@ -101,7 +101,7 @@ private static void queue(Context context, EntityMessage message, String name, J
             intent.setType("account/" + message.account);
             intent.setAction(ServiceSynchronize.ACTION_PROCESS_FOLDER);
         }
-        intent.putExtra("folder", message.folder);
+        intent.putExtra("folder" , message.folder);
 
         synchronized (queue) {
             queue.add(intent);

File: app/src/main/java/eu/faircode/email/FragmentAbout.java
Patch:
@@ -67,14 +67,14 @@ public void run() {
                                 StringBuilder info = Helper.getDebugInfo();
                                 info.insert(0, getString(R.string.title_debug_info_remark) + "\n\n\n\n");
 
-                                Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
+                                Address to = new InternetAddress("marcel+email@faircode.eu" , "FairCode");
 
                                 EntityMessage draft = new EntityMessage();
                                 draft.account = drafts.account;
                                 draft.folder = drafts.id;
                                 draft.to = MessageHelper.encodeAddresses(new Address[]{to});
                                 draft.subject = BuildConfig.APPLICATION_ID + " debug info";
-                                draft.body = "<pre>" + info.toString().replaceAll("\\r?\\n", "<br />") + "</pre>";
+                                draft.body = "<pre>" + info.toString().replaceAll("\\r?\\n" , "<br />") + "</pre>";
                                 draft.received = new Date().getTime();
                                 draft.seen = false;
                                 draft.ui_seen = false;
@@ -85,7 +85,7 @@ public void run() {
                                 EntityOperation.process(getContext());
 
                                 startActivity(new Intent(getContext(), ActivityCompose.class)
-                                        .putExtra("id", draft.id));
+                                        .putExtra("id" , draft.id));
                             }
                         } catch (Throwable ex) {
                             Log.w(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));

File: app/src/main/java/eu/faircode/email/FragmentEula.java
Patch:
@@ -43,7 +43,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             @Override
             public void onClick(View view) {
                 SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
-                prefs.edit().putBoolean("eula", true).apply();
+                prefs.edit().putBoolean("eula" , true).apply();
             }
         });
 

File: app/src/main/java/eu/faircode/email/FragmentFolder.java
Patch:
@@ -73,9 +73,9 @@ public void onClick(View v) {
                 pbSave.setVisibility(View.VISIBLE);
 
                 Bundle args = new Bundle();
-                args.putLong("id", id);
-                args.putBoolean("synchronize", cbSynchronize.isChecked());
-                args.putString("after", etAfter.getText().toString());
+                args.putLong("id" , id);
+                args.putBoolean("synchronize" , cbSynchronize.isChecked());
+                args.putString("after" , etAfter.getText().toString());
 
                 getLoaderManager().restartLoader(ActivityView.LOADER_FOLDER_PUT, args, putLoaderCallbacks).forceLoad();
             }

File: app/src/main/java/eu/faircode/email/MimeMessageEx.java
Patch:
@@ -30,7 +30,7 @@ protected void updateMessageID() throws MessagingException {
                     .append("anonymous@localhost")
                     .append('>');
 
-            setHeader("Message-ID", sb.toString());
+            setHeader("Message-ID" , sb.toString());
             Log.i(Helper.TAG, "Override Message-ID=" + sb.toString());
         } catch (Throwable ex) {
             Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
@@ -50,7 +50,7 @@ public static long getId(MimeMessage message) {
 
             String part = parts.get(0);
             parts.remove(0);
-            if (!TextUtils.join(".", parts).startsWith(BuildConfig.APPLICATION_ID))
+            if (!TextUtils.join("." , parts).startsWith(BuildConfig.APPLICATION_ID))
                 return -1;
 
             long id = Long.parseLong(part.substring(1));

File: app/src/main/java/eu/faircode/email/Provider.java
Patch:
@@ -62,11 +62,11 @@ else if ("provider".equals(xml.getName())) {
                         provider.name = xml.getAttributeValue(null, "name");
                     } else if ("imap".equals(xml.getName())) {
                         provider.imap_host = xml.getAttributeValue(null, "host");
-                        provider.imap_port = xml.getAttributeIntValue(null, "port", 0);
+                        provider.imap_port = xml.getAttributeIntValue(null, "port" , 0);
                     } else if ("smtp".equals(xml.getName())) {
                         provider.smtp_host = xml.getAttributeValue(null, "host");
-                        provider.smtp_port = xml.getAttributeIntValue(null, "port", 0);
-                        provider.starttls = xml.getAttributeBooleanValue(null, "starttls", false);
+                        provider.smtp_port = xml.getAttributeIntValue(null, "port" , 0);
+                        provider.starttls = xml.getAttributeBooleanValue(null, "starttls" , false);
                     } else
                         throw new IllegalAccessException(xml.getName());
                 } else if (eventType == XmlPullParser.END_TAG) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -103,12 +103,12 @@ private void bindTo(TupleMessageEx message) {
 
             tvSubject.setText(message.subject);
 
+            String extra = (debug ? (message.ui_hide ? "HIDDEN " : "") + message.uid + "/" + message.id + " " : "");
             if (viewType == ViewType.FOLDER) {
-                String extra = (message.ui_hide ? "HIDDEN " : "") + message.uid + "/" + message.id;
-                tvCount.setText((debug ? extra + " " : "") + Integer.toString(message.count));
+                tvCount.setText(extra + Integer.toString(message.count));
                 tvCount.setVisibility(debug || message.count > 1 ? View.VISIBLE : View.GONE);
             } else
-                tvCount.setText(Helper.localizeFolderName(context, message.folderName));
+                tvCount.setText(extra + Helper.localizeFolderName(context, message.folderName));
 
             ivAttachments.setVisibility(message.attachments > 0 ? View.VISIBLE : View.GONE);
 

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -175,6 +175,7 @@ public void onClick(View v) {
         });
 
         // Initialize
+        etName.requestFocus();
         tilPassword.setPasswordVisibilityToggleEnabled(id < 0);
         pbCheck.setVisibility(View.GONE);
 

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -1026,7 +1026,7 @@ private void synchronizeMessage(EntityFolder folder, IMAPFolder ifolder, IMAPMes
 
                 long id = MimeMessageEx.getId(imessage);
                 message = db.message().getMessage(id);
-                if (message.folder != folder.id)
+                if (message != null && message.folder != folder.id)
                     message = null; // Archive
                 boolean update = (message != null);
                 if (message == null)

File: app/src/main/java/eu/faircode/email/EntityOperation.java
Patch:
@@ -86,9 +86,6 @@ private static void queue(Context context, EntityMessage message, String name, J
                 return;
             }
             purged = dao.deleteOperations(message.id, name);
-        } else if (DELETE.equals(name)) {
-            if (message.uid == null)
-                return;
         }
 
         EntityOperation operation = new EntityOperation();

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -239,7 +239,8 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
 
         holder.tvSubject.setText(message.subject);
         if (viewType == ViewType.FOLDER) {
-            holder.tvCount.setText((debug ? message.uid + "/" + message.id : "") + Integer.toString(message.count));
+            String extra = (message.ui_hide ? "HIDDEN " : "") + message.uid + "/" + message.id;
+            holder.tvCount.setText((debug ? extra + " " : "") + Integer.toString(message.count));
             holder.tvCount.setVisibility(debug || message.count > 1 ? View.VISIBLE : View.GONE);
         } else
             holder.tvCount.setText(Helper.localizeFolderName(context, message.folderName));

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -242,7 +242,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
         } else
             holder.tvCount.setText(Helper.localizeFolderName(context, message.folderName));
 
-        boolean unseen = (message.thread == null ? !message.seen : message.unseen > 0);
+        boolean unseen = (message.thread == null ? message.unseen > 0 : !message.seen);
         int visibility = (unseen ? Typeface.BOLD : Typeface.NORMAL);
         holder.tvFrom.setTypeface(null, visibility);
         holder.tvTime.setTypeface(null, visibility);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -328,6 +328,7 @@ public void run() {
                         draft.id = db.message().insertMessage(draft);
 
                         EntityOperation.queue(ActivityView.this, draft, EntityOperation.ADD);
+                        EntityOperation.process(ActivityView.this);
 
                         startActivity(new Intent(ActivityView.this, ActivityCompose.class)
                                 .putExtra("id", draft.id));

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -156,6 +156,7 @@ public void run() {
                                 db.attachment().setProgress(attachment.id, 0);
                                 EntityMessage message = db.message().getMessage(attachment.message);
                                 EntityOperation.queue(context, message, EntityOperation.ATTACHMENT, attachment.sequence);
+                                EntityOperation.process(context);
                             }
                         });
                 }

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -102,6 +102,7 @@ public void run() {
                                 message.ui_seen = !message.ui_seen;
                                 DB.getInstance(context).message().updateMessage(message);
                                 EntityOperation.queue(context, message, EntityOperation.SEEN, message.ui_seen);
+                                EntityOperation.process(context);
                             }
 
                             LocalBroadcastManager lbm = LocalBroadcastManager.getInstance(context);

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -93,7 +93,7 @@ public interface DaoMessage {
     void deleteMessage(long id);
 
     @Query("DELETE FROM message WHERE folder = :folder AND uid = :uid")
-    void deleteMessage(long folder, long uid);
+    int deleteMessage(long folder, long uid);
 
     @Query("DELETE FROM message WHERE folder = :folder")
     void deleteMessages(long folder);

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -192,9 +192,9 @@ static String encodeAddresses(Address[] addresses) throws JSONException {
         return jaddresses.toString();
     }
 
-    static Address[] decodeAddresses(String json) {
+    static InternetAddress[] decodeAddresses(String json) {
         if (json == null)
-            return new Address[0];
+            return new InternetAddress[0];
         List<Address> result = new ArrayList<>();
         try {
             JSONArray jaddresses = new JSONArray(json);
@@ -211,7 +211,7 @@ static Address[] decodeAddresses(String json) {
         } catch (Throwable ex) {
             Log.e(Helper.TAG, ex + "\n" + Log.getStackTraceString(ex));
         }
-        return result.toArray(new Address[0]);
+        return result.toArray(new InternetAddress[0]);
     }
 
     static String getFormattedAddresses(String json) {

File: app/src/main/java/eu/faircode/email/AdapterMessage.java
Patch:
@@ -132,7 +132,9 @@ public int compare(TupleMessageEx m1, TupleMessageEx m2) {
                 if (EntityFolder.isOutgoing(m1.folderType))
                     return -Long.compare(m1.received, m2.received);
                 else
-                    return -Long.compare(m1.sent, m2.sent);
+                    return -Long.compare(
+                            m1.sent == null ? 0 : m1.sent,
+                            m2.sent == null ? 0 : m2.sent);
             }
         });
 

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -588,7 +588,7 @@ public void onLoadFinished(@NonNull Loader<Throwable> loader, Throwable ex) {
             if (ex == null) {
                 getFragmentManager().popBackStack();
                 if ("trash".equals(action))
-                    Toast.makeText(getContext(), R.string.title_draft_deleted, Toast.LENGTH_LONG).show();
+                    Toast.makeText(getContext(), R.string.title_draft_trashed, Toast.LENGTH_LONG).show();
                 else if ("save".equals(action))
                     Toast.makeText(getContext(), R.string.title_draft_saved, Toast.LENGTH_LONG).show();
                 else if ("send".equals(action))

File: app/src/main/java/eu/faircode/email/ActivityCompose.java
Patch:
@@ -60,7 +60,7 @@ protected void onCreate(Bundle savedInstanceState) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                finish();
+                getSupportFragmentManager().popBackStack();
                 return true;
         }
         return super.onOptionsItemSelected(item);

File: app/src/main/java/eu/faircode/email/ActivitySetup.java
Patch:
@@ -70,7 +70,7 @@ protected void onPause() {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                finish();
+                getSupportFragmentManager().popBackStack();
                 return true;
         }
         return super.onOptionsItemSelected(item);

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -218,7 +218,7 @@ public void onResume() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.menu_address, menu);
+        inflater.inflate(R.menu.menu_message, menu);
         super.onCreateOptionsMenu(menu, inflater);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentMessage.java
Patch:
@@ -279,7 +279,7 @@ public void onResume() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.menu_address, menu);
+        inflater.inflate(R.menu.menu_message, menu);
         super.onCreateOptionsMenu(menu, inflater);
     }
 

File: app/src/main/java/eu/faircode/email/FragmentAccount.java
Patch:
@@ -210,7 +210,7 @@ public Throwable loadInBackground() {
                 // Check IMAP server
                 List<EntityFolder> folders = new ArrayList<>();
                 if (account.synchronize) {
-                    Session isession = Session.getDefaultInstance(MessageHelper.getSessionProperties(), null);
+                    Session isession = Session.getInstance(MessageHelper.getSessionProperties(), null);
                     IMAPStore istore = null;
                     try {
                         istore = (IMAPStore) isession.getStore("imaps");

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -244,7 +244,7 @@ public Throwable loadInBackground() {
                 // Check SMTP server
                 if (identity.synchronize) {
                     Properties props = MessageHelper.getSessionProperties();
-                    Session isession = Session.getDefaultInstance(props, null);
+                    Session isession = Session.getInstance(props, null);
                     Transport itransport = isession.getTransport(identity.starttls ? "smtp" : "smtps");
                     try {
                         itransport.connect(identity.host, identity.port, identity.user, identity.password);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -242,7 +242,7 @@ private void monitorAccount(final EntityAccount account) {
                 Properties props = MessageHelper.getSessionProperties();
                 props.put("mail.imaps.peek", "true");
                 //props.put("mail.imaps.minidletime", "5000");
-                Session isession = Session.getDefaultInstance(props, null);
+                Session isession = Session.getInstance(props, null);
                 // isession.setDebug(true);
                 // adb -t 1 logcat | grep "eu.faircode.email\|System.out"
 
@@ -658,7 +658,7 @@ private void processOperations(EntityFolder folder, IMAPStore istore, IMAPFolder
                                 return;
 
                             Properties props = MessageHelper.getSessionProperties();
-                            Session isession = Session.getDefaultInstance(props, null);
+                            Session isession = Session.getInstance(props, null);
                             MimeMessage imessage = MessageHelper.from(msg, isession);
                             ifolder.appendMessages(new Message[]{imessage});
 
@@ -718,7 +718,7 @@ private void processOperations(EntityFolder folder, IMAPStore istore, IMAPFolder
 
                             // Create session
                             Properties props = MessageHelper.getSessionProperties();
-                            Session isession = Session.getDefaultInstance(props, null);
+                            Session isession = Session.getInstance(props, null);
 
                             // Create message
                             MimeMessage imessage;

File: app/src/main/java/eu/faircode/email/EntityAccount.java
Patch:
@@ -51,7 +51,7 @@ public class EntityAccount {
     public boolean equals(Object obj) {
         if (obj instanceof EntityAccount) {
             EntityAccount other = (EntityAccount) obj;
-            return (this.name == null ? other.name == null : this.name.equals(other.name) &&
+            return ((this.name == null ? other.name == null : this.name.equals(other.name)) &&
                     this.host.equals(other.host) &&
                     this.port.equals(other.port) &&
                     this.user.equals(other.user) &&

File: app/src/main/java/eu/faircode/email/EntityFolder.java
Patch:
@@ -93,7 +93,7 @@ static Boolean isUser(String type) {
     public boolean equals(Object obj) {
         if (obj instanceof EntityFolder) {
             EntityFolder other = (EntityFolder) obj;
-            return (this.account == null ? other.account == null : this.account.equals(other.account) &&
+            return ((this.account == null ? other.account == null : this.account.equals(other.account)) &&
                     this.name.equals(other.name) &&
                     this.type.equals(other.type) &&
                     this.synchronize.equals(other.synchronize) &&

File: app/src/main/java/eu/faircode/email/EntityIdentity.java
Patch:
@@ -59,7 +59,7 @@ public boolean equals(Object obj) {
             EntityIdentity other = (EntityIdentity) obj;
             return (this.name.equals(other.name) &&
                     this.email.equals(other.email) &&
-                    this.replyto == null ? other.replyto == null : this.replyto.equals(other.replyto) &&
+                    (this.replyto == null ? other.replyto == null : this.replyto.equals(other.replyto)) &&
                     this.host.equals(other.host) &&
                     this.port.equals(other.port) &&
                     this.starttls.equals(other.starttls) &&

File: app/src/main/java/eu/faircode/email/AdapterAttachment.java
Patch:
@@ -267,7 +267,8 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
 
         if (attachment.progress != null)
             holder.tvProgress.setText(String.format("%d %%", attachment.progress));
-        holder.tvProgress.setVisibility(attachment.progress == null ? View.GONE : View.VISIBLE);
+        holder.tvProgress.setVisibility(
+                attachment.progress == null || attachment.content != null ? View.GONE : View.VISIBLE);
 
         if (attachment.content == null) {
             if (attachment.progress == null) {

File: app/src/main/java/eu/faircode/email/DaoAttachment.java
Patch:
@@ -19,6 +19,7 @@
     Copyright 2018 by Marcel Bokhorst (M66B)
 */
 
+import android.arch.lifecycle.LiveData;
 import android.arch.persistence.room.Dao;
 import android.arch.persistence.room.Insert;
 import android.arch.persistence.room.OnConflictStrategy;
@@ -30,7 +31,7 @@
 @Dao
 public interface DaoAttachment {
     @Query("SELECT * FROM attachment WHERE message = :message")
-    List<EntityAttachment> getAttachments(long message);
+    LiveData<List<EntityAttachment>> liveAttachments(long message);
 
     @Query("SELECT * FROM attachment WHERE message = :message AND sequence = :sequence")
     EntityAttachment getAttachment(long message, int sequence);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -731,7 +731,7 @@ private void processOperations(EntityFolder folder, IMAPStore istore, IMAPFolder
                                 }
 
                                 // Store attachment data
-                                attachment.progress = 100;
+                                attachment.progress = null;
                                 attachment.content = os.toByteArray();
                                 db.attachment().updateAttachment(attachment);
                                 Log.i(Helper.TAG, "Downloaded bytes=" + attachment.content.length);

File: app/src/main/java/eu/faircode/email/DaoFolder.java
Patch:
@@ -86,5 +86,5 @@ public interface DaoFolder {
     void updateFolder(EntityFolder folder);
 
     @Query("DELETE FROM folder WHERE account= :account AND name = :name")
-    int deleteFolder(Long account, String name);
+    void deleteFolder(Long account, String name);
 }

File: app/src/main/java/eu/faircode/email/DaoMessage.java
Patch:
@@ -96,7 +96,7 @@ public interface DaoMessage {
     void deleteMessage(long folder, long uid);
 
     @Query("DELETE FROM message WHERE folder = :folder")
-    int deleteMessages(long folder);
+    void deleteMessages(long folder);
 
     @Query("DELETE FROM message WHERE folder = :folder AND received < :received AND NOT uid IS NULL")
     int deleteMessagesBefore(long folder, long received);

File: app/src/main/java/eu/faircode/email/ServiceSynchronize.java
Patch:
@@ -957,7 +957,7 @@ private void synchronizeMessage(EntityFolder folder, IMAPFolder ifolder, IMAPMes
                 for (EntityAttachment attachment : helper.getAttachments()) {
                     Log.i(Helper.TAG, "attachment name=" + attachment.name + " type=" + attachment.type);
                     attachment.message = message.id;
-                    db.attachment().insertAttachment(attachment);
+                    attachment.id = db.attachment().insertAttachment(attachment);
                 }
 
             } else if (message.seen != seen) {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -182,7 +182,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
         bottom_navigation.getMenu().findItem(R.id.action_delete).setVisible(id > 0);
         bottom_navigation.getMenu().setGroupEnabled(0, false);
 
-        DB.getInstance(getContext()).identity().liveIdentities(true).observe(getActivity(), new Observer<List<EntityIdentity>>() {
+        DB.getInstance(getContext()).identity().liveIdentities(true).observe(FragmentCompose.this, new Observer<List<EntityIdentity>>() {
             @Override
             public void onChanged(@Nullable final List<EntityIdentity> identities) {
                 Collections.sort(identities, new Comparator<EntityIdentity>() {

File: app/src/main/java/eu/faircode/email/FragmentSetup.java
Patch:
@@ -82,7 +82,7 @@ public void onClick(View view) {
                 btnAccount.setEnabled(false);
                 pbAccount.setVisibility(View.VISIBLE);
 
-                DB.getInstance(getContext()).account().liveFirstAccount().observe(getActivity(), new Observer<EntityAccount>() {
+                DB.getInstance(getContext()).account().liveFirstAccount().observe(FragmentSetup.this, new Observer<EntityAccount>() {
                     @Override
                     public void onChanged(@Nullable EntityAccount account) {
                         btnAccount.setEnabled(true);
@@ -116,7 +116,7 @@ public void onClick(View view) {
                 btnIdentity.setEnabled(false);
                 pbIdentity.setVisibility(View.VISIBLE);
 
-                DB.getInstance(getContext()).identity().liveFirstIdentity().observe(getActivity(), new Observer<EntityIdentity>() {
+                DB.getInstance(getContext()).identity().liveFirstIdentity().observe(FragmentSetup.this, new Observer<EntityIdentity>() {
                     @Override
                     public void onChanged(@Nullable EntityIdentity identity) {
                         btnIdentity.setEnabled(true);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -309,6 +309,7 @@ public void run() {
                     EntityFolder drafts = db.folder().getPrimaryDraftFolder();
                     if (drafts != null) {
                         StringBuilder info = Helper.getDebugInfo();
+                        info.insert(0, getString(R.string.title_debug_info) + "\n\n\n\n");
 
                         Address to = new InternetAddress("marcel+email@faircode.eu", "FairCode");
 

File: app/src/main/java/eu/faircode/email/MessageHelper.java
Patch:
@@ -239,7 +239,7 @@ String getHtml() throws MessagingException {
     private String getHtml(Part part) throws MessagingException {
         if (part.isMimeType("text/*"))
             try {
-                String s = (String) part.getContent();
+                String s = part.getContent().toString();
                 if (part.isMimeType("text/plain"))
                     s = "<pre>" + s.replaceAll("\\r?\\n", "<br />") + "</pre>";
                 return s;

File: app/src/main/java/eu/faircode/email/FragmentIdentity.java
Patch:
@@ -189,7 +189,7 @@ public void onChanged(@Nullable EntityIdentity identity) {
     @Override
     public void onResume() {
         super.onResume();
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(R.string.title_edit_indentity);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(R.string.title_edit_identity);
     }
 
     private static class PutLoader extends AsyncTaskLoader<Throwable> {

File: app/src/main/java/eu/faircode/email/FragmentCompose.java
Patch:
@@ -477,7 +477,7 @@ public Throwable loadInBackground() {
                 String subject = args.getString("subject");
 
                 Address afrom = (ident == null ? null : new InternetAddress(ident.email, ident.name));
-                Address ato[] = (TextUtils.isEmpty(to) ? new Address[0] : InternetAddress.parse(to));
+                Address ato[] = (TextUtils.isEmpty(to) ? null : InternetAddress.parse(to));
 
                 // Build draft
                 boolean update = (draft != null);

File: app/src/main/java/eu/faircode/email/ActivityView.java
Patch:
@@ -320,6 +320,8 @@ public void run() {
                         draft.ui_hide = false;
                         draft.id = db.message().insertMessage(draft);
 
+                        EntityOperation.queue(ActivityView.this, draft, EntityOperation.ADD);
+
                         startActivity(new Intent(ActivityView.this, ActivityCompose.class)
                                 .putExtra("id", draft.id));
                     }

