File: server/rdbms/src/main/java/cn/surveyking/server/mapper/RepoMapper.java
Patch:
@@ -28,7 +28,7 @@ public interface RepoMapper extends BaseMapper<Repo> {
 	 * @return
 	 */
 	@Select("SELECT a.question_type, COUNT(*) total FROM t_template a "
-			+ "WHERE a.repo_id = #{repoId} GROUP BY a.question_type")
+			+ "WHERE a.is_deleted = 0 and a.repo_id = #{repoId} GROUP BY a.question_type")
 	List<RepoQuestionTypeTotalView> selectRepoQuestionTypes(String repoId);
 
 }

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/FileUtils.java
Patch:
@@ -11,7 +11,7 @@ public class FileUtils {
 
     public static final String[] ALLOWED_EXTENSIONS = {
             // 图像文件
-            "jpg", "jpeg", "png", "gif", "bmp", "svg",
+            "jpg", "jpeg", "png", "gif", "bmp",
 
             // 文档和文本文件
             "pdf", "txt", "doc", "docx", "ppt", "pptx", "xls", "xlsx", "odt", "ods",

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/UploadFileRequest.java
Patch:
@@ -1,5 +1,6 @@
 package cn.surveyking.server.domain.dto;
 
+import com.fasterxml.jackson.annotation.JsonIgnore;
 import lombok.Data;
 import org.springframework.web.multipart.MultipartFile;
 
@@ -25,5 +26,6 @@ public class UploadFileRequest {
 
 	private String questionId;
 
+	@JsonIgnore
 	public Boolean publicUpload;
 }

File: server/api/src/main/java/cn/surveyking/server/api/SurveyApi.java
Patch:
@@ -87,6 +87,7 @@ public void tempSaveAnswer(@RequestBody AnswerRequest request) {
 	 */
 	@PostMapping("/upload")
 	public FileView upload(UploadFileRequest request) {
+		request.setPublicUpload(true);
 		return fileService.upload(request);
 	}
 

File: server/rdbms/src/main/java/cn/surveyking/server/mapper/RepoMapper.java
Patch:
@@ -28,7 +28,7 @@ public interface RepoMapper extends BaseMapper<Repo> {
 	 * @return
 	 */
 	@Select("SELECT a.question_type, COUNT(*) total FROM t_template a "
-			+ "WHERE a.repo_id = #{repoId} GROUP BY a.question_type")
+			+ "WHERE a.is_deleted = 0 and a.repo_id = #{repoId} GROUP BY a.question_type")
 	List<RepoQuestionTypeTotalView> selectRepoQuestionTypes(String repoId);
 
 }

File: server/rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -137,7 +137,7 @@ else if (questionType == SurveySchema.QuestionType.Signature
 					else if (questionType == SurveySchema.QuestionType.Dept) {
 						view.setDepts(ids
 								.stream().map(id -> deptService.listDept(null).stream()
-										.filter(x -> x.getId().equals(id)).findFirst().get())
+										.filter(x -> x.getId().equals(id)).findFirst().orElseGet(DeptView::new))
 								.collect(Collectors.toList()));
 					}
 				});

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/SchemaHelper.java
Patch:
@@ -216,7 +216,7 @@ else if (questionType == SurveySchema.QuestionType.MatrixAuto) {
 						else if (v != null && v instanceof Boolean) {
 							// 单选、多选题，选中的话，答案会是 true，需要转换成标题
 							matrixRowData.add(trimHtmlTag(schemaType.getChildren().stream()
-									.filter(x -> x.getId().equals(optionId)).findFirst().get().getTitle()));
+									.filter(x -> x.getId().equals(optionId)).findFirst().orElseGet(SurveySchema::new).getTitle()));
 						}
 						else {
 							matrixRowData.add(v + "");
@@ -230,12 +230,12 @@ else if (questionType.name().startsWith("Matrix")) {
 				List<String> result = new ArrayList<>();
 				((Map<?, ?>) valueObj).forEach((optionId, valueMap) -> {
 					String title = trimHtmlTag(schemaType.getRow().stream().filter(x -> x.getId().equals(optionId))
-							.findFirst().get().getTitle());
+							.findFirst().orElseGet(SurveySchema.Row::new).getTitle());
 					List<String> valueList = new ArrayList<>();
 					((LinkedHashMap) valueMap).forEach((childOptId, val) -> {
 						if (val != null && val instanceof Boolean) {
 							valueList.add(trimHtmlTag(schemaType.getChildren().stream()
-									.filter(x -> x.getId().equals(childOptId)).findFirst().get().getTitle()));
+									.filter(x -> x.getId().equals(childOptId)).findFirst().orElseGet(SurveySchema::new).getTitle()));
 						}
 						else {
 							valueList.add(val + "");

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/SchemaHelper.java
Patch:
@@ -113,6 +113,9 @@ public static List<Object> parseRowData(AnswerView answerInfo, List<SurveySchema
 					|| questionType == SurveySchema.QuestionType.Signature) {
 				Map mapValue = (Map) valueObj;
 				rowData.add(mapValue.values().stream().map((x) -> {
+					if(x instanceof String) {
+						return x;
+					}
 					List<String> fileIds = (List<String>) x;
 					return fileIds.stream()
 							.map(id -> answerInfo.getAttachment().stream()

File: server/rdbms/src/main/java/cn/surveyking/server/domain/mapper/ProjectViewMapper.java
Patch:
@@ -54,7 +54,8 @@ default void trimExamAnswerInfo(SurveySchema schema) {
 		if (schema.getAttribute() == null) {
 			schema.setAttribute(SurveySchema.Attribute.builder().build());
 		}
-		SchemaHelper.ignoreAttributes(schema, "examAnswerMode", "examCorrectAnswer", "examScore", "examMatchRule");
+		// examAnswerMode 不能去除，前端要用于区分计分题和信息题
+		SchemaHelper.ignoreAttributes(schema, "examCorrectAnswer", "examScore", "examMatchRule");
 	}
 
 	default void randomSchemaOrder(SurveySchema schema) {

File: server/rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -179,7 +179,8 @@ else if (query.getProjectId() != null && Boolean.TRUE.equals(query.getLatest()))
 		// 获取考试排名信息
 		if (query.isRankEnabled()) {
 			List<Double> scores = list(Wrappers.<Answer>lambdaQuery().select(Answer::getExamScore, Answer::getId)
-					.eq(Answer::getProjectId, answerView.getProjectId())).stream().map(x -> x.getExamScore())
+					.eq(Answer::getProjectId, answerView.getProjectId())).stream()
+							.map(x -> Optional.ofNullable(x.getExamScore()).orElse(Double.valueOf(0)))
 							.collect(Collectors.toList());
 			Collections.sort(scores, Collections.reverseOrder());
 			answerView.setRank(scores.indexOf(answerView.getExamScore()) + 1);

File: server/rdbms/src/main/java/cn/surveyking/server/impl/ProjectPartnerServiceImpl.java
Patch:
@@ -131,6 +131,8 @@ public void addProjectPartner(ProjectPartnerRequest request) {
 	public void deleteProjectPartner(ProjectPartnerRequest request) {
 		remove(Wrappers.<ProjectPartner>lambdaUpdate()
 				.in(CollectionUtils.isNotEmpty(request.getIds()), ProjectPartner::getId, request.getIds())
+				.in(CollectionUtils.isNotEmpty(request.getProjectIds()), ProjectPartner::getProjectId,
+						request.getProjectIds())
 				.eq(request.getProjectId() != null, ProjectPartner::getProjectId, request.getProjectId()));
 	}
 

File: server/rdbms/src/main/java/cn/surveyking/server/mapper/ProjectMapper.java
Patch:
@@ -15,9 +15,9 @@
  */
 public interface ProjectMapper extends BaseMapper<Project> {
 
-	@Select("select * from t_project where is_deleted = 1")
+	@Select("select * from t_project where is_deleted = 1 and create_by = #{userId}")
 	@ResultMap("mybatis-plus_Project")
-	List<Project> selectLogicDeleted();
+	List<Project> selectLogicDeleted(String userId);
 
 	@Delete({ "<script>", "delete", "FROM t_project", "WHERE id IN",
 			"<foreach item='item' index='index' collection='ids'", "open='(' separator=',' close=')'>", "#{item}",

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/ProjectPartnerRequest.java
Patch:
@@ -24,4 +24,6 @@ public class ProjectPartnerRequest {
 
 	private MultipartFile file;
 
+	private List<String> projectIds;
+
 }

File: server/rdbms/src/main/java/cn/surveyking/server/impl/SurveyServiceImpl.java
Patch:
@@ -30,6 +30,7 @@
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
+import org.springframework.util.CollectionUtils;
 import org.springframework.web.util.WebUtils;
 
 import javax.servlet.http.Cookie;
@@ -1183,7 +1184,7 @@ private void replaceSchemaIfRandomSchema(ProjectView project, PublicProjectView
 		// 从题库里面挑题
 		List<SurveySchema> questionSchemaList = repoService.pickQuestionFromRepo(randomSurveyCondition);
 		// 最终的试卷=编辑器的问题+题库挑的题
-		if (project.getSurvey() != null) {
+		if (project.getSurvey() != null && !CollectionUtils.isEmpty(project.getSurvey().getChildren())) {
 			questionSchemaList = Stream.concat(project.getSurvey().getChildren().stream(), questionSchemaList.stream())
 					.collect(Collectors.toList());
 		}

File: server/rdbms/src/main/java/cn/surveyking/server/impl/RepoServiceImpl.java
Patch:
@@ -52,7 +52,8 @@ public class RepoServiceImpl extends BaseService<RepoMapper, Repo> implements Re
 	public PaginationResponse<RepoView> listRepo(RepoQuery query) {
 		Page<Repo> page = pageByQuery(query,
 				Wrappers.<Repo>lambdaQuery().like(isNotBlank(query.getName()), Repo::getName, query.getName())
-						.eq(Repo::getCreateBy, SecurityContextUtils.getUserId())
+						.and(x -> x.eq(Repo::getCreateBy, SecurityContextUtils.getUserId())
+								.or(y -> y.eq(Repo::getShared, true)))
 						.eq(query.getMode() != null, Repo::getMode, query.getMode()).orderByAsc(Repo::getCreateAt));
 		PaginationResponse<RepoView> result = new PaginationResponse<>(page.getTotal(),
 				repoViewMapper.toView(page.getRecords()));

File: server/rdbms/src/main/java/cn/surveyking/server/impl/UserServiceImpl.java
Patch:
@@ -500,7 +500,7 @@ public PaginationResponse<MyTaskView> queryTask(MyTaskQuery query) {
 				Wrappers.<ProjectPartner>lambdaQuery().eq(ProjectPartner::getUserId, SecurityContextUtils.getUserId())
 						.eq(ProjectPartner::getType, ProjectPartnerTypeEnum.RESPONDENT_SYS_USER.getType())
 						.exists(String.format(
-								"SELECT 1 FROM t_project t WHERE t.mode = '%s' AND t.id = t_project_partner.project_id",
+								"SELECT 1 FROM t_project t WHERE t.mode = '%s' AND t.id = t_project_partner.project_id And t.is_deleted = 0",
 								query.getType()))
 						.orderByAsc(ProjectPartner::getStatus).orderByDesc(ProjectPartner::getCreateAt));
 		PaginationResponse<MyTaskView> result = new PaginationResponse<>(page.getTotal(),

File: server/rdbms/src/main/java/cn/surveyking/server/impl/UserServiceImpl.java
Patch:
@@ -491,7 +491,7 @@ public PaginationResponse<MyTaskView> queryTask(MyTaskQuery query) {
 				Wrappers.<ProjectPartner>lambdaQuery().eq(ProjectPartner::getUserId, SecurityContextUtils.getUserId())
 						.eq(ProjectPartner::getType, ProjectPartnerTypeEnum.RESPONDENT_SYS_USER.getType())
 						.exists(String.format(
-								"SELECT 1 FROM t_project t WHERE t.mode = '%s' AND t.id = t_project_partner.project_id",
+								"SELECT 1 FROM t_project t WHERE t.mode = '%s' AND t.id = t_project_partner.project_id And t.is_deleted = 0",
 								query.getType()))
 						.orderByAsc(ProjectPartner::getStatus).orderByDesc(ProjectPartner::getCreateAt));
 		PaginationResponse<MyTaskView> result = new PaginationResponse<>(page.getTotal(),

File: server/rdbms/src/main/java/cn/surveyking/server/impl/UserServiceImpl.java
Patch:
@@ -506,9 +506,6 @@ private void checkResisterValid(RegisterRequest request) {
 			throw new ErrorCodeException(ErrorCode.RegisterError);
 		}
 		String role = request.getRole();
-		if (CollectionUtils.isEmpty(registerInfo.getRoles()) && isNotBlank(role)) {
-			throw new ErrorCodeException(ErrorCode.RegisterError);
-		}
 		if (CollectionUtils.isEmpty(registerInfo.getRoles()) && isBlank(role)) {
 			return;
 		}

File: server/shared/src/main/java/cn/surveyking/server/core/constant/ErrorCode.java
Patch:
@@ -8,6 +8,8 @@ public enum ErrorCode {
 
 	/** 账号或者密码错误 */
 	UsernameOrPasswordError(1024, "账号或者密码错误"),
+	/** 注册失败 */
+	RegisterError(1401, "注册失败"),
 	/** 账号已存在 */
 	UsernameExists(1025, "账号已存在"),
 	/** 暂停回收 */

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/SystemInfo.java
Patch:
@@ -2,6 +2,7 @@
 
 import lombok.Data;
 
+import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -54,7 +55,7 @@ public static class RegisterInfo {
 		/**
 		 * 注册用户可选角色列表
 		 */
-		private List<String> roles;
+		private List<String> roles = new ArrayList<>();
 
 		/**
 		 * 开启强密码验证

File: server/rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -183,7 +183,7 @@ else if (query.getProjectId() != null && Boolean.TRUE.equals(query.getLatest()))
 			List<Double> scores = list(Wrappers.<Answer>lambdaQuery().select(Answer::getExamScore, Answer::getId)
 					.eq(Answer::getProjectId, answerView.getProjectId())).stream().map(x -> x.getExamScore())
 							.collect(Collectors.toList());
-			Collections.sort(scores);
+			Collections.sort(scores, Collections.reverseOrder());
 			answerView.setRank(scores.indexOf(answerView.getExamScore()) + 1);
 		}
 		String projectId = answerView.getProjectId();

File: server/rdbms/src/main/java/cn/surveyking/server/impl/TemplateServiceImpl.java
Patch:
@@ -40,8 +40,7 @@ public PaginationResponse<TemplateView> listTemplate(TemplateQuery query) {
 				.like(isNotEmpty(query.getName()), Template::getName, query.getName())
 				.eq(query.getQuestionType() != null, Template::getQuestionType, query.getQuestionType())
 				// 默认查询额是普通题型
-				// .ne(query.getQuestionType() != null, Template::getQuestionType,
-				// query.getQuestionType())
+				.ne(query.getQuestionType() == null, Template::getQuestionType, SurveySchema.QuestionType.Survey)
 				.in(query.getCategories().size() > 0, Template::getCategory, query.getCategories())
 				.eq(query.getRepoId() != null, Template::getRepoId, query.getRepoId())
 				.eq(query.getMode() != null, Template::getMode, query.getMode())
@@ -51,6 +50,7 @@ public PaginationResponse<TemplateView> listTemplate(TemplateQuery query) {
 				.eq(query.getShared() != null, Template::getShared, query.getShared())
 				.eq(query.getShared() != null && query.getShared() == 0, Template::getCreateBy,
 						SecurityContextUtils.getUserId())
+				.eq(query.getShared() == null, Template::getCreateBy, SecurityContextUtils.getUserId())
 				.orderByAsc(Template::getPriority));
 		return new PaginationResponse<>(templatePage.getTotal(),
 				templatePage.getRecords().stream().map(x -> templateViewMapper.toView(x)).collect(Collectors.toList()));

File: server/api/src/main/java/cn/surveyking/server/api/TemplateApi.java
Patch:
@@ -42,7 +42,7 @@ public void updateTemplate(@RequestBody TemplateRequest template) {
 
 	@PostMapping("/delete")
 	@PreAuthorize("hasAuthority('template:delete')")
-	public void deleteTemplate(TemplateRequest request) {
+	public void deleteTemplate(@RequestBody TemplateRequest request) {
 		templateService.deleteTemplate(request);
 	}
 

File: server/rdbms/src/main/java/cn/surveyking/server/impl/RepoServiceImpl.java
Patch:
@@ -49,7 +49,7 @@ public class RepoServiceImpl extends BaseService<RepoMapper, Repo> implements Re
 	public PaginationResponse<RepoView> listRepo(RepoQuery query) {
 		Page<Repo> page = pageByQuery(query,
 				Wrappers.<Repo>lambdaQuery().like(isNotBlank(query.getName()), Repo::getName, query.getName())
-						.eq(Repo::getCreateAt, SecurityContextUtils.getUserId())
+						.eq(Repo::getCreateBy, SecurityContextUtils.getUserId())
 						.eq(query.getMode() != null, Repo::getMode, query.getMode()).orderByAsc(Repo::getCreateAt));
 		PaginationResponse<RepoView> result = new PaginationResponse<>(page.getTotal(),
 				repoViewMapper.toView(page.getRecords()));

File: server/rdbms/src/main/java/cn/surveyking/server/impl/RepoServiceImpl.java
Patch:
@@ -49,6 +49,7 @@ public class RepoServiceImpl extends BaseService<RepoMapper, Repo> implements Re
 	public PaginationResponse<RepoView> listRepo(RepoQuery query) {
 		Page<Repo> page = pageByQuery(query,
 				Wrappers.<Repo>lambdaQuery().like(isNotBlank(query.getName()), Repo::getName, query.getName())
+						.eq(Repo::getCreateAt, SecurityContextUtils.getUserId())
 						.eq(query.getMode() != null, Repo::getMode, query.getMode()).orderByAsc(Repo::getCreateAt));
 		PaginationResponse<RepoView> result = new PaginationResponse<>(page.getTotal(),
 				repoViewMapper.toView(page.getRecords()));

File: server/shared/src/main/java/cn/surveyking/server/core/config/WebSecurityConfig.java
Patch:
@@ -66,7 +66,6 @@ public void configure(HttpSecurity http) throws Exception {
 		http.authorizeRequests().antMatchers("/api/public/**").permitAll().antMatchers("/api/system").permitAll()
 				.antMatchers(HttpMethod.GET, "/api/file/**").permitAll().antMatchers("/api/**").authenticated()
 				.antMatchers("/").permitAll();
-
 		http.addFilterBefore(jwtTokenFilter, UsernamePasswordAuthenticationFilter.class);
 	}
 

File: server/rdbms/src/main/java/cn/surveyking/server/impl/RepoServiceImpl.java
Patch:
@@ -138,7 +138,7 @@ public void batchAddRepoTemplate(RepoTemplateRequest request) {
 		if (templatesUpdate.size() > 0) {
 			templateService.batchUpdateTemplate(templatesUpdate);
 			// 更新模板时需要删除之前的标签
-			tagService.remove(Wrappers.<Tag>lambdaUpdate().eq(Tag::getEntityId,
+			tagService.remove(Wrappers.<Tag>lambdaUpdate().in(Tag::getEntityId,
 					templatesUpdate.stream().map(x -> x.getId()).collect(Collectors.toList())));
 		}
 

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/SurveySchema.java
Patch:
@@ -28,7 +28,7 @@ public class SurveySchema implements Serializable {
 
 	private QuestionType type;
 
-	private Attribute attribute;
+	private Attribute attribute = new Attribute();
 
 	private List<DataSource> dataSource;
 

File: server/rdbms/src/main/java/cn/surveyking/server/domain/model/ProjectPartner.java
Patch:
@@ -35,13 +35,13 @@ public class ProjectPartner extends BaseModel {
 	private Integer status;
 
 	/**
-	 * 参与者id
+	 * 参与者id，内部用户白名单使用
 	 */
 	@TableField(value = "user_id")
 	private String userId;
 
 	/**
-	 * 参与者姓名
+	 * 参与者姓名，导入白名单使用
 	 */
 	@TableField(value = "user_name")
 	private String userName;

File: server/api/src/main/java/cn/surveyking/server/api/FileApi.java
Patch:
@@ -25,14 +25,12 @@ public class FileApi {
 	private final FileService fileService;
 
 	@GetMapping("/{id}")
-	@PreAuthorize("hasAuthority('file:detail')")
 	public ResponseEntity<Resource> getFile(@NotEmpty @PathVariable String id, FileQuery query) {
 		query.setId(id);
 		return fileService.loadFile(query);
 	}
 
 	@GetMapping
-	@PreAuthorize("hasAuthority('file:list')")
 	public List<FileView> listImages(FileQuery query) {
 		return fileService.listFiles(query);
 	}

File: server/api/src/main/java/cn/surveyking/server/api/SurveyApi.java
Patch:
@@ -56,10 +56,11 @@ public FileView upload(UploadFileRequest request) {
 	}
 
 	@GetMapping("/preview/{attachmentId}")
-	public ResponseEntity<Resource> preview(@PathVariable String attachmentId) {
+	public ResponseEntity<Resource> preview(@PathVariable("attachmentId") String attachmentId) {
 		FileQuery query = new FileQuery(attachmentId);
 		HttpHeaders headers = new HttpHeaders();
 		headers.add(HttpHeaders.CACHE_CONTROL, CacheControl.maxAge(Duration.ofDays(30)).getHeaderValue());
+		query.setDispositionType(AppConsts.DispositionTypeEnum.inline);
 		query.setHeaders(headers);
 		return fileService.loadFile(query);
 	}

File: server/shared/src/main/java/cn/surveyking/server/core/config/WebSecurityConfig.java
Patch:
@@ -4,6 +4,7 @@
 import cn.surveyking.server.core.security.RestAuthenticationEntryPoint;
 import cn.surveyking.server.service.UserService;
 import org.springframework.context.annotation.Bean;
+import org.springframework.http.HttpMethod;
 import org.springframework.security.authentication.AuthenticationManager;
 import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
 import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
@@ -56,7 +57,8 @@ public void configure(HttpSecurity http) throws Exception {
 		http = http.exceptionHandling().authenticationEntryPoint(authenticationEntryPoint).and();
 		// 所有请求都放行，目的是单 jar 部署，输入任意路由也能跳转到对应的页面，权限拦截通过注解配置
 		http.authorizeRequests().antMatchers("/api/public/**").permitAll().antMatchers("/api/system").permitAll()
-				.antMatchers("/api/**").authenticated().antMatchers("/").permitAll();
+				.antMatchers(HttpMethod.GET, "/api/files").permitAll().antMatchers("/api/**").authenticated()
+				.antMatchers("/").permitAll();
 
 		http.addFilterBefore(jwtTokenFilter, UsernamePasswordAuthenticationFilter.class);
 	}

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/SchemaParser.java
Patch:
@@ -112,6 +112,9 @@ else if (questionType == SurveySchema.QuestionType.Cascader) {
 							.orElse(new SurveySchema.DataSource("", "", new ArrayList<>()));
 					result.add(dataSource.getLabel());
 					dataSources = dataSource.getChildren();
+					if (dataSources == null) {
+						break;
+					}
 				}
 				rowData.add(String.join(",", result));
 			}

File: server/rdbms/src/main/java/cn/surveyking/server/impl/TemplateServiceImpl.java
Patch:
@@ -54,7 +54,9 @@ public PaginationResponse<TemplateView> listTemplate(TemplateQuery query) {
 				.exists(query.getTag().size() > 0,
 						String.format("select 1 from t_tag t where t.entity_id = t_template.id and t.name in (%s)",
 								query.getTag().stream().map(x -> "'" + x + "'").collect(Collectors.joining(","))))
-				.eq(query.getShared() == 0, Template::getCreateBy, SecurityContextUtils.getUserId())
+				.eq(query.getShared() != null, Template::getShared, query.getShared())
+				.eq(query.getShared() != null && query.getShared() == 0, Template::getCreateBy,
+						SecurityContextUtils.getUserId())
 				.orderByAsc(Template::getPriority));
 		return new PaginationResponse<>(templatePage.getTotal(),
 				templatePage.getRecords().stream().map(x -> templateViewMapper.toView(x)).collect(Collectors.toList()));

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/RepoTemplateRequest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.surveyking.server.domain.dto;
 
 import lombok.Data;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.util.List;
 
@@ -17,4 +18,6 @@ public class RepoTemplateRequest {
 
 	private List<String> ids;
 
+	private MultipartFile file;
+
 }

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/TemplateQuery.java
Patch:
@@ -25,7 +25,7 @@ public class TemplateQuery extends PageQuery {
 	/**
 	 * 默认查询的是公共库
 	 */
-	private Integer shared = 1;
+	private Integer shared;
 
 	private List<String> categories = new ArrayList<>();
 

File: server/shared/src/main/java/cn/surveyking/server/service/AnswerService.java
Patch:
@@ -35,7 +35,7 @@ public interface AnswerService {
 
 	DownloadData downloadAttachment(DownloadQuery query);
 
-	DownloadData downloadSurvey(String shortId, Integer current, Integer pageSize, List<String> ids);
+	DownloadData downloadSurvey(DownloadQuery query);
 
 	default AnswerMetaInfo.ClientInfo parseClientInfo(HttpServletRequest request,
 			AnswerMetaInfo.ClientInfo clientInfo) {
@@ -56,7 +56,7 @@ default ResponseEntity<Resource> download(DownloadQuery query) {
 		DownloadData download;
 		// 下载问卷答案
 		if (query.getType() == DownloadQuery.DownloadType.answer) {
-			download = downloadSurvey(query.getProjectId(), query.getCurrent(), query.getPageSize(), query.getIds());
+			download = downloadSurvey(query);
 		}
 		// 下载附件
 		else if (query.getType() == DownloadQuery.DownloadType.answerAttachment

File: server/rdbms/src/main/java/cn/surveyking/server/impl/SurveyServiceImpl.java
Patch:
@@ -152,6 +152,7 @@ private ProjectSetting validateProject(ProjectView project) {
 		return setting;
 	}
 
+
 	private void validateExamSetting(ProjectView project) {
 		ProjectSetting.ExamSetting examSetting = project.getSetting().getExamSetting();
 		if (examSetting == null || !ProjectModeEnum.exam.equals(project.getMode())) {

File: server/shared/src/main/java/cn/surveyking/server/service/AnswerService.java
Patch:
@@ -35,7 +35,7 @@ public interface AnswerService {
 
 	DownloadData downloadAttachment(DownloadQuery query);
 
-	DownloadData downloadSurvey(String shortId);
+	DownloadData downloadSurvey(String shortId, Integer current, Integer pageSize,List<String> ids);
 
 	default AnswerMetaInfo.ClientInfo parseClientInfo(HttpServletRequest request,
 			AnswerMetaInfo.ClientInfo clientInfo) {
@@ -56,7 +56,7 @@ default ResponseEntity<Resource> download(DownloadQuery query) {
 		DownloadData download;
 		// 下载问卷答案
 		if (query.getType() == DownloadQuery.DownloadType.answer) {
-			download = downloadSurvey(query.getProjectId());
+			download = downloadSurvey(query.getProjectId(), query.getCurrent(), query.getPageSize(),query.getIds());
 		}
 		// 下载附件
 		else if (query.getType() == DownloadQuery.DownloadType.answerAttachment

File: server/shared/src/main/java/cn/surveyking/server/service/ProjectPartnerService.java
Patch:
@@ -16,8 +16,8 @@ public interface ProjectPartnerService {
 
 	List<ProjectPartnerView> listProjectPartner(String projectId);
 
-	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,
-			key = "T(cn.surveyking.server.core.uitls.SecurityContextUtils).getUserId()")
+//	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,
+//			key = "T(cn.surveyking.server.core.uitls.SecurityContextUtils).getUserId()")
 	void addProjectPartner(ProjectPartnerRequest request);
 
 	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,

File: server/shared/src/main/java/cn/surveyking/server/service/ProjectPartnerService.java
Patch:
@@ -16,8 +16,8 @@ public interface ProjectPartnerService {
 
 	List<ProjectPartnerView> listProjectPartner(String projectId);
 
-	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,
-			key = "T(cn.surveyking.server.core.uitls.SecurityContextUtils).getUserId()")
+//	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,
+//			key = "T(cn.surveyking.server.core.uitls.SecurityContextUtils).getUserId()")
 	void addProjectPartner(ProjectPartnerRequest request);
 
 	@CacheEvict(cacheNames = CacheConsts.projectPermissionCacheName,

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/AnswerScoreEvaluator.java
Patch:
@@ -266,8 +266,8 @@ private boolean optionValueMatchCorrectAnswer(SurveySchema qSchema, String optio
 			log.warn("问卷{}问题{}选项{}未设置正确答案", schema.getId(), qSchema.getId(), optionSchema.getId());
 			return false;
 		}
-		// 多个正确答案可以按照分号隔开，只要有一个正确即可
-		for (String item : correctAnswer.split(":")) {
+		// 多个正确答案可以按照（回车键）隔开，只要有一个正确即可
+		for (String item : correctAnswer.split("\n")) {
 			if (SurveySchema.ExamMatchRule.completeSame.equals(matchRule) && item.equals(optionValue.toString())) {
 				return true;
 			}

File: server/shared/src/main/java/cn/surveyking/server/core/uitls/AnswerScoreEvaluator.java
Patch:
@@ -266,8 +266,8 @@ private boolean optionValueMatchCorrectAnswer(SurveySchema qSchema, String optio
 			log.warn("问卷{}问题{}选项{}未设置正确答案", schema.getId(), qSchema.getId(), optionSchema.getId());
 			return false;
 		}
-		// 多个正确答案可以按照分号隔开，只要有一个正确即可
-		for (String item : correctAnswer.split(":")) {
+		// 多个正确答案可以按照（回车键）隔开，只要有一个正确即可
+		for (String item : correctAnswer.split("\n")) {
 			if (SurveySchema.ExamMatchRule.completeSame.equals(matchRule) && item.equals(optionValue.toString())) {
 				return true;
 			}

File: server/rdbms/src/main/java/cn/surveyking/server/impl/ReportServiceImpl.java
Patch:
@@ -51,7 +51,6 @@ private void parseAnswer(Map<String, ReportData.Data> data, LinkedHashMap answer
 			}
 			else if (value instanceof Number) {
 				Number numberValue = (Number) value;
-				optionData.setTotal(optionData.getTotal() + 1);
 				if (optionData.getMin() == null || optionData.getMax() == null || optionData.getAverage() == null) {
 					optionData.setMin(numberValue);
 					optionData.setMax(numberValue);

File: server/rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -122,7 +122,7 @@ private void setAnswerTypeInfo(List<SurveySchema> flatQuestionSchema, AnswerView
 					else if (questionType == SurveySchema.QuestionType.Signature
 							|| questionType == SurveySchema.QuestionType.Upload) {
 						FileQuery query = new FileQuery();
-						query.setType(StorageTypeEnum.ANSWER_ATTACHMENT);
+						query.setType(StorageTypeEnum.ANSWER_ATTACHMENT.getType());
 						query.setIds(ids);
 						// 图片上传和签名需要做一个合并
 						view.getAttachment().addAll(fileService.listFiles(query));

File: server/rdbms/src/main/java/cn/surveyking/server/impl/FileServiceImpl.java
Patch:
@@ -79,9 +79,9 @@ public FileView upload(UploadFileRequest request) {
 
 	@Override
 	public List<FileView> listFiles(FileQuery query) {
-		return fileViewMapper.toFileView(list(Wrappers.<File>lambdaQuery()
-				.eq(query.getType() != null, File::getStorageType, query.getType().getType())
-				.in(query.getIds() != null && query.getIds().size() > 0, File::getId, query.getIds())));
+		return fileViewMapper.toFileView(
+				list(Wrappers.<File>lambdaQuery().eq(query.getType() != null, File::getStorageType, query.getType())
+						.in(query.getIds() != null && query.getIds().size() > 0, File::getId, query.getIds())));
 	}
 
 	@Override

File: server/rdbms/src/main/java/cn/surveyking/server/impl/TemplateServiceImpl.java
Patch:
@@ -47,7 +47,7 @@ public PaginationResponse<TemplateView> listTemplate(TemplateQuery query) {
 				// .ne(query.getQuestionType() != null, Template::getQuestionType,
 				// query.getQuestionType())
 				.in(query.getCategories().size() > 0, Template::getCategory, query.getCategories())
-				// .eq(Template::getShared, query.getShared())
+				.eq(query.getMode() != null, Template::getMode, query.getMode())
 				.exists(query.getRepoId() != null, String.format(
 						"select 1 from t_repo_template t where t.repo_id = '%s' and t.template_id = t_template.id",
 						query.getRepoId()))

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/FileQuery.java
Patch:
@@ -1,7 +1,6 @@
 package cn.surveyking.server.domain.dto;
 
 import cn.surveyking.server.core.constant.AppConsts;
-import cn.surveyking.server.core.constant.StorageTypeEnum;
 import lombok.Data;
 import org.springframework.http.HttpHeaders;
 
@@ -21,7 +20,7 @@ public FileQuery(String id) {
 		this.id = id;
 	}
 
-	StorageTypeEnum type;
+	Integer type;
 
 	List<String> ids;
 

File: server/shared/src/main/java/cn/surveyking/server/domain/dto/TemplateQuery.java
Patch:
@@ -1,5 +1,6 @@
 package cn.surveyking.server.domain.dto;
 
+import cn.surveyking.server.core.constant.ProjectModeEnum;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -32,4 +33,6 @@ public class TemplateQuery extends PageQuery {
 
 	private String repoId;
 
+	private ProjectModeEnum mode;
+
 }

File: server/rdbms/src/main/java/cn/surveyking/server/impl/PositionServiceImpl.java
Patch:
@@ -52,7 +52,7 @@ public void updatePosition(PositionRequest request) {
 
 	@Override
 	public void deletePosition(String id) {
-		deletePosition(id);
+		removeById(id);
 	}
 
 	@Override

File: rdbms/src/main/java/cn/surveyking/server/domain/mapper/ProjectViewMapper.java
Patch:
@@ -23,7 +23,6 @@ public interface ProjectViewMapper {
 	Project fromRequest(ProjectRequest projectRequest);
 
 	@Mapping(target = "setting", source = "setting.answerSetting")
-	@Mapping(target = "passwordRequired", expression = "java(project.getSurvey() == null)")
 	@Mapping(target = "setting.answerSetting.password", ignore = true)
 	@Mapping(target = "setting.answerSetting.ipLimit", ignore = true)
 	@Mapping(target = "setting.answerSetting.cookieLimit", ignore = true)

File: shared/src/main/java/cn/surveyking/server/core/constant/ErrorCode.java
Patch:
@@ -15,7 +15,9 @@ public enum ErrorCode {
 	/** 问卷已提交 */
 	SurveySubmitted(4003, "问卷已提交"),
 	/** 页面不存在 */
-	ProjectNotFound(4004, "对不起，你访问的页面不存在"),;
+	ProjectNotFound(4004, "对不起，你访问的页面不存在"),
+	/** 密码验证失败 */
+	ValidationError(4005, "密码验证失败");
 
 	/**
 	 * 前两位区分模块，后两位区分错误消息

File: shared/src/main/java/cn/surveyking/server/core/mvc/advice/GlobalExceptionHandler.java
Patch:
@@ -89,7 +89,7 @@ public ResponseEntity<ApiResponse<String>> handleErrorCodeException(HttpServletR
 	public ResponseEntity<ApiResponse<String>> handleInternalServerError(HttpServletRequest request, Exception ex) {
 		log.error("handleInternalServerError {}\n", request.getRequestURI(), ex);
 		return ResponseEntity.ok().body(new ApiResponse<>(ResponseCode.INTERNAL_SERVER_ERROR.code,
-				ex instanceof InternalServerError ? ex.getMessage() : "Internal server error"));
+				ex instanceof InternalServerError ? ex.getMessage() : "服务出了点问题"));
 	}
 
 }

File: api/src/main/java/cn/surveyking/server/api/ProjectApi.java
Patch:
@@ -33,9 +33,8 @@ public PaginationResponse<ProjectView> listProject(ProjectQuery query) {
 	@GetMapping("/{id}")
 	@PreAuthorize("hasAuthority('project:detail')")
 	@EnableDataPerm(key = "#id")
-	public ProjectView getProject(@PathVariable String id, ProjectQuery query) {
-		query.setId(id);
-		return projectService.getProject(query);
+	public ProjectView getProject(@PathVariable String id) {
+		return projectService.getProject(id);
 	}
 
 	@GetMapping("/{id}/settings")

File: flow/src/main/java/cn/surveyking/server/flow/service/impl/FlowServiceImpl.java
Patch:
@@ -302,9 +302,7 @@ private PaginationResponse<FlowTaskView> getSelfCreated(FlowTaskQuery query) {
 
 	@Override
 	public SurveySchema loadSchemaByPermission(SchemaQuery query) {
-		ProjectQuery projectQuery = new ProjectQuery();
-		projectQuery.setId(query.getProjectId());
-		ProjectView projectView = projectService.getProject(projectQuery);
+		ProjectView projectView = projectService.getProject(query.getProjectId());
 		SurveySchema schema = projectView.getSurvey();
 		FlowEntryNode element = entryNodeService.getById(query.getTaskDefKey());
 		if (element == null) {

File: rdbms/src/main/java/cn/surveyking/server/domain/mapper/ProjectViewMapper.java
Patch:
@@ -28,6 +28,6 @@ public interface ProjectViewMapper {
 	@Mapping(target = "setting.answerSetting.ipLimit", ignore = true)
 	@Mapping(target = "setting.answerSetting.cookieLimit", ignore = true)
 	@Mapping(target = "setting.answerSetting.loginLimit", ignore = true)
-	PublicProjectView toPublicProjectView(Project project);
+	PublicProjectView toPublicProjectView(ProjectView project);
 
 }

File: shared/src/main/java/cn/surveyking/server/core/constant/CacheConsts.java
Patch:
@@ -6,6 +6,8 @@
  */
 public final class CacheConsts {
 
+	public static final String projectCache = "projectCache";
+
 	public static final String commonCacheName = "commonCache";
 
 	public static final String userCacheName = "userCache";

File: shared/src/main/java/cn/surveyking/server/domain/dto/ProjectSetting.java
Patch:
@@ -87,7 +87,7 @@ public static class AnswerSetting {
 	public static class SubmittedSetting {
 
 		/**
-		 * 提交后展示的网页内容
+		 * 答题完成后跳转自定义页面
 		 */
 		private String contentHtml;
 

File: shared/src/main/java/cn/surveyking/server/service/SurveyService.java
Patch:
@@ -1,7 +1,6 @@
 package cn.surveyking.server.service;
 
 import cn.surveyking.server.domain.dto.ProjectQuery;
-import cn.surveyking.server.domain.dto.ProjectSetting;
 import cn.surveyking.server.domain.dto.PublicProjectView;
 
 /**
@@ -14,6 +13,6 @@ public interface SurveyService {
 
 	PublicProjectView verifyPassword(ProjectQuery query);
 
-	void validateProject(String projectId, ProjectSetting setting);
+	void validateProject(String projectId);
 
 }

File: rdbms/src/main/java/cn/surveyking/server/impl/SurveyServiceImpl.java
Patch:
@@ -66,6 +66,9 @@ public PublicProjectView verifyPassword(ProjectQuery query) {
 
 	@Override
 	public void validateProject(String projectId, ProjectSetting setting) {
+		if (setting.getStatus() == 0) {
+			throw new ErrorCodeException(ErrorCode.SurveySuspend);
+		}
 		Long maxAnswers = setting.getAnswerSetting().getMaxAnswers();
 		// 校验最大答案条数限制
 		if (maxAnswers != null) {

File: shared/src/main/java/cn/surveyking/server/core/constant/ErrorCode.java
Patch:
@@ -6,7 +6,8 @@
  */
 public enum ErrorCode {
 
-	ExceededMaxAnswers(4001, "问卷已停止收集"), ExceededEndTime(4002, "问卷已停止收集"), ProjectNotFound(4004, "对不起，你访问的页面不存在");
+	SurveySuspend(4000, "问卷已暂停回收"), ExceededMaxAnswers(4001, "已达到回收上限，问卷停止收集"), ExceededEndTime(4002,
+			"超出截止时间，问卷停止收集"), ProjectNotFound(4004, "对不起，你访问的页面不存在");
 
 	/**
 	 * 前两位区分模块，后两位区分错误消息

File: shared/src/main/java/cn/surveyking/server/domain/dto/SelectUserRequest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.surveyking.server.domain.dto;
 
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -10,6 +11,7 @@
  * @date 2022/2/1
  */
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class SelectUserRequest extends PageQuery {
 
 	private String name;

File: rdbms/src/main/java/cn/surveyking/server/impl/DeptServiceImpl.java
Patch:
@@ -66,8 +66,7 @@ public void addDept(DeptRequest request) {
 		if (StringUtils.isEmpty(request.getParentId())) {
 			dept.setParentId("0");
 		}
-		dept.setSortCode((int) count(Wrappers.<Dept>lambdaQuery().eq(
-				Dept::getParentId, request.getParentId())));
+		dept.setSortCode((int) count(Wrappers.<Dept>lambdaQuery().eq(Dept::getParentId, request.getParentId())));
 		save(dept);
 	}
 

File: api/src/main/java/cn/surveyking/server/api/SurveyApi.java
Patch:
@@ -47,8 +47,8 @@ public class SurveyApi {
 	@GetMapping("/loadProject")
 	public PublicProjectView loadProject(ProjectQuery query) {
 		PublicProjectView projectView = surveyService.loadProject(query);
-		if (Boolean.TRUE
-				.equals(projectView.getSetting().getLoginRequired() && !SecurityContextUtils.isAuthenticated())) {
+		if (Boolean.TRUE.equals(projectView.getSetting().getLoginRequired())
+				&& !SecurityContextUtils.isAuthenticated()) {
 			projectView.setLoginRequired(true);
 			projectView.setSurvey(null);
 		}

File: flow/src/main/java/cn/surveyking/server/flow/service/impl/taskHandler/AgreeTaskHandler.java
Patch:
@@ -13,8 +13,9 @@
 public class AgreeTaskHandler extends AbstractTaskHandler {
 
 	@Override
-	public void innerProcess(ApprovalTaskRequest request) {
+	public boolean innerProcess(ApprovalTaskRequest request) {
 		taskService.complete(request.getTaskId());
+		return true;
 	}
 
 }

File: flow/src/main/java/cn/surveyking/server/flow/service/impl/taskHandler/RefuseTaskHandler.java
Patch:
@@ -13,8 +13,9 @@
 public class RefuseTaskHandler extends AbstractTaskHandler {
 
 	@Override
-	public void innerProcess(ApprovalTaskRequest request) {
+	public boolean innerProcess(ApprovalTaskRequest request) {
 		runtimeService.deleteProcessInstance(request.getProcessInstanceId(), request.getComment());
+		return true;
 	}
 
 }

File: flow/src/main/java/cn/surveyking/server/flow/service/impl/taskHandler/RevertTaskHandler.java
Patch:
@@ -21,17 +21,18 @@
 public class RevertTaskHandler extends AbstractTaskHandler {
 
 	@Override
-	public void innerProcess(ApprovalTaskRequest request) {
+	public boolean innerProcess(ApprovalTaskRequest request) {
 		if (!canRevert(request.getTaskId(), request.getProcessInstanceId())) {
 			throw new FlowableRuntimeException("当前节点不能进行驳回操作");
 		}
 		if (rollbackToStartEvent(request)) {
-			return;
+			return true;
 		}
 		// TODO: 会签撤回
 		List<Task> tasks = getProcessInstanceActiveTaskList(request.getProcessInstanceId());
 		runtimeService.createChangeActivityStateBuilder().processInstanceId(request.getProcessInstanceId())
 				.moveActivityIdTo(tasks.get(0).getTaskDefinitionKey(), request.getActivityId()).changeState();
+		return true;
 	}
 
 	/**

File: flow/src/main/java/cn/surveyking/server/flow/service/impl/taskHandler/RollbackTaskHandler.java
Patch:
@@ -17,12 +17,12 @@
 public class RollbackTaskHandler extends AbstractTaskHandler {
 
 	@Override
-	public void innerProcess(ApprovalTaskRequest request) {
+	public boolean innerProcess(ApprovalTaskRequest request) {
 		Task task = getCurrentRunningTask(request.getTaskId());
 		String currentActivityId = task.getTaskDefinitionKey();
 		String newActivityId = request.getNewActivityId();
 		if (rollbackToStartEvent(request)) {
-			return;
+			return true;
 		}
 		TaskTreeNode taskTreeNode = getHistoricTree(task.getProcessInstanceId());
 		if (StringUtils.isEmpty(request.getNewActivityId())) {
@@ -35,6 +35,7 @@ public void innerProcess(ApprovalTaskRequest request) {
 			runtimeService.createChangeActivityStateBuilder().processInstanceId(task.getProcessInstanceId())
 					.moveActivityIdTo(currentActivityId, newActivityId).changeState();
 		}
+		return true;
 	}
 
 }

File: rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -95,7 +95,7 @@ private void setAnswerTypeInfo(List<SurveySchema> flatQuestionSchema, AnswerView
 					else if (questionType == SurveySchema.QuestionType.Signature
 							|| questionType == SurveySchema.QuestionType.Upload) {
 						FileQuery query = new FileQuery();
-						query.setStorageType(AppConsts.StorageType.ANSWER_ATTACHMENT);
+						query.setType(AppConsts.StorageType.ANSWER_ATTACHMENT);
 						query.setIds(ids);
 						view.setAttachment(fileService.listFiles(query));
 					}

File: rdbms/src/main/java/cn/surveyking/server/impl/FileServiceImpl.java
Patch:
@@ -78,8 +78,8 @@ public Resource loadAsResource(String attachmentId) {
 
 	@Override
 	public List<FileView> listFiles(FileQuery query) {
-		return fileViewMapper
-				.toFileView(list(Wrappers.<File>lambdaQuery().eq(File::getStorageType, query.getStorageType())
+		return fileViewMapper.toFileView(
+				list(Wrappers.<File>lambdaQuery().eq(query.getType() != null, File::getStorageType, query.getType())
 						.in(query.getIds() != null && query.getIds().size() > 0, File::getId, query.getIds())));
 	}
 

File: shared/src/main/java/cn/surveyking/server/domain/dto/FileQuery.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class FileQuery {
 
-	AppConsts.StorageType storageType;
+	AppConsts.StorageType type;
 
 	List<String> ids;
 

File: rdbms/src/main/java/cn/surveyking/server/impl/AnswerServiceImpl.java
Patch:
@@ -192,8 +192,6 @@ private InputStream answerAttachToZip(List<Answer> answers) {
 				try (ZipOutputStream zout = new ZipOutputStream(outputStream);) {
 					answers.forEach(answer -> {
 						answer.getAttachment().forEach(attachment -> {
-							byte[] buffer = new byte[1024 * 1024 * 1024];
-							int count;
 							ByteArrayResource resource = (ByteArrayResource) fileService
 									.loadAsResource(attachment.getId());
 							ZipEntry entry = new ZipEntry(answer.getId() + "_" + attachment.getOriginalName());

File: shared/src/main/java/cn/surveyking/server/domain/dto/ProjectQuery.java
Patch:
@@ -1,12 +1,14 @@
 package cn.surveyking.server.domain.dto;
 
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 /**
  * @author javahuang
  * @date 2021/8/31
  */
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class ProjectQuery extends PageQuery {
 
 	private String shortId;

File: shared/src/main/java/cn/surveyking/server/service/AnswerService.java
Patch:
@@ -59,8 +59,7 @@ else if (query.getType() == DownloadQuery.DownloadType.ANSWER_ATTACHMENT) {
 					.contentType(download.getMediaType()).body(download.getResource());
 		}
 		catch (UnsupportedEncodingException e) {
-			e.printStackTrace();
-			throw new InternalServerError("下载失败");
+			throw new InternalServerError("下载失败", e);
 		}
 
 	}

