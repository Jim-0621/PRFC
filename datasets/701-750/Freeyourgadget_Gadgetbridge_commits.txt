File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/XiaomiSimpleActivityParser.java
Patch:
@@ -178,7 +178,7 @@ public void parse(final BaseActivitySummary summary, final ByteBuffer buf) {
                     case 609: // tennis           0x0261
                         summary.setActivityKind(ActivityKind.TENNIS.getCode());
                         break;
-                    case 614: // billard          0x0266
+                    case 614: // billiard          0x0266
                         summary.setActivityKind(ActivityKind.BILLIARDS.getCode());
                         break;
                     case 619: // golf             0x026b
@@ -193,7 +193,7 @@ public void parse(final BaseActivitySummary summary, final ByteBuffer buf) {
                     case 709: // skiing           0x02c5
                         summary.setActivityKind(ActivityKind.SKIING.getCode());
                         break;
-                    case 808: // shuttelcock      0x0328
+                    case 808: // shuttlecock      0x0328
                         summary.setActivityKind(ActivityKind.SHUTTLECOCK.getCode());
                         break;
                     default:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/XiaomiSimpleActivityParser.java
Patch:
@@ -137,7 +137,7 @@ public void parse(final BaseActivitySummary summary, final ByteBuffer buf) {
                         summary.setActivityKind(ActivityKind.ROLLER_SKATING.getCode());
                         break;
                     case 301: // stair climbing   0x012d
-                        summary.setActivityKind(ActivityKind.STAIR_CLIMBER.getCode());
+                        summary.setActivityKind(ActivityKind.STAIRS.getCode());
                         break;
                     case 303: // core training    0x012f
                         summary.setActivityKind(ActivityKind.CORE_TRAINING.getCode());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/marstek/MarstekB2500DeviceCoordinator.java
Patch:
@@ -88,7 +88,7 @@ public int getBondingStyle() {
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_battery_allow_pass_though,
+                R.xml.devicesettings_battery_allow_pass_through,
                 R.xml.devicesettings_battery_minimum_charge,
                 R.xml.devicesettings_battery_discharge_5
         };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -87,7 +87,6 @@
 import nodomain.freeyourgadget.gadgetbridge.externalevents.gps.GBLocationService;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.sleepasandroid.SleepAsAndroidReceiver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceMusic;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceService;
 import nodomain.freeyourgadget.gadgetbridge.model.Alarm;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEventSpec;
@@ -102,9 +101,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.Reminder;
 import nodomain.freeyourgadget.gadgetbridge.model.WeatherSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.WorldClock;
-import nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLEScanService;
-import nodomain.freeyourgadget.gadgetbridge.service.btle.BleIntentApi;
 import nodomain.freeyourgadget.gadgetbridge.service.receivers.AutoConnectIntervalReceiver;
 import nodomain.freeyourgadget.gadgetbridge.service.receivers.GBAutoFetchReceiver;
 import nodomain.freeyourgadget.gadgetbridge.util.EmojiConverter;
@@ -1325,6 +1322,7 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Featur
                 if (!deviceHasCalendarReceiverRegistered(deviceWithCalendar)) {
                     if (!(GBApplication.isRunningMarshmallowOrLater() && ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALENDAR) == PackageManager.PERMISSION_DENIED)) {
                         CalendarReceiver receiver = new CalendarReceiver(this, deviceWithCalendar);
+                        receiver.registerBroadcastReceivers();
                         mCalendarReceiver.add(receiver);
                     }
                 }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/model/ActivitySummaryDataTest.java
Patch:
@@ -98,6 +98,7 @@ public void deserializeSerializeNew() {
                 "\"test_progress\":{" +
                 "\"type\":\"progress\"," +
                 "\"progress\":51," +
+                "\"color\":0," +
                 "\"value\":3828.0," +
                 "\"unit\":\"seconds\"" +
                 "}" +

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/ecbs100/CasioECBS100DeviceSupport.java
Patch:
@@ -40,7 +40,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.Casio2C2DSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioTimeZone;
 
-// TODO abstract methods from GWB5600
+// TODO abstract methods out from GWB5600
 public class CasioECBS100DeviceSupport extends BasicCasio2C2DSupport {
     private static final Logger LOG = LoggerFactory.getLogger(CasioECBS100DeviceSupport.class);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -198,7 +198,7 @@ public enum Subtype {
         SPORTS_OUTDOOR_RUNNING(Type.SPORTS, 0x01),
         SPORTS_OUTDOOR_WALKING_V1(Type.SPORTS, 0x02),
         SPORTS_TREADMILL(Type.SPORTS, 0x03),
-        SPORTS_OUTDOOR_CYCLING_V2(Type.SPORTS, 0x06),    // TODO
+        SPORTS_OUTDOOR_CYCLING_V2(Type.SPORTS, 0x06),
         SPORTS_INDOOR_CYCLING(Type.SPORTS, 0x07),
         SPORTS_FREESTYLE(Type.SPORTS, 0x08),
         SPORTS_POOL_SWIMMING(Type.SPORTS, 0x09),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/DaySleepChartFragment.java
Patch:
@@ -148,7 +148,7 @@ private MySleepChartsData refreshSleepAmounts(GBDevice mGBDevice, List<? extends
 
         int sleepScore = 0;
         if (!sleepScoreSamples.isEmpty()) {
-            sleepScore = sleepScoreSamples.get(0).getSleepScore();
+            sleepScore = sleepScoreSamples.get(sleepScoreSamples.size() - 1).getSleepScore();
         }
 
         return new MySleepChartsData(sleepSessions, totalSeconds, awakeSleepDuration, remSleepDuration, deepSleepDuration, lightSleepDuration, sleepScore);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -127,7 +127,6 @@ public class MiBandSupport extends AbstractBTLEDeviceSupport {
     private final GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();
     private final GBDeviceEventBatteryInfo batteryCmd = new GBDeviceEventBatteryInfo();
     private RealtimeSamplesSupport realtimeSamplesSupport;
-    private boolean alarmClockRining;
     private boolean alarmClockRinging;
 
     public MiBandSupport() {
@@ -570,7 +569,7 @@ public void onNotification(NotificationSpec notificationSpec) {
     }
 
     private void onAlarmClock(NotificationSpec notificationSpec) {
-        alarmClockRining = true;
+        alarmClockRinging = true;
         AbortTransactionAction abortAction = new AbortTransactionAction() {
             @Override
             protected boolean shouldAbort() {
@@ -584,7 +583,7 @@ protected boolean shouldAbort() {
 
     @Override
     public void onDeleteNotification(int id) {
-        alarmClockRining = false; // we should have the notificationtype at least to check
+        alarmClockRinging = false; // we should have the notificationtype at least to check
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -295,6 +295,9 @@ private XiaomiSimpleActivityParser getIndoorCyclingParser(final XiaomiActivityFi
             case 8:
                 headerSize = 7;
                 break;
+            case 9:
+                headerSize = 8;
+                break;
             default:
                 LOG.warn("Unable to parse workout summary version {}", fileId.getVersion());
                 return null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/RespiratoryRatePeriodFragment.java
Patch:
@@ -148,8 +148,9 @@ protected LineDataSet createDataSet(final List<Entry> values, String label, int
     @Override
     protected void updateChartsnUIThread(RespiratoryRateData respiratoryRateData) {
         respiratoryRateChart.setData(null);
-        sleepAvg.setText(String.valueOf(respiratoryRateData.sleepRateAvg));
-        awakeAvg.setText(String.valueOf(respiratoryRateData.awakeRateAvg));
+        final String emptyValue = requireContext().getString(R.string.stats_empty_value);
+        sleepAvg.setText(respiratoryRateData.sleepRateAvg > 0 ? String.valueOf(respiratoryRateData.sleepRateAvg) : emptyValue);
+        awakeAvg.setText(respiratoryRateData.awakeRateAvg > 0 ? String.valueOf(respiratoryRateData.awakeRateAvg) : emptyValue);
 
         List<Entry> lineAwakeRateAvgEntries = new ArrayList<>();
         List<Entry> lineSleepRateEntries = new ArrayList<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivityChartsActivity.java
Patch:
@@ -245,7 +245,7 @@ public CharSequence getPageTitle(int position) {
                 case "calories":
                     return getString(R.string.calories);
                 case "respiratoryrate":
-                    return getString(R.string.respiratoryRate);
+                    return getString(R.string.respiratoryrate);
             }
 
             return String.format(Locale.getDefault(), "Unknown %d", position);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/RespiratoryRateFragment.java
Patch:
@@ -30,7 +30,7 @@ abstract class RespiratoryRateFragment<T extends ChartsData> extends AbstractCha
 
     @Override
     public String getTitle() {
-        return getString(R.string.respiratoryRate);
+        return getString(R.string.respiratoryrate);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -1901,7 +1901,7 @@ private void migratePrefs(int oldVersion) {
                     }
 
                     final String newPrefValue;
-                    if (!StringUtils.isBlank(chartsTabsValue)) {
+                    if (!StringUtils.isBlank(chartsTabsValue) && !chartsTabsValue.contains("respiratoryrate")) {
                         newPrefValue = chartsTabsValue + ",respiratoryrate";
                     } else {
                         newPrefValue = "respiratoryrate";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/RespiratoryRatePeriodFragment.java
Patch:
@@ -168,16 +168,16 @@ protected void updateChartsnUIThread(RespiratoryRateData respiratoryRateData) {
             }
         }
 
-        LineDataSet awakeDataSet = createDataSet(lineAwakeRateAvgEntries, getString(R.string.awake_avg), R.color.respiratory_rate_color);
-        LineDataSet sleepDataSet = createDataSet(lineSleepRateEntries, getString(R.string.awake_avg), R.color.chart_light_sleep_light);
+        LineDataSet awakeDataSet = createDataSet(lineAwakeRateAvgEntries, getString(R.string.sleep_colored_stats_awake_avg), R.color.respiratory_rate_color);
+        LineDataSet sleepDataSet = createDataSet(lineSleepRateEntries, getString(R.string.sleep_avg), R.color.chart_light_sleep_light);
 
         final List<ILineDataSet> lineDataSets = new ArrayList<>();
         lineDataSets.add(awakeDataSet);
         lineDataSets.add(sleepDataSet);
 
         List<LegendEntry> legendEntries = new ArrayList<>(1);
         LegendEntry awakeEntry = new LegendEntry();
-        awakeEntry.label = getString(R.string.awake_avg);
+        awakeEntry.label = getString(R.string.sleep_colored_stats_awake_avg);
         awakeEntry.formColor = getResources().getColor(R.color.respiratory_rate_color);
         LegendEntry sleepEntry = new LegendEntry();
         sleepEntry.label = getString(R.string.sleep_avg);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -197,14 +197,14 @@ public enum Subtype {
         ACTIVITY_SLEEP(Type.ACTIVITY, 0x08),
         SPORTS_OUTDOOR_RUNNING(Type.SPORTS, 0x01),
         SPORTS_OUTDOOR_WALKING_V1(Type.SPORTS, 0x02),
-        SPORTS_TREADMILL(Type.SPORTS, 0x03),             // TODO
+        SPORTS_TREADMILL(Type.SPORTS, 0x03),
         SPORTS_OUTDOOR_CYCLING_V2(Type.SPORTS, 0x06),    // TODO
         SPORTS_INDOOR_CYCLING(Type.SPORTS, 0x07),
         SPORTS_FREESTYLE(Type.SPORTS, 0x08),
         SPORTS_POOL_SWIMMING(Type.SPORTS, 0x09),
         SPORTS_HIIT(Type.SPORTS, 0x10),
         SPORTS_ELLIPTICAL(Type.SPORTS, 0x0B),
-        SPORTS_ROWING(Type.SPORTS, 0x0D),                // TODO
+        SPORTS_ROWING(Type.SPORTS, 0x0D),
         SPORTS_ROPESKIPPING(Type.SPORTS, 0x0E),          // TODO
         SPORTS_OUTDOOR_WALKING_V2(Type.SPORTS, 0x16),
         SPORTS_OUTDOOR_CYCLING(Type.SPORTS, 0x17),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/Notifications.java
Patch:
@@ -75,21 +75,21 @@ public NotificationActionRequest(
                     .put(0x03, true); // This used to be vibrate, but doesn't work
 
             HuaweiTLV subTlv = new HuaweiTLV();
-            if (titleContent != null)
+            if (titleContent != null && !titleContent.isEmpty())
                 subTlv.put(0x8D, new HuaweiTLV()
                         .put(0x0E, (byte) TextType.title)
                         .put(0x0F, (byte) encoding)
                         .put(0x10, titleContent)
                 );
 
-            if (senderContent != null)
+            if (senderContent != null && !senderContent.isEmpty())
                 subTlv.put(0x8D, new HuaweiTLV()
                         .put(0x0E, (byte) TextType.sender)
                         .put(0x0F, (byte) encoding)
                         .put(0x10, senderContent)
                 );
 
-            if (bodyContent != null)
+            if (bodyContent != null && !bodyContent.isEmpty())
                 subTlv.put(0x8D, new HuaweiTLV()
                         .put(0x0E, (byte) TextType.text)
                         .put(0x0F, (byte) encoding)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/p2p/HuaweiP2PCalendarService.java
Patch:
@@ -328,7 +328,6 @@ private boolean sendCalendarFile(String majorVersion, short minorVersion, JsonAr
         fileInfo.setDstPackage(this.getPackage());
         fileInfo.setSrcFingerprint(this.getLocalFingerprint());
         fileInfo.setDstFingerprint(this.getFingerprint());
-        fileInfo.setEncrypted(true);
 
         fileInfo.setFileUploadCallback(new HuaweiUploadManager.FileUploadCallback() {
             @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendFileUploadChunk.java
Patch:
@@ -43,7 +43,7 @@ protected List<byte[]> createRequest() throws RequestCreationException {
                     huaweiUploadManager.getFileUploadInfo().getCurrentUploadPosition(),
                     huaweiUploadManager.getFileUploadInfo().getUnitSize(),
                     huaweiUploadManager.getFileUploadInfo().getFileId(),
-                    huaweiUploadManager.getFileUploadInfo().isEncrypted()
+                    huaweiUploadManager.getFileUploadInfo().getEncrypt()
             );
         } catch(HuaweiPacket.SerializeException e) {
             throw new RequestCreationException(e.getMessage());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/welcome/WelcomeFragmentPermissions.java
Patch:
@@ -113,6 +113,9 @@ public void onBindViewHolder(@NonNull PermissionHolder holder, int position) {
                 holder.requestButton.setEnabled(false);
                 holder.checkmarkImageView.setVisibility(View.VISIBLE);
             } else {
+                holder.requestButton.setVisibility(View.VISIBLE);
+                holder.requestButton.setEnabled(true);
+                holder.checkmarkImageView.setVisibility(View.GONE);
                 holder.requestButton.setOnClickListener(view -> {
                     PermissionsUtils.requestPermission(requireActivity(), permissionData.getPermission());
                 });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DashboardFragment.java
Patch:
@@ -395,6 +395,7 @@ public static class DashboardData implements Serializable {
         public void clear() {
             restingCaloriesTotal = 0;
             activeCaloriesTotal = 0;
+            activeCaloriesGoalFactor = 0;
             caloriesTotal = 0;
             stepsTotal = 0;
             stepsGoalFactor = 0;
@@ -413,6 +414,7 @@ public boolean isEmpty() {
                     stepsGoalFactor == 0 &&
                     restingCaloriesTotal == 0 &&
                     activeCaloriesTotal == 0 &&
+                    activeCaloriesGoalFactor == 0 &&
                     caloriesTotal == 0 &&
                     sleepTotalMinutes == 0 &&
                     sleepGoalFactor == 0 &&

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivityChartsActivity.java
Patch:
@@ -134,7 +134,7 @@ private static List<String> fillChartsTabsList(final GBDevice device, final Cont
         if (!coordinator.supportsVO2Max()) {
             tabList.remove("vo2max");
         }
-        if (!coordinator.supportsActiveCalories() && !coordinator.supportsRestingCalories()) {
+        if (!coordinator.supportsActiveCalories()) {
             tabList.remove("calories");
         }
         return tabList;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractTimeSampleProvider.java
Patch:
@@ -100,6 +100,7 @@ public T getLatestSample() {
         return samples.get(0);
     }
 
+    @Nullable
     public T getLastSampleBefore(final long timestampTo) {
         final Device dbDevice = DBHelper.findDevice(getDevice(), getSession());
         if (dbDevice == null) {
@@ -119,6 +120,7 @@ public T getLastSampleBefore(final long timestampTo) {
         return !samples.isEmpty() ? samples.get(0) : null;
     }
 
+    @Nullable
     public T getNextSampleAfter(final long timestampFrom) {
         final Device dbDevice = DBHelper.findDevice(getDevice(), getSession());
         if (dbDevice == null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -227,7 +227,6 @@ public boolean usesBluetoothClassic(){
     boolean supportsStepCounter();
     boolean supportsSpeedzones();
     boolean supportsActivityTabs();
-    boolean supportsRestingCalories();
     boolean supportsActiveCalories();
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityUser.java
Patch:
@@ -44,7 +44,6 @@ public class ActivityUser {
     private int activityUserSleepDurationGoal;
     private int activityUserStepsGoal;
     private int activityUserCaloriesBurntGoal;
-    private int activityUserActiveCaloriesBurntGoal;
     private int activityUserDistanceGoalMeters;
     private int activityUserActiveTimeGoalMinutes;
     private int activityUserStandingTimeGoalHours;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/RestingMetabolicRateSample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2024 Severin von Wnuck-Lipinski
+/*  Copyright (C) 2024 José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DashboardUtils.java
Patch:
@@ -68,7 +68,7 @@ public static int getActiveCaloriesTotal(DashboardFragment.DashboardData dashboa
         int totalActiveCalories = 0;
         try (DBHandler dbHandler = GBApplication.acquireDB()) {
             for (GBDevice dev : devices) {
-                if ((dashboardData.showAllDevices || dashboardData.showDeviceList.contains(dev.getAddress())) && dev.getDeviceCoordinator().supportsActivityTracking()) {
+                if ((dashboardData.showAllDevices || dashboardData.showDeviceList.contains(dev.getAddress())) && dev.getDeviceCoordinator().supportsActiveCalories()) {
                     totalActiveCalories += (int) getDailyTotals(dev, dbHandler, dashboardData.timeTo).getActiveCalories();
                 }
             }
@@ -83,7 +83,7 @@ public static int getRestingCaloriesTotal(DashboardFragment.DashboardData dashbo
         int totalRestingCalories = 0;
         try (DBHandler dbHandler = GBApplication.acquireDB()) {
             for (GBDevice dev : devices) {
-                if ((dashboardData.showAllDevices || dashboardData.showDeviceList.contains(dev.getAddress())) && dev.getDeviceCoordinator().supportsActivityTracking()) {
+                if ((dashboardData.showAllDevices || dashboardData.showDeviceList.contains(dev.getAddress())) && dev.getDeviceCoordinator().supportsActiveCalories()) {
                     totalRestingCalories += (int) getDailyTotals(dev, dbHandler, dashboardData.timeTo).getRestingCalories();
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -283,7 +283,7 @@ public TimeSampleProvider<? extends WeightSample> getWeightSampleProvider(GBDevi
 
     @Override
     public TimeSampleProvider<? extends RestingMetabolicRateSample> getRestingMetabolicRateProvider(final GBDevice device, final DaoSession session) {
-        return null; // FIXME return new DefaultRestingMetabolicRateProvider(device, session);
+        return new DefaultRestingMetabolicRateProvider(device, session);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/dashboard/GaugeDrawer.java
Patch:
@@ -233,7 +233,7 @@ public static Bitmap drawCircleGaugeSegmented(int width, int barWidth, final int
             float sweepAngleDegrees = segments[i] * 360;
 
             if (gapBetweenSegments) {
-                sweepAngleDegrees -= 2;
+                sweepAngleDegrees -= 1;
             }
 
             canvas.drawArc(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsNotificationService.java
Patch:
@@ -25,6 +25,7 @@
 import androidx.annotation.Nullable;
 
 import org.slf4j.Logger;
+
 import org.slf4j.LoggerFactory;
 
 import java.io.ByteArrayOutputStream;
@@ -555,8 +556,7 @@ private static byte[] encodeBitmap(final Bitmap bmp, final BitmapFormat format,
         // but the encoding seems to actually be the same...?
         // The TGA needs to have this ID, or the band does not accept it
         final byte[] tgaIdBytes = new byte[46];
-        //System.arraycopy(format.getTgaId().getBytes(StandardCharsets.UTF_8), 0, tgaIdBytes, 0, 5);
-        System.arraycopy(GB.hexStringToByteArray("534F4D486601"), 0, tgaIdBytes, 0, 6);
+        System.arraycopy(format.getTgaId().getBytes(StandardCharsets.UTF_8), 0, tgaIdBytes, 0, 5);
 
         return BitmapUtil.convertToTgaRGB565(bmp, width, height, tgaIdBytes);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/gbx100/CasioGBX100DeviceSupport.java
Patch:
@@ -300,7 +300,7 @@ private void showNotification(byte icon, String sender, String title, String sub
         // If not a call or email, check the sender and if null, promote the title and message preview
         // as subtitle
         if (showMessagePreview && icon != CasioConstants.CATEGORY_INCOMING_CALL && icon != CasioConstants.CATEGORY_EMAIL) {
-            if (!StringUtils.isNullOrEmpty(sender)) {
+            if (StringUtils.isNullOrEmpty(sender)) {
                 // Shift title to sender slot
                 sender = title;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/fieldDefinitions/FieldDefinitionTemperature.java
Patch:
@@ -6,6 +6,7 @@
 public class FieldDefinitionTemperature extends FieldDefinition {
 
     public FieldDefinitionTemperature(int localNumber, int size, BaseType baseType, String name) {
+        // #4313 - We do a "wrong" conversion to celsius on purpose
         super(localNumber, size, baseType, name, 1, -273);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/http/WeatherHandler.java
Patch:
@@ -273,7 +273,8 @@ private static WeatherValue getTemperature(final int kelvin, final String unit)
                 return new WeatherValue(kelvin, "KELVIN");
             case "CELSIUS":
             default:
-                return new WeatherValue(kelvin - 273.15, "CELSIUS");
+                // #4313 - We do a "wrong" conversion to celsius on purpose
+                return new WeatherValue(kelvin - 273, "CELSIUS");
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/BodyEnergyFragment.java
Patch:
@@ -97,14 +97,14 @@ protected void init() {
 
     @Override
     protected BodyEnergyData refreshInBackground(ChartsHost chartsHost, DBHandler db, GBDevice device) {
-        String formattedDate = new SimpleDateFormat("E, MMM dd").format(getEndDate());
-        mDateView.setText(formattedDate);
         List<? extends BodyEnergySample> samples = getBodyEnergySamples(db, device, getTSStart(), getTSEnd());
         return new BodyEnergyData(samples);
     }
 
     @Override
     protected void updateChartsnUIThread(BodyEnergyData bodyEnergyData) {
+        String formattedDate = new SimpleDateFormat("E, MMM dd").format(getEndDate());
+        mDateView.setText(formattedDate);
 
         List<Entry> lineEntries = new ArrayList<>();
         final List<ILineDataSet> lineDataSets = new ArrayList<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/StepsDailyFragment.java
Patch:
@@ -102,8 +102,6 @@ public String getTitle() {
     protected StepsDailyFragment.StepsData refreshInBackground(ChartsHost chartsHost, DBHandler db, GBDevice device) {
         Calendar day = Calendar.getInstance();
         day.setTime(chartsHost.getEndDate());
-        String formattedDate = new SimpleDateFormat("E, MMM dd").format(chartsHost.getEndDate());
-        mDateView.setText(formattedDate);
         List<StepsDay> stepsDayList = getMyStepsDaysData(db, day, device);
         final StepsDay stepsDay;
         if (stepsDayList.isEmpty()) {
@@ -118,6 +116,9 @@ protected StepsDailyFragment.StepsData refreshInBackground(ChartsHost chartsHost
 
     @Override
     protected void updateChartsnUIThread(StepsDailyFragment.StepsData stepsData) {
+        String formattedDate = new SimpleDateFormat("E, MMM dd").format(getEndDate());
+        mDateView.setText(formattedDate);
+
         final int width = (int) TypedValue.applyDimension(
                 TypedValue.COMPLEX_UNIT_DIP,
                 300,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/VO2MaxFragment.java
Patch:
@@ -118,8 +118,6 @@ protected void init() {
 
     @Override
     protected VO2MaxData refreshInBackground(ChartsHost chartsHost, DBHandler db, GBDevice device) {
-        String formattedDate = new SimpleDateFormat("E, MMM dd").format(getEndDate());
-        mDateView.setText(formattedDate);
         List<VO2MaxRecord> records = new ArrayList<>();
         int tsEnd = getTSEnd();
         Calendar day = Calendar.getInstance();
@@ -145,7 +143,9 @@ protected VO2MaxData refreshInBackground(ChartsHost chartsHost, DBHandler db, GB
 
     @Override
     protected void updateChartsnUIThread(VO2MaxData vo2MaxData) {
-        TimestampTranslation tsTranslation = new TimestampTranslation();
+        String formattedDate = new SimpleDateFormat("E, MMM dd").format(getEndDate());
+        mDateView.setText(formattedDate);
+
         List<Entry> runningEntries = new ArrayList<>();
         List<Entry> cyclingEntries = new ArrayList<>();
         vo2MaxData.records.forEach((record) -> {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -454,6 +454,9 @@ private XiaomiSimpleActivityParser getOutdoorCyclingParser(final XiaomiActivityF
             case 5:
                 headerSize = 6;
                 break;
+            case 6:
+                headerSize = 7;
+                break;
             default:
                 LOG.warn("Unable to parse workout summary version {}", fileId.getVersion());
                 return null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -400,15 +400,12 @@ public void setState(State state) {
     }
 
     private void unsetDynamicState() {
-
         setBatteryLevel(BATTERY_UNKNOWN, 0);
         setBatteryLevel(BATTERY_UNKNOWN, 1);
         setBatteryLevel(BATTERY_UNKNOWN, 2);
         setBatteryState(UNKNOWN, 0);
         setBatteryState(UNKNOWN, 1);
         setBatteryState(UNKNOWN, 2);
-        setFirmwareVersion(null);
-        setFirmwareVersion2(null);
         setRssi(RSSI_UNKNOWN);
         resetExtraInfos();
         if (mBusyTask != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWeatherManager.java
Patch:
@@ -277,6 +277,7 @@ public void handleAsyncMessage(HuaweiPacket response) {
         if (response.getTlv().getInteger(0x7f, -1) == 0x000186AA) {
             // Send weather
             final ArrayList<WeatherSpec> specs = new ArrayList<>(nodomain.freeyourgadget.gadgetbridge.model.Weather.getInstance().getWeatherSpecs());
+            // TODO: could be empty, not really an issue but we need to check what to send back in that case
             this.sendWeather(specs.get(0));
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWorkoutGbParser.java
Patch:
@@ -123,6 +123,7 @@ public enum HuaweiActivityType {
         INDOOR_CYCLE(7, ActivityKind.INDOOR_CYCLING),
         OPEN_WATER_SWIM(8, ActivityKind.SWIMMING_OPENWATER),
         INDOOR_WALK(13, ActivityKind.INDOOR_WALKING),
+        HIKING(14, ActivityKind.HIKING),
         JUMP_ROPING(21, ActivityKind.JUMP_ROPING),
         PING_PONG(128, ActivityKind.PINGPONG),
         BADMINTON(129, ActivityKind.BADMINTON),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWorkoutGbParser.java
Patch:
@@ -113,6 +113,7 @@ public enum HuaweiActivityType {
         RUNNING(1, ActivityKind.RUNNING),
         WALKING(2, ActivityKind.WALKING),
         CYCLING(3, ActivityKind.CYCLING),
+        MOUNTAIN_HIKE(4, ActivityKind.MOUNTAIN_HIKE),
         INDOOR_RUN(5, ActivityKind.INDOOR_RUNNING),
         POOL_SWIM(6, ActivityKind.POOL_SWIM),
         INDOOR_CYCLE(7, ActivityKind.INDOOR_CYCLING),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetNotificationConstraintsRequest.java
Patch:
@@ -24,6 +24,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiPacket;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.Notifications;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.Notifications.NotificationConstraints;
+import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huawei.HuaweiSupportProvider;
 
 public class GetNotificationConstraintsRequest extends Request {
@@ -37,7 +38,8 @@ public GetNotificationConstraintsRequest(HuaweiSupportProvider support) {
 
     @Override
     protected boolean requestSupported() {
-        return supportProvider.getHuaweiCoordinator().supportsNotificationAlert() && supportProvider.getProtocolVersion() == 2;
+        return supportProvider.getHuaweiCoordinator().supportsNotificationAlert() && supportProvider.getProtocolVersion() == 2
+                && supportProvider.getCoordinator().getDeviceType() != DeviceType.HUAWEIBANDAW70; // Bit of a workaround, there is probably some capabilities this actually depends on
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiInstallHandler.java
Patch:
@@ -24,6 +24,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.util.Arrays;
 import java.util.List;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
@@ -91,7 +92,7 @@ private boolean checkMediaCompatibility(HuaweiMusicUtils.MusicCapabilities capab
         LOG.info("bitrate {}", restrictions.bitrate);
         LOG.info("channels {}", restrictions.channels);
         LOG.info("musicEncode {}", restrictions.musicEncode);
-        LOG.info("sampleRate {}", restrictions.sampleRate);
+        LOG.info("sampleRate {}", Arrays.toString(restrictions.sampleRates));
         LOG.info("unknownBitrate {}", restrictions.unknownBitrate);
 
         if(currentMusicInfo.getChannels() > restrictions.channels) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiInstallHandler.java
Patch:
@@ -95,7 +95,7 @@ private boolean checkMediaCompatibility(HuaweiMusicUtils.MusicCapabilities capab
         LOG.info("unknownBitrate {}", restrictions.unknownBitrate);
 
         if(currentMusicInfo.getChannels() > restrictions.channels) {
-            LOG.error("Not supported channels couunt {} > {}", currentMusicInfo.getChannels(), restrictions.channels);
+            LOG.error("Not supported channels count {} > {}", currentMusicInfo.getChannels(), restrictions.channels);
             return false;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiUploadManager.java
Patch:
@@ -75,7 +75,7 @@ public void setFileUploadParams(FileUploadParams params) {
             this.fileUploadParams = params;
         }
 
-        public short getUnitSize() {
+        public int getUnitSize() {
             return fileUploadParams.unit_size;
         }
 

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -1411,7 +1411,7 @@ private static Entity addHuaweiWorkoutDataSample(Schema schema, Entity summaryEn
         workoutDataSample.addByteProperty("midFootLanding").notNull();
         workoutDataSample.addByteProperty("backFootLanding").notNull();
         workoutDataSample.addByteProperty("eversionAngle").notNull();
-        workoutDataSample.addByteProperty("swolf").notNull();
+        workoutDataSample.addShortProperty("swolf").notNull();
         workoutDataSample.addShortProperty("strokeRate").notNull();
 
         workoutDataSample.addByteArrayProperty("dataErrorHex");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -231,6 +231,8 @@ private XiaomiSimpleActivityParser getFreestyleParser(final XiaomiActivityFileId
         final int headerSize;
         switch (version) {
             case 8:
+            case 9:
+            case 10:
                 headerSize = 6;
                 break;
             default:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityKind.java
Patch:
@@ -293,6 +293,8 @@ public enum ActivityKind {
     BIATHLON(0x040000ee, R.string.activity_type_biathlon),
     BUNGEE_JUMPING(0x040000ef, R.string.activity_type_bungee_jumping),
     ORIENTEERING(0x040000f0, R.string.activity_type_orienteering),
+    TREKKING(0x040000f1, R.string.activity_type_trekking),
+    TRAIL_RUN(0x040000f2, R.string.activity_type_trail_run),
     ;
 
     private final int code;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetBatteryLevelRequest.java
Patch:
@@ -25,10 +25,10 @@
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiPacket;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.DeviceConfig;
+import nodomain.freeyourgadget.gadgetbridge.model.BatteryState;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huawei.HuaweiSupportProvider;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
@@ -61,6 +61,7 @@ protected void processResponse() throws ResponseParseException {
         getDevice().setBatteryLevel(batteryLevel);
 
         GBDeviceEventBatteryInfo batteryInfo = new GBDeviceEventBatteryInfo();
+        batteryInfo.state = BatteryState.BATTERY_NORMAL;
         batteryInfo.level = (int)batteryLevel & 0xff;
         this.supportProvider.evaluateGBDeviceEvent(batteryInfo);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -383,6 +383,7 @@ private XiaomiSimpleActivityParser getOutdoorWalkingV2Parser(final XiaomiActivit
                 headerSize = 7;
                 break;
             case 5:
+            case 6:
                 headerSize = 9;
                 break;
             default:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/colmi/ColmiR0xDeviceSupport.java
Patch:
@@ -343,6 +343,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacte
             // Big data responses can arrive in multiple packets that need to be concatenated
             if (bigDataPacket != null) {
                 LOG.debug("Received {} bytes on big data characteristic while waiting for follow-up data", value.length);
+                bigDataPacket.rewind();
                 ByteBuffer concatenated = ByteBuffer
                         .allocate(bigDataPacket.limit() + value.length)
                         .put(bigDataPacket)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/GadgetbridgeUpdate_83.java
Patch:
@@ -32,7 +32,7 @@ public void upgradeSchema(final SQLiteDatabase db) {
                     + HuaweiWorkoutPaceSampleDao.Properties.Pace.columnName + ","
                     + HuaweiWorkoutPaceSampleDao.Properties.PointIndex.columnName + ","
                     + HuaweiWorkoutPaceSampleDao.Properties.Correction.columnName + ") "
-                    + " SELECT WORKOUT_ID, 0, DISTANCE, TYPE, PACE, 0, CORRECTION  FROM " +HuaweiWorkoutPaceSampleDao.TABLENAME + "_temp;";
+                    + " SELECT WORKOUT_ID, -1, DISTANCE, TYPE, PACE, 0, CORRECTION  FROM " +HuaweiWorkoutPaceSampleDao.TABLENAME + "_temp;";
 
             db.execSQL(MIGATE_DATA);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetWorkoutPaceRequest.java
Patch:
@@ -77,7 +77,7 @@ protected void processResponse() throws ResponseParseException {
         LOG.info("Block num: " + packet.blocks.size());
         LOG.info("Blocks   : " + Arrays.toString(packet.blocks.toArray()));
 
-        supportProvider.addWorkoutPaceData(this.databaseId, packet.blocks);
+        supportProvider.addWorkoutPaceData(this.databaseId, packet.blocks, packet.paceNumber);
 
         if (this.workoutNumbers.paceCount > this.number + 1) {
             GetWorkoutPaceRequest nextRequest = new GetWorkoutPaceRequest(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiFWHelper.java
Patch:
@@ -25,6 +25,7 @@
 import java.io.BufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.regex.Pattern;
 
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
@@ -140,9 +141,7 @@ private boolean parseAsWatchface() {
             return false;
         }
 
-        try {
-            Integer.parseInt(id);
-        } catch (final Exception e) {
+        if (!Pattern.matches("^\\d+$", id)) {
             LOG.warn("Id {} not a number", id);
             return false;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ActivitySummariesAdapter.java
Patch:
@@ -290,6 +290,9 @@ public void fill(final int position, final BaseActivitySummary summary, final bo
                 ActivityKind activityKind = ActivityKind.fromCode(stats.activityIcon);
                 activityIconView.setImageResource(activityKind.getIcon());
                 activityIconBigView.setImageResource(activityKind.getIcon());
+            } else {
+                activityIconView.setImageResource(R.drawable.ic_activity_unknown_small);
+                activityIconBigView.setImageResource(R.drawable.ic_activity_unknown_small);
             }
 
             activityKindView.setText(activityName);

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupportTest.java
Patch:
@@ -363,9 +363,9 @@ public void TestFitFileDevelopersField() {
                 "FitFileId{manufacturer=15, type=ACTIVITY, product=9001, serial_number=1701}, " +
                 "FitDeveloperData{application_id=[1,1,2,3,5,8,13,21,34,55,89,144,233,121,98,219], developer_data_index=0}, " +
                 "FitFieldDescription{developer_data_index=0, field_definition_number=0, fit_base_type_id=1, field_name=doughnuts_earned, units=doughnuts}, " +
-                "FitRecord{heart_rate=140, unknown_4(UINT8/1)=88, distance=510.0, speed=47.488, doughnuts_earned=1}, " +
-                "FitRecord{heart_rate=143, unknown_4(UINT8/1)=90, distance=2080.0, speed=36.416, doughnuts_earned=2}, " +
-                "FitRecord{heart_rate=144, unknown_4(UINT8/1)=92, distance=3710.0, speed=35.344, doughnuts_earned=3}" +
+                "FitRecord{heart_rate=140, cadence=88, distance=510.0, speed=47.488, doughnuts_earned=1}, " +
+                "FitRecord{heart_rate=143, cadence=90, distance=2080.0, speed=36.416, doughnuts_earned=2}, " +
+                "FitRecord{heart_rate=144, cadence=92, distance=3710.0, speed=35.344, doughnuts_earned=3}" +
                 "]";
 
         FitFile fitFile = FitFile.parseIncoming(fileContents);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitRecord.java
Patch:
@@ -136,7 +136,7 @@ public ActivityPoint toActivityPoint() {
             activityPoint.setHeartRate(getHeartRate());
         }
         if (getEnhancedSpeed() != null) {
-            activityPoint.setSpeed(getEnhancedSpeed());
+            activityPoint.setSpeed(getEnhancedSpeed().floatValue());
         }
         return activityPoint;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/colmi/ColmiR0xDeviceSupport.java
Patch:
@@ -553,7 +553,7 @@ public void onPowerOff() {
     @Override
     public void onReset(int flags) {
         if ((flags & GBDeviceProtocol.RESET_FLAGS_FACTORY_RESET) != 0) {
-            byte[] resetPacket = buildPacket(new byte[]{ColmiR0xConstants.CMD_FACTORY_RESET, 0x01});
+            byte[] resetPacket = buildPacket(new byte[]{ColmiR0xConstants.CMD_FACTORY_RESET, 0x66, 0x66});
             LOG.info("Factory reset request sent: {}", StringUtils.bytesToHex(resetPacket));
             sendWrite("resetRequest", resetPacket);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/Widget.java
Patch:
@@ -142,7 +142,7 @@ private void updateAppWidget(Context context, AppWidgetManager appWidgetManager,
         views.setProgressBar(R.id.todaywidget_distance_progress, distanceGoal, steps * stepLength, false);
         views.setViewVisibility(R.id.todaywidget_battery_icon, View.GONE);
         if (deviceForWidget != null) {
-            String status = String.format("%1s", deviceForWidget.getStateString());
+            String status = String.format("%1s", deviceForWidget.getStateString(context));
             if (deviceForWidget.isConnected()) {
                 if (deviceForWidget.getBatteryLevel() > 1) {
                     views.setViewVisibility(R.id.todaywidget_battery_icon, View.VISIBLE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -94,7 +94,7 @@ public void onReceive(Context context, Intent intent) {
                             GB.toast(FwAppInstallerActivity.this, getString(R.string.connecting), Toast.LENGTH_SHORT, GB.INFO);
                             connect();
                         } else {
-                            setInfoText(getString(R.string.fwappinstaller_connection_state, device.getStateString()));
+                            setInfoText(getString(R.string.fwappinstaller_connection_state, device.getStateString(context)));
                         }
                     } else {
                         validateInstallation();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -344,7 +344,7 @@ public boolean onLongClick(View v) {
             holder.deviceStatusLabel.setText(device.getBusyTask());
             holder.busyIndicator.setVisibility(View.VISIBLE);
         } else {
-            holder.deviceStatusLabel.setText(device.getStateString());
+            holder.deviceStatusLabel.setText(device.getStateString(context));
             holder.busyIndicator.setVisibility(View.INVISIBLE);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -257,7 +257,7 @@ public void onReceive(Context context, Intent intent) {
                         String data = String.valueOf(intent.getExtras().get("DATA"));
                         BtLEQueue queue = getQueue();
                         if (queue==null) {
-                            LOG.warn("BANGLEJS_COMMAND_TX received, but getQueue()==null (state=" + gbDevice.getStateString() + ")");
+                            LOG.warn("BANGLEJS_COMMAND_TX received, but getQueue()==null (state=" + gbDevice.getStateString(context) + ")");
                         } else {
                             try {
                                 TransactionBuilder builder = performInitialized("TX");
@@ -270,7 +270,7 @@ public void onReceive(Context context, Intent intent) {
                         break;
                     }
                     case GBDevice.ACTION_DEVICE_CHANGED: {
-                        String stateString = (gbDevice!=null ? gbDevice.getStateString():"");
+                        String stateString = (gbDevice!=null ? gbDevice.getStateString(context):"");
                         if (!stateString.equals(lastStateString)) {
                           lastStateString = stateString;
                           LOG.info("ACTION_DEVICE_CHANGED " + stateString);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AndroidUtils.java
Patch:
@@ -111,6 +111,8 @@ public static void setLanguage(Context context, Locale language) {
 
         // FIXME: I have no idea what I am doing
         context.getResources().updateConfiguration(config, context.getResources().getDisplayMetrics());
+
+        Locale.setDefault(language);
     }
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -195,7 +195,7 @@ public static Notification createNotification(List<GBDevice> devices, Context co
         }else if(devices.size() == 1) {
             GBDevice device = devices.get(0);
             String deviceName = device.getAliasOrName();
-            String text = device.getStateString();
+            String text = device.getStateString(context);
 
             text += buildDeviceBatteryString(context, device);
 
@@ -242,7 +242,7 @@ public static Notification createNotification(List<GBDevice> devices, Context co
                 anyDeviceSupportesActivityDataFetching |= device.getDeviceCoordinator().supportsActivityDataFetching();
 
                 String deviceName = device.getAliasOrName();
-                String text = device.getStateString();
+                String text = device.getStateString(context);
                 text += buildDeviceBatteryString(context, device);
                 contentText.append(deviceName).append(" (").append(text).append(")<br>");
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/calendar/CalendarManager.java
Patch:
@@ -252,7 +252,7 @@ private LocalDate parseBirthday(final String birthdayStr) {
             return null;
         }
 
-        if (birthday.isAfter(now)) {
+        if (birthday.isAfter(now) || birthday.isEqual(now)) {
             return birthday;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -257,14 +257,17 @@ private void handleGBDeviceEvent(final GBDeviceEventFindPhone deviceEvent) {
                 break;
             case VIBRATE:
                 final Intent intentVibrate = new Intent(FindPhoneActivity.ACTION_VIBRATE);
+                intentVibrate.setPackage(BuildConfig.APPLICATION_ID);
                 LocalBroadcastManager.getInstance(context).sendBroadcast(intentVibrate);
                 break;
             case RING:
                 final Intent intentRing = new Intent(FindPhoneActivity.ACTION_RING);
+                intentRing.setPackage(BuildConfig.APPLICATION_ID);
                 LocalBroadcastManager.getInstance(context).sendBroadcast(intentRing);
                 break;
             case STOP:
                 final Intent intentStop = new Intent(FindPhoneActivity.ACTION_FOUND);
+                intentStop.setPackage(BuildConfig.APPLICATION_ID);
                 LocalBroadcastManager.getInstance(context).sendBroadcast(intentStop);
                 break;
             default:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -761,6 +761,7 @@ protected void handleBackgroundCharacteristic(BluetoothGattCharacteristic charac
                     log("Button press on button " + button);
 
                     Intent i = new Intent(QHYBRID_EVENT_BUTTON_PRESS);
+                    i.setPackage(BuildConfig.APPLICATION_ID);
                     i.putExtra("BUTTON", button);
                     getContext().sendBroadcast(i);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/misfit/MisfitWatchAdapter.java
Patch:
@@ -46,6 +46,7 @@
 import java.util.Queue;
 import java.util.TimeZone;
 
+import nodomain.freeyourgadget.gadgetbridge.BuildConfig;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;
 import nodomain.freeyourgadget.gadgetbridge.devices.qhybrid.NotificationConfiguration;
@@ -342,6 +343,7 @@ private boolean handleButtonCharacteristic(BluetoothGattCharacteristic character
             logger.debug("Button press on button " + button);
 
             Intent i = new Intent(QHYBRID_EVENT_BUTTON_PRESS);
+            i.setPackage(BuildConfig.APPLICATION_ID);
             i.putExtra("BUTTON", button);
 
             //ByteBuffer buffer = ByteBuffer.allocate(16);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiGpsParser.java
Patch:
@@ -89,9 +89,8 @@ public static GpsPoint[] parseHuaweiGps(byte[] data) {
             point.longitude = (lon / 6383807.0d / Math.cos(lat_start) + lon_start) / 0.017453292519943d;
             point.altitudeSupported = alt_support;
             if (alt_support) {
-                // TODO: not sure about this
-                float alt_delta = buffer.getFloat();
-                alt = alt + alt_delta;
+                alt = buffer.getShort();
+                buffer.getShort(); // Unknown values
                 point.altitude = alt;
             }
             retv.add(point);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/p2p/HuaweiP2PCalendarService.java
Patch:
@@ -178,7 +178,7 @@ private JsonObject calendarEventToJson(CalendarEvent calendarEvent) {
         ret.addProperty("all_day", calendarEvent.isAllDay() ? 1 : 0);
         ret.addProperty("calendar_color", calendarEvent.getColor());
         ret.addProperty("calendar_displayName", truncateToHexBytes(calendarEvent.getCalName(), 64));
-        ret.addProperty("calendar_id", valueOrEmpty(calendarEvent.getCalendarId(), ""));
+        ret.addProperty("calendar_id", valueOrEmpty(calendarEvent.getCalendarId(), "0"));
         ret.addProperty("description", truncateToHexBytes(calendarEvent.getDescription(), 512));
         ret.addProperty("dtend", calendarEvent.getEnd());
         ret.addProperty("dtstart", calendarEvent.getBegin());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/calendar/CalendarManager.java
Patch:
@@ -224,7 +224,7 @@ public List<CalendarEvent> getBirthdays(final int lookaheadDays) {
                         0,
                         true,
                         null,
-                        null,
+                        CalendarContract.ACCOUNT_TYPE_LOCAL,
                         null,
                         null
                 ));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/entities/AbstractColmiActivitySample.java
Patch:
@@ -28,7 +28,7 @@ public void setRawIntensity(int rawIntensity) {
 
     @Override
     public int getRawIntensity() {
-        if (rawIntensity > 0) {
+        if (rawIntensity != 0) {
             return rawIntensity;
         } else {
             return getCalories();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/calendar/CalendarManager.java
Patch:
@@ -224,6 +224,9 @@ public List<CalendarEvent> getBirthdays() {
                         mContext.getString(R.string.pref_contacts_title),
                         0,
                         true,
+                        null,
+                        null,
+                        null,
                         null
                 ));
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/FitImporter.java
Patch:
@@ -362,7 +362,8 @@ private void persistActivitySamples() {
         for (final int ts : activitySamplesPerTimestamp.keySet()) {
             if (prevTs > 0 && ts - prevTs > 60) {
                 // Fill gaps between samples
-                for (int i = prevTs; i < ts; i += 60) {
+                LOG.debug("Filling gap between {} and {}", prevTs, ts);
+                for (int i = prevTs + 60; i < ts; i += 60) {
                     final GarminActivitySample sample = new GarminActivitySample();
                     sample.setTimestamp(i);
                     sample.setRawKind(ts - prevTs > THRESHOLD_NOT_WORN ? ActivityKind.NOT_WORN.getCode() : prevActivityKind);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/GPSCoordinate.java
Patch:
@@ -18,6 +18,8 @@
 
 import android.location.Location;
 
+import androidx.annotation.NonNull;
+
 import java.math.BigDecimal;
 import java.math.RoundingMode;
 import java.util.Comparator;
@@ -111,6 +113,7 @@ private String formatLocation(double value) {
         return new BigDecimal(value).setScale(8, RoundingMode.HALF_UP).toPlainString();
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "lon: " + formatLocation(longitude) + ", lat: " + formatLocation(latitude) + ", alt: " + formatLocation(altitude) + "m";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendWeatherDeviceRequest.java
Patch:
@@ -29,6 +29,7 @@ public SendWeatherDeviceRequest(HuaweiSupportProvider support) {
         super(support);
         this.serviceId = Weather.id;
         this.commandId = 0x04;
+        this.addToResponse = false; // Handled in async response
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesChartFragment.java
Patch:
@@ -283,8 +283,8 @@ private DefaultChartsData<LineData> buildHeartRateChart(final List<ActivityPoint
                         return activitySamplesData;
                     }
                 }
-                // We failed to find a heart rate dataset, append ours
-                dataSets.add(heartRateSet);
+                // We failed to find a heart rate dataset. We can't append ours, or it will crash
+                //dataSets.add(heartRateSet);
                 return activitySamplesData;
             } else {
                 final LineData lineData = new LineData(Collections.singletonList(heartRateSet));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiBRCoordinator.java
Patch:
@@ -210,7 +210,7 @@ public InstallHandler findInstallHandler(Uri uri, Context context) {
 
     @Override
     public ActivitySummaryParser getActivitySummaryParser(final GBDevice device, final Context context) {
-        return new HuaweiWorkoutGbParser(device, context);
+        return new HuaweiWorkoutGbParser(device);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiLECoordinator.java
Patch:
@@ -219,7 +219,7 @@ public InstallHandler findInstallHandler(Uri uri, Context context) {
 
     @Override
     public ActivitySummaryParser getActivitySummaryParser(final GBDevice device, final Context context) {
-        return new HuaweiWorkoutGbParser(device, context);
+        return new HuaweiWorkoutGbParser(device);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiSettingsCustomizer.java
Patch:
@@ -70,7 +70,7 @@ public void onPreferenceChange(final Preference preference, final DeviceSpecific
         if (preference.getKey().equals("huawei_reparse_workout_data")) {
             if (((SwitchPreferenceCompat) preference).isChecked()) {
                 GB.toast("Starting workout reparse", Toast.LENGTH_SHORT, 0);
-                new HuaweiWorkoutGbParser(handler.getDevice(), handler.getContext()).parseAllWorkouts();
+                new HuaweiWorkoutGbParser(handler.getDevice()).parseAllWorkouts();
                 GB.toast("Workout reparse is complete", Toast.LENGTH_SHORT, 0);
 
                 ((SwitchPreferenceCompat) preference).setChecked(false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetWorkoutDataRequest.java
Patch:
@@ -112,7 +112,7 @@ protected void processResponse() throws ResponseParseException {
             nextRequest.setFinalizeReq(this.finalizeReq);
             this.nextRequest(nextRequest);
         } else {
-            new HuaweiWorkoutGbParser(getDevice(), getContext()).parseWorkout(this.databaseId);
+            new HuaweiWorkoutGbParser(getDevice()).parseWorkout(this.databaseId);
 
             if (!remainder.isEmpty()) {
                 GetWorkoutTotalsRequest nextRequest = new GetWorkoutTotalsRequest(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetWorkoutPaceRequest.java
Patch:
@@ -89,7 +89,7 @@ protected void processResponse() throws ResponseParseException {
             nextRequest.setFinalizeReq(this.finalizeReq);
             this.nextRequest(nextRequest);
         } else {
-            new HuaweiWorkoutGbParser(getDevice(), getContext()).parseWorkout(this.databaseId);
+            new HuaweiWorkoutGbParser(getDevice()).parseWorkout(this.databaseId);
 
             if (!remainder.isEmpty()) {
                 GetWorkoutTotalsRequest nextRequest = new GetWorkoutTotalsRequest(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetWorkoutTotalsRequest.java
Patch:
@@ -103,7 +103,7 @@ protected void processResponse() throws ResponseParseException {
             nextRequest.setFinalizeReq(this.finalizeReq);
             this.nextRequest(nextRequest);
         } else {
-            new HuaweiWorkoutGbParser(getDevice(), getContext()).parseWorkout(databaseId);
+            new HuaweiWorkoutGbParser(getDevice()).parseWorkout(databaseId);
 
             if (!remainder.isEmpty()) {
                 GetWorkoutTotalsRequest nextRequest = new GetWorkoutTotalsRequest(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummaryDetail.java
Patch:
@@ -768,7 +768,7 @@ private boolean itemHasGps() {
             }
         }
         final String summaryData = currentItem.getSummaryData();
-        if (summaryData.contains(INTERNAL_HAS_GPS)) {
+        if (summaryData != null && summaryData.contains(INTERNAL_HAS_GPS)) {
             try {
                 final JSONObject summaryDataObject = new JSONObject(summaryData);
                 final JSONObject internalHasGps = summaryDataObject.getJSONObject(INTERNAL_HAS_GPS);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/XiaomiSimpleActivityParser.java
Patch:
@@ -101,6 +101,9 @@ public void parse(final BaseActivitySummary summary, final ByteBuffer buf) {
             } else if (dataEntry.getKey().equals(XIAOMI_WORKOUT_TYPE)) {
                 // TODO use XiaomiWorkoutType
                 switch (value.intValue()) {
+                    case 1:
+                        summary.setActivityKind(ActivityKind.OUTDOOR_WALKING.getCode());
+                        break;
                     case 2:
                         summary.setActivityKind(ActivityKind.WALKING.getCode());
                         break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/asteroidos/AsteroidOSDeviceSupport.java
Patch:
@@ -52,6 +52,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.profiles.IntentListener;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.profiles.battery.BatteryInfoProfile;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.lefun.requests.SetTimeRequest;
 
 public class AsteroidOSDeviceSupport extends AbstractBTLEDeviceSupport {
     private static final Logger LOG = LoggerFactory.getLogger(AsteroidOSDeviceSupport.class);
@@ -112,6 +113,8 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
 
         batteryInfoProfile.requestBatteryInfo(builder);
         batteryInfoProfile.enableNotify(builder, true);
+        // Gadgetbridge doesn't seem to do this itself, so we force it to set its time
+        onSetTime();
         return builder;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/DailyDetailsParser.java
Patch:
@@ -63,6 +63,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
         }
 
         final ByteBuffer buf = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
+        buf.limit(buf.limit() - 4); // discard crc at the end
         buf.get(new byte[7]); // skip fileId bytes
         final byte fileIdPadding = buf.get();
         if (fileIdPadding != 0) {
@@ -80,7 +81,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
         timestamp.setTime(fileId.getTimestamp());
 
         final List<XiaomiActivitySample> samples = new ArrayList<>();
-        while (buf.position() < buf.limit() - 4 /* crc at the end */) {
+        while (buf.position() < buf.limit()) {
             complexParser.reset();
 
             final XiaomiActivitySample sample = new XiaomiActivitySample();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/ManualSamplesParser.java
Patch:
@@ -51,6 +51,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
         }
 
         final ByteBuffer buf = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
+        buf.limit(buf.limit() - 4); // discard crc at the end
         buf.get(new byte[7]); // skip fileId bytes
         final byte fileIdPadding = buf.get();
         if (fileIdPadding != 0) {
@@ -67,7 +68,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
 
         final List<XiaomiManualSample> samples = new ArrayList<>();
 
-        while (buf.position() < buf.limit() - 4 /* crc at the end */) {
+        while (buf.position() < buf.limit()) {
             final int timestamp = buf.getInt();
             final int type = buf.get() & 0xff;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutGpsParser.java
Patch:
@@ -68,25 +68,24 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
         }
 
         final ByteBuffer buf = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
+        buf.limit(buf.limit() - 4); // discard crc at the end
         buf.get(new byte[7]); // skip fileId bytes
         final byte fileIdPadding = buf.get();
         if (fileIdPadding != 0) {
             LOG.warn("Expected 0 padding after fileId, got {} - parsing might fail", fileIdPadding);
         }
-
         final byte[] header = new byte[headerSize];
         buf.get(header);
 
         LOG.debug("Workout gps Header: {}", GB.hexdump(header));
 
         if ((buf.limit() - buf.position()) % sampleSize != 0) {
             LOG.warn("Remaining data in the buffer is not a multiple of {}", sampleSize);
-            return false;
         }
 
         final ActivityTrack activityTrack = new ActivityTrack();
 
-        while (buf.position() < buf.limit() - 4 /* crc at the end */) {
+        while (buf.position() < buf.limit()) {
             final int ts = buf.getInt();
             final float longitude = buf.getFloat();
             final float latitude = buf.getFloat();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -183,9 +183,9 @@ public static void restart() {
         final Intent startActivity = new Intent(context, ControlCenterv2.class);
         final PendingIntent pendingIntent = PendingIntentUtils.getActivity(context, 1337, startActivity, PendingIntent.FLAG_CANCEL_CURRENT, false);
         final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        alarmManager.set(AlarmManager.RTC, System.currentTimeMillis() + 2000, pendingIntent);
+        alarmManager.set(AlarmManager.RTC, System.currentTimeMillis() + 1500, pendingIntent);
 
-        System.exit(0);
+        Runtime.getRuntime().exit(0);
     }
 
     public GBApplication() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/BackupRestoreProgressActivity.java
Patch:
@@ -117,9 +117,11 @@ public void onSuccess(final String warnings) {
                                 .setTitle(R.string.backup_restore_restart_title)
                                 .setMessage(message.toString())
                                 .setOnCancelListener((dialog -> {
+                                    finish();
                                     GBApplication.restart();
                                 }))
                                 .setPositiveButton(R.string.ok, (dialog, which) -> {
+                                    finish();
                                     GBApplication.restart();
                                 }).show();
                         break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BleIntentApi.java
Patch:
@@ -80,7 +80,7 @@ public void onReceive(Context context, Intent intent) {
             }
 
             String hexData = intent.getStringExtra("EXTRA_PAYLOAD");
-            if (hexData == null) {
+            if (isWrite && (hexData == null)) {
                 logger.error("BLE API: missing EXTRA_PAYLOAD");
                 return;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupport.java
Patch:
@@ -545,7 +545,9 @@ private void processDownloadQueue() {
                 return;
             }
 
-            // Keep the device marked as busy while we process the files asynchronously
+            // Keep the device marked as busy while we process the files asynchronously, but unset
+            // isBusyFetching so we do not start multiple processors
+            isBusyFetching = false;
 
             final FitAsyncProcessor fitAsyncProcessor = new FitAsyncProcessor(getContext(), getDevice());
             final long[] lastNotificationUpdateTs = new long[]{System.currentTimeMillis()};
@@ -569,7 +571,6 @@ public void onFinish() {
                     GB.signalActivityDataFinish(getDevice());
                     GB.updateTransferNotification(null, "", false, 100, getContext());
                     getDevice().sendDeviceUpdateIntent(getContext());
-                    isBusyFetching = false;
                 }
             });
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/FitAsyncProcessor.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.os.Handler;
-import android.widget.Toast;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -15,8 +14,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.PendingFileProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.deviceevents.FileDownloadedDeviceEvent;
-import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 public class FitAsyncProcessor {
     private static final Logger LOG = LoggerFactory.getLogger(FitAsyncProcessor.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BleIntentApi.java
Patch:
@@ -109,7 +109,7 @@ public void onReceive(Context context, Intent intent) {
     };
 
     public static boolean isEnabled(GBDevice device) {
-        Prefs devicePrefs = GBApplication.getDevicePrefs(device.getAddress());
+        Prefs devicePrefs = GBApplication.getDevicePrefs(device);
 
         boolean intentApiEnabledReadWrite = devicePrefs.getBoolean(PREFS_KEY_DEVICE_BLE_API_DEVICE_READ_WRITE, false);
         boolean intentApiEnabledNotifications = devicePrefs.getBoolean(PREFS_KEY_DEVICE_BLE_API_DEVICE_NOTIFY, false);
@@ -200,7 +200,7 @@ public void addService(BluetoothGattService service) {
     }
 
     public void handleBLEApiPrefs(){
-        Prefs devicePrefs = GBApplication.getDevicePrefs(getDevice().getAddress());
+        Prefs devicePrefs = GBApplication.getDevicePrefs(getDevice());
         this.intentApiEnabledReadWrite = devicePrefs.getBoolean(PREFS_KEY_DEVICE_BLE_API_DEVICE_READ_WRITE, false);
         this.intentApiEnabledNotifications = devicePrefs.getBoolean(PREFS_KEY_DEVICE_BLE_API_DEVICE_NOTIFY, false);
         this.intentApiEnabledDeviceState = devicePrefs.getBoolean(PREFS_KEY_DEVICE_BLE_API_DEVICE_STATE, false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -257,6 +257,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.watchs3.XiaomiWatchS3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xwatch.XWatchCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.gatt_client.BleGattClientCoordinator;
 
 /**
  * For every supported device, a device type constant must exist.
@@ -500,6 +501,7 @@ public enum DeviceType {
     COLMI_R06(ColmiR06Coordinator.class),
     SCANNABLE(ScannableDeviceCoordinator.class),
     CYCLING_SENSOR(CyclingSensorCoordinator.class),
+    BLE_GATT_CLIENT(BleGattClientCoordinator.class),
     TEST(TestDeviceCoordinator.class);
 
     private DeviceCoordinator coordinator;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractActivityChartFragment.java
Patch:
@@ -54,17 +54,17 @@ public abstract class AbstractActivityChartFragment<D extends ChartsData> extend
 
     public boolean supportsHeartrate(GBDevice device) {
         DeviceCoordinator coordinator = device.getDeviceCoordinator();
-        return coordinator != null && coordinator.supportsHeartRateMeasurement(device);
+        return coordinator.supportsHeartRateMeasurement(device);
     }
 
     public boolean supportsRemSleep(GBDevice device) {
         DeviceCoordinator coordinator = device.getDeviceCoordinator();
-        return coordinator != null && coordinator.supportsRemSleep();
+        return coordinator.supportsRemSleep();
     }
 
     public boolean supportsAwakeSleep(GBDevice device) {
         DeviceCoordinator coordinator = device.getDeviceCoordinator();
-        return coordinator != null && coordinator.supportsAwakeSleep();
+        return coordinator.supportsAwakeSleep();
     }
 
     protected static final class ActivityConfig {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractWeekChartFragment.java
Patch:
@@ -189,7 +189,7 @@ protected DayData refreshDayPie(DBHandler db, Calendar day, GBDevice device) {
         PieDataSet set = new PieDataSet(entries, "");
 
         ActivityAmounts amounts = getActivityAmountsForDay(db, day, device);
-        float totalValues[] = getTotalsForActivityAmounts(amounts);
+        float[] totalValues = getTotalsForActivityAmounts(amounts);
         String[] pieLabels = getPieLabels();
         float totalValue = 0;
         for (int i = 0; i < totalValues.length; i++) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -520,7 +520,6 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
         addPreferenceHandlerFor(PREF_BUTTON_3_FUNCTION_DOUBLE);
         addPreferenceHandlerFor(PREF_VIBRATION_STRENGH_PERCENTAGE);
         addPreferenceHandlerFor(PREF_POWER_MODE);
-        addPreferenceHandlerFor(PREF_POWER_SAVING);
         addPreferenceHandlerFor(PREF_CONNECTION_DURATION);
         addPreferenceHandlerFor(PREF_LIFTWRIST_NOSHED);
         addPreferenceHandlerFor(PREF_DISCONNECTNOTIF_NOSHED);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetHiChainRequest.java
Patch:
@@ -163,9 +163,10 @@ protected void processResponse() throws ResponseParseException {
         if (!(receivedPacket instanceof HiChain.Response))
             throw new ResponseTypeMismatchException(receivedPacket, HiChain.Response.class);
 
-        // TODO: handle failure codes
-
         HiChain.Response response = (HiChain.Response)receivedPacket;
+        if (response.errorCode != 0) {
+            throw new ResponseParseException("Got errorCode " +  response.errorCode);
+        }
         step = response.step;
 
         LOG.debug("Response operationCode: " + operationCode + " - step: " + step);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/http/WeatherHandler.java
Patch:
@@ -57,7 +57,8 @@ public static GarminHttpResponse handleWeatherRequest(final GarminHttpRequest re
                 final List<WeatherForecastDay> ret = new ArrayList<>(duration);
                 final GregorianCalendar date = new GregorianCalendar();
                 date.setTime(new Date(weatherSpec.timestamp * 1000L));
-                for (int i = 0; i < Math.min(duration, weatherSpec.forecasts.size()); i++) {
+                ret.add(new WeatherForecastDay(date, weatherSpec.todayAsDaily(), tempUnit, speedUnit));
+                for (int i = 0; i < Math.min(duration, weatherSpec.forecasts.size()) - 1; i++) {
                     date.add(Calendar.DAY_OF_MONTH, 1);
                     ret.add(new WeatherForecastDay(date, weatherSpec.forecasts.get(i), tempUnit, speedUnit));
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -638,9 +638,8 @@ public static void store(Alarm alarm) {
     @NonNull
     public static List<Reminder> getReminders(@NonNull GBDevice gbDevice) {
         final DeviceCoordinator coordinator = gbDevice.getDeviceCoordinator();
-        final GBPrefs prefs = new GBPrefs(new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress())));
 
-        final int reservedSlots = prefs.getReservedReminderCalendarSlots(gbDevice);
+        final int reservedSlots = GBApplication.getDevicePrefs(gbDevice.getAddress()).getReservedReminderCalendarSlots(gbDevice);
         final int reminderSlots = coordinator.getReminderSlotCount(gbDevice);
 
         try (DBHandler db = GBApplication.acquireDB()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/gbx100/SetConfigurationOperation.java
Patch:
@@ -37,7 +37,6 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.gbx100.CasioGBX100DeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.operations.OperationStatus;
 import nodomain.freeyourgadget.gadgetbridge.util.BcdUtil;
-import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_AUTOLIGHT;
@@ -202,9 +201,8 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                 return true;
             } else if(data[0] == Casio2C2DSupport.FEATURE_SETTING_FOR_BASIC) {
                 SharedPreferences sharedPreferences = GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress());
-                GBPrefs gbPrefs = new GBPrefs(new Prefs(GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress())));
 
-                String timeformat = gbPrefs.getTimeFormat();
+                String timeformat = GBApplication.getDevicePrefs(getDevice().getAddress()).getTimeFormat();
 
                 if(timeformat.equals(getContext().getString(R.string.p_timeformat_24h))) {
                     data[1]  |= 0x01;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfPreferences.java
Patch:
@@ -208,8 +208,7 @@ private void setLanguage() {
     }
 
     private void setTimeFormat() {
-        final GBPrefs gbPrefs = new GBPrefs(mSupport.getDevicePrefs());
-        final String timeFormat = gbPrefs.getTimeFormat();
+        final String timeFormat = mSupport.getDevicePrefs().getTimeFormat();
 
         LOG.info("Setting time format to {}", timeFormat);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/divoom/PixooProtocol.java
Patch:
@@ -59,7 +59,6 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.serial.GBDeviceProtocol;
 import nodomain.freeyourgadget.gadgetbridge.util.BitmapUtil;
-import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 import nodomain.freeyourgadget.gadgetbridge.util.NotificationUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
@@ -185,8 +184,7 @@ public byte[] encodeSendConfiguration(String config) {
                         brightness
                 });
             case DeviceSettingsPreferenceConst.PREF_TIMEFORMAT:
-                final GBPrefs gbPrefs = new GBPrefs(new Prefs(GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress())));
-                final String timeFormat = gbPrefs.getTimeFormat();
+                final String timeFormat = getDevicePrefs().getTimeFormat();
                 final boolean is24hour = DeviceSettingsPreferenceConst.PREF_TIMEFORMAT_24H.equals(timeFormat);
 
                 return encodeProtocol(new byte[]{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hama/fit6900/HamaFit6900DeviceSupport.java
Patch:
@@ -61,7 +61,6 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.GattService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction;
-import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
@@ -393,9 +392,8 @@ private boolean getDevicePrefsNotificationEnabled() {
     }
 
     private Message.TimeFormat getDevicePrefsTimeFormat() {
-        GBPrefs gbPrefs = new GBPrefs(new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress())));
         Message.TimeFormat timeFormat = null;
-        switch (gbPrefs.getTimeFormat()) {
+        switch (getDevicePrefs().getTimeFormat()) {
             case DeviceSettingsPreferenceConst.PREF_TIMEFORMAT_24H:
                 timeFormat = Message.TimeFormat.Format24H;
                 break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/ZeppOsSupport.java
Patch:
@@ -1047,8 +1047,7 @@ private void enableRawSensor(boolean enable) {
 
     @Override
     protected ZeppOsSupport setTimeFormat(final TransactionBuilder builder) {
-        final GBPrefs gbPrefs = new GBPrefs(getDevicePrefs());
-        final String timeFormat = gbPrefs.getTimeFormat();
+        final String timeFormat = getDevicePrefs().getTimeFormat();
 
         // FIXME: This "works", but the band does not update when the setting changes, so we don't do anything
         //noinspection ConstantValue

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiSystemService.java
Patch:
@@ -59,7 +59,6 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.xiaomi.XiaomiSupport;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
-import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 import nodomain.freeyourgadget.gadgetbridge.util.SilentMode;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
@@ -287,8 +286,7 @@ public void setCurrentTime() {
         final Calendar now = GregorianCalendar.getInstance();
         final TimeZone tz = TimeZone.getDefault();
 
-        final GBPrefs gbPrefs = new GBPrefs(GBApplication.getDeviceSpecificSharedPrefs(getSupport().getDevice().getAddress()));
-        final String timeFormat = gbPrefs.getTimeFormat();
+        final String timeFormat = getDevicePrefs().getTimeFormat();
         final boolean is24hour = DeviceSettingsPreferenceConst.PREF_TIMEFORMAT_24H.equals(timeFormat);
 
         final XiaomiProto.Clock clock = XiaomiProto.Clock.newBuilder()

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/GBDeviceProtocol.java
Patch:
@@ -32,7 +32,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.Reminder;
 import nodomain.freeyourgadget.gadgetbridge.model.WeatherSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.WorldClock;
-import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
+import nodomain.freeyourgadget.gadgetbridge.util.preferences.DevicePrefs;
 
 public abstract class GBDeviceProtocol {
 
@@ -181,7 +181,7 @@ public byte[] encodeGpsLocation(Location location) {
         return null;
     }
 
-    protected Prefs getDevicePrefs() {
-        return new Prefs(GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress()));
+    protected DevicePrefs getDevicePrefs() {
+        return GBApplication.getDevicePrefs(getDevice().getAddress());
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ConfigureReminders.java
Patch:
@@ -66,7 +66,7 @@ public class ConfigureReminders extends AbstractGBActivity {
     private static final int REQ_CONFIGURE_REMINDER = 1;
 
     private GBReminderListAdapter mGBReminderListAdapter;
-    public GBDevice gbDevice;
+    private GBDevice gbDevice;
 
     private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
@@ -89,7 +89,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         gbDevice = getIntent().getParcelableExtra(GBDevice.EXTRA_DEVICE);
 
-        mGBReminderListAdapter = new GBReminderListAdapter(this);
+        mGBReminderListAdapter = new GBReminderListAdapter(this, gbDevice.getDeviceCoordinator().getRemindersHaveTime());
 
         final RecyclerView remindersRecyclerView = findViewById(R.id.reminder_list);
         remindersRecyclerView.setHasFixedSize(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ConfigureReminders.java
Patch:
@@ -55,6 +55,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceService;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
+import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 
 
 public class ConfigureReminders extends AbstractGBActivity {
@@ -100,10 +101,9 @@ protected void onCreate(Bundle savedInstanceState) {
             public void onClick(View v) {
                 final DeviceCoordinator coordinator = gbDevice.getDeviceCoordinator();
 
-                final Prefs prefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()));
-                int reservedSlots = prefs.getInt(DeviceSettingsPreferenceConst.PREF_RESERVER_REMINDERS_CALENDAR, coordinator.supportsCalendarEvents() ? 0 : 9);
+                final GBPrefs prefs = new GBPrefs(new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress())));
 
-                int deviceSlots = coordinator.getReminderSlotCount(gbDevice) - reservedSlots;
+                int deviceSlots = coordinator.getReminderSlotCount(gbDevice) - prefs.getReservedReminderCalendarSlots(gbDevice);
 
                 if (mGBReminderListAdapter.getItemCount() >= deviceSlots) {
                     // No more free slots

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -79,7 +79,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_SCREEN_ORIENTATION = "screen_orientation";
     public static final String PREF_SCREEN_TIMEOUT = "screen_timeout";
     public static final String PREF_RESERVER_ALARMS_CALENDAR = "reserve_alarms_calendar";
-    public static final String PREF_RESERVER_REMINDERS_CALENDAR = "reserve_reminders_calendar";
+    public static final String PREF_RESERVE_REMINDERS_CALENDAR = "reserve_reminders_calendar";
     public static final String PREF_ALLOW_HIGH_MTU = "allow_high_mtu";
     public static final String PREF_SYNC_CALENDAR = "sync_calendar";
     public static final String PREF_TIME_SYNC = "time_sync";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -1123,7 +1123,7 @@ public boolean onPreferenceClick(androidx.preference.Preference preference) {
         setInputTypeFor(MiBandConst.PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS, InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_SIGNED);
         setInputTypeFor(DeviceSettingsPreferenceConst.PREF_FIND_PHONE_DURATION, InputType.TYPE_CLASS_NUMBER);
         setInputTypeFor(DeviceSettingsPreferenceConst.PREF_RESERVER_ALARMS_CALENDAR, InputType.TYPE_CLASS_NUMBER);
-        setInputTypeFor(DeviceSettingsPreferenceConst.PREF_RESERVER_REMINDERS_CALENDAR, InputType.TYPE_CLASS_NUMBER);
+        setInputTypeFor(DeviceSettingsPreferenceConst.PREF_RESERVE_REMINDERS_CALENDAR, InputType.TYPE_CLASS_NUMBER);
         setInputTypeFor(DeviceSettingsPreferenceConst.PREF_INACTIVITY_THRESHOLD, InputType.TYPE_CLASS_NUMBER);
         setInputTypeFor(DeviceSettingsPreferenceConst.PREF_DEVICE_GPS_UPDATE_INTERVAL, InputType.TYPE_CLASS_NUMBER);
         setInputTypeFor(DeviceSettingsPreferenceConst.PREF_BANGLEJS_TEXT_BITMAP_SIZE, InputType.TYPE_CLASS_NUMBER);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWorkoutGbParser.java
Patch:
@@ -412,11 +412,12 @@ public static void parseWorkout(Long workoutId) {
                 int cyclingPowerCount = 0;
                 int avgAltitude = 0;
                 int altitudeCount = 0;
-                int minAltitude = 0;
-                int maxAltitude = 0;
+                int minAltitude = Integer.MAX_VALUE;
+                int maxAltitude = Integer.MIN_VALUE;
                 Integer previousAlt = null;
                 int sumAltitudeUp = 0;
                 int sumAltitudeDown = 0;
+
                 for (HuaweiWorkoutDataSample dataSample : dataSamples) {
                     if (dataSample.getSpeed() != -1) {
                         speed += dataSample.getSpeed();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/files/FileManagerActivity.java
Patch:
@@ -117,6 +117,8 @@ public boolean onMenuItemSelected(@NonNull final MenuItem menuItem) {
         if (itemId == R.id.file_manager_search) {
             searchView.setVisibility(View.VISIBLE);
             searchView.requestFocus();
+            searchView.setIconified(true);
+            searchView.setIconified(false);
         }
         return false;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/StressChartFragment.java
Patch:
@@ -520,7 +520,7 @@ public int getAverage() {
         }
     }
 
-    protected enum StressType {
+    public enum StressType {
         UNKNOWN(R.string.unknown, R.color.chart_stress_unknown),
         RELAXED(R.string.stress_relaxed, R.color.chart_stress_relaxed),
         MILD(R.string.stress_mild, R.color.chart_stress_mild),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/FileTransferHandler.java
Patch:
@@ -248,7 +248,7 @@ public void setCurrentlyUploading(FileFragment currentlyUploading) {
 
     public static class FileFragment {
         private final DirectoryEntry directoryEntry;
-        private final int maxBlockSize = 500;
+        private final int maxBlockSize = 500; //TODO: why 500?
         private int dataSize;
         private ByteBuffer dataHolder;
         private int runningCrc;
@@ -268,7 +268,7 @@ public static class FileFragment {
         }
 
         private int getMaxBlockSize() {
-            return Math.max(maxBlockSize, GFDIMessage.getMaxPacketSize());
+            return Math.min(maxBlockSize, GFDIMessage.getMaxPacketSize()); //TODO: can we use GFDIMessage.getMaxPacketSize() directly?
         }
 
         public String getFileName() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiFileDownloadManager.java
Patch:
@@ -107,7 +107,8 @@ public static class HuaweiFileDownloadFileMismatchException extends HuaweiFileDo
      */
     public enum FileType {
         DEBUG,
-        SLEEP,
+        SLEEP_STATE,
+        SLEEP_DATA,
         UNKNOWN // Never for input!
     }
 
@@ -243,7 +244,7 @@ public void downloadDebug(String filename) {
     public void downloadSleep(boolean supportsTruSleepNewSync, String filename, int startTime, int endTime) {
         FileRequest request = new FileRequest();
         request.filename = filename;
-        request.fileType = FileType.SLEEP;
+        request.fileType = (filename.equals("sleep_state.bin"))?FileType.SLEEP_STATE: FileType.SLEEP_DATA;
         request.newSync = supportsTruSleepNewSync;
         request.startTime = startTime;
         request.endTime = endTime;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ActivitySummariesAdapter.java
Patch:
@@ -207,7 +207,7 @@ protected View fill_dashboard(BaseActivitySummary item, int position, View view,
 
             final ActivitySummaryParser summaryParser = coordinator.getActivitySummaryParser(device);
             final ActivitySummaryJsonSummary activitySummaryJsonSummary = new ActivitySummaryJsonSummary(summaryParser, sportitem);
-            JSONObject summarySubdata = activitySummaryJsonSummary.getSummaryData();
+            JSONObject summarySubdata = activitySummaryJsonSummary.getSummaryData(false);
 
             if (summarySubdata != null) {
                 try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/test/activity/TestActivitySummaryParser.java
Patch:
@@ -21,7 +21,7 @@
 
 public class TestActivitySummaryParser implements ActivitySummaryParser {
     @Override
-    public BaseActivitySummary parseBinaryData(final BaseActivitySummary summary) {
+    public BaseActivitySummary parseBinaryData(final BaseActivitySummary summary, final boolean forDetails) {
         return summary;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfActivitySync.java
Patch:
@@ -408,7 +408,7 @@ private void handleWorkoutSummary(final byte[] payload) {
             summary.setActivityKind(ActivityKind.UNKNOWN.getCode());
 
             try {
-                summary = summaryParser.parseBinaryData(summary);
+                summary = summaryParser.parseBinaryData(summary, true);
             } catch (final Exception e) {
                 LOG.error("Failed to parse workout summary", e);
                 GB.toast(getContext(), "Failed to parse workout summary", Toast.LENGTH_LONG, GB.ERROR, e);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/fetch/FetchSportsSummaryOperation.java
Patch:
@@ -81,7 +81,7 @@ protected boolean processBufferedData() {
         summary.setStartTime(getLastStartTimestamp().getTime()); // due to a bug this has to be set
         summary.setRawSummaryData(buffer.toByteArray());
         try {
-            summary = summaryParser.parseBinaryData(summary);
+            summary = summaryParser.parseBinaryData(summary, true);
         } catch (final Exception e) {
             GB.toast(getContext(), "Failed to parse activity summary", Toast.LENGTH_LONG, GB.ERROR, e);
             return false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/dashboard/AbstractDashboardWidget.java
Patch:
@@ -45,6 +45,7 @@ public abstract class AbstractDashboardWidget extends Fragment {
     protected @ColorInt int color_deep_sleep = Color.rgb(0, 84, 163);
     protected @ColorInt int color_light_sleep = Color.rgb(7, 158, 243);
     protected @ColorInt int color_rem_sleep = Color.rgb(228, 39, 199);
+    protected @ColorInt int color_awake_sleep = Color.rgb(0xff, 0x86, 0x6e);
     protected @ColorInt int color_distance = Color.BLUE;
     protected @ColorInt int color_active_time = Color.rgb(170, 0, 255);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/HeartRateUtils.java
Patch:
@@ -64,6 +64,6 @@ public int getMinHeartRate(){
     }
 
     public boolean isValidHeartRateValue(int value) {
-        return value >= getMinHeartRate() && value <= getMaxHeartRate();
+        return value > 0 && value >= getMinHeartRate() && value <= getMaxHeartRate();
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -402,9 +402,9 @@ private XiaomiSimpleActivityParser getOutdoorWalkingV2Parser(final XiaomiActivit
         builder.addInt(PACE_MAX, UNIT_SECONDS_PER_KM);
         builder.addInt(PACE_MIN, UNIT_SECONDS_PER_KM);
         if (version >= 5) {
-            builder.addFloat(SPEED_AVG, UNIT_METERS_PER_SECOND);
+            builder.addFloat(SPEED_AVG, UNIT_KMPH);
         }
-        builder.addFloat(SPEED_MAX, UNIT_METERS_PER_SECOND);
+        builder.addFloat(SPEED_MAX, UNIT_KMPH);
         builder.addInt(STEPS, UNIT_STEPS);
         if (version >= 5) {
             builder.addUnknown(4);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/HRVStatusFragment.java
Patch:
@@ -149,7 +149,9 @@ protected void updateChartsnUIThread(HRVStatusWeeklyData weeklyData) {
                 lineEntries.add(new Entry(day.i, day.dayAvg));
             } else {
                 if (!lineEntries.isEmpty()) {
-                    lineDataSets.add(createDataSet(lineEntries));
+                    List<Entry> clone = new ArrayList<>(lineEntries.size());
+                    clone.addAll(lineEntries);
+                    lineDataSets.add(createDataSet(clone));
                     lineEntries.clear();
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -188,7 +188,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.mijia_lywsd.MijiaLywsd02Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.mijia_lywsd.MijiaLywsd03Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.mijia_lywsd.MijiaMhoC303Coordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.miscale2.MiScale2DeviceCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.miscale.MiCompositionScaleCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.moondrop.MoondropSpaceTravelCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.no1f1.No1F1Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.nothing.CmfBudsPro2Coordinator;
@@ -355,7 +355,7 @@ public enum DeviceType {
     CASIOGBX100(CasioGBX100DeviceCoordinator.class),
     CASIOGWB5600(CasioGWB5600DeviceCoordinator.class),
     CASIOGMWB5000(CasioGMWB5000DeviceCoordinator.class),
-    MISCALE2(MiScale2DeviceCoordinator.class),
+    MICOMPOSITIONSCALE(MiCompositionScaleCoordinator.class),
     BFH16(BFH16DeviceCoordinator.class),
     MAKIBESHR3(MakibesHR3Coordinator.class),
     BANGLEJS(BangleJSCoordinator.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/ZeppOsMenuType.java
Patch:
@@ -109,6 +109,7 @@ public class ZeppOsMenuType {
         put("00000029", "body_composition");
         put("0000002A", "readiness");
         put("0000002B", "zepp_pay");
+        put("000FFD39", "hrv");
     }};
 
     public static final Map<String, String> controlCenterNameLookup = new HashMap<String, String>() {{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/CurrentTimeRequestMessage.java
Patch:
@@ -15,7 +15,7 @@ public class CurrentTimeRequestMessage extends GFDIMessage {
     public CurrentTimeRequestMessage(int referenceID, GarminMessage garminMessage) {
         this.garminMessage = garminMessage;
         this.referenceID = referenceID;
-        this.statusMessage = this.getStatusMessage();
+        this.statusMessage = null; //our outgoing message is an ACK message
     }
 
     public static CurrentTimeRequestMessage parseIncoming(MessageReader reader, GarminMessage garminMessage) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/MusicControlCapabilitiesMessage.java
Patch:
@@ -8,7 +8,7 @@ public class MusicControlCapabilitiesMessage extends GFDIMessage {
     public MusicControlCapabilitiesMessage(GarminMessage garminMessage, int supportedCapabilities) {
         this.garminMessage = garminMessage;
         this.supportedCapabilities = supportedCapabilities;
-        this.statusMessage = this.getStatusMessage();
+        this.statusMessage = null; //our outgoing message is an ACK message
     }
 
     public static MusicControlCapabilitiesMessage parseIncoming(MessageReader reader, GarminMessage garminMessage) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/GFDIStatusMessage.java
Patch:
@@ -43,7 +43,7 @@ public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessag
                 LOG.warn("Received {} for message {}", status, (null == originalGarminMessage) ? originalMessageType : originalGarminMessage.name());
             }
 
-            return new GenericStatusMessage(garminMessage, status);
+            return new GenericStatusMessage(originalGarminMessage, status, false); //don't ack the ack
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiScheduleService.java
Patch:
@@ -141,7 +141,9 @@ public void handleCommand(final XiaomiProto.Command cmd) {
 
     @Override
     public void initialize() {
-        requestAlarms();
+        if (getCoordinator().supportsAlarms()) {
+            requestAlarms();
+        }
         requestReminders();
         requestWorldClocks();
         getSupport().sendCommand("get sleep mode", COMMAND_TYPE, CMD_SLEEP_MODE_GET);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeByte.java
Patch:
@@ -34,7 +34,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (b == invalid)
             return null;
-        return (int) (Math.round(b / scale) - offset);
+        return (b / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeFloat.java
Patch:
@@ -26,7 +26,7 @@ public Object decode(ByteBuffer byteBuffer, double scale, int offset) {
         }
         if (Float.isNaN(f) || f == invalid)
             return null;
-        return (float) (f / scale) - offset;
+        return (f / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeInt.java
Patch:
@@ -32,7 +32,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (i == invalid)
             return null;
-        return (Math.round(i / scale) - offset);
+        return (i / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeShort.java
Patch:
@@ -32,7 +32,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (s == invalid)
             return null;
-        return (int) Math.round(s / scale) - offset;
+        return (s / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitHrvValue.java
Patch:
@@ -21,8 +21,8 @@ public FitHrvValue(final RecordDefinition recordDefinition, final RecordHeader r
     }
 
     @Nullable
-    public Integer getValue() {
-        return (Integer) getFieldByNumber(0);
+    public Float getValue() {
+        return (Float) getFieldByNumber(0);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitUserProfile.java
Patch:
@@ -43,8 +43,8 @@ public Integer getHeight() {
     }
 
     @Nullable
-    public Integer getWeight() {
-        return (Integer) getFieldByNumber(4);
+    public Float getWeight() {
+        return (Float) getFieldByNumber(4);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitWeather.java
Patch:
@@ -45,8 +45,8 @@ public Integer getWindDirection() {
     }
 
     @Nullable
-    public Integer getWindSpeed() {
-        return (Integer) getFieldByNumber(4);
+    public Float getWindSpeed() {
+        return (Float) getFieldByNumber(4);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeByte.java
Patch:
@@ -34,7 +34,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (b == invalid)
             return null;
-        return (int) (Math.round(b / scale) - offset);
+        return (b / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeFloat.java
Patch:
@@ -26,7 +26,7 @@ public Object decode(ByteBuffer byteBuffer, double scale, int offset) {
         }
         if (Float.isNaN(f) || f == invalid)
             return null;
-        return (float) (f / scale) - offset;
+        return (f / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeInt.java
Patch:
@@ -32,7 +32,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (i == invalid)
             return null;
-        return (Math.round(i / scale) - offset);
+        return (i / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeShort.java
Patch:
@@ -32,7 +32,7 @@ public Object decode(final ByteBuffer byteBuffer, double scale, int offset) {
             return null;
         if (s == invalid)
             return null;
-        return (int) Math.round(s / scale) - offset;
+        return (s / scale) - offset;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitHrvValue.java
Patch:
@@ -21,8 +21,8 @@ public FitHrvValue(final RecordDefinition recordDefinition, final RecordHeader r
     }
 
     @Nullable
-    public Integer getValue() {
-        return (Integer) getFieldByNumber(0);
+    public Float getValue() {
+        return (Float) getFieldByNumber(0);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitUserProfile.java
Patch:
@@ -43,8 +43,8 @@ public Integer getHeight() {
     }
 
     @Nullable
-    public Integer getWeight() {
-        return (Integer) getFieldByNumber(4);
+    public Float getWeight() {
+        return (Float) getFieldByNumber(4);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitWeather.java
Patch:
@@ -45,8 +45,8 @@ public Integer getWindDirection() {
     }
 
     @Nullable
-    public Integer getWindSpeed() {
-        return (Integer) getFieldByNumber(4);
+    public Float getWindSpeed() {
+        return (Float) getFieldByNumber(4);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/messages/FitRecord.java
Patch:
@@ -84,7 +84,7 @@ public Long getTimestamp() {
 
     public ActivityPoint toActivityPoint() {
         final ActivityPoint activityPoint = new ActivityPoint();
-        activityPoint.setTime(new Date(getComputedTimestamp()));
+        activityPoint.setTime(new Date(getComputedTimestamp() * 1000L));
         if (getLatitude() != null && getLongitude() != null) {
             activityPoint.setLocation(new GPSCoordinate(
                     getLongitude(),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/fieldDefinitions/FieldDefinitionTemperature.java
Patch:
@@ -6,7 +6,7 @@
 public class FieldDefinitionTemperature extends FieldDefinition {
 
     public FieldDefinitionTemperature(int localNumber, int size, BaseType baseType, String name) {
-        super(localNumber, size, baseType, name, 1, 273);
+        super(localNumber, size, baseType, name, 1, -273);
     }
 
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseType.java
Patch:
@@ -48,11 +48,11 @@ public int getIdentifier() {
         return identifier;
     }
 
-    public Object decode(ByteBuffer byteBuffer, int scale, int offset) {
+    public Object decode(ByteBuffer byteBuffer, double scale, int offset) {
         return baseTypeInterface.decode(byteBuffer, scale, offset);
     }
 
-    public void encode(ByteBuffer byteBuffer, Object o, int scale, int offset) {
+    public void encode(ByteBuffer byteBuffer, Object o, double scale, int offset) {
         baseTypeInterface.encode(byteBuffer, o, scale, offset);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseTypeInterface.java
Patch:
@@ -5,9 +5,9 @@
 public interface BaseTypeInterface {
     int getByteSize();
 
-    Object decode(ByteBuffer byteBuffer, int scale, int offset);
+    Object decode(ByteBuffer byteBuffer, double scale, int offset);
 
-    void encode(ByteBuffer byteBuffer, Object o, int scale, int offset);
+    void encode(ByteBuffer byteBuffer, Object o, double scale, int offset);
 
     void invalidate(ByteBuffer byteBuffer);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/fieldDefinitions/FieldDefinitionTimestamp.java
Patch:
@@ -7,7 +7,7 @@
 
 public class FieldDefinitionTimestamp extends FieldDefinition {
     public FieldDefinitionTimestamp(int localNumber, int size, BaseType baseType, String name) {
-        super(localNumber, size, baseType, name, 1, GARMIN_TIME_EPOCH);
+        super(localNumber, size, baseType, name, 1, -GARMIN_TIME_EPOCH);
     }
 
 //    @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -464,6 +464,9 @@ public void onSetCallState(CallSpec callSpec) {
     public void dispose() {
         LocalBroadcastManager.getInstance(getContext()).unregisterReceiver(commandReceiver);
         GBApplication.getContext().unregisterReceiver(globalCommandReceiver);
+        if (watchAdapter != null) {
+            watchAdapter.dispose();
+        }
         super.dispose();
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/GFDIStatusMessage.java
Patch:
@@ -32,6 +32,8 @@ public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessag
             return FitDefinitionStatusMessage.parseIncoming(reader, originalGarminMessage);
         } else if (GarminMessage.FIT_DATA.equals(originalGarminMessage)) {
             return FitDataStatusMessage.parseIncoming(reader, originalGarminMessage);
+        } else if (GarminMessage.AUTH_NEGOTIATION.equals(originalGarminMessage)) {
+            return AuthNegotiationStatusMessage.parseIncoming(reader, originalGarminMessage);
         } else {
             final Status status = Status.fromCode(reader.readByte());
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendNotificationRequest.java
Patch:
@@ -21,8 +21,6 @@
 
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.GBApplication;
-import nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiPacket;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.Notifications;
 import nodomain.freeyourgadget.gadgetbridge.model.CallSpec;
@@ -64,7 +62,7 @@ public void buildNotificationTLVFromNotificationSpec(NotificationSpec notificati
             title = notificationSpec.sourceName;
 
         String body = notificationSpec.body;
-        if (body.length() > supportProvider.getHuaweiCoordinator().getContentLength()) {
+        if (body != null && body.length() > supportProvider.getHuaweiCoordinator().getContentLength()) {
             body = notificationSpec.body.substring(0x0, supportProvider.getHuaweiCoordinator().getContentLength() - 0xD);
             body += "...";
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/soundcore/liberty3_pro/SoundcoreLiberty3ProCoordinator.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.devices.soundcore.liberty3_pro;
 
 import androidx.annotation.NonNull;
 
@@ -14,7 +14,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.BatteryConfig;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceSupport;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.SoundcoreLiberty3ProDeviceSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro.SoundcoreLiberty3ProDeviceSupport;
 
 public class SoundcoreLiberty3ProCoordinator extends AbstractDeviceCoordinator {
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -216,7 +216,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.sony.headphones.coordinators.SonyWISP600NCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.sony.wena3.SonyWena3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.sonyswr12.SonySWR12DeviceCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.soundcore.SoundcoreLiberty3ProCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.soundcore.liberty3_pro.SoundcoreLiberty3ProCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.supercars.SuperCarsCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.test.TestDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.tlw64.TLW64Coordinator;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/soundcore/liberty3_pro/SoundcoreLiberty3ProDeviceSupport.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro;
 
 import nodomain.freeyourgadget.gadgetbridge.service.btbr.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.serial.AbstractSerialDeviceSupport;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/soundcore/liberty3_pro/SoundcoreLibertyIOThread.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro;
 
 import static nodomain.freeyourgadget.gadgetbridge.util.GB.hexdump;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/soundcore/liberty3_pro/SoundcoreLibertyProtocol.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro;
 
 import static nodomain.freeyourgadget.gadgetbridge.util.GB.hexdump;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/soundcore/liberty3_pro/TapAction.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro;
 
 enum TapAction {
     SINGLE_TAP((byte) 0x02),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/soundcore/liberty3_pro/TapFunction.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.soundcore.liberty3_pro;
 enum TapFunction {
     VOLUME_DOWN(1),
     VOLUME_UP(0),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/capabilities/GpsCapability.java
Patch:
@@ -33,7 +33,7 @@ public enum Combination {
         LOW_POWER_GPS,
         GPS,
         GPS_BDS,
-        GPS_GNOLASS,
+        GPS_GLONASS,
         GPS_GALILEO,
         ALL_SATELLITES
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsConfigService.java
Patch:
@@ -1781,7 +1781,7 @@ public static byte encodeHeartRateAllDayMonitoring(final String val) {
         put((byte) 0x00, GpsCapability.Combination.LOW_POWER_GPS);
         put((byte) 0x01, GpsCapability.Combination.GPS);
         put((byte) 0x02, GpsCapability.Combination.GPS_BDS);
-        put((byte) 0x03, GpsCapability.Combination.GPS_GNOLASS);
+        put((byte) 0x03, GpsCapability.Combination.GPS_GLONASS);
         put((byte) 0x04, GpsCapability.Combination.GPS_GALILEO);
         put((byte) 0x05, GpsCapability.Combination.ALL_SATELLITES);
     }};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiSupportProvider.java
Patch:
@@ -529,7 +529,8 @@ protected void initializeDeviceConfigure() {
         if (isBLE()) {
             leBuilder = createLeTransactionBuilder("Initializing");
             leBuilder.setCallback(leSupport);
-            leBuilder.notify(leSupport.getCharacteristic(HuaweiConstants.UUID_CHARACTERISTIC_HUAWEI_READ), true);
+            if (!GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getBoolean("force_new_protocol", false))
+                leBuilder.notify(leSupport.getCharacteristic(HuaweiConstants.UUID_CHARACTERISTIC_HUAWEI_READ), true);
             leBuilder.add(new nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction(gbDevice, GBDevice.State.INITIALIZING, context));
         } else {
             brBuilder = createBrTransactionBuilder("Initializing");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casio/gbx100/CasioGBX100SampleProvider.java
Patch:
@@ -85,11 +85,13 @@ protected Property getDeviceIdentifierSampleProperty() {
     }
 
 
+    @NonNull
     @Override
     public List<CasioGBX100ActivitySample> getActivitySamples(int timestamp_from, int timestamp_to) {
         return super.getActivitySamples(timestamp_from, timestamp_to);
     }
 
+    @NonNull
     @Override
     public List<CasioGBX100ActivitySample> getAllActivitySamples(int timestamp_from, int timestamp_to) {
         return super.getActivitySamples(timestamp_from, timestamp_to);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusHealthSampleProvider.java
Patch:
@@ -118,6 +118,7 @@ public List<HPlusHealthActivitySample> getActivityamples(int timestamp_from, int
         return getAllActivitySamples(timestamp_from, timestamp_to);
     }
 
+    @NonNull
     public List<HPlusHealthActivitySample> getSleepSamples(int timestamp_from, int timestamp_to) {
         return getAllActivitySamples(timestamp_from, timestamp_to);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusSampleProvider.java
Patch:
@@ -132,6 +132,7 @@ private List<WatchXPlusActivitySample> checkActivityData(List<WatchXPlusActivity
 
 
 
+    @NonNull
     @Override
     public List<WatchXPlusActivitySample> getAllActivitySamples(int timestamp_from, int timestamp_to) {
         boolean showRawData = GBApplication.getDeviceSpecificSharedPrefs(mDevice.getAddress()).getBoolean(WatchXPlusConstants.PREF_SHOW_RAW_GRAPH, false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/HybridHRActivitySampleProvider.java
Patch:
@@ -79,11 +79,13 @@ public HybridHRActivitySample createActivitySample() {
         return new HybridHRActivitySample();
     }
 
+    @NonNull
     @Override
     public List<HybridHRActivitySample> getActivitySamples(int timestamp_from, int timestamp_to) {
         return super.getActivitySamples(timestamp_from, timestamp_to);
     }
 
+    @NonNull
     @Override
     public List<HybridHRActivitySample> getAllActivitySamples(int timestamp_from, int timestamp_to) {
         return super.getAllActivitySamples(timestamp_from, timestamp_to);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/withingssteelhr/WithingsSteelHRSampleProvider.java
Patch:
@@ -70,6 +70,7 @@ protected Property getDeviceIdentifierSampleProperty() {
         return WithingsSteelHRActivitySampleDao.Properties.DeviceId;
     }
 
+    @NonNull
     @Override
     public List<WithingsSteelHRActivitySample> getActivitySamples(int timestamp_from, int timestamp_to) {
         return super.getGBActivitySamples(timestamp_from, timestamp_to, ActivityKind.TYPE_ALL);

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupportTest.java
Patch:
@@ -333,7 +333,7 @@ public void TestFitFileSettings2() {
                 "000901000a01000b45646765203531300000ffffffffffffff09ef");//https://github.com/polyvertex/fitdecode/blob/48b6554d8a3baf33f8b5b9b2fd079fcbe9ac8ce2/tests/files/Settings2.fit
 
         String expectedOutput = "[" +
-                "FitFileId{serial_number=3889965805, manufacturer=1, product=1561, type=settings}, " +
+                "FitFileId{serial_number=3889965805, manufacturer=1, product=1561, type=SETTINGS}, " +
                 "FitFileCreator{software_version=340}, " +
                 "FitDeviceSettings{utc_offset=0, time_offset=0, active_time_zone=0, unknown_3(ENUM/1)=0, time_mode=0, time_zone_offset=0, unknown_10(ENUM/1)=3, unknown_11(ENUM/1)=0, backlight_mode=2, unknown_13(UINT8/1)=0, unknown_14(UINT8/1)=0, unknown_15(UINT8/1)=50, unknown_21(ENUM/1)=1, unknown_22(ENUM/1)=0, unknown_26(ENUM/1)=254, unknown_27(ENUM/1)=0, unknown_29(ENUM/1)=0, unknown_52(ENUM/1)=0, unknown_53(ENUM/1)=1}, " +
                 "FitUserProfile{friendly_name=edge510, weight=78, gender=1, age=41, height=183, language=english, elev_setting=metric, weight_setting=metric, resting_heart_rate=60, default_max_biking_heart_rate=185, default_max_heart_rate=185, hr_setting=1, speed_setting=metric, dist_setting=metric, power_setting=1, activity_class=168, position_setting=2, temperature_setting=metric}, " +
@@ -361,7 +361,7 @@ public void TestFitFileDevelopersField() {
         byte[] fileContents = GB.hexStringToByteArray("0e206806a20000002e464954bed040000100000401028400010002028403048c00000f042329000006a540000100cf0201100d030102000101020305080d1522375990e97962db0040000100ce05000102010102020102031107080a0700000001646f7567686e7574735f6561726e656400646f7567686e7574730060000100140403010204010205048606028401000100008c580000c738b98001008f5a00032c808e400200905c0005a9388a1003d39e");//https://github.com/polyvertex/fitdecode/blob/48b6554d8a3baf33f8b5b9b2fd079fcbe9ac8ce2/tests/files/DeveloperData.fit
 
         String expectedOutput = "[" +
-                "FitFileId{manufacturer=15, type=activity, product=9001, serial_number=1701}, " +
+                "FitFileId{manufacturer=15, type=ACTIVITY, product=9001, serial_number=1701}, " +
                 "FitDeveloperData{application_id=[1,1,2,3,5,8,13,21,34,55,89,144,233,121,98,219], developer_data_index=0}, " +
                 "FitFieldDescription{developer_data_index=0, field_definition_number=0, fit_base_type_id=1, field_name=doughnuts_earned, units=doughnuts}, " +
                 "FitRecord{heart_rate=140, unknown_4(UINT8/1)=88, distance=510, unknown_6(UINT16/2)=47488, doughnuts_earned=1}, " +

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/init/InitOperation2021.java
Patch:
@@ -159,9 +159,7 @@ public void handle2021Payload(final short type, final byte[] payload) {
                 finalSharedSessionAES[i] = (byte) (sharedEC[i + 8] ^ secretKey[i]);
             }
 
-            if (BuildConfig.DEBUG) {
-                LOG.debug("Shared Session Key: {}", GB.hexdump(finalSharedSessionAES));
-            }
+            LOG.debug("Shared Session Key: {}", GB.hexdump(finalSharedSessionAES));
             huami2021ChunkedEncoder.setEncryptionParameters(encryptedSequenceNumber, finalSharedSessionAES);
             huami2021ChunkedDecoder.setEncryptionParameters(finalSharedSessionAES);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/Weather.java
Patch:
@@ -628,9 +628,9 @@ public Request(
                                 dayTlv.put(0x15, dayData.lowTemperature);
                         }
                         if (settings.sunRiseSetSupported) {
-                            if (dayData.sunriseTime != null)
+                            if (dayData.sunriseTime != null && dayData.sunriseTime != 0)
                                 dayTlv.put(0x16, dayData.sunriseTime);
-                            if (dayData.sunsetTime != null)
+                            if (dayData.sunsetTime != null && dayData.sunsetTime != 0)
                                 dayTlv.put(0x17, dayData.sunsetTime);
                             if (dayData.moonRiseTime != null && dayData.moonRiseTime != 0)
                                 dayTlv.put(0x1a, dayData.moonRiseTime);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendWeatherForecastRequest.java
Patch:
@@ -40,7 +40,7 @@ public SendWeatherForecastRequest(HuaweiSupportProvider support, Weather.Setting
     @Override
     protected List<byte[]> createRequest() throws RequestCreationException {
         int hourlyCount = Math.min(weatherSpec.hourly.size(), 24);
-        int dayCount = Math.min(weatherSpec.forecasts.size(), 8);
+        int dayCount = Math.min(weatherSpec.forecasts.size() + 1, 8); // We add today as well
 
         ArrayList<WeatherForecastData.TimeData> timeDataArrayList = new ArrayList<>(hourlyCount);
         ArrayList<WeatherForecastData.DayData> dayDataArrayList = new ArrayList<>(dayCount);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/Weather.java
Patch:
@@ -632,9 +632,9 @@ public Request(
                                 dayTlv.put(0x16, dayData.sunriseTime);
                             if (dayData.sunsetTime != null)
                                 dayTlv.put(0x17, dayData.sunsetTime);
-                            if (dayData.moonRiseTime != null)
+                            if (dayData.moonRiseTime != null && dayData.moonRiseTime != 0)
                                 dayTlv.put(0x1a, dayData.moonRiseTime);
-                            if (dayData.moonSetTime != null)
+                            if (dayData.moonSetTime != null && dayData.moonSetTime != 0)
                                 dayTlv.put(0x1b, dayData.moonSetTime);
                         }
                         if (dayData.moonPhase != null && settings.moonPhaseSupported)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiSupport.java
Patch:
@@ -501,12 +501,11 @@ private void parseAllActivityFilesFromStorage() {
                 try (InputStream in = new FileInputStream(activityFile)) {
                     data = FileUtils.readAll(in, 999999);
                 } catch (final IOException ioe) {
-                    LOG.error("Failed to read " + activityFile, ioe);
+                    LOG.error("Failed to read {}", activityFile, ioe);
                     continue;
                 }
 
                 final byte[] fileIdBytes = Arrays.copyOfRange(data, 0, 7);
-                final byte[] activityData = Arrays.copyOfRange(data, 8, data.length - 4);
                 final XiaomiActivityFileId fileId = XiaomiActivityFileId.from(fileIdBytes);
 
                 final XiaomiActivityParser activityParser = XiaomiActivityParser.create(fileId);
@@ -516,7 +515,7 @@ private void parseAllActivityFilesFromStorage() {
                 }
 
                 try {
-                    if (activityParser.parse(this, fileId, activityData)) {
+                    if (activityParser.parse(this, fileId, data)) {
                         LOG.info("Successfully parsed {}", fileId);
                     } else {
                         LOG.warn("Failed to parse {}", fileId);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetBondParamsRequest.java
Patch:
@@ -55,7 +55,7 @@ protected void processResponse() throws ResponseParseException {
             throw new ResponseTypeMismatchException(receivedPacket, DeviceConfig.BondParams.Response.class);
 
         paramsProvider.setEncryptionCounter(((DeviceConfig.BondParams.Response) receivedPacket).encryptionCounter);
-        if (paramsProvider.getDeviceSupportType() != 0x02) {
+        if (paramsProvider.getAuthMode() != 0x02) {
             if (((DeviceConfig.BondParams.Response) receivedPacket).status == 1) {
                 stopChain(this);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetBondRequest.java
Patch:
@@ -49,9 +49,9 @@ public GetBondRequest(HuaweiSupportProvider support) {
     protected List<byte[]> createRequest() throws RequestCreationException {
         try {
             byte[] iv = paramsProvider.getIv();
-            huaweiCrypto = new HuaweiCrypto(paramsProvider.getAuthVersion());
+            huaweiCrypto = new HuaweiCrypto(paramsProvider.getAuthVersion(), paramsProvider.getAuthAlgo(), paramsProvider.getDeviceSupportType(), paramsProvider.getAuthMode());
             byte[] encryptionKey;
-            if (paramsProvider.getDeviceSupportType() == 0x02) { //HiChainLite
+            if (paramsProvider.getAuthMode() == 0x02) { //HiChainLite
                 encryptionKey = paramsProvider.getFirstKey();
             } else {
                 encryptionKey = huaweiCrypto.createSecretKey(supportProvider.getDeviceMac());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetSecurityNegotiationRequest.java
Patch:
@@ -42,7 +42,7 @@ protected List<byte[]> createRequest() throws RequestCreationException {
         try {
             return new DeviceConfig.SecurityNegotiation.Request(
                     paramsProvider,
-                    paramsProvider.getDeviceSupportType(),
+                    paramsProvider.getAuthMode(),
                     supportProvider.getAndroidId(),
                     Build.MODEL
                 ).serialize();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiCoordinator.java
Patch:
@@ -563,11 +563,11 @@ public String[] getSupportedLanguageSettings(GBDevice device) {
     }
 
     public short getWidth() {
-        return watchfaceDeviceParams.width;
+        return (short)watchfaceDeviceParams.width;
     }
 
     public short getHeight() {
-        return watchfaceDeviceParams.height;
+        return (short)watchfaceDeviceParams.height;
     }
 
     public void setWatchfaceDeviceParams(Watchface.WatchfaceDeviceParams watchfaceDeviceParams) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendFileUploadChunk.java
Patch:
@@ -39,7 +39,8 @@ protected List<byte[]> createRequest() throws RequestCreationException {
         return new FileUpload.FileNextChunkSend(this.paramsProvider).serializeFileChunk(
                 huaweiUploadManager.getCurrentChunk(),
                 huaweiUploadManager.getCurrentUploadPosition(),
-                huaweiUploadManager.getUnitSize()
+                huaweiUploadManager.getUnitSize(),
+                huaweiUploadManager.getFileId()
         );
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendFileUploadHash.java
Patch:
@@ -26,10 +26,12 @@
 
 public class SendFileUploadHash extends Request{
     HuaweiUploadManager huaweiUploadManager;
+    private byte fileId;
     public SendFileUploadHash(HuaweiSupportProvider support,
                               HuaweiUploadManager huaweiUploadManager) {
         super(support);
         this.huaweiUploadManager = huaweiUploadManager;
+        this.fileId = fileId;
         this.serviceId = FileUpload.id;
         this.commandId = FileUpload.FileHashSend.id;
         this.addToResponse = false;
@@ -41,7 +43,7 @@ protected List<byte[]> createRequest() throws RequestCreationException {
         try {
             return new FileUpload.FileHashSend.Request(this.paramsProvider,
                     huaweiUploadManager.getFileSHA256(),
-                    huaweiUploadManager.getFileType()
+                    huaweiUploadManager.getFileId()
             ).serialize();
         } catch (HuaweiPacket.CryptoException e) {
             throw new RequestCreationException(e);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiPacket.java
Patch:
@@ -567,6 +567,8 @@ public HuaweiPacket parse(byte[] data) throws ParseException {
                         return new Watchface.DeviceWatchInfo.Response(paramsProvider).fromPacket(this);
                     case Watchface.WatchfaceNameInfo.id:
                         return new Watchface.WatchfaceNameInfo.Response(paramsProvider).fromPacket(this);
+                    case Watchface.WatchfaceConfirm.id:
+                        return new Watchface.WatchfaceConfirm.Response(paramsProvider).fromPacket(this);
                     default:
                         this.isEncrypted = this.attemptDecrypt(); // Helps with debugging
                         return this;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWatchfaceManager.java
Patch:
@@ -82,6 +82,8 @@ public boolean  isValid(String themeVersion, String screenResolution) {
         }
 
         public String screenByThemeVersion(String themeVersion) {
+            if(!map.containsKey(themeVersion))
+                return "0x0";
             String screen = map.get(themeVersion).toString();
             return screen;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfWatchProSupport.java
Patch:
@@ -296,7 +296,7 @@ public void onCommand(final CmfCommand cmd, final byte[] payload) {
                     LOG.warn("Unexpected serial number payload length: {}, expected {}", payload.length, (payload[0] & 0xff));
                     return;
                 }
-                final String serialNumber = new String(ArrayUtils.subarray(payload, 1, payload.length - 2));
+                final String serialNumber = new String(ArrayUtils.subarray(payload, 1, payload.length));
                 LOG.debug("Got serial number: {}", serialNumber);
                 final GBDeviceEventUpdateDeviceInfo gbDeviceEventUpdateDeviceInfo = new GBDeviceEventUpdateDeviceInfo("SERIAL: ", serialNumber);
                 evaluateGBDeviceEvent(gbDeviceEventUpdateDeviceInfo);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiService.java
Patch:
@@ -58,6 +58,8 @@ public class HuamiService {
     public static final UUID UUID_CHARACTERISTIC_CHUNKEDTRANSFER_2021_READ = UUID.fromString("00000017-0000-3512-2118-0009af100700");
     public static final UUID UUID_CHARACTERISTIC_CHUNKEDTRANSFER = UUID.fromString("00000020-0000-3512-2118-0009af100700");
 
+    public static final UUID UUID_CHARACTERISTIC_ZEPP_OS_FILE_TRANSFER_V3 = UUID.fromString("00000023-0000-3512-2118-0009af100700");
+
     public static final int ALERT_LEVEL_NONE = 0;
     public static final int ALERT_LEVEL_MESSAGE = 1;
     public static final int ALERT_LEVEL_PHONE_CALL = 2;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/init/InitOperation.java
Patch:
@@ -145,6 +145,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                 if (value[2] == HuamiService.AUTH_SUCCESS) {
                     TransactionBuilder builder = createTransactionBuilder("Authenticated, now initialize phase 2");
                     builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
+                    builder.setCallback(null); // remove init operation as the callback
                     huamiSupport.enableFurtherNotifications(builder, true);
                     huamiSupport.requestDeviceInfo(builder);
                     huamiSupport.phase2Initialize(builder);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/init/InitOperation2021.java
Patch:
@@ -186,6 +186,7 @@ public void handle2021Payload(final short type, final byte[] payload) {
             try {
                 TransactionBuilder builder = createTransactionBuilder("Authenticated, now initialize phase 2");
                 builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
+                builder.setCallback(null); // remove init operation as the callback
                 huamiSupport.enableFurtherNotifications(builder, true);
                 huamiSupport.setCurrentTimeWithService(builder);
                 huamiSupport.requestDeviceInfo(builder);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfCharacteristic.java
Patch:
@@ -256,6 +256,7 @@ public void onCharacteristicChanged(final byte[] value) {
                 buffer = Objects.requireNonNull(chunkBuffers.get(cmd));
             } else {
                 buffer = new ChunkBuffer();
+                chunkBuffers.put(cmd, buffer);
             }
 
             if (chunkIndex != buffer.expectedChunk) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfActivitySync.java
Patch:
@@ -438,8 +438,8 @@ private void handleWorkoutSummary(final byte[] payload) {
                 return;
             }
 
-            // Previous to last byte indicates if it has gps
-            if (summaryBytes[summaryBytes.length - 2] == 1) {
+            // FIXME: This should be set by CmfWorkoutSummaryParser
+            if (summaryBytes[30] == 1) {
                 activitiesWithGps.add(summary);
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -51,6 +51,7 @@
 import android.util.Base64;
 import android.widget.Toast;
 
+import androidx.core.content.ContextCompat;
 import androidx.core.text.HtmlCompat;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
@@ -321,7 +322,8 @@ public void onReceive(Context context, Intent intent) {
                 }
             }
         };
-        GBApplication.getContext().registerReceiver(globalUartReceiver, commandFilter); // should be RECEIVER_EXPORTED
+
+        ContextCompat.registerReceiver(GBApplication.getContext(), globalUartReceiver, commandFilter, ContextCompat.RECEIVER_EXPORTED);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridConfigActivity.java
Patch:
@@ -57,6 +57,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
+import androidx.core.content.ContextCompat;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -530,7 +531,7 @@ protected void onDestroy() {
     protected void onResume() {
         super.onResume();
         refreshList();
-        registerReceiver(buttonReceiver, new IntentFilter(QHybridSupport.QHYBRID_EVENT_BUTTON_PRESS));
+        ContextCompat.registerReceiver(this, buttonReceiver, new IntentFilter(QHybridSupport.QHYBRID_EVENT_BUTTON_PRESS), ContextCompat.RECEIVER_NOT_EXPORTED);
         LocalBroadcastManager.getInstance(this).registerReceiver(settingsReceiver, new IntentFilter(QHybridSupport.QHYBRID_EVENT_SETTINGS_UPDATED));
         LocalBroadcastManager.getInstance(this).registerReceiver(fileReceiver, new IntentFilter(QHybridSupport.QHYBRID_EVENT_FILE_UPLOADED));
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiPacket.java
Patch:
@@ -243,7 +243,7 @@ public SerializeException(String message, Exception e) {
     // Encryption is enabled by default, packets which don't use it must disable it
     protected boolean isEncrypted = true;
 
-    protected boolean isSliced = false;
+    protected boolean isSliced = true;
 
     public HuaweiPacket(ParamsProvider paramsProvider) {
         this.paramsProvider = paramsProvider;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/DeviceConfig.java
Patch:
@@ -65,6 +65,7 @@ public Request(ParamsProvider paramsProvider, HuaweiDeviceType deviceType) {
                 }
                 this.complete = true;
                 this.isEncrypted = false;
+                this.isSliced = false;
             }
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridConstants.java
Patch:
@@ -22,7 +22,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public final class QHybridConstants {
-    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.11";
+    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.12";
     public static final int HYBRID_HR_WATCHFACE_WIDGET_SIZE = 76;
 
     public static Map<String, String> KNOWN_WAPP_VERSIONS = new HashMap<String, String>() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/withingssteelhr/communication/datastructures/Time.java
Patch:
@@ -22,11 +22,8 @@
 import org.threeten.bp.zone.ZoneRules;
 
 import java.nio.ByteBuffer;
-import java.util.Date;
 import java.util.TimeZone;
 
-import ch.qos.logback.core.encoder.ByteArrayUtil;
-
 public class Time extends WithingsStructure {
 
     private Instant now;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/moondrop/MoondropSpaceTravelProtocol.java
Patch:
@@ -69,7 +69,7 @@ else if (featureId == TOUCH_ACTIONS_FEATURE && pduId == TOUCH_ACTIONS_PDU_GET)
                 events.add(handlePacketTouchActions(payload));
         }
 
-        return null;
+        return events.toArray(new GBDeviceEvent[0]);
     }
 
     private GBDeviceEvent handlePacketEqualizerPreset(byte[] payload) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractHeadphoneDeviceSupport.java
Patch:
@@ -114,6 +114,8 @@ public void onSendConfiguration(String config) {
             gbTextToSpeech.setAudioFocus(prefs.getBoolean(PREF_SPEAK_NOTIFICATIONS_FOCUS_EXCLUSIVE, false) ?
                     AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE :
                     AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);
+        } else {
+            super.onSendConfiguration(config);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiPacket.java
Patch:
@@ -409,6 +409,8 @@ public HuaweiPacket parse(byte[] data) throws ParseException {
                         return new DeviceConfig.ProductInfo.Response(paramsProvider).fromPacket(this);
                     case DeviceConfig.BondParams.id:
                         return new DeviceConfig.BondParams.Response(paramsProvider).fromPacket(this);
+                    case DeviceConfig.PhoneInfo.id:
+                        return new DeviceConfig.PhoneInfo.Response(paramsProvider).fromPacket(this);
                     case DeviceConfig.Auth.id:
                         return new DeviceConfig.Auth.Response(paramsProvider).fromPacket(this);
                     case DeviceConfig.BatteryLevel.id:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/garmin/watches/instinct/GarminInstinct2XSolarCoordinator.java
Patch:
@@ -8,7 +8,8 @@
 public class GarminInstinct2XSolarCoordinator extends GarminCoordinator {
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("^Instinct 2X Sol$");
+        // Allow ending both with "Sol" (#3063) and "Solar" (reported on Matrix).
+        return Pattern.compile("^Instinct 2X Sol(ar)?$");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hama/fit6900/HamaFit6900DeviceCoordinator.java
Patch:
@@ -40,7 +40,7 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device,
 
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("Fit6900");
+        return Pattern.compile("^Fit6900$");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/BatteryInfoActivity.java
Patch:
@@ -200,9 +200,9 @@ public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth
                 }
                 if (batteryConfig.getBatteryIcon() != GBDevice.BATTERY_ICON_DEFAULT) {
                     battery_status_device_icon.setImageResource(batteryConfig.getBatteryIcon());
-                }
-                if (gbDevice.isInitialized()) {
-                    battery_status_device_icon.setColorFilter(this.getResources().getColor(R.color.accent));
+                    if (gbDevice.isInitialized()) {
+                        battery_status_device_icon.setColorFilter(this.getResources().getColor(R.color.accent));
+                    }
                 }
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -212,7 +212,7 @@ private void addBatterySettings() {
                 final Preference prefHeader = new PreferenceCategory(requireContext());
                 prefHeader.setKey("pref_battery_header_" + batteryConfig.getBatteryIndex());
                 prefHeader.setIconSpaceReserved(false);
-                if (batteryConfig.getBatteryLabel() > 0) {
+                if (batteryConfig.getBatteryLabel() != GBDevice.BATTERY_LABEL_DEFAULT) {
                     prefHeader.setTitle(batteryConfig.getBatteryLabel());
                 } else {
                     prefHeader.setTitle(requireContext().getString(R.string.battery_i, batteryConfig.getBatteryIndex()));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/NotificationUpdateMessage.java
Patch:
@@ -104,7 +104,9 @@ private int getCategoryFlags(NotificationType notificationType) {
             case "generic_social":
             case "generic_alarm_clock":
             case "generic":
-                flags.add(NotificationFlag.BACKGROUND);
+                // TODO: Maybe make this configurable, but most users expect all notifications
+                // to be foreground, sending them as background was generating bug reports.
+                flags.add(NotificationFlag.FOREGROUND);
         }
         return (int) EnumUtils.generateBitVector(NotificationFlag.class, flags);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/garmin/watches/fenix/GarminFenix6SapphireCoordinator.java
Patch:
@@ -5,7 +5,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.GarminCoordinator;
 
-public class GarminFenix6SapphireSCoordinator extends GarminCoordinator {
+public class GarminFenix6SapphireCoordinator extends GarminCoordinator {
     @Override
     protected Pattern getSupportedDeviceName() {
         return Pattern.compile("^fenix 6 Sapphire$");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -51,7 +51,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBudsLiveDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBudsProDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.epix.GarminEpixProCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.fenix.GarminFenix6SapphireSCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.fenix.GarminFenix6SapphireCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.fenix.GarminFenix7ProCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.forerunner.GarminForerunner245Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.watches.instinct.GarminInstinct2XSolarCoordinator;
@@ -350,7 +350,7 @@ public enum DeviceType {
     NUTMINI(NutCoordinator.class),
     VIVOMOVE_HR(GarminVivomoveHrCoordinator.class),
     GARMIN_EPIX_PRO(GarminEpixProCoordinator.class),
-    GARMIN_FENIX_6_SAPPHIRE(GarminFenix6SapphireSCoordinator.class),
+    GARMIN_FENIX_6_SAPPHIRE(GarminFenix6SapphireCoordinator.class),
     GARMIN_FENIX_7_PRO(GarminFenix7ProCoordinator.class),
     GARMIN_FORERUNNER_245(GarminForerunner245Coordinator.class),
     GARMIN_SWIM_2(GarminSwim2Coordinator.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/garmin/epixpro/GarminEpixProCoordinator.java
Patch:
@@ -8,7 +8,7 @@
 public class GarminEpixProCoordinator extends GarminCoordinator {
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("^EPIX PRO - (\\d+) mm$");
+        return Pattern.compile("^EPIX PRO - \\d+mm$");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -199,6 +199,7 @@ public enum Subtype {
         SPORTS_OUTDOOR_WALKING_V1(Type.SPORTS, 0x02),
         SPORTS_INDOOR_CYCLING(Type.SPORTS, 0x07),
         SPORTS_FREESTYLE(Type.SPORTS, 0x08),
+        SPORTS_POOL_SWIMMING(Type.SPORTS, 0x09),
         SPORTS_ELLIPTICAL(Type.SPORTS, 0x0B),
         SPORTS_OUTDOOR_WALKING_V2(Type.SPORTS, 0x16),
         SPORTS_OUTDOOR_CYCLING(Type.SPORTS, 0x17),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/StringUtils.java
Patch:
@@ -119,7 +119,7 @@ public static StringBuilder join(String separator, String... elements) {
 
     @NonNull
     public static String getFirstOf(String first, String second) {
-        if (first != null && first.length() > 0) {
+        if (first != null && !first.isEmpty()) {
             return first;
         }
         if (second != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/http/HttpHandler.java
Patch:
@@ -131,7 +131,7 @@ private static GdiHttpService.HttpService.RawResponse createRawResponse(
         }
 
         return GdiHttpService.HttpService.RawResponse.newBuilder()
-                .setStatus(GdiHttpService.HttpService.Status.OK)
+                .setStatus(response.getStatus() / 100 == 2 ? GdiHttpService.HttpService.Status.OK : GdiHttpService.HttpService.Status.UNKNOWN_STATUS)
                 .setHttpStatus(response.getStatus())
                 .setBody(ByteString.copyFrom(responseBody))
                 .addAllHeader(responseHeaders)

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/TestBase.java
Patch:
@@ -13,10 +13,8 @@
 import java.io.File;
 
 import ch.qos.logback.classic.util.ContextInitializer;
-import nodomain.freeyourgadget.gadgetbridge.BuildConfig;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.GBEnvironment;
-import nodomain.freeyourgadget.gadgetbridge.Logging;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/garmin/venu3/GarminVenu3Coordinator.java
Patch:
@@ -13,6 +13,6 @@ protected Pattern getSupportedDeviceName() {
 
     @Override
     public int getDeviceNameResource() {
-        return R.string.devicetype_garmin_vivomove_style;
+        return R.string.devicetype_garmin_venu_3;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/ProtocolBufferHandler.java
Patch:
@@ -138,6 +138,7 @@ private ProtobufMessage processIncoming(ProtobufStatusMessage statusMessage) {
 
             if (protobufFragment.totalLength <= (statusMessage.getDataOffset() + maxChunkSize)) {
                 chunkedFragmentsMap.remove(protobufFragment);
+                return null;
             }
 
             return protobufFragment.getNextChunk(statusMessage);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/GlobalFITMessage.java
Patch:
@@ -93,6 +93,8 @@ public class GlobalFITMessage {
             new FieldDefinitionPrimitive(2, BaseType.UINT32, "start_time"),
             new FieldDefinitionPrimitive(3, BaseType.SINT32, "start_latitude"),
             new FieldDefinitionPrimitive(4, BaseType.SINT32, "start_longitude"),
+            new FieldDefinitionPrimitive(5, BaseType.ENUM, "sport"),
+            new FieldDefinitionPrimitive(6, BaseType.ENUM, "sub_sport"),
             new FieldDefinitionPrimitive(7, BaseType.UINT32, "total_elapsed_time"), // with pauses
             new FieldDefinitionPrimitive(8, BaseType.UINT32, "total_timer_time"), // no pauses
             new FieldDefinitionPrimitive(9, BaseType.UINT32, "total_distance"),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/deviceevents/FileDownloadedDeviceEvent.java
Patch:
@@ -5,5 +5,5 @@
 
 public class FileDownloadedDeviceEvent extends GBDeviceEvent {
     public FileTransferHandler.DirectoryEntry directoryEntry;
-
+    public String localPath;
 }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupportTest.java
Patch:
@@ -16,10 +16,11 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.fit.RecordDefinition;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.fit.RecordHeader;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.fit.baseTypes.BaseType;
+import nodomain.freeyourgadget.gadgetbridge.test.TestBase;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 
-public class GarminSupportTest {
+public class GarminSupportTest extends TestBase {
     //test strings from https://github.com/themarpe/cobs-java/blob/master/tests-java/Tests.java
     static final byte[] test_string_0 = new byte[]{0, 0, 0, 0};
     static final byte[] test_string_1 = new byte[]{0, '1', '2', '3', '4', '5'};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupport.java
Patch:
@@ -457,7 +457,7 @@ private void processDownloadQueue() {
 
             try {
                 FileTransferHandler.DirectoryEntry directoryEntry = filesToDownload.remove();
-                while (checkFileExists(directoryEntry.getFileName())) {
+                while (checkFileExists(directoryEntry.getFileName()) || checkFileExists(directoryEntry.getLegacyFileName())) {
                     LOG.debug("File: {} already downloaded, not downloading again.", directoryEntry.getFileName());
                     if (!getKeepActivityDataOnDevice()) // delete file from watch if already downloaded
                         sendOutgoingMessage(new SetFileFlagsMessage(directoryEntry.getFileIndex(), SetFileFlagsMessage.FileFlags.ARCHIVE));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/ProtocolBufferHandler.java
Patch:
@@ -349,7 +349,7 @@ private GdiSmartProto.Smart processProtobufSmsNotificationMessage(GdiSmsNotifica
                     );
                 } else {
                     builder.setStatus(GdiSmsNotification.SmsNotificationService.ResponseStatus.GENERIC_ERROR);
-                    LOG.error("Missing canned messages data for type {}", requestedType);
+                    LOG.info("Missing canned messages data for type {}", requestedType);
                 }
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/fieldDefinitions/FieldDefinitionLanguage.java
Patch:
@@ -28,7 +28,7 @@ public void encode(ByteBuffer byteBuffer, Object o) {
         baseType.encode(byteBuffer, o, scale, offset);
     }
 
-    private enum Language {
+    public enum Language {
         english(0),
         italian(2),
         ;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/fieldDefinitions/FieldDefinitionWeatherCondition.java
Patch:
@@ -142,7 +142,7 @@ private int openWeatherCodeToFitWeatherStatus(int openWeatherCode) {
         }
     }
 
-    enum Condition {
+    public enum Condition {
         CLEAR,
         PARTLY_CLOUDY,
         MOSTLY_CLOUDY,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/FitDefinitionMessage.java
Patch:
@@ -25,7 +25,7 @@ public static FitDefinitionMessage parseIncoming(MessageReader reader, GarminMes
         List<RecordDefinition> recordDefinitions = new ArrayList<>();
 
         while (reader.remaining() > 0) {
-            RecordHeader recordHeader = new RecordHeader((byte) reader.readByte(), true);
+            RecordHeader recordHeader = new RecordHeader((byte) reader.readByte());
             recordDefinitions.add(RecordDefinition.parseIncoming(reader, recordHeader));
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -53,6 +53,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.forerunner245.GarminForerunner245Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.instinct2s.GarminInstinct2SCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.instinct2solar.GarminInstinct2SolarCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.garmin.instinct2soltac.GarminInstinct2SolTacCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.venu3.GarminVenu3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.vivoactive4s.GarminVivoActive4SCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.garmin.vivoactive5.GarminVivoActive5Coordinator;
@@ -202,14 +203,14 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch2.RedmiWatch2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch2lite.RedmiWatch2LiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch3.RedmiWatch3Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch3active.RedmiWatch3ActiveCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch4.RedmiWatch4Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.watchs1.XiaomiWatchS1Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.watchs1active.XiaomiWatchS1ActiveCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.watchs1pro.XiaomiWatchS1ProCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.watchs3.XiaomiWatchS3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xwatch.XWatchCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.xiaomi.redmiwatch3active.RedmiWatch3ActiveCoordinator;
 
 /**
  * For every supported device, a device type constant must exist.
@@ -339,6 +340,7 @@ public enum DeviceType {
     GARMIN_FORERUNNER_245(GarminForerunner245Coordinator.class),
     GARMIN_INSTINCT_2S(GarminInstinct2SCoordinator.class),
     GARMIN_INSTINCT_2_SOLAR(GarminInstinct2SolarCoordinator.class),
+    GARMIN_INSTINCT_2_SOLTAC(GarminInstinct2SolTacCoordinator.class),
     GARMIN_VIVOMOVE_STYLE(GarminVivomoveStyleCoordinator.class),
     GARMIN_VENU_3(GarminVenu3Coordinator.class),
     GARMIN_VIVOACTIVE_4S(GarminVivoActive4SCoordinator.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/NotificationControlMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages;
 
 import java.util.Collections;
-import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -77,7 +77,7 @@ public static NotificationControlMessage parseIncoming(MessageReader reader, Gar
     }
 
     private static Map<NotificationsHandler.NotificationAttribute, Integer> createGetNotificationAttributesCommand(MessageReader reader) {
-        final Map<NotificationsHandler.NotificationAttribute, Integer> notificationAttributesMap = new HashMap<>();
+        final Map<NotificationsHandler.NotificationAttribute, Integer> notificationAttributesMap = new LinkedHashMap<>();
         while (reader.remaining() > 0) {
             final int attributeID = reader.readByte();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/NotificationsHandler.java
Patch:
@@ -347,6 +347,7 @@ private String encodeNotificationActionsString(NotificationSpec notificationSpec
                 for (NotificationSpec.Action action : notificationSpec.attachedActions) {
                     switch (action.type) {
                         case NotificationSpec.Action.TYPE_WEARABLE_REPLY:
+                        case NotificationSpec.Action.TYPE_SYNTECTIC_REPLY_PHONENR:
                             garminActions.add(encodeNotificationAction(NotificationAction.REPLY_MESSAGES, action.title));
                             break;
                         case NotificationSpec.Action.TYPE_SYNTECTIC_DISMISS:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/SupportedFileTypesStatusMessage.java
Patch:
@@ -33,7 +33,7 @@ public static SupportedFileTypesStatusMessage parseIncoming(MessageReader reader
             final String garminDeviceFileType = reader.readString();
             FileType fileType = new FileType(fileDataType, fileSubType, garminDeviceFileType);
             if (fileType.getFileType() == null) {
-                LOG.warn("Watch supports a filetype that we do not support: {}", garminDeviceFileType);
+                LOG.warn("Watch supports a filetype that we do not support: {}/{}: {}", fileDataType, fileSubType, garminDeviceFileType);
                 continue;
             }
             types.add(fileType);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/RecordData.java
Patch:
@@ -180,8 +180,8 @@ public String toString() {
         return oBuilder.toString();
     }
 
-    public LocalMessage getLocalMessage() {
-        return recordHeader.getLocalMessage();
+    public PredefinedLocalMessage getPredefinedLocalMessage() {
+        return recordHeader.getPredefinedLocalMessage();
     }
 
     private class FieldData {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/FitDefinitionMessage.java
Patch:
@@ -25,7 +25,7 @@ public static FitDefinitionMessage parseIncoming(MessageReader reader, GarminMes
         List<RecordDefinition> recordDefinitions = new ArrayList<>();
 
         while (reader.remaining() > 0) {
-            RecordHeader recordHeader = new RecordHeader((byte) reader.readByte());
+            RecordHeader recordHeader = new RecordHeader((byte) reader.readByte(), true);
             recordDefinitions.add(RecordDefinition.parseIncoming(reader, recordHeader));
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminSupportTest.java
Patch:
@@ -434,19 +434,19 @@ public void TestFitFileSettings2() {
                 "unknown_254(UINT16/2): 0 unknown_1(UINT16Z/2): 50008 unknown_0(UINT8/1): 1 unknown_3(UINT8Z/1): 1 ], \n" +
                 "Local Message: raw: 5 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/4): EVO unknown_3(UINT32/4): 45719172 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 0 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): 47617 unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 80 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 1 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 1 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): 5 unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
-                "Local Message: type: TODAY_WEATHER_CONDITIONS Global Message Number: UNK_6=[\n" +
+                "Local Message: raw: 6 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/5): P2SL unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 1 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): 28209 unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 90 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 1 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 1 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): 5 unknown_35(UINT8/3): [0,118,190] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
                 "Local Message: raw: 7 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/9): LANGSTER unknown_3(UINT32/4): 1231891 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 2 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): 10851 unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 1 unknown_19(UINT8/1): 0 unknown_20(UINT8/1): 1 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): 5 unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
                 "Local Message: raw: 8 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/2): M unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [53,39,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 3 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): 31337 unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 1 unknown_19(UINT8/1): 0 unknown_20(UINT8/1): 1 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): 5 unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
-                "Local Message: type: HOURLY_WEATHER_FORECAST Global Message Number: UNK_6=[\n" +
+                "Local Message: raw: 9 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/7): Bike 5 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 4 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 , \n" +
                 "unknown_0(STRING/7): Bike 6 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 5 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 , \n" +
                 "unknown_0(STRING/7): Bike 7 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 6 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 , \n" +
                 "unknown_0(STRING/7): Bike 8 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 7 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 , \n" +
                 "unknown_0(STRING/7): Bike 9 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 8 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
-                "Local Message: type: DAILY_WEATHER_FORECAST Global Message Number: UNK_6=[\n" +
+                "Local Message: raw: 10 Global Message Number: UNK_6=[\n" +
                 "unknown_0(STRING/8): Bike 10 unknown_3(UINT32/4): 0 unknown_39(UINT8Z/4): [39,53,,] unknown_41(UINT8Z/12): [23,21,19,18,17,16,15,14,13,12,11,] unknown_254(UINT16/2): 9 unknown_4(UINT16Z/2): null unknown_5(UINT16Z/2): null unknown_6(UINT16Z/2): null unknown_7(UINT16Z/2): null unknown_8(UINT16/2): 2096 unknown_9(UINT16/2): 0 unknown_10(UINT16/2): 95 unknown_11(UINT16/2): 500 unknown_42(UINT16Z/2): null unknown_1(ENUM/1): null unknown_2(ENUM/1): null unknown_12(UINT8/1): 1 unknown_13(UINT8/1): 1 unknown_14(UINT8/1): 0 unknown_15(UINT8/1): 0 unknown_16(UINT8/1): 0 unknown_17(UINT8/1): 0 unknown_18(UINT8/1): 0 unknown_19(UINT8/1): 254 unknown_20(UINT8/1): 0 unknown_21(UINT8Z/1): null unknown_22(UINT8Z/1): null unknown_23(UINT8Z/1): null unknown_24(UINT8Z/1): null unknown_35(UINT8/3): [0,50,] unknown_36(ENUM/1): 4 unknown_37(UINT8/1): null unknown_38(UINT8Z/1): 2 unknown_40(UINT8Z/1): 11 unknown_43(UINT8Z/1): null unknown_44(ENUM/1): 0 ], \n" +
                 "Local Message: raw: 11 Global Message Number: CONNECTIVITY=[\n" +
                 "name(STRING/9): Edge 510 bluetooth_enabled(ENUM/1): 0 live_tracking_enabled(ENUM/1): null weather_conditions_enabled(ENUM/1): null weather_alerts_enabled(ENUM/1): null auto_activity_upload_enabled(ENUM/1): null course_download_enabled(ENUM/1): null workout_download_enabled(ENUM/1): null gps_ephemeris_download_enabled(ENUM/1): null ]}";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -464,4 +464,6 @@ public class DeviceSettingsPreferenceConst {
 
     public static final String PREF_CYCLING_SENSOR_PERSISTENCE_INTERVAL = "pref_cycling_persistence_interval";
     public static final String PREF_CYCLING_SENSOR_WHEEL_DIAMETER = "pref_cycling_wheel_diameter";
+
+    public static final String PREF_GARMIN_DEFAULT_REPLY_SUFFIX = "pref_key_garmin_default_reply_suffix";
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -648,6 +648,8 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
 
         addPreferenceHandlerFor(PREF_SPEAK_NOTIFICATIONS_FOCUS_EXCLUSIVE);
 
+        addPreferenceHandlerFor(PREF_GARMIN_DEFAULT_REPLY_SUFFIX);
+
         addPreferenceHandlerFor("lock");
 
         String sleepTimeState = prefs.getString(PREF_SLEEP_TIME, PREF_DO_NOT_DISTURB_OFF);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/GFDIMessage.java
Patch:
@@ -103,6 +103,7 @@ public enum GarminMessage {
         UPLOAD_REQUEST(5003, UploadRequestMessage.class),
         FILE_TRANSFER_DATA(5004, FileTransferDataMessage.class),
         CREATE_FILE(5005, CreateFileMessage.class),
+        SET_FILE_FLAG(5008, SetFileFlagsMessage.class),
         FIT_DEFINITION(5011, FitDefinitionMessage.class),
         FIT_DATA(5012, FitDataMessage.class),
         WEATHER_REQUEST(5014, WeatherMessage.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/GFDIStatusMessage.java
Patch:
@@ -26,6 +26,8 @@ public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessag
             SupportedFileTypesStatusMessage supportedFileTypesStatusMessage = SupportedFileTypesStatusMessage.parseIncoming(reader, garminMessage);
             LOG.info("{}", supportedFileTypesStatusMessage);
             return supportedFileTypesStatusMessage;
+        } else if (GarminMessage.SET_FILE_FLAG.equals(originalGarminMessage)) {
+            return SetFileFlagsStatusMessage.parseIncoming(reader, garminMessage);
         } else if (GarminMessage.FIT_DEFINITION.equals(originalGarminMessage)) {
             return FitDefinitionStatusMessage.parseIncoming(reader, originalGarminMessage);
         } else if (GarminMessage.FIT_DATA.equals(originalGarminMessage)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/GarminByteBufferReader.java
Patch:
@@ -54,15 +54,13 @@ public double readFloat64() {
     public String readString() {
         final int size = readByte();
         byte[] bytes = new byte[size];
-        if (byteBuffer.remaining() < size) throw new IllegalStateException();
         byteBuffer.get(bytes);
         return new String(bytes, StandardCharsets.UTF_8);
     }
 
     public byte[] readBytes(int size) {
         byte[] bytes = new byte[size];
 
-        if (byteBuffer.remaining() < size) throw new IllegalStateException();
         byteBuffer.get(bytes);
 
         return bytes;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/MessageHandler.java
Patch:
@@ -3,5 +3,5 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.GFDIMessage;
 
 public interface MessageHandler {
-    public GFDIMessage handle(GFDIMessage message);
+    GFDIMessage handle(GFDIMessage message);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/NotificationsHandler.java
Patch:
@@ -262,7 +262,7 @@ public byte[] getNotificationSpecAttribute(NotificationSpec notificationSpec, in
         }
     }
 
-    class Upload {
+    public static class Upload {
 
         private NotificationFragment currentlyUploading;
 
@@ -292,7 +292,7 @@ private GFDIMessage processUploadProgress(NotificationDataStatusMessage notifica
 
     }
 
-    class NotificationFragment {
+    public static class NotificationFragment {
         private final int dataSize;
         private final ByteBuffer dataHolder;
         private final int maxBlockSize = 300;
@@ -330,5 +330,4 @@ private void setRunningCrc(int runningCrc) {
             this.runningCrc = runningCrc;
         }
     }
-
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/FitFile.java
Patch:
@@ -1,5 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.fit;
 
+import androidx.annotation.NonNull;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -137,6 +139,7 @@ public void generateOutgoingDataPayload(MessageWriter writer) {
 
     }
 
+    @NonNull
     @Override
     public String toString() {
         return dataRecords.toString();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/RecordHeader.java
Patch:
@@ -1,5 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.fit;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
 
@@ -86,6 +87,8 @@ public byte generateOutgoingDataPayload() { //TODO: unclear if correct
         return base;
     }
 
+    @NonNull
+    @Override
     public String toString() {
         return "Local Message: " + (null == localMessage ? "raw: " + rawLocalMessageType : "type: " + localMessage.name());
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/FindMyPhoneRequestMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages;
 
-
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFindPhone;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/GFDIMessage.java
Patch:
@@ -150,6 +150,7 @@ public static GarminMessage fromId(final int id) {
             }
             return null;
         }
+
         public int getId() {
             return id;
         }
@@ -178,7 +179,7 @@ public static Status fromCode(final int code) {
 
     }
 
-    protected static class MessageReader extends GarminByteBufferReader {
+    public static class MessageReader extends GarminByteBufferReader {
 
         private final int payloadSize;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/MusicControlCapabilitiesMessage.java
Patch:
@@ -34,7 +34,7 @@ protected boolean generateOutgoing() {
         return true;
     }
 
-    enum GarminMusicControlCommand {
+    public enum GarminMusicControlCommand {
         TOGGLE_PLAY_PAUSE,
         SKIP_TO_NEXT_ITEM,
         SKIP_TO_PREVIOUS_ITEM,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/CreateFileStatusMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
 
-
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.FileType;
 
 public class CreateFileStatusMessage extends GFDIStatusMessage {
@@ -31,7 +30,7 @@ public static CreateFileStatusMessage parseIncoming(MessageReader reader, Garmin
         final int subType = reader.readByte();
         final FileType.FILETYPE filetype = FileType.FILETYPE.fromDataTypeSubType(dataType, subType);
         final int fileNumber = reader.readShort();
-        if (!createStatus.equals(CreateStatus.OK)) {
+        if (!CreateStatus.OK.equals(createStatus)) {
             LOG.warn("Received {} / {} for message {}", status, createStatus, garminMessage);
         } else {
             LOG.info("Received {} / {} for message {}", status, createStatus, garminMessage);
@@ -51,7 +50,7 @@ public boolean canProceed() {
         return status.equals(Status.ACK) && createStatus.equals(CreateStatus.OK);
     }
 
-    enum CreateStatus {
+    public enum CreateStatus {
         OK,
         DUPLICATE,
         NO_SPACE,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/DownloadRequestStatusMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
 
-
 public class DownloadRequestStatusMessage extends GFDIStatusMessage {
     private final Status status;
     private final DownloadStatus downloadStatus;
@@ -22,7 +21,7 @@ public static DownloadRequestStatusMessage parseIncoming(MessageReader reader, G
         final DownloadStatus downloadStatus = DownloadStatus.fromId(reader.readByte());
         final int maxFileSize = reader.readInt();
 
-        if (!downloadStatus.equals(DownloadStatus.OK)) {
+        if (!DownloadStatus.OK.equals(downloadStatus)) {
             LOG.warn("Received {} / {} for message {}", status, downloadStatus, garminMessage);
         } else {
             LOG.info("Received {} / {} for message {}", status, downloadStatus, garminMessage);
@@ -38,7 +37,7 @@ public boolean canProceed() {
         return status.equals(Status.ACK) && downloadStatus.equals(DownloadStatus.OK);
     }
 
-    enum DownloadStatus { //was DownloadRequestResponseMessage
+    public enum DownloadStatus { //was DownloadRequestResponseMessage
         OK,
         INDEX_UNKNOWN,
         INDEX_NOT_READABLE,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/FileTransferDataStatusMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
 
-
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.MessageWriter;
 
 public class FileTransferDataStatusMessage extends GFDIStatusMessage {
@@ -30,7 +29,7 @@ public static FileTransferDataStatusMessage parseIncoming(MessageReader reader,
         final TransferStatus transferStatus = TransferStatus.fromId(reader.readByte());
         final int dataOffset = reader.readInt();
 
-        if (!transferStatus.equals(TransferStatus.OK)) {
+        if (!TransferStatus.OK.equals(transferStatus)) {
             LOG.warn("Received {} / {} for message {}", status, transferStatus, garminMessage);
         } else {
             LOG.info("Received {} / {} for message {}", status, transferStatus, garminMessage);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/GFDIStatusMessage.java
Patch:
@@ -9,6 +9,7 @@ public abstract class GFDIStatusMessage extends GFDIMessage {
     public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessage garminMessage) {
         int originalMessageType = reader.readShort();
         final GarminMessage originalGarminMessage = GFDIMessage.GarminMessage.fromId(originalMessageType);
+
         if (GarminMessage.PROTOBUF_REQUEST.equals(originalGarminMessage) || GarminMessage.PROTOBUF_RESPONSE.equals(originalGarminMessage)) {
             return ProtobufStatusMessage.parseIncoming(reader, originalGarminMessage);
         } else if (GarminMessage.NOTIFICATION_DATA.equals(originalGarminMessage)) {
@@ -23,7 +24,7 @@ public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessag
             return CreateFileStatusMessage.parseIncoming(reader, originalGarminMessage);
         } else if (GarminMessage.SUPPORTED_FILE_TYPES_REQUEST.equals(originalGarminMessage)) {
             SupportedFileTypesStatusMessage supportedFileTypesStatusMessage = SupportedFileTypesStatusMessage.parseIncoming(reader, garminMessage);
-            LOG.info(supportedFileTypesStatusMessage.toString());
+            LOG.info("{}", supportedFileTypesStatusMessage);
             return supportedFileTypesStatusMessage;
         } else if (GarminMessage.FIT_DEFINITION.equals(originalGarminMessage)) {
             return FitDefinitionStatusMessage.parseIncoming(reader, originalGarminMessage);
@@ -33,7 +34,7 @@ public static GFDIStatusMessage parseIncoming(MessageReader reader, GarminMessag
             final Status status = Status.fromCode(reader.readByte());
 
             if (Status.ACK == status) {
-                LOG.info("Received ACK for message {}", originalGarminMessage.name());
+                LOG.info("Received ACK for message {}", originalGarminMessage);
             } else {
                 LOG.warn("Received {} for message {}", status, (null == originalGarminMessage) ? originalMessageType : originalGarminMessage.name());
             }
@@ -50,5 +51,4 @@ protected boolean generateOutgoing() {
     protected Status getStatus() {
         return status;
     }
-
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/NotificationDataStatusMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
 
-
 public class NotificationDataStatusMessage extends GFDIStatusMessage {
     private final Status status;
     private final TransferStatus transferStatus;
@@ -19,7 +18,7 @@ public static NotificationDataStatusMessage parseIncoming(MessageReader reader,
         }
         final TransferStatus transferStatus = TransferStatus.fromId(reader.readByte());
 
-        if (!transferStatus.equals(TransferStatus.OK)) {
+        if (!TransferStatus.OK.equals(transferStatus)) {
             LOG.warn("Received {} / {} for message {}", status, transferStatus, garminMessage);
         } else {
             LOG.info("Received {} / {} for message {}", status, transferStatus, garminMessage);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/UploadRequestStatusMessage.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
 
-
 public class UploadRequestStatusMessage extends GFDIStatusMessage {
     private final Status status;
     private final UploadStatus uploadStatus;
@@ -28,7 +27,7 @@ public static UploadRequestStatusMessage parseIncoming(MessageReader reader, Gar
         final int maxFileSize = reader.readInt();
         final int crcSeed = reader.readShort();
 
-        if (!uploadStatus.equals(UploadStatus.OK)) {
+        if (!UploadStatus.OK.equals(uploadStatus)) {
             LOG.warn("Received {} / {} for message {}", status, uploadStatus, garminMessage);
         } else {
             LOG.info("Received {} / {} for message {}", status, uploadStatus, garminMessage);
@@ -48,7 +47,7 @@ public boolean canProceed() {
         return status.equals(Status.ACK) && uploadStatus.equals(UploadStatus.OK);
     }
 
-    enum UploadStatus {
+    public enum UploadStatus {
         OK,
         INDEX_UNKNOWN,
         INDEX_NOT_WRITEABLE,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/FindMyPhoneRequestMessage.java
Patch:
@@ -23,7 +23,7 @@ public static FindMyPhoneRequestMessage parseIncoming(MessageReader reader, Garm
     @Override
     public GBDeviceEvent getGBDeviceEvent() {
         final GBDeviceEventFindPhone findPhoneEvent = new GBDeviceEventFindPhone();
-        findPhoneEvent.event = garminMessage == GarminMessage.FIND_MY_PHONE ? GBDeviceEventFindPhone.Event.START : GBDeviceEventFindPhone.Event.STOP;
+        findPhoneEvent.event = GBDeviceEventFindPhone.Event.START;
         return findPhoneEvent;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/DeviceInformationMessage.java
Patch:
@@ -35,6 +35,7 @@ public DeviceInformationMessage(GarminMessage garminMessage, int protocolVersion
         this.deviceName = deviceName;
         this.deviceModel = deviceModel;
 
+        GFDIMessage.setMaxPacketSize(maxPacketSize);
         this.statusMessage = getStatusMessage();
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseType.java
Patch:
@@ -10,7 +10,7 @@ public enum BaseType {
     SINT16(0x83, new BaseTypeShort(false, 0x7FFF)),
     UINT16(0x84, new BaseTypeShort(true, 0xFFFF)),
     SINT32(0x85, new BaseTypeInt(false, 0x7FFFFFFF)),
-    UINT32(0x86, new BaseTypeInt(true, 0xFFFFFFFF)),
+    UINT32(0x86, new BaseTypeInt(true, 0xFFFFFFFFL)),
     STRING(0x07, new BaseTypeByte(true, 0x00)),
     FLOAT32(0x88, new BaseTypeFloat()),
     FLOAT64(0x89, new BaseTypeDouble()),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/fit/baseTypes/BaseType.java
Patch:
@@ -5,7 +5,7 @@
 //see https://github.com/dtcooper/python-fitparse/blob/master/fitparse/records.py
 public enum BaseType {
     ENUM(0x00, new BaseTypeByte(true, 0xFF)),
-    SINT8(0x01, new BaseTypeByte(false, 0xFF)),
+    SINT8(0x01, new BaseTypeByte(false, 0x7F)),
     UINT8(0x02, new BaseTypeByte(true, 0xFF)),
     SINT16(0x83, new BaseTypeShort(false, 0x7FFF)),
     UINT16(0x84, new BaseTypeShort(true, 0xFFFF)),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/ProtocolBufferHandler.java
Patch:
@@ -20,7 +20,7 @@
 import nodomain.freeyourgadget.gadgetbridge.proto.vivomovehr.GdiSmartProto;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.GFDIMessage;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.ProtobufMessage;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.ProtobufStatusMessage;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status.ProtobufStatusMessage;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.calendar.CalendarEvent;
 import nodomain.freeyourgadget.gadgetbridge.util.calendar.CalendarManager;
@@ -75,13 +75,14 @@ ProtobufMessage processIncoming(ProtobufMessage message) {
             }
             if (!processed) {
                 LOG.warn("Unknown protobuf request: {}", smart);
+                message.setStatusMessage(new ProtobufStatusMessage(message.getMessageType(), GFDIMessage.Status.ACK, message.getRequestId(), message.getDataOffset(), ProtobufStatusMessage.ProtobufChunkStatus.DISCARDED, ProtobufStatusMessage.ProtobufStatusCode.UNKNOWN_REQUEST_ID));
             }
         }
         return null;
     }
 
     public ProtobufMessage processIncoming(ProtobufStatusMessage statusMessage) {
-        LOG.info("Processing protobuf status message #{}@{}:  status={}, error={}", statusMessage.getRequestId(), statusMessage.getDataOffset(), statusMessage.getProtobufStatus(), statusMessage.getError());
+        LOG.info("Processing protobuf status message #{}@{}:  status={}, error={}", statusMessage.getRequestId(), statusMessage.getDataOffset(), statusMessage.getProtobufChunkStatus(), statusMessage.getProtobufStatusCode());
         //TODO: check status and react accordingly, right now we blindly proceed to next chunk
         if (chunkedFragmentsMap.containsKey(statusMessage.getRequestId()) && statusMessage.isOK()) {
             final ProtobufFragment protobufFragment = chunkedFragmentsMap.get(statusMessage.getRequestId());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/SetDeviceSettingsMessage.java
Patch:
@@ -17,7 +17,7 @@ public SetDeviceSettingsMessage(Map<GarminDeviceSetting, Object> settings) {
     protected boolean generateOutgoing() {
         final MessageWriter writer = new MessageWriter(response);
         writer.writeShort(0); // packet size will be filled below
-        writer.writeShort(GarminMessage.DEVICE_INFORMATION.getId());
+        writer.writeShort(GarminMessage.DEVICE_SETTINGS.getId());
         writer.writeByte(settings.size());
         for (Map.Entry<GarminDeviceSetting, Object> settingPair : settings.entrySet()) {
             final GarminDeviceSetting setting = settingPair.getKey();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/UnhandledMessage.java
Patch:
@@ -1,5 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages;
 
+import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status.GenericStatusMessage;
+
 public class UnhandledMessage extends GFDIMessage {
 
     private final int messageType;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/garmin/messages/status/GenericStatusMessage.java
Patch:
@@ -1,4 +1,6 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.status;
+
+import nodomain.freeyourgadget.gadgetbridge.service.devices.garmin.messages.MessageWriter;
 
 public class GenericStatusMessage extends GFDIStatusMessage {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/huaweiband9/HuaweiBand9Coordinator.java
Patch:
@@ -66,6 +66,6 @@ public TimeSampleProvider<? extends Spo2Sample> getSpo2SampleProvider(GBDevice d
 
     @Override
     public int getDeviceNameResource() {
-        return R.string.devicetype_huawei_band8;
+        return R.string.devicetype_huawei_band9;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiConstants.java
Patch:
@@ -68,6 +68,7 @@ public static class CryptoTags {
     public static final String HU_WATCHFIT_NAME = "huawei watch fit-";
     public static final String HU_WATCHFIT2_NAME = "huawei watch fit 2-";
     public static final String HU_WATCHULTIMATE_NAME = "huawei watch ultimate-";
+    public static final String HU_WATCH4PRO_NAME = "huawei watch 4 pro-";
 
     public static final String PREF_HUAWEI_ADDRESS = "huawei_address";
     public static final String PREF_HUAWEI_WORKMODE = "workmode";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -118,6 +118,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiband8.HuaweiBand8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweibandaw70.HuaweiBandAw70Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweitalkbandb6.HuaweiTalkBandB6Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatch4pro.HuaweiWatch4ProCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchfit.HuaweiWatchFitCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchfit2.HuaweiWatchFit2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchgt.HuaweiWatchGTCoordinator;
@@ -371,6 +372,7 @@ public enum DeviceType {
     HUAWEIWATCHFIT(HuaweiWatchFitCoordinator.class),
     HUAWEIWATCHFIT2(HuaweiWatchFit2Coordinator.class),
     HUAWEIWATCHULTIMATE(HuaweiWatchUltimateCoordinator.class),
+    HUAWEIWATCH4PRO(HuaweiWatch4ProCoordinator.class),
     VESC(VescCoordinator.class),
     BINARY_SENSOR(BinarySensorCoordinator.class),
     FLIPPER_ZERO(FlipperZeroCoordinator.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/galaxy_buds/GalaxyBuds2DeviceCoordinator.java
Patch:
@@ -23,14 +23,13 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSpecificSettingsCustomizer;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.BatteryConfig;
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
 public class GalaxyBuds2DeviceCoordinator extends GalaxyBudsGenericCoordinator {
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("Galaxy Buds2 \\(.*");
+        // Some devices are just called "Buds2", others "Galaxy Buds2 (..."
+        return Pattern.compile("(Galaxy )?Buds2( \\(.*)?");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiWeatherService.java
Patch:
@@ -302,7 +302,7 @@ public void sendCurrentConditions(final WeatherSpec weatherSpec) {
                                         "Unknown" // some string like "Moderate"
                                 ))
                                 .setWarning(XiaomiProto.WeatherWarnings.newBuilder()) // TODO add warnings when they become available through spec
-                                .setPressure(weatherSpec.pressure)
+                                .setPressure(weatherSpec.pressure * 100f)
                 ))
                 .build();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -119,6 +119,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweibandaw70.HuaweiBandAw70Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweitalkbandb6.HuaweiTalkBandB6Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchfit.HuaweiWatchFitCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchfit2.HuaweiWatchFit2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchgt.HuaweiWatchGTCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchgt2.HuaweiWatchGT2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.huaweiwatchgt2e.HuaweiWatchGT2eCoordinator;
@@ -366,7 +367,7 @@ public enum DeviceType {
     HUAWEIWATCHGT4(HuaweiWatchGT4Coordinator.class),
     HUAWEIBAND8(HuaweiBand8Coordinator.class),
     HUAWEIWATCHFIT(HuaweiWatchFitCoordinator.class),
-    HUAWEIWATCHFIT2(HuaweiWatchFitCoordinator.class),
+    HUAWEIWATCHFIT2(HuaweiWatchFit2Coordinator.class),
     HUAWEIWATCHULTIMATE(HuaweiWatchUltimateCoordinator.class),
     VESC(VescCoordinator.class),
     BINARY_SENSOR(BinarySensorCoordinator.class),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiSupportProvider.java
Patch:
@@ -1515,7 +1515,9 @@ public void addWorkoutSampleData(Long workoutId, List<Workout.WorkoutData.Respon
                         data.strokeRate,
                         unknown,
                         data.calories,
-                        data.cyclingPower
+                        data.cyclingPower,
+                        data.frequency,
+                        data.altitude
                 );
                 dao.insertOrReplace(dataSample);
             }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/util/language/LanguageUtilsTest.java
Patch:
@@ -53,7 +53,7 @@ public void testStringTransliterateSerbian() throws Exception {
         final Map<String, String> tests = new LinkedHashMap<String, String>() {{
             put("Тхе qицк брон фоx јумпед овер тхе лаз* дог", "The qick bron fox jumped over the laz* dog");
             put("Српска ћирилица", "Srpska cirilica");
-            put("Novak Đoković", "Novak Dokovic");
+            put("Novak Đoković", "Novak Djokovic");
             put("Џ, Њ and Љ", "Dz, Nj and Lj");
             put("Љуљачка", "Ljuljacka");
             put("Наковањ", "Nakovanj");
@@ -63,7 +63,7 @@ public void testStringTransliterateSerbian() throws Exception {
             put("Ћ, ћ", "C, c");
             put("Ж, ж", "Z, z");
             put("Ш, ш", "S, s");
-            put("Ђ, ђ", "D, d");
+            put("Ђ, ђ", "Dj, dj");
             put("Џ, џ", "Dz, dz");
             put("Њ, њ", "Nj, nj");
             put("Љ, љ", "Lj, lj");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -106,7 +106,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
-import nodomain.freeyourgadget.gadgetbridge.externalevents.gps.GBLocationManager;
+import nodomain.freeyourgadget.gadgetbridge.externalevents.gps.GBLocationService;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.opentracks.OpenTracksContentObserver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.opentracks.OpenTracksController;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
@@ -659,7 +659,7 @@ public void onClick(View v) {
         stopPhoneGpsLocationListener.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                GBLocationManager.stopAll(getBaseContext());
+                GBLocationService.stop(DebugActivity.this, null);
             }
         });
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/AsynchronousResponse.java
Patch:
@@ -49,8 +49,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.Menstrual;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.MusicControl;
 import nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets.Weather;
-import nodomain.freeyourgadget.gadgetbridge.externalevents.gps.GBLocationListener;
-import nodomain.freeyourgadget.gadgetbridge.externalevents.gps.GBLocationManager;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huawei.requests.Request;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huawei.requests.GetPhoneInfoRequest;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huawei.requests.SendMenstrualModifyTimeRequest;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendNotificationRequest.java
Patch:
@@ -65,7 +65,7 @@ public void buildNotificationTLVFromNotificationSpec(NotificationSpec notificati
 
         String body = notificationSpec.body;
         if (body.length() > supportProvider.getHuaweiCoordinator().getContentLength()) {
-            body = notificationSpec.body.substring(0x0, supportProvider.getHuaweiCoordinator().getContentLength() - 0xC);
+            body = notificationSpec.body.substring(0x0, supportProvider.getHuaweiCoordinator().getContentLength() - 0xD);
             body += "...";
         }
         this.packet = new Notifications.NotificationActionRequest(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiUtil.java
Patch:
@@ -51,7 +51,7 @@ public static byte[] getTimeAndZoneId(final Calendar now) {
         byte[] id = now.getTimeZone().getID().getBytes();
         return ByteBuffer.allocate(6 + id.length)
             .putInt((int)(now.getTimeInMillis() / 1000))
-            .put((byte)(zoneRawOffset < 0 ? (zoneRawOffset / 3600 + 128) : zoneRawOffset / 3600) )
+            .put((byte)(zoneRawOffset < 0 ? (-zoneRawOffset / 3600 + 128) : zoneRawOffset / 3600) )
             .put((byte)(zoneRawOffset / 60 % 60))
             .put(id)
             .array();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/widgets/WidgetScreensListActivity.java
Patch:
@@ -159,9 +159,9 @@ public void configureWidgetScreen(final WidgetScreen widgetScreen) {
     public void deleteWidgetScreen(final WidgetScreen widgetScreen) {
         if (mGBWidgetScreenListAdapter.getItemCount() - 1 < widgetManager.getMinScreens()) {
             // Under minimum slots
-            new MaterialAlertDialogBuilder(this.getBaseContext())
+            new MaterialAlertDialogBuilder(this)
                     .setTitle(R.string.widget_screen_delete_confirm_title)
-                    .setMessage(getBaseContext().getString(R.string.widget_screen_min_screens, String.format(Locale.getDefault(), "%d", widgetManager.getMinScreens())))
+                    .setMessage(this.getString(R.string.widget_screen_min_screens, String.format(Locale.getDefault(), "%d", widgetManager.getMinScreens())))
                     .setIcon(R.drawable.ic_warning)
                     .setPositiveButton(android.R.string.ok, (dialog, whichButton) -> {
                     })

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/capabilities/widgets/WidgetType.java
Patch:
@@ -21,5 +21,6 @@ public enum WidgetType {
     TALL,  // 1x2
     WIDE,  // 2x1
     LARGE, // 2x2
+    PORTRAIT_LARGE, // 2x3
     ;
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/capabilities/widgets/WidgetType.java
Patch:
@@ -20,5 +20,6 @@ public enum WidgetType {
     SMALL, // 1x1
     TALL,  // 1x2
     WIDE,  // 2x1
+    LARGE, // 2x2
     ;
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -440,4 +440,5 @@ public class DeviceSettingsPreferenceConst {
 
     public static final String PREF_AUTO_REPLY_INCOMING_CALL = "pref_auto_reply_phonecall";
     public static final String PREF_AUTO_REPLY_INCOMING_CALL_DELAY = "pref_auto_reply_phonecall_delay";
+    public static final String PREF_SPEAK_NOTIFICATIONS_ALOUD = "pref_speak_notifications_aloud";
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -244,7 +244,7 @@ public void onPageSelected(int position) {
         });
 
         // Make sure the SwipeRefreshLayout doesn't interfere with the ViewPager2
-        viewPager.getChildAt(viewPager.getCurrentItem()).setOnTouchListener((v, event) -> {
+        viewPager.getChildAt(0).setOnTouchListener((v, event) -> {
             if (event.getAction() == MotionEvent.ACTION_MOVE) {
                 swipeLayout.setEnabled(false);
             } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -99,6 +99,8 @@ public String getGenericType() {
             case GENERIC_EMAIL:
             case GENERIC_NAVIGATION:
             case GENERIC_SMS:
+            case GENERIC_PHONE:
+            case GENERIC_CALENDAR:
             case GENERIC_ALARM_CLOCK:
                 return getFixedValue();
             case FACEBOOK:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -294,6 +294,8 @@ protected void onCreate(Bundle savedInstanceState) {
                 GB.toast(this, getString(R.string.error_showing_changelog), Toast.LENGTH_LONG, GB.ERROR);
             }
         }
+
+        GBApplication.deviceService().requestDeviceInfo();
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DevicesFragment.java
Patch:
@@ -178,8 +178,6 @@ public void onChildDrawOver(Canvas c, RecyclerView recyclerView,
 
         if (GB.isBluetoothEnabled() && deviceList.isEmpty() && Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
             startActivity(new Intent(getActivity(), DiscoveryActivityV2.class));
-        } else {
-            GBApplication.deviceService().requestDeviceInfo();
         }
 
         return currentView;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiConnectionSupport.java
Patch:
@@ -31,7 +31,6 @@ public abstract class XiaomiConnectionSupport {
     public abstract void runOnQueue(String taskName, Runnable run);
     public abstract void dispose();
     public abstract void setContext(final GBDevice device, final BluetoothAdapter adapter, final Context context);
-    public abstract void disconnect();
     public abstract void sendCommand(final String taskName, final XiaomiProto.Command command);
     public abstract void sendDataChunk(final String taskName, final byte[] chunk, @Nullable final XiaomiCharacteristic.SendCallback callback);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -436,4 +436,6 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_CLAP_HANDS_TO_WAKEUP_DEVICE = "pref_key_clap_hands_to_wakeup_device";
     public static final String PREF_POWER_SAVING = "pref_key_power_saving";
     public static final String PREF_FORCE_CONNECTION_TYPE = "pref_force_connection_type";
+
+    public static final String PREF_AUTO_REPLY_INCOMING_CALL = "pref_auto_reply_phonecall";
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -476,6 +476,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
         addPreferenceHandlerFor(PREF_DISPLAY_CALLER);
         addPreferenceHandlerFor(PREF_NOTIFICATION_DELAY_CALLS);
         addPreferenceHandlerFor(PREF_CALL_REJECT_METHOD);
+        addPreferenceHandlerFor(PREF_AUTO_REPLY_INCOMING_CALL);
 
         addPreferenceHandlerFor(PREF_SLEEP_MODE_SLEEP_SCREEN);
         addPreferenceHandlerFor(PREF_SLEEP_MODE_SMART_ENABLE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/Widget.java
Patch:
@@ -25,7 +25,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.os.Build;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.RemoteViews;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -845,7 +845,7 @@ private void showDeviceSubmenu(final View v, final GBDevice device) {
         boolean deviceConnected = device.getState() != GBDevice.State.NOT_CONNECTED;
 
         PopupMenu menu = new PopupMenu(v.getContext(), v);
-        menu.inflate(R.menu.activity_controlcenterv2_device_submenu);
+        menu.inflate(R.menu.fragment_devices_device_submenu);
 
         final boolean detailsShown = expandedDeviceAddress.equals(device.getAddress());
         boolean showInfoIcon = device.hasDeviceInfos() && !device.isBusy();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/UnknownDeviceCoordinator.java
Patch:
@@ -37,7 +37,6 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.unknown.UnknownDeviceSupport;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/StopNotificationRequest.java
Patch:
@@ -37,11 +37,9 @@ protected List<byte[]> createRequest() throws RequestCreationException {
                     paramsProvider,
                     supportProvider.getNotificationId(),
                     Notifications.NotificationType.stopNotification,
-                    Notifications.TextEncoding.standard,
+                    supportProvider.getHuaweiCoordinator().getContentFormat(),
                     null,
-                    Notifications.TextEncoding.standard,
                     null,
-                    Notifications.TextEncoding.standard,
                     null,
                     null
             ).serialize();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -52,6 +52,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 import java.util.UUID;
@@ -600,7 +601,7 @@ private void connectToDevice(@Nullable final GBDevice device, boolean firstTime)
                     continue;
                 }
 
-                final Set<String> lastDeviceAddresses = prefs.getStringSet(GBPrefs.LAST_DEVICE_ADDRESSES, Collections.emptySet());
+                final Set<String> lastDeviceAddresses = new HashSet<>(prefs.getStringSet(GBPrefs.LAST_DEVICE_ADDRESSES, Collections.emptySet()));
 
                 if (!lastDeviceAddresses.contains(btDeviceAddress)) {
                     lastDeviceAddresses.add(btDeviceAddress);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/ZeppOsWeather.java
Patch:
@@ -257,7 +257,7 @@ private Range getSunriseSunset(final GregorianCalendar date, final Location loca
 
         private Range getSunriseSunset(final Date sunRise, final Date sunSet) {
             final SimpleDateFormat sunRiseSetSdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ROOT);
-            sunRiseSetSdf.setTimeZone(TimeZone.getTimeZone("UTC"));
+            sunRiseSetSdf.setTimeZone(TimeZone.getDefault());
 
             final String from = sunRiseSetSdf.format(sunRise);
             final String to = sunRiseSetSdf.format(sunSet);
@@ -301,7 +301,7 @@ public void add(final int rise, final int set, final int phase) {
             moonPhaseValue.add(String.valueOf(phase));
 
             final SimpleDateFormat moonRiseSetSdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ROOT);
-            moonRiseSetSdf.setTimeZone(TimeZone.getTimeZone("UTC"));
+            moonRiseSetSdf.setTimeZone(TimeZone.getDefault());
 
             final String from = moonRiseSetSdf.format(new Date(rise * 1000L));
             final String to = moonRiseSetSdf.format(new Date(set * 1000L));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiSettingsCustomizer.java
Patch:
@@ -112,6 +112,7 @@ public void customizeSettings(final DeviceSpecificSettingsHandler handler, Prefs
         handler.addPreferenceHandlerFor(PREF_FORCE_OPTIONS);
         handler.addPreferenceHandlerFor(PREF_FORCE_ENABLE_SMART_ALARM);
         handler.addPreferenceHandlerFor(PREF_FORCE_ENABLE_WEAR_LOCATION);
+        handler.addPreferenceHandlerFor(PREF_FORCE_DND_SUPPORT);
         handler.addPreferenceHandlerFor(PREF_FORCE_ENABLE_HEARTRATE_SUPPORT);
 
         handler.addPreferenceHandlerFor(PREF_HUAWEI_WORKMODE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -376,7 +376,9 @@ public void onClick(View v) {
 
                     Weather.getInstance().setWeatherSpec(new ArrayList<>(Collections.singletonList(weatherSpec)));
                 }
-                GBApplication.deviceService().onSendWeather(new ArrayList<>(Collections.singletonList(Weather.getInstance().getWeatherSpec())));
+
+                final ArrayList<WeatherSpec> specs = new ArrayList<>(Weather.getInstance().getWeatherSpecs());
+                GBApplication.deviceService().onSendWeather(specs);
             }
         });
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/miband8active/MiBand8ActiveCoordinator.java
Patch:
@@ -36,7 +36,7 @@ public boolean isExperimental() {
 
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("^Xiaomi Smart Band 8 Active [A-Z0-9]{4}$");
+        return Pattern.compile("^Xiaomi( Smart)? Band 8 Active [A-Z0-9]{4}$");
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiSupportProvider.java
Patch:
@@ -374,7 +374,7 @@ protected void initializeDeviceHiChainMode(int authType) {
         try {
             GetHiChainRequest hiChainReq = new GetHiChainRequest(this, needsAuth);
             hiChainReq.setFinalizeReq(configureReq);
-            if (paramsProvider.getPinCode() == null & ((authType ^ 0x04) == 0x01) ) {
+            if (paramsProvider.getPinCode() == null) {
                 GetPincodeRequest pincodeReq = new GetPincodeRequest(this);
                 pincodeReq.nextRequest(hiChainReq);
                 pincodeReq.doPerform();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendNotificationRequest.java
Patch:
@@ -44,13 +44,12 @@ public SendNotificationRequest(HuaweiSupportProvider support) {
 
     public static byte getNotificationType(NotificationType type) {
         switch (type.getGenericType()) {
+            case "generic":
             case "generic_social":
             case "generic_chat":
-                return Notifications.NotificationType.weChat;
+                return Notifications.NotificationType.generic;
             case "generic_email":
                 return Notifications.NotificationType.email;
-            case "generic":
-                return Notifications.NotificationType.generic;
             default:
                 return Notifications.NotificationType.sms;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -104,7 +104,8 @@ public boolean supports(GBDeviceCandidate candidate) {
             supportedDeviceName = getSupportedDeviceName();
         }
         if (supportedDeviceName == null) {
-            throw new RuntimeException(getClass() + " should either override getSupportedDeviceName or supports(GBDeviceCandidate)");
+            LOG.error(getClass() + " should either override getSupportedDeviceName or supports(GBDeviceCandidate)");
+            return false;
         }
 
         return supportedDeviceName.matcher(candidate.getName()).matches();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/scannable/ScannableDeviceCoordinator.java
Patch:
@@ -9,6 +9,7 @@
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.unknown.UnknownDeviceSupport;
 
 public class ScannableDeviceCoordinator extends AbstractBLEDeviceCoordinator {
     @Override
@@ -17,7 +18,7 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device,
     }
 
     @Override
-    public int[] getSupportedDeviceSpecificApplicationSettings() {
+    public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_scannable
         };
@@ -36,7 +37,7 @@ public String getManufacturer() {
     @NonNull
     @Override
     public Class<? extends DeviceSupport> getDeviceSupportClass() {
-        return null;
+        return UnknownDeviceSupport.class;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -433,9 +433,9 @@ public void onNotificationPosted(StatusBarNotification sbn, RankingMap rankingMa
                 } else {
                     wearableAction.type = NotificationSpec.Action.TYPE_WEARABLE_SIMPLE;
                 }
-
                 notificationSpec.attachedActions.add(wearableAction);
-                mActionLookup.add((notificationSpec.getId() << 4) + notificationSpec.attachedActions.size(), act);
+                wearableAction.handle = (notificationSpec.getId() << 4) + notificationSpec.attachedActions.size();
+                mActionLookup.add((int)wearableAction.handle, act);
                 LOG.info("Found wearable action: {} - {}  {}", notificationSpec.attachedActions.size(), act.getTitle(), sbn.getTag());
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsNotificationService.java
Patch:
@@ -272,7 +272,7 @@ public void sendNotification(final NotificationSpec notificationSpec) {
                         case NotificationSpec.Action.TYPE_WEARABLE_REPLY:
                         case NotificationSpec.Action.TYPE_SYNTECTIC_REPLY_PHONENR:
                             hasReply = true;
-                            mNotificationReplyAction.add(notificationSpec.getId(), ((long) notificationSpec.getId() << 4) + i + 1);
+                            mNotificationReplyAction.add(notificationSpec.getId(), action.handle);
                             break;
                         default:
                             break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWorkoutGbParser.java
Patch:
@@ -128,7 +128,7 @@ public static int huaweiTypeToGbType(byte huaweiType) {
                 return ActivityKind.TYPE_WALKING;
             case 6:
                 return ActivityKind.TYPE_SWIMMING;
-            case 5:
+            case 3:
                 return ActivityKind.TYPE_CYCLING;
             case 7:
                 return ActivityKind.TYPE_INDOOR_CYCLING;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/cmfwatchpro/CmfWatchProCoordinator.java
Patch:
@@ -297,7 +297,7 @@ public boolean supportsRemSleep() {
 
     @Override
     public boolean supportsWeather() {
-        return false; // TODO weather is not implemented
+        return true;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiWorkoutGbParser.java
Patch:
@@ -128,6 +128,8 @@ public static int huaweiTypeToGbType(byte huaweiType) {
                 return ActivityKind.TYPE_WALKING;
             case 6:
                 return ActivityKind.TYPE_SWIMMING;
+            case 5:
+                return ActivityKind.TYPE_CYCLING;
             case 7:
                 return ActivityKind.TYPE_INDOOR_CYCLING;
             case 129:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/cmfwatchpro/CmfWatchProSupport.java
Patch:
@@ -502,9 +502,9 @@ private void sendMusicStateToDevice() {
         if (musicSpec == null || musicStateSpec == null) {
             stateByte = 0x00;
         } else if (musicStateSpec.state == MusicStateSpec.STATE_PLAYING) {
-            stateByte = 0x01;
-        } else {
             stateByte = 0x02;
+        } else {
+            stateByte = 0x01;
         }
 
         final byte[] track;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/huaweiwatchgt3/HuaweiWatchGT3Coordinator.java
Patch:
@@ -33,7 +33,6 @@ public class HuaweiWatchGT3Coordinator extends HuaweiBRCoordinator {
 
     public HuaweiWatchGT3Coordinator() {
         super();
-        getHuaweiCoordinator().setTransactionCrypted(false);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/FitnessData.java
Patch:
@@ -513,7 +513,7 @@ public Request(ParamsProvider paramsProvider, boolean enableAutomaticSpo) {
     }
 
     public static class MediumToStrengthThreshold {
-        public static final byte id = 0x23;
+        public static final byte id = 0x29;
 
         public static class Request extends HuaweiPacket {
             public Request(ParamsProvider paramsProvider,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/AccountRelated.java
Patch:
@@ -57,7 +57,7 @@ public Request (ParamsProvider paramsProvider, boolean accountPairingOptimizatio
 				this.commandId = id;
 
 				this.tlv = new HuaweiTLV()
-						.put(0x01);
+						.put(0x01, (byte)0x00);
 				if (accountPairingOptimization) {
 					this.tlv.put(0x03, (byte)0x01);
 				}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSActivityTrack.java
Patch:
@@ -544,7 +544,7 @@ private static void parseFetchedRecorderCSV(File dir, String filename, String lo
             boolean hasHRMReading = false;
             for (int i = 0; i < storedLogObject.getJSONArray("Time").length(); i++) {
                 timeOfPoint.setTime(storedLogObject.getJSONArray("Time").getLong(i)*1000L);
-                point.setTime(timeOfPoint);
+                point.setTime((Date) timeOfPoint.clone());
                 if (storedLogObject.has("Longitude")) {
                     if (!Objects.equals(storedLogObject.getJSONArray("Longitude").getString(i), "")
                             && !Objects.equals(storedLogObject.getJSONArray("Latitude").getString(i), "")

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSActivityTrack.java
Patch:
@@ -115,6 +115,7 @@ static JSONObject handleActTrk(JSONObject json, GBDevice device, Context context
         try {
             dir = FileUtils.getExternalFilesDir();
         } catch (IOException e) {
+            LOG.error("Failed at getting external files directory with error: " + e);
             resetPacketCount();
             return null;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -564,7 +564,7 @@ private void handleUartRxJSON(JSONObject json) throws JSONException {
                 break;
             case "actTrksList": {
                 JSONObject requestTrackObj = BangleJSActivityTrack.handleActTrksList(json, getDevice(), getContext());
-                uartTxJSON("requestActivityTrackLog", requestTrackObj);
+                if (requestTrackObj!=null) uartTxJSON("requestActivityTrackLog", requestTrackObj);
             } break;
             case "actTrk": {
                 JSONObject requestTrackObj = BangleJSActivityTrack.handleActTrk(json, getDevice(), getContext());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -1407,11 +1407,11 @@ public void onFetchRecordedData(int dataTypes) {
             fetchActivityData(getLastSuccessfulSyncTime());
         }
 
-        if (dataTypes == RecordedDataTypes.TYPE_GPS_TRACKS) {
+        if ((dataTypes & RecordedDataTypes.TYPE_GPS_TRACKS) !=0) {
             JSONObject requestTracksListObj = BangleJSActivityTrack.compileTracksListRequest(getDevice(), getContext());
             uartTxJSON("requestActivityTracksList", requestTracksListObj);
         }
-        if (dataTypes == RecordedDataTypes.TYPE_DEBUGLOGS) {
+        if ((dataTypes & RecordedDataTypes.TYPE_DEBUGLOGS) !=0) {
             File dir;
             try {
                 dir = FileUtils.getExternalFilesDir();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSActivityTrack.java
Patch:
@@ -443,8 +443,8 @@ private static void parseFetchedRecorderCSV(File dir, String filename, String lo
                     //                analyticsObject.getJSONArray("Total Distance").getDouble(logLength-1)),
                     //        "s/km"
                     //);
-                    summaryData = addSummaryData(summaryData, "minPace", minOfJSONArray(analyticsObject.getJSONArray("Pace")), "s/km");
-                    summaryData = addSummaryData(summaryData, "maxPace", maxOfJSONArray(analyticsObject.getJSONArray("Pace")), "s/km");
+                    summaryData = addSummaryData(summaryData, "minPace", maxOfJSONArray(analyticsObject.getJSONArray("Pace")), "s/km");
+                    summaryData = addSummaryData(summaryData, "maxPace", minOfJSONArray(analyticsObject.getJSONArray("Pace")), "s/km");
                     //summaryData = addSummaryData(summaryData,"averageSpeed2",3,"mm");
                 }
                 if (analyticsObject.has("Cadence")) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -574,12 +574,12 @@ private void handleUartRxJSON(JSONObject json) throws JSONException {
                 }
                 break;
             case "actTrk":
-                LOG.info("packetCount1: " + packetCount);
+                LOG.debug("packetCount1: " + packetCount);
                 JSONArray returnArray = BangleJSActivityTrack.handleActTrk(json, tracksList, packetCount, getDevice(), getContext());
                 if (!returnArray.isNull(0)) uartTxJSON("requestActivityTrackLog", returnArray.getJSONObject(0));
                 tracksList = returnArray.getJSONArray(1);
                 packetCount = returnArray.getInt(2);
-                LOG.info("packetCount2: " + packetCount);
+                LOG.debug("packetCount2: " + packetCount);
                 break;
             case "http":
                 handleHttp(json);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSActivityTrack.java
Patch:
@@ -84,7 +84,7 @@ public static JSONArray handleTrksList(JSONObject json, GBDevice device, Context
         if (tracksList.length()==0) {
             device.unsetBusyTask();
             device.sendDeviceUpdateIntent(context);
-            GB.updateTransferNotification(context.getString(R.string.busy_task_fetch_activity_data), "", false, 100, context);
+            GB.updateTransferNotification(null, "", false, 100, context);
             return null;
         } else {
             return tracksList;
@@ -124,7 +124,7 @@ public static JSONArray handleActTrk(JSONObject json, JSONArray tracksList, int
             returnArray = new JSONArray().put(stopObj).put(tracksList).put(prevPacketCount);
             device.unsetBusyTask();
             device.sendDeviceUpdateIntent(context);
-            GB.updateTransferNotification(context.getString(R.string.busy_task_fetch_activity_data), "", false, 100, context);
+            GB.updateTransferNotification(null, "", false, 100, context);
             return returnArray;
         }
 
@@ -146,7 +146,7 @@ public static JSONArray handleActTrk(JSONObject json, JSONArray tracksList, int
             if (tracksList.length()==0) {
                 device.unsetBusyTask();
                 device.sendDeviceUpdateIntent(context);
-                GB.updateTransferNotification(context.getString(R.string.busy_task_fetch_activity_data), "", false, 100, context);
+                GB.updateTransferNotification(null, "", false, 100, context);
                 int resetPacketCount = -1;
                 LOG.info("packetCount reset1: " + resetPacketCount);
                 returnArray = new JSONArray().put(null).put(tracksList).put(resetPacketCount);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -575,11 +575,12 @@ private void handleUartRxJSON(JSONObject json) throws JSONException {
                 }
                 break;
             case "actTrk":
-
+                LOG.info("packetCount1: " + packetCount);
                 JSONArray returnArray = BangleJSActivityTrack.handleActTrk(json, tracksList, packetCount, getDevice(), getContext());
                 if (!returnArray.isNull(0)) uartTxJSON("requestActivityTrackLog", returnArray.getJSONObject(0));
                 tracksList = returnArray.getJSONArray(1);
                 packetCount = returnArray.getInt(2);
+                LOG.info("packetCount2: " + packetCount);
                 break;
             case "http":
                 handleHttp(json);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -96,7 +96,7 @@ public void onReceive(Context context, Intent intent) {
                     if (device.isBusy()) {
                         swipeLayout.setRefreshing(true);
                     } else {
-                        boolean wasBusy = swipeLayout.isRefreshing(); // FIXME: This check of swipeLayout.isRefreshing does not cover the case where fetching was initiated by user clicking the blue button with a circle-arrow. In that case no auto-reload will happen.
+                        boolean wasBusy = swipeLayout.isRefreshing();
                         swipeLayout.setRefreshing(false);
                         if (wasBusy) {
                             refresh();
@@ -383,6 +383,7 @@ private void deleteItems(List<BaseActivitySummary> items) {
 
     private void fetchTrackData() {
         if (mGBDevice.isInitialized() && !mGBDevice.isBusy()) {
+            swipeLayout.setRefreshing(true);
             GBApplication.deviceService(mGBDevice).onFetchRecordedData(RecordedDataTypes.TYPE_GPS_TRACKS);
         } else {
             swipeLayout.setRefreshing(false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -96,7 +96,7 @@ public void onReceive(Context context, Intent intent) {
                     if (device.isBusy()) {
                         swipeLayout.setRefreshing(true);
                     } else {
-                        boolean wasBusy = swipeLayout.isRefreshing();
+                        boolean wasBusy = swipeLayout.isRefreshing(); // FIXME: This check of swipeLayout.isRefreshing does not cover the case where fetching was initiated by user clicking the blue button with a circle-arrow. In that case no auto-reload will happen.
                         swipeLayout.setRefreshing(false);
                         if (wasBusy) {
                             refresh();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiTemperatureSampleProvider.java
Patch:
@@ -95,7 +95,7 @@ public XiaomiTemperatureSample(final XiaomiManualSample sample) {
             // first 2 bytes are body temperature
             // last 2 bytes are skin temperature
             // since the body temperature seems to always be 0, we only display skin temperature
-            this.temperature = (sample.getValue() & 0xffff);
+            this.temperature = (sample.getValue() & 0xffff) / 100f;
         }
 
         @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiManualSampleProvider.java
Patch:
@@ -30,7 +30,6 @@
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.XiaomiManualSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.XiaomiManualSampleDao;
-import nodomain.freeyourgadget.gadgetbridge.entities.XiaomiSleepStageSampleDao;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 
 public class XiaomiManualSampleProvider extends AbstractTimeSampleProvider<XiaomiManualSample> {
@@ -52,13 +51,13 @@ public XiaomiManualSampleProvider(final GBDevice device, final DaoSession sessio
     @NonNull
     @Override
     protected Property getTimestampSampleProperty() {
-        return XiaomiSleepStageSampleDao.Properties.Timestamp;
+        return XiaomiManualSampleDao.Properties.Timestamp;
     }
 
     @NonNull
     @Override
     protected Property getDeviceIdentifierSampleProperty() {
-        return XiaomiSleepStageSampleDao.Properties.DeviceId;
+        return XiaomiManualSampleDao.Properties.DeviceId;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/SonyHeadphonesProtocol.java
Patch:
@@ -126,7 +126,7 @@ public GBDeviceEvent[] decodeResponse(byte[] res) {
                         // LinkBuds S 2.0.2: 01:00:03:00:00:07:00:00
                         // WH-1000XM5 1.1.3: 01:00:03:00:00:00:00:00
                         // WF-1000XM5 2.0.1: 01:00:03:00:10:04:00:00
-                        protocolVersion = "v3";
+                        protocolVersion = "v2";
                     } else {
                         LOG.error("Unexpected init response payload length: {}", message.getPayload().length);
                         return events.toArray(new GBDeviceEvent[0]);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -1025,7 +1025,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
             receivedLine += packetStr;
             while (receivedLine.contains("\n")) {
                 int p = receivedLine.indexOf("\n");
-                String line =  receivedLine.substring(0,p-1);
+                String line = receivedLine.substring(0,(p>0) ? (p-1) : 0);
                 receivedLine = receivedLine.substring(p+1);
                 handleUartRxLine(line);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/TemperatureChartFragment.java
Patch:
@@ -51,7 +51,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.TemperatureSample;
 
 public class TemperatureChartFragment extends AbstractChartFragment<TemperatureChartFragment.TemperatureChartsData> {
-    protected static final Logger LOG = LoggerFactory.getLogger(ActivitySleepChartFragment.class);
+    protected static final Logger LOG = LoggerFactory.getLogger(TemperatureChartFragment.class);
 
     private LineChart mTemperatureChart;
     private int BACKGROUND_COLOR;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -84,7 +84,6 @@ public void testNotConnected() {
 
     @Test
     public void ensureConnected() {
-        mDeviceService.start();
         // connection goes synchronously here
         mDeviceService.forDevice(getDevice()).connect();
         Mockito.verify(mockSupport, Mockito.times(1)).connect();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebblePairingActivity.java
Patch:
@@ -143,7 +143,7 @@ private GBDevice getMatchingParentDeviceFromDBAndSetVolatileAddress(BluetoothDev
         try (DBHandler dbHandler = GBApplication.acquireDB()) {
             DaoSession session = dbHandler.getDaoSession();
             DeviceDao deviceDao = session.getDeviceDao();
-            Query<Device> query = deviceDao.queryBuilder().where(DeviceDao.Properties.Type.eq(1), DeviceDao.Properties.Identifier.like("%" + expectedSuffix)).build();
+            Query<Device> query = deviceDao.queryBuilder().where(DeviceDao.Properties.TypeName.eq("PEBBLE"), DeviceDao.Properties.Identifier.like("%" + expectedSuffix)).build();
 
             List<Device> devices = query.list();
             if (devices.size() == 0) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchActivityOperation.java
Patch:
@@ -36,15 +36,14 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiExtendedActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.entities.MiBandActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -57,7 +56,7 @@ public class FetchActivityOperation extends AbstractRepeatingFetchOperation {
     private final int sampleSize;
 
     public FetchActivityOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_ACTIVTY, "activity data");
+        super(support, HuamiFetchDataType.ACTIVITY);
         this.sampleSize = support.getActivitySampleSize();
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchHeartRateMaxOperation.java
Patch:
@@ -32,15 +32,14 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiHeartRateMaxSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiHeartRateMaxSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -50,7 +49,7 @@ public class FetchHeartRateMaxOperation extends AbstractRepeatingFetchOperation
     private static final Logger LOG = LoggerFactory.getLogger(FetchHeartRateMaxOperation.class);
 
     public FetchHeartRateMaxOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_MAX_HEART_RATE, "max hr data");
+        super(support, HuamiFetchDataType.MAX_HEART_RATE);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchHeartRateRestingOperation.java
Patch:
@@ -33,14 +33,13 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiHeartRateRestingSampleProvider;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiHeartRateRestingSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -50,7 +49,7 @@ public class FetchHeartRateRestingOperation extends AbstractRepeatingFetchOperat
     private static final Logger LOG = LoggerFactory.getLogger(FetchHeartRateRestingOperation.class);
 
     public FetchHeartRateRestingOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_RESTING_HEART_RATE, "resting hr data");
+        super(support, HuamiFetchDataType.RESTING_HEART_RATE);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchPaiOperation.java
Patch:
@@ -32,14 +32,13 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiPaiSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiPaiSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -49,7 +48,7 @@ public class FetchPaiOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchPaiOperation.class);
 
     public FetchPaiOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_PAI, "pai data");
+        super(support, HuamiFetchDataType.PAI);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSleepRespiratoryRateOperation.java
Patch:
@@ -32,14 +32,13 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiSleepRespiratoryRateSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiSleepRespiratoryRateSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -49,7 +48,7 @@ public class FetchSleepRespiratoryRateOperation extends AbstractRepeatingFetchOp
     private static final Logger LOG = LoggerFactory.getLogger(FetchSleepRespiratoryRateOperation.class);
 
     public FetchSleepRespiratoryRateOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_SLEEP_RESPIRATORY_RATE, "sleep respiratory rate data");
+        super(support, HuamiFetchDataType.SLEEP_RESPIRATORY_RATE);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSpo2NormalOperation.java
Patch:
@@ -32,15 +32,14 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiSpo2SampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiSpo2Sample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.model.Spo2Sample;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -50,7 +49,7 @@ public class FetchSpo2NormalOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchSpo2NormalOperation.class);
 
     public FetchSpo2NormalOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_SPO2_NORMAL, "spo2 normal data");
+        super(support, HuamiFetchDataType.SPO2_NORMAL);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSpo2SleepOperation.java
Patch:
@@ -24,9 +24,8 @@
 import java.util.GregorianCalendar;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.GB;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 
 /**
  * An operation that fetches SPO2 data for sleep measurements (this requires sleep breathing quality enabled).
@@ -35,7 +34,7 @@ public class FetchSpo2SleepOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchSpo2SleepOperation.class);
 
     public FetchSpo2SleepOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_SPO2_SLEEP, "spo2 sleep data");
+        super(support, HuamiFetchDataType.SPO2_SLEEP);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsDetailsOperation.java
Patch:
@@ -35,7 +35,6 @@
 import nodomain.freeyourgadget.gadgetbridge.Logging;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
 import nodomain.freeyourgadget.gadgetbridge.entities.BaseActivitySummary;
 import nodomain.freeyourgadget.gadgetbridge.export.ActivityTrackExporter;
 import nodomain.freeyourgadget.gadgetbridge.export.GPXExporter;
@@ -46,6 +45,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuamiActivityDetailsParser;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiActivityDetailsParser;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
@@ -86,7 +86,7 @@ protected void startFetching(TransactionBuilder builder) {
         LOG.info("start " + getName());
         buffer = new ByteArrayOutputStream(1024);
         GregorianCalendar sinceWhen = getLastSuccessfulSyncTime();
-        startFetching(builder, AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_SPORTS_DETAILS, sinceWhen);
+        startFetching(builder, HuamiFetchDataType.SPORTS_DETAILS.getCode(), sinceWhen);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -35,7 +35,6 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiActivitySummaryParser;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
 import nodomain.freeyourgadget.gadgetbridge.entities.BaseActivitySummary;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
@@ -44,6 +43,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuamiActivityDetailsParser;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
@@ -70,7 +70,7 @@ protected String taskDescription() {
     protected void startFetching(TransactionBuilder builder) {
         LOG.info("start" + getName());
         GregorianCalendar sinceWhen = getLastSuccessfulSyncTime();
-        startFetching(builder, AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_SPORTS_SUMMARIES, sinceWhen);
+        startFetching(builder, HuamiFetchDataType.SPORTS_SUMMARIES.getCode(), sinceWhen);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchStatisticsOperation.java
Patch:
@@ -24,9 +24,9 @@
 import java.util.GregorianCalendar;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 
 /**
  * An operation that fetches statistics from /storage/statistics/ (hm_statis_data* files). We do not
@@ -36,7 +36,7 @@ public class FetchStatisticsOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchStatisticsOperation.class);
 
     public FetchStatisticsOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_STATISTICS, "statistics data");
+        super(support, HuamiFetchDataType.STATISTICS);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchStressAutoOperation.java
Patch:
@@ -31,15 +31,14 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiStressSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.HuamiStressSample;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.model.StressSample;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -49,7 +48,7 @@ public class FetchStressAutoOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchStressAutoOperation.class);
 
     public FetchStressAutoOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_STRESS_AUTOMATIC, "auto stress data");
+        super(support, HuamiFetchDataType.STRESS_AUTOMATIC);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchStressManualOperation.java
Patch:
@@ -32,7 +32,6 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiStressSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
@@ -41,7 +40,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.StressSample;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -51,7 +50,7 @@ public class FetchStressManualOperation extends AbstractRepeatingFetchOperation
     private static final Logger LOG = LoggerFactory.getLogger(FetchStressManualOperation.class);
 
     public FetchStressManualOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_STRESS_MANUAL, "manual stress data");
+        super(support, HuamiFetchDataType.STRESS_MANUAL);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchTemperatureOperation.java
Patch:
@@ -24,8 +24,8 @@
 import java.util.GregorianCalendar;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -35,7 +35,7 @@ public class FetchTemperatureOperation extends AbstractRepeatingFetchOperation {
     private static final Logger LOG = LoggerFactory.getLogger(FetchTemperatureOperation.class);
 
     public FetchTemperatureOperation(final HuamiSupport support) {
-        super(support, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_TEMPERATURE, "body temperature data");
+        super(support, HuamiFetchDataType.TEMPERATURE);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/HuamiFetchDebugLogsOperation.java
Patch:
@@ -33,10 +33,10 @@
 import androidx.annotation.NonNull;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.fetch.HuamiFetchDataType;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
@@ -77,7 +77,7 @@ protected void startFetching(TransactionBuilder builder) {
 
         GregorianCalendar sinceWhen = BLETypeConversions.createCalendar();
         sinceWhen.add(Calendar.DAY_OF_MONTH, -10);
-        startFetching(builder, AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_DEBUGLOGS, sinceWhen);
+        startFetching(builder, HuamiFetchDataType.DEBUG_LOGS.getCode(), sinceWhen);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/DailyDetailsParser.java
Patch:
@@ -112,7 +112,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
                     sample.setSpo2(buf.get() & 0xff);
                     int stress = buf.get() & 0xff;
                     if (stress != 0xff) {
-                        sample.setStress(buf.get() & 0xff);
+                        sample.setStress(stress);
                     }
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/test/TestFeature.java
Patch:
@@ -56,6 +56,7 @@ public enum TestFeature {
     SCREENSHOTS,
     SLEEP_RESPIRATORY_RATE,
     SMART_WAKEUP,
+    SMART_WAKEUP_INTERVAL,
     SMART_WAKEUP_FORCED_SLOT,
     SPO2,
     STRESS_MEASUREMENT,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -335,6 +335,9 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
         Prefs devicePrefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()));
         allowHighMTU = devicePrefs.getBoolean(PREF_ALLOW_HIGH_MTU, true);
 
+        if (allowHighMTU && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            builder.requestMtu(131);
+        }
         // No need to clear active line with Ctrl-C now - firmwares in 2023 auto-clear on connect
 
         Prefs prefs = GBApplication.getPrefs();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/SendWeatherForecastRequest.java
Patch:
@@ -70,7 +70,7 @@ protected List<byte[]> createRequest() throws RequestCreationException {
         for (int i = 0; i < Math.min(weatherSpec.forecasts.size(), 7); i++) { // TODO: min?
             WeatherSpec.Daily daily = weatherSpec.forecasts.get(i);
             WeatherForecastData.DayData dayData = new WeatherForecastData.DayData();
-            dayData.timestamp = weatherSpec.timestamp + (60*60*24 * i);
+            dayData.timestamp = weatherSpec.timestamp + (60*60*24 * (i + 1));
             dayData.icon = supportProvider.openWeatherMapConditionCodeToHuaweiIcon(daily.conditionCode);
             dayData.highTemperature = (byte) (daily.maxTemp - 273);
             dayData.lowTemperature = (byte) (daily.minTemp - 273);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/Weather.java
Patch:
@@ -363,6 +363,7 @@ public Request(ParamsProvider paramsProvider) {
         }
 
         public static class Response extends HuaweiPacket {
+            public int successCode = -1;
             public boolean success = false;
 
             public Response(ParamsProvider paramsProvider) {
@@ -373,7 +374,8 @@ public Response(ParamsProvider paramsProvider) {
 
             @Override
             public void parseTlv() throws ParseException {
-                this.success = this.tlv.getInteger(0x7f) == 0x000186A0;
+                this.successCode = this.tlv.getInteger(0x7f);
+                this.success = this.successCode == 0x000186A0 || this.successCode == 0x000186A3;
             }
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/test/TestFeature.java
Patch:
@@ -56,6 +56,7 @@ public enum TestFeature {
     SCREENSHOTS,
     SLEEP_RESPIRATORY_RATE,
     SMART_WAKEUP,
+    SMART_WAKEUP_FORCED_SLOT,
     SPO2,
     STRESS_MEASUREMENT,
     UNICODE_EMOJIS,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/FossilAppWriter.java
Patch:
@@ -146,7 +146,7 @@ public byte[] loadStringFiles(LinkedHashMap<String, String> stringsMap) throws I
         for (String filename : stringsMap.keySet()) {
             output.write((byte)filename.length() + 1);
             output.write(StringUtils.terminateNull(filename).getBytes(StandardCharsets.UTF_8));
-            output.write(shortToLEBytes((short)(stringsMap.get(filename).length() + 1)));
+            output.write(shortToLEBytes((short)(stringsMap.get(filename).getBytes(StandardCharsets.UTF_8).length + 1)));
             output.write(StringUtils.terminateNull(stringsMap.get(filename)).getBytes(StandardCharsets.UTF_8));
         }
         return output.toByteArray();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/DeviceConfig.java
Patch:
@@ -332,6 +332,8 @@ public void parseTlv() throws ParseException {
                     } else
                         throw new SupportedCommandsListException("Unknown tag encountered");
                 }
+                if (this.commandsLists.isEmpty())
+                    throw new SupportedCommandsListException("CommandLists is empty");
             }
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiPacket.java
Patch:
@@ -245,7 +245,7 @@ public HuaweiPacket(ParamsProvider paramsProvider) {
     }
 
     public boolean attemptDecrypt() throws ParseException {
-        if (paramsProvider.getSecretKey() == null)
+        if (paramsProvider == null || paramsProvider.getSecretKey() == null)
             return false;
         if (this.tlv == null)
             return false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/ZeppOsSupport.java
Patch:
@@ -145,7 +145,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 import nodomain.freeyourgadget.gadgetbridge.util.SilentMode;
 
-public final class ZeppOsSupport extends HuamiSupport implements ZeppOsFileTransferService.Callback {
+public class ZeppOsSupport extends HuamiSupport implements ZeppOsFileTransferService.Callback {
     private static final Logger LOG = LoggerFactory.getLogger(ZeppOsSupport.class);
 
     // Tracks whether realtime HR monitoring is already started, so we can just
@@ -1014,7 +1014,7 @@ public void phase3Initialize(final TransactionBuilder builder) {
 
     @Override
     @Deprecated
-    public final HuamiFWHelper createFWHelper(final Uri uri, final Context context) throws IOException {
+    public HuamiFWHelper createFWHelper(final Uri uri, final Context context) throws IOException {
         throw new UnsupportedOperationException("This function should not be used for Zepp OS devices");
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/galaxy_buds/GalaxyBuds2ProDeviceCoordinator.java
Patch:
@@ -30,7 +30,7 @@
 public class GalaxyBuds2ProDeviceCoordinator extends GalaxyBudsGenericCoordinator {
     @Override
     protected Pattern getSupportedDeviceName() {
-        return Pattern.compile("Galaxy Buds2 Pro.*");
+        return Pattern.compile("^(Galaxy )?Buds2 Pro.*");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetAuthRequest.java
Patch:
@@ -57,11 +57,11 @@ public GetAuthRequest(HuaweiSupportProvider support,
         this.authVersion = paramsProvider.getAuthVersion();
         this.authAlgo = paramsProvider.getAuthAlgo();
         this.deviceSupportType = paramsProvider.getDeviceSupportType();
+        this.huaweiCrypto = new HuaweiCrypto(authVersion, authAlgo, deviceSupportType);
     }
 
     @Override
     protected List<byte[]> createRequest() throws RequestCreationException {
-        huaweiCrypto = new HuaweiCrypto(authVersion, authAlgo, deviceSupportType);
         byte[] nonce;
 
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/Request.java
Patch:
@@ -102,7 +102,7 @@ public WorkoutParseException(String message) {
     protected RequestCallback finalizeReq = null;
     // Stop chaining requests and clean support.inProgressRequests from these requests
     protected boolean stopChain = false;
-    protected static HuaweiCrypto huaweiCrypto = null;
+    protected HuaweiCrypto huaweiCrypto = null;
     protected boolean addToResponse = true;
 
     public static class RequestCallback {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiTLV.java
Patch:
@@ -291,7 +291,7 @@ public HuaweiTLV encrypt(ParamsProvider paramsProvider) throws CryptoException {
         byte[] serializedTLV = serialize();
         byte[] key = paramsProvider.getSecretKey();
         byte[] nonce = paramsProvider.getIv();
-        byte[] encryptedTLV = HuaweiCrypto.encrypt(paramsProvider.getDeviceSupportType(), serializedTLV, key, nonce);
+        byte[] encryptedTLV = HuaweiCrypto.encrypt(paramsProvider.getEncryptMethod(), serializedTLV, key, nonce);
         return new HuaweiTLV()
                 .put(CryptoTags.encryption, (byte) 0x01)
                 .put(CryptoTags.initVector, nonce)
@@ -300,7 +300,7 @@ public HuaweiTLV encrypt(ParamsProvider paramsProvider) throws CryptoException {
 
     public void decrypt(ParamsProvider paramsProvider) throws CryptoException, HuaweiPacket.MissingTagException {
         byte[] key = paramsProvider.getSecretKey();
-        byte[] decryptedTLV = HuaweiCrypto.decrypt(paramsProvider.getDeviceSupportType(), getBytes(CryptoTags.cipherText), key, getBytes(CryptoTags.initVector));
+        byte[] decryptedTLV = HuaweiCrypto.decrypt(paramsProvider.getEncryptMethod(), getBytes(CryptoTags.cipherText), key, getBytes(CryptoTags.initVector));
         this.valueMap = new ArrayList<>();
         parse(decryptedTLV);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiTLV.java
Patch:
@@ -291,7 +291,7 @@ public HuaweiTLV encrypt(ParamsProvider paramsProvider) throws CryptoException {
         byte[] serializedTLV = serialize();
         byte[] key = paramsProvider.getSecretKey();
         byte[] nonce = paramsProvider.getIv();
-        byte[] encryptedTLV = HuaweiCrypto.encrypt(paramsProvider.getAuthMode(), serializedTLV, key, nonce);
+        byte[] encryptedTLV = HuaweiCrypto.encrypt(paramsProvider.getDeviceSupportType(), serializedTLV, key, nonce);
         return new HuaweiTLV()
                 .put(CryptoTags.encryption, (byte) 0x01)
                 .put(CryptoTags.initVector, nonce)
@@ -300,7 +300,7 @@ public HuaweiTLV encrypt(ParamsProvider paramsProvider) throws CryptoException {
 
     public void decrypt(ParamsProvider paramsProvider) throws CryptoException, HuaweiPacket.MissingTagException {
         byte[] key = paramsProvider.getSecretKey();
-        byte[] decryptedTLV = HuaweiCrypto.decrypt(paramsProvider.getAuthMode(), getBytes(CryptoTags.cipherText), key, getBytes(CryptoTags.initVector));
+        byte[] decryptedTLV = HuaweiCrypto.decrypt(paramsProvider.getDeviceSupportType(), getBytes(CryptoTags.cipherText), key, getBytes(CryptoTags.initVector));
         this.valueMap = new ArrayList<>();
         parse(decryptedTLV);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/DeviceConfig.java
Patch:
@@ -74,7 +74,7 @@ public static class Response extends HuaweiPacket {
             public short sliceSize = 0x00f4;
             public byte authVersion = 0x00;
             public byte[] serverNonce = new byte[16];
-            public byte authMode = 0x00;
+            public byte deviceSupportType = 0x00;
             public byte authAlgo = 0x00;
             public byte bondState = 0x00;
             public short interval = 0x0;
@@ -105,7 +105,7 @@ public void parseTlv() throws ParseException {
                 this.authVersion = (byte)this.tlv.getBytes(0x05)[1];
 
                 if (this.tlv.contains(0x07))
-                    this.authMode = this.tlv.getByte(0x07);
+                    this.deviceSupportType = this.tlv.getByte(0x07);
 
                 if (this.tlv.contains(0x08))
                     this.authAlgo = this.tlv.getByte(0x08);
@@ -607,7 +607,7 @@ public Request(
                 this.tlv = new HuaweiTLV()
                         .put(0x01, challenge)
                         .put(0x02, nonce);
-                if (paramsProvider.getAuthMode() == 0x02)
+                if (paramsProvider.getDeviceSupportType() == 0x02)
                     this.tlv.put(0x03, paramsProvider.getAuthAlgo());
                 this.isEncrypted = false;
                 this.complete = true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiSupportProvider.java
Patch:
@@ -306,12 +306,12 @@ protected boolean isHiChain() {
         // 1 or 3 : HiChain
         // 2 or 8 : HiChainLite -> normal mode
         // 4 : HiChain3
-        byte authMode = paramsProvider.getAuthMode();
+        byte authMode = paramsProvider.getDeviceSupportType();
         return authMode == 0x01 || authMode == 0x03 || authMode == 0x04 || isHiChainLite();
     }
 
     protected boolean isHiChainLite() {
-        byte authMode = paramsProvider.getAuthMode();
+        byte authMode = paramsProvider.getDeviceSupportType();
         return authMode == 0x02;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetLinkParamsRequest.java
Patch:
@@ -73,7 +73,7 @@ protected void processResponse() throws ResponseParseException {
             throw new ResponseTypeMismatchException(receivedPacket, LinkParams.Response.class);
 
         supportProvider.setProtocolVersion(((LinkParams.Response) receivedPacket).protocolVersion);
-        paramsProvider.setAuthMode(((LinkParams.Response) receivedPacket).authMode);
+        paramsProvider.setDeviceSupportType(((LinkParams.Response) receivedPacket).deviceSupportType);
 
         paramsProvider.setSliceSize(((LinkParams.Response) receivedPacket).sliceSize);
         paramsProvider.setMtu(((LinkParams.Response) receivedPacket).mtu);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetSecurityNegotiationRequest.java
Patch:
@@ -42,7 +42,7 @@ protected List<byte[]> createRequest() throws RequestCreationException {
         try {
             return new DeviceConfig.SecurityNegotiation.Request(
                     paramsProvider,
-                    paramsProvider.getAuthMode(),
+                    paramsProvider.getDeviceSupportType(),
                     supportProvider.getAndroidId(),
                     Build.MODEL
                 ).serialize();

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/TestHuaweiPacket.java
Patch:
@@ -29,7 +29,7 @@ public class TestHuaweiPacket {
     HuaweiPacket.ParamsProvider paramsProvider = new HuaweiPacket.ParamsProvider() {
 
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 
@@ -62,7 +62,7 @@ public int getSliceSize() {
     HuaweiPacket.ParamsProvider paramsProviderEncrypt = new HuaweiPacket.ParamsProvider() {
 
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 
@@ -95,7 +95,7 @@ public int getSliceSize() {
     HuaweiPacket.ParamsProvider paramsProviderSmallSlice = new HuaweiPacket.ParamsProvider() {
 
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/TestHuaweiTLV.java
Patch:
@@ -26,7 +26,7 @@ public class TestHuaweiTLV {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestAlarms.java
Patch:
@@ -29,7 +29,7 @@ public class TestAlarms {
 
     HuaweiPacket.ParamsProvider paramsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestDeviceConfig.java
Patch:
@@ -42,7 +42,7 @@ public class TestDeviceConfig {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestDisconnectNotification.java
Patch:
@@ -29,7 +29,7 @@ public class TestDisconnectNotification {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestFindPhone.java
Patch:
@@ -28,7 +28,7 @@ public class TestFindPhone {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestFitnessData.java
Patch:
@@ -30,7 +30,7 @@ public class TestFitnessData {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestLocaleConfig.java
Patch:
@@ -29,7 +29,7 @@ public class TestLocaleConfig {
 
     HuaweiPacket.ParamsProvider paramsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestMusicControl.java
Patch:
@@ -32,7 +32,7 @@ public class TestMusicControl {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestNotifications.java
Patch:
@@ -30,7 +30,7 @@ public class TestNotifications {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestWorkMode.java
Patch:
@@ -29,7 +29,7 @@ public class TestWorkMode {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestWorkout.java
Patch:
@@ -30,7 +30,7 @@ public class TestWorkout {
 
     HuaweiPacket.ParamsProvider secretsProvider = new HuaweiPacket.ParamsProvider() {
         @Override
-        public byte getAuthMode() {
+        public byte getDeviceSupportType() {
             return 0;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/HuaweiSupportProvider.java
Patch:
@@ -331,6 +331,7 @@ public void call() {
                             initializeDeviceHiChainMode(linkParamsReq);
                         } else if (securityNegoReq.authType == 0x01 || securityNegoReq.authType == 0x02) {
                             LOG.debug("HiChain Lite mode");
+                            // Keep track the gadget is connected
                             initializeDeviceHiChainLiteMode(linkParamsReq);
                         }
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/GetLinkParamsRequest.java
Patch:
@@ -84,5 +84,6 @@ protected void processResponse() throws ResponseParseException {
         this.bondState = ((LinkParams.Response) receivedPacket).bondState;
 
         paramsProvider.setAuthAlgo(((LinkParams.Response) receivedPacket).authAlgo);
+        paramsProvider.setEncryptMethod(((LinkParams.Response) receivedPacket).encryptMethod);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/CryptoUtils.java
Patch:
@@ -18,6 +18,7 @@
 
 import android.annotation.SuppressLint;
 
+import java.io.UnsupportedEncodingException;
 import java.nio.ByteBuffer;
 import java.nio.charset.StandardCharsets;
 import java.security.InvalidAlgorithmParameterException;
@@ -133,10 +134,9 @@ public static byte[] hkdfSha256(byte[] secretKey, byte[] salt, byte[] info, int
         return result;
     }
 
-    public static byte[] pbkdf2Sha256(byte[] key, byte[] iv, int count, int length) throws InvalidKeySpecException, NoSuchAlgorithmException  {
+    public static byte[] pbkdf2Sha256(String key, String iv, int count, int length) throws InvalidKeySpecException, NoSuchAlgorithmException, UnsupportedEncodingException {
         SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
-        String keyStr = new String(key, StandardCharsets.UTF_8);
-        PBEKeySpec keySpec = new PBEKeySpec(keyStr.toCharArray(), iv, count, length);
+        PBEKeySpec keySpec = new PBEKeySpec(key.toCharArray(), iv.getBytes("utf-8"), count, length);
         return secretKeyFactory.generateSecret(keySpec).getEncoded();
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -142,6 +142,7 @@ public BaseActivitySummary parseBinaryData(final BaseActivitySummary summary) {
                 // TODO
                 break;
             case SPORTS_INDOOR_CYCLING:
+                summary.setActivityKind(ActivityKind.TYPE_INDOOR_CYCLING);
                 parser = getIndoorCyclingParser(fileId);
                 break;
             case SPORTS_FREESTYLE:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -1021,7 +1021,7 @@ private void onSendWeatherSimple(WeatherSpec weatherSpec) {
         TransactionBuilder forecastBuilder = createTransactionBuilder("SimpleWeatherData");
         safeWriteToCharacteristic(forecastBuilder,
                 PineTimeJFConstants.UUID_CHARACTERISTIC_SIMPLE_WEATHER_DATA,
-                currentPacket.array());
+                forecastPacket.array());
 
         forecastBuilder.queue(getQueue());
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/FindPhone.java
Patch:
@@ -37,10 +37,9 @@ public Response(ParamsProvider paramsProvider) {
         }
 
         @Override
-        public void parseTlv() {
-            if (this.tlv.contains(0x01)) {
+        public void parseTlv() throws ParseException {
+            if (this.tlv.contains(0x01))
                 this.start = this.tlv.getBoolean(0x01);
-            }
             // No missing tag exception so it will stop by default
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/MusicControl.java
Patch:
@@ -51,7 +51,7 @@ public MusicStatusResponse(ParamsProvider paramsProvider) {
         }
 
         @Override
-        public void parseTlv() {
+        public void parseTlv() throws ParseException {
             if (this.tlv.contains(0x7F) && this.tlv.getBytes(0x7F).length == 4)
                 this.status = this.tlv.getInteger(0x7F);
         }
@@ -96,7 +96,7 @@ public Response(ParamsProvider paramsProvider) {
             }
 
             @Override
-            public void parseTlv() {
+            public void parseTlv() throws ParseException {
                 if (this.tlv.contains(0x7F)) {
                     if (this.tlv.getInteger(0x7F) == successValue) {
                         this.ok = true;
@@ -144,7 +144,7 @@ public Response(ParamsProvider paramsProvider) {
             }
 
             @Override
-            public void parseTlv() {
+            public void parseTlv() throws ParseException {
                 if (this.tlv.contains(0x01)) {
                     this.buttonPresent = true;
                     this.rawButton = this.tlv.getByte(0x01);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -192,6 +192,9 @@ private void setupLegacyWebView(@NonNull GBDevice device, @NonNull UUID uuid) {
         webSettings.setDomStorageEnabled(true);
         //needed for localstorage
         webSettings.setDatabaseEnabled(true);
+        // #3373 #3424 - Fix configuration for pebble apps
+        // TODO: this should use a WebViewAssetLoader
+        webSettings.setAllowFileAccess(true);
 
         JSInterface gbJSInterface = new JSInterface(device, uuid);
         myWebView.addJavascriptInterface(gbJSInterface, "GBjs");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiSupport.java
Patch:
@@ -178,7 +178,7 @@ public void dispose() {
 
     public void setContext(final GBDevice device, final BluetoothAdapter adapter, final Context context) {
         // FIXME unsetDynamicState unsets the fw version, which causes problems..
-        if (getCachedFirmwareVersion() == null && device.getFirmwareVersion() != null) {
+        if (device.getFirmwareVersion() != null) {
             setCachedFirmwareVersion(device.getFirmwareVersion());
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityUser.java
Patch:
@@ -49,7 +49,7 @@ public class ActivityUser {
 
     private static final String defaultUserName = "gadgetbridge-user";
     public static final int defaultUserGender = GENDER_FEMALE;
-    public static final int defaultUserYearOfBirth = 0;
+    public static final int defaultUserYearOfBirth = 1970;
     public static final int defaultUserAge = 0;
     public static final int defaultUserHeightCm = 175;
     public static final int defaultUserWeightKg = 70;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiCharacteristic.java
Patch:
@@ -54,7 +54,7 @@ public class XiaomiCharacteristic {
     private final XiaomiAuthService authService;
     private boolean isEncrypted;
     public boolean incrementNonce = true;
-    private short encryptedIndex = 0;
+    private int encryptedIndex = 0;
 
     // Chunking
     private int numChunks = 0;
@@ -311,7 +311,7 @@ private void sendNext(@Nullable final TransactionBuilder b) {
                 // Prepend encrypted index for the nonce
                 currentPayload.setBytesToSend(
                         ByteBuffer.allocate(2 + currentPayload.getBytesToSend().length).order(ByteOrder.LITTLE_ENDIAN)
-                                .putShort(encryptedIndex++)
+                                .putShort((short) encryptedIndex++)
                                 .put(currentPayload.getBytesToSend())
                                 .array()
                 );
@@ -344,7 +344,7 @@ private void sendNext(@Nullable final TransactionBuilder b) {
             buf.put((byte) (encrypt ? 1 : 2));
             if (encrypt) {
                 if (incrementNonce) {
-                    buf.putShort(encryptedIndex++);
+                    buf.putShort((short) encryptedIndex++);
                 } else {
                     buf.putShort((short) 0);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiSppPacket.java
Patch:
@@ -220,9 +220,9 @@ public byte[] encode(final XiaomiAuthService authService, final AtomicInteger en
         byte[] payload = this.payload;
 
         if (dataType == DATA_TYPE_ENCRYPTED && channel == CHANNEL_PROTO_TX) {
-            short packetCounter = (short) encryptionCounter.incrementAndGet();
+            int packetCounter = encryptionCounter.incrementAndGet();
             payload = authService.encrypt(payload, packetCounter);
-            payload = ByteBuffer.allocate(payload.length + 2).order(ByteOrder.LITTLE_ENDIAN).putShort(packetCounter).put(payload).array();
+            payload = ByteBuffer.allocate(payload.length + 2).order(ByteOrder.LITTLE_ENDIAN).putShort((short) packetCounter).put(payload).array();
         } else if (dataType == DATA_TYPE_ENCRYPTED) {
             payload = authService.encrypt(payload, (short) 0);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -427,4 +427,5 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_DEVICE_ACTION_START_NON_WEAR_BROADCAST = "prefs_events_forwarding_startnonwear_broadcast";
     public static final String PREF_CLAP_HANDS_TO_WAKEUP_DEVICE = "pref_key_clap_hands_to_wakeup_device";
     public static final String PREF_POWER_SAVING = "pref_key_power_saving";
+    public static final String PREF_FORCE_CONNECTION_TYPE = "pref_force_connection_type";
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiConstants.java
Patch:
@@ -67,7 +67,6 @@ public static class CryptoTags {
     public static final String PREF_HUAWEI_WORKMODE = "workmode";
     public static final String PREF_HUAWEI_TRUSLEEP = "trusleep";
     public static final String PREF_HUAWEI_DND_LIFT_WRIST_TYPE = "dnd_lift_wrist_type"; // SharedPref for 0x01 0x1D
-    public static final String PREF_HUAWEI_DEBUG = "debug_huawei";
     public static final String PREF_HUAWEI_DEBUG_REQUEST = "debug_huawei_request";
 
     public static final String PKG_NAME = "com.huawei.devicegroupmanage";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiSettingsCustomizer.java
Patch:
@@ -37,7 +37,6 @@
 import nodomain.freeyourgadget.gadgetbridge.util.XTimePreference;
 
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.*;
-import static nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiConstants.PREF_HUAWEI_DEBUG;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiConstants.PREF_HUAWEI_DEBUG_REQUEST;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiConstants.PREF_HUAWEI_TRUSLEEP;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huawei.HuaweiConstants.PREF_HUAWEI_WORKMODE;
@@ -111,7 +110,6 @@ public void customizeSettings(final DeviceSpecificSettingsHandler handler, Prefs
 
         handler.addPreferenceHandlerFor(PREF_HUAWEI_WORKMODE);
         handler.addPreferenceHandlerFor(PREF_HUAWEI_TRUSLEEP);
-        handler.addPreferenceHandlerFor(PREF_HUAWEI_DEBUG);
         handler.addPreferenceHandlerFor(PREF_HUAWEI_DEBUG_REQUEST);
 
         // Only supported on specific devices

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huawei/requests/DebugRequest.java
Patch:
@@ -38,7 +38,7 @@ public DebugRequest(HuaweiSupportProvider support) {
     protected List<byte[]> createRequest() throws RequestCreationException {
         String debugString = GBApplication
             .getDeviceSpecificSharedPrefs(supportProvider.getDevice().getAddress())
-            .getString(HuaweiConstants.PREF_HUAWEI_DEBUG, "1,1,false,(1,/),(2,/),(3,/),(4,/)");
+            .getString(HuaweiConstants.PREF_HUAWEI_DEBUG_REQUEST, "1,1,false,(1,/),(2,/),(3,/),(4,/)");
         HuaweiPacket packet = parseDebugString(debugString);
         try {
             return packet.serialize();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiUtil.java
Patch:
@@ -46,8 +46,7 @@ public static byte[] timeToByte(String time) {
             (byte)calendar.get(Calendar.MINUTE)};
     }
 
-    public static byte[] getTimeAndZoneId() {
-        Calendar now = Calendar.getInstance();
+    public static byte[] getTimeAndZoneId(final Calendar now) {
         int zoneRawOffset = (now.get(Calendar.ZONE_OFFSET) + now.get(Calendar.DST_OFFSET)) / 1000;
         byte[] id = now.getTimeZone().getID().getBytes();
         return ByteBuffer.allocate(6 + id.length)

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/packets/TestNotifications.java
Patch:
@@ -17,6 +17,7 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.huawei.packets;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.lang.reflect.Field;
@@ -162,6 +163,7 @@ public void testSetNotificationRequest() throws NoSuchFieldException, IllegalAcc
     }
 
     @Test
+    @Ignore("Broken since https://codeberg.org/psolyca/Gadgetbridge/commit/5b0736b7518aa5c998ac13207fff66286393965b")
     public void testSetWearMessagePushRequest() throws NoSuchFieldException, IllegalAccessException, HuaweiPacket.CryptoException {
         Field tlvField = HuaweiPacket.class.getDeclaredField("tlv");
         tlvField.setAccessible(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huawei/HuaweiCoordinator.java
Patch:
@@ -59,11 +59,11 @@ public HuaweiCoordinator(HuaweiCoordinatorSupplier parent) {
                 byte[] commands = GB.hexStringToByteArray(getCapabilitiesSharedPreferences().getString(key, "00"));
                 this.commandsPerService.put(service, commands);
             } catch (NumberFormatException e) {
-                if (key == "expandCapabilities")
+                if (key.equals("expandCapabilities"))
                     this.expandCapabilities = GB.hexStringToByteArray(getCapabilitiesSharedPreferences().getString(key, "00"));
-                if (key == "notificationCapabilities")
+                if (key.equals("notificationCapabilities"))
                     this.notificationCapabilities = (byte)getCapabilitiesSharedPreferences().getInt(key, -0x01);
-                if (key == "notificationConstraints")
+                if (key.equals("notificationConstraints"))
                     this.notificationConstraints = ByteBuffer.wrap(GB.hexStringToByteArray(
                                     getCapabilitiesSharedPreferences().getString(
                                             key,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -598,6 +598,8 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                                 }
                                 notifCache.removeAll(toRemove);
                             }
+                        } else if (action.equals(ACTION_DISCONNECT) && device.getState() != GBDevice.State.NOT_CONNECTED) {
+                            targetedDevices.add(device);
                         }
                     }
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/CryptoUtils.java
Patch:
@@ -94,7 +94,7 @@ public static byte[] hkdfSha256(byte[] secretKey, byte[] salt, byte[] info, int
         int n = (outputLength % hashLen == 0) ? outputLength / hashLen : (outputLength / hashLen) + 1;
         byte[] hashRound = new byte[0];
 
-        ByteBuffer generatedBytes = ByteBuffer.allocate(Math.multiplyExact(n, hashLen));
+        ByteBuffer generatedBytes = ByteBuffer.allocate(n * hashLen);
         Mac mac = Mac.getInstance("HmacSHA256");
         mac.init(pseudoSecretKey);
         for (int roundNum = 1; roundNum <= n; roundNum++) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -242,7 +242,7 @@ private XiaomiSimpleActivityParser getOutdoorWalkingV2Parser(final XiaomiActivit
         builder.addUnknown(9);
         builder.addByte("recoveryTime", "seconds");
         builder.addUnknown(2);
-        builder.addInt("vo2max", "ml/kg/min");
+        builder.addInt("hrZoneExtreme", "seconds");
         builder.addInt("hrZoneAnaerobic", "seconds");
         builder.addInt("hrZoneAerobic", "seconds");
         builder.addInt("hrZoneFatBurn", "seconds");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/impl/WorkoutSummaryParser.java
Patch:
@@ -50,6 +50,8 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
         BaseActivitySummary summary = new BaseActivitySummary();
 
         summary.setStartTime(fileId.getTimestamp()); // due to a bug this has to be set
+        summary.setEndTime(fileId.getTimestamp()); // due to a bug this has to be set
+        summary.setActivityKind(ActivityKind.TYPE_UNKNOWN);
         summary.setRawSummaryData(ArrayUtils.addAll(fileId.toBytes(), bytes));
 
         try {
@@ -62,6 +64,7 @@ public boolean parse(final XiaomiSupport support, final XiaomiActivityFileId fil
 
         // parseBinaryData may return null in case the version is not supported
         if (summary == null) {
+            LOG.warn("summary is null - should never happen {}", fileId);
             return false;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -458,7 +458,7 @@ public void onInstallApp(Uri uri) {
                         .setKeepBond(true)
                         .setForeground(false)
                         .setUnsafeExperimentalButtonlessServiceInSecureDfuEnabled(false)
-                        .setMtu(23)
+                        .disableMtuRequest()
                         .setZip(uri);
 
                 controller = starter.start(getContext(), PineTimeDFUService.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -195,9 +195,10 @@ public enum Subtype {
         ACTIVITY_SLEEP_STAGES(Type.ACTIVITY, 0x03),
         ACTIVITY_SLEEP(Type.ACTIVITY, 0x08),
         SPORTS_OUTDOOR_RUNNING(Type.SPORTS, 0x01),
+        SPORTS_OUTDOOR_WALKING_V1(Type.SPORTS, 0x02),
         SPORTS_FREESTYLE(Type.SPORTS, 0x08),
         SPORTS_ELLIPTICAL(Type.SPORTS, 0x0B),
-        SPORTS_OUTDOOR_WALKING(Type.SPORTS, 0x16),
+        SPORTS_OUTDOOR_WALKING_V2(Type.SPORTS, 0x16),
         SPORTS_OUTDOOR_CYCLING(Type.SPORTS, 0x17),
         ;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/WebViewSingleton.java
Patch:
@@ -104,6 +104,9 @@ public static synchronized void ensureCreated(Activity context) {
             webSettings.setDomStorageEnabled(true);
             //needed for localstorage
             webSettings.setDatabaseEnabled(true);
+            // #3373 #3424 - Fix configuration for pebble apps
+            // TODO: this should use a WebViewAssetLoader
+            webSettings.setAllowFileAccess(true);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiSpo2SampleProvider.java
Patch:
@@ -29,7 +29,7 @@ public XiaomiSpo2SampleProvider(final GBDevice device, final DaoSession session)
 
     @Override
     protected Spo2Sample convertSample(final XiaomiActivitySample sample) {
-        if (sample.getSpo2() == 0) {
+        if (sample.getSpo2() == null || sample.getSpo2() == 0) {
             return null;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiStressSampleProvider.java
Patch:
@@ -29,7 +29,7 @@ public XiaomiStressSampleProvider(final GBDevice device, final DaoSession sessio
 
     @Override
     protected StressSample convertSample(final XiaomiActivitySample sample) {
-        if (sample.getStress() == 0) {
+        if (sample.getStress() == null || sample.getStress() == 0) {
             return null;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -396,4 +396,6 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_DEVICE_ACTION_WOKE_UP_BROADCAST = "prefs_events_forwarding_wokeup_broadcast";
     public static final String PREF_DEVICE_ACTION_START_NON_WEAR_SELECTIONS = "events_forwarding_startnonwear_action_selections";
     public static final String PREF_DEVICE_ACTION_START_NON_WEAR_BROADCAST = "prefs_events_forwarding_startnonwear_broadcast";
+    public static final String PREF_CLAP_HANDS_TO_WAKEUP_DEVICE = "pref_key_clap_hands_to_wakeup_device";
+    public static final String PREF_POWER_SAVING = "pref_key_power_saving";
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/divoom/PixooCoordinator.java
Patch:
@@ -79,6 +79,7 @@ public int getDisabledIconResource() {
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
+                R.xml.devicesettings_pixoo,
                 R.xml.devicesettings_screen_brightness,
                 R.xml.devicesettings_timeformat,
         };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBAlarmListAdapter.java
Patch:
@@ -24,13 +24,13 @@
 import android.view.ViewGroup;
 import android.widget.CheckedTextView;
 import android.widget.CompoundButton;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.card.MaterialCardView;
+import com.google.android.material.materialswitch.MaterialSwitch;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -128,7 +128,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
         MaterialCardView container;
 
         TextView alarmTime;
-        Switch isEnabled;
+        MaterialSwitch isEnabled;
         TextView isSmartWakeup;
 
         CheckedTextView alarmDayMonday;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/FileManagementActivity.java
Patch:
@@ -25,13 +25,13 @@
 import android.widget.ArrayAdapter;
 import android.widget.CompoundButton;
 import android.widget.Spinner;
-import android.widget.Switch;
 import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
+import com.google.android.material.materialswitch.MaterialSwitch;
 
 import java.io.FileInputStream;
 import java.io.IOException;
@@ -47,7 +47,7 @@ public class FileManagementActivity extends AbstractGBActivity implements View.O
     private final int REQUEST_CODE_PICK_UPLOAD_FILE = 0;
 
     private Spinner fileTypesSpinner;
-    private Switch encryptedFile;
+    private MaterialSwitch encryptedFile;
     private boolean generateFileHeader = false;
 
     private boolean warningDisplayed = false;
@@ -107,7 +107,7 @@ private void initViews() {
         findViewById(R.id.qhybrid_button_download_file).setOnClickListener(this);
         findViewById(R.id.qhybrid_button_upload_file).setOnClickListener(this);
 
-        ((Switch) findViewById(R.id.sqhybrid_switch_generate_file_header)).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+        ((MaterialSwitch) findViewById(R.id.sqhybrid_switch_generate_file_header)).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                 generateFileHeader = isChecked;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiCoordinator.java
Patch:
@@ -412,6 +412,8 @@ public int[] getSupportedDeviceSpecificSettings(final GBDevice device) {
         }
         if (supports(device, FEAT_GOAL_NOTIFICATION)) {
             settings.add(R.xml.devicesettings_goal_notification);
+        }
+        if (supports(device, FEAT_GOAL_SECONDARY)) {
             settings.add(R.xml.devicesettings_goal_secondary);
         }
         if (supports(device, FEAT_VITALITY_SCORE)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiPreferences.java
Patch:
@@ -50,6 +50,7 @@ public final class XiaomiPreferences {
     public static final String FEAT_INACTIVITY = "feat_inactivity";
     public static final String FEAT_SLEEP_MODE_SCHEDULE = "feat_sleep_mode_schedule";
     public static final String FEAT_GOAL_NOTIFICATION = "feat_goal_notification";
+    public static final String FEAT_GOAL_SECONDARY = "feat_goal_secondary";
     public static final String FEAT_VITALITY_SCORE = "feat_vitality_score";
     public static final String FEAT_SCREEN_ON_ON_NOTIFICATIONS = "feat_screen_on_on_notifications";
     public static final String FEAT_CAMERA_REMOTE = "feat_camera_remote";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiWidgetManager.java
Patch:
@@ -290,6 +290,8 @@ public void saveScreen(final WidgetScreen widgetScreen) {
             }
         }
 
+        builder.setIsFullList(1);
+
         getPrefs().getPreferences().edit()
                 .putString(XiaomiPreferences.PREF_WIDGET_SCREENS, GB.hexdump(builder.build().toByteArray()))
                 .apply();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiSystemService.java
Patch:
@@ -130,7 +130,7 @@ public void handleCommand(final XiaomiProto.Command cmd) {
             case CMD_PASSWORD_GET:
                 handlePassword(cmd.getSystem().getPassword());
                 return;
-            case CMD_PASSWORD_GET:
+            case CMD_CAMERA_REMOTE_GET:
                 handleCameraRemote(cmd.getSystem().getCamera());
                 return;
             case CMD_CAMERA_REMOTE_SET:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiScheduleService.java
Patch:
@@ -591,6 +591,7 @@ private void handleSleepModeConfig(final XiaomiProto.SleepMode sleepMode) {
         final String end = XiaomiPreferences.prefFromHourMin(sleepMode.getSchedule().getEnd());
 
         final GBDeviceEventUpdatePreferences eventUpdatePreferences = new GBDeviceEventUpdatePreferences()
+                .withPreference(XiaomiPreferences.FEAT_SLEEP_MODE_SCHEDULE, true)
                 .withPreference("prefs_enable_sleep_time", null)
                 .withPreference(DeviceSettingsPreferenceConst.PREF_SLEEP_MODE_SCHEDULE_ENABLED, sleepMode.getEnabled())
                 .withPreference(DeviceSettingsPreferenceConst.PREF_SLEEP_MODE_SCHEDULE_START, start)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiHealthService.java
Patch:
@@ -230,7 +230,7 @@ public void setUserInfo() {
         final XiaomiProto.UserInfo userInfo = XiaomiProto.UserInfo.newBuilder()
                 .setHeight(activityUser.getHeightCm())
                 .setWeight(activityUser.getWeightKg())
-                .setBirthday(Integer.parseInt(String.format(Locale.ROOT, "%02d%02d%02d", birthYear, birthMonth, birthDay)))
+                .setBirthday(Integer.parseInt(String.format(Locale.ROOT, "%04d%02d%02d", birthYear, birthMonth, birthDay)))
                 .setGender(genderInt)
                 .setMaxHeartRate(maxHeartRate)
                 .setGoalCalories(activityUser.getCaloriesBurntGoal())

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -652,7 +652,7 @@ public void onCharacteristicChanged(BluetoothGatt gatt,
                 try {
                     getCallbackToUse().onCharacteristicChanged(gatt, characteristic);
                 } catch (Throwable ex) {
-                    LOG.error("onCharaceristicChanged: " + ex.getMessage(), ex);
+                    LOG.error("onCharacteristicChanged: " + ex.getMessage(), ex);
                 }
             } else {
                 LOG.info("No gattcallback registered, ignoring characteristic change");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiCoordinator.java
Patch:
@@ -367,6 +367,9 @@ public int[] getSupportedDeviceSpecificSettings(final GBDevice device) {
         // Other
         //
         settings.add(R.xml.devicesettings_header_other);
+        if (getContactsSlotCount(device) > 0) {
+            settings.add(R.xml.devicesettings_contacts);
+        }
         settings.add(R.xml.devicesettings_camera_remote);
 
         //

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -63,6 +63,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
 import androidx.appcompat.app.AlertDialog;
 import androidx.core.app.ActivityCompat;
@@ -778,7 +779,7 @@ private void pairCurrentAsCompanion() {
 
         final GBDevice device = devices.get(0);
 
-        final CompanionDeviceManager manager = (CompanionDeviceManager) GBApplication.getContext().getSystemService(Context.COMPANION_DEVICE_SERVICE);
+        final CompanionDeviceManager manager = (CompanionDeviceManager) getSystemService(Context.COMPANION_DEVICE_SERVICE);
 
         if (manager.getAssociations().contains(device.getAddress())) {
             GB.toast(device.getAliasOrName() + " already paired as companion", Toast.LENGTH_LONG, GB.INFO);
@@ -801,7 +802,7 @@ public void onFailure(final CharSequence error) {
             }
 
             @Override
-            public void onDeviceFound(final IntentSender chooserLauncher) {
+            public void onDeviceFound(@NonNull final IntentSender chooserLauncher) {
                 GB.toast("Found device", Toast.LENGTH_SHORT, GB.INFO);
 
                 try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/Spo2Sample.java
Patch:
@@ -20,6 +20,7 @@ public interface Spo2Sample extends TimeSample {
     enum Type {
         MANUAL(0),
         AUTOMATIC(1),
+        UNKNOWN(2),
         ;
 
         private final int num;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileIdTest.java
Patch:
@@ -53,9 +53,9 @@ public void testDecode() {
         assertEquals(1697182497000L, expectedFileId.getTimestamp().getTime());
         assertEquals(4, expectedFileId.getTimezone());
         assertEquals(3, expectedFileId.getVersion());
-        assertEquals(1, expectedFileId.getType());
-        assertEquals(8, expectedFileId.getSubtype());
-        assertEquals(0, expectedFileId.getDetailType());
+        assertEquals(XiaomiActivityFileId.Type.SPORTS, expectedFileId.getType());
+        assertEquals(XiaomiActivityFileId.Subtype.SPORTS_FREESTYLE, expectedFileId.getSubtype());
+        assertEquals(XiaomiActivityFileId.DetailType.DETAILS, expectedFileId.getDetailType());
     }
 
     @Test

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/util/language/LanguageUtilsTest.java
Patch:
@@ -195,7 +195,7 @@ public void testStringTransliterateHungarian() {
 
         String input = "á é í ó ö ő ü ű";
         String output = transliterator.transliterate(input);
-        String expected = "a e i o o u u";
+        String expected = "a e i o o o u u";
         assertEquals("hungarian transliteration failed", expected, output);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/language/LanguageUtils.java
Patch:
@@ -76,7 +76,7 @@ public class LanguageUtils {
         put("german", new GermanTransliterator());
         put("greek", new GreekTransliterator());
         put("hebrew", new HebrewTransliterator());
-        put("hungarian", new HungarianTransliterator())
+        put("hungarian", new HungarianTransliterator());
         put("icelandic", new IcelandicTransliterator());
         put("korean", new KoreanTransliterator());
         put("latvian", new LatvianTransliterator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -1186,7 +1186,7 @@ private void migratePrefs(int oldVersion) {
 
         if (oldVersion < 16) {
             // If transliteration was enabled for a device, migrate it to the per-language setting
-            final String defaultLanguagesIfEnabled = "extended_ascii,common_symbols,scandinavian,german,russian,hebrew,greek,ukranian,arabic,persian,latvian,lithuanian,polish,estonian,icelandic,czech,turkish,bengali,korean";
+            final String defaultLanguagesIfEnabled = "extended_ascii,common_symbols,scandinavian,german,russian,hebrew,greek,ukranian,arabic,persian,latvian,lithuanian,polish,estonian,icelandic,czech,turkish,bengali,korean,hungarian";
             try (DBHandler db = acquireDB()) {
                 final DaoSession daoSession = db.getDaoSession();
                 final List<Device> activeDevices = DBHelper.getActiveDevices(daoSession);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/gbx100/CasioGBX100DeviceSupport.java
Patch:
@@ -301,13 +301,13 @@ private void showNotification(byte icon, String sender, String title, String sub
                 shouldAlert = sharedPreferences.getBoolean(PREF_CASIO_ALERT_OTHER, true);
                 break;
             case CasioConstants.CATEGORY_SNS:
-                sharedPreferences.getBoolean(PREF_CASIO_ALERT_SMS, true);
+                shouldAlert = sharedPreferences.getBoolean(PREF_CASIO_ALERT_SMS, true);
                 break;
             case CasioConstants.CATEGORY_INCOMING_CALL:
-                sharedPreferences.getBoolean(PREF_CASIO_ALERT_CALL, true);
+                shouldAlert = sharedPreferences.getBoolean(PREF_CASIO_ALERT_CALL, true);
                 break;
             case CasioConstants.CATEGORY_SCHEDULE_AND_ALARM:
-                sharedPreferences.getBoolean(PREF_CASIO_ALERT_CALENDAR, true);
+                shouldAlert = sharedPreferences.getBoolean(PREF_CASIO_ALERT_CALENDAR, true);
                 break;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -219,6 +219,8 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_FIND_PHONE = "prefs_find_phone";
     public static final String PREF_FIND_PHONE_DURATION = "prefs_find_phone_duration";
     public static final String PREF_AUTOLIGHT = "autolight";
+
+    public static final String PREF_PREVIEW_MESSAGE_IN_TITLE = "preview_message_in_title";
     public static final String PREF_AUTOREMOVE_MESSAGE = "autoremove_message";
     public static final String PREF_AUTOREMOVE_NOTIFICATIONS = "autoremove_notifications";
     public static final String PREF_SCREEN_ON_ON_NOTIFICATIONS = "screen_on_on_notifications";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -398,6 +398,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
         addPreferenceHandlerFor(PREF_AUTOLIGHT);
         addPreferenceHandlerFor(PREF_AUTOREMOVE_MESSAGE);
         addPreferenceHandlerFor(PREF_AUTOREMOVE_NOTIFICATIONS);
+        addPreferenceHandlerFor(PREF_PREVIEW_MESSAGE_IN_TITLE);
         addPreferenceHandlerFor(PREF_SCREEN_ON_ON_NOTIFICATIONS);
         addPreferenceHandlerFor(PREF_WORKOUT_KEEP_SCREEN_ON);
         addPreferenceHandlerFor(PREF_KEY_VIBRATION);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casio/gbx100/CasioGBX100DeviceCoordinator.java
Patch:
@@ -152,7 +152,8 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
                 R.xml.devicesettings_operating_sounds,
                 R.xml.devicesettings_fake_ring_duration,
                 R.xml.devicesettings_autoremove_message,
-                R.xml.devicesettings_transliteration
+                R.xml.devicesettings_transliteration,
+                R.xml.devicesettings_preview_message_in_title
         };
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casio/gb6900/CasioGB6900DeviceCoordinator.java
Patch:
@@ -54,7 +54,7 @@ protected Pattern getSupportedDeviceName() {
 
     @Override
     public int getBondingStyle(){
-        return BONDING_STYLE_BOND;
+        return BONDING_STYLE_LAZY;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/gb6900/CasioGB6900DeviceSupport.java
Patch:
@@ -60,6 +60,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.gb6900.CasioGB6900HandlerThread;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.gb6900.InitOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.casio.gb6900.SetAlarmOperation;
+import nodomain.freeyourgadget.gadgetbridge.util.BondingUtil;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
@@ -151,6 +152,7 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
             setInitialized();
             getDevice().setFirmwareVersion("N/A");
             getDevice().setFirmwareVersion2("N/A");
+            builder.bond();
             return builder;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BondingInterface.java
Patch:
@@ -54,6 +54,9 @@ public interface BondingInterface {
      **/
     void unregisterBroadcastReceivers();
 
+    String getMacAddress();
+
+    boolean getAttemptToConnect();
     /**
      * This forces bonding activities to handle the addition
      * of all broadcast receivers in the same place

File: app/src/main/java/org/bouncycastle/shaded/crypto/BlockCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 
 /**

File: app/src/main/java/org/bouncycastle/shaded/crypto/CipherParameters.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * all parameter classes implement this.

File: app/src/main/java/org/bouncycastle/shaded/crypto/CryptoException.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * the foundation class for the hard exceptions thrown by the crypto packages.

File: app/src/main/java/org/bouncycastle/shaded/crypto/DataLengthException.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * this exception is thrown if a buffer that is meant to have output

File: app/src/main/java/org/bouncycastle/shaded/crypto/DefaultMultiBlockCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 public abstract class DefaultMultiBlockCipher
     implements MultiBlockCipher

File: app/src/main/java/org/bouncycastle/shaded/crypto/InvalidCipherTextException.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * this exception is thrown whenever we find something we don't expect in a

File: app/src/main/java/org/bouncycastle/shaded/crypto/Mac.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 
 /**

File: app/src/main/java/org/bouncycastle/shaded/crypto/MultiBlockCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * Base interface for a cipher engine capable of processing multiple blocks at a time.

File: app/src/main/java/org/bouncycastle/shaded/crypto/OutputLengthException.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 public class OutputLengthException
     extends DataLengthException

File: app/src/main/java/org/bouncycastle/shaded/crypto/RuntimeCryptoException.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * the foundation class for the exceptions thrown by the crypto packages.

File: app/src/main/java/org/bouncycastle/shaded/crypto/SkippingCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * Ciphers producing a key stream which can be reset to particular points in the stream implement this.

File: app/src/main/java/org/bouncycastle/shaded/crypto/SkippingStreamCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * General interface for a stream cipher that supports skipping.

File: app/src/main/java/org/bouncycastle/shaded/crypto/StreamBlockCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * A parent class for block cipher modes that do not require block aligned data to be processed, but can function in

File: app/src/main/java/org/bouncycastle/shaded/crypto/StreamCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto;
+package org.bouncycastle.shaded.crypto;
 
 /**
  * the interface stream ciphers conform to.

File: app/src/main/java/org/bouncycastle/shaded/crypto/modes/AEADBlockCipher.java
Patch:
@@ -1,6 +1,6 @@
-package org.bouncycastle.crypto.modes;
+package org.bouncycastle.shaded.crypto.modes;
 
-import org.bouncycastle.crypto.BlockCipher;
+import org.bouncycastle.shaded.crypto.BlockCipher;
 
 /**
  * An {@link AEADCipher} based on a {@link BlockCipher}.

File: app/src/main/java/org/bouncycastle/shaded/crypto/modes/CBCModeCipher.java
Patch:
@@ -1,7 +1,7 @@
-package org.bouncycastle.crypto.modes;
+package org.bouncycastle.shaded.crypto.modes;
 
-import org.bouncycastle.crypto.BlockCipher;
-import org.bouncycastle.crypto.MultiBlockCipher;
+import org.bouncycastle.shaded.crypto.BlockCipher;
+import org.bouncycastle.shaded.crypto.MultiBlockCipher;
 
 public interface CBCModeCipher
     extends MultiBlockCipher

File: app/src/main/java/org/bouncycastle/shaded/crypto/modes/CCMModeCipher.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.crypto.modes;
+package org.bouncycastle.shaded.crypto.modes;
 
 public interface CCMModeCipher
     extends AEADBlockCipher

File: app/src/main/java/org/bouncycastle/shaded/crypto/paddings/BlockCipherPadding.java
Patch:
@@ -1,8 +1,8 @@
-package org.bouncycastle.crypto.paddings;
+package org.bouncycastle.shaded.crypto.paddings;
 
 import java.security.SecureRandom;
 
-import org.bouncycastle.crypto.InvalidCipherTextException;
+import org.bouncycastle.shaded.crypto.InvalidCipherTextException;
 
 /**
  * Block cipher padders are expected to conform to this interface

File: app/src/main/java/org/bouncycastle/shaded/crypto/params/AEADParameters.java
Patch:
@@ -1,7 +1,7 @@
-package org.bouncycastle.crypto.params;
+package org.bouncycastle.shaded.crypto.params;
 
-import org.bouncycastle.crypto.CipherParameters;
-import org.bouncycastle.util.Arrays;
+import org.bouncycastle.shaded.crypto.CipherParameters;
+import org.bouncycastle.shaded.util.Arrays;
 
 public class AEADParameters
     implements CipherParameters

File: app/src/main/java/org/bouncycastle/shaded/crypto/params/KeyParameter.java
Patch:
@@ -1,7 +1,7 @@
-package org.bouncycastle.crypto.params;
+package org.bouncycastle.shaded.crypto.params;
 
-import org.bouncycastle.crypto.CipherParameters;
-import org.bouncycastle.util.Arrays;
+import org.bouncycastle.shaded.crypto.CipherParameters;
+import org.bouncycastle.shaded.util.Arrays;
 
 public class KeyParameter
     implements CipherParameters

File: app/src/main/java/org/bouncycastle/shaded/crypto/params/ParametersWithIV.java
Patch:
@@ -1,6 +1,6 @@
-package org.bouncycastle.crypto.params;
+package org.bouncycastle.shaded.crypto.params;
 
-import org.bouncycastle.crypto.CipherParameters;
+import org.bouncycastle.shaded.crypto.CipherParameters;
 
 public class ParametersWithIV
     implements CipherParameters

File: app/src/main/java/org/bouncycastle/shaded/util/Arrays.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.util;
+package org.bouncycastle.shaded.util;
 
 import java.math.BigInteger;
 import java.util.NoSuchElementException;

File: app/src/main/java/org/bouncycastle/shaded/util/Objects.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.util;
+package org.bouncycastle.shaded.util;
 
 public class Objects
 {

File: app/src/main/java/org/bouncycastle/shaded/util/Pack.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.util;
+package org.bouncycastle.shaded.util;
 
 /**
  * Utility methods for converting byte arrays into ints and longs, and back again.

File: app/src/main/java/org/bouncycastle/shaded/util/Strings.java
Patch:
@@ -1,4 +1,4 @@
-package org.bouncycastle.util;
+package org.bouncycastle.shaded.util;
 
 import java.security.AccessController;
 import java.security.PrivilegedAction;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiNotificationService.java
Patch:
@@ -329,7 +329,8 @@ private void handleNotificationIconRequest(final XiaomiProto.NotificationIconReq
         final ByteBuffer buf = ByteBuffer.allocate(size * size * 4).order(ByteOrder.LITTLE_ENDIAN);
         for (int x = 0; x < size; x++) {
             for (int y = 0; y < size; y++) {
-                buf.putInt(bmpResized.getPixel(x, y));
+                //noinspection SuspiciousNameCombination x and y are flipped on purpose
+                buf.putInt(bmpResized.getPixel(y, x));
             }
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiWeatherService.java
Patch:
@@ -105,7 +105,7 @@ public void onSendWeather(final WeatherSpec weatherSpec) {
                                         )
                                         .setAQI(XiaomiProto.WeatherCurrentAQI.newBuilder()
                                                 .setAQIText("Unknown") // some string like "Moderate"
-                                                .setAQI(weatherSpec.airQuality.aqi)
+                                                .setAQI(weatherSpec.airQuality != null && weatherSpec.airQuality.aqi >=0 ? weatherSpec.airQuality.aqi : 0)
                                         )
                                         .setWarning(XiaomiProto.WeatherCurrentWarning.newBuilder()
                                                 .setCurrentWarning1(XiaomiProto.WeatherCurrentWarning1.newBuilder()

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiWatchfaceService.java
Patch:
@@ -244,6 +244,7 @@ public void onUploadFinish(final boolean success) {
 
         if (success) {
             setWatchface(fwHelper.getId());
+            requestWatchfaceList();
         }
 
         fwHelper = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -151,6 +151,7 @@ public enum Subtype {
         UNKNOWN(Type.UNKNOWN, -1),
         ACTIVITY_DAILY(Type.ACTIVITY, 0),
         ACTIVITY_SLEEP(Type.ACTIVITY,8),
+        SPORTS_OUTDOOR_RUNNING(Type.SPORTS, 1),
         SPORTS_FREESTYLE(Type.SPORTS, 8),
         SPORTS_ELLIPTICAL(Type.SPORTS, 11),
         ;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiNotificationService.java
Patch:
@@ -153,8 +153,8 @@ public void onSetCallState(final CallSpec callSpec) {
                 .setRepliesAllowed(canSendSms())
                 .setTimestamp(TIMESTAMP_SDF.format(new Date()));
 
-        notification3.setPackage(BuildConfig.APPLICATION_ID);
-        notification3.setAppName("Phone");
+        notification3.setPackage("phone");
+        notification3.setAppName("phone");
 
         if (callSpec.name != null) {
             notification3.setTitle(callSpec.name);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiSupport.java
Patch:
@@ -124,12 +124,12 @@ protected final TransactionBuilder initializeDevice(final TransactionBuilder bui
         this.characteristicCommandRead.setEncrypted(isEncrypted());
         this.characteristicCommandRead.setHandler(this::handleCommandBytes);
         this.characteristicCommandWrite = new XiaomiCharacteristic(this, btCharacteristicCommandWrite, authService);
-        this.characteristicCommandRead.setEncrypted(isEncrypted());
+        this.characteristicCommandWrite.setEncrypted(isEncrypted());
         this.characteristicActivityData = new XiaomiCharacteristic(this, btCharacteristicActivityData, authService);
         this.characteristicActivityData.setHandler(healthService.getActivityFetcher()::addChunk);
-        this.characteristicCommandRead.setEncrypted(isEncrypted());
+        this.characteristicActivityData.setEncrypted(isEncrypted());
         this.characteristicDataUpload = new XiaomiCharacteristic(this, btCharacteristicDataUpload, authService);
-        this.characteristicCommandRead.setEncrypted(isEncrypted());
+        this.characteristicDataUpload.setEncrypted(isEncrypted());
 
         builder.requestMtu(247);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileFetcher.java
Patch:
@@ -116,7 +116,7 @@ public void addChunk(final byte[] chunk) {
                 return;
             }
 
-            if (activityParser.parse(fileId, activityData)) {
+            if (activityParser.parse(mHealthService.getSupport(), fileId, activityData)) {
                 if (!XiaomiPreferences.keepActivityDataOnDevice(mHealthService.getSupport().getDevice())) {
                     LOG.debug("Acking recorded data {}", fileId);
                     mHealthService.ackRecordedData(fileId);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/activity/XiaomiActivityFileId.java
Patch:
@@ -107,7 +107,7 @@ public static XiaomiActivityFileId from(final ByteBuffer buf) {
         // bit 6 and 7 - 0 details, 1 summary
         final int detailType = flags & 3;
 
-        return new XiaomiActivityFileId(new Date(ts * 1000L), tz, version, type, subtype, detailType);
+        return new XiaomiActivityFileId(new Date(ts * 1000L), tz, type, subtype, detailType, version);
     }
 
     @NonNull

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiCharacteristic.java
Patch:
@@ -258,7 +258,7 @@ private void sendNext() {
             buf.putShort((short) 0);
             buf.put((byte) 0);
             buf.put((byte) (isEncrypted ? 1 : 0));
-            buf.putShort((short) Math.round(currentSending.length / 247.0));
+            buf.putShort((short) Math.max(1,Math.round(currentSending.length / 247.0)));
 
             final TransactionBuilder builder = mSupport.createTransactionBuilder("send chunked start");
             builder.write(bluetoothGattCharacteristic, buf.array());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/XiaomiPlaintextSupport.java
Patch:
@@ -67,12 +67,12 @@ protected TransactionBuilder initializeDevice(final TransactionBuilder builder)
         this.characteristicCommandRead.setEncrypted(false);
         this.characteristicCommandRead.setHandler(this::handleCommandBytes);
         this.characteristicCommandWrite = new XiaomiCharacteristic(this, btCharacteristicCommandWrite, authService);
-        this.characteristicCommandRead.setEncrypted(false);
+        this.characteristicCommandWrite.setEncrypted(false);
         this.characteristicActivityData = new XiaomiCharacteristic(this, btCharacteristicActivityData, authService);
         this.characteristicActivityData.setHandler(healthService.getActivityFetcher()::addChunk);
-        this.characteristicCommandRead.setEncrypted(false);
+        this.characteristicActivityData.setEncrypted(false);
         this.characteristicDataUpload = new XiaomiCharacteristic(this, btCharacteristicDataUpload, authService);
-        this.characteristicCommandRead.setEncrypted(false);
+        this.characteristicDataUpload.setEncrypted(false);
 
         // FIXME why is this needed?
         getDevice().setFirmwareVersion("...");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miwatch/MiWatchLiteSupport.java
Patch:
@@ -74,7 +74,7 @@ protected TransactionBuilder initializeDevice(final TransactionBuilder builder)
                 .setSubtype(XiaomiAuthService.CMD_SEND_USERID)
                 .setAuth(auth)
                 .build();
-        sendCommand("send user id", command);
+        sendCommand(builder, command);
 
         builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZED, getContext()));
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/AbstractRepeatingFetchOperation.java
Patch:
@@ -81,6 +81,8 @@ protected boolean handleActivityFetchFinish(final boolean success) {
         LOG.info("{} has finished round {}: {}, got {} bytes in buffer", getName(), fetchCount, success, byteStreamBuffer.size());
 
         if (!success) {
+            // We need to explicitly ack this, or the next operation will fail fetch will become stuck
+            sendAck2021(true);
             super.handleActivityFetchFinish(false);
             return false;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -141,6 +141,9 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_SLEEP_TIME = "prefs_enable_sleep_time";
     public static final String PREF_SLEEP_TIME_START = "prefs_sleep_time_start";
     public static final String PREF_SLEEP_TIME_END = "prefs_sleep_time_end";
+    public static final String PREF_SLEEP_MODE_SCHEDULE_ENABLED = "sleep_mode_schedule_enabled";
+    public static final String PREF_SLEEP_MODE_SCHEDULE_START = "sleep_mode_schedule_start";
+    public static final String PREF_SLEEP_MODE_SCHEDULE_END = "sleep_mode_schedule_end";
     public static final String PREF_SLEEP_MODE_SLEEP_SCREEN = "pref_sleep_mode_sleep_screen";
     public static final String PREF_SLEEP_MODE_SMART_ENABLE = "pref_sleep_mode_smart_enable";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/xiaomi/XiaomiCoordinator.java
Patch:
@@ -312,7 +312,7 @@ public int[] getSupportedDeviceSpecificSettings(final GBDevice device) {
         settings.add(R.xml.devicesettings_header_health);
         settings.add(R.xml.devicesettings_heartrate_sleep_alert_activity_stress_spo2);
         settings.add(R.xml.devicesettings_inactivity_dnd_no_threshold);
-        settings.add(R.xml.devicesettings_sleep_time); // TODO replace with sleep mode schedule
+        settings.add(R.xml.devicesettings_sleep_mode_schedule);
         settings.add(R.xml.devicesettings_goal_notification);
 
         //

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiHealthService.java
Patch:
@@ -357,7 +357,7 @@ private void handleStressConfig(final XiaomiProto.Stress stress) {
 
         final GBDeviceEventUpdatePreferences eventUpdatePreferences = new GBDeviceEventUpdatePreferences()
                 .withPreference(DeviceSettingsPreferenceConst.PREF_HEARTRATE_STRESS_MONITORING, stress.getAllDayTracking())
-                .withPreference(DeviceSettingsPreferenceConst.PREF_HEARTRATE_STRESS_RELAXATION_REMINDER, stress.getRelaxReminder());
+                .withPreference(DeviceSettingsPreferenceConst.PREF_HEARTRATE_STRESS_RELAXATION_REMINDER, stress.getRelaxReminder().getEnabled());
 
         getSupport().evaluateGBDeviceEvent(eventUpdatePreferences);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xiaomi/services/XiaomiHealthService.java
Patch:
@@ -159,6 +159,9 @@ public void enableRealtimeStats(final boolean enable) {
 
     private void handleRealtimeStats(final XiaomiProto.RealTimeStats realTimeStats) {
         if (realtimeOneShot) {
+            if (realTimeStats.getHeartRate() <= 10) {
+                return;
+            }
             enableRealtimeStats(false);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Weather.java
Patch:
@@ -43,6 +43,7 @@
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
+import java.util.TimeZone;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiWeatherConditions;
 import nodomain.freeyourgadget.gadgetbridge.model.Weather;
@@ -255,6 +256,7 @@ private Range getSunriseSunset(final GregorianCalendar date, final Location loca
 
         private Range getSunriseSunset(final Date sunRise, final Date sunSet) {
             final SimpleDateFormat sunRiseSetSdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ROOT);
+            sunRiseSetSdf.setTimeZone(TimeZone.getTimeZone("UTC"));
 
             final String from = sunRiseSetSdf.format(sunRise);
             final String to = sunRiseSetSdf.format(sunSet);
@@ -298,6 +300,7 @@ public void add(final int rise, final int set, final int phase) {
             moonPhaseValue.add(String.valueOf(phase));
 
             final SimpleDateFormat moonRiseSetSdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ROOT);
+            moonRiseSetSdf.setTimeZone(TimeZone.getTimeZone("UTC"));
 
             final String from = moonRiseSetSdf.format(new Date(rise * 1000L));
             final String to = moonRiseSetSdf.format(new Date(set * 1000L));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/discovery/GBScanEventProcessor.java
Patch:
@@ -184,10 +184,9 @@ private boolean processCandidate(final GBDeviceCandidate candidate) {
             }
         }
 
-        final DeviceType deviceType = DeviceHelper.getInstance().resolveDeviceType(candidate);
+        final DeviceType deviceType = DeviceHelper.getInstance().resolveDeviceType(candidate, false);
 
         if (deviceType.isSupported() || discoverUnsupported) {
-            candidate.setDeviceType(deviceType);
             synchronized (candidatesByAddress) {
                 candidatesByAddress.put(candidate.getMacAddress(), candidate);
             }
@@ -263,7 +262,7 @@ private boolean processAllScanEvents(final String address) {
                     "Device {} ({}) is supported as '{}' without scanning services",
                     candidate.getDevice(),
                     candidate.getName(),
-                    candidate.getDeviceType()
+                    DeviceHelper.getInstance().resolveDeviceType(candidate, false)
             );
             return true;
         }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/database/EntitiesTest.java
Patch:
@@ -88,7 +88,7 @@ public void testDBHelper() {
         assertEquals("00:00:00:00:01", device.getIdentifier());
         assertEquals("Testie", device.getName());
         assertEquals("4.0", device.getModel());
-        assertEquals(DeviceType.TEST.getKey(), device.getType());
+        assertEquals(DeviceType.TEST.name(), device.getTypeName());
         DeviceAttributes attributes = device.getDeviceAttributesList().get(0);
         assertNotNull(attributes);
         assertEquals("1.2.3", attributes.getFirmwareVersion1());

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -45,7 +45,7 @@ public class GBDaoGenerator {
 
 
     public static void main(String[] args) throws Exception {
-        final Schema schema = new Schema(60, MAIN_PACKAGE + ".entities");
+        final Schema schema = new Schema(62, MAIN_PACKAGE + ".entities");
 
         Entity userAttributes = addUserAttributes(schema);
         Entity user = addUserInfo(schema, userAttributes);
@@ -203,7 +203,8 @@ private static Entity addDevice(Schema schema, Entity deviceAttributes) {
         device.addStringProperty("name").notNull();
         device.addStringProperty("manufacturer").notNull();
         device.addStringProperty("identifier").notNull().unique().javaDocGetterAndSetter("The fixed identifier, i.e. MAC address of the device.");
-        device.addIntProperty("type").notNull().javaDocGetterAndSetter("The DeviceType key, i.e. the GBDevice's type.");
+        device.addIntProperty("type").notNull().javaDocGetterAndSetter("The DeviceType key, i.e. the GBDevice's type.").codeBeforeGetterAndSetter("@Deprecated");
+        device.addStringProperty("typeName").notNull().javaDocGetterAndSetter("The DeviceType enum name, for example SONY_WH_1000XM3");
         device.addStringProperty("model").javaDocGetterAndSetter("An optional model, further specifying the kind of device.");
         device.addStringProperty("alias");
         device.addStringProperty("parentFolder").javaDocGetterAndSetter("Folder name containing this device.");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -157,7 +157,7 @@ public void onReceive(Context context, Intent intent) {
     };
     private Spinner sendTypeSpinner;
     private EditText editContent;
-    public static final long SELECT_DEVICE = 999L;
+    public static final long SELECT_DEVICE = -1;
     private long selectedTestDeviceKey = SELECT_DEVICE;
     private String selectedTestDeviceMAC;
 
@@ -1003,7 +1003,7 @@ public static void createTestDevice(Context context, long deviceKey, String devi
         if (deviceKey == SELECT_DEVICE) {
             return;
         }
-        DeviceType deviceType = DeviceType.fromKey((int) deviceKey);
+        DeviceType deviceType = DeviceType.values()[(int) deviceKey];
         try (
             DBHandler db = GBApplication.acquireDB()) {
             DaoSession daoSession = db.getDaoSession();
@@ -1153,7 +1153,7 @@ public static Map<String, Pair<Long, Integer>> getAllSupportedDevices(Context ap
             DeviceCoordinator coordinator = deviceType.getDeviceCoordinator();
             int icon = coordinator.getDefaultIconResource();
             String name = app.getString(coordinator.getDeviceNameResource()) + " (" + coordinator.getManufacturer() + ")";
-            long deviceId = deviceType.getKey();
+            long deviceId = deviceType.ordinal();
             newMap.put(name, new Pair(deviceId, icon));
         }
         TreeMap <String, Pair<Long, Integer>> sortedMap = new TreeMap<>(newMap);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -437,7 +437,7 @@ private static void ensureDeviceUpToDate(Device device, GBDevice gbDevice, DaoSe
             device.setAlias(gbDevice.getAlias());
             DeviceCoordinator coordinator = gbDevice.getDeviceCoordinator();
             device.setManufacturer(coordinator.getManufacturer());
-            device.setType(gbDevice.getType().getKey());
+            device.setTypeName(gbDevice.getType().name());
             device.setModel(gbDevice.getModel());
 
             if (device.getId() == null) {
@@ -462,7 +462,7 @@ private static boolean isDeviceUpToDate(Device device, GBDevice gbDevice) {
         if (!Objects.equals(device.getManufacturer(), coordinator.getManufacturer())) {
             return false;
         }
-        if (device.getType() != gbDevice.getType().getKey()) {
+        if(!gbDevice.getType().name().equals(device.getTypeName())){
             return false;
         }
         if (!Objects.equals(device.getModel(), gbDevice.getModel())) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/roidmi/RoidmiSupport.java
Patch:
@@ -99,7 +99,7 @@ protected GBDeviceProtocol createDeviceProtocol() {
             case ROIDMI3:
                 return new Roidmi3Protocol(getDevice());
             default:
-                LOG.error("Unsupported device type {} with key = {}", deviceType, deviceType.getKey());
+                LOG.error("Unsupported device type {} with key = {}", deviceType, deviceType.name());
         }
 
         return null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -171,7 +171,7 @@ private List<GBDevice> getDatabaseDevices() {
      * @return
      */
     public GBDevice toGBDevice(Device dbDevice) {
-        DeviceType deviceType = DeviceType.fromKey(dbDevice.getType());
+        DeviceType deviceType = DeviceType.fromName(dbDevice.getTypeName());
         GBDevice gbDevice = new GBDevice(dbDevice.getIdentifier(), dbDevice.getName(), dbDevice.getAlias(), dbDevice.getParentFolder(), deviceType);
         DeviceCoordinator coordinator = gbDevice.getDeviceCoordinator();
         for (BatteryConfig batteryConfig : coordinator.getBatteryConfig()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/language/impl/CommonSymbolsTransliterator.java
Patch:
@@ -30,7 +30,7 @@ public CommonSymbolsTransliterator() {
             put('©', "(c)"); put('®', "(r)"); put('™', "(tm)"); put('°', "*"); put('€', "EUR");
             put('–', "-"); put('⸺', "-"); put('˗', "-"); put('ᐨ', "-"); put('‐', "-"); put('‑', "-"); put('‒', "-"); put('—', "-"); put('―', "-"); put('−', "-");
             put('⎯', "-"); put('⏤', "-"); put('─', "-"); put('➖', "-"); put('⸻', "-"); put('ㅡ', "-"); put('ᅳ', "-"); put('ー', "-"); put('一', "-"); put('﹘', "-");
-            put('﹣', "-"); put('－', "-"); put('𑁋', "-"); put('𑁒', "-"); put('˜', "~"); put('⁓', "~"); put('∼', "~"); put('〜', "~"); put('〰', "~~"); put('～', "~");
+            put('﹣', "-"); put('－', "-"); put('\udc4b', "-"); put('\udc52', "-"); put('˜', "~"); put('⁓', "~"); put('∼', "~"); put('〜', "~"); put('〰', "~~"); put('～', "~");
             put('⁰', "0"); put('¹', "1"); put('²', "2"); put('³', "3"); put('⁴', "4"); put('⁵', "5"); put('⁶', "6"); put('⁷', "7"); put('⁸', "8"); put('⁹', "9");
             put('₀', "0"); put('₁', "1"); put('₂', "2"); put('₃', "3"); put('₄', "4"); put('₅', "5"); put('₆', "6"); put('₇', "7"); put('₈', "8"); put('₉', "9");
         }});

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021WorkoutTrackActivityType.java
Patch:
@@ -99,7 +99,9 @@ public enum Huami2021WorkoutTrackActivityType {
     ModernDance(0xb9),
     MuayThai(0x65),
     OutdoorCycling(0x04),
+    OutdoorHiking(0x0f),
     OutdoorRunning(0x01),
+    OutdoorSwimming(0x07),
     ParallelBars(0x96),
     Parkour(0x81),
     Pilates(0x3d),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -162,7 +162,7 @@ public ParcelUuid[] getServiceUuids() {
 
     public boolean supportsService(UUID aService) {
         ParcelUuid[] uuids = getServiceUuids();
-        if (uuids.length == 0) {
+        if (uuids == null || uuids.length == 0) {
             LOG.warn("no cached services available for " + this);
             return false;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/Weather.java
Patch:
@@ -994,14 +994,12 @@ public void setCacheFile(final File cacheDir, final boolean enabled) {
             LOG.info("Setting weather cache file to {}", cacheFile.getPath());
 
             if (cacheFile.isFile() && weatherSpec == null) {
-                try {
-                    final FileInputStream f = new FileInputStream(cacheFile);
+                try (final FileInputStream f = new FileInputStream(cacheFile)) {
                     final ObjectInputStream o = new ObjectInputStream(f);
 
                     weatherSpec = (WeatherSpec) o.readObject();
 
                     o.close();
-                    f.close();
                 } catch (final Throwable e) {
                     LOG.error("Failed to read weather from cache", e);
                     weatherSpec = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/LefunDeviceCoordinator.java
Patch:
@@ -34,7 +34,6 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.lefun.LefunDeviceSupport;
 
@@ -56,7 +55,6 @@ public int getBondingStyle() {
         return BONDING_STYLE_NONE;
     }
 
-    @NonNull
     @Override
     public boolean supports(GBDeviceCandidate candidate) {
         // There's a bunch of other names other than "Lefun", but let's just focus on one for now.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/UnknownDeviceCoordinator.java
Patch:
@@ -108,8 +108,8 @@ public UnknownDeviceCoordinator() {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
-        return DeviceType.UNKNOWN;
+    public boolean supports(GBDeviceCandidate candidate) {
+        return false;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/flipper/zero/FlipperZeroCoordinator.java
Patch:
@@ -31,11 +31,11 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device,
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
+    public boolean supports(GBDeviceCandidate candidate) {
         if(candidate.supportsService(UUID.fromString("00003082-0000-1000-8000-00805f9b34fb"))){
-            return DeviceType.FLIPPER_ZERO; // need to filter for flipper here
+            return true; // need to filter for flipper here
         }
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/MakibesF68Coordinator.java
Patch:
@@ -34,13 +34,13 @@ public class MakibesF68Coordinator extends HPlusCoordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
+    public boolean supports(GBDeviceCandidate candidate) {
         String name = candidate.getName();
         if(name != null && name.startsWith("SPORT") && !name.startsWith("SPORTAGE")){
-            return DeviceType.MAKIBESF68;
+            return true;
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/SG2Coordinator.java
Patch:
@@ -31,16 +31,16 @@ public class SG2Coordinator extends HPlusCoordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
+    public boolean supports(GBDeviceCandidate candidate) {
         String name = candidate.getName();
         if (name != null && name.startsWith("SG2")) {
             HPlusCoordinator.setNotificationLinesNumber(candidate.getDevice().getAddress(), 9);
             HPlusCoordinator.setUnicodeSupport(candidate.getDevice().getAddress(), true);
             HPlusCoordinator.setDisplayIncomingMessageIcon(candidate.getDevice().getAddress(), false);
-            return DeviceType.SG2;
+            return true;
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr3/AmazfitGTR3Coordinator.java
Patch:
@@ -39,17 +39,17 @@ public class AmazfitGTR3Coordinator extends Huami2021Coordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(final GBDeviceCandidate candidate) {
+    public boolean supports(final GBDeviceCandidate candidate) {
         try {
             final String name = candidate.getName();
             if (name != null && name.startsWith(HuamiConst.AMAZFIT_GTR3_NAME) && !name.contains("Pro")) {
-                return DeviceType.AMAZFITGTR3;
+                return true;
             }
         } catch (final Exception e) {
             LOG.error("unable to check device support", e);
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @NonNull

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts4/AmazfitGTS4Coordinator.java
Patch:
@@ -39,17 +39,17 @@ public class AmazfitGTS4Coordinator extends Huami2021Coordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(final GBDeviceCandidate candidate) {
+    public boolean supports(final GBDeviceCandidate candidate) {
         try {
             final String name = candidate.getName();
             if (name != null && name.startsWith(HuamiConst.AMAZFIT_GTS4_NAME) && !name.contains("Mini")) {
-                return DeviceType.AMAZFITGTS4;
+                return true;
             }
         } catch (final Exception e) {
             LOG.error("unable to check device support", e);
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @NonNull

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/LefunDeviceCoordinator.java
Patch:
@@ -58,7 +58,7 @@ public int getBondingStyle() {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
+    public boolean supports(GBDeviceCandidate candidate) {
         // There's a bunch of other names other than "Lefun", but let's just focus on one for now.
         if (ADVERTISEMENT_NAME.equals(candidate.getName())) {
             // The device does not advertise service UUIDs, so can't check whether it supports
@@ -67,11 +67,11 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             // manufacturer specific data, which consists of the device's MAC address and said
             // string. But we're not being given it, so *shrug*.
             if (candidate.getServiceUuids().length == 0) {
-                return DeviceType.LEFUN;
+                return true;
             }
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/roidmi/Roidmi1Coordinator.java
Patch:
@@ -33,18 +33,18 @@ public class Roidmi1Coordinator extends RoidmiCoordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(final GBDeviceCandidate candidate) {
+    public boolean supports(final GBDeviceCandidate candidate) {
         try {
             final String name = candidate.getName();
 
             if (name != null && name.contains("睿米车载蓝牙播放器")) {
-                return DeviceType.ROIDMI;
+                return true;
             }
         } catch (final Exception ex) {
             LOG.error("unable to check device support", ex);
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/test/TestDeviceCoordinator.java
Patch:
@@ -29,8 +29,8 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device,
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
-        return DeviceType.UNKNOWN;
+    public boolean supports(GBDeviceCandidate candidate) {
+        return false;
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/withingssteelhr/WithingsSteelHRDeviceCoordinator.java
Patch:
@@ -52,13 +52,13 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device,
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(GBDeviceCandidate candidate) {
+    public boolean supports(GBDeviceCandidate candidate) {
         String name = candidate.getName();
         if (name != null && (name.toLowerCase(Locale.ROOT).startsWith("steel") || name.toLowerCase(Locale.ROOT).startsWith("activite"))) {
-            return DeviceType.WITHINGS_STEEL_HR;
+            return true;
         }
 
-        return DeviceType.UNKNOWN;
+        return false;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -257,8 +257,7 @@ public enum DeviceType {
     SONY_WH_1000XM5(437, SonyWH1000XM5Coordinator.class),
     SONY_WF_1000XM5(438, SonyWF1000XM5Coordinator.class),
     BOSE_QC35(440, QC35Coordinator.class),
-    VESC_NRF(500, VescCoordinator.class),
-    VESC_HM10(501, VescCoordinator.class),
+    VESC(500, VescCoordinator.class),
     BINARY_SENSOR(510, BinarySensorCoordinator.class),
     FLIPPER_ZERO(520, FlipperZeroCoordinator.class),
     SUPER_CARS(530, SuperCarsCoordinator.class),

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/MockSonyCoordinator.java
Patch:
@@ -34,8 +34,8 @@ public class MockSonyCoordinator extends SonyHeadphonesCoordinator {
 
     @NonNull
     @Override
-    public DeviceType getSupportedType(final GBDeviceCandidate candidate) {
-        return deviceType;
+    public boolean supports(final GBDeviceCandidate candidate) {
+        return true;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/asteroidos/AsteroidOSConstants.java
Patch:
@@ -16,7 +16,8 @@ public class AsteroidOSConstants {
             "dory", "firefish", "harmony", "inharmony",
             "narwhal", "ray", "sawfish", "sawshark",
             "skipjack", "tunny", "mooneye", "swift",
-            "minnow", "sprat", "tetra"
+            "minnow", "sprat", "tetra", "pike", "hoki",
+            "koi", "ayu"
     };
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/asteroidos/AsteroidOSMediaCommand.java
Patch:
@@ -1,8 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.asteroidos;
 
-import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl;
-import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventNotificationControl;
 
 /**
  * An adapter class for the media commands sent by AsteroidOS
@@ -14,7 +12,7 @@ public class AsteroidOSMediaCommand {
     public static final byte COMMAND_PAUSE = 0x3;
     public static final byte COMMAND_VOLUME = 0x4;
 
-    public byte command = 0x0;
+    public byte command;
     public AsteroidOSMediaCommand(byte value) {
         command = value;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/test/TestDeviceCoordinator.java
Patch:
@@ -76,7 +76,7 @@ public boolean supportsSmartWakeup(GBDevice device) {
 
     @Override
     public String getManufacturer() {
-        return null;
+        return "Test";
     }
 
     @Override
@@ -110,6 +110,8 @@ public Class<? extends DeviceSupport> getDeviceSupportClass() {
         return UnknownDeviceSupport.class;
     }
 
+
+
     @Override
     public int getDeviceNameResource() {
         return R.string.devicetype_test;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/wena3/SonyWena3DeviceSupport.java
Patch:
@@ -428,9 +428,7 @@ public void onSetMusicInfo(MusicSpec musicSpec) {
     @Override
     public void onSetMusicState(MusicStateSpec stateSpec) {
         if(stateSpec.state == MusicStateSpec.STATE_PLAYING && lastMusicInfo != null) {
-            if(lastMusicInfo != null) {
-                sendMusicInfo(lastMusicInfo);
-            }
+            sendMusicInfo(lastMusicInfo);
         } else if (stateSpec.state == MusicStateSpec.STATE_STOPPED || stateSpec.state == MusicStateSpec.STATE_PAUSED) {
             sendMusicInfo("");
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/wena3/SonyWena3DeviceSupport.java
Patch:
@@ -853,7 +853,7 @@ private void sendActivityGoalSettings(TransactionBuilder b) {
         GenderSetting gender = user.getGender() == ActivityUser.GENDER_FEMALE ? GenderSetting.FEMALE : GenderSetting.MALE;
 
         // Maybe we need to set the full birth date?
-        BodyPropertiesSetting bodyPropertiesSetting = new BodyPropertiesSetting(gender, (short)user.getYearOfBirth(), (short)0, (short)1, (short)user.getWeightKg(), (short)user.getHeightCm());
+        BodyPropertiesSetting bodyPropertiesSetting = new BodyPropertiesSetting(gender, (short)user.getYearOfBirth(), (short)0, (short)1, (short)user.getHeightCm(), (short)user.getWeightKg());
         GoalStepsSetting stepsSetting = new GoalStepsSetting(stepsNotification, user.getStepsGoal());
 
         b.write(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2FWInstallHandler.java
Patch:
@@ -117,6 +117,6 @@ protected AbstractMiBandFWHelper createHelper(Uri uri, Context context) throws I
 
     @Override
     protected boolean isSupportedDeviceType(GBDevice device) {
-        return device.getType() == DeviceType.MIBAND2;
+        return device.getType() == DeviceType.MIBAND2 || device.getType() == DeviceType.MIBAND2_HRX;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -37,6 +37,7 @@ public enum DeviceType {
     PEBBLE(1, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_pebble),
     MIBAND(10, R.drawable.ic_device_miband, R.drawable.ic_device_miband_disabled, R.string.devicetype_miband),
     MIBAND2(11, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband2),
+    MIBAND2_HRX(1001, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband2_hrx),
     AMAZFITBIP(12, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bip),
     AMAZFITCOR(13, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor),
     MIBAND3(14, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband3),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/Mi2FirmwareInfo.java
Patch:
@@ -93,7 +93,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
     }
 
     public boolean isGenerallyCompatibleWith(GBDevice device) {
-        return isHeaderValid() && device.getType() == DeviceType.MIBAND2;
+        return isHeaderValid() && (device.getType() == DeviceType.MIBAND2 || device.getType() == DeviceType.MIBAND2_HRX);
     }
 
     protected Map<Integer, String> getCrcMap() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsConfigService.java
Patch:
@@ -169,7 +169,7 @@ private void handle2021ConfigResponse(final byte[] payload) {
         if (configGroup.getVersion() != version) {
             // Special case for HEALTH, where we actually support version 1 as well
             // TODO: Support multiple versions in a cleaner way...
-            if (!(configGroup == ConfigGroup.HEALTH && configGroup.getVersion() == 1)) {
+            if (!(configGroup == ConfigGroup.HEALTH && version == 1)) {
                 LOG.warn("Unexpected version {} for {}", String.format("0x%02x", version), configGroup);
                 return;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgtr3pro/AmazfitGTR3ProSupport.java
Patch:
@@ -25,14 +25,14 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr3.AmazfitGTR3FWHelper;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr3pro.AmazfitGTR3ProFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.Huami2021Support;
 
 public class AmazfitGTR3ProSupport extends Huami2021Support {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitGTR3ProSupport.class);
 
     @Override
     public HuamiFWHelper createFWHelper(Uri uri, Context context) throws IOException {
-        return new AmazfitGTR3FWHelper(uri, context);
+        return new AmazfitGTR3ProFWHelper(uri, context);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -1001,7 +1001,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                     i--; // back up one (because we deleted it)
                 }
             }
-            String packetStr = new String(chars);
+            String packetStr = new String(chars, StandardCharsets.ISO_8859_1);
             LOG.debug("RX: " + packetStr);
             // logging
             addReceiveHistory(packetStr);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BondingUtil.java
Patch:
@@ -397,6 +397,7 @@ private static CompanionDeviceManager.Callback getCompanionDeviceManagerCallback
         return new CompanionDeviceManager.Callback() {
             @Override
             public void onFailure(CharSequence error) {
+                LOG.error("Bonding failed immediately: {}", error);
                 toast(bondingInterface.getContext(), bondingInterface.getContext().getString(R.string.discovery_bonding_failed_immediately), Toast.LENGTH_SHORT, GB.ERROR);
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -478,7 +478,6 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
                                 SharedPreferences.Editor editor = GBApplication.getPrefs().getPreferences().edit();
                                 editor.putString("opentracks_packagename", fitnessAppEditText.getText().toString());
                                 editor.apply();
-                                editor.commit();
                             })
                             .setNegativeButton(R.string.Cancel, (dialog, which) -> {})
                             .show();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -693,7 +693,6 @@ public boolean onLongClick(View view) {
                             SharedPreferences.Editor editor = GBApplication.getDeviceSpecificSharedPrefs(device.getAddress()).edit();
                             editor.putFloat((String.format("fm_preset%s", index)), frequency);
                             editor.apply();
-                            editor.commit();
                             return true;
                         }
                     });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/binary_sensor/coordinator/BinarySensorCoordinator.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.devices.um25.Coordinator;
+package nodomain.freeyourgadget.gadgetbridge.devices.binary_sensor.coordinator;
 
 import android.app.Activity;
 import android.bluetooth.le.ScanFilter;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitband5/AmazfitBand5Coordinator.java
Patch:
@@ -53,7 +53,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             if (name != null && name.equalsIgnoreCase(HuamiConst.AMAZFIT_BAND5_NAME)) {
                 return DeviceType.AMAZFITBAND5;
             }
-        } catch (Exception ex) {
+        } catch (SecurityException ex) {
             LOG.error("unable to check device support", ex);
         }
         return DeviceType.UNKNOWN;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitband7/AmazfitBand7Coordinator.java
Patch:
@@ -46,7 +46,7 @@ public DeviceType getSupportedType(final GBDeviceCandidate candidate) {
             if (name != null && name.startsWith(HuamiConst.AMAZFIT_BAND7_NAME)) {
                 return DeviceType.AMAZFITBAND7;
             }
-        } catch (final Exception e) {
+        } catch (SecurityException e) {
             LOG.error("unable to check device support", e);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/smaq2oss/SMAQ2OSSSupport.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.smaq2oss;
+package nodomain.freeyourgadget.gadgetbridge.devices.smaq2oss;
 
 
 import android.bluetooth.BluetoothGatt;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -320,7 +320,7 @@ protected void handleGBDeviceEvent(GBDeviceEventVersionInfo infoEvent) {
 
     protected void handleGBDeviceEvent(GBDeviceEventLEDColor colorEvent) {
         Context context = getContext();
-        LOG.info("Got event for LED Color: #" + Integer.toHexString(colorEvent.color).toUpperCase());
+        LOG.info("Got event for LED Color: #" + Integer.toHexString(colorEvent.color).toUpperCase(Locale.ROOT));
         if (gbDevice == null) {
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AndroidUtils.java
Patch:
@@ -17,6 +17,7 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.util;
 
+import android.annotation.SuppressLint;
 import android.content.ActivityNotFoundException;
 import android.content.BroadcastReceiver;
 import android.content.ContentUris;
@@ -124,6 +125,7 @@ public static String getTextColorHex(Context context) {
                 dynamicColorContext = DynamicColors.wrapContextIfAvailable(context, R.style.GadgetbridgeThemeDynamicLight);
             }
             int[] attrsToResolve = {R.attr.colorOnSurface};
+            @SuppressLint("ResourceType")
             TypedArray ta = dynamicColorContext.obtainStyledAttributes(attrsToResolve);
             color = ta.getColor(0, 0);
             ta.recycle();
@@ -149,6 +151,7 @@ public static String getBackgroundColorHex(Context context) {
                 dynamicColorContext = DynamicColors.wrapContextIfAvailable(context, R.style.GadgetbridgeThemeDynamicLight);
             }
             int[] attrsToResolve = {R.attr.colorSurface};
+            @SuppressLint("ResourceType")
             TypedArray ta = dynamicColorContext.obtainStyledAttributes(attrsToResolve);
             color = ta.getColor(0, 0);
             ta.recycle();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -143,7 +143,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.sony.headphones.coordinators.SonyWH1000XM4Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.sonyswr12.SonySWR12DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.tlw64.TLW64Coordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.um25.Coordinator.BinarySensorCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.binary_sensor.coordinator.BinarySensorCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.um25.Coordinator.UM25Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.vesc.VescCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.vibratissimo.VibratissimoCoordinator;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/dialogs/MaterialDialogFragment.java
Patch:
@@ -18,7 +18,6 @@
 
 import android.app.Dialog;
 import android.os.Bundle;
-import android.view.LayoutInflater;
 import android.view.View;
 
 import androidx.annotation.NonNull;
@@ -33,7 +32,7 @@ public class MaterialDialogFragment extends DialogFragment {
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(requireActivity());
-        theDialogView = onCreateView(LayoutInflater.from(requireContext()), null, savedInstanceState);
+        theDialogView = onCreateView(getLayoutInflater(), null, savedInstanceState);
         builder.setView(theDialogView);
 
         return builder.create();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/TimeChangeReceiver.java
Patch:
@@ -92,8 +92,7 @@ public static void scheduleNextDstChange(final Context context) {
         final long nextDstMillis = transition.getInstant().toEpochMilli();
         final long delayMillis = nextDstMillis - now.toEpochMilli() + 5000L;
 
-        final Intent i = new Intent(context, TimeChangeReceiver.class);
-        i.setAction(ACTION_DST_CHANGED);
+        final Intent i = new Intent(ACTION_DST_CHANGED);
         final PendingIntent pi = PendingIntentUtils.getBroadcast(context, 0, i, 0, false);
 
         final AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -68,6 +68,7 @@
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.BluetoothStateChangeReceiver;
+import nodomain.freeyourgadget.gadgetbridge.externalevents.TimeChangeReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.opentracks.OpenTracksContentObserver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceService;
@@ -224,6 +225,7 @@ public void onCreate() {
         loadAppsPebbleBlackList();
 
         PeriodicExporter.enablePeriodicExport(context);
+        TimeChangeReceiver.scheduleNextDstChange(context);
 
         if (isRunningMarshmallowOrLater()) {
             notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -1247,6 +1247,7 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Featur
                 IntentFilter filter = new IntentFilter();
                 filter.addAction("android.intent.action.TIME_SET");
                 filter.addAction("android.intent.action.TIMEZONE_CHANGED");
+                filter.addAction(TimeChangeReceiver.ACTION_DST_CHANGED);
                 registerReceiver(mTimeChangeReceiver, filter);
             }
             if (mBlueToothPairingRequestReceiver == null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/WeatherSpec.java
Patch:
@@ -105,7 +105,7 @@ public Location getLocation() {
         }
         final Location location = new Location("weatherSpec");
         location.setLatitude(latitude);
-        location.setLatitude(longitude);
+        location.setLongitude(longitude);
         return location;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -1061,7 +1061,7 @@ private void onReceiveHeartRateMeasurement(int timeStamp, int heartrate) {
         logDebug(String.format("onReceiveHeartRateMeasurement: \nheartrate=%d", heartrate));
 
         if (heartrate > 0) {
-            sample.setHeartRate((int)heartrate);
+            sample.setHeartRate(heartrate);
             sample.setTimestamp(timeStamp);
             // since it's a local timestamp, it should NOT be treated as Activity because it will spoil activity charts
             sample.setRawKind(ActivityKind.TYPE_UNKNOWN);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/sony/headphones/coordinators/SonyWH1000XM4Coordinator.java
Patch:
@@ -25,6 +25,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.sony.headphones.SonyHeadphonesCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.sony.headphones.SonyHeadphonesSupport;
 
 public class SonyWH1000XM4Coordinator extends SonyHeadphonesCoordinator {
     @NonNull

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -1042,7 +1042,7 @@ private String getWeatherInfo() {
         info += "Timestamp: " + weatherSpec.timestamp + "\n";
         info += "Current Temp: " + weatherSpec.currentTemp + " K\n";
         info += "Max Temp: " + weatherSpec.todayMaxTemp + " K\n";
-        info += "Min Temp: " + weatherSpec.location + "\n";
+        info += "Min Temp: " + weatherSpec.todayMinTemp + " K\n";
         info += "Condition: " + weatherSpec.currentCondition + "\n";
         info += "Condition Code: " + weatherSpec.currentConditionCode + "\n";
         info += "Humidity: " + weatherSpec.currentHumidity + "\n";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -75,7 +75,7 @@ public enum DeviceType {
     AMAZFITGTS4MINI(10047, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts4_mini),
     AMAZFITTREX2(10048, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_trex_2),
     AMAZFITGTR3PRO(10049, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr3_pro),
-    AMAZFITBIP3PRO(10051, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_bip3_pro),
+    AMAZFITBIP3PRO(10051, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bip3_pro),
     AMAZFITCHEETAHPRO(10050, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_cheetah_pro),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Support.java
Patch:
@@ -81,6 +81,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.VibrationProfile;
+import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceApp;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityUser;
@@ -94,7 +95,6 @@
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.Reminder;
 import nodomain.freeyourgadget.gadgetbridge.model.WeatherSpec;
-import nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
@@ -335,6 +335,7 @@ public void onSetHeartRateMeasurementInterval(final int seconds) {
     @Override
     protected Huami2021Support sendCalendarEvents(final TransactionBuilder builder) {
         // We have native calendar sync
+        CalendarReceiver.forceSync();
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsLoyaltyCardService.java
Patch:
@@ -236,7 +236,10 @@ private byte findNearestColorCode(final int color) {
     private static final Map<BarcodeFormat, Byte> BARCODE_FORMAT_CODES = new HashMap<BarcodeFormat, Byte>() {{
         put(BarcodeFormat.CODE_128, (byte) 0x00);
         put(BarcodeFormat.CODE_39, (byte) 0x01);
+        put(BarcodeFormat.ITF, (byte) 0x02);
         put(BarcodeFormat.QR_CODE, (byte) 0x03);
+        put(BarcodeFormat.PDF_417, (byte) 0x04);
+        put(BarcodeFormat.DATA_MATRIX, (byte) 0x05);
         put(BarcodeFormat.UPC_A, (byte) 0x06);
         put(BarcodeFormat.EAN_13, (byte) 0x07);
         put(BarcodeFormat.EAN_8, (byte) 0x08);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsShortcutCardsService.java
Patch:
@@ -134,7 +134,7 @@ public void handlePayload(final byte[] payload) {
             case CMD_CAPABILITIES_RESPONSE:
                 version = payload[1];
                 getSupport().evaluateGBDeviceEvent(new GBDeviceEventUpdatePreferences(PREF_VERSION, version));
-                if (version != 3) {
+                if (version != 3 && version != 4) {
                     LOG.warn("Unsupported shortcut cards service version {}", version);
                     return;
                 }
@@ -268,6 +268,7 @@ public void setShortcutCards(final List<String> cardsPrefValue) {
     }
 
     public static boolean isSupported(final Prefs devicePrefs) {
-        return devicePrefs.getInt(PREF_VERSION, 0) == 3;
+        final int version = devicePrefs.getInt(PREF_VERSION, 0);
+        return version == 3 || version == 4;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/BatteryInfoChartFragment.java
Patch:
@@ -125,7 +125,7 @@ private DefaultBatteryChartsData fill_dcd(List<? extends BatteryLevel> samples)
     private void init() {
         BACKGROUND_COLOR = GBApplication.getBackgroundColor(getContext());
         LEGEND_TEXT_COLOR = DESCRIPTION_COLOR = GBApplication.getTextColor(getContext());
-        CHART_TEXT_COLOR = ContextCompat.getColor(getContext(), R.color.secondarytext);
+        CHART_TEXT_COLOR = GBApplication.getSecondaryTextColor(getContext());
         BATTERY_LABEL = getString(R.string.battery_level);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractActivityChartFragment.java
Patch:
@@ -101,7 +101,7 @@ protected void init() {
         TypedValue runningColor = new TypedValue();
         BACKGROUND_COLOR = GBApplication.getBackgroundColor(getContext());
         LEGEND_TEXT_COLOR = DESCRIPTION_COLOR = GBApplication.getTextColor(getContext());
-        CHART_TEXT_COLOR = ContextCompat.getColor(getContext(), R.color.secondarytext);
+        CHART_TEXT_COLOR = GBApplication.getSecondaryTextColor(getContext());
         if (prefs.getBoolean("chart_heartrate_color", false)) {
             HEARTRATE_COLOR = ContextCompat.getColor(getContext(), R.color.chart_heartrate_alternative);
         }else{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/StressChartFragment.java
Patch:
@@ -84,7 +84,7 @@ public class StressChartFragment extends AbstractChartFragment<StressChartFragme
     protected void init() {
         BACKGROUND_COLOR = GBApplication.getBackgroundColor(requireContext());
         LEGEND_TEXT_COLOR = DESCRIPTION_COLOR = GBApplication.getTextColor(requireContext());
-        CHART_TEXT_COLOR = ContextCompat.getColor(requireContext(), R.color.secondarytext);
+        CHART_TEXT_COLOR = GBApplication.getSecondaryTextColor(requireContext());
 
         STRESS_AVERAGE_LABEL = requireContext().getString(R.string.charts_legend_stress_average);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -472,8 +472,7 @@ private ChangeLog createChangeLog() {
         String css = ChangeLog.DEFAULT_CSS;
         css += "body { "
                 + "color: " + AndroidUtils.getTextColorHex(getBaseContext()) + "; "
-                + "background-color: " + AndroidUtils.getBackgroundColorHex(getBaseContext()) + ";" +
-                "}";
+                + "}";
         return new ChangeLog(this, css);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/ChangeLog.java
Patch:
@@ -41,7 +41,7 @@ public AlertDialog getMaterialFullLogDialog() {
 
     protected AlertDialog getMaterialDialog(boolean full) {
         WebView wv = new WebView(mContext);
-        //wv.setBackgroundColor(0); // transparent
+        wv.setBackgroundColor(0); // transparent
         wv.loadDataWithBaseURL(null, getLog(full), "text/html", "UTF-8", null);
 
         MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(mContext);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/receivers/AutoConnectIntervalReceiver.java
Patch:
@@ -74,6 +74,7 @@ public void onReceive(Context context, Intent intent) {
 
             if(allDevicesInitialized){
                 LOG.info("will reset connection delay, all devices are initialized!");
+                mDelay = 4;
                 return;
             }
             if(scheduleAutoConnect){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -425,7 +425,7 @@ public void onInstallApp(Uri uri) {
                         .setKeepBond(true)
                         .setForeground(false)
                         .setUnsafeExperimentalButtonlessServiceInSecureDfuEnabled(false)
-                        .setMtu(517)
+                        .setMtu(23)
                         .setZip(uri);
 
                 controller = starter.start(getContext(), PineTimeDFUService.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casio/gwb5600/CasioGWB5600DeviceCoordinator.java
Patch:
@@ -49,8 +49,7 @@ public class CasioGWB5600DeviceCoordinator extends CasioDeviceCoordinator {
     public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         String name = candidate.getDevice().getName();
         if (name != null) {
-            if (name.equals("CASIO GW-B5600") ||
-                name.equals("CASIO GMW-B5000")) {
+            if (name.equals("CASIO GW-B5600")) {
                 return DeviceType.CASIOGWB5600;
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -93,7 +93,8 @@ public enum DeviceType {
     ROIDMI3(112, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
     CASIOGB6900(120, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_casiogb6900),
     CASIOGBX100(121, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_casiogbx100),
-    CASIOGWB5600(122, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_casiogbx100),
+    CASIOGWB5600(122, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_casiogwb5600),
+    CASIOGMWB5000(123, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_casiogmwb5000),
     MISCALE2(131, R.drawable.ic_device_miscale2, R.drawable.ic_device_miscale2_disabled, R.string.devicetype_miscale2),
     BFH16(140, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_bfh16),
     MAKIBESHR3(150, R.drawable.ic_device_default, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_hr3),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -296,6 +296,8 @@ private ServiceDeviceSupport createServiceDeviceSupport(GBDevice device){
                 return new ServiceDeviceSupport(new CasioGBX100DeviceSupport());
             case CASIOGWB5600:
                 return new ServiceDeviceSupport(new CasioGWB5600DeviceSupport());
+            case CASIOGMWB5000:
+                return new ServiceDeviceSupport(new CasioGWB5600DeviceSupport());
             case MISCALE2:
                 return new ServiceDeviceSupport(new MiScale2DeviceSupport());
             case BFH16:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -60,6 +60,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.casio.gb6900.CasioGB6900DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.casio.gbx100.CasioGBX100DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.casio.gwb5600.CasioGWB5600DeviceCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.casio.gwb5600.CasioGMWB5000DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.domyos.DomyosT540Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBuds2DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.flipper.zero.FlipperZeroCoordinator;
@@ -338,6 +339,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new CasioGB6900DeviceCoordinator());
         result.add(new CasioGBX100DeviceCoordinator());
         result.add(new CasioGWB5600DeviceCoordinator());
+        result.add(new CasioGMWB5000DeviceCoordinator());
         result.add(new BFH16DeviceCoordinator());
         result.add(new MijiaLywsd02Coordinator());
         result.add(new ITagCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/v3/SonyProtocolImplV3.java
Patch:
@@ -359,9 +359,9 @@ public List<? extends GBDeviceEvent> handleSpeakToChatEnabled(final byte[] paylo
             return Collections.emptyList();
         }
 
-        final Boolean disabled = booleanFromByte(payload[3]);
+        final Boolean disabled = booleanFromByte(payload[2]);
         if (disabled == null) {
-            LOG.warn("Unknown speak to chat enabled code {}", String.format("%02x", payload[3]));
+            LOG.warn("Unknown speak to chat enabled code {}", String.format("%02x", payload[2]));
             return Collections.emptyList();
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -71,7 +71,9 @@ public class GBDeviceService implements DeviceService {
             EXTRA_MUSIC_ALBUM,
             EXTRA_MUSIC_TRACK,
             EXTRA_CALENDAREVENT_TITLE,
-            EXTRA_CALENDAREVENT_DESCRIPTION
+            EXTRA_CALENDAREVENT_DESCRIPTION,
+            EXTRA_CALENDAREVENT_LOCATION,
+            EXTRA_CALENDAREVENT_CALNAME,
     };
     private static final Logger LOG = LoggerFactory.getLogger(GBDeviceService.class);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/fit/FitParser.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.fit;
 
 import android.util.SparseArray;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages.MessageReader;
 import nodomain.freeyourgadget.gadgetbridge.util.ArrayUtils;
 import org.slf4j.Logger;
@@ -184,15 +184,15 @@ private Object readRawFitNumber(MessageReader reader, int size) {
                 // this is strange?
                 byte[] bytes = new byte[4];
                 reader.readBytesTo(3, bytes, 0);
-                return BinaryUtils.readInt(bytes, 0);
+                return BLETypeConversions.toUint32(bytes, 0);
             }
             case 4:
                 return reader.readInt();
             case 7: {
                 // this is strange?
                 byte[] bytes = new byte[8];
                 reader.readBytesTo(7, bytes, 0);
-                return BinaryUtils.readLong(bytes, 0);
+                return BLETypeConversions.toUint64(bytes, 0);
             }
             case 8:
                 return reader.readLong();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/AuthNegotiationMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class AuthNegotiationMessage {
@@ -22,8 +22,8 @@ public AuthNegotiationMessage(int longTermKeyAvailability, int supportedEncrypti
         writer.writeInt(supportedEncryptionAlgorithms);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/BatteryStatusMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class BatteryStatusMessage {
@@ -16,8 +16,8 @@ public BatteryStatusMessage(int batteryPercentage) {
         writer.writeByte(255);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/ConfigurationMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 import java.util.Arrays;
@@ -21,8 +21,8 @@ public ConfigurationMessage(byte[] configurationPayload) {
         writer.writeBytes(configurationPayload);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/CreateFileRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class CreateFileRequestMessage {
@@ -21,8 +21,8 @@ public CreateFileRequestMessage(int fileSize, int dataType, int subType, int fil
         writer.writeString(path);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/CurrentTimeRequestResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class CurrentTimeRequestResponseMessage {
@@ -21,8 +21,8 @@ public CurrentTimeRequestResponseMessage(int status, int referenceID, int garmin
         writer.writeInt(0);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/DeviceInformationResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class DeviceInformationResponseMessage {
@@ -24,8 +24,8 @@ public DeviceInformationResponseMessage(int status, int protocolVersion, int pro
         writer.writeByte(protocolFlags);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/DirectoryFileFilterRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class DirectoryFileFilterRequestMessage {
@@ -19,8 +19,8 @@ public DirectoryFileFilterRequestMessage(int filterType) {
         writer.writeByte(filterType);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/DownloadRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class DownloadRequestMessage {
@@ -21,8 +21,8 @@ public DownloadRequestMessage(int fileIndex, int dataOffset, int request, int cr
         writer.writeInt(dataSize);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/FileTransferDataMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class FileTransferDataMessage {
@@ -27,8 +27,8 @@ public FileTransferDataMessage(int flags, int crc, int dataOffset, byte[] data)
         writer.writeBytes(data);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/FileTransferDataResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class FileTransferDataResponseMessage {
@@ -32,8 +32,8 @@ public FileTransferDataResponseMessage(int status, int response, int nextDataOff
         writer.writeInt(nextDataOffset);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/FitDataMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.fit.FitMessage;
 
@@ -17,8 +17,8 @@ public FitDataMessage(FitMessage... messages) {
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/FitDefinitionMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.fit.FitMessageDefinition;
 
@@ -17,8 +17,8 @@ public FitDefinitionMessage(FitMessageDefinition... definitions) {
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/GenericResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class GenericResponseMessage {
@@ -15,8 +15,8 @@ public GenericResponseMessage(int originalRequestID, int status) {
         writer.writeByte(status);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/GncsControlPointResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class GncsControlPointResponseMessage {
@@ -27,8 +27,8 @@ public GncsControlPointResponseMessage(int status, int response, int ancsError)
         writer.writeByte(ancsError);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/GncsDataSourceMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class GncsDataSourceMessage {
@@ -18,8 +18,8 @@ public GncsDataSourceMessage(byte[] ancsMessage, int dataOffset, int size) {
         writer.writeBytes(ancsMessage, dataOffset, size);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/GncsNotificationSourceMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ancs.AncsCategory;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ancs.AncsEvent;
@@ -28,8 +28,8 @@ public GncsNotificationSourceMessage(AncsEvent event, Set<AncsEventFlag> eventFl
 
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/MusicControlCapabilitiesResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.GarminMusicControlCommand;
 
@@ -21,8 +21,8 @@ public MusicControlCapabilitiesResponseMessage(int status, GarminMusicControlCom
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/MusicControlEntityUpdateMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ams.AmsEntityAttribute;
 
@@ -17,8 +17,8 @@ public MusicControlEntityUpdateMessage(AmsEntityAttribute... attributes) {
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/NotificationServiceSubscriptionResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class NotificationServiceSubscriptionResponseMessage {
@@ -18,8 +18,8 @@ public NotificationServiceSubscriptionResponseMessage(int status, int response,
         writer.writeByte(featureFlags);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/ProtobufRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class ProtobufRequestMessage {
@@ -29,8 +29,8 @@ public ProtobufRequestMessage(int requestId, int dataOffset, int totalProtobufLe
         writer.writeBytes(messageBytes);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/SetDeviceSettingsMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.GarminDeviceSetting;
 
@@ -37,8 +37,8 @@ public SetDeviceSettingsMessage(Map<GarminDeviceSetting, Object> settings) {
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/SupportedFileTypesRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class SupportedFileTypesRequestMessage {
@@ -13,8 +13,8 @@ public SupportedFileTypesRequestMessage() {
         writer.writeShort(VivomoveConstants.MESSAGE_SUPPORTED_FILE_TYPES_REQUEST);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/SyncRequestMessage.java
Patch:
@@ -1,6 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.GarminMessageType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
@@ -25,7 +25,7 @@ public static SyncRequestMessage parsePacket(byte[] packet) {
         final int option = reader.readByte();
         final int bitMaskSize = reader.readByte();
         final byte[] longBits = reader.readBytesTo(bitMaskSize, new byte[8], 0);
-        long bitMask = BinaryUtils.readLong(longBits, 0);
+        long bitMask = BLETypeConversions.toUint64(longBits, 0);
 
         final Set<GarminMessageType> fileTypes = new HashSet<>(GarminMessageType.values().length);
         for (GarminMessageType messageType : GarminMessageType.values()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/SystemEventMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.GarminSystemEventType;
 
@@ -22,8 +22,8 @@ public SystemEventMessage(GarminSystemEventType eventType, Object value) {
         }
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/UploadRequestMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class UploadRequestMessage {
@@ -17,8 +17,8 @@ public UploadRequestMessage(int fileIndex, int dataOffset, int maxSize, int crcS
         writer.writeShort(crcSeed);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vivomovehr/messages/WeatherRequestResponseMessage.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.messages;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveConstants;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.BinaryUtils;
+import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vivomovehr.ChecksumCalculator;
 
 public class WeatherRequestResponseMessage {
@@ -18,8 +18,8 @@ public WeatherRequestResponseMessage(int status, int requestStatus, int totalDat
         writer.writeShort(timeout);
         writer.writeShort(0); // CRC will be filled below
         final byte[] packet = writer.getBytes();
-        BinaryUtils.writeShort(packet, 0, packet.length);
-        BinaryUtils.writeShort(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
+        BLETypeConversions.writeUint16(packet, 0, packet.length);
+        BLETypeConversions.writeUint16(packet, packet.length - 2, ChecksumCalculator.computeCrc(packet, 0, packet.length - 2));
         this.packet = packet;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/vivomovehr/VivomoveHrCoordinator.java
Patch:
@@ -63,7 +63,7 @@ public boolean supportsScreenshots() {
     }
 
     @Override
-    public int getAlarmSlotCount() {
+    public int getAlarmSlotCount(GBDevice device) {
         return 0;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationSpec.java
Patch:
@@ -24,6 +24,7 @@ public class NotificationSpec {
     public int flags;
     private static final AtomicInteger c = new AtomicInteger((int) (System.currentTimeMillis()/1000));
     private int id;
+    public long when;
     public String sender;
     public String phoneNumber;
     public String title;
@@ -53,14 +54,15 @@ public class NotificationSpec {
     public int dndSuppressed;
 
     public NotificationSpec() {
-        this.id = c.incrementAndGet();
+        this(-1);
     }
 
     public NotificationSpec(int id) {
         if (id != -1)
             this.id = id;
         else
             this.id = c.incrementAndGet();
+        this.when = System.currentTimeMillis();
     }
 
     public int getId() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -106,6 +106,7 @@ public enum DeviceType {
     FITPRO(230, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_fitpro),
     ITAG(250, R.drawable.ic_device_itag, R.drawable.ic_device_itag_disabled, R.string.devicetype_itag),
     NUTMINI(251, R.drawable.ic_device_itag, R.drawable.ic_device_itag_disabled, R.string.devicetype_nut_mini),
+    VIVOMOVE_HR(260, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_vivomove_hr),
     VIBRATISSIMO(300, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     SONY_SWR12(310, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_sonyswr12),
     LIVEVIEW(320, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.Context;
 import android.widget.Toast;
 
+import nodomain.freeyourgadget.gadgetbridge.devices.vivomovehr.VivomoveHrCoordinator;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -373,6 +374,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new SuperCarsCoordinator());
         result.add(new AsteroidOSDeviceCoordinator());
         result.add(new SoFlowCoordinator());
+        result.add(new VivomoveHrCoordinator());
 
         return result;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -395,6 +395,7 @@ private void handleGBDeviceEvent(GBDeviceEventScreenshot screenshot) {
             intent.setAction(android.content.Intent.ACTION_VIEW);
             Uri screenshotURI = FileProvider.getUriForFile(context, context.getApplicationContext().getPackageName() + ".screenshot_provider", new File(fullpath));
             intent.setDataAndType(screenshotURI, "image/*");
+            intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
 
             PendingIntent pIntent = PendingIntentUtils.getActivity(context, 0, intent, 0, false);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/AbstractFetchOperation.java
Patch:
@@ -197,7 +197,7 @@ protected boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattChara
                         if (expectedDataLength == 0 && isHuami2021) {
                             // Nothing to receive, if we try to fetch data it will fail
                             sendAck2021(true);
-                        } else {
+                        } else if (expectedDataLength != 0) {
                             TransactionBuilder newBuilder = createTransactionBuilder(taskName + " Step 2");
                             newBuilder.notify(characteristicActivityData, true);
                             newBuilder.write(characteristicFetch, new byte[]{HuamiService.COMMAND_FETCH_DATA});

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -1557,7 +1557,7 @@ public void onSetNavigationInfo(NavigationInfoSpec navigationInfoSpec) {
                 o.put("instr", navigationInfoSpec.instruction);
             o.put("distance", navigationInfoSpec.distanceToTurn);
             String[] navActions = {
-                    "","continue", "left", "left_sharp", "left_slight", "right", "right_slight",
+                    "","continue", "left", "left_slight", "left_sharp",  "right", "right_slight",
                     "right_sharp", "keep_left", "keep_right", "uturn_left", "uturn_right",
                     "offroute", "roundabout_right", "roundabout_left", "roundabout_straight", "roundabout_uturn", "finish"};
             if (navigationInfoSpec.nextAction>0 && navigationInfoSpec.nextAction<navActions.length)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -317,7 +317,7 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
         builder.notify(rxCharacteristic, true);
 
         Prefs devicePrefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()));
-        allowHighMTU = devicePrefs.getBoolean(PREF_ALLOW_HIGH_MTU, false);
+        allowHighMTU = devicePrefs.getBoolean(PREF_ALLOW_HIGH_MTU, true);
 
         uartTx(builder, " \u0003"); // clear active line
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -4142,7 +4142,7 @@ public int getMTU() {
 
     protected void setMtu(final int mtu) {
         final Prefs prefs = getDevicePrefs();
-        if (!prefs.getBoolean(PREF_ALLOW_HIGH_MTU, false)) {
+        if (!prefs.getBoolean(PREF_ALLOW_HIGH_MTU, true)) {
             LOG.warn("High MTU is not allowed, ignoring");
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btbr/BtBRQueue.java
Patch:
@@ -232,7 +232,7 @@ public void add(Transaction transaction) {
     protected void setDeviceConnectionState(GBDevice.State newState) {
         LOG.debug("New device connection state: " + newState);
         mGbDevice.setState(newState);
-        mGbDevice.sendDeviceUpdateIntent(mContext, GBDevice.DeviceUpdateSubject.DEVICE_STATE);
+        mGbDevice.sendDeviceUpdateIntent(mContext, GBDevice.DeviceUpdateSubject.CONNECTION_STATE);
     }
 
     public void dispose() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchStressAutoOperation.java
Patch:
@@ -57,6 +57,7 @@ protected boolean handleActivityData(final GregorianCalendar timestamp, final by
 
         for (byte b : bytes) {
             if (b == -1) {
+                timestamp.add(Calendar.MINUTE, 1);
                 continue;
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/TransactionBuilder.java
Patch:
@@ -67,9 +67,9 @@ public TransactionBuilder requestMtu(int mtu){
         );
     }
 
-    public TransactionBuilder requestConnectionPriority(int mtu){
+    public TransactionBuilder requestConnectionPriority(int priority){
         return add(
-                new RequestConnectionPriorityAction(mtu)
+                new RequestConnectionPriorityAction(priority)
         );
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/RequestConnectionPriorityAction.java
Patch:
@@ -29,7 +29,6 @@ public RequestConnectionPriorityAction(int priority) {
         this.priority = priority;
     }
 
-
     @Override
     public boolean expectsResult() {
         return true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AppManagerFragmentCache.java
Patch:
@@ -24,7 +24,9 @@ public class AppManagerFragmentCache extends AbstractAppManagerFragment {
     @Override
     public void refreshList() {
         appList.clear();
-        appList.addAll(getCachedApps(null));
+        final List<GBDeviceApp> cachedApps = getCachedApps(null);
+        sortAppList(cachedApps);
+        appList.addAll(cachedApps);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021FirmwareInfo.java
Patch:
@@ -185,7 +185,7 @@ private byte[] handleZabPackage(final ZipFile zipFile) {
                 for (int j = 0; j < platforms.length(); j++) {
                     final JSONObject platform = platforms.getJSONObject(j);
 
-                    if (!deviceSources().contains(platform.getInt("deviceSource"))) {
+                    if (deviceSources().contains(platform.getInt("deviceSource"))) {
                         // It's compatible with the device, fetch device.zip
                         final String name = zpkEntry.getString("name");
                         final byte[] zpkBytes = zipFile.getFileFromZip(name);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -294,7 +294,8 @@ public void onSetNavigationInfo(NavigationInfoSpec navigationInfoSpec) {
         Intent intent = createIntent().setAction(ACTION_SETNAVIGATIONINFO)
                 .putExtra(EXTRA_NAVIGATION_INSTRUCTION, navigationInfoSpec.instruction)
                 .putExtra(EXTRA_NAVIGATION_NEXT_ACTION, navigationInfoSpec.nextAction)
-                .putExtra(EXTRA_NAVIGATION_DISTANCE_TO_TURN, navigationInfoSpec.distanceToTurn);
+                .putExtra(EXTRA_NAVIGATION_DISTANCE_TO_TURN, navigationInfoSpec.distanceToTurn)
+                .putExtra(EXTRA_NAVIGATION_ETA, navigationInfoSpec.ETA);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -114,6 +114,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NAVIGATION_INSTRUCTION = "navigation_instruction";
     String EXTRA_NAVIGATION_DISTANCE_TO_TURN = "navigation_distance_to_turn";
     String EXTRA_NAVIGATION_NEXT_ACTION = "navigation_next_action";
+    String EXTRA_NAVIGATION_ETA = "navigation_eta";
     String EXTRA_APP_UUID = "app_uuid";
     String EXTRA_APP_START = "app_start";
     String EXTRA_APP_CONFIG = "app_config";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -186,6 +186,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NAVIGATION_DISTANCE_TO_TURN;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NAVIGATION_INSTRUCTION;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NAVIGATION_NEXT_ACTION;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NAVIGATION_ETA;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_ACTIONS;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_BODY;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_DNDSUPPRESSED;
@@ -890,6 +891,7 @@ private void handleAction(Intent intent, String action, GBDevice device) throws
                 navigationInfoSpec.instruction = intent.getStringExtra(EXTRA_NAVIGATION_INSTRUCTION);
                 navigationInfoSpec.nextAction = intent.getIntExtra(EXTRA_NAVIGATION_NEXT_ACTION,0);
                 navigationInfoSpec.distanceToTurn = intent.getIntExtra(EXTRA_NAVIGATION_DISTANCE_TO_TURN,0);
+                navigationInfoSpec.ETA = intent.getStringExtra(EXTRA_NAVIGATION_ETA);
                 deviceSupport.onSetNavigationInfo(navigationInfoSpec);
                 break;
             case ACTION_REQUEST_APPINFO:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -697,7 +697,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
                     new CborEncoder(baos).encode(new CborBuilder()
                             .startMap() // This map is not fixed-size, which is not great, but it might come in a library update
                             .put("Timestamp", System.currentTimeMillis() / 1000L)
-                            .put("Expires", 60 * 6) // 6h
+                            .put("Expires", 60 * 60 * 6) // 6h
                             .put("EventType", WeatherData.EventType.Location.value)
                             .put("Location", weatherSpec.location)
                             .put("Altitude", 0)
@@ -730,7 +730,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
                     new CborEncoder(baos).encode(new CborBuilder()
                             .startMap() // This map is not fixed-size, which is not great, but it might come in a library update
                             .put("Timestamp", System.currentTimeMillis() / 1000L)
-                            .put("Expires", 60 * 6) // 6h this should be the weather provider's interval, really
+                            .put("Expires", 60 * 60 * 6) // 6h this should be the weather provider's interval, really
                             .put("EventType", WeatherData.EventType.Humidity.value)
                             .put("Humidity", (int) weatherSpec.currentHumidity)
                             .end()
@@ -755,7 +755,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
                     new CborEncoder(baos).encode(new CborBuilder()
                             .startMap() // This map is not fixed-size, which is not great, but it might come in a library update
                             .put("Timestamp", System.currentTimeMillis() / 1000L)
-                            .put("Expires", 60 * 6) // 6h this should be the weather provider's interval, really
+                            .put("Expires", 60 * 60 * 6) // 6h this should be the weather provider's interval, really
                             .put("EventType", WeatherData.EventType.Temperature.value)
                             .put("Temperature", (int) ((weatherSpec.currentTemp - 273.15) * 100))
                             .put("DewPoint", (int) (-32768))

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -1336,6 +1336,8 @@ public Bitmap textToBitmap(String text) {
         float baseline = -paint.ascent(); // ascent() is negative
         int width = (int) (paint.measureText(text) + 0.5f); // round
         int height = (int) (baseline + paint.descent() + 0.5f);
+        if (width<1) width=1;
+        if (height<1) height=1;
         Bitmap image = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
         Canvas canvas = new Canvas(image);
         canvas.drawText(text, 0, baseline, paint);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/PeriodicExporter.java
Patch:
@@ -22,6 +22,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
+import android.os.Build;
 import android.os.SystemClock;
 
 import org.slf4j.Logger;
@@ -33,6 +34,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
+import nodomain.freeyourgadget.gadgetbridge.util.PendingIntentUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
 /**
@@ -56,7 +58,7 @@ public static void enablePeriodicExport(Context context) {
 
     public static void scheduleAlarm(Context context, Integer autoExportInterval, boolean autoExportEnabled) {
         Intent i = new Intent(context, PeriodicExporter.class);
-        PendingIntent pi = PendingIntent.getBroadcast(context, 0, i, 0);
+        PendingIntent pi = PendingIntentUtils.getBroadcast(context, 0, i, 0, false);
         AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
         am.cancel(pi);
         if (!autoExportEnabled) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AlarmReceiver.java
Patch:
@@ -22,6 +22,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.os.Build;
 
 import net.e175.klaus.solarpositioning.DeltaT;
 import net.e175.klaus.solarpositioning.SPA;
@@ -37,6 +38,7 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEventSpec;
 import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
+import nodomain.freeyourgadget.gadgetbridge.util.PendingIntentUtils;
 
 public class AlarmReceiver extends BroadcastReceiver {
     private static final Logger LOG = LoggerFactory.getLogger(AlarmReceiver.class);
@@ -45,7 +47,7 @@ public AlarmReceiver() {
         Context context = GBApplication.getContext();
         Intent intent = new Intent("DAILY_ALARM");
         intent.setPackage(BuildConfig.APPLICATION_ID);
-        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, 0);
+        PendingIntent pendingIntent = PendingIntentUtils.getBroadcast(context, 0, intent, 0, false);
         AlarmManager am = (AlarmManager) (context.getSystemService(Context.ALARM_SERVICE));
 
         if (am != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/receivers/AutoConnectIntervalReceiver.java
Patch:
@@ -36,6 +36,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
+import nodomain.freeyourgadget.gadgetbridge.util.PendingIntentUtils;
 
 public class AutoConnectIntervalReceiver extends BroadcastReceiver {
 
@@ -101,7 +102,7 @@ public void scheduleReconnect(int delay) {
         AlarmManager am = (AlarmManager) (GBApplication.getContext().getSystemService(Context.ALARM_SERVICE));
         Intent intent = new Intent("GB_RECONNECT");
         intent.setPackage(BuildConfig.APPLICATION_ID);
-        PendingIntent pendingIntent = PendingIntent.getBroadcast(GBApplication.getContext(), 0, intent, 0);
+        PendingIntent pendingIntent = PendingIntentUtils.getBroadcast(GBApplication.getContext(), 0, intent, 0, false);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             am.setAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, Calendar.getInstance().
                     getTimeInMillis() + delay * 1000, pendingIntent);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -927,7 +927,7 @@ void setupGPSUpdateTimer() {
         }
         Prefs devicePrefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress()));
         if(devicePrefs.getBoolean(PREF_DEVICE_GPS_UPDATE, false)) {
-            int intervalLength = devicePrefs.getInt(PREF_DEVICE_GPS_UPDATE_INTERVAL, 10000);
+            int intervalLength = devicePrefs.getInt(PREF_DEVICE_GPS_UPDATE_INTERVAL, 1000);
             LOG.info("Setup location listener with an update interval of " + intervalLength + " ms");
 
             try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/gps/GBLocationManager.java
Patch:
@@ -38,7 +38,7 @@
 
 /**
  * A static location manager, which keeps track of what providers are currently running. A notification is kept
- * while there is at least one provider runnin.
+ * while there is at least one provider running.
  */
 public class GBLocationManager {
     private static final Logger LOG = LoggerFactory.getLogger(GBLocationManager.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -967,7 +967,7 @@ public void onSetGpsLocation(final Location location) {
             }
             o.put("hdop", location.getAccuracy());
             o.put("externalSource", true);
-            LOG.debug("Sending gps valu: " + o.toString());
+            LOG.debug("Sending gps value: " + o.toString());
             uartTxJSON("gps", o);
         } catch (JSONException e) {
             GB.toast(getContext(), "uartTxJSONError: " + e.getLocalizedMessage(), Toast.LENGTH_LONG, GB.ERROR);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -236,7 +236,7 @@ public void onReceive(Context context, Intent intent) {
                           LOG.info("ACTION_DEVICE_CHANGED " + stateString);
                           addReceiveHistory("\n================================================\nACTION_DEVICE_CHANGED "+stateString+" "+(new SimpleDateFormat("yyyy-mm-dd hh:mm:ss", Locale.US)).format(Calendar.getInstance().getTime())+"\n================================================\n");
                         }
-                        if (gbDevice!=null && gbDevice.getState() == GBDevice.State.NOT_CONNECTED) {
+                        if (gbDevice!=null && (gbDevice.getState() == GBDevice.State.NOT_CONNECTED || gbDevice.getState() == GBDevice.State.WAITING_FOR_RECONNECT)) {
                             stopLocationUpdate();
                         }
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -46,7 +46,6 @@
 import nodomain.freeyourgadget.gadgetbridge.capabilities.password.PasswordCapabilityImpl;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiActivitySummaryParser;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
 import nodomain.freeyourgadget.gadgetbridge.entities.AlarmDao;
 import nodomain.freeyourgadget.gadgetbridge.entities.BatteryLevelDao;
@@ -387,7 +386,7 @@ public List<HeartRateCapability.MeasurementInterval> getHeartRateMeasurementInte
         );
     }
 
-    public boolean supportsNavigation(GBDevice gbDevice) {
+    public boolean supportsNavigation() {
         return false;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -18,12 +18,10 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.devices;
 
-import android.annotation.TargetApi;
 import android.app.Activity;
 import android.bluetooth.le.ScanFilter;
 import android.content.Context;
 import android.net.Uri;
-import android.os.Build;
 
 import java.io.File;
 import java.io.IOException;
@@ -481,5 +479,5 @@ public boolean usesBluetoothClassic(){
 
     List<HeartRateCapability.MeasurementInterval> getHeartRateMeasurementIntervals();
 
-    boolean supportsNavigation(GBDevice mGBDevice);
+    boolean supportsNavigation();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pinetime/PineTimeJFCoordinator.java
Patch:
@@ -149,7 +149,7 @@ public int getWorldClocksLabelLength() {
         return 8;
     }
 
-    public boolean supportsNavigation(GBDevice gbDevice) {
+    public boolean supportsNavigation() {
         return true;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -549,7 +549,6 @@ public String customStringFilter(String inputString) {
         return inputString;
     }
 
-<<<<<<< HEAD
 
     // Empty functions following, leaving optional implementation up to child classes
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/sony/headphones/coordinators/SonyWH1000XM5Coordinator.java
Patch:
@@ -48,7 +48,7 @@ public List<SonyHeadphonesCapabilities> getCapabilities() {
                 // TODO R.xml.devicesettings_connect_two_devices,
                 // TODO automatic ANC depending on state (might need phone?)
                 SonyHeadphonesCapabilities.BatterySingle,
-                // TODO SonyHeadphonesCapabilities.PowerOffFromPhone,
+                SonyHeadphonesCapabilities.PowerOffFromPhone,
                 SonyHeadphonesCapabilities.AmbientSoundControl,
                 SonyHeadphonesCapabilities.SpeakToChatEnabled,
                 SonyHeadphonesCapabilities.SpeakToChatConfig,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/v2/PayloadTypeV2.java
Patch:
@@ -25,6 +25,7 @@ public enum PayloadTypeV2 {
 
     BATTERY_LEVEL_REQUEST(MessageType.COMMAND_1, 0x22),
     BATTERY_LEVEL_REPLY(MessageType.COMMAND_1, 0x23),
+    POWER_SET(MessageType.COMMAND_1, 0x24),
     BATTERY_LEVEL_NOTIFY(MessageType.COMMAND_1, 0x25),
 
     AUTOMATIC_POWER_OFF_GET(MessageType.COMMAND_1, 0x26),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -45,6 +45,7 @@ public class DeviceSettingsPreferenceConst {
 
     public static final String PREF_LANGUAGE = "language";
     public static final String PREF_LANGUAGE_AUTO = "auto";
+    public static final String PREF_DEVICE_REGION = "device_region";
     public static final String PREF_DATEFORMAT = "dateformat";
     public static final String PREF_TIMEFORMAT = "timeformat";
     public static final String PREF_TIMEFORMAT_24H = "24h";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/v1/SonyProtocolImplV1.java
Patch:
@@ -770,7 +770,7 @@ public List<? extends GBDeviceEvent> handleSpeakToChatEnabled(final byte[] paylo
             return Collections.emptyList();
         }
 
-        if (payload[1] != 0x01) {
+        if (payload[2] != 0x01) {
             // TODO: Handle these, setting speak to chat sends a 0x02 back
             LOG.warn("Not speak to chat enabled, ignoring");
             return Collections.emptyList();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -905,7 +905,7 @@ void transmitTime(TransactionBuilder builder) {
       // set timezone
       cmd += "E.setTimeZone("+tz+");";
       // write timezone to settings
-      cmd += "(s=>{s&&(s.timezone="+tz+")&&require('Storage').write('setting.json',s);})(require('Storage').readJSON('setting.json',1))";
+      cmd += "(s=>s&&(s.timezone="+tz+",require('Storage').write('setting.json',s)))(require('Storage').readJSON('setting.json',1))";
       uartTx(builder, cmd+"\n");
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/ActivateDisplayOnLift.java
Patch:
@@ -19,5 +19,6 @@
 public enum ActivateDisplayOnLift {
     ON,
     OFF,
-    SCHEDULED
+    SCHEDULED,
+    SMART
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/Huami2021Coordinator.java
Patch:
@@ -193,7 +193,7 @@ public int[] getSupportedDeviceSpecificSettings(final GBDevice device) {
         }
         settings.add(R.xml.devicesettings_nightmode);
         settings.add(R.xml.devicesettings_sleep_mode);
-        settings.add(R.xml.devicesettings_liftwrist_display_sensitivity);
+        settings.add(R.xml.devicesettings_liftwrist_display_sensitivity_with_smart);
         settings.add(R.xml.devicesettings_password);
         settings.add(R.xml.devicesettings_always_on_display);
         settings.add(R.xml.devicesettings_screen_timeout);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -3311,6 +3311,9 @@ protected HuamiSupport setActivateDisplayOnLiftWrist(TransactionBuilder builder)
                 cmd[7] = (byte) calendar.get(Calendar.MINUTE);
 
                 writeToConfiguration(builder, cmd);
+                break;
+            default:
+                LOG.warn("Unknown display on lift mode {}", displayOnLift);
         }
         return this;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsConfigService.java
Patch:
@@ -1683,6 +1683,7 @@ public static byte encodeHeartRateAllDayMonitoring(final String val) {
         put((byte) 0x00, ActivateDisplayOnLift.OFF);
         put((byte) 0x01, ActivateDisplayOnLift.SCHEDULED);
         put((byte) 0x02, ActivateDisplayOnLift.ON);
+        put((byte) 0x03, ActivateDisplayOnLift.SMART);
     }};
 
     private static final Map<Byte, Enum<?>> LIFT_WRIST_SENSITIVITY_MAP = new HashMap<Byte, Enum<?>>() {{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/ImportExportSharedPreferences.java
Patch:
@@ -124,15 +124,15 @@ private static boolean importFromReader(SharedPreferences sharedPreferences, Rea
                                 for (int z = 0; z < text.split(",").length; z++) {
                                     apps_blacklist.add(text.split(",")[z].trim());
                                 }
-                                GBApplication.setAppsNotifBlackList(apps_blacklist);
+                                GBApplication.setAppsNotifBlackList(apps_blacklist, editor);
                                 break;
-                            case GBPrefs.PACKAGE_PEBBLEMSG_BLACKLIST:  //TODO: untested
+                            case GBPrefs.PACKAGE_PEBBLEMSG_BLACKLIST:
                                 Set<String> apps_pebble_blacklist = new HashSet<>();
                                 text = text.replace("[", "").replace("]", "");
                                 for (int z = 0; z < text.split(",").length; z++) {
                                     apps_pebble_blacklist.add(text.split(",")[z].trim());
                                 }
-                                GBApplication.setAppsPebbleBlackList(apps_pebble_blacklist);
+                                GBApplication.setAppsPebbleBlackList(apps_pebble_blacklist, editor);
                                 break;
                         }
                     } else if (!PREFERENCES.equals(name)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -115,6 +115,7 @@ public enum DeviceType {
     GALAXY_BUDS_LIVE(419, R.drawable.ic_device_galaxy_buds_live, R.drawable.ic_device_galaxy_buds_live_disabled, R.string.devicetype_galaxybuds_live),
     GALAXY_BUDS(420, R.drawable.ic_device_galaxy_buds, R.drawable.ic_device_galaxy_buds_disabled, R.string.devicetype_galaxybuds),
     GALAXY_BUDS2(421, R.drawable.ic_device_galaxy_buds_pro, R.drawable.ic_device_galaxy_buds_pro_disabled, R.string.devicetype_galaxybuds_2),
+    GALAXY_BUDS2_PRO(422, R.drawable.ic_device_galaxy_buds_pro, R.drawable.ic_device_galaxy_buds_pro_disabled, R.string.devicetype_galaxybuds_2_pro),
     SONY_WH_1000XM3(430, R.drawable.ic_device_sony_overhead, R.drawable.ic_device_sony_overhead_disabled, R.string.devicetype_sony_wh_1000xm3),
     SONY_WF_SP800N(431, R.drawable.ic_device_sony_wf_800n, R.drawable.ic_device_sony_wf_800n_disabled, R.string.devicetype_sony_wf_sp800n),
     SONY_WH_1000XM4(432, R.drawable.ic_device_sony_overhead, R.drawable.ic_device_sony_overhead_disabled, R.string.devicetype_sony_wh_1000xm4),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -333,6 +333,7 @@ private ServiceDeviceSupport createServiceDeviceSupport(GBDevice device){
                 return new ServiceDeviceSupport(new GalaxyBudsDeviceSupport());
             case GALAXY_BUDS_PRO:
             case GALAXY_BUDS2:
+            case GALAXY_BUDS2_PRO:
                 return new ServiceDeviceSupport(new GalaxyBudsDeviceSupport(), ServiceDeviceSupport.Flags.BUSY_CHECKING);
             case SONY_WH_1000XM3:
                 return new ServiceDeviceSupport(new SonyHeadphonesSupport());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -60,6 +60,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBudsDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBudsLiveDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBudsProDeviceCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.galaxy_buds.GalaxyBuds2ProDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.EXRIZUK8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.MakibesF68Coordinator;
@@ -350,6 +351,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new GalaxyBudsLiveDeviceCoordinator());
         result.add(new GalaxyBudsProDeviceCoordinator());
         result.add(new GalaxyBuds2DeviceCoordinator());
+        result.add(new GalaxyBuds2ProDeviceCoordinator());
         result.add(new VescCoordinator());
         result.add(new SonyLinkBudsSCoordinator());
         result.add(new SonyWH1000XM3Coordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/language/impl/GeorgianTransliterator.java
Patch:
@@ -27,7 +27,7 @@ public GeorgianTransliterator() {
             super(new HashMap<Character, String>() {{
                 put('ა', "a"); put('ბ', "b"); put('გ', "g"); 
                 put('დ', "d"); put('ე', "e"); put('ვ', "v"); 
-                put('ზ', "z"); put('თ', "t"); put('ი', "i"); 
+                put('ზ', "z"); put('თ', "T"); put('ი', "i");
                 put('კ', "k"); put('ლ', "l"); put('მ', "m"); 
                 put('ნ', "n"); put('ო', "o"); put('პ', "p"); 
                 put('ჟ', "J"); put('რ', "r"); put('ს', "s"); 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -146,7 +146,8 @@ public class BangleJSDeviceSupport extends AbstractBTLEDeviceSupport {
     private String receiveHistory = "";
     private boolean realtimeHRM = false;
     private boolean realtimeStep = false;
-    private int realtimeHRMInterval = 30*60;
+    /// How often should activity data be sent - in seconds
+    private int realtimeHRMInterval = 10;
     /// Last battery percentage reported (or -1) to help with smoothing reported battery levels
     private int lastBatteryPercent = -1;
 
@@ -450,6 +451,7 @@ else if (line.charAt(0)=='{') {
                 LOG.info("UART RX JSON parse failure: "+ e.getLocalizedMessage());
                 GB.toast(getContext(), "Malformed JSON from Bangle.js: " + e.getLocalizedMessage(), Toast.LENGTH_LONG, GB.ERROR);
             }
+
         } else {
             LOG.info("UART RX line started with "+(int)line.charAt(0)+" - ignoring");
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/asteroidos/AsteroidOSMediaCommand.java
Patch:
@@ -2,6 +2,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl;
+import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventNotificationControl;
 
 public class AsteroidOSMediaCommand {
     public static final byte COMMAND_PREVIOUS = 0x0;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -64,6 +64,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.Q8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.SG2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband5.AmazfitBand5Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband7.AmazfitBand7Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbips.AmazfitBipSLiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2MiniCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2eCoordinator;
@@ -290,6 +291,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitPopCoordinator());
         result.add(new AmazfitPopProCoordinator());
         result.add(new AmazfitBand5Coordinator());
+        result.add(new AmazfitBand7Coordinator());
         result.add(new AmazfitNeoCoordinator());
         result.add(new MiBand3Coordinator());
         result.add(new MiBand4Coordinator());

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/v2/SonyProtocolImplV2Test.java
Patch:
@@ -71,7 +71,8 @@ public void getNoiseCancellingOptimizerState() {
 
     @Test
     public void getAudioCodec() {
-        // TODO
+        final Request requestEnabled = protocol.getAudioCodec();
+        assertRequest(requestEnabled, "3e:0c:01:00:00:00:02:12:02:23:3c");
     }
 
     @Test

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/headphones/protocol/impl/v2/PayloadTypeV2.java
Patch:
@@ -21,7 +21,7 @@
 public enum PayloadTypeV2 {
     BATTERY_LEVEL_REQUEST(MessageType.COMMAND_1, 0x22),
     BATTERY_LEVEL_REPLY(MessageType.COMMAND_1, 0x23),
-    BATTERY_LEVEL_NOTIFY(MessageType.COMMAND_1, 0x24), // TODO confirm
+    BATTERY_LEVEL_NOTIFY(MessageType.COMMAND_1, 0x25),
 
     AUTOMATIC_POWER_OFF_GET(MessageType.COMMAND_1, 0x26),
     AUTOMATIC_POWER_OFF_RET(MessageType.COMMAND_1, 0x27),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/binary_sensor/protocol/parameter/SensorState.java
Patch:
@@ -21,7 +21,7 @@ public int getCount() {
     }
 
     public static SensorState decode(byte[] data){
-        int dataInt = (data[1] << 8) | data[0];
+        int dataInt = ((data[1] & 0xFF) << 8) | (data[0] & 0xFF);
         byte stateByte = (byte)((dataInt >> 11) & 0x01);
         int count = dataInt & 0b11111111111;
         return new SensorState(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/notification/PlayNotificationRequest.java
Patch:
@@ -61,11 +61,11 @@ private static byte[] createFile(NotificationType notificationType, int flags, S
         byte[] titleBytes = nullTerminatedTitle.getBytes(charsetUTF8);
         String nullTerminatedSender = StringUtils.terminateNull(sender);
         byte[] senderBytes = nullTerminatedSender.getBytes(charsetUTF8);
+        if (message.length() > 475) {
+            message = message.substring(0, 475);
+        }
         String nullTerminatedMessage = StringUtils.terminateNull(message);
         byte[] messageBytes = nullTerminatedMessage.getBytes(charsetUTF8);
-        if (messageBytes.length > 490) {
-            messageBytes = Arrays.copyOf(messageBytes, 475);
-        }
         short mainBufferLength = (short) (lengthBufferLength + uidLength + appBundleCRCLength + titleBytes.length + senderBytes.length + messageBytes.length);
 
         ByteBuffer mainBuffer = ByteBuffer.allocate(mainBufferLength);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/WriteAction.java
Patch:
@@ -63,7 +63,7 @@ protected boolean writeValue(BluetoothGatt gatt, BluetoothGattCharacteristic cha
         return false;
     }
 
-    protected final byte[] getValue() {
+    public final byte[] getValue() {
         return value;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Support.java
Patch:
@@ -745,7 +745,7 @@ protected void sendReminderToDevice(final TransactionBuilder builder, int positi
         buf.put(REMINDERS_CMD_UPDATE);
         buf.put((byte) (position & 0xFF));
 
-        final Calendar cal = Calendar.getInstance();
+        final Calendar cal = createCalendar();
         cal.setTime(reminder.getDate());
 
         int reminderFlags = REMINDER_FLAG_ENABLED | REMINDER_FLAG_TEXT;
@@ -916,7 +916,7 @@ public Huami2021Support setCurrentTimeWithService(TransactionBuilder builder) {
         // - Day of week starts at 0
         // Otherwise, the command gets rejected with an "Out of Range" error and init fails.
 
-        final Calendar timestamp = Calendar.getInstance();
+        final Calendar timestamp = createCalendar();
         final byte[] year = fromUint16(timestamp.get(Calendar.YEAR));
 
         final byte[] cmd = {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/GattCharacteristic.java
Patch:
@@ -47,7 +47,7 @@ public class GattCharacteristic {
     public static final UUID UUID_CHARACTERISTIC_EXACT_TIME_256 = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A0C")));
     public static final UUID UUID_CHARACTERISTIC_DST_OFFSET = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A0D")));
     public static final UUID UUID_CHARACTERISTIC_TIME_ZONE = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A0E")));
-    public static final UUID UUID_CHARACTERISTIC_LOCAL_TIME_INFORMATION = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A0F")));
+    public static final UUID UUID_CHARACTERISTIC_LOCAL_TIME = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A0F")));
     public static final UUID UUID_CHARACTERISTIC_TIME_WITH_DST = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A11")));
     public static final UUID UUID_CHARACTERISTIC_TIME_ACCURACY = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A12")));
     public static final UUID UUID_CHARACTERISTIC_TIME_SOURCE = UUID.fromString((String.format(AbstractBTLEDeviceSupport.BASE_UUID, "2A13")));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -1087,7 +1087,6 @@ private boolean deviceHasCalendarReceiverRegistered(GBDevice device){
         return false;
     }
 
-
     private void setReceiversEnableState(boolean enable, boolean initialized, FeatureSet features, List <GBDevice> devicesWithCalendar) {
         LOG.info("Setting broadcast receivers to: " + enable);
 
@@ -1106,6 +1105,8 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Featur
                         CalendarReceiver receiver = new CalendarReceiver(deviceWithCalendar);
                         registerReceiver(receiver, calendarIntentFilter);
                         mCalendarReceiver.add(receiver);
+                        // Add a receiver to allow us to quickly force as calendar sync (without having to provide data)
+                        registerReceiver(receiver, new IntentFilter("FORCE_CALENDAR_SYNC"));
                     }
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Weather.java
Patch:
@@ -59,7 +59,7 @@ public static Response handleHttpRequest(final String path, final Map<String, St
 
         if (weatherSpec == null) {
             LOG.error("No weather in weather instance");
-            return null;
+            return new Huami2021Weather.ErrorResponse(404, -2001, "Not found");
         }
 
         switch (path) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -736,7 +736,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
                             .put("Timestamp", System.currentTimeMillis() / 1000L)
                             .put("Expires", 60 * 6) // 6h this should be the weather provider's interval, really
                             .put("EventType", WeatherData.EventType.Temperature.value)
-                            .put("Temperature", (int) (weatherSpec.currentTemp * 100))
+                            .put("Temperature", (int) ((weatherSpec.currentTemp - 273.15) * 100))
                             .put("DewPoint", (int) (-32768))
                             .end()
                             .build()
@@ -763,7 +763,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
                             .put("Timestamp", System.currentTimeMillis() / 1000L)
                             .put("Expires", 60 * 60 * 24) // 24h, because the temperature is today's
                             .put("EventType", WeatherData.EventType.Temperature.value)
-                            .put("Temperature", (int) (((weatherSpec.todayMinTemp + weatherSpec.todayMaxTemp) / 2) * 100))
+                            .put("Temperature", (int) ((((weatherSpec.todayMinTemp - 273.15) + (weatherSpec.todayMaxTemp - 273.15)) / 2) * 100))
                             .put("DewPoint", (int) (-32768))
                             .end()
                             .build()

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitband7/AmazfitBand7Coordinator.java
Patch:
@@ -25,11 +25,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.Huami2021Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class AmazfitBand7Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitBand7Coordinator.class);
@@ -56,7 +56,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final AmazfitBand7FWInstallHandler handler = new AmazfitBand7FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitband7/AmazfitBand7FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class AmazfitBand7FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class AmazfitBand7FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     AmazfitBand7FWInstallHandler(final Uri uri, final Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr3/AmazfitGTR3Coordinator.java
Patch:
@@ -25,11 +25,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.Huami2021Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class AmazfitGTR3Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitGTR3Coordinator.class);
@@ -56,7 +56,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final AmazfitGTR3FWInstallHandler handler = new AmazfitGTR3FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr3/AmazfitGTR3FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class AmazfitGTR3FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class AmazfitGTR3FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     AmazfitGTR3FWInstallHandler(Uri uri, Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr4/AmazfitGTR4Coordinator.java
Patch:
@@ -30,6 +30,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class AmazfitGTR4Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitGTR4Coordinator.class);
@@ -56,7 +57,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final AmazfitGTR4FWInstallHandler handler = new AmazfitGTR4FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr4/AmazfitGTR4FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class AmazfitGTR4FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class AmazfitGTR4FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     AmazfitGTR4FWInstallHandler(final Uri uri, final Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts3/AmazfitGTS3Coordinator.java
Patch:
@@ -25,11 +25,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.Huami2021Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class AmazfitGTS3Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitGTS3Coordinator.class);
@@ -56,7 +56,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final AmazfitGTS3FWInstallHandler handler = new AmazfitGTS3FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts3/AmazfitGTS3FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class AmazfitGTS3FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class AmazfitGTS3FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     AmazfitGTS3FWInstallHandler(Uri uri, Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts4/AmazfitGTS4Coordinator.java
Patch:
@@ -25,11 +25,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.Huami2021Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class AmazfitGTS4Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitGTS4Coordinator.class);
@@ -56,7 +56,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final AmazfitGTS4FWInstallHandler handler = new AmazfitGTS4FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts4/AmazfitGTS4FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class AmazfitGTS4FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class AmazfitGTS4FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     AmazfitGTS4FWInstallHandler(final Uri uri, final Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband7/MiBand7Coordinator.java
Patch:
@@ -25,11 +25,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.Huami2021Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
 public class MiBand7Coordinator extends Huami2021Coordinator {
     private static final Logger LOG = LoggerFactory.getLogger(MiBand7Coordinator.class);
@@ -56,7 +56,7 @@ public DeviceType getDeviceType() {
     }
 
     @Override
-    public InstallHandler findInstallHandler(final Uri uri, final Context context) {
+    public AbstractHuami2021FWInstallHandler findInstallHandler(final Uri uri, final Context context) {
         final MiBand7FWInstallHandler handler = new MiBand7FWInstallHandler(uri, context);
         return handler.isValid() ? handler : null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband7/MiBand7FWInstallHandler.java
Patch:
@@ -23,11 +23,11 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuami2021FWInstallHandler;
 
-class MiBand7FWInstallHandler extends AbstractMiBandFWInstallHandler {
+class MiBand7FWInstallHandler extends AbstractHuami2021FWInstallHandler {
     MiBand7FWInstallHandler(Uri uri, Context context) {
         super(uri, context);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -1069,7 +1069,7 @@ public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
             } else if (preference instanceof PreferenceScreen) {
                 // Ignoring
             } else {
-                LOG.warn("Unknown preference class {}, ignoring", preference.getClass());
+                LOG.warn("Unknown preference class {} for {}, ignoring", preference.getClass(), key);
             }
 
             if (getPreferenceKeysWithSummary().contains(key)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/zeppos/services/ZeppOsConfigService.java
Patch:
@@ -1080,7 +1080,7 @@ private Map<String, Object> convertByteListToPrefs(final ConfigArg configArg, fi
                 if (includesConstraints) {
                     prefs.put(
                             getPrefPossibleValuesKey(configArg.getPrefKey()),
-                            decodeByteValues(possibleValues, decoder)
+                            String.join(",", decodeByteValues(possibleValues, decoder))
                     );
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/ZipFileException.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.util;
 
 public class ZipFileException extends Exception {
-  public ZipFileException(String message) {
-    super(String.format("Error while reading ZIP file: %s", message));
-  }
+    public ZipFileException(String message) {
+        super(String.format("Error while reading ZIP file: %s", message));
+    }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pinetime/PineTimeInstallHandler.java
Patch:
@@ -59,7 +59,6 @@ public PineTimeInstallHandler(Uri uri, Context context) {
 
             ZipFile dfuPackage = new ZipFile(uriHelper.openInputStream());
             String manifest = new String(dfuPackage.getFileFromZip("manifest.json"));
-            dfuPackage.close();
 
             if (!manifest.trim().isEmpty()) {
                 dfuPackageManifest = new Gson().fromJson(manifest.trim(), InfiniTimeDFUPackage.class);
@@ -111,7 +110,6 @@ public void validateInstallation(InstallActivity installActivity, GBDevice devic
         LOG.debug("Initialized PineTimeInstallHandler");
     }
 
-
     @Override
     public void onStartInstall(GBDevice device) {
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021ChunkedDecoder.java
Patch:
@@ -115,7 +115,7 @@ public void decode(final byte[] data) {
                 }
             }
             try {
-                huami2021Handler.handle2021Payload(currentType, buf);
+                huami2021Handler.handle2021Payload((short) currentType, buf);
             } catch (final Exception e) {
                 LOG.error("Failed to handle payload", e);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Handler.java
Patch:
@@ -17,5 +17,5 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.huami;
 
 public interface Huami2021Handler {
-    void handle2021Payload(int type, byte[] payload);
+    void handle2021Payload(short type, byte[] payload);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -4111,7 +4111,7 @@ protected Prefs getDevicePrefs() {
     }
 
     @Override
-    public void handle2021Payload(int type, byte[] payload) {
+    public void handle2021Payload(short type, byte[] payload) {
         if (type == Huami2021Service.CHUNKED2021_ENDPOINT_COMPAT) {
             LOG.info("got configuration data");
             type = 0;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/InitOperation2021.java
Patch:
@@ -132,7 +132,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
     }
 
     @Override
-    public void handle2021Payload(final int type, final byte[] payload) {
+    public void handle2021Payload(final short type, final byte[] payload) {
         if (type != Huami2021Service.CHUNKED2021_ENDPOINT_AUTH) {
             this.huamiSupport.handle2021Payload(type, payload);
             return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/Huami2021Coordinator.java
Patch:
@@ -247,6 +247,7 @@ public int[] getSupportedDeviceSpecificSettings(final GBDevice device) {
         //
         settings.add(R.xml.devicesettings_header_developer);
         settings.add(R.xml.devicesettings_keep_activity_data_on_device);
+        settings.add(R.xml.devicesettings_huami2021_fetch_operation_time_unit);
 
         return ArrayUtils.toPrimitive(settings.toArray(new Integer[0]));
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/AbstractFetchOperation.java
Patch:
@@ -34,7 +34,6 @@
 import java.util.Calendar;
 import java.util.GregorianCalendar;
 import java.util.UUID;
-import java.util.concurrent.TimeUnit;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.Logging;
@@ -162,11 +161,12 @@ protected boolean handleActivityFetchFinish(boolean success) {
 
     protected void startFetching(TransactionBuilder builder, byte fetchType, GregorianCalendar sinceWhen) {
         final String taskName = StringUtils.ensureNotNull(builder.getTaskName());
-        final boolean isHuami2021 = getSupport() instanceof Huami2021Support;
+        final HuamiSupport support = getSupport();
+        final boolean isHuami2021 = support instanceof Huami2021Support;
         byte[] fetchBytes = BLETypeConversions.join(new byte[]{
                         HuamiService.COMMAND_ACTIVITY_DATA_START_DATE,
                         fetchType},
-                getSupport().getTimeBytes(sinceWhen, isHuami2021 ? TimeUnit.SECONDS : TimeUnit.MINUTES));
+                support.getTimeBytes(sinceWhen, support.getFetchOperationsTimeUnit()));
         builder.add(new AbstractGattListenerWriteAction(getQueue(), characteristicFetch, fetchBytes) {
             @Override
             protected boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021ActivityDetailsParser.java
Patch:
@@ -123,6 +123,8 @@ public ActivityTrack parse(final byte[] bytes) throws GBException {
                 case HEARTRATE:
                     consumeHeartRate(buf);
                     break;
+                case STRENGTH_SET:
+                    // TODO parse strength sets: weight, count, type
                 default:
                     LOG.warn("No consumer for for type {}", type);
                     // Consume the reported length
@@ -320,6 +322,7 @@ private enum Type {
         SPEED(5, 8),
         ALTITUDE(7, 6),
         HEARTRATE(8, 3),
+        STRENGTH_SET(15, 34),
         ;
 
         private final byte code;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -218,7 +218,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_SONY_EQUALIZER_BAND_16000 = "pref_sony_equalizer_band_16000";
     public static final String PREF_SONY_EQUALIZER_BASS = "pref_sony_equalizer_bass";
     public static final String PREF_SONY_TOUCH_SENSOR = "pref_sony_touch_sensor";
-    public static final String PREF_SONY_PAUSE_WHEN_TAKEN_OFF = "sony_pause_when_taken_off";
+    public static final String PREF_SONY_PAUSE_WHEN_TAKEN_OFF = "pref_sony_pause_when_taken_off";
     public static final String PREF_SONY_BUTTON_MODE_LEFT = "pref_sony_button_mode_left";
     public static final String PREF_SONY_BUTTON_MODE_RIGHT = "pref_sony_button_mode_right";
     public static final String PREF_SONY_AUTOMATIC_POWER_OFF = "pref_sony_automatic_power_off";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/sony/headphones/prefs/SurroundMode.java
Patch:
@@ -48,6 +48,6 @@ public Map<String, Object> toPreferences() {
     }
 
     public static SurroundMode fromPreferences(final SharedPreferences prefs) {
-        return SurroundMode.valueOf(prefs.getString(DeviceSettingsPreferenceConst.PREF_SONY_SOUND_POSITION, "off").toUpperCase());
+        return SurroundMode.valueOf(prefs.getString(DeviceSettingsPreferenceConst.PREF_SONY_SURROUND_MODE, "off").toUpperCase());
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -762,9 +762,6 @@ private void handleAction(Intent intent, String action, GBDevice device) throws
                 break;
             }
             case ACTION_FETCH_RECORDED_DATA: {
-                if(!getDeviceCoordinator(device).supportsActivityDataFetching()){
-                    break;
-                }
                 int dataTypes = intent.getIntExtra(EXTRA_RECORDED_DATA_TYPES, 0);
                 deviceSupport.onFetchRecordedData(dataTypes);
                 break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/AbstractFetchOperation.java
Patch:
@@ -162,10 +162,11 @@ protected boolean handleActivityFetchFinish(boolean success) {
 
     protected void startFetching(TransactionBuilder builder, byte fetchType, GregorianCalendar sinceWhen) {
         final String taskName = StringUtils.ensureNotNull(builder.getTaskName());
+        final boolean isHuami2021 = getSupport() instanceof Huami2021Support;
         byte[] fetchBytes = BLETypeConversions.join(new byte[]{
                         HuamiService.COMMAND_ACTIVITY_DATA_START_DATE,
                         fetchType},
-                getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES));
+                getSupport().getTimeBytes(sinceWhen, isHuami2021 ? TimeUnit.SECONDS : TimeUnit.MINUTES));
         builder.add(new AbstractGattListenerWriteAction(getQueue(), characteristicFetch, fetchBytes) {
             @Override
             protected boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic) {
@@ -175,7 +176,7 @@ protected boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattChara
 
                     if (ArrayUtils.equals(value, HuamiService.RESPONSE_ACTIVITY_DATA_START_DATE_SUCCESS, 0)) {
                         handleActivityMetadata(value);
-                        if (expectedDataLength == 0 && getSupport() instanceof Huami2021Support) {
+                        if (expectedDataLength == 0 && isHuami2021) {
                             // Nothing to receive, if we try to fetch data it will fail
                             sendAck2021(true);
                         } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -100,7 +100,7 @@ public GBDevice[] newArray(int size) {
     private int mNotificationIconDisconnected = R.drawable.ic_notification_disconnected;
     private int mNotificationIconLowBattery = R.drawable.ic_notification_low_battery;
 
-    public static enum DeviceUbdateSubject {
+    public static enum DeviceUpdateSubject {
         UNKNOWN,
         NOTHING,
         CONNECTION_STATE,
@@ -487,11 +487,11 @@ public short getRssi() {
 
     // TODO: this doesn't really belong here
     public void sendDeviceUpdateIntent(Context context) {
-        sendDeviceUpdateIntent(context, DeviceUbdateSubject.UNKNOWN);
+        sendDeviceUpdateIntent(context, DeviceUpdateSubject.UNKNOWN);
     }
 
     // TODO: this doesn't really belong here
-    public void sendDeviceUpdateIntent(Context context, DeviceUbdateSubject subject) {
+    public void sendDeviceUpdateIntent(Context context, DeviceUpdateSubject subject) {
         Intent deviceUpdateIntent = new Intent(ACTION_DEVICE_CHANGED);
         deviceUpdateIntent.putExtra(EXTRA_DEVICE, this);
         deviceUpdateIntent.putExtra(EXTRA_UPDATE_SUBJECT, subject);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -437,9 +437,9 @@ public void onReceive(Context context, Intent intent) {
                 }
                 updateReceiversState();
 
-                GBDevice.DeviceUbdateSubject subject = (GBDevice.DeviceUbdateSubject) intent.getSerializableExtra(GBDevice.EXTRA_UPDATE_SUBJECT);
+                GBDevice.DeviceUpdateSubject subject = (GBDevice.DeviceUpdateSubject) intent.getSerializableExtra(GBDevice.EXTRA_UPDATE_SUBJECT);
 
-                if(subject == GBDevice.DeviceUbdateSubject.DEVICE_STATE && device.isInitialized()){
+                if(subject == GBDevice.DeviceUpdateSubject.DEVICE_STATE && device.isInitialized()){
                     LOG.debug("device state update reason");
                     sendDeviceConnectedBroadcast(device.getAddress());
                 }
@@ -685,7 +685,7 @@ private void handleAction(Intent intent, String action, GBDevice device) throws
 
         switch (action) {
             case ACTION_REQUEST_DEVICEINFO:
-                device.sendDeviceUpdateIntent(this, GBDevice.DeviceUbdateSubject.NOTHING);
+                device.sendDeviceUpdateIntent(this, GBDevice.DeviceUpdateSubject.NOTHING);
                 break;
             case ACTION_NOTIFICATION: {
                 int desiredId = intent.getIntExtra(EXTRA_NOTIFICATION_ID, -1);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -264,7 +264,7 @@ private void setDeviceConnectionState(State newState) {
         LOG.debug("new device connection state: " + newState);
 
         mGbDevice.setState(newState);
-        mGbDevice.sendDeviceUpdateIntent(mContext, GBDevice.DeviceUbdateSubject.CONNECTION_STATE);
+        mGbDevice.sendDeviceUpdateIntent(mContext, GBDevice.DeviceUpdateSubject.CONNECTION_STATE);
     }
 
     public void disconnect() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/SetDeviceStateAction.java
Patch:
@@ -37,7 +37,7 @@ public SetDeviceStateAction(GBDevice device, GBDevice.State deviceState, Context
     @Override
     public boolean run(BluetoothGatt gatt) {
         device.setState(deviceState);
-        device.sendDeviceUpdateIntent(getContext(), GBDevice.DeviceUbdateSubject.DEVICE_STATE);
+        device.sendDeviceUpdateIntent(getContext(), GBDevice.DeviceUpdateSubject.DEVICE_STATE);
         return true;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -828,7 +828,7 @@ public void queueWrite(SetDeviceStateRequest request, boolean priorise) {
 
     private void setDeviceState(GBDevice.State state) {
         getDeviceSupport().getDevice().setState(state);
-        getDeviceSupport().getDevice().sendDeviceUpdateIntent(getContext(), GBDevice.DeviceUbdateSubject.DEVICE_STATE);
+        getDeviceSupport().getDevice().sendDeviceUpdateIntent(getContext(), GBDevice.DeviceUpdateSubject.DEVICE_STATE);
     }
 
     public void queueWrite(FossilRequest request, boolean priorise) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridConstants.java
Patch:
@@ -22,7 +22,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public final class QHybridConstants {
-    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.7";
+    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.8";
     public static final int HYBRID_HR_WATCHFACE_WIDGET_SIZE = 76;
 
     public static Map<String, String> KNOWN_WAPP_VERSIONS = new HashMap<String, String>() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -192,7 +192,7 @@ public void onReceive(Context context, Intent intent) {
                         break;
                     }
                     case GBDevice.ACTION_DEVICE_CHANGED: {
-                        LOG.info("ACTION_DEVICE_CHANGED " + gbDevice.getStateString());
+                        LOG.info("ACTION_DEVICE_CHANGED " + (gbDevice!=null ? gbDevice.getStateString():""));
                         addReceiveHistory("\n================================================\nACTION_DEVICE_CHANGED "+gbDevice.getStateString()+" "+(new SimpleDateFormat("yyyy-mm-dd hh:mm:ss")).format(Calendar.getInstance().getTime())+"\n================================================\n");
                     }
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/BatteryInfoActivity.java
Patch:
@@ -29,8 +29,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
-public class
-BatteryInfoActivity extends AbstractGBActivity {
+public class BatteryInfoActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(BatteryInfoActivity.class);
     GBDevice gbDevice;
     private int timeFrom;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -553,9 +553,9 @@ protected RefreshTask createRefreshTask(String task, Context context) {
     }
 
     private void handleShortcut(Intent intent) {
-        if(intent.getAction().equals(ACTION_CONNECT)) {
+        if (ACTION_CONNECT.equals(intent.getAction())) {
             String btDeviceAddress = intent.getStringExtra("device");
-            if(btDeviceAddress!=null){
+            if (btDeviceAddress!=null) {
                 GBDevice candidate = DeviceHelper.getInstance().findAvailableDevice(btDeviceAddress, this);
                 if (candidate != null && !candidate.isConnected()) {
                     GBApplication.deviceService(candidate).connect();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/HybridHRWatchfaceWidgetActivity.java
Patch:
@@ -93,7 +93,7 @@ public void onCreate(final Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
             addPreferencesFromResource(R.xml.fossil_hr_widget_settings);
 
-            widgetTypes = HybridHRWatchfaceWidget.getAvailableWidgetTypes(getContext());
+            widgetTypes = HybridHRWatchfaceWidget.getAvailableWidgetTypes(getActivity().getBaseContext());
             ListPreference widgetType = (ListPreference) findPreference("pref_hybridhr_widget_type");
             widgetType.setOnPreferenceChangeListener(this);
             widgetType.setEntries(widgetTypes.values().toArray(new String[0]));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/language/impl/KoreanTransliterator.java
Patch:
@@ -16,10 +16,9 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.util.language.impl;
 
-import java.util.Optional;
 import java.text.Normalizer;
-import java.text.Normalizer.Form;
 
+import nodomain.freeyourgadget.gadgetbridge.util.Optional;
 import nodomain.freeyourgadget.gadgetbridge.util.language.Transliterator;
 
 // Implements Revised Romanization of Korean as well as we can without understanding any grammar.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -568,6 +568,7 @@ private void handleUartRxJSON(JSONObject json) throws JSONException {
                         else if (m.equals("post")) method = Request.Method.POST;
                         else if (m.equals("head")) method = Request.Method.HEAD;
                         else if (m.equals("put")) method = Request.Method.PUT;
+                        else if (m.equals("patch")) method = Request.Method.PATCH;
                         else if (m.equals("delete")) method = Request.Method.DELETE;
                         else uartTxJSONError("http", "Unknown HTTP method "+m,id);
                     }
@@ -640,7 +641,8 @@ public byte[] getBody() throws AuthFailureError {
 
                         @Override
                         public Map<String, String> getHeaders() throws AuthFailureError {
-                            Map<String, String> h = super.getHeaders();
+                            // clone the data from super.getHeaders() so we can write to it
+                            Map<String, String> h = new HashMap<>(super.getHeaders());
                             if (headers != null) {
                                 Iterator<String> iter = headers.keySet().iterator();
                                 while (iter.hasNext()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -1598,7 +1598,7 @@ protected int getFindDeviceInterval() {
         return findDeviceInterval;
     }
 
-    private void sendFindDeviceCommand(boolean start) {
+    protected void sendFindDeviceCommand(boolean start) {
         BluetoothGattCharacteristic characteristic = getCharacteristic(UUID_CHARACTERISTIC_ALERT_LEVEL);
         try {
             TransactionBuilder builder = performInitialized("find huami");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -45,7 +45,7 @@ public enum DeviceType {
     AMAZFITGTR(18, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr),
     AMAZFITGTS(19, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts),
     AMAZFITBIPS(20, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bips),
-    AMAZFITGTR_LITE(21, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr),
+    AMAZFITGTR_LITE(21, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr_lite),
     AMAZFITTREX(22, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_trex),
     MIBAND5(23, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband5),
     AMAZFITBAND5(24, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_amazfit_band5),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/Huami2021Coordinator.java
Patch:
@@ -52,8 +52,7 @@ public boolean supportsRealtimeData() {
 
     @Override
     public boolean supportsWeather() {
-        // TODO: It's supported by the devices, but not yet implemented
-        return false;
+        return true;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/AlwaysOnDisplay.java
Patch:
@@ -18,7 +18,7 @@
 
 public enum AlwaysOnDisplay {
     OFF,
-    AUTO,
+    AUTOMATIC,
     SCHEDULED,
     ALWAYS
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Config.java
Patch:
@@ -565,7 +565,7 @@ private static Map<String, Object> convertByteToPrefs(final ConfigArg configArg,
                         case 0x00:
                             return singletonMap(configArg.getPrefKey(), AlwaysOnDisplay.OFF.name().toLowerCase(Locale.ROOT));
                         case 0x01:
-                            return singletonMap(configArg.getPrefKey(), AlwaysOnDisplay.AUTO.name().toLowerCase(Locale.ROOT));
+                            return singletonMap(configArg.getPrefKey(), AlwaysOnDisplay.AUTOMATIC.name().toLowerCase(Locale.ROOT));
                         case 0x02:
                             return singletonMap(configArg.getPrefKey(), AlwaysOnDisplay.SCHEDULED.name().toLowerCase(Locale.ROOT));
                         case 0x03:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Support.java
Patch:
@@ -1155,7 +1155,7 @@ protected Huami2021Support setAlwaysOnDisplay(final TransactionBuilder builder)
 
         final byte aodByte;
         switch (alwaysOnDisplay) {
-            case AUTO:
+            case AUTOMATIC:
                 aodByte = 0x01;
                 break;
             case SCHEDULED:

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/TestBase.java
Patch:
@@ -34,8 +34,7 @@
  * directory.
  */
 @RunWith(RobolectricTestRunner.class)
-@Config(sdk = 19)
-// need sdk 19 because "WITHOUT ROWID" is not supported in robolectric/sqlite4java
+@Config(sdk = 21)
 public abstract class TestBase {
     protected static File logFilesDir;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pinetime/PineTimeInstallHandler.java
Patch:
@@ -75,8 +75,9 @@ public PineTimeInstallHandler(Uri uri, Context context) {
 
                     final byte[] buffer = new byte[1024];
 
-                    while (zipInputStream.read(buffer, 0, buffer.length) != -1) {
-                        json.append(new String(buffer));
+                    int read;
+                    while ((read = zipInputStream.read(buffer, 0, buffer.length)) != -1) {
+                        json.append(new String(buffer, 0, read));
                     }
 
                     Gson gson = new Gson();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -301,7 +301,7 @@ public void notify(Intent intent) {
         }
     };
 
-    private BluetoothGattCharacteristic characteristicHRControlPoint;
+    protected BluetoothGattCharacteristic characteristicHRControlPoint;
     private BluetoothGattCharacteristic characteristicChunked;
 
     private BluetoothGattCharacteristic characteristicChunked2021Write;
@@ -2284,7 +2284,7 @@ public void logHeartrate(byte[] value, int status) {
         logMessageContent(value);
     }
 
-    private void handleHeartrate(byte[] value) {
+    protected void handleHeartrate(byte[] value) {
         if (value.length == 2 && value[0] == 0) {
             int hrValue = (value[1] & 0xff);
             if (LOG.isDebugEnabled()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -370,7 +370,7 @@ public void onNotificationPosted(StatusBarNotification sbn, RankingMap rankingMa
 
         LOG.info("Processing notification " + notificationSpec.getId() + " age: " + (System.currentTimeMillis() - notification.when) + " from source " + source + " with flags: " + notification.flags);
 
-        boolean preferBigText = source.startsWith("com.fsck.k9") || source.equals("com.google.android.gm");
+        boolean preferBigText = prefs.getBoolean("notification_prefer_long_text", true);
 
         dissectNotificationTo(notification, notificationSpec, preferBigText);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/AbstractMiBandFWHelper.java
Patch:
@@ -54,7 +54,7 @@ public AbstractMiBandFWHelper(Uri uri, Context context) throws IOException {
         }
 
         try (InputStream in = new BufferedInputStream(uriHelper.openInputStream())) {
-            this.fw = FileUtils.readAll(in, 1024 * 1024 * 16); // 16.0 MB
+            this.fw = FileUtils.readAll(in, 1024 * 1024 * 32); // 32.0 MB
             determineFirmwareInfo(fw);
         } catch (IOException ex) {
             throw ex; // pass through

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/AbstractHuamiOperation.java
Patch:
@@ -17,7 +17,6 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.huami;
 
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.operations.AbstractMiBandOperation;
 
 public abstract class AbstractHuamiOperation extends AbstractMiBandOperation<HuamiSupport> {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Support.java
Patch:
@@ -148,7 +148,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.FetchSportsSummaryOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.HuamiFetchDebugLogsOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation2020;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation2021;
 import nodomain.freeyourgadget.gadgetbridge.util.AlarmUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.BitmapUtil;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
@@ -1745,7 +1745,7 @@ public void phase3Initialize(final TransactionBuilder builder) {
 
     @Override
     public UpdateFirmwareOperation createUpdateFirmwareOperation(final Uri uri) {
-        return new UpdateFirmwareOperation2020(uri, this);
+        return new UpdateFirmwareOperation2021(uri, this);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband7/MiBand7FirmwareInfo.java
Patch:
@@ -32,6 +32,7 @@ public class MiBand7FirmwareInfo extends Huami2021FirmwareInfo {
 
     private static final Map<Integer, String> crcToVersion = new HashMap<Integer, String>() {{
         // firmware
+        put(26036, "1.20.3.1");
     }};
 
     public MiBand7FirmwareInfo(final byte[] bytes) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/UpdateFirmwareOperation.java
Patch:
@@ -41,7 +41,6 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetProgressAction;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuamiFirmwareInfo;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.AbstractHuamiOperation;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiFirmwareInfo;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiFirmwareType;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/Huami2021Support.java
Patch:
@@ -2527,16 +2527,16 @@ private void ackNotificationAfterIconSent() {
 
         LOG.info("Acknowledging icon send for {}", queuedIconPackage);
 
-        queuedIconPackage = null;
-        queuedIconBytes = null;
-
         final ByteBuffer buf = ByteBuffer.allocate(1 + queuedIconPackage.length() + 1 + 1);
         buf.order(ByteOrder.LITTLE_ENDIAN);
         buf.put(NOTIFICATION_CMD_ICON_REQUEST_ACK);
         buf.put(queuedIconPackage.getBytes(StandardCharsets.UTF_8));
         buf.put((byte) 0x00);
         buf.put((byte) 0x01);
 
+        queuedIconPackage = null;
+        queuedIconBytes = null;
+
         writeToChunked2021("ack icon send", CHUNKED2021_ENDPOINT_NOTIFICATIONS, buf.array(), true);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridConstants.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.Map;
 
 public final class QHybridConstants {
-    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.4";
+    public static final String HYBRIDHR_WATCHFACE_VERSION = "1.5";
     public static final int HYBRID_HR_WATCHFACE_WIDGET_SIZE = 76;
 
     public static Map<String, String> KNOWN_WAPP_VERSIONS = new HashMap<String, String>() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/GenericItem.java
Patch:
@@ -70,7 +70,7 @@ public void setName(String name) {
     }
 
     public void setDetails(String details) {
-        if (details.equals("(Unknown version)")) {
+        if (details == null || details.equals("(Unknown version)")) {
             this.warning = true;
         }
         this.details = details;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/WatchAdapter.java
Patch:
@@ -83,7 +83,9 @@ public String getModelName() {
             case "IV.0.0":
                 return "Hybrid HR";
             case "DN.1.0":
-                return "Hybrid HR";
+                return "Hybrid HR Collider";
+            case "VA.0.0":
+                return "Fossil Gen. 6 Hybrid";
         }
         return "unknown Q";
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/WatchAdapterFactory.java
Patch:
@@ -26,6 +26,7 @@ public final WatchAdapter createWatchAdapter(String firmwareVersion, QHybridSupp
         char hardwareVersion = firmwareVersion.charAt(2);
         if(hardwareVersion == '1') return new FossilHRWatchAdapter(deviceSupport);
         if(firmwareVersion.startsWith("IV0")) return new FossilHRWatchAdapter(deviceSupport);
+        if(firmwareVersion.startsWith("VA")) return new FossilHRWatchAdapter(deviceSupport);
 
         char major = firmwareVersion.charAt(6);
         switch (major){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -705,7 +705,7 @@ private HuamiSupport setPassword(final TransactionBuilder builder) {
      *
      * @param builder
      */
-    private HuamiSupport setHeartrateSleepSupport(TransactionBuilder builder) {
+    protected HuamiSupport setHeartrateSleepSupport(TransactionBuilder builder) {
         final boolean enableHrSleepSupport = MiBandCoordinator.getHeartrateSleepSupport(gbDevice.getAddress());
         if (characteristicHRControlPoint != null) {
             builder.notify(characteristicHRControlPoint, true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -3895,7 +3895,7 @@ protected HuamiSupport requestGPSVersion(TransactionBuilder builder) {
         return this;
     }
 
-    private HuamiSupport requestAlarms(TransactionBuilder builder) {
+    protected HuamiSupport requestAlarms(TransactionBuilder builder) {
         LOG.info("Requesting alarms");
         //FIXME: on older devices only the first one works, and on newer only the last is sufficient
         writeToConfiguration(builder, HuamiService.COMMAND_REQUEST_ALARMS);

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -86,7 +86,7 @@ public void testNotConnected() {
     public void ensureConnected() {
         mDeviceService.start();
         // connection goes synchronously here
-        mDeviceService.connect(getDevice());
+        mDeviceService.forDevice(getDevice()).connect();
         Mockito.verify(mockSupport, Mockito.times(1)).connect();
         assertTrue(getDevice().isInitialized());
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/HybridHRWatchfaceDesignerActivity.java
Patch:
@@ -572,7 +572,7 @@ private void sendToWatch(boolean preview) {
             wfFactory = new HybridHRWatchfaceFactory(watchfaceName);
         }
         wfFactory.setSettings(watchfaceSettings);
-        wfFactory.setBackground(processedBackgroundImage);
+        wfFactory.setBackground(selectedBackgroundImage);
         wfFactory.addWidgets(widgets);
         try {
             File tempFile = File.createTempFile("tmpWatchfaceFile", null);
@@ -607,14 +607,14 @@ public void run() {
                                 public void onClick(DialogInterface dialog, int which) {
                                     findViewById(R.id.watchface_upload_progress_bar).setVisibility(View.VISIBLE);
                                     GBApplication.deviceService().onInstallApp(tempAppFileUri);
-                                    FossilHRInstallHandler.saveAppInCache(fossilFile, processedBackgroundImage, wfFactory.getPreviewImage(mContext), mCoordinator, HybridHRWatchfaceDesignerActivity.this);
+                                    FossilHRInstallHandler.saveAppInCache(fossilFile, selectedBackgroundImage, wfFactory.getPreviewImage(mContext), mCoordinator, HybridHRWatchfaceDesignerActivity.this);
                                 }
                             })
                             .show();
                 } else {
                     findViewById(R.id.watchface_upload_progress_bar).setVisibility(View.VISIBLE);
                     GBApplication.deviceService().onInstallApp(tempAppFileUri);
-                    FossilHRInstallHandler.saveAppInCache(fossilFile, processedBackgroundImage, wfFactory.getPreviewImage(mContext), mCoordinator, HybridHRWatchfaceDesignerActivity.this);
+                    FossilHRInstallHandler.saveAppInCache(fossilFile, selectedBackgroundImage, wfFactory.getPreviewImage(mContext), mCoordinator, HybridHRWatchfaceDesignerActivity.this);
                 }
             }
         } catch (IOException e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BitmapUtil.java
Patch:
@@ -173,8 +173,6 @@ public static Bitmap getCircularBitmap(Bitmap srcBitmap) {
         float left = (squareBitmapWidth-srcBitmap.getWidth())/2;
         float top = (squareBitmapWidth-srcBitmap.getHeight())/2;
         canvas.drawBitmap(srcBitmap, left, top, paint);
-        // Free the native object associated with this bitmap.
-        srcBitmap.recycle();
         // Return the circular bitmap
         return dstBitmap;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepChartFragment.java
Patch:
@@ -21,6 +21,7 @@
 import android.content.Intent;
 import android.graphics.Color;
 import android.os.Bundle;
+import android.text.method.ScrollingMovementMethod;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -199,6 +200,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         mActivityChart.getXAxis().setValueFormatter(mcd.getChartsData().getXValueFormatter());
         mActivityChart.setData(mcd.getChartsData().getData());
         mSleepchartInfo.setText(buildYouSleptText(pieData));
+        mSleepchartInfo.setMovementMethod(new ScrollingMovementMethod());
         heartRateMin = mcd.getHeartRateAxisMin();
         heartRateMax = mcd.getHeartRateAxisMax();
         intensityTotal = mcd.getIntensityTotal();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -528,7 +528,7 @@ public HuamiSupport requestDeviceInfo(TransactionBuilder builder) {
      * @return
      */
 
-    private HuamiSupport setFitnessGoal(TransactionBuilder transaction) {
+    protected HuamiSupport setFitnessGoal(TransactionBuilder transaction) {
         LOG.info("Attempting to set Fitness Goal...");
         BluetoothGattCharacteristic characteristic = getCharacteristic(HuamiService.UUID_CHARACTERISTIC_8_USER_SETTINGS);
         if (characteristic != null) {
@@ -3161,7 +3161,7 @@ private HuamiSupport setTimeFormat(TransactionBuilder builder) {
         return this;
     }
 
-    private HuamiSupport setGoalNotification(TransactionBuilder builder) {
+    protected HuamiSupport setGoalNotification(TransactionBuilder builder) {
         boolean enable = HuamiCoordinator.getGoalNotification(gbDevice.getAddress());
         LOG.info("Setting goal notification to " + enable);
         if (enable) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -45,6 +45,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_DEVICE_INTENTS = "device_intents";
 
     public static final String PREF_BANGLEJS_TEXT_BITMAP = "banglejs_text_bitmap";
+    public static final String PREF_BANGLEJS_TEXT_BITMAP_SIZE = "banglejs_txt_bitmap_size";
     public static final String PREF_BANGLEJS_WEBVIEW_URL = "banglejs_webview_url";
 
     public static final String PREF_DISCONNECT_NOTIFICATION = "disconnect_notification";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -86,7 +86,7 @@ public enum DeviceType {
     MISCALE2(131, R.drawable.ic_device_miscale2, R.drawable.ic_device_miscale2_disabled, R.string.devicetype_miscale2),
     BFH16(140, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_bfh16),
     MAKIBESHR3(150, R.drawable.ic_device_default, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_hr3),
-    BANGLEJS(160, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_banglejs),
+    BANGLEJS(160, R.drawable.ic_device_banglejs, R.drawable.ic_device_banglejs_disabled, R.string.devicetype_banglejs),
     FOSSILQHYBRID(170, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_qhybrid),
     TLW64(180, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_tlw64),
     PINETIME_JF(190, R.drawable.ic_device_pinetime, R.drawable.ic_device_pinetime_disabled, R.string.devicetype_pinetime_jf),

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/TestBase.java
Patch:
@@ -85,7 +85,7 @@ public void tearDown() throws Exception {
     }
 
     protected GBDevice createDummyGDevice(String macAddress) {
-        GBDevice dummyGBDevice = new GBDevice(macAddress, "Testie", "Tesie Alias", DeviceType.TEST);
+        GBDevice dummyGBDevice = new GBDevice(macAddress, "Testie", "Tesie Alias", "Test Folder", DeviceType.TEST);
         dummyGBDevice.setFirmwareVersion("1.2.3");
         dummyGBDevice.setModel("4.0");
         return dummyGBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/HybridHRWatchfaceFactory.java
Patch:
@@ -30,6 +30,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.LinkedHashMap;
 import java.util.TimeZone;
 
@@ -98,7 +99,7 @@ public void addWidget(HybridHRWatchfaceWidget widgetDesc) {
                         JSONObject data = new JSONObject();
                         TimeZone tz = TimeZone.getTimeZone(widgetDesc.getExtraConfigString("tzName", null));
                         String tzShortName = widgetDesc.getExtraConfigString("tzName", null).replaceAll(".*/", "");
-                        int tzOffsetMins = tz.getRawOffset() / 1000 / 60;
+                        int tzOffsetMins = tz.getOffset(Calendar.getInstance().getTimeInMillis()) / 1000 / 60;
                         data.put("tzName", widgetDesc.getExtraConfigString("tzName", null));
                         data.put("loc", tzShortName);
                         data.put("utc", tzOffsetMins);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiCoordinator.java
Patch:
@@ -127,7 +127,7 @@ public boolean supportsActivityTracking() {
     }
 
     @Override
-    public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
+    public int[] getSupportedDeviceSpecificAuthenticationSettings() {
         return new int[]{R.xml.devicesettings_pairingkey};
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -83,7 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(deviceCandidate);
         GBDevice device = DeviceHelper.getInstance().toSupportedDevice(deviceCandidate);
 
-        if (coordinator.getSupportedDeviceSpecificSettings(device) != null) { // FIXME: this will no longer be sane in the future
+        if (coordinator.getSupportedDeviceSpecificAuthenticationSettings() != null) { // FIXME: this will no longer be sane in the future
             SharedPreferences sharedPrefs = GBApplication.getDeviceSpecificSharedPrefs(device.getAddress());
             String authKey = sharedPrefs.getString("authkey", null);
             if (authKey == null || authKey.isEmpty()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/application/ApplicationsListRequest.java
Patch:
@@ -38,11 +38,10 @@ public void handleFileData(byte[] fileData){
             buffer.get(); // null byte
             byte handle = buffer.get();
             int hash = buffer.getInt();
+            String version = String.format("%d.%d", buffer.get(), buffer.get());
             buffer.get();  // unknown
-            int version_minor = buffer.get();
-            int version_major = buffer.get();
             buffer.get();  // unknown
-            String version = String.format("%d.%d", version_major, version_minor);
+
             applicationInfos.add(new ApplicationInformation(
                     name,
                     version,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -189,6 +189,7 @@ private void showDeviceFolder(ViewHolder holder, final GBDeviceFolder folder){
         holder.container.setVisibility(View.VISIBLE);
         holder.deviceNameLabel.setText(folder.getName());
         holder.infoIcons.setVisibility(View.GONE);
+        holder.deviceInfoBox.setVisibility(View.GONE);
         holder.cardViewActivityCardLayout.setVisibility(View.GONE);
         if(countDevicesInFolder(folder.getName(), true) == 0){
             holder.deviceImageView.setImageResource(R.drawable.ic_device_folder_disabled);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/um25/Support/UM25Support.java
Patch:
@@ -94,6 +94,8 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
 
         readPreferences();
 
+        getDevice().setFirmwareVersion("1.0");
+
         return builder
                 .add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()))
                 .notify(getCharacteristic(UUID.fromString(UUID_CHAR)), true)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -1352,7 +1352,7 @@ protected void sendMusicStateToDevice(MusicSpec musicSpec, MusicStateSpec musicS
         if (musicSpec != null) {
             artist = StringUtils.truncate(musicSpec.artist, 80);
             album = StringUtils.truncate(musicSpec.album, 80);
-            track = StringUtils.truncate(musicSpec.album, 80);
+            track = StringUtils.truncate(musicSpec.track, 80);
 
             if (artist.getBytes().length > 0) {
                 length += artist.getBytes().length + 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -841,7 +841,7 @@ private void handleAction(Intent intent, String action, GBDevice device) throws
                 break;
             case ACTION_SET_GPS_LOCATION:
                 final Location location = intent.getParcelableExtra(EXTRA_GPS_LOCATION);
-                mDeviceSupport.onSetGpsLocation(location);
+                deviceSupport.onSetGpsLocation(location);
                 break;
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -811,6 +811,8 @@ static DeviceSpecificSettingsFragment newInstance(GBDevice device) {
         int[] supportedSettings = coordinator.getSupportedDeviceSpecificSettings(device);
         String[] supportedLanguages = coordinator.getSupportedLanguageSettings(device);
 
+        supportedSettings = ArrayUtils.insert(0, supportedSettings, coordinator.getSupportedDeviceSpecificConnectionSettings());
+
         if (supportedLanguages != null) {
             supportedSettings = ArrayUtils.insert(0, supportedSettings, R.xml.devicesettings_language_generic);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -154,7 +154,7 @@ public void onClick(View v) {
             public boolean onLongClick(View v) {
                 if (device.getState() != GBDevice.State.NOT_CONNECTED) {
                     showTransientSnackbar(R.string.controlcenter_snackbar_disconnecting);
-                    GBApplication.deviceService().disconnect();
+                    GBApplication.deviceService().disconnect(device);
                 }
                 return true;
             }
@@ -261,7 +261,7 @@ public void onClick(View v) {
         );
 
         //device specific settings
-        holder.deviceSpecificSettingsView.setVisibility(coordinator.getSupportedDeviceSpecificSettings(device) != null ? View.VISIBLE : View.GONE);
+        holder.deviceSpecificSettingsView.setVisibility(coordinator.getSupportedDeviceSpecificConnectionSettings() != null ? View.VISIBLE : View.GONE);
         holder.deviceSpecificSettingsView.setOnClickListener(new View.OnClickListener()
 
                                                 {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qc35/QC35Coordinator.java
Patch:
@@ -25,7 +25,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.GBException;
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.AbstractBLClassicDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
@@ -35,7 +35,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
-public class QC35Coordinator extends AbstractDeviceCoordinator {
+public class QC35Coordinator extends AbstractBLClassicDeviceCoordinator {
     @Override
     protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device, @NonNull DaoSession session) throws GBException {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/um25/Coordinator/UM25Coordinator.java
Patch:
@@ -14,6 +14,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.GBException;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.devices.AbstractBLEDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
@@ -26,7 +27,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.um25.Support.UM25Support;
 
-public class UM25Coordinator extends AbstractDeviceCoordinator {
+public class UM25Coordinator extends AbstractBLEDeviceCoordinator {
     @Override
     protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device device, @NonNull DaoSession session) throws GBException {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/vesc/VescCoordinator.java
Patch:
@@ -26,6 +26,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.GBException;
+import nodomain.freeyourgadget.gadgetbridge.devices.AbstractBLEDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
@@ -36,7 +37,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
-public class VescCoordinator extends AbstractDeviceCoordinator {
+public class VescCoordinator extends AbstractBLEDeviceCoordinator {
     public final static String UUID_SERVICE_SERIAL_HM10 = "0000ffe0-0000-1000-8000-00805f9b34fb";
     public final static String UUID_CHARACTERISTIC_SERIAL_TX_HM10 = "0000ffe1-0000-1000-8000-00805f9b34fb";
     public final static String UUID_CHARACTERISTIC_SERIAL_RX_HM10 = "0000ffe1-0000-1000-8000-00805f9b34fb";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -767,9 +767,9 @@ public void onNotificationRemoved(StatusBarNotification sbn) {
         notificationsActive.removeAll(notificationsToRemove);
 
         // Send notification remove request to device
-        GBDevice connectedDevice = GBApplication.app().getDeviceManager().getSelectedDevice();
-        if (connectedDevice != null) {
-            Prefs prefs = new  Prefs(GBApplication.getDeviceSpecificSharedPrefs(connectedDevice.getAddress()));
+        List<GBDevice> devices = GBApplication.app().getDeviceManager().getSelectedDevices();
+        for(GBDevice device : devices){
+            Prefs prefs = new  Prefs(GBApplication.getDeviceSpecificSharedPrefs(device.getAddress()));
             if (prefs.getBoolean("autoremove_notifications", true)) {
                 for (int id : notificationsToRemove) {
                     LOG.info("Notification " + id + " removed, will ask device to delete it");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -154,6 +154,8 @@ public interface DeviceService extends EventHandler {
 
     void connect(@Nullable GBDevice device, boolean firstTime);
 
+    void disconnect(@Nullable GBDevice device);
+
     void disconnect();
 
     void quit();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipLiteFirmwareInfo.java
Patch:
@@ -17,6 +17,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip;
 
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
@@ -69,8 +70,8 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             if (searchString32BitAligned(bytes, "Amazfit Bip Lite")) {
                 return HuamiFirmwareType.FIRMWARE;
             }
-            GBDevice device = GBApplication.app().getDeviceManager().getSelectedDevice();
-            if (device != null) {
+            List<GBDevice> devices = GBApplication.app().getDeviceManager().getSelectedDevices();
+            for(GBDevice device : devices){
                 Prefs prefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(device.getAddress()));
                 if (prefs.getBoolean(DeviceSettingsPreferenceConst.PREF_RELAX_FIRMWARE_CHECKS, false)) {
                     if (searchString32BitAligned(bytes, "Amazfit Bip")) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -242,7 +242,7 @@ protected boolean connect() {
     public void run() {
         mIsConnected = connect();
         if (!mIsConnected) {
-            if (GBApplication.getGBPrefs().getAutoReconnect() && !mQuit) {
+            if (GBApplication.getGBPrefs().getAutoReconnect(getDevice()) && !mQuit) {
                 gbDevice.setState(GBDevice.State.WAITING_FOR_RECONNECT);
                 gbDevice.sendDeviceUpdateIntent(getContext());
             }
@@ -406,7 +406,7 @@ public void run() {
 
         enablePebbleKitSupport(false);
 
-        if (mQuit || !GBApplication.getGBPrefs().getAutoReconnect()) {
+        if (mQuit || !GBApplication.getGBPrefs().getAutoReconnect(getDevice())) {
             gbDevice.setState(GBDevice.State.NOT_CONNECTED);
         } else {
             gbDevice.setState(GBDevice.State.WAITING_FOR_RECONNECT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qc35/QC35BaseSupport.java
Patch:
@@ -69,7 +69,7 @@ public void onReadConfiguration(String config) {
     public boolean connect() {
         getDeviceProtocol();
         getDeviceIOThread().start();
-        getDevice().setBatteryThresholdPercent((short)15);
+        getDevice().setBatteryThresholdPercent((short)25);
         return true;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qc35/QC35Protocol.java
Patch:
@@ -29,6 +29,7 @@
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
+import nodomain.freeyourgadget.gadgetbridge.model.BatteryState;
 import nodomain.freeyourgadget.gadgetbridge.service.serial.GBDeviceProtocol;
 import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
@@ -57,6 +58,7 @@ public GBDeviceEvent[] decodeResponse(byte[] responseData) {
                     if(third == 0x03){
                         GBDeviceEventBatteryInfo batteryInfo = new GBDeviceEventBatteryInfo();
                         batteryInfo.level = data[0];
+                        batteryInfo.state = BatteryState.BATTERY_NORMAL;
                         events.add(batteryInfo);
                     }
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BondingUtil.java
Patch:
@@ -180,7 +180,7 @@ public static void connectThenComplete(BondingInterface bondingInterface, GBDevi
     public static void connectThenComplete(BondingInterface bondingInterface, GBDevice device) {
         toast(bondingInterface.getContext(), bondingInterface.getContext().getString(R.string.discovery_trying_to_connect_to, device.getName()), Toast.LENGTH_SHORT, GB.INFO);
         // Disconnect when LE Pebble so that the user can manually initiate a connection
-        GBApplication.deviceService().disconnect();
+        GBApplication.deviceService().disconnect(device);
         GBApplication.deviceService().connect(device, true);
         bondingInterface.onBondingComplete(true);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband5/MiBand5Coordinator.java
Patch:
@@ -144,7 +144,7 @@ public String[] getSupportedLanguageSettings(GBDevice device) {
                 "id_ID",
                 "it_IT",
                 "nl_NL",
-                "pt_PT",
+                "pt_BR",
                 "pl_PL",
                 "ro_RO",
                 "ru_RU",

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiCoordinator.java
Patch:
@@ -270,7 +270,7 @@ public static boolean getExposeHRThirdParty(String deviceAddress) {
 
     public static int getHeartRateMeasurementInterval(String deviceAddress) {
         Prefs prefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(deviceAddress));
-        return GBApplication.getPrefs().getInt(DeviceSettingsPreferenceConst.PREF_HEARTRATE_MEASUREMENT_INTERVAL, 0) / 60;
+        return prefs.getInt(DeviceSettingsPreferenceConst.PREF_HEARTRATE_MEASUREMENT_INTERVAL, 0) / 60;
     }
 
     public static boolean getHeartrateActivityMonitoring(String deviceAddress) throws IllegalArgumentException {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband3/MiBand3Support.java
Patch:
@@ -93,10 +93,10 @@ private MiBand3Support setNightMode(TransactionBuilder builder) {
 
         switch (nightMode) {
             case MiBandConst.PREF_NIGHT_MODE_SUNSET:
-                builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION), MiBand3Service.COMMAND_NIGHT_MODE_SUNSET);
+                writeToConfiguration(builder, MiBand3Service.COMMAND_NIGHT_MODE_SUNSET);
                 break;
             case MiBandConst.PREF_NIGHT_MODE_OFF:
-                builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION), MiBand3Service.COMMAND_NIGHT_MODE_OFF);
+                writeToConfiguration(builder, MiBand3Service.COMMAND_NIGHT_MODE_OFF);
                 break;
             case MiBandConst.PREF_NIGHT_MODE_SCHEDULED:
                 byte[] cmd = MiBand3Service.COMMAND_NIGHT_MODE_SCHEDULED.clone();
@@ -113,7 +113,7 @@ private MiBand3Support setNightMode(TransactionBuilder builder) {
                 cmd[4] = (byte) calendar.get(Calendar.HOUR_OF_DAY);
                 cmd[5] = (byte) calendar.get(Calendar.MINUTE);
 
-                builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION), cmd);
+                writeToConfiguration(builder, cmd);
                 break;
             default:
                 LOG.error("Invalid night mode: " + nightMode);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -77,6 +77,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_INACTIVITY_START = "inactivity_warnings_start";
     public static final String PREF_INACTIVITY_END = "inactivity_warnings_end";
     public static final String PREF_INACTIVITY_THRESHOLD = "inactivity_warnings_threshold";
+    public static final String PREF_INACTIVITY_THRESHOLD_EXTENDED = "inactivity_warnings_threshold_extended";
     public static final String PREF_INACTIVITY_MO = "inactivity_warnings_mo";
     public static final String PREF_INACTIVITY_TU = "inactivity_warnings_tu";
     public static final String PREF_INACTIVITY_WE = "inactivity_warnings_we";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -429,6 +429,7 @@ public boolean onPreferenceChange(final Preference preference, final Object newV
         addPreferenceHandlerFor(PREF_INACTIVITY_START);
         addPreferenceHandlerFor(PREF_INACTIVITY_END);
         addPreferenceHandlerFor(PREF_INACTIVITY_THRESHOLD);
+        addPreferenceHandlerFor(PREF_INACTIVITY_THRESHOLD_EXTENDED);
         addPreferenceHandlerFor(PREF_INACTIVITY_MO);
         addPreferenceHandlerFor(PREF_INACTIVITY_TU);
         addPreferenceHandlerFor(PREF_INACTIVITY_WE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/fitpro/FitProDeviceSupport.java
Patch:
@@ -543,7 +543,7 @@ public void onSendConfiguration(String config) {
                 case DeviceSettingsPreferenceConst.PREF_LANGUAGE:
                     setLanguage(builder);
                     break;
-                case DeviceSettingsPreferenceConst.PREF_INACTIVITY_THRESHOLD:
+                case DeviceSettingsPreferenceConst.PREF_INACTIVITY_THRESHOLD_EXTENDED:
                 case DeviceSettingsPreferenceConst.PREF_INACTIVITY_ENABLE:
                 case DeviceSettingsPreferenceConst.PREF_INACTIVITY_START:
                 case DeviceSettingsPreferenceConst.PREF_INACTIVITY_END:
@@ -1148,7 +1148,7 @@ public FitProDeviceSupport setLongSitReminder(TransactionBuilder builder) {
 
         if (prefLongsitSwitch) {
 
-            String inactivity = GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getString(DeviceSettingsPreferenceConst.PREF_INACTIVITY_THRESHOLD, "4");
+            String inactivity = GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getString(DeviceSettingsPreferenceConst.PREF_INACTIVITY_THRESHOLD_EXTENDED, "4");
             String start = GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getString(DeviceSettingsPreferenceConst.PREF_INACTIVITY_START, "08:00");
             String end = GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getString(DeviceSettingsPreferenceConst.PREF_INACTIVITY_END, "16:00");
             Calendar startCalendar = GregorianCalendar.getInstance();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitband5/AmazfitBand5Coordinator.java
Patch:
@@ -103,6 +103,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
                 R.xml.devicesettings_custom_emoji_font,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_dateformat,
+                R.xml.devicesettings_world_clocks,
                 R.xml.devicesettings_nightmode,
                 R.xml.devicesettings_liftwrist_display_sensitivity,
                 R.xml.devicesettings_swipeunlock,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiConst.java
Patch:
@@ -59,6 +59,7 @@ public class HuamiConst {
 
     public static final String PREF_DISPLAY_ITEMS = "display_items";
     public static final String PREF_DISPLAY_ITEMS_SORTABLE = "display_items_sortable";
+    public static final String PREF_WORKOUT_ACTIVITY_TYPES_SORTABLE = "workout_activity_types_sortable";
     public static final String PREF_SHORTCUTS = "shortcuts";
     public static final String PREF_SHORTCUTS_SORTABLE = "shortcuts_sortable";
     public static final String PREF_EXPOSE_HR_THIRDPARTY = "expose_hr_thirdparty";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband5/MiBand5Support.java
Patch:
@@ -65,5 +65,6 @@ public void phase3Initialize(TransactionBuilder builder) {
         super.phase3Initialize(builder);
         LOG.info("phase3Initialize...");
         setActivateDisplayOnLiftWristSensitivity(builder); // TODO? Move this to HuamiSupport?
+        setWorkoutActivityTypes(builder);  // TODO: Supported by other bands?
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -2817,8 +2817,8 @@ protected HuamiSupport setBeepSounds(TransactionBuilder builder) {
 
 
         if (sounds != null) {
-            final String[] soundOrder = new String[]{"button", "calls", "alarm", "notifications", "inactivity_warning", "sms", "goal"};
-            byte[] command = new byte[]{0x3c, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 7, 0, 0};
+            final String[] soundOrder = new String[]{"button", "calls", "alarm", "notifications", "inactivity_warning", "sms", "email", "goal"};
+            byte[] command = new byte[]{0x3c, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0};
             int i = 3;
             for (String sound : soundOrder) {
                 if (sounds.contains(sound)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitneo/AmazfitNeoSupport.java
Patch:
@@ -32,9 +32,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband5.MiBand5Support;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation2020;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperationNew;
 
-//import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitneo.AmazfitBand5FWHelper;
 
 public class AmazfitNeoSupport extends MiBand5Support {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitNeoSupport.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/CalendarEvents.java
Patch:
@@ -110,6 +110,9 @@ private boolean fetchSystemEvents(Context mContext) {
                 }
             }
             return true;
+        } catch (Exception e) {
+            LOG.error("could not query calendar, permission denied?");
+            return false;
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -176,8 +176,11 @@ else if (line.length() > 0 && line.charAt(0)=='{') {
                 LOG.info("UART RX JSON parsed successfully");
                 handleUartRxJSON(json);
             } catch (JSONException e) {
+                LOG.info("UART RX JSON parse failure: "+ e.getLocalizedMessage());
                 GB.toast(getContext(), "Malformed JSON from Bangle.js: " + e.getLocalizedMessage(), Toast.LENGTH_LONG, GB.ERROR);
             }
+        } else {
+            LOG.info("UART RX line started with "+(int)line.charAt(0)+" - ignoring");
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -313,7 +313,7 @@ public boolean onPreferenceChange(Preference preference, Object autoExportInterv
                         Integer.valueOf((String) autoExportInterval));
                 preference.setSummary(summary);
                 boolean auto_export_enabled = GBApplication.getPrefs().getBoolean(GBPrefs.AUTO_EXPORT_ENABLED, false);
-                PeriodicExporter.sheduleAlarm(getApplicationContext(), Integer.valueOf((String) autoExportInterval), auto_export_enabled);
+                PeriodicExporter.scheduleAlarm(getApplicationContext(), Integer.valueOf((String) autoExportInterval), auto_export_enabled);
                 return true;
             }
         });
@@ -327,7 +327,7 @@ public boolean onPreferenceChange(Preference preference, Object autoExportInterv
             @Override
             public boolean onPreferenceChange(Preference preference, Object autoExportEnabled) {
                 int autoExportInterval = GBApplication.getPrefs().getInt(GBPrefs.AUTO_EXPORT_INTERVAL, 0);
-                PeriodicExporter.sheduleAlarm(getApplicationContext(), autoExportInterval, (boolean) autoExportEnabled);
+                PeriodicExporter.scheduleAlarm(getApplicationContext(), autoExportInterval, (boolean) autoExportEnabled);
                 return true;
             }
         });
@@ -492,7 +492,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent intent)
                     .getPrefs().getBoolean(GBPrefs.AUTO_EXPORT_ENABLED, false);
             int autoExportPeriod = GBApplication
                     .getPrefs().getInt(GBPrefs.AUTO_EXPORT_INTERVAL, 0);
-            PeriodicExporter.sheduleAlarm(getApplicationContext(), autoExportPeriod, autoExportEnabled);
+            PeriodicExporter.scheduleAlarm(getApplicationContext(), autoExportPeriod, autoExportEnabled);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AutoStartReceiver.java
Patch:
@@ -38,7 +38,7 @@ public void onReceive(Context context, Intent intent) {
             } else {
                 GBApplication.deviceService().start();
             }
-
+            Log.i(TAG, "Going to enable periodic exporter");
             PeriodicExporter.enablePeriodicExport(context);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/vesc/VescControlActivity.java
Patch:
@@ -72,8 +72,8 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private void restoreValues(){
-        rpmEditText.setText(preferences.getInt(PREFS_KEY_LAST_RPM, 0));
-        breakCurrentEditText.setText(preferences.getInt(PREFS_KEY_LAST_BREAK_CURRENT, 0));
+        rpmEditText.setText(String.valueOf(preferences.getInt(PREFS_KEY_LAST_RPM, 0)));
+        breakCurrentEditText.setText(String.valueOf(preferences.getInt(PREFS_KEY_LAST_BREAK_CURRENT, 0)));
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -155,7 +155,7 @@ private void handleUartRxLine(String line) {
 
         if (">Uncaught ReferenceError: \"GB\" is not defined".equals(line))
           GB.toast(getContext(), "Gadgetbridge plugin not installed on Bangle.js", Toast.LENGTH_LONG, GB.ERROR);
-        else if (line.charAt(0)=='{') {
+        else if (line.length() > 0 && line.charAt(0)=='{') {
             // JSON - we hope!
             try {
                 JSONObject json = new JSONObject(line);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -52,9 +52,9 @@ public enum DeviceType {
     AMAZFITBIPS_LITE(25, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bips_lite),
     AMAZFITGTR2(26, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr2),
     AMAZFITGTS2(27, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2),
-    AMAZFITBIPU(28, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipupro),
+    AMAZFITBIPU(28, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
     AMAZFITVERGEL(29, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_vergel),
-    AMAZFITBIPUPRO(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
+    AMAZFITBIPUPRO(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipupro),
     AMAZFITNEO(31, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_neo),
     AMAZFITGTS2_MINI(32, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2_mini),
     ZEPP_E(33, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_zepp_e),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsCustomizer.java
Patch:
@@ -16,11 +16,13 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.activities.devicesettings;
 
+import android.os.Parcelable;
+
 /**
  * A device-specific preference handler, that allows for concrete implementations to customize the preferences in
  * the {@link DeviceSpecificSettingsFragment}.
  */
-public interface DeviceSpecificSettingsCustomizer {
+public interface DeviceSpecificSettingsCustomizer extends Parcelable {
     /**
      * Customize the settings on the {@link DeviceSpecificSettingsFragment}.
      *

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/CasioGBX100DeviceSupport.java
Patch:
@@ -424,6 +424,7 @@ public void run() {
 
     public void writeCurrentTime(TransactionBuilder builder) {
         byte[] arr = new byte[11];
+        arr[0] = CasioConstants.characteristicToByte.get("CASIO_CURRENT_TIME");
         byte[] tmp = prepareCurrentTime();
         System.arraycopy(tmp, 0, arr, 1, 10);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -470,7 +470,7 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
 
         if (getSupportedServices().contains(PineTimeJFConstants.UUID_SERVICE_MOTION)) {
             builder.notify(getCharacteristic(PineTimeJFConstants.UUID_CHARACTERISTIC_MOTION_STEP_COUNT), true);
-            builder.notify(getCharacteristic(PineTimeJFConstants.UUID_CHARACTERISTIC_MOTION_RAW_XYZ_VALUES), true);
+            //builder.notify(getCharacteristic(PineTimeJFConstants.UUID_CHARACTERISTIC_MOTION_RAW_XYZ_VALUES), false); // issue #2527
         }
 
         setInitialized(builder);
@@ -635,7 +635,6 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
         } else if (characteristicUUID.equals(PineTimeJFConstants.UUID_CHARACTERISTIC_MOTION_STEP_COUNT)) {
             int steps = BLETypeConversions.toUint32(characteristic.getValue());
             if (LOG.isDebugEnabled()) {
-                GB.toast("Steps count: " + steps, Toast.LENGTH_SHORT, GB.INFO);
                 LOG.debug("onCharacteristicChanged: MotionService:Steps=" + steps);
             }
             onReceiveStepsSample(steps);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -32,7 +32,7 @@
  * and may not be changed.
  */
 public enum DeviceType {
-    UNKNOWN(-1, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_unknown),
+    UNKNOWN(-1, R.drawable.ic_device_unknown, R.drawable.ic_device_unknown_disabled, R.string.devicetype_unknown),
     PEBBLE(1, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_pebble),
     MIBAND(10, R.drawable.ic_device_miband, R.drawable.ic_device_miband_disabled, R.string.devicetype_miband),
     MIBAND2(11, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband2),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiIcon.java
Patch:
@@ -32,14 +32,14 @@ public class HuamiIcon {
     public static final byte SNAPCHAT = 6;
     public static final byte WHATSAPP = 7;
     public static final byte RED_WHITE_FIRE_8 = 8;
-    public static final byte CHINESE_9 = 9; //taobao
+    public static final byte CHINESE_9 = 9;
     public static final byte ALARM_CLOCK = 10;
     public static final byte APP_11 = 11;
     public static final byte INSTAGRAM = 12;
     public static final byte CHAT_BLUE_13 = 13;
     public static final byte COW_14 = 14;
-    public static final byte CHINESE_15 = 15; // sender disregarded (amazfit)
-    public static final byte CHINESE_16 = 16; // sender disregarded (amazfit)
+    public static final byte CHINESE_15 = 15;
+    public static final byte CHINESE_16 = 16;
     public static final byte STAR_17 = 17;
     public static final byte APP_18 = 18;
     public static final byte CHINESE_19 = 19;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -53,14 +53,11 @@ public class GBDeviceService implements DeviceService {
     protected final Context mContext;
     private final Class<? extends Service> mServiceClass;
     public static final String[] transliterationExtras = new String[]{
-            EXTRA_NOTIFICATION_PHONENUMBER,
             EXTRA_NOTIFICATION_SENDER,
             EXTRA_NOTIFICATION_SUBJECT,
             EXTRA_NOTIFICATION_TITLE,
             EXTRA_NOTIFICATION_BODY,
             EXTRA_NOTIFICATION_SOURCENAME,
-            EXTRA_NOTIFICATION_ICONID,
-            EXTRA_CALL_PHONENUMBER,
             EXTRA_CALL_DISPLAYNAME,
             EXTRA_MUSIC_ARTIST,
             EXTRA_MUSIC_ALBUM,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -587,6 +587,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
             o.put("t", "weather");
             o.put("temp", weatherSpec.currentTemp);
             o.put("hum", weatherSpec.currentHumidity);
+            o.put("code", weatherSpec.currentConditionCode);
             o.put("txt", weatherSpec.currentCondition);
             o.put("wind", weatherSpec.windSpeed);
             o.put("wdir", weatherSpec.windDirection);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BLETypeConversions.java
Patch:
@@ -89,7 +89,7 @@ private static int getMiBand2TimeZone(int rawOffset) {
         return rawOffset;
     }
 
-    private static byte dayOfWeekToRawBytes(Calendar cal) {
+    public static byte dayOfWeekToRawBytes(Calendar cal) {
         int calValue = cal.get(Calendar.DAY_OF_WEEK);
         switch (calValue) {
             case Calendar.SUNDAY:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -837,7 +837,7 @@ private void sendReminderToDevice(final TransactionBuilder builder, int position
 
         if (reminder == null) {
             // Delete reminder
-            writeToChunked(builder, 3, new byte[]{(byte) (position & 0xFF), 0, 0, 0, 0, 0});
+            writeToChunked(builder, 2, new byte[]{(byte) 0x0b, (byte) (position & 0xFF), 0x08, 0, 0, 0, 0});
 
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/BatteryInfoActivity.java
Patch:
@@ -162,8 +162,8 @@ public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth
         battery_status_device_icon.setImageResource(gbDevice.isInitialized() ? gbDevice.getType().getIcon() : gbDevice.getType().getDisabledIcon());
         TextView battery_status_battery_level_text = (TextView) findViewById(R.id.battery_status_battery_level);
 
-        String level = gbDevice.getBatteryLevel() > 0 ? String.format("%1s%%", gbDevice.getBatteryLevel()) : "";
-        String voltage = gbDevice.getBatteryVoltage() > 0 ? String.format("%1sV", gbDevice.getBatteryVoltage()) : "";
+        String level = gbDevice.getBatteryLevel(batteryIndex) > 0 ? String.format("%1s%%", gbDevice.getBatteryLevel(batteryIndex)) : "";
+        String voltage = gbDevice.getBatteryVoltage(batteryIndex) > 0 ? String.format("%1sV", gbDevice.getBatteryVoltage(batteryIndex)) : "";
 
         battery_status_device_name_text.setText(gbDevice.getName());
         battery_status_battery_level_text.setText(level);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/fitpro/FitProDeviceCoordinator.java
Patch:
@@ -61,8 +61,8 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             String name = device.getName();
 
             if (name != null && (
-                    name.equals("M6") ||
-                    name.equals("M4") ||
+                    name.startsWith("M6") ||
+                    name.startsWith("M4") ||
                     name.equals("LH716"))
             ) {
                 return DeviceType.FITPRO;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/sony/wh1000xm3/SonyWh1000Xm3Protocol.java
Patch:
@@ -89,9 +89,9 @@ public GBDeviceEvent[] decodeResponse(byte[] res) {
             return null;
         }
 
-        int payloadLength = ((message[2] << 24) & 0xFF000000) | ((message[3] << 16) & 0xFF0000) | ((message[4] << 8) & 0xFF00) | ((message[5] << 24) & 0xFF000000);
+        int payloadLength = ((message[2] << 24) & 0xFF000000) | ((message[3] << 16) & 0xFF0000) | ((message[4] << 8) & 0xFF00) | (message[5] & 0xFF);
         if (payloadLength != message.length - 7) {
-            LOG.error("Unexpected payload length {}, expected {}", message.length - 6, payloadLength);
+            LOG.error("Unexpected payload length {}, expected {}", message.length - 7, payloadLength);
             return null;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -161,9 +161,8 @@ public boolean onLongClick(View v) {
             float batteryVoltage = device.getBatteryVoltage(batteryIndex);
             BatteryState batteryState = device.getBatteryState(batteryIndex);
             int batteryIcon = device.getBatteryIcon(batteryIndex);
-            int batteryLabel = device.getBatteryLabel(batteryIndex);
-            LOG.debug("battery icon: " + batteryIcon);
-            LOG.debug("battery index: " + batteryIndex);
+            int batteryLabel = device.getBatteryLabel(batteryIndex); //unused for now
+            batteryIcons[batteryIndex].setImageResource(R.drawable.level_list_battery);
 
             if (batteryIcon != GBDevice.BATTERY_ICON_DEFAULT){
                 batteryIcons[batteryIndex].setImageResource(batteryIcon);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/galaxy_buds/GalaxyBudsDeviceCoordinator.java
Patch:
@@ -48,8 +48,8 @@ public int getBatteryCount() {
 
     @Override
     public BatteryConfig[] getBatteryConfig() {
-        BatteryConfig battery1 = new BatteryConfig(0, R.drawable.ic_earbuds_battery, R.string.left);
-        BatteryConfig battery2 = new BatteryConfig(1, R.drawable.ic_earbuds_battery, R.string.right);
+        BatteryConfig battery1 = new BatteryConfig(0, R.drawable.ic_tws_bud_l, R.string.left_earbud);
+        BatteryConfig battery2 = new BatteryConfig(1, R.drawable.ic_tws_bud_r, R.string.right_earbud);
         return new BatteryConfig[]{battery1, battery2};
     }
 
@@ -142,7 +142,6 @@ protected void deleteDevice(@NonNull GBDevice gbDevice, @NonNull Device
     }
 
 
-
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/nothing/Ear1Coordinator.java
Patch:
@@ -128,9 +128,9 @@ public int getBatteryCount() {
 
     @Override
     public BatteryConfig[] getBatteryConfig() {
-        BatteryConfig battery1 = new BatteryConfig(0, R.drawable.ic_cases, R.string.box);
-        BatteryConfig battery2 = new BatteryConfig(1, R.drawable.ic_earbuds_battery, R.string.right);
-        BatteryConfig battery3 = new BatteryConfig(2, R.drawable.ic_earbuds_battery, R.string.left);
+        BatteryConfig battery1 = new BatteryConfig(0, R.drawable.ic_tws_case, R.string.battery_case);
+        BatteryConfig battery2 = new BatteryConfig(1, R.drawable.ic_tws_bud_l, R.string.left_earbud);
+        BatteryConfig battery3 = new BatteryConfig(2, R.drawable.ic_tws_bud_r, R.string.right_earbud);
         return new BatteryConfig[]{battery1, battery2, battery3};
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -343,8 +343,8 @@ public GBDevice toGBDevice(Device dbDevice) {
         GBDevice gbDevice = new GBDevice(dbDevice.getIdentifier(), dbDevice.getName(), dbDevice.getAlias(), deviceType);
         DeviceCoordinator coordinator = getCoordinator(gbDevice);
         for (BatteryConfig batteryConfig : coordinator.getBatteryConfig()) {
-            gbDevice.setBatteryIcon(batteryConfig.icon(), batteryConfig.getBatteryIndex());
-            gbDevice.setBatteryLabel(batteryConfig.label(), batteryConfig.getBatteryIndex());
+            gbDevice.setBatteryIcon(batteryConfig.getBatteryIcon(), batteryConfig.getBatteryIndex());
+            gbDevice.setBatteryLabel(batteryConfig.getBatteryLabel(), batteryConfig.getBatteryIndex());
         }
 
         List<DeviceAttributes> deviceAttributesList = dbDevice.getDeviceAttributesList();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -159,7 +159,7 @@ public boolean onLongClick(View v) {
 
             int batteryLevel = device.getBatteryLevel(battery);
             float batteryVoltage = device.getBatteryVoltage(battery);
-            BatteryState batteryState = device.getBatteryState();
+            BatteryState batteryState = device.getBatteryState(battery);
 
             if (batteryLevel != GBDevice.BATTERY_UNKNOWN) {
                 batteryStatusBoxes[battery].setVisibility(View.VISIBLE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -324,7 +324,7 @@ public byte[] getTimeBytes(Calendar calendar, TimeUnit precision) {
         } else {
             throw new IllegalArgumentException("Unsupported precision, only MINUTES and SECONDS are supported till now");
         }
-        byte[] tail = new byte[] { 0, BLETypeConversions.mapTimeZone(calendar.getTimeZone(), BLETypeConversions.TZ_FLAG_INCLUDE_DST_IN_TZ) };
+        byte[] tail = new byte[] { 0, BLETypeConversions.mapTimeZone(calendar, BLETypeConversions.TZ_FLAG_INCLUDE_DST_IN_TZ) };
         // 0 = adjust reason bitflags? or DST offset?? , timezone
 //        byte[] tail = new byte[] { 0x2 }; // reason
         byte[] all = BLETypeConversions.join(bytes, tail);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -288,7 +288,7 @@ public void onSetTime() {
         // Since this is a standard we should generalize this in Gadgetbridge (properly)
         GregorianCalendar now = BLETypeConversions.createCalendar();
         byte[] bytes = BLETypeConversions.calendarToRawBytes(now);
-        byte[] tail = new byte[]{0, BLETypeConversions.mapTimeZone(now.getTimeZone(), BLETypeConversions.TZ_FLAG_INCLUDE_DST_IN_TZ)};
+        byte[] tail = new byte[]{0, BLETypeConversions.mapTimeZone(now, BLETypeConversions.TZ_FLAG_INCLUDE_DST_IN_TZ)};
         byte[] all = BLETypeConversions.join(bytes, tail);
 
         TransactionBuilder builder = new TransactionBuilder("set time");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -307,8 +307,8 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                 Intent dbIntent = new Intent(this, DataManagementActivity.class);
                 startActivity(dbIntent);
                 return true;
-            case R.id.action_blacklist:
-                Intent blIntent = new Intent(this, AppBlacklistActivity.class);
+            case R.id.action_notification_management:
+                Intent blIntent = new Intent(this, NotificationManagementActivity.class);
                 startActivity(blIntent);
                 return true;
             case R.id.device_action_discover:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/AbstractMiBandFWHelper.java
Patch:
@@ -54,7 +54,7 @@ public AbstractMiBandFWHelper(Uri uri, Context context) throws IOException {
         }
 
         try (InputStream in = new BufferedInputStream(uriHelper.openInputStream())) {
-            this.fw = FileUtils.readAll(in, 1024 * 3048); // 3.0 MB
+            this.fw = FileUtils.readAll(in, 1024 * 1024 * 8); // 8.0 MB
             determineFirmwareInfo(fw);
         } catch (IOException ex) {
             throw ex; // pass through

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -737,7 +737,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             intent.putExtra(DeviceCoordinator.EXTRA_DEVICE_CANDIDATE, deviceCandidate);
             startActivity(intent);
         } else {
-            if (coordinator.getBondingStyle() == DeviceCoordinator.BONDING_STYLE_NONE) {
+            if (coordinator.getBondingStyle() == DeviceCoordinator.BONDING_STYLE_NONE ||
+                coordinator.getBondingStyle() == DeviceCoordinator.BONDING_STYLE_LAZY) {
                 LOG.info("No bonding needed, according to coordinator, so connecting right away");
                 BondingUtil.connectThenComplete(this, deviceCandidate);
                 return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casio/gbx100/CasioGBX100DeviceCoordinator.java
Patch:
@@ -61,7 +61,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
 
     @Override
     public int getBondingStyle(){
-        return BONDING_STYLE_NONE;
+        return BONDING_STYLE_LAZY;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BondingUtil.java
Patch:
@@ -190,7 +190,8 @@ public static void connectThenComplete(BondingInterface bondingInterface, GBDevi
      */
     public static void initiateCorrectBonding(final BondingInterface bondingInterface, final GBDeviceCandidate deviceCandidate) {
         int bondingStyle = DeviceHelper.getInstance().getCoordinator(deviceCandidate).getBondingStyle();
-        if (bondingStyle == DeviceCoordinator.BONDING_STYLE_NONE) {
+        if (bondingStyle == DeviceCoordinator.BONDING_STYLE_NONE ||
+            bondingStyle == DeviceCoordinator.BONDING_STYLE_LAZY ) {
             // Do nothing
             return;
         } else if (bondingStyle == DeviceCoordinator.BONDING_STYLE_ASK) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -94,6 +94,8 @@ public void deleteDevice(final GBDevice gbDevice) throws GBException {
             prefs.getPreferences().edit().remove(MiBandConst.PREF_MIBAND_ADDRESS).apply();
         }
 
+        GBApplication.deleteDeviceSpecificSharedPrefs(gbDevice.getAddress());
+
         try (DBHandler dbHandler = GBApplication.acquireDB()) {
             DaoSession session = dbHandler.getDaoSession();
             Device device = DBHelper.findDevice(gbDevice, session);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -2928,7 +2928,7 @@ public void writeToChunked2021(TransactionBuilder builder, short type, byte hand
         }
     }
 
-    protected void writeToConfiguration(TransactionBuilder builder, byte[] data) {
+    public void writeToConfiguration(TransactionBuilder builder, byte[] data) {
         if (force2021Protocol) {
             data = ArrayUtils.insert(0, data, (byte) 1);
             writeToChunked2021(builder, HuamiService.CHUNKED2021_ENDPOINT_COMPAT, getNextHandle(), data, true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/UpdateFirmwareOperation2020.java
Patch:
@@ -177,7 +177,7 @@ public boolean sendFwInfo() {
             if (getFirmwareInfo().getFirmwareType() == HuamiFirmwareType.WATCHFACE) {
                 byte[] fwBytes = firmwareInfo.getBytes();
                 if (ArrayUtils.startsWith(fwBytes, UIHH_HEADER)) {
-                    builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION),
+                    getSupport().writeToConfiguration(builder,
                             new byte[]{0x39, 0x00,
                                     sizeBytes[0],
                                     sizeBytes[1],

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -731,8 +731,8 @@ public void onNotification(NotificationSpec notificationSpec) {
 
         int subject_length = 0;
         int body_length = notificationSpec.body.getBytes(StandardCharsets.UTF_8).length;
-        if (body_length > 256) {
-            body_length = 256;
+        if (body_length > 255) {
+            body_length = 255;
         }
         int notification_length = body_length;
         byte[] subject = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -260,6 +260,9 @@ public void onNotification(NotificationSpec notificationSpec) {
         TransactionBuilder builder = new TransactionBuilder("notification");
 
         String message;
+        if (notificationSpec.body == null) {
+            notificationSpec.body = "";
+        }
 
         if (isFirmwareAtLeastVersion0_15()) {
             String senderOrTitle = nodomain.freeyourgadget.gadgetbridge.util.StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BLETypeConversions.java
Patch:
@@ -118,7 +118,9 @@ public static GregorianCalendar rawBytesToCalendar(byte[] value) {
             );
 
             if (value.length > 7) {
-                TimeZone timeZone = TimeZone.getDefault();
+                /* when we get a timezone offset via BLE, we cannot know which timeszone this is (only its offset), so
+                   set to UTC which does not use DST to prevent bugs when setting the raw offset below */
+                TimeZone timeZone = TimeZone.getTimeZone("UTC");
                 timeZone.setRawOffset(value[7] * 15 * 60 * 1000);
                 timestamp.setTimeZone(timeZone);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BLETypeConversions.java
Patch:
@@ -227,7 +227,7 @@ public static byte mapTimeZone(TimeZone timeZone) {
      */
     public static byte mapTimeZone(TimeZone timeZone, int timezoneFlags) {
         int offsetMillis = timeZone.getRawOffset();
-        if (false && timezoneFlags == TZ_FLAG_INCLUDE_DST_IN_TZ) {
+        if (timezoneFlags == TZ_FLAG_INCLUDE_DST_IN_TZ) {
             offsetMillis += timeZone.getDSTSavings();
         }
         int utcOffsetInQuarterHours = (offsetMillis / (1000 * 60 * 15));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -347,8 +347,10 @@ private DeviceSupport createBTDeviceSupport(GBDevice gbDevice) throws GBExceptio
                         break;
                     case SMAQ2OSS:
                         deviceSupport = new ServiceDeviceSupport(new SMAQ2OSSSupport(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
+                        break;
                     case UM25:
                         deviceSupport = new ServiceDeviceSupport(new UM25Support(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
+                        break;
                     case DOMYOS_T540:
                         deviceSupport = new ServiceDeviceSupport(new DomyosT540Support(), EnumSet.of(ServiceDeviceSupport.Flags.THROTTLING, ServiceDeviceSupport.Flags.BUSY_CHECKING));
                         break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebblePairingActivity.java
Patch:
@@ -73,7 +73,9 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_pebble_pairing);
 
         message = findViewById(R.id.pebble_pair_message);
-        deviceCandidate = getIntent().getParcelableExtra(DeviceCoordinator.EXTRA_DEVICE_CANDIDATE);
+        Intent intent = getIntent();
+        intent.setExtrasClassLoader(GBDeviceCandidate.class.getClassLoader());
+        deviceCandidate = intent.getParcelableExtra(DeviceCoordinator.EXTRA_DEVICE_CANDIDATE);
 
         String macAddress = null;
         if (deviceCandidate != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleCoordinator.java
Patch:
@@ -170,7 +170,7 @@ public String getAppFileExtension() {
     public boolean supportsAppListFetching() {
         GBDevice mGBDevice = GBApplication.app().getDeviceManager().getSelectedDevice();
         if (mGBDevice != null && mGBDevice.getFirmwareVersion() != null) {
-            return PebbleUtils.getFwMajor(mGBDevice.getFirmwareVersion()) >= 3;
+            return PebbleUtils.getFwMajor(mGBDevice.getFirmwareVersion()) < 3;
         }
         return false;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfittrexpro/AmazfitTRexProCoordinator.java
Patch:
@@ -88,7 +88,7 @@ public boolean supportsMusicInfo() {
     }
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfittrex,
+                R.xml.devicesettings_amazfittrexpro,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfittrexpro/AmazfitTRexProSupport.java
Patch:
@@ -23,15 +23,15 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfittrex.AmazfitTRexFWHelper;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfittrexpro.AmazfitTRexProFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgts.AmazfitGTSSupport;
 
 public class AmazfitTRexProSupport extends AmazfitGTSSupport {
 
     @Override
     public HuamiFWHelper createFWHelper(Uri uri, Context context) throws IOException {
-        return new AmazfitTRexFWHelper(uri, context);
+        return new AmazfitTRexProFWHelper(uri, context);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -41,6 +41,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_HYBRID_HR_FORCE_WHITE_COLOR = "force_white_color_scheme";
     public static final String PREF_HYBRID_HR_DRAW_WIDGET_CIRCLES = "widget_draw_circles";
     public static final String PREF_HYBRID_HR_SAVE_RAW_ACTIVITY_FILES = "save_raw_activity_files";
+    public static final String PREF_HYBRID_HR_DANGEROUS_EXTERNAL_INTENTS = "dangerous_external_intents";
 
     public static final String PREF_LIFTWRIST_NOSHED = "activate_display_on_lift_wrist_noshed";
     public static final String PREF_DISCONNECTNOTIF_NOSHED = "disconnect_notification_noshed";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -67,6 +67,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_DO_NOT_DISTURB_NOAUTO;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_FAKE_RING_DURATION;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_FIND_PHONE_ENABLED;
+import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_HYBRID_HR_DANGEROUS_EXTERNAL_INTENTS;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_HYBRID_HR_DRAW_WIDGET_CIRCLES;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_HYBRID_HR_FORCE_WHITE_COLOR;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_HYBRID_HR_SAVE_RAW_ACTIVITY_FILES;
@@ -408,6 +409,7 @@ public void run() {
         addPreferenceHandlerFor(PREF_HYBRID_HR_DRAW_WIDGET_CIRCLES);
         addPreferenceHandlerFor(PREF_HYBRID_HR_FORCE_WHITE_COLOR);
         addPreferenceHandlerFor(PREF_HYBRID_HR_SAVE_RAW_ACTIVITY_FILES);
+        addPreferenceHandlerFor(PREF_HYBRID_HR_DANGEROUS_EXTERNAL_INTENTS);
 
         addPreferenceHandlerFor(PREF_SONYSWR12_STAMINA);
         addPreferenceHandlerFor(PREF_SONYSWR12_LOW_VIBRATION);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -367,7 +367,9 @@ public void onReceive(Context context, Intent intent) {
                         break;
                     }
                     case QHYBRID_COMMAND_UPLOAD_FILE:{
-                        handleFileUploadIntent(intent);
+                        if (GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()).getBoolean(DeviceSettingsPreferenceConst.PREF_HYBRID_HR_DANGEROUS_EXTERNAL_INTENTS, true)) {
+                            handleFileUploadIntent(intent);
+                        }
                         break;
                     }
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/AbstractMiBandFWHelper.java
Patch:
@@ -54,7 +54,7 @@ public AbstractMiBandFWHelper(Uri uri, Context context) throws IOException {
         }
 
         try (InputStream in = new BufferedInputStream(uriHelper.openInputStream())) {
-            this.fw = FileUtils.readAll(in, 1024 * 2048); // 2.0 MB
+            this.fw = FileUtils.readAll(in, 1024 * 3048); // 3.0 MB
             determineFirmwareInfo(fw);
         } catch (IOException ex) {
             throw ex; // pass through

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband6/MiBand6Coordinator.java
Patch:
@@ -13,7 +13,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband5.MiBand5Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
@@ -42,8 +41,8 @@ public DeviceType getDeviceType() {
 
     @Override
     public InstallHandler findInstallHandler(Uri uri, Context context) {
-        // TODO!
-        return null;
+        MiBand6FWInstallHandler handler = new MiBand6FWInstallHandler(uri, context);
+        return handler.isValid() ? handler : null;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/quickreply/QuickReplyConfigurationPutRequest.java
Patch:
@@ -19,6 +19,7 @@
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil_hr.FossilHRWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.file.FileHandle;
@@ -36,7 +37,7 @@ private static byte[] createFile(String[] replies) {
 
         byte[] mysteryHeader = new byte[]{(byte) 0x02, (byte) 0x0b, (byte) 0x46, (byte) 0x00, (byte) 0x03, (byte) 0x19, (byte) 0x00, (byte) 0x00, (byte) 0x00};
 
-        Charset charsetUTF8 = Charset.forName("UTF-8");
+        Charset charsetUTF8 = StandardCharsets.UTF_8;
         String iconName = StringUtils.terminateNull("icMessage.icon");
         byte[] iconNameBytes = iconName.getBytes(charsetUTF8);
 
@@ -46,7 +47,7 @@ private static byte[] createFile(String[] replies) {
                 reply = reply.substring(0, 50);
             }
             processedReplies[index] = StringUtils.terminateNull(reply);
-            fileLength += 8 + processedReplies[index].length() + iconNameBytes.length;
+            fileLength += 8 + processedReplies[index].getBytes(charsetUTF8).length + iconNameBytes.length;
         }
 
         ByteBuffer mainBuffer = ByteBuffer.allocate(mysteryHeader.length + 4 + fileLength);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiMenuType.java
Patch:
@@ -50,12 +50,15 @@ class HuamiMenuType {
         put("goal", 0x21);
         put("sleep", 0x23);
         put("spo2", 0x24);
+        put("events", 0x26);
+        put("widgets", 0x28);
         put("breathing",0x33);
         put("steps",0x34);
         put("distance",0x35);
         put("calories",0x36);
         put("pomodoro", 0x38);
         put("alexa", 0x39);
+        put("temperature", 0x40);
         put("battery", 0x3a);
     }};
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr2/AmazfitGTR2FWHelper.java
Patch:
@@ -24,6 +24,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgtr.AmazfitGTRFirmwareInfo;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgtr2.AmazfitGTR2FirmwareInfo;
 
 public class AmazfitGTR2FWHelper extends HuamiFWHelper {
 
@@ -33,7 +34,7 @@ public AmazfitGTR2FWHelper(Uri uri, Context context) throws IOException {
 
     @Override
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
-        firmwareInfo = new AmazfitGTRFirmwareInfo(wholeFirmwareBytes);
+        firmwareInfo = new AmazfitGTR2FirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
             throw new IllegalArgumentException("Not an Amazfit GTR 2 firmware");
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgtr2/AmazfitGTR2FirmwareInfo.java
Patch:
@@ -78,7 +78,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER_UIHH) || ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgtr2/AmazfitGTR2eFirmwareInfo.java
Patch:
@@ -78,7 +78,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER_UIHH) || ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts2/AmazfitGTS2FirmwareInfo.java
Patch:
@@ -78,7 +78,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER_UIHH) || ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts2/AmazfitGTS2MiniFirmwareInfo.java
Patch:
@@ -78,7 +78,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER_UIHH) || ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts2/AmazfitGTS2eFirmwareInfo.java
Patch:
@@ -78,7 +78,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER_UIHH) || ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsActivity.java
Patch:
@@ -53,6 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 if (coordinator.supportsActivityTracking()) {
                     supportedSettings = ArrayUtils.addAll(supportedSettings, R.xml.devicesettings_chartstabs);
                 }
+                supportedSettings = ArrayUtils.addAll(supportedSettings, R.xml.devicesettings_transliteration);
                 fragment = DeviceSpecificSettingsFragment.newInstance(device.getAddress(), supportedSettings);
             }
             getSupportFragmentManager()

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -70,6 +70,7 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_SONYSWR12_SMART_INTERVAL = "smart_alarm_interval_preference";
 
     public static final String PREF_BT_CONNECTED_ADVERTISEMENT = "bt_connected_advertisement";
+    public static final String PREF_TRANSLITERATION_ENABLED = "pref_transliteration_enabled";
 
     public static final String PREF_SOUNDS = "sounds";
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -39,6 +39,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.makibeshr3.MakibesHR3Constants;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.CannedMessagesSpec;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 import nodomain.freeyourgadget.gadgetbridge.util.XTimePreference;
@@ -85,6 +86,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_SONYSWR12_STAMINA;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_SOUNDS;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_TIMEFORMAT;
+import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_TRANSLITERATION_ENABLED;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_VIBRATION_STRENGH_PERCENTAGE;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_WEARLOCATION;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_ACTIVATE_DISPLAY_ON_LIFT;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -2445,7 +2445,7 @@ protected HuamiSupport setDisplayItemsOld(TransactionBuilder builder, boolean is
     protected HuamiSupport setDisplayItemsNew(TransactionBuilder builder, boolean isShortcuts, boolean forceWatchface, int defaultSettings) {
         SharedPreferences prefs = GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress());
         String pages;
-        List<String> enabledList;
+        ArrayList<String> enabledList;
         byte menuType;
         if (isShortcuts) {
             menuType = (byte) 0xfd;
@@ -2457,9 +2457,9 @@ protected HuamiSupport setDisplayItemsNew(TransactionBuilder builder, boolean is
             LOG.info("Setting menu items");
         }
         if (pages == null) {
-            enabledList = Arrays.asList(getContext().getResources().getStringArray(defaultSettings));
+            enabledList = new ArrayList<>(Arrays.asList(getContext().getResources().getStringArray(defaultSettings)));
         } else {
-            enabledList = Arrays.asList(pages.split(","));
+            enabledList = new ArrayList<>(Arrays.asList(pages.split(",")));
         }
         if (forceWatchface) {
             enabledList.add(0, "watchface");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitband5/AmazfitBand5Support.java
Patch:
@@ -35,13 +35,13 @@ public class AmazfitBand5Support extends MiBand5Support {
 
     @Override
     protected AmazfitBand5Support setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_amazfitband5_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_amazfitband5_display_items_default);
         return this;
     }
 
     @Override
     protected AmazfitBand5Support setShortcuts(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, true, R.array.pref_amazfitband5_shortcuts_default);
+        setDisplayItemsNew(builder, true, true, R.array.pref_amazfitband5_shortcuts_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbips/AmazfitBipSSupport.java
Patch:
@@ -83,13 +83,13 @@ public UpdateFirmwareOperation createUpdateFirmwareOperation(Uri uri) {
 
     @Override
     protected AmazfitBipSSupport setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_bips_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_bips_display_items_default);
         return this;
     }
 
     @Override
     protected AmazfitBipSSupport setShortcuts(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, true, R.array.pref_bips_display_items_default);
+        setDisplayItemsNew(builder, true, true, R.array.pref_bips_display_items_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts/AmazfitGTSSupport.java
Patch:
@@ -71,7 +71,7 @@ public UpdateFirmwareOperation createUpdateFirmwareOperation(Uri uri) {
 
     @Override
     protected AmazfitGTSSupport setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_gts_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_gts_display_items_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfittrex/AmazfitTRexSupport.java
Patch:
@@ -25,7 +25,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfittrex.AmazfitTRexFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbips.AmazfitBipSSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgts.AmazfitGTSSupport;
 
 public class AmazfitTRexSupport extends AmazfitGTSSupport {
@@ -37,7 +36,7 @@ public HuamiFWHelper createFWHelper(Uri uri, Context context) throws IOException
 
     @Override
     protected AmazfitTRexSupport setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_trex_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_trex_display_items_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitvergel/AmazfitVergeLSupport.java
Patch:
@@ -32,7 +32,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitvergel.AmazfitVergeLFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation2020;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperationNew;
 
 public class AmazfitVergeLSupport extends AmazfitBipSupport {
     private static final Logger LOG = LoggerFactory.getLogger(AmazfitVergeLSupport.class);
@@ -49,7 +48,7 @@ protected byte getAuthFlags() {
 
     @Override
     protected AmazfitVergeLSupport setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_gts_display_items_values);
+        setDisplayItemsNew(builder, false, true, R.array.pref_gts_display_items_values);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitx/AmazfitXSupport.java
Patch:
@@ -35,13 +35,13 @@ public class AmazfitXSupport extends MiBand5Support {
 
     @Override
     protected AmazfitXSupport setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_amazfitband5_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_amazfitband5_display_items_default);
         return this;
     }
 
     @Override
     protected AmazfitXSupport setShortcuts(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, true, R.array.pref_amazfitband5_shortcuts_default);
+        setDisplayItemsNew(builder, true, true, R.array.pref_amazfitband5_shortcuts_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband5/MiBand5Support.java
Patch:
@@ -35,13 +35,13 @@ public class MiBand5Support extends MiBand4Support {
 
     @Override
     protected MiBand5Support setDisplayItems(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, false, R.array.pref_miband5_display_items_default);
+        setDisplayItemsNew(builder, false, true, R.array.pref_miband5_display_items_default);
         return this;
     }
 
     @Override
     protected MiBand5Support setShortcuts(TransactionBuilder builder) {
-        setDisplayItemsNew(builder, true, R.array.pref_miband5_shortcuts_default);
+        setDisplayItemsNew(builder, true, true, R.array.pref_miband5_shortcuts_default);
         return this;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -148,7 +148,7 @@ public FossilHRWatchAdapter(QHybridSupport deviceSupport) {
     HashMap<String, Bitmap> appIconCache = new HashMap<>();
     String lastPostedApp = null;
 
-    List<ApplicationInformation> installedApplications;
+    List<ApplicationInformation> installedApplications = new ArrayList();
 
     enum CONNECTION_MODE {
         NOT_INITIALIZED,
@@ -1430,4 +1430,4 @@ private Version getCleanFWVersion() {
         }
         return null;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/HRConfigActivity.java
Patch:
@@ -421,13 +421,10 @@ public void onClick(View v) {
                     .setTitle("create action")
                     .show();
         } else if(v.getId() == R.id.qhybrid_file_management_trigger) {
-            finish();
             startActivity(new Intent(getApplicationContext(), FileManagementActivity.class));
         } else if(v.getId() == R.id.qhybrid_apps_management_trigger) {
-            finish();
             startActivity(new Intent(getApplicationContext(), AppsManagementActivity.class));
         } else if(v.getId() == R.id.calibration_trigger) {
-            finish();
             startActivity(new Intent(getApplicationContext(), CalibrationActivity.class));
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -472,7 +472,7 @@ private boolean checkNotificationContentForWhiteAndBlackList(String packageName,
     private void handleCallNotification(StatusBarNotification sbn) {
         String app = sbn.getPackageName();
         LOG.debug("got call from: " + app);
-        if (app.equals("com.android.dialer") || app.equals("com.android.incallui")) {
+        if (app.equals("com.android.dialer") || app.equals("com.android.incallui") || app.equals("com.google.android.dialer")) {
             LOG.debug("Ignoring non-voip call");
             return;
         }
@@ -786,6 +786,7 @@ private boolean shouldIgnoreSource(StatusBarNotification sbn) {
         if (source.equals("android") ||
                 source.equals("com.android.systemui") ||
                 source.equals("com.android.dialer") ||
+                source.equals("com.google.android.dialer") ||
                 source.equals("com.cyanogenmod.eleven")) {
             LOG.info("Ignoring notification, is a system event");
             return true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ActivitySummariesAdapter.java
Patch:
@@ -397,6 +397,9 @@ protected boolean isSummary(BaseActivitySummary item, int position) {
         return position == 0;
     }
 
+    @Override
+    protected boolean isEmptySession(BaseActivitySummary item, int position) { return false; }
+
     @Override
     protected boolean isEmptySummary(BaseActivitySummary item) {
         return false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBAccess.java
Patch:
@@ -39,6 +39,7 @@ public Context getContext() {
     }
 
     protected abstract void doInBackground(DBHandler handler);
+    protected abstract void onPreExecute();
 
     @Override
     protected Object doInBackground(Object[] params) {
@@ -57,6 +58,8 @@ protected void onPostExecute(Object o) {
         }
     }
 
+
+
     protected void displayError(Throwable error) {
         GB.toast(getContext(), getContext().getString(R.string.dbaccess_error_executing, error.getMessage()), Toast.LENGTH_LONG, GB.ERROR, error);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -330,6 +330,7 @@ private DeviceSupport createBTDeviceSupport(GBDevice gbDevice) throws GBExceptio
                         break;
                     case SONY_SWR12:
                         deviceSupport = new ServiceDeviceSupport(new SonySWR12DeviceSupport(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
+                        break;
                     case WASPOS:
                         deviceSupport = new ServiceDeviceSupport(new WaspOSDeviceSupport(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
                         break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -53,6 +53,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.Q8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.SG2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband5.AmazfitBand5Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbips.AmazfitBipSLiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2MiniCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2eCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitneo.AmazfitNeoCoordinator;
@@ -250,6 +251,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitGTS2MiniCoordinator());
         result.add(new AmazfitVergeLCoordinator());
         result.add(new AmazfitBipSCoordinator());
+        result.add(new AmazfitBipSLiteCoordinator());
         result.add(new AmazfitBipUCoordinator());
         result.add(new AmazfitBipUProCoordinator());
         result.add(new AmazfitBand5Coordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -54,6 +54,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.SG2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband5.AmazfitBand5Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2MiniCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2eCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitneo.AmazfitNeoCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipLiteCoordinator;
@@ -245,6 +246,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitTRexCoordinator());
         result.add(new AmazfitGTSCoordinator());
         result.add(new AmazfitGTS2Coordinator());
+        result.add(new AmazfitGTS2eCoordinator());
         result.add(new AmazfitGTS2MiniCoordinator());
         result.add(new AmazfitVergeLCoordinator());
         result.add(new AmazfitBipSCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -59,7 +59,8 @@ public enum DeviceType {
     AMAZFITGTS2_MINI(32, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2_mini),
     ZEPP_E(33, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_zepp_e),
     AMAZFITGTR2E(34, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr2e),
-    AMAZFITGTS2E(34, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2e),
+    AMAZFITGTS2E(35, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled,R.string .devicetype_amazfit_gts2e),
+    AMAZFITX(36, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_amazfit_x),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),
     EXRIZUK8(42, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_exrizu_k8),
@@ -93,7 +94,6 @@ public enum DeviceType {
     SONY_SWR12(310, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_sonyswr12),
     LIVEVIEW(320, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     WASPOS(330, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_waspos),
-    AMAZFITX(340, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_amazfit_x),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts2/AmazfitGTS2eCoordinator.java
Patch:
@@ -47,7 +47,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         try {
             BluetoothDevice device = candidate.getDevice();
             String name = device.getName();
-            if (name != null && name.equalsIgnoreCase("Amazfit GTR 2e")) {
+            if (name != null && name.equalsIgnoreCase("Amazfit GTS 2e")) {
                 return DeviceType.AMAZFITGTS2E;
             }
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr2/AmazfitGTR2Coordinator.java
Patch:
@@ -88,7 +88,7 @@ public boolean supportsMusicInfo() {
     }
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitgtsgtr,
+                R.xml.devicesettings_amazfitgtsgtr2,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr2/AmazfitGTR2eCoordinator.java
Patch:
@@ -89,7 +89,7 @@ public boolean supportsMusicInfo() {
     
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitgtsgtr,
+                R.xml.devicesettings_amazfitgtsgtr2,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts2/AmazfitGTS2Coordinator.java
Patch:
@@ -88,7 +88,7 @@ public boolean supportsMusicInfo() {
     }
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitgtsgtr,
+                R.xml.devicesettings_amazfitgtsgtr2,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts2/AmazfitGTS2eCoordinator.java
Patch:
@@ -89,7 +89,7 @@ public boolean supportsMusicInfo() {
     
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitgtsgtr,
+                R.xml.devicesettings_amazfitgtsgtr2,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -59,6 +59,7 @@ public enum DeviceType {
     AMAZFITGTS2_MINI(32, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2_mini),
     ZEPP_E(33, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_zepp_e),
     AMAZFITGTR2E(34, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr2e),
+    AMAZFITGTS2E(34, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2e),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),
     EXRIZUK8(42, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_exrizu_k8),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -91,6 +91,7 @@ public enum DeviceType {
     VIBRATISSIMO(300, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     SONY_SWR12(310, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_sonyswr12),
     LIVEVIEW(320, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
+    WASPOS(330, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_waspos),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -81,6 +81,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.sonyswr12.SonySWR12DeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.tlw64.TLW64Support;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.vibratissimo.VibratissimoSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.waspos.WaspOSDeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.watch9.Watch9DeviceSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.xwatch.XWatchSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.zeppe.ZeppESupport;
@@ -320,6 +321,8 @@ private DeviceSupport createBTDeviceSupport(GBDevice gbDevice) throws GBExceptio
                         break;
                     case SONY_SWR12:
                         deviceSupport = new ServiceDeviceSupport(new SonySWR12DeviceSupport(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
+                    case WASPOS:
+                        deviceSupport = new ServiceDeviceSupport(new WaspOSDeviceSupport(), EnumSet.of(ServiceDeviceSupport.Flags.BUSY_CHECKING));
                         break;
                 }
                 if (deviceSupport != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -99,6 +99,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.sonyswr12.SonySWR12DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.tlw64.TLW64Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.vibratissimo.VibratissimoCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.waspos.WaspOSCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.watch9.Watch9DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.xwatch.XWatchCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeCoordinator;
@@ -286,6 +287,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new SG2Coordinator());
         result.add(new LefunDeviceCoordinator());
         result.add(new SonySWR12DeviceCoordinator());
+        result.add(new WaspOSCoordinator());
 
         return result;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr2e/AmazfitGTR2eFWHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgtr.AmazfitGTRFirmwareInfo;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgtr2e.AmazfitGTR2eFirmwareInfo;
 
 public class AmazfitGTR2eFWHelper extends HuamiFWHelper {
 
@@ -33,7 +33,7 @@ public AmazfitGTR2eFWHelper(Uri uri, Context context) throws IOException {
 
     @Override
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
-        firmwareInfo = new AmazfitGTRFirmwareInfo(wholeFirmwareBytes);
+        firmwareInfo = new AmazfitGTR2eFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
             throw new IllegalArgumentException("Not an Amazfit GTR 2e firmware");
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/parser/ActivityFileParser.java
Patch:
@@ -23,7 +23,7 @@
 public class ActivityFileParser {
     // state flags;
     int heartRateQuality;
-    ActivityEntry.WEARING_STATE wearingState = ActivityEntry.WEARING_STATE.UNKNOWN;
+    ActivityEntry.WEARING_STATE wearingState = ActivityEntry.WEARING_STATE.WEARING;
     int currentTimestamp = -1;
     ActivityEntry currentSample = null;
     int currentId = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts2/AmazfitGTS2MiniCoordinator.java
Patch:
@@ -44,7 +44,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         try {
             BluetoothDevice device = candidate.getDevice();
             String name = device.getName();
-            if (name != null && name.equalsIgnoreCase("Amazfit GTS 2 Mini")) {
+            if (name != null && name.equalsIgnoreCase("Amazfit GTS2 mini")) {
                 return DeviceType.AMAZFITGTS2_MINI;
             }
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts2/AmazfitGTS2FWHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgtr.AmazfitGTRFirmwareInfo;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgts2.AmazfitGTS2FirmwareInfo;
 
 public class AmazfitGTS2FWHelper extends HuamiFWHelper {
 
@@ -33,7 +33,7 @@ public AmazfitGTS2FWHelper(Uri uri, Context context) throws IOException {
 
     @Override
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
-        firmwareInfo = new AmazfitGTRFirmwareInfo(wholeFirmwareBytes);
+        firmwareInfo = new AmazfitGTS2FirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
             throw new IllegalArgumentException("Not an Amazfit GTS 2 firmware");
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -56,6 +56,7 @@ public enum DeviceType {
     AMAZFITVERGEL(29, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_vergel),
     AMAZFITBIPUPRO(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
     AMAZFITNEO(31, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_neo),
+    AMAZFITGTS2_MINI(32, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2_mini),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),
     EXRIZUK8(42, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_exrizu_k8),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -53,6 +53,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.Q8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.SG2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband5.AmazfitBand5Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2MiniCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitneo.AmazfitNeoCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipLiteCoordinator;
@@ -237,6 +238,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitTRexCoordinator());
         result.add(new AmazfitGTSCoordinator());
         result.add(new AmazfitGTS2Coordinator());
+        result.add(new AmazfitGTS2MiniCoordinator());
         result.add(new AmazfitVergeLCoordinator());
         result.add(new AmazfitBipSCoordinator());
         result.add(new AmazfitBipUCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/WidgetConfigurationActivity.java
Patch:
@@ -119,12 +119,11 @@ public LinkedHashMap getAllDevices(Context appContext) {
                 Device dbDevice = DBHelper.findDevice(device, daoSession);
                 int icon = device.isInitialized() ? device.getType().getIcon() : device.getType().getDisabledIcon();
                 if (dbDevice != null && coordinator != null
-                        && coordinator.supportsActivityTracks()
+                        && (coordinator.supportsActivityDataFetching() || coordinator.supportsActivityTracking())
                         && !newMap.containsKey(device.getAliasOrName())) {
                     newMap.put(device.getAliasOrName(), new Pair(device.getAddress(), icon));
                 }
             }
-
         } catch (Exception e) {
             LOG.error("Error getting list of all devices: " + e);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiConst.java
Patch:
@@ -52,6 +52,8 @@ public class HuamiConst {
     public static final String MI_BAND4_NAME = "Mi Smart Band 4";
     public static final String MI_BAND5_NAME = "Mi Smart Band 5";
     public static final String AMAZFIT_BAND5_NAME = "Amazfit Band 5";
+    public static final String AMAZFIT_NEO_NAME = "Amazfit Neo";
+
 
     public static final String PREF_ACTIVATE_DISPLAY_ON_LIFT = "activate_display_on_lift_wrist";
     public static final String PREF_DISPLAY_ON_LIFT_START = "display_on_lift_start";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -55,6 +55,7 @@ public enum DeviceType {
     AMAZFITBIPU(28, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
     AMAZFITVERGEL(29, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_vergel),
     AMAZFITBIPUPRO(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
+    AMAZFITNEO(31, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_neo),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),
     EXRIZUK8(42, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_exrizu_k8),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -53,6 +53,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.Q8Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.SG2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitband5.AmazfitBand5Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitneo.AmazfitNeoCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipLiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbips.AmazfitBipSCoordinator;
@@ -241,6 +242,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitBipUCoordinator());
         result.add(new AmazfitBipUProCoordinator());
         result.add(new AmazfitBand5Coordinator());
+        result.add(new AmazfitNeoCoordinator());
         result.add(new MiBand3Coordinator());
         result.add(new MiBand4Coordinator());
         result.add(new MiBand5Coordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts2/AmazfitGTS2Support.java
Patch:
@@ -23,6 +23,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2FWHelper;
+import nodomain.freeyourgadget.gadgetbridge.model.CallSpec;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitgts.AmazfitGTSSupport;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.operations.UpdateFirmwareOperation2020;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -53,9 +53,8 @@ public enum DeviceType {
     AMAZFITGTR2(26, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr2),
     AMAZFITGTS2(27, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gts2),
     AMAZFITBIPU(28, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
-    AMAZFITBIPUPRO(29, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
-    AMAZFITVERGEL(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_vergel),
-    LIVEVIEW(31, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
+    AMAZFITVERGEL(29, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_vergel),
+    AMAZFITBIPUPRO(30, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bipu),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),
     EXRIZUK8(42, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_exrizu_k8),
@@ -87,6 +86,7 @@ public enum DeviceType {
     NUTMINI(251, R.drawable.ic_device_itag, R.drawable.ic_device_itag_disabled, R.string.devicetype_nut_mini),
     VIBRATISSIMO(300, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     SONY_SWR12(310, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_sonyswr12),
+    LIVEVIEW(320, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -61,6 +61,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRLiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr2.AmazfitGTR2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts.AmazfitGTSCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts2.AmazfitGTS2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitvergel.AmazfitVergeLCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfittrex.AmazfitTRexCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband2.MiBand2Coordinator;
@@ -231,6 +232,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitGTR2Coordinator());
         result.add(new AmazfitTRexCoordinator());
         result.add(new AmazfitGTSCoordinator());
+        result.add(new AmazfitGTS2Coordinator());
         result.add(new AmazfitVergeLCoordinator());
         result.add(new AmazfitBipSCoordinator());
         result.add(new AmazfitBipUCoordinator());

File: app/src/main/java/ru/gelin/android/weather/notification/ParcelableWeather2.java
Patch:
@@ -83,7 +83,7 @@ private ParcelableWeather2(Parcel in) {
                 Bundle forecastBundle = in.readBundle(getClass().getClassLoader());
                 String[] forecastConditionType = forecastBundle.getStringArray("weather_condition_types");
                 int forecastConditionCode = 0;
-                if (forecastConditionType != null) {
+                if (forecastConditionType != null && forecastConditionType.length > 0) {
                     forecastConditionCode = weatherConditionTypesToOpenWeatherMapIds(forecastConditionType[0]);
                 }
                 int forecastLowTemp = forecastBundle.getInt("weather_low_temp");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/WidgetPreferenceStorage.java
Patch:
@@ -25,7 +25,6 @@ public String getSavedDeviceAddress(Context context, int appWidgetId) {
         JSONArray savedWidgetsPreferencesDataArray = null;
         try {
             savedWidgetsPreferencesDataArray = new JSONArray(savedWidgetsPreferencesData);
-            savedWidgetsPreferencesDataArray = new JSONArray("fdsfdsfsffs");
         } catch (
                 JSONException e) {
             LOG.error(e.getMessage());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesFilter.java
Patch:
@@ -381,7 +381,7 @@ private void setTimePeriodFilter(String selection) {
         update_filter_fields();
     }
 
-    private LinkedHashMap getAllDevices(Context appContext) {
+    public LinkedHashMap getAllDevices(Context appContext) {
         DaoSession daoSession;
         GBApplication gbApp = (GBApplication) appContext;
         LinkedHashMap<String, Pair<Long, Integer>> newMap = new LinkedHashMap<>(1);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbipu/AmazfitBipUCoordinator.java
Patch:
@@ -85,7 +85,7 @@ public boolean supportsMusicInfo() {
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitbips,
+                R.xml.devicesettings_amazfitbipu,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_custom_emoji_font,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -645,6 +645,9 @@ protected void sendNotificationNew(NotificationSpec notificationSpec, boolean ha
         if (notificationSpec.body != null) {
             message += StringUtils.truncate(notificationSpec.body, 512);
         }
+        if (notificationSpec.body == null && notificationSpec.subject == null) {
+            message += " "; // if we have no body we have to send at least something on some devices, else they reboot (Bip S)
+        }
 
         try {
             TransactionBuilder builder = performInitialized("new notification");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfittrex/AmazfitTRexCoordinator.java
Patch:
@@ -88,7 +88,7 @@ public boolean supportsMusicInfo() {
     }
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitgtsgtr,
+                R.xml.devicesettings_amazfittrex,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -54,6 +54,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipLiteCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbips.AmazfitBipSCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbipu.AmazfitBipUCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor.AmazfitCorCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor2.AmazfitCor2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRCoordinator;
@@ -230,6 +231,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitTRexCoordinator());
         result.add(new AmazfitGTSCoordinator());
         result.add(new AmazfitBipSCoordinator());
+        result.add(new AmazfitBipUCoordinator());
         result.add(new AmazfitBand5Coordinator());
         result.add(new MiBand3Coordinator());
         result.add(new MiBand4Coordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casio/operations/GetConfigurationOperation.java
Patch:
@@ -51,7 +51,7 @@ protected void operationFinished() {
         operationStatus = OperationStatus.FINISHED;
         if (getDevice() != null) {
             try {
-                TransactionBuilder builder = performInitialized("finishe operation");
+                TransactionBuilder builder = performInitialized("finished operation");
                 builder.wait(0);
                 builder.setGattCallback(null); // unset ourselves from being the queue's gatt callback
                 builder.queue(getQueue());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BondingUtil.java
Patch:
@@ -179,7 +179,7 @@ public static void connectThenComplete(BondingInterface bondingInterface, GBDevi
         toast(bondingInterface.getContext(), bondingInterface.getContext().getString(R.string.discovery_trying_to_connect_to, device.getName()), Toast.LENGTH_SHORT, GB.INFO);
         // Disconnect when LE Pebble so that the user can manually initiate a connection
         GBApplication.deviceService().disconnect();
-        GBApplication.deviceService().connect(device);
+        GBApplication.deviceService().connect(device, true);
         bondingInterface.onBondingComplete(true);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -333,7 +333,7 @@ private void showFabIfNeccessary() {
         if (GBApplication.getPrefs().getBoolean("display_add_device_fab", true)) {
             fab.show();
         } else {
-            if (deviceListView.getChildCount() < 1) {
+            if (deviceManager.getDevices().size() < 1) {
                 fab.show();
             } else {
                 fab.hide();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepChartFragment.java
Patch:
@@ -421,6 +421,7 @@ protected void setupLegend(Chart chart) {
         deepSleepEntry.formColor = akDeepSleep.color;
         legendEntries.add(deepSleepEntry);
         heartRateIcon.setVisibility(View.GONE); //hide heart icon
+        intensityTotalIcon.setVisibility(View.GONE); //hide intensity icon
 
         if (supportsHeartrate(getChartsHost().getDevice())) {
             LegendEntry hrEntry = new LegendEntry();
@@ -433,6 +434,7 @@ protected void setupLegend(Chart chart) {
                 hrAverageEntry.formColor = Color.RED;
                 legendEntries.add(hrAverageEntry);
                 heartRateIcon.setVisibility(View.VISIBLE);
+                intensityTotalIcon.setVisibility(View.VISIBLE);
             }
         }
         chart.getLegend().setCustom(legendEntries);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -1187,7 +1187,9 @@ protected void handleBackgroundCharacteristic(BluetoothGattCharacteristic charac
         byte requestType = value[1];
 
         if (requestType == (byte) 0x04) {
-            handleCallRequest(value);
+            if(value[2] == 0x02){
+                handleCallRequest(value);
+            }
         } else if (requestType == (byte) 0x05) {
             handleMusicRequest(value);
         } else if (requestType == (byte) 0x01) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -50,6 +50,7 @@ public enum DeviceType {
     MIBAND5(23, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband5),
     AMAZFITBAND5(24, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_amazfit_band5),
     AMAZFITBIPS_LITE(25, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bips_lite),
+    AMAZFITGTR2(26, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_gtr2),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -57,6 +57,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor2.AmazfitCor2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRLiteCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr2.AmazfitGTR2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts.AmazfitGTSCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfittrex.AmazfitTRexCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband2.MiBand2Coordinator;
@@ -224,6 +225,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitCor2Coordinator());
         result.add(new AmazfitGTRCoordinator());
         result.add(new AmazfitGTRLiteCoordinator());
+        result.add(new AmazfitGTR2Coordinator());
         result.add(new AmazfitTRexCoordinator());
         result.add(new AmazfitGTSCoordinator());
         result.add(new AmazfitBipSCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -65,7 +65,7 @@ public class ChartsActivity extends AbstractGBFragmentActivity implements Charts
 
     LimitedQueue mActivityAmountCache = new LimitedQueue(60);
 
-    private static class ShowDurationDialog extends Dialog {
+    public static class ShowDurationDialog extends Dialog {
         private final String mDuration;
         private TextView durationLabel;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -22,6 +22,7 @@
 
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
+
 import nodomain.freeyourgadget.gadgetbridge.R;
 
 /**
@@ -48,6 +49,7 @@ public enum DeviceType {
     AMAZFITTREX(22, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_trex),
     MIBAND5(23, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband5),
     AMAZFITBAND5(24, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_amazfit_band5),
+    AMAZFITBIPS_LITE(25, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bips_lite),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -51,7 +51,6 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.SimpleTimeZone;
-import java.util.SortedMap;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.UUID;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/SwipeEvents.java
Patch:
@@ -40,6 +40,9 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
 
         @Override
         public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
+            if (e1 == null || e2 == null){
+                return false;
+            }
             float distanceX = e2.getX() - e1.getX();
             float distanceY = e2.getY() - e1.getY();
             if (Math.abs(distanceX) > Math.abs(distanceY) && Math.abs(distanceX) > SWIPE_DISTANCE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -308,7 +308,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
         return super.onOptionsItemSelected(item);
     }
 
-    private void enableSwipeRefresh(boolean enable) {
+    @Override
+    public void enableSwipeRefresh(boolean enable) {
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(mGBDevice);
         swipeLayout.setEnabled(enable && coordinator.allowFetchActivityData(mGBDevice));
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsHost.java
Patch:
@@ -46,4 +46,6 @@ public interface ChartsHost {
     void setDateInfo(String dateInfo);
 
     ViewGroup getDateBar();
+
+    void enableSwipeRefresh(boolean enable);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityKind.java
Patch:
@@ -207,7 +207,7 @@ public static int getIconId(int kind) {
             case TYPE_ACTIVITY: // fall through
             case TYPE_UNKNOWN: // fall through
             default:
-                return R.drawable.ic_activity_unknown;
+                return R.drawable.ic_activity_unknown_small;
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -432,7 +432,6 @@ public void onClick(View v) {
                         final int currentIndex = i;
                         String configName = buttonConfig.getString(i);
                         TextView buttonTextView = new TextView(ConfigActivity.this);
-                        buttonTextView.setTextColor(Color.WHITE);
                         buttonTextView.setTextSize(20);
                         try {
                             ConfigPayload payload = ConfigPayload.valueOf(configName);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -295,7 +295,7 @@ public void onNotificationPosted(StatusBarNotification sbn) {
             }
         }
 
-        String source = sbn.getPackageName().toLowerCase();
+        String source = sbn.getPackageName();
         Notification notification = sbn.getNotification();
 
         Long notificationOldRepeatPreventionValue = notificationOldRepeatPrevention.get(source);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -20,12 +20,13 @@
 import android.content.Context;
 import android.net.Uri;
 
+import androidx.annotation.NonNull;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
 
-import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
@@ -133,9 +134,8 @@ public HuamiFirmwareType getFirmwareType() {
      * @return
      * @throws IllegalArgumentException when the data is not recognized as firmware data
      */
-    public static
     @NonNull
-    AbstractMiFirmwareInfo determineFirmwareInfoFor(byte[] wholeFirmwareBytes) {
+    public static AbstractMiFirmwareInfo determineFirmwareInfoFor(byte[] wholeFirmwareBytes) {
         return AbstractMiFirmwareInfo.determineFirmwareInfoFor(wholeFirmwareBytes);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/LefunDeviceCoordinator.java
Patch:
@@ -163,7 +163,7 @@ public boolean supportsFindDevice() {
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_liftwrist_display_noshed,
-                R.xml.devicesettings_ampm,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_antilost,
                 R.xml.devicesettings_longsit,
                 R.xml.devicesettings_hydration_reminder,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/GetSleepDataCommand.java
Patch:
@@ -1,5 +1,3 @@
-package nodomain.freeyourgadget.gadgetbridge.devices.lefun.commands;
-
 /*  Copyright (C) 2016-2020 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
     Copyright (C) 2020 Yukai Li
@@ -18,6 +16,8 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
+package nodomain.freeyourgadget.gadgetbridge.devices.lefun.commands;
+
 import java.nio.ByteBuffer;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.lefun.LefunConstants;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/lefun/requests/SendNotificationRequest.java
Patch:
@@ -98,7 +98,7 @@ protected String getMessage() {
             message += notification.sender + " - ";
         } else if (notification.title != null && !notification.title.isEmpty()) {
             message += notification.title + " - ";
-        } else if (notification.subject != null && !notification.sender.isEmpty()) {
+        } else if (notification.subject != null && !notification.subject.isEmpty()) {
             message += notification.subject + " - ";
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/PpgResultCommand.java
Patch:
@@ -38,7 +38,8 @@ public byte[] getPpgData() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_PPG_RESULT);
 
-        if (params.limit() - params.position() < 1)
+        int paramsLength = params.limit() - params.position();
+        if (paramsLength < 1)
             throwUnexpectedLength();
 
         ppgType = params.get();
@@ -57,7 +58,7 @@ protected void deserializeParams(byte id, ByteBuffer params) {
                 throw new IllegalArgumentException("Unknown PPG type");
         }
 
-        if (params.limit() - params.position() != dataLength + 1)
+        if (paramsLength != dataLength + 1)
             throwUnexpectedLength();
 
         ppgData = new byte[dataLength];

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/AlarmCommand.java
Patch:
@@ -131,13 +131,13 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_ALARM);
 
-        if (params.limit() < 2)
+        if (params.limit() - params.position() < 2)
             throwUnexpectedLength();
 
         op = params.get();
         index = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 8)
+            if (params.limit() - params.position() != 8)
                 throwUnexpectedLength();
 
             enabled = params.get() == 1;
@@ -147,7 +147,7 @@ protected void deserializeParams(byte id, ByteBuffer params) {
             hour = params.get();
             minute = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 3)
+            if (params.limit() - params.position() != 3)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/Cmd22Command.java
Patch:
@@ -54,17 +54,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_UNKNOWN_22);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 3)
+            if (params.limit() - params.position() != 3)
                 throwUnexpectedLength();
 
             unknown = params.getShort();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/Cmd25Command.java
Patch:
@@ -56,17 +56,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_UNKNOWN_25);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 5)
+            if (params.limit() - params.position() != 5)
                 throwUnexpectedLength();
 
             unknown = params.getInt();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/FeaturesCommand.java
Patch:
@@ -65,17 +65,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_FEATURES);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 3)
+            if (params.limit() - params.position() != 3)
                 throwUnexpectedLength();
 
             features = params.getShort();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/HydrationReminderIntervalCommand.java
Patch:
@@ -56,17 +56,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_HYDRATION_REMINDER_INTERVAL);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             hydrationReminderInterval = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/PpgResultCommand.java
Patch:
@@ -38,7 +38,7 @@ public byte[] getPpgData() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_PPG_RESULT);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         ppgType = params.get();
@@ -57,7 +57,7 @@ protected void deserializeParams(byte id, ByteBuffer params) {
                 throw new IllegalArgumentException("Unknown PPG type");
         }
 
-        if (params.limit() != dataLength + 1)
+        if (params.limit() - params.position() != dataLength + 1)
             throwUnexpectedLength();
 
         ppgData = new byte[dataLength];

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/ProfileCommand.java
Patch:
@@ -94,20 +94,20 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_PROFILE);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 5)
+            if (params.limit() - params.position() != 5)
                 throwUnexpectedLength();
 
             gender = params.get();
             height = params.get();
             weight = params.get();
             age = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/SedentaryReminderIntervalCommand.java
Patch:
@@ -56,17 +56,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_SEDENTARY_REMINDER_INTERVAL);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             sedentaryReminderInterval = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/SettingsCommand.java
Patch:
@@ -83,19 +83,19 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_SETTINGS);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 4)
+            if (params.limit() - params.position() != 4)
                 throwUnexpectedLength();
 
             option1 = params.get();
             amPmIndicator = params.get();
             measurementUnit = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/TimeCommand.java
Patch:
@@ -109,12 +109,12 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_TIME);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 7)
+            if (params.limit() - params.position() != 7)
                 throwUnexpectedLength();
 
             year = params.get();
@@ -124,7 +124,7 @@ protected void deserializeParams(byte id, ByteBuffer params) {
             minute = params.get();
             second = params.get();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/UiPagesCommand.java
Patch:
@@ -61,17 +61,17 @@ public boolean isSetSuccess() {
     protected void deserializeParams(byte id, ByteBuffer params) {
         validateId(id, LefunConstants.CMD_UI_PAGES);
 
-        if (params.limit() < 1)
+        if (params.limit() - params.position() < 1)
             throwUnexpectedLength();
 
         op = params.get();
         if (op == OP_GET) {
-            if (params.limit() != 3)
+            if (params.limit() - params.position() != 3)
                 throwUnexpectedLength();
 
             pages = params.getShort();
         } else if (op == OP_SET) {
-            if (params.limit() != 2)
+            if (params.limit() - params.position() != 2)
                 throwUnexpectedLength();
 
             setSuccess = params.get() == 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/commands/BaseCommand.java
Patch:
@@ -32,12 +32,12 @@ public abstract class BaseCommand {
     abstract protected byte serializeParams(ByteBuffer params);
 
     public void deserialize(byte[] response) {
-        if (response.length < LefunConstants.CMD_HEADER_LENGTH)
+        if (response.length < LefunConstants.CMD_HEADER_LENGTH || response.length < response[1])
             throw new IllegalArgumentException("Response is too short");
-        if (calculateChecksum(response, 0, response.length - 1) != response[response.length - 1])
+        if (calculateChecksum(response, 0, response[1] - 1) != response[response[1] - 1])
             throw new IllegalArgumentException("Incorrect message checksum");
         ByteBuffer buffer = ByteBuffer.wrap(response, LefunConstants.CMD_HEADER_LENGTH - 1,
-                response.length - LefunConstants.CMD_HEADER_LENGTH);
+                response[1] - LefunConstants.CMD_HEADER_LENGTH);
         buffer.order(ByteOrder.BIG_ENDIAN);
         deserializeParams(response[2], buffer);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lefun/LefunConstants.java
Patch:
@@ -33,7 +33,7 @@ public class LefunConstants {
 
     // Commands
     public static final byte CMD_REQUEST_ID = (byte)0xab;
-    public static final byte CMD_RESPONSE_ID = 0x55;
+    public static final byte CMD_RESPONSE_ID = 0x5a;
 
     public static final int CMD_MAX_LENGTH = 20;
     // 3 header bytes plus checksum

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -198,6 +198,7 @@ private void handleGBDeviceEventFindPhoneStart() {
     private void handleGBDeviceEventFindPhoneStartNotification() {
         LOG.info("Got handleGBDeviceEventFindPhoneStartNotification");
         Intent intent = new Intent(context, FindPhoneActivity.class);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 
         PendingIntent pi = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
@@ -212,7 +213,7 @@ private void handleGBDeviceEventFindPhoneStartNotification() {
                 .setContentTitle(  context.getString( R.string.find_my_phone_notification ) );
         notification.setGroup("BackgroundService");
 
-        notificationManager.notify( GB.NOTIFICATION_ID_PHONE_FIND, notification.build());
+        notificationManager.notify(GB.NOTIFICATION_ID_PHONE_FIND, notification.build());
     }
 
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbips/AmazfitBipSSupport.java
Patch:
@@ -101,7 +101,8 @@ public HuamiFWHelper createFWHelper(Uri uri, Context context) throws IOException
     public UpdateFirmwareOperation createUpdateFirmwareOperation(Uri uri) {
         Version version = new Version(gbDevice.getFirmwareVersion());
         // 4.0.0.00 is here to not confuse with DTH variant
-        if (version.compareTo(new Version("2.1.1.50")) >= 0 && version.compareTo(new Version("4.0.0.00")) < 0) {
+        if ((version.compareTo(new Version("2.1.1.50")) >= 0 && version.compareTo(new Version("4.0.0.00")) < 0) ||
+                (version.compareTo(new Version("4.1.5.55")) >= 0)) {
             return new UpdateFirmwareOperation2020(uri, this);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbips/AmazfitBipSFirmwareInfo.java
Patch:
@@ -96,7 +96,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             return HuamiFirmwareType.GPS_CEP;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {
-            if (bytes[10] == 0x01 || bytes[10] == 0x06) {
+            if (bytes[10] == 0x01 || bytes[10] == 0x06 || bytes[10] == 0x03) {
                 return HuamiFirmwareType.FONT;
             } else if (bytes[10] == 0x02 || bytes[10] == 0x0A) {
                 return HuamiFirmwareType.FONT_LATIN;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -116,7 +116,7 @@ public static Notification createNotification(GBDevice device, Context context)
                 deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_FETCH_RECORDED_DATA);
                 deviceCommunicationServiceIntent.putExtra(EXTRA_RECORDED_DATA_TYPES, ActivityKind.TYPE_ACTIVITY);
                 PendingIntent fetchPendingIntent = PendingIntent.getService(context, 1, deviceCommunicationServiceIntent, PendingIntent.FLAG_ONE_SHOT);
-                builder.addAction(R.drawable.ic_action_fetch_activity_data, context.getString(R.string.controlcenter_fetch_activity_data), fetchPendingIntent);
+                builder.addAction(R.drawable.ic_refresh, context.getString(R.string.controlcenter_fetch_activity_data), fetchPendingIntent);
             }
         } else if (device.getState().equals(GBDevice.State.WAITING_FOR_RECONNECT) || device.getState().equals(GBDevice.State.NOT_CONNECTED)) {
             deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_CONNECT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -384,10 +384,10 @@ public void onClick(View v) {
 
     private LinkedHashMap fillKindMap(){
         LinkedHashMap<String , Integer> newMap = new LinkedHashMap<>(1); //reset
-        newMap.put("All Activities", 0);
+        newMap.put(getString(R.string.activity_summaries_all_activities), 0);
         for (BaseActivitySummary item : getItemAdapter().getItems()) {
             String activityName = ActivityKind.asString(item.getActivityKind(), this);
-            if (!newMap.containsKey(item.getActivityKind())) {
+            if (!newMap.containsKey(activityName)) {
                 newMap.put(activityName, item.getActivityKind());
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -19,6 +19,7 @@
 package nodomain.freeyourgadget.gadgetbridge.model;
 
 import androidx.annotation.Nullable;
+
 import nodomain.freeyourgadget.gadgetbridge.devices.EventHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
@@ -139,7 +140,7 @@ public interface DeviceService extends EventHandler {
 
     void connect(@Nullable GBDevice device);
 
-    void connect(@Nullable GBDevice device, boolean performPair);
+    void connect(@Nullable GBDevice device, boolean firstTime);
 
     void disconnect();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -146,6 +146,8 @@
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_WEARLOCATION;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_FELL_SLEEP_BROADCAST;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_FELL_SLEEP_SELECTION;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_SELECTION_BROADCAST;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_SELECTION_OFF;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_START_NON_WEAR_BROADCAST;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_START_NON_WEAR_SELECTION;
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_WOKE_UP_BROADCAST;
@@ -157,8 +159,6 @@
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.getNotificationPrefIntValue;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.getNotificationPrefStringValue;
 import static nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic.UUID_CHARACTERISTIC_ALERT_LEVEL;
-import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_SELECTION_BROADCAST;
-import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst.PREF_DEVICE_ACTION_SELECTION_OFF;
 
 public class HuamiSupport extends AbstractBTLEDeviceSupport {
 
@@ -335,7 +335,7 @@ public boolean useAutoConnect() {
     @Override
     public boolean connectFirstTime() {
         needsAuth = true;
-        return super.connect();
+        return connect();
     }
 
     private HuamiSupport sendDefaultNotification(TransactionBuilder builder, SimpleNotification simpleNotification, short repeat, BtLEAction extraAction) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -202,6 +202,7 @@ protected boolean connect() {
                     final UUID UuidSDP = UUID.fromString("00001101-0000-1000-8000-00805f9b34fb");
                     mBtSocket = btDevice.createRfcommSocketToServiceRecord(UuidSDP);
 
+                    // TODO: Why is this comment here?
                     //mBtSocket = btDevice.createRfcommSocketToServiceRecord(uuids[0].getUuid());
                     mBtSocket.connect();
                     mInStream = mBtSocket.getInputStream();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -73,7 +73,7 @@ public boolean useAutoConnect() {
     public void onInstallApp(Uri uri) {
         PebbleProtocol pebbleProtocol = (PebbleProtocol) getDeviceProtocol();
         PebbleIoThread pebbleIoThread = getDeviceIOThread();
-        // catch fake urls first
+        // Catch fake URLs first
         if (uri.equals(Uri.parse("fake://health"))) {
             getDeviceIOThread().write(pebbleProtocol.encodeActivateHealth(true));
             String units = GBApplication.getPrefs().getString(SettingsActivity.PREF_MEASUREMENT_SYSTEM, getContext().getString(R.string.p_unit_metric));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -29,13 +29,14 @@
 import android.text.InputType;
 import android.view.MenuItem;
 
+import androidx.core.app.NavUtils;
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.util.Locale;
 
-import androidx.core.app.NavUtils;
-import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.util.AndroidUtils;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -29,15 +29,16 @@
 import android.widget.FrameLayout;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.core.app.NavUtils;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.util.List;
 import java.util.Objects;
 import java.util.UUID;
 
-import androidx.annotation.NonNull;
-import androidx.core.app.NavUtils;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -364,7 +364,7 @@ protected void configureChartDefaults(Chart<?> chart) {
         // enable touch gestures
         chart.setTouchEnabled(true);
 
-// commented out: this has weird bugs/sideeffects at least on WeekStepsCharts
+// commented out: this has weird bugs/side-effects at least on WeekStepsCharts
 // where only the first Day-label is drawn, because AxisRenderer.computeAxisValues(float,float)
 // appears to have an overflow when calculating 'n' (number of entries)
 //        chart.getXAxis().setGranularity(60*5);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractWeekChartFragment.java
Patch:
@@ -125,13 +125,13 @@ private WeekChartsData<BarData> refreshWeekBeforeData(DBHandler db, BarChart bar
         ArrayList<String> labels = new ArrayList<String>();
 
         long balance = 0;
-        long daily_balance=0;
+        long daily_balance = 0;
         TOTAL_DAYS_FOR_AVERAGE=0;
 
         for (int counter = 0; counter < TOTAL_DAYS; counter++) {
             ActivityAmounts amounts = getActivityAmountsForDay(db, day, device);
             daily_balance=calculateBalance(amounts);
-            if (daily_balance>0){
+            if (daily_balance > 0) {
                 TOTAL_DAYS_FOR_AVERAGE++;
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -24,7 +24,7 @@
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 
 /**
- * Provides lowlevel access to the database.
+ * Provides low-level access to the database.
  */
 public interface DBHandler extends AutoCloseable {
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipFWHelper.java
Patch:
@@ -20,9 +20,10 @@
 import android.content.Context;
 import android.net.Uri;
 
+import androidx.annotation.NonNull;
+
 import java.io.IOException;
 
-import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipFirmwareInfo;
 
@@ -37,7 +38,7 @@ public AmazfitBipFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitBipFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit Bip firmware");
+            throw new IllegalArgumentException("Not a an Amazfit Bip firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipLiteFWHelper.java
Patch:
@@ -38,7 +38,7 @@ public AmazfitBipLiteFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitBipLiteFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit Bip Lite firmware");
+            throw new IllegalArgumentException("Not a an Amazfit Bip Lite firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr/AmazfitGTRFWHelper.java
Patch:
@@ -20,8 +20,6 @@
 import android.content.Context;
 import android.net.Uri;
 
-import androidx.annotation.NonNull;
-
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
@@ -37,7 +35,7 @@ public AmazfitGTRFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitGTRFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit GTR firmware");
+            throw new IllegalArgumentException("Not a an Amazfit GTR firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr/AmazfitGTRLiteFWHelper.java
Patch:
@@ -35,7 +35,7 @@ public AmazfitGTRLiteFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitGTRLiteFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit GTR Lite Firmware");
+            throw new IllegalArgumentException("Not a an Amazfit GTR Lite Firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts/AmazfitGTSFWHelper.java
Patch:
@@ -35,7 +35,7 @@ public AmazfitGTSFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitGTSFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit GTS firmware");
+            throw new IllegalArgumentException("Not a an Amazfit GTS firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfittrex/AmazfitTRexFWHelper.java
Patch:
@@ -20,8 +20,6 @@
 import android.content.Context;
 import android.net.Uri;
 
-import androidx.annotation.NonNull;
-
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
@@ -37,7 +35,7 @@ public AmazfitTRexFWHelper(Uri uri, Context context) throws IOException {
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new AmazfitTRexFirmwareInfo(wholeFirmwareBytes);
         if (!firmwareInfo.isHeaderValid()) {
-            throw new IllegalArgumentException("Not a an Amazifit T-Rex firmware");
+            throw new IllegalArgumentException("Not a an Amazfit T-Rex firmware");
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/jyou/BFH16Constants.java
Patch:
@@ -19,13 +19,11 @@
 
 import java.util.UUID;
 
-import static nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport.BASE_UUID;
-
 public final class BFH16Constants {
 
     //Known Services
     public static final UUID BFH16_GENERIC_ACCESS_SERVICE = UUID.fromString("00001800-0000-1000-8000-00805f9b34fb");
-    public static final UUID BFH16_GENERIC_ARTTRIBUTE_SERVICE = UUID.fromString("00001801-0000-1000-8000-00805f9b34fb");
+    public static final UUID BFH16_GENERIC_ATTRIBUTE_SERVICE = UUID.fromString("00001801-0000-1000-8000-00805f9b34fb");
 
     public static final UUID BFH16_IDENTIFICATION_SERVICE1 = UUID.fromString("0000fef5-0000-1000-8000-00805f9b34fb");
     public static final UUID BFH16_IDENTIFICATION_SERVICE2 = UUID.fromString("0000fee7-0000-1000-8000-00805f9b34fb");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/CalendarReceiver.java
Patch:
@@ -139,7 +139,7 @@ public void syncCalendar(List<CalendarEvents.CalendarEvent> eventList, DaoSessio
         for (CalendarSyncState CalendarSyncState : CalendarSyncStateList) {
             if (!eventState.containsKey(CalendarSyncState.getCalendarEntryId())) {
                 eventState.put(CalendarSyncState.getCalendarEntryId(), new EventSyncState(null, EventState.NEEDS_DELETE));
-                LOG.info("insert null event for orphanded calendar id=" + CalendarSyncState.getCalendarEntryId() + " for device=" + mGBDevice.getName());
+                LOG.info("insert null event for orphaned calendar id=" + CalendarSyncState.getCalendarEntryId() + " for device=" + mGBDevice.getName());
             }
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/Alarm.java
Patch:
@@ -20,7 +20,7 @@
 
 public interface Alarm extends Serializable {
     /**
-     * The {@link android.os.Bundle} name for transferring pacreled alarms.
+     * The {@link android.os.Bundle} name for transferring parceled alarms.
      */
     String EXTRA_ALARM = "alarm";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/CalendarEvents.java
Patch:
@@ -43,7 +43,7 @@ public class CalendarEvents {
     //further: primaryColor, secondaryColor, backgroundColor, headings, paragraphs, lastUpdated
     // taken from: https://developer.getpebble.com/guides/timeline/pin-structure/
 
-    // needed for miband:
+    // needed for MiBand:
     // time
 
     private static final String[] EVENT_INSTANCE_PROJECTION = new String[]{

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btclassic/BtClassicIoThread.java
Patch:
@@ -22,6 +22,8 @@
 import android.content.Context;
 import android.os.ParcelUuid;
 
+import androidx.annotation.NonNull;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -31,7 +33,6 @@
 import java.net.SocketTimeoutException;
 import java.util.UUID;
 
-import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.service.serial.AbstractSerialDeviceSupport;
@@ -45,7 +46,6 @@ public abstract class BtClassicIoThread extends GBDeviceIoThread {
     private final GBDeviceProtocol mProtocol;
     private final AbstractSerialDeviceSupport mDeviceSupport;
 
-
     private BluetoothAdapter mBtAdapter = null;
     private BluetoothSocket mBtSocket = null;
     private InputStream mInStream = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -33,6 +33,8 @@
 import android.os.Handler;
 import android.os.Looper;
 
+import androidx.annotation.Nullable;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -44,13 +46,11 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.LinkedBlockingQueue;
 
-import androidx.annotation.Nullable;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.Logging;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice.State;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceSupport;
-import nodomain.freeyourgadget.gadgetbridge.service.receivers.AutoConnectIntervalReceiver;
 
 /**
  * One queue/thread per connectable device.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipLiteFirmwareInfo.java
Patch:
@@ -60,7 +60,7 @@ public AmazfitBipLiteFirmwareInfo(byte[] bytes) {
     @Override
     protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
         if (ArrayUtils.startsWith(bytes, NEWRES_HEADER)) {
-            if ((bytes.length <= 100000) || (bytes.length > 700000)) { // dont know how to distinguish from Cor/Mi Band 3 .res
+            if ((bytes.length <= 100000) || (bytes.length > 700000)) { // don't know how to distinguish from Cor/Mi Band 3 .res
                 return HuamiFirmwareType.INVALID;
             }
             return HuamiFirmwareType.RES;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/alarm/Alarm.java
Patch:
@@ -32,7 +32,7 @@ public class Alarm {
     private final boolean repeat;
     private String title, message;
 
-    public Alarm(byte minute, byte hour, String title, String message){
+    public Alarm(byte minute, byte hour, String title, String message) {
         this.minute = minute;
         this.hour = hour;
         this.repeat = false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/alarm/AlarmsGetRequest.java
Patch:
@@ -22,7 +22,6 @@
 import java.nio.ByteOrder;
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FileGetRequest;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FileLookupAndGetRequest;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
@@ -61,6 +60,7 @@ public void handleAlarms(Alarm[] alarms){
         for(int i = 0; i < alarms.length; i++){
             alarms2[i] = Alarm.fromBytes(alarms[i].getData());
         }
+        // TODO: This does nothing currently!
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/configuration/ConfigurationPutRequest.java
Patch:
@@ -64,7 +64,6 @@ public static ConfigItem[] parsePayload(byte[] data) {
                 GB.log("error", GB.ERROR, e);
                 continue;
             }
-
             item.parseData(payload);
 
             configItems.add(item);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AlarmUtils.java
Patch:
@@ -17,6 +17,8 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.util;
 
+import androidx.annotation.NonNull;
+
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collections;
@@ -25,7 +27,6 @@
 import java.util.List;
 import java.util.Set;
 
-import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/AbstractBleProfile.java
Patch:
@@ -33,9 +33,9 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 
 /**
- * Base class for all BLE profiles, with things that all impplementations are
+ * Base class for all BLE profiles, with things that all implementations are
  * expected to use.
- *
+ * <p>
  * Instances are used in the context of a concrete AbstractBTLEDeviceSupport instance,
  * i.e. a concrete device.
  *

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -116,7 +116,7 @@ public class QHybridSupport extends QHybridBaseSupport {
     private final BroadcastReceiver commandReceiver;
     private final BroadcastReceiver globalCommandReceiver;
 
-    private PackageConfigHelper helper;
+    private final PackageConfigHelper helper;
 
     public volatile boolean searchDevice = false;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/alarm/Alarm.java
Patch:
@@ -104,7 +104,7 @@ public void setMessage(String message) {
     @NonNull
     @Override
     public String toString() {
-        String description = this.hour + ":" + this.minute + "  ";
+        StringBuilder description = new StringBuilder(this.hour + ":" + this.minute + "  ");
         if(repeat){
             String[] dayNames = new String[]{"sunday", "monday", "tuesday", "thursday", "wednesday", "friday", "saturday"};
             for(int i = WEEKDAY_SUNDAY; i <= WEEKDAY_SATURDAY; i++){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -189,7 +189,7 @@ protected String[] getPreferenceKeysWithSummary() {
      */
     private static void bindPreferenceSummaryToValue(Preference preference) {
         // Set the listener to watch for value changes.
-        SimpleSetSummaryOnChangeListener listener = null;
+        SimpleSetSummaryOnChangeListener listener;
         Preference.OnPreferenceChangeListener existingListener = preference.getOnPreferenceChangeListener();
         if (existingListener != null) {
             listener = new ExtraSetSummaryOnChangeListener(existingListener);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AlarmDetails.java
Patch:
@@ -186,7 +186,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     private void updateAlarm() {
         alarm.setSmartWakeup(supportsSmartWakeup() && cbSmartWakeup.isChecked());
         alarm.setSnooze(supportsSnoozing() && cbSnooze.isChecked());
-        int repetitionMask = AlarmUtils.createRepetitionMassk(cbMonday.isChecked(), cbTuesday.isChecked(), cbWednesday.isChecked(), cbThursday.isChecked(), cbFriday.isChecked(), cbSaturday.isChecked(), cbSunday.isChecked());
+        int repetitionMask = AlarmUtils.createRepetitionMask(cbMonday.isChecked(), cbTuesday.isChecked(), cbWednesday.isChecked(), cbThursday.isChecked(), cbFriday.isChecked(), cbSaturday.isChecked(), cbSunday.isChecked());
         alarm.setRepetition(repetitionMask);
         alarm.setHour(timePicker.getCurrentHour());
         alarm.setMinute(timePicker.getCurrentMinute());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -188,6 +188,7 @@ private void setupLegacyWebView(@NonNull GBDevice device, @NonNull UUID uuid) {
         myWebView.setWebViewClient(new GBWebClient());
         myWebView.setWebChromeClient(new GBChromeClient());
         WebSettings webSettings = myWebView.getSettings();
+        //noinspection SetJavaScriptEnabled
         webSettings.setJavaScriptEnabled(true);
         //needed to access the DOM
         webSettings.setDomStorageEnabled(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/WidgetAlarmsActivity.java
Patch:
@@ -60,7 +60,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 textView = findViewById(R.id.alarm5);
                 if (userSleepDuration > 0) {
                     Resources res = getResources();
-                    textView.setText(String.format(res.getQuantityString(R.plurals.widget_alarm_target_hours, userSleepDuration, userSleepDuration)));
+                    textView.setText(res.getQuantityString(R.plurals.widget_alarm_target_hours, userSleepDuration, userSleepDuration));
                 } else {
                     textView.setVisibility(View.GONE);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/GenericItem.java
Patch:
@@ -111,14 +111,16 @@ public int hashCode() {
 
     @Override
     public int compareTo(ItemWithDetails another) {
-        if (getName() == another.getName()) {
+        if (getName().equals(another.getName())) {
             return 0;
         }
+
         if (getName() == null) {
             return +1;
         } else if (another.getName() == null) {
             return -1;
         }
+
         return Collator.getInstance().compare(getName(), another.getName());
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -383,9 +383,7 @@ public void insert(Transaction transaction) {
         if (!transaction.isEmpty()) {
             List<AbstractTransaction> tail = new ArrayList<>(mTransactions.size() + 2);
             //mTransactions.drainTo(tail);
-            for( AbstractTransaction t : mTransactions) {
-                tail.add(t);
-            }
+            tail.addAll(mTransactions);
             mTransactions.clear();
             mTransactions.add(transaction);
             mTransactions.addAll(tail);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/casiogb6900/operations/InitOperation.java
Patch:
@@ -104,9 +104,9 @@ public boolean onCharacteristicRead(BluetoothGatt gatt,
 
         if(characteristicUUID.equals(CasioGB6900Constants.CASIO_SETTING_FOR_BLE_CHARACTERISTIC_UUID)) {
             mBleSettings = data;
-            String str = "Read Casio Setting for BLE: ";
-            for(int i=0; i<data.length; i++) {
-                str += String.format("0x%1x ", data[i]);
+            StringBuilder str = new StringBuilder("Read Casio Setting for BLE: ");
+            for (byte datum : data) {
+                str.append(String.format("0x%1x ", datum));
             }
             /* Definition of parameters - for future reference */
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/id115/AbstractID115Operation.java
Patch:
@@ -30,8 +30,8 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 public abstract class AbstractID115Operation extends AbstractBTLEOperation<ID115Support> {
-    protected BluetoothGattCharacteristic controlCharacteristic = null;
-    protected BluetoothGattCharacteristic notifyCharacteristic = null;
+    protected BluetoothGattCharacteristic controlCharacteristic;
+    protected BluetoothGattCharacteristic notifyCharacteristic;
 
     protected AbstractID115Operation(ID115Support support) {
         super(support);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/ble/PebbleGATTClient.java
Patch:
@@ -217,8 +217,8 @@ public void onServicesDiscovered(BluetoothGatt gatt, int status) {
     private void connectToPebble(BluetoothDevice btDevice) {
         if (removeBond) {
             try {
-                Method m = btDevice.getClass()
-                        .getMethod("removeBond", (Class[]) null);
+                // TODO: Use BondingUtil
+                Method m = btDevice.getClass().getMethod("removeBond", (Class[]) null);
                 m.invoke(btDevice, (Object[]) null);
             } catch (Exception e) {
                 LOG.warn(e.getMessage());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AlarmUtils.java
Patch:
@@ -81,7 +81,7 @@ public static Calendar toCalendar(nodomain.freeyourgadget.gadgetbridge.model.Ala
      * @param sun whether the alarm shall repeat every Sunday
      * @return the created repetition mask
      */
-    public static int createRepetitionMassk(boolean mon, boolean tue, boolean wed, boolean thu, boolean fri, boolean sat, boolean sun) {
+    public static int createRepetitionMask(boolean mon, boolean tue, boolean wed, boolean thu, boolean fri, boolean sat, boolean sun) {
         int repetitionMask = (mon ? Alarm.ALARM_MON : 0) |
                 (tue ? Alarm.ALARM_TUE : 0) |
                 (wed ? Alarm.ALARM_WED : 0) |

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AndroidUtils.java
Patch:
@@ -217,8 +217,7 @@ private static String colorToHex(int color) {
             String[] projection = {
                     MediaStore.Images.Media.DATA
             };
-            Cursor cursor = null;
-            cursor = context.getContentResolver()
+            Cursor cursor = context.getContentResolver()
                     .query(uri, projection, selection, selectionArgs, null);
             int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
             if (cursor.moveToFirst()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/WebViewSingleton.java
Patch:
@@ -82,6 +82,7 @@ public static synchronized void ensureCreated(Activity context) {
             instance.webView.setWebViewClient(new GBWebClient());
             instance.webView.setWebChromeClient(new GBChromeClient());
             WebSettings webSettings = instance.webView.getSettings();
+            //noinspection SetJavaScriptEnabled
             webSettings.setJavaScriptEnabled(true);
             //needed to access the DOM
             webSettings.setDomStorageEnabled(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pinetime/PineTimeJFSupport.java
Patch:
@@ -60,6 +60,7 @@ public class PineTimeJFSupport extends AbstractBTLEDeviceSupport {
     public PineTimeJFSupport() {
         super(LOG);
         addSupportedService(GattService.UUID_SERVICE_ALERT_NOTIFICATION);
+        addSupportedService(GattService.UUID_SERVICE_CURRENT_TIME);
         addSupportedService(GattService.UUID_SERVICE_DEVICE_INFORMATION);
         deviceInfoProfile = new DeviceInfoProfile<>(this);
         IntentListener mListener = new IntentListener() {
@@ -82,6 +83,7 @@ public void notify(Intent intent) {
     protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
         builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
         requestDeviceInfo(builder);
+        onSetTime();
         setInitialized(builder);
         return builder;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummaryDetail.java
Patch:
@@ -239,7 +239,7 @@ private void makeSummaryContent(BaseActivitySummary item) {
                                     unit = "km_h";
                                     break;
                                 case "seconds_m":
-                                    value = 3.6 / value;
+                                    value = value * (1000/60);
                                     unit = "minutes_km";
                                     break;
                                 case "seconds_km":

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/banglejs/BangleJSDeviceSupport.java
Patch:
@@ -501,6 +501,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
             o.put("hum", weatherSpec.currentHumidity);
             o.put("txt", weatherSpec.currentCondition);
             o.put("wind", weatherSpec.windSpeed);
+            o.put("wdir", weatherSpec.windDirection);
             o.put("loc", weatherSpec.location);
             uartTxJSON("onSendWeather", o);
         } catch (JSONException e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -293,6 +293,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
     private void handleDeviceBonded() {
         if (bondingDevice == null) {
+            LOG.error("deviceCandidate was null! Can't handle bonded device!");
             return;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebblePairingActivity.java
Patch:
@@ -27,12 +27,13 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.util.List;
 
-import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import de.greenrobot.dao.query.Query;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
@@ -254,7 +255,7 @@ private GBDevice getMatchingParentDeviceFromDB(BluetoothDevice btDevice) {
             gbDevice = deviceHelper.toGBDevice(devices.get(0));
             gbDevice.setVolatileAddress(btDevice.getAddress());
         } catch (Exception e) {
-            GB.toast("Error retrieving devices from database", Toast.LENGTH_SHORT, GB.ERROR);
+            GB.toast(getString(R.string.error_retrieving_devices_database), Toast.LENGTH_SHORT, GB.ERROR, e);
             returnToPairingActivity();
             return null;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.List;
 import java.util.Locale;
 import java.util.Objects;
+import java.util.Set;
 
 import de.cketti.library.changelog.ChangeLog;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/tlw64/TLW64Support.java
Patch:
@@ -665,6 +665,7 @@ private void handleActivityData(byte[] data) {
                         GB.updateTransferNotification(null, "", false, 100, getContext());
                         if (getDevice().isBusy()) {
                             getDevice().unsetBusyTask();
+                            getDevice().sendDeviceUpdateIntent(getContext());
                             GB.signalActivityDataFinish();
                         }
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/tlw64/TLW64Support.java
Patch:
@@ -286,7 +286,7 @@ public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
     public void onSetCallState(CallSpec callSpec) {
         if (callSpec.command == CallSpec.CALL_INCOMING) {
             showNotification(TLW64Constants.NOTIFICATION_CALL, callSpec.name);
-            setVibration(3, 5);
+            setVibration(1, 30);
         } else {
             stopNotification();
             setVibration(0, 0);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -873,6 +873,9 @@ private void migratePrefs(int oldVersion) {
                             case MIBAND4:
                                 newWearside = prefs.getString("mi_wearside", "left");
                                 break;
+                            case MIBAND5:
+                                newWearside = prefs.getString("mi_wearside", "left");
+                                break;
                             case HPLUS:
                                 newWearside = prefs.getString("hplus_wrist", "left");
                                 newTimeformat = prefs.getString("hplus_timeformat", "24h");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiConst.java
Patch:
@@ -49,6 +49,7 @@ public class HuamiConst {
     public static final String MI_BAND3_NAME = "Mi Band 3";
     public static final String MI_BAND3_NAME_2 = "Xiaomi Band 3";
     public static final String MI_BAND4_NAME = "Mi Smart Band 4";
+    public static final String MI_BAND5_NAME = "Mi Smart Band 5";
 
     public static final String PREF_ACTIVATE_DISPLAY_ON_LIFT = "activate_display_on_lift_wrist";
     public static final String PREF_DISPLAY_ON_LIFT_START = "display_on_lift_start";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -46,6 +46,7 @@ public enum DeviceType {
     AMAZFITBIPS(20, R.drawable.ic_device_amazfit_bip, R.drawable.ic_device_amazfit_bip_disabled, R.string.devicetype_amazfit_bips),
     AMAZFITGTR_LITE(21, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_gtr),
     AMAZFITTREX(22, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_amazfit_trex),
+    MIBAND5(23, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband5),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),
     MAKIBESF68(41, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_f68),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -63,6 +63,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband2.MiBand2HRXCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband3.MiBand3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband4.MiBand4Coordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband5.MiBand5Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.id115.ID115Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.jyou.TeclastH30.TeclastH30Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.jyou.y5.Y5Coordinator;
@@ -213,6 +214,7 @@ public synchronized List<DeviceCoordinator> getAllCoordinators() {
 
     private List<DeviceCoordinator> createCoordinators() {
         List<DeviceCoordinator> result = new ArrayList<>();
+        result.add(new MiBand5Coordinator());
         result.add(new MiScale2DeviceCoordinator());
         result.add(new AmazfitBipCoordinator());
         result.add(new AmazfitBipLiteCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/InitOperation.java
Patch:
@@ -83,7 +83,7 @@ private byte[] requestAuthNumber() {
         if (cryptFlags == 0x00) {
             return new byte[]{HuamiService.AUTH_REQUEST_RANDOM_AUTH_NUMBER, authFlags};
         } else {
-            return new byte[]{(byte) (cryptFlags | HuamiService.AUTH_REQUEST_RANDOM_AUTH_NUMBER), authFlags, 0x02};
+            return new byte[]{(byte) (cryptFlags | HuamiService.AUTH_REQUEST_RANDOM_AUTH_NUMBER), authFlags, 0x02, 0x01, 0x00};
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -1965,7 +1965,9 @@ public void onSendWeather(WeatherSpec weatherSpec) {
 
         try {
             TransactionBuilder builder = performInitialized("Sending weather forecast");
-
+            if (weatherSpec.forecasts.size() > 3) { //TDOD: find out the limits for each device
+                weatherSpec.forecasts.subList(3, weatherSpec.forecasts.size()).clear();
+            }
             final byte NR_DAYS = (byte) (1 + weatherSpec.forecasts.size());
             int bytesPerDay = 4;
 

File: app/src/main/java/ru/gelin/android/weather/notification/ParcelableWeather2.java
Patch:
@@ -75,7 +75,7 @@ private ParcelableWeather2(Parcel in) {
             JSONArray list = new JSONArray();
             JSONObject city = new JSONObject();
             while (--conditions > 0) {
-                timeOffset += 86400000; //manually determined
+                timeOffset += 86400; //manually determined
                 JSONObject item = new JSONObject();
                 JSONObject condition = new JSONObject();
                 JSONObject main = new JSONObject();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbips/AmazfitBipSFirmwareInfo.java
Patch:
@@ -76,7 +76,8 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
         }
 
-        if (ArrayUtils.equals(bytes, NEWRES_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
+        if (ArrayUtils.equals(bytes, NEWRES_HEADER, COMPRESSED_RES_HEADER_OFFSET) ||
+                ArrayUtils.equals(bytes, NEWRES_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW)) {
             return HuamiFirmwareType.RES_COMPRESSED;
         }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -51,7 +51,7 @@ public void setUp() throws Exception {
         super.setUp();
         mockSupport = null;
         realSupport = new TestDeviceSupport();
-        realSupport.setContext(new GBDevice(TEST_DEVICE_ADDRESS, "Test Device", DeviceType.TEST), null, getContext());
+        realSupport.setContext(new GBDevice(TEST_DEVICE_ADDRESS, "Test Device", "Test Device Alias", DeviceType.TEST), null, getContext());
         mockSupport = Mockito.spy(realSupport);
         DeviceCommunicationService.setDeviceSupportFactory(new TestDeviceSupportFactory(getContext()));
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/TestBase.java
Patch:
@@ -85,7 +85,7 @@ public void tearDown() throws Exception {
     }
 
     protected GBDevice createDummyGDevice(String macAddress) {
-        GBDevice dummyGBDevice = new GBDevice(macAddress, "Testie", DeviceType.TEST);
+        GBDevice dummyGBDevice = new GBDevice(macAddress, "Testie", "Tesie Alias", DeviceType.TEST);
         dummyGBDevice.setFirmwareVersion("1.2.3");
         dummyGBDevice.setModel("4.0");
         return dummyGBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -128,6 +128,9 @@ public interface DeviceCoordinator {
     @Nullable
     Class<? extends Activity> getPairingActivity();
 
+    @Nullable
+    Class<? extends Activity> getCalibrationActivity();
+
     /**
      * Returns true if activity data fetching is supported by the device
      * (with this coordinator).

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbips/AmazfitBipSCoordinator.java
Patch:
@@ -79,7 +79,7 @@ public boolean supportsWeather() {
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
-                R.xml.devicesettings_amazfitbip,
+                R.xml.devicesettings_amazfitbips,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_custom_emoji_font,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/parser/ActivityFileParser.java
Patch:
@@ -115,7 +115,7 @@ private void parseVariabilityBytes(byte lower, byte higher){
                 currentSample.variability |= (higher >> 2) & 0b111111;
             }
         }else{
-            currentSample.stepCount = lower & 0b1111110;
+            currentSample.stepCount = lower & 0b11111110;
             currentSample.variability = (int) higher * (int) higher * 64;
             currentSample.maxVariability = 10000;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/parser/ActivityFileParser.java
Patch:
@@ -109,13 +109,13 @@ private void parseVariabilityBytes(byte lower, byte higher){
             if((lower & 0b10000000) == 0b10000000){
                 int factor = (lower >> 4) & 0b111;
                 currentSample.variability = 512 + factor * 64 + (higher >> 2 & 0b111111);
-                currentSample.stepCount = lower & 0b1110;
             }else {
                 currentSample.variability = lower & 0b01110000;
                 currentSample.variability <<= 2;
                 currentSample.variability |= (higher >> 2) & 0b111111;
             }
         }else{
+            currentSample.stepCount = lower & 0b1111110;
             currentSample.variability = (int) higher * (int) higher * 64;
             currentSample.maxVariability = 10000;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -550,7 +550,7 @@ public void onSetMusicState(MusicStateSpec stateSpec) {
     public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
         Calendar time = GregorianCalendar.getInstance();
         byte[] CalendarEvent = new byte[calendarEventSpec.title.getBytes(StandardCharsets.UTF_8).length + 16]; // 26 bytes for calendar and overhead
-        time.setTimeInMillis(calendarEventSpec.timestamp);
+        time.setTimeInMillis(calendarEventSpec.timestamp * 1000L);
         CalendarEvent[0] = ZeTimeConstants.CMD_PREAMBLE;
         CalendarEvent[1] = ZeTimeConstants.CMD_PUSH_CALENDAR_DAY;
         CalendarEvent[2] = ZeTimeConstants.CMD_SEND;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -934,7 +934,7 @@ public static LimitedQueue getIDSenderLookup() {
     }
 
     public static boolean isDarkThemeEnabled() {
-        String selectedTheme = prefs.getString("pref_key_theme", context.getString(R.string.pref_theme_value_light));
+        String selectedTheme = prefs.getString("pref_key_theme", context.getString(R.string.pref_theme_value_system));
 
         UiModeManager umm = (UiModeManager) context.getSystemService(Context.UI_MODE_SERVICE);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/CalendarReceiver.java
Patch:
@@ -101,7 +101,7 @@ public void syncCalendar(List<CalendarEvents.CalendarEvent> eventList) {
             DaoSession session = dbHandler.getDaoSession();
             syncCalendar(eventList, session);
         } catch (Exception e1) {
-            GB.toast("Database Error while syncing Calendar", Toast.LENGTH_SHORT, GB.ERROR);
+            GB.toast("Database Error while syncing Calendar", Toast.LENGTH_SHORT, GB.ERROR, e1);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -620,6 +620,7 @@ public void onScreenshotReq() {
 
     @Override
     public void onSendWeather(WeatherSpec weatherSpec) {
+        String release = versionCmd.fwVersion.substring(8, 12);
         String buildnumber = versionCmd.fwVersion.substring(versionCmd.fwVersion.length() - 4);
         byte[] weather = new byte[weatherSpec.location.getBytes(StandardCharsets.UTF_8).length + 26]; // 26 bytes for weatherdata and overhead
         weather[0] = ZeTimeConstants.CMD_PREAMBLE;
@@ -632,8 +633,8 @@ public void onSendWeather(WeatherSpec weatherSpec) {
         weather[7] = (byte) (weatherSpec.todayMinTemp - 273);
         weather[8] = (byte) (weatherSpec.todayMaxTemp - 273);
 
-        if (buildnumber.compareTo("B4.1") >= 0) // if using firmware 1.7 Build 41 and above use newer icons
-        {
+        // if using firmware 1.7 Build 41 and above use newer icons
+        if (release.compareTo("R1.7") > 0 || (release.compareTo("R1.7") == 0 && buildnumber.compareTo("B4.1") >= 0)) {
             weather[9] = Weather.mapToZeTimeCondition(weatherSpec.currentConditionCode);
         } else {
             weather[9] = Weather.mapToZeTimeConditionOld(weatherSpec.currentConditionCode);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -17,6 +17,7 @@
 package nodomain.freeyourgadget.gadgetbridge.activities.devicesettings;
 
 public class DeviceSettingsPreferenceConst {
+    public static final String PREF_LANGUAGE = "language";
     public static final String PREF_DATEFORMAT = "dateformat";
     public static final String PREF_TIMEFORMAT = "timeformat";
     public static final String PREF_WEARLOCATION = "wearlocation";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiConst.java
Patch:
@@ -59,7 +59,6 @@ public class HuamiConst {
     public static final String PREF_DISCONNECT_NOTIFICATION_END = "disconnect_notification_end";
 
     public static final String PREF_DISPLAY_ITEMS = "display_items";
-    public static final String PREF_LANGUAGE = "language";
     public static final String PREF_EXPOSE_HR_THIRDPARTY = "expose_hr_thirdparty";
     public static final String PREF_USE_CUSTOM_FONT = "use_custom_font";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeCoordinator.java
Patch:
@@ -163,6 +163,7 @@ public int getBondingStyle() {
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
+                R.xml.devicesettings_zetime,
                 R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_wearlocation,
         };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -136,6 +136,7 @@
 
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_ALLOW_HIGH_MTU;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_DATEFORMAT;
+import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_LANGUAGE;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_RESERVER_ALARMS_CALENDAR;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_SYNC_CALENDAR;
 import static nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst.PREF_TIMEFORMAT;
@@ -1829,7 +1830,7 @@ public void onSendConfiguration(String config) {
                 case PREF_DATEFORMAT:
                     setDateFormat(builder);
                     break;
-                case HuamiConst.PREF_LANGUAGE:
+                case PREF_LANGUAGE:
                     setLanguage(builder);
                     break;
                 case HuamiConst.PREF_EXPOSE_HR_THIRDPARTY:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -2381,7 +2381,7 @@ private HuamiSupport setExposeHRThridParty(TransactionBuilder builder) {
         return this;
     }
 
-    private void writeToChunked(TransactionBuilder builder, int type, byte[] data) {
+    protected void writeToChunked(TransactionBuilder builder, int type, byte[] data) {
         final int MAX_CHUNKLENGTH = mMTU - 6;
         int remaining = data.length;
         byte count = 0;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts/AmazfitGTSSupport.java
Patch:
@@ -73,7 +73,7 @@ protected AmazfitGTSSupport setDisplayItems(TransactionBuilder builder) {
         Set<String> pages = HuamiCoordinator.getDisplayItems(gbDevice.getAddress());
         LOG.info("Setting display items to " + (pages == null ? "none" : pages));
         byte[] command = new byte[]{
-                0x00, (byte) 0xC2, 0x00, 0x1E, // looks like chunked, but 0x00 :O
+                0x1E,
                 0x00, 0x00, (byte) 0xFF, 0x01, // Status
                 0x01, 0x00, (byte) 0xFF, 0x19, // PAI
                 0x02, 0x00, (byte) 0xFF, 0x02, // HR
@@ -94,7 +94,7 @@ protected AmazfitGTSSupport setDisplayItems(TransactionBuilder builder) {
         if (pages != null) {
             pages.add("settings");
             // it seem that we first have to put all ENABLED items into the array
-            int pos = 4;
+            int pos = 1;
             for (int i = 0; i < keys.length; i++) {
                 String key = keys[i];
                 byte id = ids[i];
@@ -115,7 +115,7 @@ protected AmazfitGTSSupport setDisplayItems(TransactionBuilder builder) {
                 }
             }
         }
-        builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_CHUNKEDTRANSFER), command);
+        writeToChunked(builder, 2, command);
 
         return this;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusConstants.java
Patch:
@@ -52,7 +52,7 @@ public final class WatchXPlusConstants extends LenovoWatchConstants {
 
     public static final String PREF_LONGSIT_START = "pref_longsit_start";
     public static final String PREF_LONGSIT_END = "pref_longsit_end";
-
+    public static final String PREF_SHOW_RAW_GRAPH = "show_raw_graph";
     // moved to gear icon (per device settings)
     public static final String PREF_LANGUAGE = "language";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusDeviceCoordinator.java
Patch:
@@ -258,8 +258,8 @@ public static boolean getLongSitHours(String deviceAddress, Calendar startOut, C
             LOG.info(" Long sit reminder is disabled ");
             return false;
         } else {
-            String end = prefs.getString(WatchXPlusConstants.PREF_LONGSIT_START, "06:00");
-            String start = prefs.getString(WatchXPlusConstants.PREF_LONGSIT_END, "23:00");
+            String start = prefs.getString(WatchXPlusConstants.PREF_LONGSIT_START, "06:00");
+            String end = prefs.getString(WatchXPlusConstants.PREF_LONGSIT_END, "23:00");
 
             DateFormat df = new SimpleDateFormat("HH:mm");
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts/AmazfitGTSFWInstallHandler.java
Patch:
@@ -22,7 +22,6 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWInstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
@@ -40,7 +39,7 @@ protected String getFwUpgradeNotice() {
 
     @Override
     protected AbstractMiBandFWHelper createHelper(Uri uri, Context context) throws IOException {
-        return new AmazfitGTRFWHelper(uri, context);
+        return new AmazfitGTSFWHelper(uri, context);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgtr/AmazfitGTRFirmwareInfo.java
Patch:
@@ -77,7 +77,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitgts/AmazfitGTSFirmwareInfo.java
Patch:
@@ -77,7 +77,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.INVALID;
         }
-        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER)) {
+        if (ArrayUtils.startsWith(bytes, WATCHFACE_HEADER) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET_NEW) || ArrayUtils.equals(bytes, WATCHFACE_HEADER, COMPRESSED_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -179,7 +179,6 @@ private void loadBackground() {
 
                 try {
                     this.backGroundImage = AssetImageFactory.createAssetImage(whiteBitmap, true, 0, 1, 0);
-                    queueWrite(new AssetFilePutRequest(this.backGroundImage, (byte) 0x00, this));
                 } catch (IOException e2) {
                     logger.error("Backgroundimage error", e2);
                 }
@@ -194,7 +193,7 @@ private void loadBackground() {
     public void setBackgroundImage(byte[] pixels) {
         if (pixels == null) {
             getBackgroundFile().delete();
-            this.backGroundImage = null;
+            loadBackground(); // recreates the white background in force-white mode, else backgroundImage=null
         } else {
             this.backGroundImage = AssetImageFactory.createAssetImage(pixels, 0, 0, 0);
             try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractWeekChartFragment.java
Patch:
@@ -126,7 +126,7 @@ private WeekChartsData<BarData> refreshWeekBeforeData(DBHandler db, BarChart bar
 
         long balance = 0;
         long daily_balance=0;
-
+        TOTAL_DAYS_FOR_AVERAGE=0;
 
         for (int counter = 0; counter < TOTAL_DAYS; counter++) {
             ActivityAmounts amounts = getActivityAmountsForDay(db, day, device);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -48,6 +48,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.MakibesF68Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipLiteCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbips.AmazfitBipSCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgtr.AmazfitGTRCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitgts.AmazfitGTSCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.itag.ITagCoordinator;
@@ -216,6 +217,7 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new AmazfitCor2Coordinator());
         result.add(new AmazfitGTRCoordinator());
         result.add(new AmazfitGTSCoordinator());
+        result.add(new AmazfitBipSCoordinator());
         result.add(new MiBand3Coordinator());
         result.add(new MiBand4Coordinator());
         result.add(new MiBand2HRXCoordinator());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -19,7 +19,6 @@
 import java.nio.BufferOverflowException;
 import java.util.ArrayList;
 import java.util.Calendar;
-import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -370,7 +369,7 @@ public void setTime() {
                         new TimeConfigItem(
                                 (int) (millis / 1000 + getDeviceSupport().getTimeOffset() * 60),
                                 (short) (millis % 1000),
-                                (short) ((zone.getRawOffset() + (zone.inDaylightTime(new Date()) ? 1 : 0)) / 60000)
+                                (short) (zone.getOffset(millis) / 60000)
                         ),
                         this), false
         );

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -59,13 +59,15 @@
 public class GB {
 
     public static final String NOTIFICATION_CHANNEL_ID = "gadgetbridge";
+    public static final String NOTIFICATION_CHANNEL_HIGH_PRIORITY_ID = "gadgetbridge_high_priority";
     public static final String NOTIFICATION_CHANNEL_ID_TRANSFER = "gadgetbridge transfer";
 
     public static final int NOTIFICATION_ID = 1;
     public static final int NOTIFICATION_ID_INSTALL = 2;
     public static final int NOTIFICATION_ID_LOW_BATTERY = 3;
     public static final int NOTIFICATION_ID_TRANSFER = 4;
     public static final int NOTIFICATION_ID_EXPORT_FAILED = 5;
+    public static final int NOTIFICATION_ID_PHONE_FIND = 6;
 
     private static final Logger LOG = LoggerFactory.getLogger(GB.class);
     public static final int INFO = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -291,7 +291,7 @@ public void onClick(View v) {
                                                          return;
                                                      }
                                                      GBApplication.deviceService().onFindDevice(true);
-                                                     Snackbar.make(parent, R.string.control_center_find_lost_device, Snackbar.LENGTH_INDEFINITE).setAction(R.string.find_lost_device_you_found_it, new View.OnClickListener()) {
+                                                     Snackbar.make(parent, R.string.control_center_find_lost_device, Snackbar.LENGTH_INDEFINITE).setAction(R.string.find_lost_device_you_found_it, new View.OnClickListener() {
                                                          @Override
                                                          public void onClick(View v) {
                                                              GBApplication.deviceService().onFindDevice(false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -521,7 +521,6 @@ public void onFindDevice(boolean start) {
             }
         } catch (UnsupportedOperationException e) {
             getDeviceSupport().notifiyException(e);
-            GB.toast("Please contact dakhnod@gmail.com\n", Toast.LENGTH_SHORT, GB.INFO);
         }
 
         if (start && getDeviceSupport().searchDevice) return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -343,6 +343,8 @@ private void checkAndRequestPermissions() {
             wantedPermissions.add(Manifest.permission.READ_CONTACTS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.CALL_PHONE);
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ANSWER_PHONE_CALLS) == PackageManager.PERMISSION_DENIED)
+            wantedPermissions.add(Manifest.permission.ANSWER_PHONE_CALLS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALL_LOG) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.READ_CALL_LOG);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridCoordinator.java
Patch:
@@ -167,7 +167,7 @@ public boolean supportsRealtimeData() {
 
     @Override
     public boolean supportsWeather() {
-        return false;
+        return true; // FIXME: not for old Q?
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -583,7 +583,7 @@ protected void handleBackgroundCharacteristic(BluetoothGattCharacteristic charac
                                         .put("set", new JSONObject()
                                                 .put("weatherInfo", new JSONObject()
                                                         .put("alive", ts + 60 * 60)
-                                                        .put("unit", "C") // FIXME: do not hardcode
+                                                        .put("unit", "c") // FIXME: do not hardcode
                                                         .put("temp", weatherSpec.currentTemp - 273)
                                                         .put("cond_id", 2) // FIXME do not hardcode 2=cloudy
                                                 )

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -43,7 +43,7 @@ public class GBDaoGenerator {
 
 
     public static void main(String[] args) throws Exception {
-        Schema schema = new Schema(23, MAIN_PACKAGE + ".entities");
+        Schema schema = new Schema(24, MAIN_PACKAGE + ".entities");
 
         Entity userAttributes = addUserAttributes(schema);
         Entity user = addUserInfo(schema, userAttributes);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -52,7 +52,6 @@ public enum DeviceType {
     TECLASTH30(60, R.drawable.ic_device_h30_h10, R.drawable.ic_device_h30_h10_disabled, R.string.devicetype_teclast_h30),
     Y5(61, R.drawable.ic_device_h30_h10, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_y5),
     XWATCH(70, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_xwatch),
-    FOSSILQHYBRID(80, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_qhybrid),
     ZETIME(80, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_mykronoz_zetime),
     ID115(90, R.drawable.ic_device_h30_h10, R.drawable.ic_device_h30_h10_disabled, R.string.devicetype_id115),
     WATCH9(100, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_watch9),
@@ -63,6 +62,7 @@ public enum DeviceType {
     BFH16(140, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_bfh16),
     MAKIBESHR3(150, R.drawable.ic_device_default, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_hr3),
     BANGLEJS(160, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_banglejs),
+    FOSSILQHYBRID(170, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_qhybrid),
     MIJIA_LYWSD02(200, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_mijia_lywsd02),
     ITAG(250, R.drawable.ic_device_itag, R.drawable.ic_device_itag_disabled, R.string.devicetype_itag),
     VIBRATISSIMO(300, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -467,7 +467,7 @@ synchronized public void write(byte[] bytes) {
         write_real(bytes);
     }
 
-    // FIXME: parts are supporsed to be generic code
+    // FIXME: parts are supposed to be generic code
     private boolean evaluateGBDeviceEventPebble(GBDeviceEvent deviceEvent) {
 
         if (deviceEvent instanceof GBDeviceEventVersionInfo) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -22,4 +22,5 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_WEARLOCATION = "wearlocation";
     public static final String PREF_SCREEN_ORIENTATION = "screen_orientation";
     public static final String PREF_RESERVER_ALARMS_CALENDAR = "reserve_alarms_calendar";
+    public static final String PREF_ALLOW_HIGH_MTU = "allow_high_mtu";
 }
\ No newline at end of file

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband4/MiBand4Coordinator.java
Patch:
@@ -97,7 +97,8 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_swipeunlock,
                 R.xml.devicesettings_expose_hr_thirdparty,
-                R.xml.devicesettings_pairingkey
+                R.xml.devicesettings_pairingkey,
+                R.xml.devicesettings_high_mtu
         };
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/notification/PlayNotificationRequest.java
Patch:
@@ -23,7 +23,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FilePutRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
 public class PlayNotificationRequest extends FilePutRequest {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/AssetFile.java
Patch:
@@ -3,7 +3,8 @@
 import java.nio.ByteBuffer;
 import java.util.zip.CRC32;
 
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
+
 
 public class AssetFile {
     private String fileName;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/AssetFilePutRequest.java
Patch:
@@ -7,7 +7,6 @@
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FilePutRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
 
 public class AssetFilePutRequest extends FilePutRequest {
     public AssetFilePutRequest(AssetFile[] files, byte subHandle, FossilWatchAdapter adapter) throws IOException {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/notification/NotificationFilterPutHRRequest.java
Patch:
@@ -5,11 +5,10 @@
 import java.util.ArrayList;
 import java.util.zip.CRC32;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.qhybrid.NotificationConfiguration;
 import nodomain.freeyourgadget.gadgetbridge.devices.qhybrid.NotificationHRConfiguration;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FilePutRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
 public class NotificationFilterPutHRRequest extends FilePutRequest {
     public NotificationFilterPutHRRequest(NotificationHRConfiguration[] configs, FossilWatchAdapter adapter) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/notification/NotificationImagePutRequest.java
Patch:
@@ -3,14 +3,12 @@
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
-import java.util.ArrayList;
-import java.util.stream.Stream;
 import java.util.zip.CRC32;
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.AssetFile;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.AssetFilePutRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
 public class NotificationImagePutRequest extends AssetFilePutRequest {
     private NotificationImagePutRequest(String packageName, AssetFile file, FossilWatchAdapter adapter) throws IOException {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/notification/PlayNotificationHRRequest.java
Patch:
@@ -8,8 +8,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.file.FilePutRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.notification.PlayNotificationRequest;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.utils.StringUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.StringUtils;
 
 public class PlayNotificationHRRequest extends FilePutRequest {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -51,6 +51,7 @@ private AppNotificationType() {
 
         // Generic Calendar
         put("com.android.calendar", NotificationType.GENERIC_CALENDAR);
+        put("mikado.bizcalpro", NotificationType.BUSINESS_CALENDAR);
 
         // Google
         put("com.google.android.gm", NotificationType.GMAIL);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -101,6 +101,7 @@ public void initialize() {
         // icons
 
         loadNotificationConfigurations();
+        queueWrite(new NotificationFilterPutHRRequest(this.notificationConfigurations, this));
         // queueWrite(new NotificationFilterPutHRRequest(this.notificationConfigurations,this));
 
         String[] appNames = {"instagram", "snapchat", "line", "whatsapp"};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil_hr/FossilHRWatchAdapter.java
Patch:
@@ -140,7 +140,7 @@ public void initialize() {
         overwriteButtons(null);
 
         loadWidgets();
-        // renderWidgets();
+        renderWidgets();
         // dunno if there is any point in doing this at start since when no watch is connected the QHybridSupport will not receive any intents anyway
 
         queueWrite(new SetDeviceStateRequest(GBDevice.State.INITIALIZED));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/AssetFilePutRequest.java
Patch:
@@ -11,14 +11,14 @@
 
 public class AssetFilePutRequest extends FilePutRequest {
     public AssetFilePutRequest(AssetFile[] files, FossilWatchAdapter adapter) throws IOException {
-        super((short) 0x0701, prepareFileData(files), adapter);
+        super((short) 0x0700, prepareFileData(files), adapter);
     }
     public AssetFilePutRequest(AssetFile file, FossilWatchAdapter adapter) throws IOException {
-        super((short) 0x0701, prepareFileData(file), adapter);
+        super((short) 0x0700, prepareFileData(file), adapter);
     }
 
     public AssetFilePutRequest(AssetFile file, int subHandle, FossilWatchAdapter adapter) throws IOException {
-        super((short) (0x0701 | subHandle), prepareFileData(file), adapter);
+        super((short) (0x0700 | subHandle), prepareFileData(file), adapter);
     }
 
     private static byte[] prepareFileData(AssetFile[] files) throws IOException {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -41,6 +41,7 @@
 import java.io.StringWriter;
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.UUID;
 
 import androidx.annotation.RequiresApi;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/AssetFilePutRequest.java
Patch:
@@ -34,8 +34,8 @@ private static byte[] prepareFileData(AssetFile[] files) throws IOException {
     }
 
     private static byte[] prepareFileData(AssetFile file){
-        int size = file.getFileName().length() + file.getFileData().length;
-        ByteBuffer buffer = ByteBuffer.allocate(size + 3);
+        int size = file.getFileName().length() + file.getFileData().length + 1 /**null byte **/;
+        ByteBuffer buffer = ByteBuffer.allocate(size + 2);
 
         buffer.order(ByteOrder.LITTLE_ENDIAN);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/music/MusicInfoSetRequest.java
Patch:
@@ -1,5 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.music;
 
+import java.nio.BufferOverflowException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 
@@ -11,7 +12,7 @@ public MusicInfoSetRequest(String artist, String album, String title, FossilWatc
         super((short) 0x0400, createFile(artist, album, title), adapter);
     }
 
-    private static byte[] createFile(String artist, String album, String title){
+    private static byte[] createFile(String artist, String album, String title) {
         int length = artist.length() + album.length() + title.length()
                 + 3 // null terminators
                 + 8; // length and header

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/music/MusicInfoSetRequest.java
Patch:
@@ -1,5 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.music;
 
+import java.nio.BufferOverflowException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 
@@ -11,7 +12,7 @@ public MusicInfoSetRequest(String artist, String album, String title, FossilWatc
         super((short) 0x0400, createFile(artist, album, title), adapter);
     }
 
-    private static byte[] createFile(String artist, String album, String title){
+    private static byte[] createFile(String artist, String album, String title) {
         int length = artist.length() + album.length() + title.length()
                 + 3 // null terminators
                 + 8; // length and header

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipCoordinator.java
Patch:
@@ -81,6 +81,7 @@ public boolean supportsWeather() {
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitbip,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_custom_emoji_font,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorCoordinator.java
Patch:
@@ -85,6 +85,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitcor,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_custom_emoji_font,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_disconnectnotification,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor2/AmazfitCor2Coordinator.java
Patch:
@@ -87,6 +87,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitcor,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_custom_emoji_font,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_disconnectnotification,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgtr/AmazfitGTRCoordinator.java
Patch:
@@ -90,6 +90,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitgtr,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_disconnectnotification,
                 R.xml.devicesettings_expose_hr_thirdparty,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitgts/AmazfitGTSCoordinator.java
Patch:
@@ -90,6 +90,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitgtr,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_disconnectnotification,
                 R.xml.devicesettings_expose_hr_thirdparty,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2Coordinator.java
Patch:
@@ -80,6 +80,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_miband2,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_donotdisturb_withauto,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_rotatewrist_cycleinfo,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband3/MiBand3Coordinator.java
Patch:
@@ -104,6 +104,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_miband3,
                 R.xml.devicesettings_wearlocation,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_dateformat,
                 R.xml.devicesettings_nightmode,
                 R.xml.devicesettings_donotdisturb_withauto,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband4/MiBand4Coordinator.java
Patch:
@@ -91,6 +91,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
                 R.xml.devicesettings_miband3,
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_custom_emoji_font,
+                R.xml.devicesettings_timeformat,
                 R.xml.devicesettings_dateformat,
                 R.xml.devicesettings_nightmode,
                 R.xml.devicesettings_liftwrist_display,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBEnvironment.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBException.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LockHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer, Taavi Eomäe
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Taavi Eomäe
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/Logging.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Carsten Pfeiffer, Daniele Gobbetti, Pavel Elagin
+/*  Copyright (C) 2016-2019 Carsten Pfeiffer, Daniele Gobbetti, Pavel Elagin
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LoggingExceptionHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractGBFragment.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, walkjivefly
 
     This file is part of Gadgetbridge.
@@ -17,8 +17,8 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.activities;
 
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 
 /**
  * Abstract base class for fragments. Provides hooks that are called when

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractListActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Christian
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Christian
     Fischer, Daniele Gobbetti, Lem Dulfo
 
     This file is part of Gadgetbridge.
@@ -26,8 +26,6 @@
 import android.preference.ListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceManager;
-import android.support.v4.app.NavUtils;
-import android.support.v4.content.LocalBroadcastManager;
 import android.text.InputType;
 import android.view.MenuItem;
 
@@ -36,6 +34,8 @@
 
 import java.util.Locale;
 
+import androidx.core.app.NavUtils;
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.util.AndroidUtils;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AndroidPairingActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Lem Dulfo
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Lem Dulfo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Lem Dulfo, Uwe Hermann
 
     This file is part of Gadgetbridge.
@@ -20,8 +20,6 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.NavUtils;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
@@ -38,6 +36,8 @@
 import java.util.Objects;
 import java.util.UUID;
 
+import androidx.annotation.NonNull;
+import androidx.core.app.NavUtils;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Lem Dulfo
 
     This file is part of Gadgetbridge.
@@ -23,8 +23,6 @@
 import android.content.IntentFilter;
 import android.net.Uri;
 import android.os.Bundle;
-import android.support.v4.app.NavUtils;
-import android.support.v4.content.LocalBroadcastManager;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
@@ -39,6 +37,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.core.app.NavUtils;
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.adapter.ItemWithDetailsAdapter;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/GBActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Lem Dulfo
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Lem Dulfo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/HeartRateUtils.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Carsten Pfeiffer, Dikay900
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/InstallActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/VibrationActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AppManagerFragmentCache.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AppManagerFragmentInstalledApps.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Daniele Gobbetti
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AppManagerFragmentInstalledWatchfaces.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivitySleepChartFragment.java
Patch:
@@ -1,5 +1,5 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
-    Gobbetti, Pavel Elagin
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti, Dikay900, Pavel Elagin
 
     This file is part of Gadgetbridge.
 
@@ -143,7 +143,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
 
     @Override
     protected void renderCharts() {
-        mChart.animateX(ANIM_TIME, Easing.EasingOption.EaseInOutQuart);
+        mChart.animateX(ANIM_TIME, Easing.EaseInOutQuart);
 //        mChart.invalidate();
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsData.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/CustomBarChart.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SingleEntryValueAnimator.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepUtils.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SpeedZonesFragment.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 0nse, Andreas Shimokawa, Carsten Pfeiffer,
+/*  Copyright (C) 2015-2019 0nse, Andreas Shimokawa, Carsten Pfeiffer,
     Daniele Gobbetti, Vebryn
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/TrailingActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/AbstractItemAdapter.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -17,7 +18,6 @@
 package nodomain.freeyourgadget.gadgetbridge.adapter;
 
 import android.content.Context;
-import android.support.annotation.DrawableRes;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -28,6 +28,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.annotation.DrawableRes;
 import nodomain.freeyourgadget.gadgetbridge.R;
 
 /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ActivitySummariesAdapter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer, Daniele Gobbetti
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/DeviceCandidateAdapter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAppAdapter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.
@@ -17,7 +17,6 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.adapter;
 
-import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
@@ -29,6 +28,7 @@
 import java.util.List;
 import java.util.UUID;
 
+import androidx.recyclerview.widget.RecyclerView;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.appmanager.AbstractAppManagerFragment;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ItemWithDetailsAdapter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBAccess.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, JohnnySun
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBOpenHelper.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBUpdateScript.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/PeriodicExporter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 Carsten Pfeiffer, Felix Konstantin Maurer
+/*  Copyright (C) 2018-2019 Carsten Pfeiffer, Felix Konstantin Maurer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/GadgetbridgeUpdate_14.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/GadgetbridgeUpdate_15.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/GadgetbridgeUpdate_17.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 protomors
+/*  Copyright (C) 2017-2019 protomors
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/SchemaMigration.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEvent.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventAppInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventAppManagement.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventAppMessage.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventBatteryInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Daniele Gobbetti
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Daniele Gobbetti, José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventCallControl.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Böhler, Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 
@@ -28,5 +28,6 @@ public enum Event {
         OUTGOING,
         REJECT,
         START,
+        IGNORE,
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventDisplayMessage.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventFindPhone.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventFmFrequency.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 José Rebelo
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventLEDColor.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 José Rebelo
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventMusicControl.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventNotificationControl.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -17,9 +17,10 @@
 package nodomain.freeyourgadget.gadgetbridge.deviceevents;
 
 public class GBDeviceEventNotificationControl extends GBDeviceEvent {
-    public int handle;
+    public long handle;
     public String phoneNumber;
     public String reply;
+    public String title;
     public Event event = Event.UNKNOWN;
 
     public enum Event {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventScreenshot.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventSendBytes.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventVersionInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/pebble/GBDeviceEventDataLogging.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa
+/*  Copyright (C) 2017-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceManager.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.
@@ -22,8 +22,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.support.annotation.Nullable;
-import android.support.v4.content.LocalBroadcastManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -35,6 +33,8 @@
 import java.util.List;
 import java.util.Set;
 
+import androidx.annotation.Nullable;
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/InstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/EXRIZUK8Coordinator.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 João Paulo Barraca, Quallenauge
+/*  Copyright (C) 2017-2019 Daniele Gobbetti, João Paulo Barraca, Quallenauge
 
     This file is part of Gadgetbridge.
 
@@ -21,8 +21,7 @@
 */
 
 
-import android.support.annotation.NonNull;
-
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusConstants.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer, João
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, João
     Paulo Barraca
 
     This file is part of Gadgetbridge.
@@ -128,8 +128,6 @@ public final class HPlusConstants {
 
     public static final String PREF_HPLUS_SCREENTIME = "hplus_screentime";
     public static final String PREF_HPLUS_ALLDAYHR = "hplus_alldayhr";
-    public static final String PREF_HPLUS_TIMEFORMAT = "hplus_timeformat";
-    public static final String PREF_HPLUS_WRIST = "hplus_wrist";
     public static final String PREF_HPLUS_SIT_START_TIME = "hplus_sit_start_time";
     public static final String PREF_HPLUS_SIT_END_TIME = "hplus_sit_end_time";
     public static final String PREF_HPLUS_UNICODE = "hplus_unicode";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/Q8Coordinator.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 João Paulo Barraca, tiparega
+/*  Copyright (C) 2017-2019 Daniele Gobbetti, João Paulo Barraca, tiparega
 
     This file is part of Gadgetbridge.
 
@@ -21,8 +21,7 @@
 */
 
 
-import android.support.annotation.NonNull;
-
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/ActivateDisplayOnLift.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, José Rebelo
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiFWHelper.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -18,10 +19,10 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.NonNull;
 
 import java.io.IOException;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.AbstractMiBandFWHelper;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiWeatherConditions.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa
+/*  Copyright (C) 2017-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipFWHelper.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -18,10 +19,10 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.NonNull;
 
 import java.io.IOException;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipFirmwareInfo;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipFWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorFWHelper.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorFWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorService.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2FWHelper.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -18,10 +19,10 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.NonNull;
 
 import java.io.IOException;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.Mi2FirmwareInfo;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2FWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband3/MiBand3FWHelper.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband3/MiBand3FWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband3/MiBand3Service.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, José Rebelo
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, José Rebelo
 
     This file is part of Gadgetbridge.
 
@@ -22,7 +22,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.ENDPOINT_DISPLAY_ITEMS;
 
 public class MiBand3Service {
-    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x30, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00};
+    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x30, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00};
     public static final byte[] COMMAND_ENABLE_BAND_SCREEN_UNLOCK = new byte[]{ENDPOINT_DISPLAY, 0x16, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_BAND_SCREEN_UNLOCK = new byte[]{ENDPOINT_DISPLAY, 0x16, 0x00, 0x00};
     public static final byte[] COMMAND_NIGHT_MODE_OFF = new byte[]{0x1a, 0x00};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/jyou/JYouConstants.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Sami Alaoui
+/*  Copyright (C) 2017-2019 Sami Alaoui
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/jyou/JYouSampleProvider.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.jyou;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import de.greenrobot.dao.AbstractDao;
 import de.greenrobot.dao.Property;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/liveview/LiveviewConstants.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Daniele Gobbetti
+/*  Copyright (C) 2016-2019 Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/AbstractMiBandFWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/AbstractMiBandSampleProvider.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -16,8 +17,7 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.devices.miband;
 
-import android.support.annotation.NonNull;
-
+import androidx.annotation.NonNull;
 import de.greenrobot.dao.AbstractDao;
 import de.greenrobot.dao.Property;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/DateTimeDisplay.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/DoNotDisturb.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 José Rebelo
+/*  Copyright (C) 2017-2019 José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.
@@ -19,13 +19,13 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.NonNull;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandSampleProvider.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Kasha
 
     This file is part of Gadgetbridge.
@@ -163,6 +163,8 @@ public class MiBandService {
 
     public static final byte COMMAND_SEND_NOTIFICATION = 0x8;
 
+    public static final byte COMMAND_FACTORYRESET = 0x9;
+
     public static final byte COMMAND_CONFIRM_ACTIVITY_DATA_TRANSFER_COMPLETE = 0xa;
 
     public static final byte COMMAND_SYNC = 0xb;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/UserInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 0nse, Andreas Shimokawa, Carsten Pfeiffer,
+/*  Copyright (C) 2015-2019 0nse, Andreas Shimokawa, Carsten Pfeiffer,
     Daniele Gobbetti, Sergey Trofimov
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/VibrationProfile.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Uwe Hermann
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Uwe Hermann
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/no1f1/No1F1Constants.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 protomors
+/*  Copyright (C) 2017-2019 protomors
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Uwe Hermann
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Uwe Hermann
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleColor.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleHealthSampleProvider.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleIconID.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa
+/*  Copyright (C) 2015-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleInstallable.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleMisfitSampleProvider.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleMorpheuzSampleProvider.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebblePairingActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.
@@ -24,7 +24,6 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.os.Bundle;
-import android.support.v4.content.LocalBroadcastManager;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -33,12 +32,13 @@
 
 import java.util.List;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import de.greenrobot.dao.query.Query;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenterv2;
 import nodomain.freeyourgadget.gadgetbridge.activities.DiscoveryActivity;
-import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/STM32CRC.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/roidmi/RoidmiConst.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 José Rebelo
+/*  Copyright (C) 2018-2019 José Rebelo
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/watch9/Watch9CalibrationActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 maxirnilian
+/*  Copyright (C) 2018-2019 Daniele Gobbetti, maxirnilian
 
     This file is part of Gadgetbridge.
 
@@ -19,11 +19,11 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.os.Handler;
-import android.support.v4.content.LocalBroadcastManager;
 import android.view.View;
 import android.widget.Button;
 import android.widget.NumberPicker;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/watch9/Watch9Constants.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 maxirnilian
+/*  Copyright (C) 2018-2019 maxirnilian
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/watch9/Watch9PairingActivity.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2018 maxirnilian
+/*  Copyright (C) 2018-2019 Daniele Gobbetti, maxirnilian
 
     This file is part of Gadgetbridge.
 
@@ -21,13 +21,13 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.os.Bundle;
-import android.support.v4.content.LocalBroadcastManager;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/entities/AbstractActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/entities/AbstractPebbleHealthActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/entities/AbstractPebbleMisfitActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/entities/AbstractPebbleMorpheuzActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/export/ActivityTrackExporter.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer, Daniele Gobbetti
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -16,11 +16,10 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.export;
 
-import android.support.annotation.NonNull;
-
 import java.io.File;
 import java.io.IOException;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityTrack;
 
 public interface ActivityTrackExporter {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AlarmReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, Daniele Gobbetti
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -27,7 +27,6 @@
 import android.location.Criteria;
 import android.location.Location;
 import android.location.LocationManager;
-import android.support.v4.app.ActivityCompat;
 
 import net.e175.klaus.solarpositioning.DeltaT;
 import net.e175.klaus.solarpositioning.SPA;
@@ -39,6 +38,7 @@
 import java.util.GregorianCalendar;
 import java.util.TimeZone;
 
+import androidx.core.app.ActivityCompat;
 import nodomain.freeyourgadget.gadgetbridge.BuildConfig;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEventSpec;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AutoStartReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer, Daniele Gobbetti, Felix
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti, Felix
     Konstantin Maurer
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothConnectReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa
+/*  Copyright (C) 2016-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothPairingRequestReceiver.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2016-2018 Andreas Shimokawa, João Paulo Barraca
+/*  Copyright (C) 2016-2019 Andreas Shimokawa, Daniele Gobbetti, João
+    Paulo Barraca
 
     This file is part of Gadgetbridge.
 
@@ -26,7 +27,6 @@
 
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
@@ -61,7 +61,7 @@ public void onReceive(Context context, Intent intent) {
 
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(gbDevice);
         try {
-            if (coordinator.getBondingStyle(gbDevice) == DeviceCoordinator.BONDING_STYLE_NONE) {
+            if (coordinator.getBondingStyle() == DeviceCoordinator.BONDING_STYLE_NONE) {
                 LOG.info("Aborting unwanted pairing request");
                 abortBroadcast();
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothStateChangeReceiver.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -20,11 +21,11 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.support.v4.content.LocalBroadcastManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/CMWeatherReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa
+/*  Copyright (C) 2017-2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/CalendarReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Daniel Hauck
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/MusicPlaybackReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 andre, Andreas Shimokawa, Avamander, Carsten
+/*  Copyright (C) 2015-2019 andre, Andreas Shimokawa, Avamander, Carsten
     Pfeiffer, Daniele Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/OmniJawsObserver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer, Daniele Gobbetti
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.
@@ -62,7 +62,6 @@ public void onReceive(Context context, Intent intent) {
         }
 
         NotificationSpec notificationSpec = new NotificationSpec();
-        notificationSpec.id = -1;
 
         String notificationData = intent.getStringExtra("notificationData");
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/TimeChangeReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/WeatherNotificationConfig.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/WeatherNotificationReceiver.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Daniele Gobbetti
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceApp.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -1,4 +1,5 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Taavi Eomäe
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
+    Gobbetti, Taavi Eomäe
 
     This file is part of Gadgetbridge.
 
@@ -20,7 +21,6 @@
 import android.os.Parcel;
 import android.os.ParcelUuid;
 import android.os.Parcelable;
-import android.support.annotation.NonNull;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -32,6 +32,7 @@
 import java.util.Set;
 import java.util.UUID;
 
+import androidx.annotation.NonNull;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBSummaryOfDay.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityAmount.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Pavel Elagin
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer, Pavel Elagin
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityAmounts.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityPoint.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti
 
     This file is part of Gadgetbridge.
 
@@ -16,10 +16,10 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.model;
 
-import android.support.annotation.Nullable;
-
 import java.util.Date;
 
+import androidx.annotation.Nullable;
+
 // https://www8.garmin.com/xmlschemas/TrackPointExtensionv1.xsd
 /*
 <trkpt lat="54.8591470" lon="-1.5754310">

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivitySample.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer
+/*  Copyright (C) 2015-2019 Andreas Shimokawa, Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivitySummary.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityTrack.java
Patch:
@@ -1,4 +1,4 @@
-/*  Copyright (C) 2017-2018 Carsten Pfeiffer
+/*  Copyright (C) 2017-2019 Carsten Pfeiffer
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -312,7 +312,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         });
 
         device = GBApplication.app().getDeviceManager().getSelectedDevice();
-        if (device == null || device.getType() != DeviceType.FOSSILQHYBRID) {
+        if (device == null || device.getType() != DeviceType.FOSSILQHYBRID || device.getFirmwareVersion().charAt(2) != '0') {
             setSettingsError(getString(R.string.watch_not_connected));
         } else {
             updateSettings();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridCoordinator.java
Patch:
@@ -145,7 +145,9 @@ public boolean supportsAppsManagement() {
 
     @Override
     public Class<? extends Activity> getAppsManagementActivity() {
-        return ConfigActivity.class;
+        GBDevice connectedDevice = GBApplication.app().getDeviceManager().getSelectedDevice();
+        boolean isHR = connectedDevice.getFirmwareVersion().charAt(2) == '1';
+        return isHR ? HRConfigActivity.class : ConfigActivity.class;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/WatchAdapter.java
Patch:
@@ -94,4 +94,7 @@ public String arrayToString(byte[] bytes) {
         }
         return s.substring(0, s.length() - 1) + "\n";
     }
+
+    public void setCommuteMenuMessage(String message, boolean finished) {
+    }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -86,7 +86,7 @@ public class FossilWatchAdapter extends WatchAdapter {
 
     private int lastButtonIndex = -1;
 
-    Logger logger = LoggerFactory.getLogger(getClass());
+    Logger logger = LoggerFactory.getLogger(getClass().getSimpleName());
 
     public FossilWatchAdapter(QHybridSupport deviceSupport) {
         super(deviceSupport);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FileCloseRequest.java
Patch:
@@ -24,6 +24,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.Request;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.FossilRequest;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
 
 public class FileCloseRequest extends FossilRequest {
     private boolean isFinished = false;
@@ -64,7 +65,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
 
         byte status = buffer.get(3);
 
-        if(status != 0) throw new RuntimeException("wrong response status");
+        if(status != 0) throw new RuntimeException("wrong response status: " + ResultCode.fromCode(status) + "   (" + status + ")");
 
         this.isFinished = true;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FileGetRequest.java
Patch:
@@ -28,6 +28,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.Request;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.FossilRequest;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
 
 public abstract class FileGetRequest extends FossilRequest {
     private short handle;
@@ -75,7 +76,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 byte status = buffer.get(3);
 
                 if(status != 0){
-                    throw new RuntimeException("FileGet error: " + status);
+                    throw new RuntimeException("FileGet error: " + ResultCode.fromCode(status) + "   (" + status + ")");
                 }
 
                 if(this.handle != handle){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FileLookupRequest.java
Patch:
@@ -28,6 +28,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.Request;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.FossilRequest;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
 
 public class FileLookupRequest extends FossilRequest {
     private short handle = -1;
@@ -82,7 +83,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 byte status = buffer.get(3);
 
                 if(status != 0){
-                    throw new RuntimeException("file lookup error: " + status);
+                    throw new RuntimeException("file lookup error: " + ResultCode.fromCode(status) + "   (" + status + ")");
                 }
 
                 if(this.handle != handle){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FilePutRequest.java
Patch:
@@ -27,6 +27,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.FossilRequest;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
 import nodomain.freeyourgadget.gadgetbridge.util.CRC32C;
 
 public class FilePutRequest extends FossilRequest {
@@ -100,7 +101,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                     byte status = value[3];
 
                     if (status != 0) {
-                        throw new RuntimeException("upload status: " + status);
+                        throw new RuntimeException("upload status: " + ResultCode.fromCode(status) + "   (" + status + ")");
                     }
 
                     if (handle != this.handle) {
@@ -146,7 +147,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
 
                     if (status != 0) {
                         onFilePut(false);
-                        throw new RuntimeException("wrong closing status: " + status);
+                        throw new RuntimeException("wrong closing status: " + ResultCode.fromCode(status) + "   (" + status + ")");
                     }
 
                     this.state = UploadState.UPLOADED;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FileVerifyRequest.java
Patch:
@@ -22,6 +22,7 @@
 import java.nio.ByteOrder;
 
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil.FossilRequest;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
 
 public class FileVerifyRequest extends FossilRequest {
     private boolean isFinished = false;
@@ -64,7 +65,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
 
         byte status = buffer.get(3);
 
-        if(status != 0) throw new RuntimeException("wrong response status");
+        if(status != 0) throw new RuntimeException("wrong response status: " + ResultCode.fromCode(status) + "   (" + status + ")");
 
         this.isFinished = true;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/FileEncryptedGetRequest.java
Patch:
@@ -86,7 +86,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 byte status = buffer.get(3);
 
                 if(status != 0){
-                    throw new RuntimeException("FileGet error: " + status);
+                    throw new RuntimeException("FileGet error: " + ResultCode.fromCode(status) + "   (" + status + ")");
                 }
 
                 if(this.handle != handle){
@@ -111,7 +111,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 int crcExpected = buffer.getInt(8);
 
                 if((int) crc.getValue() != crcExpected){
-                    throw new RuntimeException("handle: " + handle + "   expected: " + this.handle);
+                    throw new RuntimeException("crc: " + crc.getValue() + "   expected: " + crcExpected);
                 }
 
                 this.handleFileData(this.fileData);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/file/FilePutRawRequest.java
Patch:
@@ -87,7 +87,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                     byte status = value[3];
 
                     if (status != 0) {
-                        throw new RuntimeException("upload status: " + status);
+                        throw new RuntimeException("upload status: " + ResultCode.fromCode(status) + "   (" + status + ")");
                     }
 
                     if (handle != this.handle) {
@@ -133,7 +133,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
 
                     if (status != 0) {
                         onFilePut(false);
-                        throw new RuntimeException("wrong closing status: " + status);
+                        throw new RuntimeException("wrong closing status: " + ResultCode.fromCode(status) + "   (" + status + ")");
                     }
 
                     this.state = UploadState.UPLOADED;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil_hr/image/ImagesPutRequest.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ImagesPutRequest extends JsonPutRequest {
     public ImagesPutRequest(Image[] images, FossilWatchAdapter adapter) {
-        super((short) 0x0501, prepareObject(images), adapter);
+        super((short) 0x0500, prepareObject(images), adapter);
     }
 
     private static JSONObject prepareObject(Image[] images){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/misfit/DownloadFileRequest.java
Patch:
@@ -22,6 +22,8 @@
 import java.nio.ByteOrder;
 import java.util.zip.CRC32;
 
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.fossil_hr.file.ResultCode;
+
 public class DownloadFileRequest extends FileRequest {
     ByteBuffer buffer = null;
     public byte[] file = null;
@@ -69,7 +71,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 this.status = buffer1.get(3);
                 short realHandle = buffer1.getShort(1);
                 if(status != 0){
-                    log("wrong status: " + status);
+                    log("wrong status: " + ResultCode.fromCode(status) + "   (" + status + ")");
                 }else if(realHandle != fileHandle){
                     log("wrong handle: " + realHandle);
                     completed = true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -294,7 +294,7 @@ public HuamiSupport enableNotifications(TransactionBuilder builder, boolean enab
         builder.notify(getCharacteristic(GattService.UUID_SERVICE_CURRENT_TIME), enable);
         // Notify CHARACTERISTIC9 to receive random auth code
         builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_AUTH), enable);
-        builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_DEVICEEVENT), enable);
+
         return this;
     }
 
@@ -303,6 +303,7 @@ public HuamiSupport enableFurtherNotifications(TransactionBuilder builder, boole
         builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_6_BATTERY_INFO), enable);
         builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_AUDIO), enable);
         builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_AUDIODATA), enable);
+        builder.notify(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_DEVICEEVENT), enable);
 
         return this;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/InitOperation.java
Patch:
@@ -139,8 +139,8 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                         value[2] == HuamiService.AUTH_SUCCESS) {
                     TransactionBuilder builder = createTransactionBuilder("Authenticated, now initialize phase 2");
                     builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
-                    huamiSupport.requestDeviceInfo(builder);
                     huamiSupport.enableFurtherNotifications(builder, true);
+                    huamiSupport.requestDeviceInfo(builder);
                     huamiSupport.phase2Initialize(builder);
                     huamiSupport.phase3Initialize(builder);
                     huamiSupport.setInitialized(builder);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -265,9 +265,6 @@ private void setDeviceConnectionState(State newState) {
 
         mGbDevice.setState(newState);
         mGbDevice.sendDeviceUpdateIntent(mContext);
-        if (mConnectionLatch != null && newState == State.CONNECTED) {
-            mConnectionLatch.countDown();
-        }
     }
 
     public void disconnect() {
@@ -516,6 +513,9 @@ public void onServicesDiscovered(BluetoothGatt gatt, int status) {
                     // only propagate the successful event
                     getCallbackToUse().onServicesDiscovered(gatt);
                 }
+                if (mConnectionLatch != null) {
+                    mConnectionLatch.countDown();
+                }
             } else {
                 LOG.warn("onServicesDiscovered received: " + status);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -814,7 +814,7 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Device
             }
             if (mAutoConnectInvervalReceiver != null) {
                 unregisterReceiver(mAutoConnectInvervalReceiver);
-                mAutoConnectIntervalReceiver.destroy();
+                mAutoConnectInvervalReceiver.destroy();
                 mAutoConnectInvervalReceiver = null;
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusConstants.java
Patch:
@@ -51,7 +51,7 @@ public final class WatchXPlusConstants extends LenovoWatchConstants {
     public static final String PREF_LONGSIT_SWITCH = "pref_watchxplus_longsit_switch";
     public static final String PREF_LONGSIT_PERIOD = "pref_watchxplus_longsit_period";
     public static final String PREF_WXP_LANGUAGE = "pref_wxp_language";
-    public static final String PREF_POWER_MODE = "pref_wxp_power_mode";
+    public static final String PREF_POWER_MODE = "pref_wxp_power";
 
 
     // time format constants

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/watch9/Watch9DeviceCoordinator.java
Patch:
@@ -65,7 +65,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             return DeviceType.WATCH9;
             // add support for Watch X non-plus (same MAC address)
             // add support for Watch X Plus (same MAC address)
-        } else if ((macAddress.startsWith("1C:87:79")) && ((!deviceName.equalsIgnoreCase("WATCH X")) || (!deviceName.equalsIgnoreCase("WATCH XPLUS")))) {
+        } else if ((macAddress.startsWith("1C:87:79")) && ((!deviceName.equalsIgnoreCase("WATCH X")) && (!deviceName.equalsIgnoreCase("WATCH XPLUS")))) {
             return DeviceType.WATCH9;
         } else if (deviceName.equals("WATCH 9")) {
             return DeviceType.WATCH9;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -287,7 +287,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 return START_NOT_STICKY;
             }
 
-            if (mDeviceSupport == null || (!isInitialized() && !mDeviceSupport.useAutoConnect())) {
+            if (mDeviceSupport == null || (!isInitialized() && !action.equals(ACTION_DISCONNECT) && (!mDeviceSupport.useAutoConnect() || isConnected()))) {
                 // trying to send notification without valid Bluetooth connection
                 if (mGBDevice != null) {
                     // at least send back the current device state

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -62,7 +62,7 @@ public enum DeviceType {
     MISCALE2(131, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_miscale2),
     BFH16(140, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_bfh16),
     MAKIBESHR3(150, R.drawable.ic_device_default, R.drawable.ic_device_hplus_disabled, R.string.devicetype_makibes_hr3),
-    BANGLEJS(160, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabledz, R.string.devicetype_banglejs),
+    BANGLEJS(160, R.drawable.ic_device_zetime, R.drawable.ic_device_zetime_disabled, R.string.devicetype_banglejs),
     MIJIA_LYWSD02(200, R.drawable.ic_device_pebble, R.drawable.ic_device_pebble_disabled, R.string.devicetype_mijia_lywsd02),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSettingsPreferenceConst.java
Patch:
@@ -21,4 +21,5 @@ public class DeviceSettingsPreferenceConst {
     public static final String PREF_TIMEFORMAT = "timeformat";
     public static final String PREF_WEARLOCATION = "wearlocation";
     public static final String PREF_SCREEN_ORIENTATION = "screen_orientation";
+    public static final String PREF_RESERVER_ALARMS_CALENDAR = "reserve_alarms_calendar";
 }
\ No newline at end of file

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -395,7 +395,7 @@ public void run() {
         setInputTypeFor(HuamiConst.PREF_BUTTON_ACTION_PRESS_COUNT, InputType.TYPE_CLASS_NUMBER);
         setInputTypeFor(MiBandConst.PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS, InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_SIGNED);
         setInputTypeFor(MakibesHR3Constants.PREF_FIND_PHONE_DURATION, InputType.TYPE_CLASS_NUMBER);
-
+        setInputTypeFor(DeviceSettingsPreferenceConst.PREF_RESERVER_ALARMS_CALENDAR, InputType.TYPE_CLASS_NUMBER);
     }
 
     static DeviceSpecificSettingsFragment newInstance(String settingsFileSuffix, @NonNull int[] supportedSettings) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2Coordinator.java
Patch:
@@ -83,8 +83,9 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
                 R.xml.devicesettings_donotdisturb_withauto,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_rotatewrist_cycleinfo,
-                R.xml.devicesettings_expose_hr_thirdparty,
                 R.xml.devicesettings_buttonactions,
+                R.xml.devicesettings_reserve_alarms_calendar,
+                R.xml.devicesettings_expose_hr_thirdparty,
                 R.xml.devicesettings_pairingkey
         };
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -26,7 +26,6 @@ public final class MiBandConst {
     public static final String PREF_MIBAND_ADDRESS = "development_miaddr";  // FIXME: should be prefixed mi_
     public static final String PREF_MIBAND_ALARMS = "mi_alarms";
     public static final String PREF_MIBAND_DONT_ACK_TRANSFER = "mi_dont_ack_transfer";
-    public static final String PREF_MIBAND_RESERVE_ALARM_FOR_CALENDAR = "mi_reserve_alarm_calendar";
     public static final String PREF_MIBAND_USE_HR_FOR_SLEEP_DETECTION = "mi_hr_sleep_detection";
     public static final String PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS = "device_time_offset_hours";
 	public static final String PREF_MI2_DATEFORMAT = "mi2_dateformat";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -248,8 +248,8 @@ public static boolean getHeartrateSleepSupport(String miBandAddress) throws Ille
     }
 
     public static int getReservedAlarmSlots(String miBandAddress) throws IllegalArgumentException {
-        Prefs prefs = GBApplication.getPrefs();
-        return prefs.getInt(MiBandConst.PREF_MIBAND_RESERVE_ALARM_FOR_CALENDAR, 0);
+        Prefs prefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(miBandAddress));
+        return prefs.getInt(DeviceSettingsPreferenceConst.PREF_RESERVER_ALARMS_CALENDAR, 0);
     }
 
     @Override
@@ -263,6 +263,7 @@ public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_wearlocation,
                 R.xml.devicesettings_lowlatency_fwupdate,
+                R.xml.devicesettings_reserve_alarms_calendar,
                 R.xml.devicesettings_fake_timeoffset
         };
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -1542,8 +1542,8 @@ private void handleBatteryInfo(byte[] value, int status) {
     private HuamiSupport sendCalendarEvents(TransactionBuilder builder) {
         BluetoothGattCharacteristic characteristic = getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION);
 
-        Prefs prefs = GBApplication.getPrefs();
-        int availableSlots = prefs.getInt(MiBandConst.PREF_MIBAND_RESERVE_ALARM_FOR_CALENDAR, 0);
+        Prefs prefs = new Prefs(GBApplication.getDeviceSpecificSharedPrefs(gbDevice.getAddress()));
+        int availableSlots = prefs.getInt(DeviceSettingsPreferenceConst.PREF_RESERVER_ALARMS_CALENDAR, 0);
 
         if (availableSlots > 0) {
             CalendarEvents upcomingEvents = new CalendarEvents();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FilePutRequest.java
Patch:
@@ -201,7 +201,7 @@ private void prepareFilePackets(byte[] file) {
 
         CRC32C crc = new CRC32C();
 
-        crc.update(file,0,data.length);
+        crc.update(file,0,file.length);
         buffer.putInt((int) crc.getValue());
 
         byte[] data = buffer.array();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusPreferenceActivity.java
Patch:
@@ -23,7 +23,6 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.AbstractSettingsActivity;
-import nodomain.freeyourgadget.gadgetbridge.activities.devicesettings.DeviceSettingsPreferenceConst;
 
 public class WatchXPlusPreferenceActivity extends AbstractSettingsActivity {
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xwatch/XWatchSupport.java
Patch:
@@ -65,7 +65,6 @@ public class XWatchSupport extends AbstractBTLEDeviceSupport {
     private static final Logger LOG = LoggerFactory.getLogger(XWatchSupport.class);
     private final GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();
     TransactionBuilder builder = null;
-    private DeviceInfo mDeviceInfo;
     private byte dayToFetch; //0 = Today; 1 = Yesterday ...
     private byte maxDayToFetch;
     long lastButtonTimestamp;
@@ -359,7 +358,7 @@ public XWatchActivitySample createActivitySample(Device device, User user, int t
 
     private void handleDeviceInfo(byte[] value, int status) {
         if (status == BluetoothGatt.GATT_SUCCESS) {
-            mDeviceInfo = new DeviceInfo(value);
+            DeviceInfo mDeviceInfo = new DeviceInfo(value);
             LOG.warn("Device info: " + mDeviceInfo);
             versionCmd.hwVersion = "1.0";
             versionCmd.fwVersion = "1.0";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -352,7 +352,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                     }
                 });
 
-                if (device.getDeviceInfo(QHybridSupport.ITEM_EXTENDED_VIBRATION_SUPPORT).getDetails().equals("true")) {
+                if ("true".equals(device.getDeviceInfo(QHybridSupport.ITEM_EXTENDED_VIBRATION_SUPPORT).getDetails())) {
                     final int strengthProgress = (int) (Math.log(Double.parseDouble(device.getDeviceInfo(QHybridSupport.ITEM_VIBRATION_STRENGTH).getDetails()) / 25) / Math.log(2));
 
                     setSettingsEnabled(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -339,7 +339,7 @@ public void run() {
                     public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                         if (i == EditorInfo.IME_ACTION_DONE || i == EditorInfo.IME_ACTION_NEXT) {
                             String t = textView.getText().toString();
-                            if (!t.equals(null)) {
+                            if (!t.isEmpty()) {
                                 device.addDeviceInfo(new GenericItem(QHybridSupport.ITEM_STEP_GOAL, t));
                                 Intent intent = new Intent(QHybridSupport.QHYBRID_COMMAND_UPDATE_SETTINGS);
                                 intent.putExtra("EXTRA_SETTING", QHybridSupport.ITEM_STEP_GOAL);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridCoordinator.java
Patch:
@@ -93,7 +93,7 @@ public boolean supportsScreenshots() {
 
     public boolean supportsAlarmConfiguration() {
         GBDevice connectedDevice = GBApplication.app().getDeviceManager().getSelectedDevice();
-        if(connectedDevice == null || connectedDevice.getType() != DeviceType.FOSSILQHYBRID){
+        if(connectedDevice == null || connectedDevice.getType() != DeviceType.FOSSILQHYBRID || connectedDevice.getState() != GBDevice.State.INITIALIZED){
             return false;
         }
         return true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -51,6 +51,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.WatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.WatchAdapterFactory;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.adapter.fossil.FossilWatchAdapter;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.misfit.DownloadFileRequest;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.qhybrid.requests.misfit.PlayNotificationRequest;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
@@ -178,7 +179,8 @@ public void onReceive(Context context, Intent intent) {
                         break;
                     }
                     case QHYBRID_COMMAND_OVERWRITE_BUTTONS: {
-                        watchAdapter.overwriteButtons();
+                        String buttonConfig = intent.getStringExtra(FossilWatchAdapter.ITEM_BUTTONS);
+                        watchAdapter.overwriteButtons(buttonConfig);
                         break;
                     }
                     case QHYBRID_COMMAND_NOTIFICATION_CONFIG_CHANGED: {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/WatchAdapter.java
Patch:
@@ -31,7 +31,7 @@ public Context getContext(){
     public abstract void playPairingAnimation();
     public abstract void playNotification(NotificationConfiguration config);
     public abstract void setTime();
-    public abstract void overwriteButtons();
+    public abstract void overwriteButtons(String buttonConfigJson);
     public abstract void setActivityHand(double progress);
     public abstract void setHands(short hour, short minute);
     public abstract void vibrate(PlayNotificationRequest.VibrationType vibration);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/misfit/MisfitWatchAdapter.java
Patch:
@@ -462,7 +462,7 @@ public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
     }
 
     @Override
-    public void overwriteButtons() {
+    public void overwriteButtons(String jsonConfigString) {
         uploadFileRequest = new UploadFileRequest((short) 0x0800, new byte[]{
                 (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x10, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x20, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x0C, (byte) 0x00, (byte) 0x00,
                 (byte) 0x30, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x0C, (byte) 0x2E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/lenovo/watchxplus/WatchXPlusConstants.java
Patch:
@@ -79,6 +79,7 @@ public final class WatchXPlusConstants extends LenovoWatchConstants {
     public static final byte[] CMD_SET_PERSONAL_INFO            = new byte[]{0x01, 0x0E};
     public static final byte[] CMD_INACTIVITY_REMINDER_SWITCH   = new byte[]{0x03, 0x51};
     public static final byte[] CMD_INACTIVITY_REMINDER_SET      = new byte[]{0x03, 0x52};
+    public static final byte[] CMD_SET_UNITS                    = new byte[]{0x03, -0x6D};
 
     public static final byte[] CMD_FITNESS_GOAL_SETTINGS        = new byte[]{0x10, 0x02};
     public static final byte[] CMD_DAY_STEPS_INFO               = new byte[]{0x10, 0x03};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -353,10 +353,10 @@ public void onClick(View v) {
                             final int currentIndex = i;
                             String configName = buttonConfig.getString(i);
                             TextView buttonTextView = new TextView(ConfigActivity.this);
+                            buttonTextView.setTextColor(Color.WHITE);
+                            buttonTextView.setTextSize(20);
                             try {
                                 ConfigPayload payload = ConfigPayload.valueOf(configName);
-                                buttonTextView.setTextColor(Color.WHITE);
-                                buttonTextView.setTextSize(20);
                                 buttonTextView.setText("Button " + (i + 1) + ": " + payload.getDescription());
                             } catch (IllegalArgumentException e) {
                                 buttonTextView.setText("Button " + (i + 1) + ": Unknown");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -78,7 +78,7 @@ public void onConfigurationsGet(ConfigPayload[] configs) {
                 super.onConfigurationsGet(configs);
 
                 JSONArray buttons = new JSONArray();
-                for (ConfigPayload payload : configs) buttons.put(payload.toString());
+                for (ConfigPayload payload : configs) buttons.put(String.valueOf(payload));
                 String json = buttons.toString();
                 getDeviceSupport().getDevice().addDeviceInfo(new GenericItem(ITEM_BUTTONS, json));
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -337,6 +337,7 @@ public double calculateNotificationProgress() {
         return notificationProgress;
     }
 
+    //TODO toggle "Notifications when screen on" options on this check
     private void showNotificationCountOnActivityHand(double progress) {
         if (useActivityHand) {
             watchAdapter.setActivityHand(progress);
@@ -479,6 +480,7 @@ public boolean onCharacteristicRead(BluetoothGatt gatt, BluetoothGattCharacteris
                 gbDevice.setFirmwareVersion(firmwareVersion);
                 this.watchAdapter = new WatchAdapterFactory().createWatchAdapter(firmwareVersion, this);
                 this.watchAdapter.initialize();
+                showNotificationsByAllActive(false);
                 break;
             }
             case "00002a24-0000-1000-8000-00805f9b34fb": {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -56,7 +56,7 @@ public FossilWatchAdapter(QHybridSupport deviceSupport) {
 
     @Override
     public void initialize() {
-        // playPairingAnimation();
+        playPairingAnimation();
         // queueWrite(new FileDeleteRequest((short) 0x0200));
         queueWrite(new RequestMtuRequest(512));
         queueWrite(new ConfigurationGetRequest(this));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/fossil/FossilWatchAdapter.java
Patch:
@@ -154,7 +154,7 @@ public void setVibrationStrength(short strength) {
 
 
         queueWrite(
-                new ConfigurationPutRequest(new ConfigurationPutRequest.ConfigItem[]{vibrationItem, vibrationItem, vibrationItem}, this)
+                new ConfigurationPutRequest(new ConfigurationPutRequest.ConfigItem[]{vibrationItem}, this)
         );
         // queueWrite(new FileVerifyRequest((short) 0x0800));
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridAppChoserActivity.java
Patch:
@@ -123,6 +123,7 @@ public void onFinish(boolean success, NotificationConfiguration config) {
                 if(success){
                     try {
                         helper.saveNotificationConfiguration(config);
+                        LocalBroadcastManager.getInstance(QHybridAppChoserActivity.this).sendBroadcast(new Intent(QHybridSupport.QHYBRID_COMMAND_NOTIFICATION_CONFIG_CHANGED));
                     } catch (GBException e) {
                         e.printStackTrace();
                         GB.toast("error saving configuration", Toast.LENGTH_SHORT, GB.ERROR, e);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/adapter/WatchAdapter.java
Patch:
@@ -48,7 +48,7 @@ public Context getContext(){
     public abstract void onFetchActivityData();
 
     public abstract boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic);
-
+    public void onMtuChanged(BluetoothGatt gatt, int mtu, int status){};
 
 
     public String arrayToString(byte[] bytes) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/FossilRequest.java
Patch:
@@ -7,6 +7,9 @@
 public abstract class FossilRequest extends Request {
     public abstract boolean isFinished();
 
+    public byte getType(){
+        return getStartSequence()[0];
+    }
 
     @Override
     public UUID getRequestUUID() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/fossil/file/FileLookupRequest.java
Patch:
@@ -66,7 +66,7 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
                 byte status = buffer.get(3);
 
                 if(status != 0){
-                    throw new RuntimeException("FileGet error: " + status);
+                    throw new RuntimeException("file lookup error: " + status);
                 }
 
                 if(this.handle != handle){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband3/MiBand3Support.java
Patch:
@@ -36,6 +36,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband3.MiBand3FWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband3.MiBand3Service;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
+import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipSupport;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridBaseSupport.java
Patch:
@@ -17,8 +17,8 @@
 import nodomain.freeyourgadget.gadgetbridge.model.WeatherSpec;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport;
 
-public class QHybridBaseSupport extends AbstractBTLEDeviceSupport {
-    public QHybridBaseSupport(Logger logger) {
+class QHybridBaseSupport extends AbstractBTLEDeviceSupport {
+    QHybridBaseSupport(Logger logger) {
         super(logger);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -325,7 +325,6 @@ public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
                     activityHandCheckbox.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View v) {
-                            GB.toast("nah.", Toast.LENGTH_SHORT, GB.INFO);
                             GB.toast("nah.", Toast.LENGTH_SHORT, GB.INFO);
                             ((CheckBox)v).setChecked(false);
                         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -124,7 +124,7 @@ else if (customIconId == HuamiIcon.EMAIL) {
                     appSuffix = appName.getBytes();
                     suffixlength = appSuffix.length;
                 }
-                if (gbDevice.getType() == DeviceType.MIBAND4) {
+                if (gbDevice.getType() == DeviceType.MIBAND4 || gbDevice.getType() == DeviceType.AMAZFITGTR) {
                     prefixlength += 4;
                 }
 
@@ -134,7 +134,7 @@ else if (customIconId == HuamiIcon.EMAIL) {
                 byte[] command = new byte[length + prefixlength + suffixlength];
                 int pos = 0;
                 command[pos++] = (byte) alertCategory.getId();
-                if (gbDevice.getType() == DeviceType.MIBAND4) {
+                if (gbDevice.getType() == DeviceType.MIBAND4 || gbDevice.getType() == DeviceType.AMAZFITGTR) {
                     command[pos++] = 0; // TODO
                     command[pos++] = 0;
                     command[pos++] = 0;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/makibeshr3/MakibesHR3Coordinator.java
Patch:
@@ -55,14 +55,14 @@ public static boolean shouldEnableHeadsUpScreen(SharedPreferences sharedPrefs) {
         String liftMode = sharedPrefs.getString(MakibesHR3Constants.PREF_HEADS_UP_SCREEN, getContext().getString(R.string.p_on));
 
         // Makibes HR3 doesn't support scheduled intervals. Treat it as "on".
-        return (liftMode != getContext().getString(R.string.p_off));
+        return !liftMode.equals(getContext().getString(R.string.p_off));
     }
 
     public static boolean shouldEnableLostReminder(SharedPreferences sharedPrefs) {
         String lostReminder = sharedPrefs.getString(MakibesHR3Constants.PREF_LOST_REMINDER, getContext().getString(R.string.p_on));
 
         // Makibes HR3 doesn't support scheduled intervals. Treat it as "on".
-        return (lostReminder != getContext().getString(R.string.p_off));
+        return !lostReminder.equals(getContext().getString(R.string.p_off));
     }
 
     public static byte getTimeMode(SharedPreferences sharedPrefs) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -346,7 +346,7 @@ private void pulse() {
 
         renderCharts();
 
-        // have to enable it again and again to keep it measureing
+        // have to enable it again and again to keep it measuring
         GBApplication.deviceService().onEnableRealtimeHeartRateMeasurement(true);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/makibeshr3/MakibesHR3DeviceSupport.java
Patch:
@@ -452,7 +452,6 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
 
         SharedPreferences preferences = GBApplication.getDeviceSpecificSharedPrefs(this.getDevice().getAddress());
 
-        // TODO: Why doesn't this work?
         preferences.registerOnSharedPreferenceChangeListener(this);
 
         return builder;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/QHybridCoordinator.java
Patch:
@@ -40,7 +40,7 @@ public class QHybridCoordinator extends AbstractDeviceCoordinator {
     @Override
     public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         for(ParcelUuid uuid : candidate.getServiceUuids()){
-            if(uuid.getUuid().toString().equals("3dda0001-957f-7d4a-34a6-74696673696")){
+            if(uuid.getUuid().toString().equals("3dda0001-957f-7d4a-34a6-74696673696d")){
                 return DeviceType.FOSSILQHYBRID;
             }
         }
@@ -51,7 +51,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
     @NonNull
     @Override
     public Collection<? extends ScanFilter> createBLEScanFilters() {
-        return Collections.singletonList(new ScanFilter.Builder().setServiceUuid(ParcelUuid.fromString("3dda0001-957f-7d4a-34a6-74696673696")).build());
+        return Collections.singletonList(new ScanFilter.Builder().setServiceUuid(ParcelUuid.fromString("3dda0001-957f-7d4a-34a6-74696673696d")).build());
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DbManagementActivity.java
Patch:
@@ -109,7 +109,7 @@ public void onClick(View v) {
 
         Prefs prefs = GBApplication.getPrefs();
         boolean autoExportEnabled = prefs.getBoolean(GBPrefs.AUTO_EXPORT_ENABLED, false);
-        Integer autoExportInterval = prefs.getInt(GBPrefs.AUTO_EXPORT_INTERVAL, 0);
+        int autoExportInterval = prefs.getInt(GBPrefs.AUTO_EXPORT_INTERVAL, 0);
         //returns an ugly content://...
         //String autoExportLocation = prefs.getString(GBPrefs.AUTO_EXPORT_LOCATION, "");
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerM7S.java
Patch:
@@ -105,7 +105,7 @@ private int getIconForConditionCode(int conditionCode) {
             return HAIL;
         } else if (conditionCode >= 907 && conditionCode < 957) {
             return WIND;
-        } else if (conditionCode == 905 || (conditionCode >= 957 && conditionCode < 900)) {
+        } else if (conditionCode == 905) {
             return EXTREME_WIND;
         } else if (conditionCode == 900) {
             return TORNADO;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerRealWeather.java
Patch:
@@ -99,7 +99,7 @@ private int getIconForConditionCode(int conditionCode, boolean isNight) {
             return CLOUD;
         } else if (conditionCode >= 907 && conditionCode < 957) {
             return STORM;
-        } else if (conditionCode == 905 || (conditionCode >= 957 && conditionCode < 900)) {
+        } else if (conditionCode == 905) {
             return STORM;
         } else if (conditionCode == 900) {
             return STORM;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerSimplyLight.java
Patch:
@@ -88,7 +88,7 @@ private int getConditionForConditionCode(int conditionCode) {
             return HAIL;
         } else if (conditionCode >= 907 && conditionCode < 957) {
             return WIND;
-        } else if (conditionCode == 905 || (conditionCode >= 957 && conditionCode < 900)) {
+        } else if (conditionCode == 905) {
             return EXTREME_WIND;
         } else if (conditionCode == 900) {
             return TORNADO;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerYWeather.java
Patch:
@@ -130,7 +130,7 @@ private int getIconForConditionCode(int conditionCode, boolean isNight) {
             return SLEET;
         } else if (conditionCode >= 907 && conditionCode < 957) {
             return STORM;
-        } else if (conditionCode == 905 || (conditionCode >= 957 && conditionCode < 900)) {
+        } else if (conditionCode == 905) {
             return STORM;
         } else if (conditionCode == 900) {
             return STORM;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -2136,7 +2136,7 @@ private void setLanguage(TransactionBuilder builder) {
                 ZeTimeConstants.CMD_END
         };
 
-        if (language.equals("default") || (language == null)) {
+        if (language == null || language.equals("default")) {
             locale = Locale.getDefault();
             language = locale.getLanguage();
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -167,9 +167,6 @@ public int[] getColorPresets() {
     @Override
     public boolean supportsUnicodeEmojis() { return false; }
 
-    @Override
-    public boolean supportsCustomFont() { return false; }
-
     @Override
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorCoordinator.java
Patch:
@@ -84,6 +84,7 @@ public boolean supportsMusicInfo() {
     public int[] getSupportedDeviceSpecificSettings(GBDevice device) {
         return new int[]{
                 R.xml.devicesettings_amazfitcor,
+                R.xml.devicesettings_custom_emoji_font,
                 R.xml.devicesettings_liftwrist_display,
                 R.xml.devicesettings_disconnectnotification,
                 R.xml.devicesettings_expose_hr_thirdparty,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -1704,7 +1704,7 @@ public void onSendWeather(WeatherSpec weatherSpec) {
 
 
             if (characteristicChunked != null) {
-                writeToChunked(builder, 4, buf.array());
+                writeToChunked(builder, 1, buf.array());
             } else {
                 builder.write(getCharacteristic(AmazfitBipService.UUID_CHARACTERISTIC_WEATHER), buf.array());
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/TimestampValueFormatter.java
Patch:
@@ -16,8 +16,6 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.activities.charts;
 
-import com.github.mikephil.charting.components.AxisBase;
-import com.github.mikephil.charting.formatter.IAxisValueFormatter;
 import com.github.mikephil.charting.formatter.ValueFormatter;
 
 import java.text.DateFormat;
@@ -43,7 +41,7 @@ public TimestampValueFormatter(DateFormat dateFormat) {
     }
 
     @Override
-    public String getFormattedValue(float value, AxisBase axis) {
+    public String getFormattedValue(float value) {
         cal.setTimeInMillis((int) value * 1000L);
         Date date = cal.getTime();
         String dateString = dateFormat.format(date);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -166,14 +166,14 @@ private BaseActivitySummary parseSummary(ByteArrayOutputStream stream) {
         ByteBuffer buffer = ByteBuffer.wrap(stream.toByteArray()).order(ByteOrder.LITTLE_ENDIAN);
 //        summary.setVersion(BLETypeConversions.toUnsigned(buffer.getShort()));
         short version = buffer.getShort(); // version
-        LOG.debug("Got verison " + version);
+        LOG.debug("Got sport summary version " + version);
         int activityKind = ActivityKind.TYPE_UNKNOWN;
         try {
             int rawKind = BLETypeConversions.toUnsigned(buffer.getShort());
             HuamiSportsActivityType activityType = HuamiSportsActivityType.fromCode(rawKind);
             activityKind = activityType.toActivityKind();
         } catch (Exception ex) {
-            LOG.error("Error mapping acivity kind: " + ex.getMessage(), ex);
+            LOG.error("Error mapping activity kind: " + ex.getMessage(), ex);
         }
         summary.setActivityKind(activityKind);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -44,7 +44,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSupport;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.BipActivityType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiSportsActivityType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
@@ -170,7 +170,7 @@ private BaseActivitySummary parseSummary(ByteArrayOutputStream stream) {
         int activityKind = ActivityKind.TYPE_UNKNOWN;
         try {
             int rawKind = BLETypeConversions.toUnsigned(buffer.getShort());
-            BipActivityType activityType = BipActivityType.fromCode(rawKind);
+            HuamiSportsActivityType activityType = HuamiSportsActivityType.fromCode(rawKind);
             activityKind = activityType.toActivityKind();
         } catch (Exception ex) {
             LOG.error("Error mapping acivity kind: " + ex.getMessage(), ex);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AndroidUtils.java
Patch:
@@ -224,7 +224,7 @@ public static void viewFile(String path, String action, Context context) throws
         Uri contentUri = FileProvider.getUriForFile(context,
                 context.getApplicationContext().getPackageName() + ".screenshot_provider", file);
         intent.setFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION | Intent.FLAG_GRANT_READ_URI_PERMISSION);
-        intent.setData(contentUri);
+        intent.setDataAndType(contentUri,"application/gpx+xml");
         context.startActivity(intent);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/mijia_lywsd02/MijiaLywsd02Support.java
Patch:
@@ -1,5 +1,4 @@
-/*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Sebastian
-    Kranz
+/*  Copyright (C) 2019 Andreas Shimokawa
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor2/AmazfitCor2Coordinator.java
Patch:
@@ -26,6 +26,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband4/MiBand4Coordinator.java
Patch:
@@ -57,9 +57,11 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
 
     }
 
+
     @Override
     public InstallHandler findInstallHandler(Uri uri, Context context) {
-        return null;
+        MiBand4FWInstallHandler handler = new MiBand4FWInstallHandler(uri, context);
+        return handler.isValid() ? handler : null;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiFirmwareInfo.java
Patch:
@@ -49,6 +49,8 @@ public abstract class HuamiFirmwareInfo {
     };
 
     protected static final int FONT_TYPE_OFFSET = 0x9;
+    protected static final int COMPRESSED_RES_HEADER_OFFSET = 0x9;
+    protected static final int COMPRESSED_RES_HEADER_OFFSET_NEW = 0xd;
 
     private HuamiFirmwareType firmwareType;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor2/AmazfitCor2FirmwareInfo.java
Patch:
@@ -31,9 +31,6 @@ public class AmazfitCor2FirmwareInfo extends HuamiFirmwareInfo {
             0x00, (byte) 0x98, 0x00, 0x20, (byte) 0xA5, 0x04, 0x00, 0x20, (byte) 0xAD, 0x04, 0x00, 0x20, (byte) 0xC5, 0x04, 0x00, 0x20
     };
 
-    private static final int COMPRESSED_RES_HEADER_OFFSET = 0x9;
-    private static final int COMPRESSED_RES_HEADER_OFFSET_NEW = 0xd;
-
     private static Map<Integer, String> crcToVersion = new HashMap<>();
 
     static {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband4/MiBand4Support.java
Patch:
@@ -22,6 +22,7 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband4.MiBand4FWHelper;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband3.MiBand3Support;
 
 public class MiBand4Support extends MiBand3Support {
@@ -33,6 +34,6 @@ public byte getCryptFlags() {
 
     @Override
     public HuamiFWHelper createFWHelper(Uri uri, Context context) throws IOException {
-        return null;
+        return new MiBand4FWHelper(uri, context);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -44,6 +44,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.CallSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
@@ -143,7 +144,7 @@ else if (customIconId == HuamiIcon.EMAIL) {
                 byte[] command = new byte[length + prefixlength + suffixlength];
 
                 command[0] = (byte) alertCategory.getId();
-                command[1] = 1;
+                command[1] = (byte) (gbDevice.getType() == DeviceType.MIBAND4 ? 0 : 1); // FIXME: remove hack
                 if (alertCategory == AlertCategory.CustomHuami) {
                     command[2] = customIconId;
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -590,7 +590,7 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int positi
 
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(deviceCandidate);
         GBDevice device = DeviceHelper.getInstance().toSupportedDevice(deviceCandidate);
-        if (coordinator.getSupportedDeviceSpecificSettings(device) != null) {
+        if (coordinator.getSupportedDeviceSpecificSettings(device) == null) {
             return true;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/qhybrid/ConfigActivity.java
Patch:
@@ -271,7 +271,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                     SeekBar seekBar = findViewById(R.id.vibrationStrengthBar);
                     seekBar.setProgress(strengthProgress);
                 }else{
-                    findViewById(R.id.vibrationStrengthLayout).setEnabled(false);
+                    findViewById(R.id.vibrationStrengthBar).setEnabled(false);
                     findViewById(R.id.vibrationStrengthLayout).setAlpha(0.5f);
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/QHybridSupport.java
Patch:
@@ -385,6 +385,7 @@ private boolean handleFileUploadCharacteristic(BluetoothGattCharacteristic chara
         switch (uploadFileRequest.state){
             case ERROR:
                 buttonOverwriteListener.OnButtonOverwrite(false);
+                uploadFileRequest = null;
                 break;
             case UPLOAD:
                 for(byte[] packet : this.uploadFileRequest.packets){

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/UploadFileRequest.java
Patch:
@@ -18,12 +18,12 @@ public enum UploadState{INITIALIZED, UPLOAD, UPLOADED, ERROR}
     public ArrayList<byte[]> packets = new ArrayList<>();
 
     public UploadFileRequest(short handle, byte[] file) {
-        int fileLength = file.length;
+        int fileLength = file.length + 4;
         ByteBuffer buffer = this.createBuffer();
         buffer.putShort(1, handle);
         buffer.putInt(3, 0);
-        buffer.putInt(7, fileLength - 10);
-        buffer.putInt(11, fileLength - 10);
+        buffer.putInt(7, fileLength);
+        buffer.putInt(11, fileLength);
 
         this.data = buffer.array();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/qhybrid/requests/UploadFileRequest.java
Patch:
@@ -38,11 +38,13 @@ public void handleResponse(BluetoothGattCharacteristic characteristic) {
         if (value.length == 4) {
             if (value[1] != 0) {
                 state = UploadState.ERROR;
+                return;
             }
             state = UploadState.UPLOAD;
         }else if(value.length == 9){
             if(value[1] != 0){
                 state = UploadState.ERROR;
+                return;
             }
             state = UploadState.UPLOADED;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -38,7 +38,7 @@ public enum DeviceType {
     AMAZFITCOR(13, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor),
     MIBAND3(14, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband3),
     AMAZFITCOR2(15, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor2),
-    MIBAND4(15, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband4),
+    MIBAND4(16, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband4),
     VIBRATISSIMO(20, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/Tryout.java
Patch:
@@ -33,7 +33,7 @@ public void blah() {
     @Test
     public void testCalendarBytes() {
         GregorianCalendar calendar = MiBandDateConverter.createCalendar();
-        byte[] bytes = MiBandDateConverter.calendarToRawBytes(calendar);
+        byte[] bytes = MiBandDateConverter.calendarToRawBytes(calendar,"fake");
         LOG.info("Calender: " + DateTimeUtils.formatDateTime(calendar.getTime()));
         Logging.logBytes(LOG, bytes);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband3/MiBand3Service.java
Patch:
@@ -22,7 +22,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.ENDPOINT_DISPLAY_ITEMS;
 
 public class MiBand3Service {
-    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x30, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00};
+    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x30, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00};
     public static final byte[] COMMAND_ENABLE_BAND_SCREEN_UNLOCK = new byte[]{ENDPOINT_DISPLAY, 0x16, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_BAND_SCREEN_UNLOCK = new byte[]{ENDPOINT_DISPLAY, 0x16, 0x00, 0x00};
     public static final byte[] COMMAND_NIGHT_MODE_OFF = new byte[]{0x1a, 0x00};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -590,7 +590,7 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int positi
 
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(deviceCandidate);
         GBDevice device = DeviceHelper.getInstance().toSupportedDevice(deviceCandidate);
-        if (!coordinator.supportsDeviceSpecificSettings(device)) {
+        if (coordinator.getSupportedDeviceSpecificSettings(device) != null) {
             return true;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -152,7 +152,7 @@ public boolean onLongClick(View v) {
         }
 
         //device specific settings
-        holder.deviceSpecificSettingsView.setVisibility(coordinator.supportsDeviceSpecificSettings(device) ? View.VISIBLE : View.GONE);
+        holder.deviceSpecificSettingsView.setVisibility(coordinator.getSupportedDeviceSpecificSettings(device) != null ? View.VISIBLE : View.GONE);
         holder.deviceSpecificSettingsView.setOnClickListener(new View.OnClickListener()
 
                                                 {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -65,7 +65,7 @@ public final class MiBandConst {
     public static final String PREF_MI2_INACTIVITY_WARNINGS_DND_END = "mi2_inactivity_warnings_dnd_end";
     public static final String PREF_MIBAND_SETUP_BT_PAIRING = "mi_setup_bt_pairing";
 
-    public static final String PREF_MI3_BAND_SCREEN_UNLOCK = "mi3_band_screen_unlock";
+    public static final String PREF_SWIPE_UNLOCK = "swipe_unlock";
     public static final String PREF_MI3_NIGHT_MODE = "mi3_night_mode";
     public static final String PREF_MI3_NIGHT_MODE_START = "mi3_night_mode_start";
     public static final String PREF_MI3_NIGHT_MODE_END = "mi3_night_mode_end";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -135,7 +135,7 @@ protected void onCreate(Bundle savedInstanceState) {
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(deviceCandidate);
         GBDevice device = DeviceHelper.getInstance().toSupportedDevice(deviceCandidate);
 
-        if (coordinator.supportsDeviceSpecificSettings(device)) {
+        if (coordinator.getSupportedDeviceSpecificSettings(device) != null) { // FIXME: this will no longer be sane in the future
             SharedPreferences sharedPrefs = GBApplication.getDeviceSpecificSharedPrefs(device.getAddress());
             String authKey = sharedPrefs.getString("authkey", null);
             if (authKey == null || authKey.isEmpty()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/devicesettings/DeviceSpecificSettingsFragment.java
Patch:
@@ -6,7 +6,7 @@
 
 abstract public class DeviceSpecificSettingsFragment extends PreferenceFragmentCompat {
 
-    void setSettingsFileSuffix(String settingsFileSuffix) {
+    public void setSettingsFileSuffix(String settingsFileSuffix) {
         Bundle args = new Bundle();
         args.putString("settingsFileSuffix", settingsFileSuffix);
         setArguments(args);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiConst.java
Patch:
@@ -57,6 +57,8 @@ public class HuamiConst {
     public static final String PREF_DISCONNECT_NOTIFICATION_START = "disconnect_notification_start";
     public static final String PREF_DISCONNECT_NOTIFICATION_END = "disconnect_notification_end";
 
+    public static final String PREF_DISPLAY_ITEMS = "display_items";
+
     public static int toActivityKind(int rawType) {
         switch (rawType) {
             case TYPE_DEEP_SLEEP:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -42,7 +42,6 @@ public final class MiBandConst {
 	public static final String PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS = "mi_device_time_offset_hours";
 	public static final String PREF_MI2_DATEFORMAT = "mi2_dateformat";
     public static final String PREF_MI2_GOAL_NOTIFICATION = "mi2_goal_notification";
-	public static final String PREF_MI2_DISPLAY_ITEMS = "mi2_display_items";
 	public static final String PREF_MI2_DISPLAY_ITEM_CLOCK = "clock";
 	public static final String PREF_MI2_DISPLAY_ITEM_STEPS = "steps";
 	public static final String PREF_MI2_DISPLAY_ITEM_DISTANCE = "distance";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchActivityOperation.java
Patch:
@@ -203,6 +203,6 @@ private MiBandActivitySample createSample(byte category, byte intensity, byte st
 
     @Override
     protected String getLastSyncTimeKey() {
-        return getDevice().getAddress() + "_" + "lastSyncTimeMillis";
+        return "lastSyncTimeMillis";
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsDetailsOperation.java
Patch:
@@ -56,7 +56,7 @@ public class FetchSportsDetailsOperation extends AbstractFetchOperation {
 
     private ByteArrayOutputStream buffer;
 
-    public FetchSportsDetailsOperation(@NonNull BaseActivitySummary summary, @NonNull HuamiSupport support, @NonNull String lastSyncTimeKey) {
+    FetchSportsDetailsOperation(@NonNull BaseActivitySummary summary, @NonNull HuamiSupport support, @NonNull String lastSyncTimeKey) {
         super(support);
         setName("fetching sport details");
         this.summary = summary;
@@ -131,7 +131,7 @@ protected void handleActivityFetchFinish(boolean success) {
         super.handleActivityFetchFinish(success);
     }
 
-    protected ActivityTrackExporter createExporter() {
+    private ActivityTrackExporter createExporter() {
         GPXExporter exporter = new GPXExporter();
         exporter.setCreator(GBApplication.app().getNameAndVersion());
         return exporter;
@@ -169,7 +169,6 @@ protected void handleActivityNotif(byte[] value) {
         } else {
             GB.toast("Error " + getName() + ", invalid package counter: " + value[0] + ", last was: " + lastPacketCounter, Toast.LENGTH_LONG, GB.ERROR);
             handleActivityFetchFinish(false);
-            return;
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -241,6 +241,6 @@ private BaseActivitySummary parseSummary(ByteArrayOutputStream stream) {
 
     @Override
     protected String getLastSyncTimeKey() {
-        return getDevice().getAddress() + "_" + "lastSportsActivityTimeMillis";
+        return "lastSportsActivityTimeMillis";
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorCoordinator.java
Patch:
@@ -46,8 +46,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         try {
             BluetoothDevice device = candidate.getDevice();
             String name = device.getName();
-            if (name != null && (name.equalsIgnoreCase("Amazfit Band") || name.equalsIgnoreCase("Amazfit Cor")
-                    || name.equalsIgnoreCase("Amazfit Band 2") || name.equalsIgnoreCase("Amazfit Cor 2"))) {
+            if (name != null && (name.equalsIgnoreCase("Amazfit Band") || name.equalsIgnoreCase("Amazfit Cor"))) {
                 return DeviceType.AMAZFITCOR;
             }
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -37,6 +37,7 @@ public enum DeviceType {
     AMAZFITBIP(12, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_amazfit_bip),
     AMAZFITCOR(13, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor),
     MIBAND3(14, R.drawable.ic_device_miband2, R.drawable.ic_device_miband2_disabled, R.string.devicetype_miband3),
+    AMAZFITCOR2(15, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor2),
     VIBRATISSIMO(20, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/AppBlacklistAdapter.java
Patch:
@@ -223,7 +223,7 @@ protected Filter.FilterResults performFiltering(CharSequence filter) {
 
                 for (ApplicationInfo ai : originalList) {
                     CharSequence name = mPm.getApplicationLabel(ai);
-                    if (name.toString().contains(filterPattern) ||
+                    if (name.toString().toLowerCase().contains(filterPattern) ||
                             (ai.packageName.contains(filterPattern))) {
                         filteredList.add(ai);
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -399,7 +399,7 @@ public static void setAppsNotifBlackList(Set<String> packageNames) {
 
     private static void loadAppsNotifBlackList() {
         GB.log("Loading apps_notification_blacklist", GB.INFO, null);
-        apps_notification_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.PACKAGE_BLACKLIST, null);
+        apps_notification_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.PACKAGE_BLACKLIST, null); // lgtm [java/abstract-to-concrete-cast]
         if (apps_notification_blacklist == null) {
             apps_notification_blacklist = new HashSet<>();
         }
@@ -451,7 +451,7 @@ public static void setAppsPebbleBlackList(Set<String> packageNames) {
 
     private static void loadAppsPebbleBlackList() {
         GB.log("Loading apps_pebblemsg_blacklist", GB.INFO, null);
-        apps_pebblemsg_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.PACKAGE_PEBBLEMSG_BLACKLIST, null);
+        apps_pebblemsg_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.PACKAGE_PEBBLEMSG_BLACKLIST, null); // lgtm [java/abstract-to-concrete-cast]
         if (apps_pebblemsg_blacklist == null) {
             apps_pebblemsg_blacklist = new HashSet<>();
         }
@@ -523,7 +523,7 @@ public static void removeFromCalendarBlacklist(String calendarDisplayName) {
 
     private static void loadCalendarsBlackList() {
         GB.log("Loading calendars_blacklist", GB.INFO, null);
-        calendars_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.CALENDAR_BLACKLIST, null);
+        calendars_blacklist = (HashSet<String>) sharedPrefs.getStringSet(GBPrefs.CALENDAR_BLACKLIST, null); // lgtm [java/abstract-to-concrete-cast]
         if (calendars_blacklist == null) {
             calendars_blacklist = new HashSet<>();
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/NotificationFilterActivity.java
Patch:
@@ -185,7 +185,7 @@ private void saveFilter() {
 
             notificationFilterEntryDao.deleteByKeyInTx(mFilterEntryIds);
 
-            Long filterId = notificationFilterDao.insertOrReplace(mNotificationFilter);
+           long filterId = notificationFilterDao.insertOrReplace(mNotificationFilter);
 
             // only save words if filter mode != none
             if (mNotificationFilter.getNotificationFilterMode() != NOTIFICATION_FILTER_MODE_NONE) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -356,7 +356,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
     }
 
     /**
-     * @param text: original text
+     * @param text original text
      * @return 'text' or a new String without non supported chars like emoticons, etc.
      */
     private String sanitizeNotifText(String text) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -1044,12 +1044,12 @@ private void handleMusicControl(byte[] musicControlMsg)
                     if (musicControlMsg[6] > volume) {
                         musicCmd.event = GBDeviceEventMusicControl.Event.VOLUMEUP;
                         if(volume < 90) {
-                            volume += 10;
+                            volume += (byte) 10;
                         }
                     } else {
                         musicCmd.event = GBDeviceEventMusicControl.Event.VOLUMEDOWN;
                         if(volume > 10) {
-                            volume -= 10;
+                            volume -= (byte) 10;
                         }
                     }
                     try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/EmojiConverter.java
Patch:
@@ -88,7 +88,7 @@ private static String convertAdvancedEmojiToAscii(String text, Context context)
         try {
             return EmojiUtils.shortCodify(text);
         } catch (Exception e){
-            LOG.warn("An exception occured when converting advanced emoji to ASCII", text);
+            LOG.warn("An exception occured when converting advanced emoji to ASCII: " + text);
             return text;
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/ActivityDetailsParser.java
Patch:
@@ -91,8 +91,8 @@ public ActivityTrack parse(byte[] bytes) throws GBException {
                     i++;
                 }
 
-                byte type = bytes[i++];
-                int timeOffset = BLETypeConversions.toUnsigned(bytes[i++]);
+                byte type = bytes[i++]; // lgtm [java/index-out-of-bounds]]
+                int timeOffset = BLETypeConversions.toUnsigned(bytes[i++]); // lgtm [java/index-out-of-bounds]
                 // handle timeOffset overflows (1 byte, always increasing, relative to base)
                 if (lastTimeOffset <= timeOffset) {
                     timeOffset = timeOffset - lastTimeOffset;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/no1f1/No1F1Coordinator.java
Patch:
@@ -1,5 +1,5 @@
 /*  Copyright (C) 2016-2019 Andreas Shimokawa, Carsten Pfeiffer, Daniele
-    Gobbetti, José Rebelo, Mormegil, protomors
+    Gobbetti, José Rebelo, Petr Kadlec, protomors
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -1,6 +1,6 @@
 /*  Copyright (C) 2015-2019 Alberto, Andreas Shimokawa, Carsten Pfeiffer,
     criogenic, dakhnod, Daniele Gobbetti, Frank Slezak, ivanovlev, José Rebelo,
-    Julien Pivotto, Kasha, Roi, Steffen Liebergeld
+    Julien Pivotto, Kasha, Roi Greenberg, Steffen Liebergeld
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -1,5 +1,5 @@
 /*  Copyright (C) 2017-2019 Andreas Shimokawa, Carsten Pfeiffer, Matthieu
-    Baerts, Roi
+    Baerts, Roi Greenberg
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/LanguageUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*  Copyright (C) 2017-2019 Andreas Shimokawa, Aniruddha Adhikary, Daniele
-    Gobbetti, ivanovlev, kalaee, lazarosfs, McSym28, M. Hadi, Roi, Roi Greenberg,
+    Gobbetti, ivanovlev, kalaee, lazarosfs, McSym28, M. Hadi, Roi Greenberg,
     Ted Stein, Thomas, Yaron Shahrabani
 
     This file is part of Gadgetbridge.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/RtlUtils.java
Patch:
@@ -1,5 +1,4 @@
-/*  Copyright (C) 2018-2019 Andreas Shimokawa, Carsten Pfeiffer, Roi,
-    Roi Greenberg
+/*  Copyright (C) 2018-2019 Andreas Shimokawa, Carsten Pfeiffer, Roi Greenberg
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/StringUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*  Copyright (C) 2017-2019 Carsten Pfeiffer, Daniele Gobbetti, João Paulo
-    Barraca, Roi
+    Barraca, Roi Greenberg
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casiogb6900/CasioGB6900DeviceCoordinator.java
Patch:
@@ -118,7 +118,7 @@ public boolean supportsScreenshots() {
 
     @Override
     public int getAlarmSlotCount() {
-        return 5; // 4 regular and one snooze but not yet implemented
+        return 5; // 4 regular and one snooze
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casiogb6900/CasioGB6900Constants.java
Patch:
@@ -74,6 +74,7 @@ public final class CasioGB6900Constants {
     public static final UUID TX_POWER_LEVEL_CHARACTERISTIC_UUID = UUID.fromString("00002a07-0000-1000-8000-00805f9b34fb");
     // Settings
     public static final UUID CASIO_SETTING_FOR_BLE_CHARACTERISTIC_UUID = UUID.fromString("26eb000f-b012-49a8-b1f8-394fb2032b0f");
+    public static final UUID CASIO_SETTING_FOR_ALM_CHARACTERISTIC_UUID = UUID.fromString("26eb0013-b012-49a8-b1f8-394fb2032b0f");
 
     // Notification Types
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/casiogb6900/CasioGB6900DeviceCoordinator.java
Patch:
@@ -118,7 +118,7 @@ public boolean supportsScreenshots() {
 
     @Override
     public int getAlarmSlotCount() {
-        return 0; // 4 regular and one snooze but not yet implemented
+        return 5; // 4 regular and one snooze but not yet implemented
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerRealWeather.java
Patch:
@@ -61,7 +61,7 @@ class AppMessageHandlerRealWeather extends AppMessageHandler {
             KEY_WEATHER_TEMP = appKeys.getInt("temperature");
             KEY_WEATHER_ICON = appKeys.getInt("icon");
         } catch (JSONException e) {
-            GB.toast("There was an error accessing the YWeather watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+            GB.toast("There was an error accessing the RealWeather watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
         } catch (IOException ignore) {
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerObsidian.java
Patch:
@@ -142,7 +142,7 @@ private String getIconForConditionCode(int conditionCode, boolean isNight) {
         return (!isNight) ? iconToLoad : iconToLoad.toUpperCase();
     }
 
-    private byte[] encodeObisdianWeather(WeatherSpec weatherSpec) {
+    private byte[] encodeObsidianWeather(WeatherSpec weatherSpec) {
 
         if (weatherSpec == null) {
             return null;
@@ -165,12 +165,12 @@ public GBDeviceEvent[] onAppStart() {
             return new GBDeviceEvent[]{null};
         }
         GBDeviceEventSendBytes sendBytes = new GBDeviceEventSendBytes();
-        sendBytes.encodedBytes = encodeObisdianWeather(weatherSpec);
+        sendBytes.encodedBytes = encodeObsidianWeather(weatherSpec);
         return new GBDeviceEvent[]{sendBytes};
     }
 
     @Override
     public byte[] encodeUpdateWeather(WeatherSpec weatherSpec) {
-        return encodeObisdianWeather(weatherSpec);
+        return encodeObsidianWeather(weatherSpec);
     }
 }
\ No newline at end of file

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -85,9 +85,9 @@ public void onNotification(NotificationSpec notificationSpec) {
             return;
         }
 
-        String senderOrTiltle = StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);
+        String senderOrTitle = StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);
 
-        String message = StringUtils.truncate(senderOrTiltle, 32) + "\0";
+        String message = StringUtils.truncate(senderOrTitle, 32) + "\0";
         if (notificationSpec.subject != null) {
             message += StringUtils.truncate(notificationSpec.subject, 128) + "\n\n";
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -69,7 +69,7 @@ public interface EventHandler {
 
     void onFetchRecordedData(int dataTypes);
 
-    void onReboot();
+    void onReset(int flags);
 
     void onHeartRateTest();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiService.java
Patch:
@@ -149,6 +149,7 @@ public class HuamiService {
     public static final byte[] COMMAND_DISTANCE_UNIT_METRIC = new byte[] { ENDPOINT_DISPLAY, 0x03, 0x00, 0x00 };
     public static final byte[] COMMAND_DISTANCE_UNIT_IMPERIAL = new byte[] { ENDPOINT_DISPLAY, 0x03, 0x00, 0x01 };
     public static final byte[] COMMAND_SET_LANGUAGE_NEW_TEMPLATE = new byte[]{ENDPOINT_DISPLAY, 0x17, 0x00, 0, 0, 0, 0, 0};
+    public static final byte[] COMMAND_FACTORY_RESET = new byte[]{ENDPOINT_DISPLAY, 0x0b, 0x00, 0x01};
 
     // The third byte controls the threshold, in minutes
     // The last 8 bytes represent 2 separate time intervals for the inactivity warnings

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -163,6 +163,8 @@ public class MiBandService {
 
     public static final byte COMMAND_SEND_NOTIFICATION = 0x8;
 
+    public static final byte COMMAND_FACTORYRESET = 0x9;
+
     public static final byte COMMAND_CONFIRM_ACTIVITY_DATA_TRANSFER_COMPLETE = 0xa;
 
     public static final byte COMMAND_SYNC = 0xb;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -291,8 +291,9 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
-        Intent intent = createIntent().setAction(ACTION_REBOOT);
+    public void onReset(int flags) {
+        Intent intent = createIntent().setAction(ACTION_RESET)
+                .putExtra(EXTRA_RESET_FLAGS, flags);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -29,7 +29,6 @@
 public interface DeviceService extends EventHandler {
     String PREFIX = "nodomain.freeyourgadget.gadgetbridge.devices";
 
-    String ACTION_MIBAND2_AUTH = PREFIX + ".action.miban2_auth";
     String ACTION_START = PREFIX + ".action.start";
     String ACTION_CONNECT = PREFIX + ".action.connect";
     String ACTION_NOTIFICATION = PREFIX + ".action.notification";
@@ -47,7 +46,7 @@ public interface DeviceService extends EventHandler {
     String ACTION_APP_CONFIGURE = PREFIX + ".action.app_configure";
     String ACTION_APP_REORDER = PREFIX + ".action.app_reorder";
     String ACTION_INSTALL = PREFIX + ".action.install";
-    String ACTION_REBOOT = PREFIX + ".action.reboot";
+    String ACTION_RESET = PREFIX + ".action.reset";
     String ACTION_HEARTRATE_TEST = PREFIX + ".action.heartrate_test";
     String ACTION_FETCH_RECORDED_DATA = PREFIX + ".action.fetch_activity_data";
     String ACTION_DISCONNECT = PREFIX + ".action.disconnect";
@@ -110,6 +109,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_RECORDED_DATA_TYPES = "data_types";
     String EXTRA_FM_FREQUENCY = "fm_frequency";
     String EXTRA_LED_COLOR = "led_color";
+    String EXTRA_RESET_FLAGS = "reset_flags";
 
     /**
      * Use EXTRA_REALTIME_SAMPLE instead

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/ServiceDeviceSupport.java
Patch:
@@ -256,11 +256,11 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
-        if (checkBusy("reboot")) {
+    public void onReset(int flags) {
+        if (checkBusy("reset")) {
             return;
         }
-        delegate.onReboot();
+        delegate.onReset(flags);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -526,7 +526,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
         try {
             getQueue().clear();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/id115/ID115Support.java
Patch:
@@ -185,7 +185,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
         try {
             getQueue().clear();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/jyou/TeclastH30Support.java
Patch:
@@ -367,7 +367,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
         try {
             TransactionBuilder builder = performInitialized("Reboot");
             builder.write(ctrlCharacteristic, commandWithChecksum(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/UpdateFirmwareOperation.java
Patch:
@@ -41,6 +41,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetProgressAction;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.AbstractMiFirmwareInfo;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.MiBandSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.serial.GBDeviceProtocol;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
@@ -155,7 +156,7 @@ private void handleNotificationNotif(byte[] value) {
                 } else if (updateCoordinator.needsReboot()) {
                     displayMessage(getContext(), getContext().getString(R.string.updatefirmwareoperation_update_complete_rebooting), Toast.LENGTH_LONG, GB.INFO);
                     GB.updateInstallNotification(getContext().getString(R.string.updatefirmwareoperation_update_complete), false, 100, getContext());
-                    getSupport().onReboot();
+                    getSupport().onReset(GBDeviceProtocol.RESET_FLAGS_REBOOT);
                 } else {
                     LOG.error("BUG: Successful firmware update without reboot???");
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/no1f1/No1F1Support.java
Patch:
@@ -296,7 +296,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1468,7 +1468,7 @@ private byte[] encodePhoneVersion(byte os) {
     }
 
     @Override
-    public byte[] encodeReboot() {
+    public byte[] encodeReset(int flags) {
         return encodeSimpleMessage(ENDPOINT_RESET, RESET_REBOOT);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vibratissimo/VibratissimoSupport.java
Patch:
@@ -197,7 +197,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/watch9/Watch9DeviceSupport.java
Patch:
@@ -440,7 +440,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/xwatch/XWatchSupport.java
Patch:
@@ -233,7 +233,7 @@ public void onSetMusicInfo(MusicSpec musicSpec) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
         //Not supported
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -411,7 +411,7 @@ public void onSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/AbstractSerialDeviceSupport.java
Patch:
@@ -186,8 +186,8 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
-        byte[] bytes = gbDeviceProtocol.encodeReboot();
+    public void onReset(int flags) {
+        byte[] bytes = gbDeviceProtocol.encodeReset(flags);
         sendToDevice(bytes);
     }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -120,7 +120,7 @@ public void onFetchRecordedData(int dataTypes) {
     }
 
     @Override
-    public void onReboot() {
+    public void onReset(int flags) {
 
     }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -120,6 +120,7 @@ public void testTransliterationSupport() {
     public void testRtlSupport() {
         SharedPreferences settings = GBApplication.getPrefs().getPreferences();
         SharedPreferences.Editor editor = settings.edit();
+        editor.putBoolean("transliteration", false);
         editor.putBoolean(GBPrefs.RTL_SUPPORT, true);
         editor.commit();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/SleepAlarmWidget.java
Patch:
@@ -94,9 +94,10 @@ public void onReceive(Context context, Intent intent) {
 
 
             // overwrite the first alarm and activate it
-            GBAlarm alarm = GBAlarm.createSingleShot(0, true, calendar);
+/*
+            GBAlarm alarm = GBAlarm.createSingleShot(0,0, true, calendar); // FIXME!!!!
             alarm.store();
-
+*/
             if (GBApplication.isRunningLollipopOrLater()) {
                 setAlarmViaAlarmManager(context, calendar.getTimeInMillis());
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/RtlUtils.java
Patch:
@@ -527,7 +527,7 @@ public static String fixRtl(String oldString) {
 
             do {
                 if ((line.length() + phrase.length() + word.length() < line_max_size) ||
-                        (line.length() == 0 && word.length() > line_max_size)) {
+                        (line.length() == 0 && word.length() >= line_max_size)) {
                     if (isSpaceSign(c)) {
                         word.append(c);
                         addCharToWord = true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -342,7 +342,7 @@ public void onNotificationPosted(StatusBarNotification sbn) {
         muteAction.type = NotificationSpec.Action.TYPE_SYNTECTIC_MUTE;
         notificationSpec.attachedActions.add(muteAction);
 
-        mNotificationHandleLookup.add(notificationSpec.getId(), sbn.getId()); // for both DISMISS and OPEN
+        mNotificationHandleLookup.add(notificationSpec.getId(), sbn.getPostTime()); // for both DISMISS and OPEN
         //getPostTime()); // for both DISMISS and OPEN
         mPackageLookup.add(notificationSpec.getId(), sbn.getPackageName()); // for MUTE
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -376,7 +376,7 @@ private void handleAction(Intent intent, String action, Prefs prefs) {
                 }
 
                 //TODO: check if at least one of the attached actions is a reply action instead?
-                if (((notificationSpec.flags & NotificationSpec.FLAG_WEARABLE_ACTIONS) > 0)
+                if ((notificationSpec.attachedActions != null && notificationSpec.attachedActions.size() > 0)
                         || (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null)) {
                     // NOTE: maybe not where it belongs
                     // I would rather like to save that as an array in SharedPreferences

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/ActivityDetailsParser.java
Patch:
@@ -124,6 +124,9 @@ public ActivityTrack parse(byte[] bytes) throws GBException {
                     case TYPE_GPS_SPEED6:
                         i += consumeSpeed6(bytes, i);
                         break;
+                    default:
+                        LOG.warn("unknown packet type" + type);
+                        i+=6;
                 }
             }
         } catch (IndexOutOfBoundsException ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -167,7 +167,8 @@ private BaseActivitySummary parseSummary(ByteArrayOutputStream stream) {
         BaseActivitySummary summary = new BaseActivitySummary();
         ByteBuffer buffer = ByteBuffer.wrap(stream.toByteArray()).order(ByteOrder.LITTLE_ENDIAN);
 //        summary.setVersion(BLETypeConversions.toUnsigned(buffer.getShort()));
-        buffer.getShort(); // version
+        short version = buffer.getShort(); // version
+        LOG.debug("Got verison " + version);
         int activityKind = ActivityKind.TYPE_UNKNOWN;
         try {
             int rawKind = BLETypeConversions.toUnsigned(buffer.getShort());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FindPhoneActivity.java
Patch:
@@ -71,7 +71,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         IntentFilter filter = new IntentFilter();
         filter.addAction(ACTION_FOUND);
-        filter.addAction(DeviceService.ACTION_HEARTRATE_MEASUREMENT);
         LocalBroadcastManager.getInstance(this).registerReceiver(mReceiver, filter);
         registerReceiver(mReceiver, filter); // for ACTION_FOUND
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -59,7 +59,6 @@ public interface DeviceService extends EventHandler {
     String ACTION_ENABLE_REALTIME_HEARTRATE_MEASUREMENT = PREFIX + ".action.realtime_hr_measurement";
     String ACTION_ENABLE_HEARTRATE_SLEEP_SUPPORT = PREFIX + ".action.enable_heartrate_sleep_support";
     String ACTION_SET_HEARTRATE_MEASUREMENT_INTERVAL = PREFIX + ".action.set_heartrate_measurement_intervarl";
-    String ACTION_HEARTRATE_MEASUREMENT = PREFIX + ".action.hr_measurement";
     String ACTION_ADD_CALENDAREVENT = PREFIX + ".action.add_calendarevent";
     String ACTION_DELETE_CALENDAREVENT = PREFIX + ".action.delete_calendarevent";
     String ACTION_SEND_CONFIGURATION = PREFIX + ".action.send_configuration";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityKind.java
Patch:
@@ -38,11 +38,13 @@ public class ActivityKind {
     public static final int TYPE_CYCLING = 128;
     public static final int TYPE_TREADMILL = 256;
 
+    private static final int TYPES_COUNT = 11;
+
     public static final int TYPE_SLEEP = TYPE_LIGHT_SLEEP | TYPE_DEEP_SLEEP;
     public static final int TYPE_ALL = TYPE_ACTIVITY | TYPE_SLEEP | TYPE_NOT_WORN;
 
     public static int[] mapToDBActivityTypes(int types, SampleProvider provider) {
-        int[] result = new int[3];
+        int[] result = new int[TYPES_COUNT];
         int i = 0;
         if ((types & ActivityKind.TYPE_ACTIVITY) != 0) {
             result[i++] = provider.toRawActivityKind(TYPE_ACTIVITY);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -800,7 +800,7 @@ private void close() {
     private byte[] encodeStringToDevice(String s) {
 
         List<Byte> outBytes = new ArrayList<Byte>();
-        Boolean unicode = HPlusCoordinator.getUnicodeSupport(this.gbDevice.getAddress());
+        boolean unicode = HPlusCoordinator.getUnicodeSupport(this.gbDevice.getAddress());
         LOG.info("Encode String: Unicode=" + unicode);
 
         for (int i = 0; i < s.length(); i++) {
@@ -827,7 +827,7 @@ private byte[] encodeStringToDevice(String s) {
                 outBytes.add(cs[j]);
         }
 
-        return ArrayUtils.toPrimitive(outBytes.toArray(new Byte[outBytes.size()]));
+        return ArrayUtils.toPrimitive(outBytes.toArray(new Byte[0]));
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchActivityOperation.java
Patch:
@@ -196,7 +196,7 @@ protected void bufferActivityData(byte[] value) {
         }
 
         for (int i = 1; i < len; i+=4) {
-            MiBandActivitySample sample = createSample(value[i], value[i + 1], value[i + 2], value[i + 3]);
+            MiBandActivitySample sample = createSample(value[i], value[i + 1], value[i + 2], value[i + 3]); // lgtm [java/index-out-of-bounds]
             samples.add(sample);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -387,7 +387,7 @@ public void run() {
                         gbDevice.setState(GBDevice.State.WAITING_FOR_RECONNECT);
                         gbDevice.sendDeviceUpdateIntent(getContext());
 
-                        int delaySeconds = 1;
+                        long delaySeconds = 1;
                         while (reconnectAttempts-- > 0 && !mQuit && !mIsConnected) {
                             LOG.info("Trying to reconnect (attempts left " + reconnectAttempts + ")");
                             mIsConnected = connect();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/webview/GBWebClient.java
Patch:
@@ -232,9 +232,9 @@ private static void convertTemps(JSONObject main, String units) throws JSONExcep
             main.put("temp_min", (int) main.get("temp_min") - 273);
             main.put("temp_max", (int) main.get("temp_max") - 273);
         } else if ("imperial".equals(units)) { //it's 2017... this is so sad
-            main.put("temp", ((int) (main.get("temp")) - 273.15f) * 1.8f + 32);
-            main.put("temp_min", ((int) (main.get("temp_min")) - 273.15f) * 1.8f + 32);
-            main.put("temp_max", ((int) (main.get("temp_max")) - 273.15f) * 1.8f + 32);
+            main.put("temp", ((int) (main.get("temp")) - 273.15f) * 1.8f + 32);         // lgtm [java/integer-multiplication-cast-to-long]
+            main.put("temp_min", ((int) (main.get("temp_min")) - 273.15f) * 1.8f + 32); // lgtm [java/integer-multiplication-cast-to-long]
+            main.put("temp_max", ((int) (main.get("temp_max")) - 273.15f) * 1.8f + 32); // lgtm [java/integer-multiplication-cast-to-long]
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/BengaliLanguageUtils.java
Patch:
@@ -254,9 +254,9 @@ public static String transliterate(String txt) {
                 String kaarStr = letters.get(kaar);
                 if (kaarStr != null) {
                     appendableString = appendableString + kaarStr;
-                }
-                if (kaarStr.equals("i") || kaarStr.equals("ii") || kaarStr.equals("u") || kaarStr.equals("uu")) {
-                    changePronounciation = true;
+                    if (kaarStr.equals("i") || kaarStr.equals("ii") || kaarStr.equals("u") || kaarStr.equals("uu")) {
+                        changePronounciation = true;
+                    }
                 }
             }
             String singleton = m.group(11);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -174,6 +174,7 @@ private void handleGBDeviceEvent(GBDeviceEventFindPhone deviceEvent) {
         switch (deviceEvent.event) {
             case START:
                 Intent startIntent = new Intent(getContext(), FindPhoneActivity.class);
+                startIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 context.startActivity(startIntent);
                 break;
             case STOP:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventNotificationControl.java
Patch:
@@ -17,7 +17,7 @@
 package nodomain.freeyourgadget.gadgetbridge.deviceevents;
 
 public class GBDeviceEventNotificationControl extends GBDeviceEvent {
-    public int handle;
+    public long handle;
     public String phoneNumber;
     public String reply;
     public String title;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -323,7 +323,7 @@ private void handleGBDeviceEvent(GBDeviceEventNotificationControl deviceEvent) {
                 break;
             case REPLY:
                 if (deviceEvent.phoneNumber == null) {
-                    deviceEvent.phoneNumber = (String) GBApplication.getIDSenderLookup().lookup(deviceEvent.handle);
+                    deviceEvent.phoneNumber = (String) GBApplication.getIDSenderLookup().lookup((int) (deviceEvent.handle >> 4));
                 }
                 if (deviceEvent.phoneNumber != null) {
                     LOG.info("Got notification reply for SMS from " + deviceEvent.phoneNumber + " : " + deviceEvent.reply);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -485,8 +485,7 @@ private byte[] encodeMessage(short endpoint, byte type, int cookie, String[] par
 
     @Override
     public byte[] encodeNotification(NotificationSpec notificationSpec) {
-        //TODO: simplify this logic? is hasHandle still needed?
-        boolean hasHandle = notificationSpec.getId() != -1 && notificationSpec.phoneNumber == null;
+        boolean hasHandle = notificationSpec.sourceAppId != null;
         int id = notificationSpec.getId() != -1 ? notificationSpec.getId() : mRandom.nextInt();
         String title;
         String subtitle = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -122,7 +122,6 @@ public void onClick(View v) {
                 notificationSpec.subject = testString;
                 notificationSpec.type = NotificationType.values()[sendTypeSpinner.getSelectedItemPosition()];
                 notificationSpec.pebbleColor = notificationSpec.type.color;
-                notificationSpec.id = -1;
                 GBApplication.deviceService().onNotification(notificationSpec);
             }
         });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/deviceevents/GBDeviceEventNotificationControl.java
Patch:
@@ -20,6 +20,7 @@ public class GBDeviceEventNotificationControl extends GBDeviceEvent {
     public int handle;
     public String phoneNumber;
     public String reply;
+    public String title;
     public Event event = Event.UNKNOWN;
 
     public enum Event {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -62,7 +62,6 @@ public void onReceive(Context context, Intent intent) {
         }
 
         NotificationSpec notificationSpec = new NotificationSpec();
-        notificationSpec.id = -1;
 
         String notificationData = intent.getStringExtra("notificationData");
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/SMSReceiver.java
Patch:
@@ -50,7 +50,6 @@ public void onReceive(Context context, Intent intent) {
         }
 
         NotificationSpec notificationSpec = new NotificationSpec();
-        notificationSpec.id = -1;
         notificationSpec.type = NotificationType.GENERIC_SMS;
 
         Bundle bundle = intent.getExtras();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -150,8 +150,9 @@ public void onNotification(NotificationSpec notificationSpec) {
                 .putExtra(EXTRA_NOTIFICATION_SUBJECT, notificationSpec.subject)
                 .putExtra(EXTRA_NOTIFICATION_TITLE, notificationSpec.title)
                 .putExtra(EXTRA_NOTIFICATION_BODY, notificationSpec.body)
-                .putExtra(EXTRA_NOTIFICATION_ID, notificationSpec.id)
+                .putExtra(EXTRA_NOTIFICATION_ID, notificationSpec.getId())
                 .putExtra(EXTRA_NOTIFICATION_TYPE, notificationSpec.type)
+                .putExtra(EXTRA_NOTIFICATION_ACTIONS, notificationSpec.attachedActions)
                 .putExtra(EXTRA_NOTIFICATION_SOURCENAME, notificationSpec.sourceName)
                 .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor)
                 .putExtra(EXTRA_NOTIFICATION_SOURCEAPPID, notificationSpec.sourceAppId);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -77,6 +77,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NOTIFICATION_SUBJECT = "notification_subject";
     String EXTRA_NOTIFICATION_TITLE = "notification_title";
     String EXTRA_NOTIFICATION_TYPE = "notification_type";
+    String EXTRA_NOTIFICATION_ACTIONS = "notification_actions";
     String EXTRA_NOTIFICATION_PEBBLE_COLOR = "notification_pebble_color";
     String EXTRA_FIND_START = "find_start";
     String EXTRA_VIBRATION_INTENSITY = "vibration_intensity";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -52,8 +52,8 @@
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventCallControl;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventDisplayMessage;
-import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFmFrequency;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFindPhone;
+import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFmFrequency;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventLEDColor;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventNotificationControl;
@@ -337,6 +337,7 @@ private void handleGBDeviceEvent(GBDeviceEventNotificationControl deviceEvent) {
         if (action != null) {
             Intent notificationListenerIntent = new Intent(action);
             notificationListenerIntent.putExtra("handle", deviceEvent.handle);
+            notificationListenerIntent.putExtra("title", deviceEvent.title);
             if (deviceEvent.reply != null) {
                 Prefs prefs = GBApplication.getPrefs();
                 String suffix = prefs.getString("canned_reply_suffix", null);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -51,7 +51,7 @@ public enum DeviceType {
     WATCH9(100, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_watch9),
     ROIDMI(110, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi),
     ROIDMI3(112, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
-    Y5(120, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_y5),
+    Y5(120, R.drawable.ic_device_h30_h10, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_y5),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/roidmi/Roidmi3Coordinator.java
Patch:
@@ -36,8 +36,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             String name = device.getName();
 
             if (name != null && name.contains("Roidmi Music Blue C")) {
-                LOG.warn("Found a Roidmi 3, but support is disabled.");
-                return DeviceType.UNKNOWN; // TODO Roidmi 3 is not working atm
+                return DeviceType.ROIDMI3;
             }
         } catch (Exception ex) {
             LOG.error("unable to check device support", ex);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -216,7 +216,7 @@ protected void handleGBDeviceEvent(GBDeviceEventVersionInfo infoEvent) {
 
     protected void handleGBDeviceEvent(GBDeviceEventLEDColor colorEvent) {
         Context context = getContext();
-        LOG.info("Got event for LED Color");
+        LOG.info("Got event for LED Color: #" + Integer.toHexString(colorEvent.color).toUpperCase());
         if (gbDevice == null) {
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/roidmi/Roidmi3Coordinator.java
Patch:
@@ -36,8 +36,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
             String name = device.getName();
 
             if (name != null && name.contains("Roidmi Music Blue C")) {
-                LOG.warn("Found a Roidmi 3, but support is disabled.");
-                return DeviceType.UNKNOWN; // TODO Roidmi 3 is not working atm
+                return DeviceType.ROIDMI3;
             }
         } catch (Exception ex) {
             LOG.error("unable to check device support", ex);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -216,7 +216,7 @@ protected void handleGBDeviceEvent(GBDeviceEventVersionInfo infoEvent) {
 
     protected void handleGBDeviceEvent(GBDeviceEventLEDColor colorEvent) {
         Context context = getContext();
-        LOG.info("Got event for LED Color");
+        LOG.info("Got event for LED Color: #" + Integer.toHexString(colorEvent.color).toUpperCase());
         if (gbDevice == null) {
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeConstants.java
Patch:
@@ -153,4 +153,7 @@ public class ZeTimeConstants {
     public static final String PREF_DATE_FORMAT = "zetime_date_format";
 
     public static final String PREF_ALARM_SIGNALING = "zetime_alarm_signaling";
+    public static final String PREF_SMS_SIGNALING = "zetime_sms_signaling";
+    public static final String PREF_SHOCK_STRENGTH = "zetime_shock_strength";
+
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeConstants.java
Patch:
@@ -80,6 +80,7 @@ public class ZeTimeConstants {
     public static final byte CMD_REMINDERS = (byte) 0x97;
     public static final byte CMD_PUSH_CALENDAR_DAY = (byte) 0x99;
     public static final byte CMD_MUSIC_CONTROL = (byte) 0xD0;
+    public static final byte CMD_TEST_SIGNALING = (byte) 0xFA;
     // here are the action commands
     public static final byte CMD_REQUEST = (byte) 0x70;
     public static final byte CMD_SEND = (byte) 0x71;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -442,7 +442,7 @@ private BarDataSet setupCommonChart(CustomBarChart chart, BarEntry entry, String
     }
 
     private BarDataSet setupTotalStepsChart(CustomBarChart chart, BarEntry entry, String label) {
-        mTotalStepsChart.getAxisLeft().addLimitLine(new LimitLine(GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, 10000), "ss")); // TODO: use daily goal - already reached steps
+        mTotalStepsChart.getAxisLeft().addLimitLine(new LimitLine(GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, ActivityUser.defaultUserStepsGoal), "ss")); // TODO: use daily goal - already reached steps
         mTotalStepsChart.getAxisLeft().setAxisMinimum(0);
         mTotalStepsChart.setAutoScaleMinMaxEnabled(true);
         return setupCommonChart(chart, entry, label); // at the moment, these look the same

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -40,7 +40,7 @@ String getPieDescription(int targetValue) {
 
     @Override
     int getGoal() {
-        return GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, 10000);
+        return GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, ActivityUser.defaultUserStepsGoal);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiSupport.java
Patch:
@@ -377,7 +377,7 @@ private HuamiSupport setFitnessGoal(TransactionBuilder transaction) {
         LOG.info("Attempting to set Fitness Goal...");
         BluetoothGattCharacteristic characteristic = getCharacteristic(HuamiService.UUID_CHARACTERISTIC_8_USER_SETTINGS);
         if (characteristic != null) {
-            int fitnessGoal = GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, 10000);
+            int fitnessGoal = GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, ActivityUser.defaultUserStepsGoal);
             byte[] bytes = ArrayUtils.addAll(
                     HuamiService.COMMAND_SET_FITNESS_GOAL_START,
                     BLETypeConversions.fromUint16(fitnessGoal));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -389,7 +389,7 @@ private MiBandSupport setFitnessGoal(TransactionBuilder transaction) {
         LOG.info("Attempting to set Fitness Goal...");
         BluetoothGattCharacteristic characteristic = getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT);
         if (characteristic != null) {
-            int fitnessGoal = GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, 10000);
+            int fitnessGoal = GBApplication.getPrefs().getInt(ActivityUser.PREF_USER_STEPS_GOAL, ActivityUser.defaultUserStepsGoal);
             transaction.write(characteristic, new byte[]{
                     MiBandService.COMMAND_SET_FITNESS_GOAL,
                     0,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/heartrate/HeartRateProfile.java
Patch:
@@ -71,7 +71,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacte
                 format = BluetoothGattCharacteristic.FORMAT_UINT8;
             }
             final int heartRate = characteristic.getIntValue(format, 1);
-            LOG.info("Heart rate: " + heartRate, Toast.LENGTH_LONG, GB.INFO);
+            LOG.info("Heart rate: " + heartRate);
         }
         return false;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/export/GPXExporter.java
Patch:
@@ -60,8 +60,8 @@ public String getDefaultFileName(@NonNull ActivityTrack track) {
     public void performExport(ActivityTrack track, File targetFile) throws IOException, GPXTrackEmptyException {
         String encoding = StandardCharsets.UTF_8.name();
         XmlSerializer ser = Xml.newSerializer();
-        try {
-            ser.setOutput(new FileOutputStream(targetFile), encoding);
+        try (FileOutputStream outputStream = new FileOutputStream(targetFile)) {
+            ser.setOutput(outputStream, encoding);
             ser.startDocument(encoding, Boolean.TRUE);
             ser.setPrefix("xsi", NS_XSI_URI);
             ser.setPrefix(NS_TRACKPOINT_EXTENSION, NS_TRACKPOINT_EXTENSION_URI);
@@ -77,7 +77,6 @@ public void performExport(ActivityTrack track, File targetFile) throws IOExcepti
 
             ser.endTag(NS_DEFAULT, "gpx");
             ser.endDocument();
-        } finally {
             ser.flush();
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -230,7 +230,7 @@ protected void onMadeVisibleInActivity() {
     }
 
     protected void showDateBar(boolean show) {
-        getChartsHost().getDateBar().setVisibility(show ? View.VISIBLE : View.INVISIBLE);
+        getChartsHost().getDateBar().setVisibility(show ? View.VISIBLE : View.GONE);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeConstants.java
Patch:
@@ -115,4 +115,6 @@ public class ZeTimeConstants {
     public static final int MAX_SCREEN_ON_TIME = 0xffff;
     public static final int MIN_SCREEN_ON_TIME = 0x000a;
 
+    public static final String PREF_ZETIME_DONT_DEL_ACTDATA = "zetime_dont_del_actdata";
+
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeCoordinator.java
Patch:
@@ -146,7 +146,7 @@ public boolean supportsSmartWakeup(GBDevice device) {
 
     @Override
     public boolean supportsRealtimeData() {
-        return false;
+        return true;
     }
 
     @Override

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -14,6 +14,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.test.TestBase;
+import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_BODY;
 import static org.junit.Assert.assertEquals;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -14,6 +14,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.test.TestBase;
+import nodomain.freeyourgadget.gadgetbridge.util.GBPrefs;
 
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_BODY;
 import static org.junit.Assert.assertEquals;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/RtlUtils.java
Patch:
@@ -529,7 +529,7 @@ public static String fixRtl(String s) {
 
             do {
                 if ((line.length() + phrase.length() + word.length() < line_max_size) ||
-                        (phrase.length() == 0 && word.length() > line_max_size)) {
+                        (line.length() == 0 && word.length() > line_max_size)) {
                     if (isSpaceSign(c)) {
                         word.append(c);
                         addCharToWord = true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/RtlUtils.java
Patch:
@@ -528,7 +528,8 @@ public static String fixRtl(String s) {
 
 
             do {
-                if (line.length() + phrase.length() + word.length() < line_max_size) {
+                if ((line.length() + phrase.length() + word.length() < line_max_size) ||
+                        (phrase.length() == 0 && word.length() > line_max_size)) {
                     if (isSpaceSign(c)) {
                         word.append(c);
                         addCharToWord = true;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/RtlUtilsTest.java
Patch:
@@ -108,7 +108,7 @@ public void testIsLtr() throws Exception {
         boolean result = RtlUtils.isLtr(english1);
         assertTrue("Is Ltr Character failed", result);
 
-        result = RtlUtils.isLtr(english1);
+        result = RtlUtils.isLtr(english2);
         assertTrue("Is Ltr Character failed", result);
 
         result = RtlUtils.isLtr(hebrew1);
@@ -138,7 +138,7 @@ public void testIsPunctuation() throws Exception {
         boolean result = RtlUtils.isPunctuations(punctuation1);
         assertTrue("Is Punctuation Character failed", result);
 
-        result = RtlUtils.isPunctuations(punctuation1);
+        result = RtlUtils.isPunctuations(punctuation2);
         assertTrue("Is Punctuation Character failed", result);
 
         result = RtlUtils.isPunctuations(english1);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -297,6 +297,8 @@ private void checkAndRequestPermissions() {
             wantedPermissions.add(Manifest.permission.READ_CONTACTS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.CALL_PHONE);
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALL_LOG) == PackageManager.PERMISSION_DENIED)
+            wantedPermissions.add(Manifest.permission.READ_CALL_LOG);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.READ_PHONE_STATE);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.PROCESS_OUTGOING_CALLS) == PackageManager.PERMISSION_DENIED)

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/RtlUtilsTest.java
Patch:
@@ -108,7 +108,7 @@ public void testIsLtr() throws Exception {
         boolean result = RtlUtils.isLtr(english1);
         assertTrue("Is Ltr Character failed", result);
 
-        result = RtlUtils.isLtr(english1);
+        result = RtlUtils.isLtr(english2);
         assertTrue("Is Ltr Character failed", result);
 
         result = RtlUtils.isLtr(hebrew1);
@@ -138,7 +138,7 @@ public void testIsPunctuation() throws Exception {
         boolean result = RtlUtils.isPunctuations(punctuation1);
         assertTrue("Is Punctuation Character failed", result);
 
-        result = RtlUtils.isPunctuations(punctuation1);
+        result = RtlUtils.isPunctuations(punctuation2);
         assertTrue("Is Punctuation Character failed", result);
 
         result = RtlUtils.isPunctuations(english1);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -297,6 +297,8 @@ private void checkAndRequestPermissions() {
             wantedPermissions.add(Manifest.permission.READ_CONTACTS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.CALL_PHONE);
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALL_LOG) == PackageManager.PERMISSION_DENIED)
+            wantedPermissions.add(Manifest.permission.READ_CALL_LOG);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.READ_PHONE_STATE);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.PROCESS_OUTGOING_CALLS) == PackageManager.PERMISSION_DENIED)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -70,8 +70,6 @@
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
-import static nodomain.freeyourgadget.gadgetbridge.activities.HeartRateUtils.isValidHeartRateValue;
-
 /**
  * A base class fragment to be used with ChartsActivity. The fragment can supply
  * a title to be displayed in the activity by returning non-null in #getTitle()
@@ -443,6 +441,7 @@ protected DefaultChartsData<LineData> refresh(GBDevice gbDevice, List<? extends
             List<Entry> heartrateEntries = hr ? new ArrayList<Entry>(numEntries) : null;
             List<Integer> colors = new ArrayList<>(numEntries); // this is kinda inefficient...
             int lastHrSampleIndex = -1;
+            HeartRateUtils heartRateUtilsInstance = HeartRateUtils.getInstance();
 
             for (int i = 0; i < numEntries; i++) {
                 ActivitySample sample = samples.get(i);
@@ -512,7 +511,7 @@ protected DefaultChartsData<LineData> refresh(GBDevice gbDevice, List<? extends
                         }
                         activityEntries.add(createLineEntry(value, ts));
                 }
-                if (hr && sample.getKind() != ActivityKind.TYPE_NOT_WORN && HeartRateUtils.isValidHeartRateValue(sample.getHeartRate())) {
+                if (hr && sample.getKind() != ActivityKind.TYPE_NOT_WORN && heartRateUtilsInstance.isValidHeartRateValue(sample.getHeartRate())) {
                     if (lastHrSampleIndex > -1 && ts - lastHrSampleIndex > 1800*HeartRateUtils.MAX_HR_MEASUREMENTS_GAP_MINUTES) {
                         heartrateEntries.add(createLineEntry(0, lastHrSampleIndex + 1));
                         heartrateEntries.add(createLineEntry(0, ts - 1));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivitySleepChartFragment.java
Patch:
@@ -104,8 +104,8 @@ private void setupChart() {
         yAxisRight.setDrawLabels(true);
         yAxisRight.setDrawTopYLabelEntry(true);
         yAxisRight.setTextColor(CHART_TEXT_COLOR);
-        yAxisRight.setAxisMaximum(HeartRateUtils.MAX_HEART_RATE_VALUE);
-        yAxisRight.setAxisMinimum(HeartRateUtils.MIN_HEART_RATE_VALUE);
+        yAxisRight.setAxisMaximum(HeartRateUtils.getInstance().getMaxHeartRate());
+        yAxisRight.setAxisMinimum(HeartRateUtils.getInstance().getMinHeartRate());
 
         // refresh immediately instead of use refreshIfVisible(), for perceived performance
         refresh();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -168,7 +168,7 @@ public void onReceive(Context context, Intent intent) {
     private void addSample(ActivitySample sample) {
         int heartRate = sample.getHeartRate();
         int timestamp = tsTranslation.shorten(sample.getTimestamp());
-        if (HeartRateUtils.isValidHeartRateValue(heartRate)) {
+        if (HeartRateUtils.getInstance().isValidHeartRateValue(heartRate)) {
             setCurrentHeartRate(heartRate, timestamp);
         }
         int steps = sample.getSteps();
@@ -470,8 +470,8 @@ private void setupHistoryChart(BarLineChartBase chart) {
         yAxisRight.setDrawLabels(true);
         yAxisRight.setDrawTopYLabelEntry(false);
         yAxisRight.setTextColor(CHART_TEXT_COLOR);
-        yAxisRight.setAxisMaximum(HeartRateUtils.MAX_HEART_RATE_VALUE);
-        yAxisRight.setAxisMinimum(HeartRateUtils.MIN_HEART_RATE_VALUE);
+        yAxisRight.setAxisMaximum(HeartRateUtils.getInstance().getMaxHeartRate());
+        yAxisRight.setAxisMinimum(HeartRateUtils.getInstance().getMinHeartRate());
 
         mHistorySet = new LineDataSet(new ArrayList<Entry>(), getString(R.string.live_activity_steps_history));
         mHistorySet.setAxisDependency(YAxis.AxisDependency.LEFT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepChartFragment.java
Patch:
@@ -233,8 +233,8 @@ private void setupActivityChart() {
         yAxisRight.setDrawLabels(true);
         yAxisRight.setDrawTopYLabelEntry(true);
         yAxisRight.setTextColor(CHART_TEXT_COLOR);
-        yAxisRight.setAxisMaxValue(HeartRateUtils.MAX_HEART_RATE_VALUE);
-        yAxisRight.setAxisMinValue(HeartRateUtils.MIN_HEART_RATE_VALUE);
+        yAxisRight.setAxisMaxValue(HeartRateUtils.getInstance().getMaxHeartRate());
+        yAxisRight.setAxisMinValue(HeartRateUtils.getInstance().getMinHeartRate());
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GBPrefs.java
Patch:
@@ -38,6 +38,9 @@ public class GBPrefs {
     public static final String USER_NAME_DEFAULT = "gadgetbridge-user";
     private static final String USER_BIRTHDAY = "";
 
+    public static final String CHART_MAX_HEART_RATE = "chart_max_heart_rate";
+    public static final String CHART_MIN_HEART_RATE = "chart_min_heart_rate";
+
     private final Prefs mPrefs;
 
     public GBPrefs(Prefs prefs) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -49,8 +49,8 @@ public enum DeviceType {
     ZETIME(80, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_mykronoz_zetime),
     ID115(90, R.drawable.ic_device_h30_h10, R.drawable.ic_device_h30_h10_disabled, R.string.devicetype_id115),
     WATCH9(100, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_watch9),
-    ROIDMI(100, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi),
-    ROIDMI3(102, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
+    ROIDMI(110, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi),
+    ROIDMI3(112, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/HeartRateUtils.java
Patch:
@@ -18,7 +18,7 @@
 
 public class HeartRateUtils {
     public static final int MAX_HEART_RATE_VALUE = 250;
-    public static final int MIN_HEART_RATE_VALUE = 0;
+    public static final int MIN_HEART_RATE_VALUE = 10;
     /**
      * The maxiumum gap between two hr measurements in which
      * we interpolate between the measurements. Otherwise, two

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -49,8 +49,8 @@ public enum DeviceType {
     ZETIME(80, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_mykronoz_zetime),
     ID115(90, R.drawable.ic_device_h30_h10, R.drawable.ic_device_h30_h10_disabled, R.string.devicetype_id115),
     WATCH9(100, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_watch9),
-    ROIDMI(100, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi),
-    ROIDMI3(102, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
+    ROIDMI(110, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi),
+    ROIDMI3(112, R.drawable.ic_device_roidmi, R.drawable.ic_device_roidmi_disabled, R.string.devicetype_roidmi3),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/LanguageUtilsTest.java
Patch:
@@ -61,7 +61,7 @@ public void testStringTransliterateBengali() throws Exception {
         //input with cyrillic and diacritic letters
         String input = "অনিরুদ্ধ";
         String output = LanguageUtils.transliterate(input);
-        String result = "oniruddho";
+        String result = "aniruddha";
 
         assertEquals("Transliteration failed", result, output);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband3/MiBand3FirmwareInfo.java
Patch:
@@ -69,7 +69,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             return HuamiFirmwareType.INVALID;
         }
         if (ArrayUtils.startsWith(bytes, RES_HEADER)) {
-            if (bytes.length > 100000) { // don't know how to distinguish from Bip/Cor .res
+            if (bytes.length > 150000) { // don't know how to distinguish from Bip/Cor .res
                 return HuamiFirmwareType.INVALID;
             }
             return HuamiFirmwareType.RES;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -667,6 +667,8 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Device
                 IntentFilter filter = new IntentFilter();
                 filter.addAction(AlarmClockReceiver.ALARM_ALERT_ACTION);
                 filter.addAction(AlarmClockReceiver.ALARM_DONE_ACTION);
+                filter.addAction(AlarmClockReceiver.GOOGLE_CLOCK_ALARM_ALERT_ACTION);
+                filter.addAction(AlarmClockReceiver.GOOGLE_CLOCK_ALARM_DONE_ACTION);
                 registerReceiver(mAlarmClockReceiver, filter);
             }
             if (mCMWeatherReceiver == null && coordinator != null && coordinator.supportsWeather()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/AbstractBleProfile.java
Patch:
@@ -53,7 +53,9 @@ public AbstractBleProfile(T support) {
      * @param intent the intent to broadcast
      */
     protected void notify(Intent intent) {
-        LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent);
+        // note: we send synchronously in order to keep the processing order of BLE events
+        // in BtleQueue and the reception of results.
+        LocalBroadcastManager.getInstance(getContext()).sendBroadcastSync(intent);
     }
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/no1f1/No1F1Support.java
Patch:
@@ -598,7 +598,7 @@ private void handleActivityData(byte[] data) {
                         if (data[0] == No1F1Constants.CMD_FETCH_STEPS) {
                             samples.get(i).setRawKind(ActivityKind.TYPE_ACTIVITY);
                             samples.get(i).setRawIntensity(samples.get(i).getSteps());
-                        } else if (data[0] == No1F1Constants.CMD_FETCH_STEPS) {
+                        } else if (data[0] == No1F1Constants.CMD_FETCH_SLEEP) {
                             if (samples.get(i).getRawIntensity() < 7)
                                 samples.get(i).setRawKind(ActivityKind.TYPE_DEEP_SLEEP);
                             else

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/ActivityDetailsParser.java
Patch:
@@ -140,7 +140,7 @@ private void fixupMissingTimestamps(ActivityTrack activityTrack) {
             List<ActivityPoint> activityPointList = activityTrack.getTrackPoints();
             Date gpsStartTime = null;
             List<ActivityPoint> entriesToFixUp = new ArrayList<>();
-            while (pointer < activityPointList.size() + 1) {
+            while (pointer < activityPointList.size() - 1) {
                 ActivityPoint activityPoint = activityPointList.get(pointer);
                 if (activityPoint.getLocation() == null) {
                     pointer++;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/HuamiService.java
Patch:
@@ -15,15 +15,15 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.devices.miband;
+package nodomain.freeyourgadget.gadgetbridge.devices.huami;
 
 import java.util.HashMap;
 import java.util.Map;
 import java.util.UUID;
 
 import static nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport.BASE_UUID;
 
-public class MiBand2Service {
+public class HuamiService {
 
 
     public static final UUID UUID_SERVICE_MIBAND_SERVICE = UUID.fromString(String.format(BASE_UUID, "FEE0"));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipService.java
Patch:
@@ -19,9 +19,9 @@
 
 import java.util.UUID;
 
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service.DISPLAY_ITEM_BIT_CLOCK;
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service.ENDPOINT_DISPLAY;
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service.ENDPOINT_DISPLAY_ITEMS;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.DISPLAY_ITEM_BIT_CLOCK;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.ENDPOINT_DISPLAY;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.ENDPOINT_DISPLAY_ITEMS;
 
 public class AmazfitBipService {
     public static final UUID UUID_CHARACTERISTIC_WEATHER = UUID.fromString("0000000e-0000-3512-2118-0009af100700");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorService.java
Patch:
@@ -17,8 +17,8 @@
 
 package nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor;
 
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service.DISPLAY_ITEM_BIT_CLOCK;
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service.ENDPOINT_DISPLAY_ITEMS;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.DISPLAY_ITEM_BIT_CLOCK;
+import static nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService.ENDPOINT_DISPLAY_ITEMS;
 
 public class AmazfitCorService {
     public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x20, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2Coordinator.java
Patch:
@@ -27,7 +27,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
@@ -43,7 +43,7 @@ public DeviceType getDeviceType() {
     @NonNull
     @Override
     public DeviceType getSupportedType(GBDeviceCandidate candidate) {
-        if (candidate.supportsService(MiBand2Service.UUID_SERVICE_MIBAND2_SERVICE)) {
+        if (candidate.supportsService(HuamiService.UUID_SERVICE_MIBAND2_SERVICE)) {
             return DeviceType.MIBAND2;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/actions/StopNotificationAction.java
Patch:
@@ -19,7 +19,7 @@
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.AbortTransactionAction;
 
 public abstract class StopNotificationAction extends AbortTransactionAction {
@@ -34,7 +34,7 @@ public StopNotificationAction(BluetoothGattCharacteristic alertLevelCharacterist
     public boolean run(BluetoothGatt gatt) {
         if (!super.run(gatt)) {
             // send a signal to stop the vibration
-            alertLevelCharacteristic.setValue(new byte[]{MiBand2Service.ALERT_LEVEL_NONE});
+            alertLevelCharacteristic.setValue(new byte[]{HuamiService.ALERT_LEVEL_NONE});
             gatt.writeCharacteristic(alertLevelCharacteristic);
             return false;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/operations/AmazfitBipFetchLogsOperation.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.concurrent.TimeUnit;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.WaitAction;
@@ -75,12 +75,12 @@ protected void startFetching(TransactionBuilder builder) {
         GregorianCalendar sinceWhen = BLETypeConversions.createCalendar();
         sinceWhen.add(Calendar.DAY_OF_MONTH, -10);
         builder.write(characteristicFetch, BLETypeConversions.join(new byte[]{
-                        MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE,
+                        HuamiService.COMMAND_ACTIVITY_DATA_START_DATE,
                         AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_DEBUGLOGS},
                 getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
-        builder.write(characteristicFetch, new byte[]{MiBand2Service.COMMAND_FETCH_DATA});
+        builder.write(characteristicFetch, new byte[]{HuamiService.COMMAND_FETCH_DATA});
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorSupport.java
Patch:
@@ -27,9 +27,9 @@
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor.AmazfitCorFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor.AmazfitCorService;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipSupport;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
@@ -72,7 +72,7 @@ protected AmazfitCorSupport setDisplayItems(TransactionBuilder builder) {
                 command[2] |= 0x01;
             }
         }
-        builder.write(getCharacteristic(MiBand2Service.UUID_CHARACTERISTIC_3_CONFIGURATION), command);
+        builder.write(getCharacteristic(HuamiService.UUID_CHARACTERISTIC_3_CONFIGURATION), command);
 
         return this;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchActivityOperation.java
Patch:
@@ -33,7 +33,7 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
@@ -69,10 +69,10 @@ protected void startFetching() throws IOException {
     @Override
     protected void startFetching(TransactionBuilder builder) {
         GregorianCalendar sinceWhen = getLastSuccessfulSyncTime();
-        builder.write(characteristicFetch, BLETypeConversions.join(new byte[] { MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE, MiBand2Service.COMMAND_ACTIVITY_DATA_TYPE_ACTIVTY }, getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
+        builder.write(characteristicFetch, BLETypeConversions.join(new byte[] { HuamiService.COMMAND_ACTIVITY_DATA_START_DATE, HuamiService.COMMAND_ACTIVITY_DATA_TYPE_ACTIVTY }, getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
-        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_DATA});
+        builder.write(characteristicFetch, new byte[] { HuamiService.COMMAND_FETCH_DATA});
     }
 
     protected void handleActivityFetchFinish(boolean success) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsDetailsOperation.java
Patch:
@@ -33,7 +33,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.entities.BaseActivitySummary;
 import nodomain.freeyourgadget.gadgetbridge.export.ActivityTrackExporter;
 import nodomain.freeyourgadget.gadgetbridge.export.GPXExporter;
@@ -73,12 +73,12 @@ protected void startFetching(TransactionBuilder builder) {
         GregorianCalendar sinceWhen = getLastSuccessfulSyncTime();
 
         builder.write(characteristicFetch, BLETypeConversions.join(new byte[] {
-                MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE,
+                HuamiService.COMMAND_ACTIVITY_DATA_START_DATE,
                 AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_SPORTS_DETAILS},
                 getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
-        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_DATA });
+        builder.write(characteristicFetch, new byte[] { HuamiService.COMMAND_FETCH_DATA });
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/operations/FetchSportsSummaryOperation.java
Patch:
@@ -35,8 +35,8 @@
 import nodomain.freeyourgadget.gadgetbridge.Logging;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiService;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitbip.AmazfitBipService;
-import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Service;
 import nodomain.freeyourgadget.gadgetbridge.entities.BaseActivitySummary;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
@@ -68,12 +68,12 @@ protected void startFetching(TransactionBuilder builder) {
         LOG.info("start" + getName());
         GregorianCalendar sinceWhen = getLastSuccessfulSyncTime();
         builder.write(characteristicFetch, BLETypeConversions.join(new byte[] {
-                MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE,
+                HuamiService.COMMAND_ACTIVITY_DATA_START_DATE,
                 AmazfitBipService.COMMAND_ACTIVITY_DATA_TYPE_SPORTS_SUMMARIES},
                 getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
-        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_DATA });
+        builder.write(characteristicFetch, new byte[] { HuamiService.COMMAND_FETCH_DATA });
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorSupport.java
Patch:
@@ -50,7 +50,7 @@ protected AmazfitCorSupport setDisplayItems(TransactionBuilder builder) {
             if (pages.contains("status")) {
                 command[1] |= 0x02;
             }
-            if (pages.contains("notification")) {
+            if (pages.contains("notifications")) {
                 command[1] |= 0x04;
             }
             if (pages.contains("activity")) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/ActivityDetailsParser.java
Patch:
@@ -134,7 +134,7 @@ public ActivityTrack parse(byte[] bytes) throws GBException {
         return activityTrack;
     }
 
-    private void fixupMissingTimestamps(ActivityTrack activityTrack) throws GBException {
+    private void fixupMissingTimestamps(ActivityTrack activityTrack) {
         try {
             int pointer = 0;
             List<ActivityPoint> activityPointList = activityTrack.getTrackPoints();
@@ -168,7 +168,7 @@ private void fixupMissingTimestamps(ActivityTrack activityTrack) throws GBExcept
                 }
             }
         } catch (Exception ex) {
-            throw new GBException("Error cleaning activity details: " + ex.getMessage(), ex);
+            LOG.warn("Error cleaning activity details", ex);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/FileUtils.java
Patch:
@@ -318,6 +318,6 @@ public static File createTempDir(String prefix) throws IOException {
      * @return the valid file name
      */
     public static String makeValidFileName(String name) {
-        return name.replaceAll("\0/:\\r\\n\\\\", "_");
+        return name.replaceAll("[\0/:\\r\\n\\\\]", "_");
     }
 }
\ No newline at end of file

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -108,9 +108,7 @@ public boolean onLongClick(View v) {
                 return true;
             }
         });
-        holder.deviceImageView.setImageResource(R.drawable.level_list_device);
-        //level-list does not allow negative values, hence we always add 100 to the key.
-        holder.deviceImageView.setImageLevel(device.getType().getKey() + 100 + (device.isInitialized() ? 100 : 0));
+        holder.deviceImageView.setImageResource(device.isInitialized() ? device.getType().getIcon() : device.getType().getDisabledIcon());
 
         holder.deviceNameLabel.setText(getUniqueDeviceName(device));
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -142,7 +142,8 @@ public void onNotification(NotificationSpec notificationSpec) {
                 .putExtra(EXTRA_NOTIFICATION_ID, notificationSpec.id)
                 .putExtra(EXTRA_NOTIFICATION_TYPE, notificationSpec.type)
                 .putExtra(EXTRA_NOTIFICATION_SOURCENAME, notificationSpec.sourceName)
-                .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor);
+                .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor)
+                .putExtra(EXTRA_NOTIFICATION_SOURCEAPPID, notificationSpec.sourceAppId);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -71,6 +71,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NOTIFICATION_PHONENUMBER = "notification_phonenumber";
     String EXTRA_NOTIFICATION_SENDER = "notification_sender";
     String EXTRA_NOTIFICATION_SOURCENAME = "notification_sourcename";
+    String EXTRA_NOTIFICATION_SOURCEAPPID = "notification_sourceappid";
     String EXTRA_NOTIFICATION_SUBJECT = "notification_subject";
     String EXTRA_NOTIFICATION_TITLE = "notification_title";
     String EXTRA_NOTIFICATION_TYPE = "notification_type";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -148,6 +148,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PEBBLE_COLOR;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PHONENUMBER;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SENDER;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SOURCEAPPID;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SOURCENAME;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SUBJECT;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_TITLE;
@@ -348,6 +349,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 notificationSpec.pebbleColor = (byte) intent.getSerializableExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR);
                 notificationSpec.id = intent.getIntExtra(EXTRA_NOTIFICATION_ID, -1);
                 notificationSpec.flags = intent.getIntExtra(EXTRA_NOTIFICATION_FLAGS, 0);
+                notificationSpec.sourceAppId = intent.getStringExtra(EXTRA_NOTIFICATION_SOURCEAPPID);
 
                 if (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null) {
                     notificationSpec.id = mRandom.nextInt(); // FIXME: add this in external SMS Receiver?

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -142,7 +142,8 @@ public void onNotification(NotificationSpec notificationSpec) {
                 .putExtra(EXTRA_NOTIFICATION_ID, notificationSpec.id)
                 .putExtra(EXTRA_NOTIFICATION_TYPE, notificationSpec.type)
                 .putExtra(EXTRA_NOTIFICATION_SOURCENAME, notificationSpec.sourceName)
-                .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor);
+                .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor)
+                .putExtra(EXTRA_NOTIFICATION_SOURCEAPPID, notificationSpec.sourceAppId);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -71,6 +71,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NOTIFICATION_PHONENUMBER = "notification_phonenumber";
     String EXTRA_NOTIFICATION_SENDER = "notification_sender";
     String EXTRA_NOTIFICATION_SOURCENAME = "notification_sourcename";
+    String EXTRA_NOTIFICATION_SOURCEAPPID = "notification_sourceappid";
     String EXTRA_NOTIFICATION_SUBJECT = "notification_subject";
     String EXTRA_NOTIFICATION_TITLE = "notification_title";
     String EXTRA_NOTIFICATION_TYPE = "notification_type";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -148,6 +148,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PEBBLE_COLOR;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PHONENUMBER;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SENDER;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SOURCEAPPID;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SOURCENAME;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SUBJECT;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_TITLE;
@@ -348,6 +349,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 notificationSpec.pebbleColor = (byte) intent.getSerializableExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR);
                 notificationSpec.id = intent.getIntExtra(EXTRA_NOTIFICATION_ID, -1);
                 notificationSpec.flags = intent.getIntExtra(EXTRA_NOTIFICATION_FLAGS, 0);
+                notificationSpec.sourceAppId = intent.getStringExtra(EXTRA_NOTIFICATION_SOURCEAPPID);
 
                 if (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null) {
                     notificationSpec.id = mRandom.nextInt(); // FIXME: add this in external SMS Receiver?

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/export/GPXExporter.java
Patch:
@@ -131,7 +131,7 @@ private boolean exportTrackPoint(XmlSerializer ser, ActivityPoint point, String
         ser.attribute(NS_DEFAULT, "lon", formatLocation(location.getLongitude()));
         ser.attribute(NS_DEFAULT, "lat", formatLocation(location.getLatitude()));
         ser.startTag(NS_DEFAULT, "ele").text(formatLocation(location.getAltitude())).endTag(NS_DEFAULT, "ele");
-        ser.startTag(NS_DEFAULT, "time").text(formatTime(point.getTime())).endTag(NS_DEFAULT, "time");
+        ser.startTag(NS_DEFAULT, "time").text(DateTimeUtils.formatIso8601UTC(point.getTime())).endTag(NS_DEFAULT, "time");
         String description = point.getDescription();
         if (description != null) {
             ser.startTag(NS_DEFAULT, "desc").text(description).endTag(NS_DEFAULT, "desc");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/Weather.java
Patch:
@@ -433,7 +433,7 @@ public static int mapToOpenWeatherMapCondition(int yahooCondition) {
                 return 801;
             case 45:  //thundershowers
             case 47:  //isolated thundershowers
-                return 621;
+                return 211;
             case 3200:  //not available
             default:
                 return -1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -101,7 +101,7 @@ public class MiBand2Service {
     /**
      * In some logs it's 0x0...
      */
-    public static final byte AUTH_BYTE = 0x8;
+    public static final byte AUTH_BYTE = 0x00;
 
     // maybe not really activity data, but steps?
     public static final byte COMMAND_FETCH_DATA = 0x02;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/id115/ID115Support.java
Patch:
@@ -27,10 +27,9 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.GattService;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.no1f1.No1F1Support;
 
 public class ID115Support extends AbstractBTLEDeviceSupport {
-    private static final Logger LOG = LoggerFactory.getLogger(No1F1Support.class);
+    private static final Logger LOG = LoggerFactory.getLogger(ID115Support.class);
 
     public BluetoothGattCharacteristic normalWriteCharacteristic = null;
     public BluetoothGattCharacteristic healthWriteCharacteristic = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -46,6 +46,7 @@ public enum DeviceType {
     NO1F1(50, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_no1_f1),
     TECLASTH30(60, R.drawable.ic_device_h30_h10, R.drawable.ic_device_h30_h10_disabled, R.string.devicetype_teclast_h30),
     XWATCH(70, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_xwatch),
+    ID115(80, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_id115),
     TEST(1000, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_test);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/zetime/ZeTimeDeviceSupport.java
Patch:
@@ -743,7 +743,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                         handleSleepData(data);
                         break;
                     case ZeTimeConstants.CMD_GET_HEARTRATE_EXDATA:
-                        handleHeatRateData(data);
+                        handleHeartRateData(data);
                         break;
                     case ZeTimeConstants.CMD_MUSIC_CONTROL:
                         handleMusicControl(data);
@@ -1052,7 +1052,7 @@ private void handleSleepData(byte[] msg)
         }
     }
 
-    private void handleHeatRateData(byte[] msg)
+    private void handleHeartRateData(byte[] msg)
     {
         ZeTimeActivitySample sample = new ZeTimeActivitySample();
         sample.setHeartRate(msg[11]);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivityAnalysis.java
Patch:
@@ -85,11 +85,11 @@ ActivityAmounts calculateActivityAmounts(List<? extends ActivitySample> samples)
                     }
 
                     if (!stats.containsKey(steps)) {
-                        LOG.info("Adding: " + steps);
+//                        LOG.debug("Adding: " + steps);
                         stats.put(steps, timeDifference);
                     } else {
                         long time = stats.get(steps);
-                        LOG.info("Updating: " + steps + " " + timeDifference + time);
+//                        LOG.debug("Updating: " + steps + " " + timeDifference + time);
                         stats.put(steps, timeDifference + time);
                     }
                 }

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -295,6 +295,9 @@ private static Entity addZeTimeActivitySample(Schema schema, Entity user, Entity
         activitySample.addIntProperty(SAMPLE_RAW_KIND).notNull().codeBeforeGetterAndSetter(OVERRIDE);
         activitySample.addIntProperty(SAMPLE_RAW_INTENSITY).notNull().codeBeforeGetterAndSetter(OVERRIDE);
         addHeartRateProperties(activitySample);
+        activitySample.addIntProperty("caloriesBurnt");
+        activitySample.addIntProperty("distanceMeters");
+        activitySample.addIntProperty("activeTimeMinutes");
         return activitySample;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeConstants.java
Patch:
@@ -57,6 +57,7 @@ public class ZeTimeConstants {
     public static final byte CMD_GET_HEARTRATE_EXDATA = (byte) 0x61;
     public static final byte CMD_PUSH_EX_MSG = (byte) 0x76;
     public static final byte CMD_PUSH_WEATHER_DATA = (byte) 0x77;
+    public static final byte CMD_MUSIC_CONTROL = (byte) 0xD0;
     // here are the action commands
     public static final byte CMD_REQUEST = (byte) 0x70;
     public static final byte CMD_SEND = (byte) 0x71;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -179,7 +179,7 @@ private void handleGBDeviceEvent(GBDeviceEventFindPhone deviceEvent) {
         }
     }
 
-    private void handleGBDeviceEvent(GBDeviceEventMusicControl musicEvent) {
+    protected void handleGBDeviceEvent(GBDeviceEventMusicControl musicEvent) {
         Context context = getContext();
         LOG.info("Got event for MUSIC_CONTROL");
         Intent musicIntent = new Intent(GBMusicControlReceiver.ACTION_MUSICCONTROL);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/zetime/ZeTimeSampleProvider.java
Patch:
@@ -35,7 +35,7 @@ public int toRawActivityKind(int activityKind) {
 
     @Override
     public float normalizeIntensity(int rawIntensity) {
-        return rawIntensity / (float) 8000.0;
+        return rawIntensity;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -136,14 +136,13 @@ public class MiBand2Service {
     public static final byte[] DATEFORMAT_TIME_24_HOURS = new byte[] {ENDPOINT_DISPLAY, 0x02, 0x0, 0x1 };
     public static final byte[] COMMAND_ENABLE_DISPLAY_ON_LIFT_WRIST = new byte[]{ENDPOINT_DISPLAY, 0x05, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_DISPLAY_ON_LIFT_WRIST = new byte[]{ENDPOINT_DISPLAY, 0x05, 0x00, 0x00};
-    public static final byte[] COMMAND_SCHEDULE_DISPLAY_ON_LIFT_WRIST = new byte[]{ENDPOINT_DISPLAY, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
+    public static final byte[] COMMAND_SCHEDULE_DISPLAY_ON_LIFT_WRIST = new byte[]{ENDPOINT_DISPLAY, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00};
     public static final byte[] COMMAND_ENABLE_GOAL_NOTIFICATION = new byte[]{ENDPOINT_DISPLAY, 0x06, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_GOAL_NOTIFICATION = new byte[]{ENDPOINT_DISPLAY, 0x06, 0x00, 0x00};
     public static final byte[] COMMAND_ENABLE_ROTATE_WRIST_TO_SWITCH_INFO = new byte[]{ENDPOINT_DISPLAY, 0x0d, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_ROTATE_WRIST_TO_SWITCH_INFO = new byte[]{ENDPOINT_DISPLAY, 0x0d, 0x00, 0x00};
     public static final byte[] COMMAND_ENABLE_DISPLAY_CALLER = new byte[]{ENDPOINT_DISPLAY, 0x10, 0x00, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_DISPLAY_CALLER = new byte[]{ENDPOINT_DISPLAY, 0x10, 0x00, 0x00, 0x00};
-    public static final byte[] DISPLAY_XXX = new byte[] {ENDPOINT_DISPLAY, 0x03, 0x0, 0x0 };
     public static final byte[] DISPLAY_YYY = new byte[] {ENDPOINT_DISPLAY, 0x10, 0x0, 0x1, 0x1 };
     public static final byte[] COMMAND_DISTANCE_UNIT_METRIC = new byte[] { ENDPOINT_DISPLAY, 0x03, 0x00, 0x00 };
     public static final byte[] COMMAND_DISTANCE_UNIT_IMPERIAL = new byte[] { ENDPOINT_DISPLAY, 0x03, 0x00, 0x01 };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -446,7 +446,8 @@ private boolean shouldIgnoreNotification(Notification notification, String sourc
         //some Apps always mark their notifcations as read-only
         if (NotificationCompat.getLocalOnly(notification) &&
                 type != NotificationType.WECHAT &&
-                type != NotificationType.OUTLOOK) {
+                type != NotificationType.OUTLOOK &&
+                type != NotificationType.SKYPE) { //see https://github.com/Freeyourgadget/Gadgetbridge/issues/1109
             return true;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -109,6 +109,9 @@ private AppNotificationType() {
         // Skype
         put("com.skype.raider", NotificationType.SKYPE);
 
+        // Skype for business
+        put("com.microsoft.office.lync15", NotificationType.SKYPE);
+
         // Mailbox
         put("com.mailboxapp", NotificationType.MAILBOX);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -113,7 +113,7 @@ public void onReceive(Context context, Intent intent) {
                             } else {
                                 // ACTION_MUTE
                                 LOG.info("going to mute " + sbn.getPackageName());
-                                GBApplication.addAppToBlacklist(sbn.getPackageName());
+                                GBApplication.addAppToNotifBlacklist(sbn.getPackageName());
                             }
                         }
                     }
@@ -426,7 +426,7 @@ private boolean shouldIgnoreSource(String source) {
             }
         }
 
-        if (GBApplication.appIsBlacklisted(source)) {
+        if (GBApplication.appIsNotifBlacklisted(source)) {
             LOG.info("Ignoring notification, application is blacklisted");
             return true;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GBPrefs.java
Patch:
@@ -22,6 +22,7 @@
 
 public class GBPrefs {
     public static final String PACKAGE_BLACKLIST = "package_blacklist";
+    public static final String PACKAGE_PEBBLEMSG_BLACKLIST = "package_pebblemsg_blacklist";
     public static final String CALENDAR_BLACKLIST = "calendar_blacklist";
     public static final String AUTO_RECONNECT = "general_autocreconnect";
     private static final String AUTO_START = "general_autostartonboot";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipFWHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.AmazfitBipFirmwareInfo;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipFirmwareInfo;
 
 public class AmazfitBipFWHelper extends HuamiFWHelper {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2FWHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.IOException;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.Mi2FirmwareInfo;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.Mi2FirmwareInfo;
 
 public class MiBand2FWHelper extends HuamiFWHelper {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2FWInstallHandler.java
Patch:
@@ -37,7 +37,7 @@
 public class MiBand2FWInstallHandler extends AbstractMiBandFWInstallHandler {
     private static final Logger LOG = LoggerFactory.getLogger(MiBand2FWInstallHandler.class);
 
-    public MiBand2FWInstallHandler(Uri uri, Context context) {
+    MiBand2FWInstallHandler(Uri uri, Context context) {
         super(uri, context);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2HRXCoordinator.java
Patch:
@@ -25,6 +25,7 @@
 import org.slf4j.LoggerFactory;
 
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiConst;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
@@ -44,7 +45,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         try {
             BluetoothDevice device = candidate.getDevice();
             String name = device.getName();
-            if (name != null && (name.equalsIgnoreCase("Mi Band HRX") || name.equalsIgnoreCase("Mi Band 2i"))) {
+            if (name != null && (name.equalsIgnoreCase(HuamiConst.MI_BAND2_NAME_HRX) || name.equalsIgnoreCase("Mi Band 2i"))) {
                 return DeviceType.MIBAND2;
             }
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -73,8 +73,6 @@ public final class MiBandConst {
     public static final String ORIGIN_INCOMING_CALL = "incoming_call";
     public static final String ORIGIN_ALARM_CLOCK = "alarm_clock";
     public static final String MI_GENERAL_NAME_PREFIX = "MI";
-    public static final String MI_BAND2_NAME = "MI Band 2";
-    public static final String MI_BAND2_NAME_HRX = "Mi Band HRX";
     public static final String MI_1 = "1";
     public static final String MI_1A = "1A";
     public static final String MI_1S = "1S";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -35,6 +35,7 @@ public enum DeviceType {
     MIBAND2(11, R.drawable.ic_device_miband, R.drawable.ic_device_miband_disabled, R.string.devicetype_miband2),
     AMAZFITBIP(12, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_amazfit_bip),
     AMAZFITCOR(13, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_amazfit_cor),
+    MIBAND3(14, R.drawable.ic_device_miband, R.drawable.ic_device_miband_disabled, R.string.devicetype_miband3),
     VIBRATISSIMO(20, R.drawable.ic_device_lovetoy, R.drawable.ic_device_lovetoy_disabled, R.string.devicetype_vibratissimo),
     LIVEVIEW(30, R.drawable.ic_device_default, R.drawable.ic_device_default_disabled, R.string.devicetype_liveview),
     HPLUS(40, R.drawable.ic_device_hplus, R.drawable.ic_device_hplus_disabled, R.string.devicetype_hplus),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiBatteryInfo.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami;
 
 import java.util.GregorianCalendar;
 
@@ -45,14 +45,14 @@
 //        04		= 4   // num charges??
 //        64		= 100 // how much was charged
 
-public class BatteryInfo extends AbstractInfo {
+public class HuamiBatteryInfo extends AbstractInfo {
     public static final byte DEVICE_BATTERY_NORMAL = 0;
     public static final byte DEVICE_BATTERY_CHARGING = 1;
 //    public static final byte DEVICE_BATTERY_LOW = 1;
 //    public static final byte DEVICE_BATTERY_CHARGING_FULL = 3;
 //    public static final byte DEVICE_BATTERY_CHARGE_OFF = 4;
 
-    public BatteryInfo(byte[] data) {
+    public HuamiBatteryInfo(byte[] data) {
         super(data);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/ActivityDetailsParser.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/AmazfitBipFirmwareInfo.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -131,7 +131,7 @@ public AmazfitBipFirmwareInfo(byte[] bytes) {
     @Override
     protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
         if (ArrayUtils.startsWith(bytes, RES_HEADER) || ArrayUtils.startsWith(bytes, NEWRES_HEADER)) {
-            if (bytes.length > 700000) { // dont know how to distinguish from Cor .res
+            if ((bytes.length <= 100000) || (bytes.length > 700000)) { // dont know how to distinguish from Cor/Mi Band 3 .res
                 return HuamiFirmwareType.INVALID;
             }
             return HuamiFirmwareType.RES;
@@ -149,7 +149,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             String foundVersion = searchFirmwareVersion(bytes);
             if (foundVersion != null) {
                 Version version = new Version(foundVersion);
-                if ((version.compareTo(new Version("0.0.8.00")) >= 0) && (version.compareTo(new Version("1.0.5.00")) < 0)) {
+                if ((version.compareTo(new Version("0.0.8.00")) >= 0) && (version.compareTo(new Version("1.0.0.00")) < 0)) {
                     return HuamiFirmwareType.FIRMWARE;
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/BipActivityType.java
Patch:
@@ -1,4 +1,4 @@
-package nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip;
 
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitbip/operations/AmazfitBipFetchLogsOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.operations;
 
 import android.support.annotation.NonNull;
 import android.widget.Toast;
@@ -37,8 +37,8 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.WaitAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.AmazfitBipSupport;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations.AbstractFetchOperation;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations.AbstractFetchOperation;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorSupport.java
Patch:
@@ -23,7 +23,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.HuamiFWHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor.AmazfitCorFWHelper;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.AmazfitBipSupport;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.AmazfitBipSupport;
 
 public class AmazfitCorSupport extends AmazfitBipSupport {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/AbstractMiBand2Operation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2;
 
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.operations.AbstractMiBandOperation;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/Mi2NotificationStrategy.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2;
 
 import android.bluetooth.BluetoothGattCharacteristic;
 import android.support.annotation.Nullable;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/Mi2TextNotificationStrategy.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2;
 
 import android.bluetooth.BluetoothGattCharacteristic;
 import android.support.annotation.NonNull;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/actions/StopNotificationAction.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.actions;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.actions;
 
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/operations/AbstractFetchOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations;
 
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
@@ -40,8 +40,8 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceBusyAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.AbstractMiBand2Operation;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.AbstractMiBand2Operation;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.ArrayUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/operations/FetchActivityOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations;
 
 import android.text.format.DateUtils;
 import android.widget.Toast;
@@ -42,7 +42,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.WaitAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/operations/FetchSportsDetailsOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations;
 
 import android.support.annotation.NonNull;
 import android.widget.Toast;
@@ -39,8 +39,8 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.WaitAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.ActivityDetailsParser;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.ActivityDetailsParser;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/operations/FetchSportsSummaryOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations;
 
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
@@ -45,8 +45,8 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.WaitAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.BipActivityType;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.BipActivityType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/miband2/operations/InitOperation.java
Patch:
@@ -14,7 +14,7 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.operations;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.operations;
 
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
@@ -41,7 +41,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEOperation;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceStateAction;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 public class InitOperation extends AbstractBTLEOperation<MiBand2Support> {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -48,6 +48,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.amazfitcor.AmazfitCorCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband2.MiBand2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband2.MiBand2HRXCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.huami.miband3.MiBand3Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.jyou.TeclastH30Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.liveview.LiveviewCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
@@ -195,6 +196,7 @@ private List<DeviceCoordinator> createCoordinators() {
         List<DeviceCoordinator> result = new ArrayList<>();
         result.add(new AmazfitBipCoordinator()); // Note: must come before MiBand2 because detection is hacky, atm
         result.add(new AmazfitCorCoordinator()); // Note: must come before MiBand2 because detection is hacky, atm
+        result.add(new MiBand3Coordinator());  // Note: must come before MiBand2 because detection is hacky, atm
         result.add(new MiBand2HRXCoordinator()); // Note: must come before MiBand2 because detection is hacky, atm
         result.add(new MiBand2Coordinator()); // Note: MiBand2 must come before MiBand because detection is hacky, atm
         result.add(new MiBandCoordinator());

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/ActivityDetailsParserTest.java
Patch:
@@ -10,15 +10,14 @@
 import java.util.Date;
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.GBException;
 import nodomain.freeyourgadget.gadgetbridge.devices.amazfitbip.BipActivitySummary;
 import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.entities.User;
 import nodomain.freeyourgadget.gadgetbridge.export.GPXExporter;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityPoint;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityTrack;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.BLETypeConversions;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip.ActivityDetailsParser;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.amazfitbip.ActivityDetailsParser;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceManager.java
Patch:
@@ -40,6 +40,7 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
+import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 /**
  * Provides access to the list of devices managed by Gadgetbridge.
@@ -150,6 +151,8 @@ private void updateSelectedDevice(GBDevice dev) {
                 }
             }
         }
+        GB.updateNotification(selectedDevice, context);
+
     }
 
     private void refreshPairedDevices() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -127,7 +127,6 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CANNEDMESSAGES_TYPE;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CONFIG;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CONNECT_FIRST_TIME;
-import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_RECORDED_DATA_TYPES;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_FIND_START;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_INTERVAL_SECONDS;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_MUSIC_ALBUM;
@@ -151,6 +150,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SUBJECT;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_TITLE;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_TYPE;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_RECORDED_DATA_TYPES;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_URI;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_VIBRATION_INTENSITY;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_WEATHER;
@@ -217,7 +217,6 @@ public void onReceive(Context context, Intent intent) {
                     mGBDevice = device;
                     boolean enableReceivers = mDeviceSupport != null && (mDeviceSupport.useAutoConnect() || mGBDevice.isInitialized());
                     setReceiversEnableState(enableReceivers, mGBDevice.isInitialized(), DeviceHelper.getInstance().getCoordinator(device));
-                    GB.updateNotification(mGBDevice, context);
                 } else {
                     LOG.error("Got ACTION_DEVICE_CHANGED from unexpected device: " + device);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothStateChangeReceiver.java
Patch:
@@ -36,7 +36,7 @@ public class BluetoothStateChangeReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         String action = intent.getAction();
 
-        if (action.equals(BluetoothAdapter.ACTION_STATE_CHANGED)) {
+        if (BluetoothAdapter.ACTION_STATE_CHANGED.equals(action)) {
             if (intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, -1) == BluetoothAdapter.STATE_ON) {
 
                 Intent refreshIntent = new Intent(DeviceManager.ACTION_REFRESH_DEVICELIST);
@@ -50,6 +50,7 @@ public void onReceive(Context context, Intent intent) {
                 LOG.info("Bluetooth turned on => connecting...");
                 GBApplication.deviceService().connect();
             } else if (intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, -1) == BluetoothAdapter.STATE_OFF) {
+                LOG.info("Bluetooth turned off => disconnecting...");
                 GBApplication.deviceService().disconnect();
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -409,11 +409,12 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
             }
             case ACTION_DISCONNECT: {
                 mDeviceSupport.dispose();
-                if (mGBDevice != null && mGBDevice.getState() == GBDevice.State.WAITING_FOR_RECONNECT) {
-                    setReceiversEnableState(false, false, null);
+                if (mGBDevice != null) {
                     mGBDevice.setState(GBDevice.State.NOT_CONNECTED);
                     mGBDevice.sendDeviceUpdateIntent(this);
                 }
+                setReceiversEnableState(false, false, null);
+                mGBDevice = null;
                 mDeviceSupport = null;
                 break;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/operations/AmazfitBipFetchLogsOperation.java
Patch:
@@ -61,7 +61,7 @@ protected void startFetching(TransactionBuilder builder) {
             return;
         }
 
-        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd-hhmmss", Locale.US);
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd-HHmmss", Locale.US);
         String filename = "amazfitbip_" + dateFormat.format(new Date()) + ".log";
 
         File outputFile = new File(dir, filename );
@@ -121,7 +121,7 @@ protected void handleActivityNotif(byte[] value) {
     @Override
     protected void bufferActivityData(@NonNull byte[] value) {
         try {
-            logOutputStream.write(value, 1, value.length);
+            logOutputStream.write(value, 1, value.length - 1);
         } catch (IOException e) {
             LOG.warn("could not write to output stream", e);
             handleActivityFetchFinish(false);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipService.java
Patch:
@@ -43,5 +43,5 @@ public class AmazfitBipService {
 
     public static final byte[] COMMAND_ACK_FIND_PHONE_IN_PROGRESS = new byte[]{ENDPOINT_DISPLAY, 0x14, 0x00, 0x00};
 
-    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
+    public static final byte[] COMMAND_CHANGE_SCREENS = new byte[]{ENDPOINT_DISPLAY_ITEMS, DISPLAY_ITEM_BIT_CLOCK, 0x10, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -273,7 +273,7 @@ private void shareMultiple(List<String> paths){
 
         if(uris.size() > 0) {
             final Intent intent = new Intent(Intent.ACTION_SEND_MULTIPLE);
-            intent.setType("*/*");
+            intent.setType("application/gpx+xml");
             intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
             startActivity(Intent.createChooser(intent, "SHARE"));
         } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DateTimeUtils.java
Patch:
@@ -33,15 +33,15 @@
 
 public class DateTimeUtils {
     private static SimpleDateFormat DAY_STORAGE_FORMAT = new SimpleDateFormat("yyyy-MM-dd", Locale.US);
-    public static SimpleDateFormat ISO_8601_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX", Locale.US);
+    public static SimpleDateFormat ISO_8601_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssZZZ", Locale.US);
 
     public static String formatDateTime(Date date) {
         return DateUtils.formatDateTime(GBApplication.getContext(), date.getTime(), DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_TIME | DateUtils.FORMAT_NO_YEAR);
     }
 
     public static String formatIso8601(Date date) {
-        if(!GBApplication.isRunningNougatOrLater()){
-            return new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssZZZ", Locale.US).format(date);
+        if(GBApplication.isRunningNougatOrLater()){
+            return new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX", Locale.US).format(date);
         }
         return ISO_8601_FORMAT.format(date);
     }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/ActivityDetailsParserTest.java
Patch:
@@ -48,7 +48,7 @@ public void testActivityDetails() throws Exception {
             assertEquals("Elvis", track.getUser().getName());
 
             List<ActivityPoint> trackPoints = track.getTrackPoints();
-            assertEquals(1208, trackPoints.size());
+            assertEquals(939, trackPoints.size());
         }
     }
 
@@ -87,7 +87,7 @@ public void testGPXExport() throws Exception {
             ActivityTrack track = parser.parse(FileUtils.readAll(in, MAX_DETAILS));
 
             List<ActivityPoint> trackPoints = track.getTrackPoints();
-            assertEquals(1208, trackPoints.size());
+            assertEquals(939, trackPoints.size());
 
 
             GPXExporter exporter = new GPXExporter();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/WeatherSpec.java
Patch:
@@ -42,6 +42,9 @@ public WeatherSpec[] newArray(int size) {
     public int currentHumidity;
     public int todayMaxTemp;
     public int todayMinTemp;
+    public float windSpeed; //km per hour
+    public int windDirection; //deg
+
     public ArrayList<Forecast> forecasts = new ArrayList<>();
 
     public WeatherSpec() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DateTimeUtils.java
Patch:
@@ -33,7 +33,7 @@
 
 public class DateTimeUtils {
     private static SimpleDateFormat DAY_STORAGE_FORMAT = new SimpleDateFormat("yyyy-MM-dd", Locale.US);
-    public static SimpleDateFormat ISO_8601_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssXXX", Locale.US);
+    public static SimpleDateFormat ISO_8601_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX", Locale.US);
 
     public static String formatDateTime(Date date) {
         return DateUtils.formatDateTime(GBApplication.getContext(), date.getTime(), DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_TIME | DateUtils.FORMAT_NO_YEAR);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DateTimeUtils.java
Patch:
@@ -40,6 +40,9 @@ public static String formatDateTime(Date date) {
     }
 
     public static String formatIso8601(Date date) {
+        if(!GBApplication.isRunningNougatOrLater()){
+            return new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssZZZ", Locale.US).format(date);
+        }
         return ISO_8601_FORMAT.format(date);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -80,6 +80,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                     String gpxTrack = summary.getGpxTrack();
                     if (gpxTrack != null) {
                         showTrack(gpxTrack);
+                    } else {
+                        GB.toast("This activity does not contain GPX tracks.", Toast.LENGTH_LONG, GB.INFO);
                     }
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/ActivitySummariesAdapter.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.widget.Toast;
 
+import java.util.Collections;
 import java.util.Date;
 import java.util.List;
 
@@ -24,6 +25,7 @@ public void loadItems() {
         try (DBHandler handler = GBApplication.acquireDB()) {
             BaseActivitySummaryDao summaryDao = handler.getDaoSession().getBaseActivitySummaryDao();
             List<BaseActivitySummary> allSummaries = summaryDao.loadAll();
+            Collections.reverse(allSummaries); //we fetch by swiping down, hence it makes sense to have most recent activities on top
             setItems(allSummaries, true);
         } catch (Exception e) {
             GB.toast("Error loading activity summaries.", Toast.LENGTH_SHORT, GB.ERROR, e);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -509,7 +509,7 @@ private void migratePrefs(int oldVersion) {
             case 0:
                 String legacyGender = sharedPrefs.getString("mi_user_gender", null);
                 String legacyHeight = sharedPrefs.getString("mi_user_height_cm", null);
-                String legacyWeigth = sharedPrefs.getString("mi_user_weight_kg", null);
+                String legacyWeight = sharedPrefs.getString("mi_user_weight_kg", null);
                 String legacyYOB = sharedPrefs.getString("mi_user_year_of_birth", null);
                 if (legacyGender != null) {
                     int gender = "male".equals(legacyGender) ? 1 : "female".equals(legacyGender) ? 0 : 2;
@@ -520,8 +520,8 @@ private void migratePrefs(int oldVersion) {
                     editor.putString(ActivityUser.PREF_USER_HEIGHT_CM, legacyHeight);
                     editor.remove("mi_user_height_cm");
                 }
-                if (legacyWeigth != null) {
-                    editor.putString(ActivityUser.PREF_USER_WEIGHT_KG, legacyWeigth);
+                if (legacyWeight != null) {
+                    editor.putString(ActivityUser.PREF_USER_WEIGHT_KG, legacyWeight);
                     editor.remove("mi_user_weight_kg");
                 }
                 if (legacyYOB != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -118,7 +118,7 @@ public void run() {
                     BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                     short rssi = intent.getShortExtra(BluetoothDevice.EXTRA_RSSI, GBDevice.RSSI_UNKNOWN);
                     Parcelable[] uuids = intent.getParcelableArrayExtra(BluetoothDevice.EXTRA_UUID);
-                    ParcelUuid[] uuids2 = AndroidUtils.toParcelUUids(uuids);
+                    ParcelUuid[] uuids2 = AndroidUtils.toParcelUuids(uuids);
                     handleDeviceFound(device, rssi, uuids2);
                     break;
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -356,7 +356,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                         || (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null)) {
                     // NOTE: maybe not where it belongs
                     if (prefs.getBoolean("pebble_force_untested", false)) {
-                        // I would rather like to save that as an array in ShadredPreferences
+                        // I would rather like to save that as an array in SharedPreferences
                         // this would work but I dont know how to do the same in the Settings Activity's xml
                         ArrayList<String> replies = new ArrayList<>();
                         for (int i = 1; i <= 16; i++) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/AndroidUtils.java
Patch:
@@ -17,7 +17,6 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.util;
 
-import android.app.Activity;
 import android.content.BroadcastReceiver;
 import android.content.ContentUris;
 import android.content.Context;
@@ -53,7 +52,7 @@ public class AndroidUtils {
      * @param uuids an array of {@link ParcelUuid} elements
      * @return a {@link ParcelUuid} array instance with the same contents
      */
-    public static ParcelUuid[] toParcelUUids(Parcelable[] uuids) {
+    public static ParcelUuid[] toParcelUuids(Parcelable[] uuids) {
         if (uuids == null) {
             return null;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/FileUtils.java
Patch:
@@ -220,7 +220,7 @@ private static List<File> getWritableExternalFilesDirs() throws IOException {
         try {
             dirs = context.getExternalFilesDirs(null);
         } catch (NullPointerException | UnsupportedOperationException ex) {
-            // workaround for robolectric 3.1.2 not implementinc getExternalFilesDirs()
+            // workaround for robolectric 3.1.2 not implementing getExternalFilesDirs()
             // https://github.com/robolectric/robolectric/issues/2531
             File dir = context.getExternalFilesDir(null);
             if (dir != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/ImportExportSharedPreferences.java
Patch:
@@ -140,7 +140,7 @@ public static boolean importFromReader(SharedPreferences sharedPreferences, Read
                             GBApplication.setCalendarsBlackList(calendars_blacklist);
                         }
                     } else if (!PREFERENCES.equals(name)) {
-                        throw new Exception("Unkown type " + name);
+                        throw new Exception("Unknown type " + name);
                     }
                     break;
                 case XmlPullParser.END_TAG:

File: app/src/main/java/ru/gelin/android/weather/notification/ParcelableWeather2.java
Patch:
@@ -120,7 +120,7 @@ private ParcelableWeather2(Parcel in) {
             } catch (JSONException e) {
                 LOG.error("error while construction JSON", e);
             }
-            LOG.debug("Forecast JSON for WEBVIEW: " + reconstructedOWMForecast.toString());
+            LOG.debug("Forecast JSON for Webview: " + reconstructedOWMForecast.toString());
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -67,7 +67,7 @@ public interface EventHandler {
 
     void onAppReorder(UUID uuids[]);
 
-    void onFetchActivityData();
+    void onFetchRecordedData(int dataTypes);
 
     void onReboot();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -271,8 +271,9 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
-        Intent intent = createIntent().setAction(ACTION_FETCH_ACTIVITY_DATA);
+    public void onFetchRecordedData(int dataTypes) {
+        Intent intent = createIntent().setAction(ACTION_FETCH_RECORDED_DATA)
+                .putExtra(EXTRA_RECORDED_DATA_TYPES, dataTypes);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -49,7 +49,7 @@ public interface DeviceService extends EventHandler {
     String ACTION_INSTALL = PREFIX + ".action.install";
     String ACTION_REBOOT = PREFIX + ".action.reboot";
     String ACTION_HEARTRATE_TEST = PREFIX + ".action.heartrate_test";
-    String ACTION_FETCH_ACTIVITY_DATA = PREFIX + ".action.fetch_activity_data";
+    String ACTION_FETCH_RECORDED_DATA = PREFIX + ".action.fetch_activity_data";
     String ACTION_DISCONNECT = PREFIX + ".action.disconnect";
     String ACTION_FIND_DEVICE = PREFIX + ".action.find_device";
     String ACTION_SET_CONSTANT_VIBRATION = PREFIX + ".action.set_constant_vibration";
@@ -103,8 +103,8 @@ public interface DeviceService extends EventHandler {
     String EXTRA_CONNECT_FIRST_TIME = "connect_first_time";
     String EXTRA_BOOLEAN_ENABLE = "enable_realtime_steps";
     String EXTRA_INTERVAL_SECONDS = "interval_seconds";
-
     String EXTRA_WEATHER = "weather";
+    String EXTRA_RECORDED_DATA_TYPES = "data_types";
 
     /**
      * Use EXTRA_REALTIME_SAMPLE instead

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/ServiceDeviceSupport.java
Patch:
@@ -248,11 +248,11 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
         if (checkBusy("fetch activity data")) {
             return;
         }
-        delegate.onFetchActivityData();
+        delegate.onFetchRecordedData(dataTypes);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -539,7 +539,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
 
         if (syncHelper == null){
             syncHelper = new HPlusHandlerThread(gbDevice, getContext(), this);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/jyou/TeclastH30Support.java
Patch:
@@ -362,7 +362,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -761,7 +761,7 @@ public void onSetConstantVibration(int intensity) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
         try {
             new FetchActivityOperation(this).perform();
         } catch (IOException ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/MiBand2Support.java
Patch:
@@ -40,7 +40,6 @@
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.Set;
-import java.util.TimeZone;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.UUID;
@@ -804,7 +803,7 @@ public void onSetConstantVibration(int intensity) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
         try {
             new FetchActivityOperation(this).perform();
         } catch (IOException ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/no1f1/No1F1Support.java
Patch:
@@ -299,7 +299,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
         sendFetchCommand(No1F1Constants.CMD_FETCH_STEPS);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vibratissimo/VibratissimoSupport.java
Patch:
@@ -206,7 +206,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/AbstractSerialDeviceSupport.java
Patch:
@@ -180,7 +180,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
         byte[] bytes = gbDeviceProtocol.encodeSynchronizeActivityData();
         sendToDevice(bytes);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -102,7 +102,7 @@ public static Notification createNotification(GBDevice device, Context context)
             PendingIntent disconnectPendingIntent = PendingIntent.getService(context, 0, deviceCommunicationServiceIntent, PendingIntent.FLAG_ONE_SHOT);
             builder.addAction(R.drawable.ic_notification_disconnected, context.getString(R.string.controlcenter_disconnect), disconnectPendingIntent);
             if (GBApplication.isRunningLollipopOrLater() && DeviceHelper.getInstance().getCoordinator(device).supportsActivityDataFetching()) { //for some reason this fails on KK
-                deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_FETCH_ACTIVITY_DATA);
+                deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_FETCH_RECORDED_DATA);
                 PendingIntent fetchPendingIntent = PendingIntent.getService(context, 1, deviceCommunicationServiceIntent, PendingIntent.FLAG_ONE_SHOT);
                 builder.addAction(R.drawable.ic_action_fetch_activity_data, context.getString(R.string.controlcenter_fetch_activity_data), fetchPendingIntent);
             }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -115,7 +115,7 @@ public void onAppReorder(UUID[] uuids) {
     }
 
     @Override
-    public void onFetchActivityData() {
+    public void onFetchRecordedData(int dataTypes) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LockHandler.java
Patch:
@@ -24,7 +24,7 @@
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 
 /**
- * Provides lowlevel access to the database.
+ * Provides low-level access to the database.
  */
 public class LockHandler implements DBHandler {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -1,6 +1,6 @@
 /*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
     Gobbetti, Frank Slezak, Hasan Ammar, Julien Pivotto, Kevin Richter, Normano64,
-    Steffen Liebergeld, TaaviE, Zhong Jianxin
+    Steffen Liebergeld, Taavi Eomäe, Zhong Jianxin
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -326,7 +326,7 @@ public DeviceType getType() {
 
     public void setRssi(short rssi) {
         if (rssi < 0) {
-            LOG.warn("illegal rssi value " + rssi + ", setting to RSSI_UNKNOWN");
+            LOG.warn("Illegal RSSI value " + rssi + ", setting to RSSI_UNKNOWN");
             mRssi = RSSI_UNKNOWN;
         } else {
             mRssi = rssi;
@@ -450,7 +450,7 @@ public List<ItemWithDetails> getDeviceInfos() {
             result.add(new GenericItem(DEVINFO_FW_VER, mFirmwareVersion));
         }
         if (mFirmwareVersion2 != null) {
-            // FIXME: thats ugly
+            // FIXME: This is ugly
             if (mDeviceType == DeviceType.AMAZFITBIP) {
                 result.add(new GenericItem(DEVINFO_GPS_VER, mFirmwareVersion2));
             } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -1,5 +1,5 @@
 /*  Copyright (C) 2015-2018 Andreas Shimokawa, Carsten Pfeiffer, Daniele
-    Gobbetti, Felix Konstantin Maurer, TaaviE, Uwe Hermann, Yar
+    Gobbetti, Felix Konstantin Maurer, Taavi Eomäe, Uwe Hermann, Yar
 
     This file is part of Gadgetbridge.
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -309,6 +309,8 @@ private void checkAndRequestPermissions() {
             wantedPermissions.add(Manifest.permission.READ_PHONE_STATE);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.PROCESS_OUTGOING_CALLS) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.PROCESS_OUTGOING_CALLS);
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.RECEIVE_SMS) == PackageManager.PERMISSION_DENIED)
+            wantedPermissions.add(Manifest.permission.RECEIVE_SMS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_SMS) == PackageManager.PERMISSION_DENIED)
             wantedPermissions.add(Manifest.permission.READ_SMS);
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS) == PackageManager.PERMISSION_DENIED)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -70,6 +70,8 @@
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
+import static nodomain.freeyourgadget.gadgetbridge.activities.HeartRateUtils.isValidHeartRateValue;
+
 /**
  * A base class fragment to be used with ChartsActivity. The fragment can supply
  * a title to be displayed in the activity by returning non-null in #getTitle()
@@ -510,7 +512,7 @@ protected DefaultChartsData<LineData> refresh(GBDevice gbDevice, List<? extends
                         }
                         activityEntries.add(createLineEntry(value, ts));
                 }
-                if (hr && sample.getKind() != ActivityKind.TYPE_NOT_WORN && isValidHeartRateValue(sample.getHeartRate())) {
+                if (hr && sample.getKind() != ActivityKind.TYPE_NOT_WORN && HeartRateUtils.isValidHeartRateValue(sample.getHeartRate())) {
                     if (lastHrSampleIndex > -1 && ts - lastHrSampleIndex > 1800*HeartRateUtils.MAX_HR_MEASUREMENTS_GAP_MINUTES) {
                         heartrateEntries.add(createLineEntry(0, lastHrSampleIndex + 1));
                         heartrateEntries.add(createLineEntry(0, ts - 1));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -124,7 +124,7 @@ public static void sendAppMessage(GBDeviceEventAppMessage message) {
             jsEvent = "appmessage";
         }
 
-        final String appMessage = PebbleUtils.parseIncomingAppMessage(message.message, message.appUUID);
+        final String appMessage = PebbleUtils.parseIncomingAppMessage(message.message, message.appUUID, message.id);
         LOG.debug("to WEBVIEW: event: " + jsEvent + " message: " + appMessage);
         WebViewSingleton.invokeWebview(new WebViewSingleton.WebViewRunnable() {
             @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/webview/GBWebClient.java
Patch:
@@ -85,7 +85,7 @@ public WebResourceResponse shouldInterceptRequest(WebView view, String url) {
 
     private WebResourceResponse mimicReply(Uri requestedUri) {
         if (requestedUri.getHost() != null && (StringUtils.indexOfAny(requestedUri.getHost(), AllowedDomains) != -1)) {
-            if (internetHelperBound) {
+            if (GBApplication.getGBPrefs().isBackgroundJsEnabled() && internetHelperBound) {
                 LOG.debug("WEBVIEW forwarding request to the internet helper");
                 Bundle bundle = new Bundle();
                 bundle.putString("URL", requestedUri.toString());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -52,6 +52,8 @@
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationType;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
+import static nodomain.freeyourgadget.gadgetbridge.util.GB.NOTIFICATION_CHANNEL_ID;
+
 
 public class DebugActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(DebugActivity.class);
@@ -266,7 +268,7 @@ private void testNotification() {
 
         NotificationCompat.WearableExtender wearableExtender = new NotificationCompat.WearableExtender().addAction(action);
 
-        NotificationCompat.Builder ncomp = new NotificationCompat.Builder(this)
+        NotificationCompat.Builder ncomp = new NotificationCompat.Builder(this, NOTIFICATION_CHANNEL_ID)
                 .setContentTitle(getString(R.string.test_notification))
                 .setContentText(getString(R.string.this_is_a_test_notification_from_gadgetbridge))
                 .setTicker(getString(R.string.this_is_a_test_notification_from_gadgetbridge))

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -66,6 +66,8 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
+import static nodomain.freeyourgadget.gadgetbridge.util.GB.NOTIFICATION_CHANNEL_ID;
+
 // TODO: support option for a single reminder notification when notifications could not be delivered?
 // conditions: app was running and received notifications, but device was not connected.
 // maybe need to check for "unread notifications" on device for that.
@@ -257,7 +259,7 @@ private void handleGBDeviceEvent(GBDeviceEventScreenshot screenshot) {
 
             NotificationCompat.Action action = new NotificationCompat.Action.Builder(android.R.drawable.ic_menu_share, "share", pendingShareIntent).build();
 
-            Notification notif = new NotificationCompat.Builder(context)
+            Notification notif = new NotificationCompat.Builder(context, NOTIFICATION_CHANNEL_ID)
                     .setContentTitle("Screenshot taken")
                     .setTicker("Screenshot taken")
                     .setContentText(filename)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorFirmwareInfo.java
Patch:
@@ -45,10 +45,12 @@ public class AmazfitCorFirmwareInfo extends HuamiFirmwareInfo {
         // firmware
         crcToVersion.put(39948, "1.0.5.60");
         crcToVersion.put(62147, "1.0.5.78");
+        crcToVersion.put(54213, "1.0.6.76");
 
         // resources
         crcToVersion.put(46341, "RES 1.0.5.60");
         crcToVersion.put(21770, "RES 1.0.5.78");
+        crcToVersion.put(64977, "RES 1.0.6.76");
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -367,7 +367,7 @@ public void onNotificationRemoved(StatusBarNotification sbn) {
         Prefs prefs = GBApplication.getPrefs();
         if (prefs.getBoolean("autoremove_notifications", false)) {
             LOG.info("notification removed, will ask device to delete it");
-            GBApplication.deviceService().onDeleteNotification(sbn.getPackageName().hashCode() * 31 + sbn.getId());
+            GBApplication.deviceService().onDeleteNotification((int) sbn.getPostTime());
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitbip/AmazfitBipService.java
Patch:
@@ -33,6 +33,8 @@ public class AmazfitBipService {
     public static final byte[] COMMAND_SET_LANGUAGE_TRADITIONAL_CHINESE = new byte[]{ENDPOINT_DISPLAY, 0x13, 0x00, 0x01};
     public static final byte[] COMMAND_SET_LANGUAGE_ENGLISH = new byte[]{ENDPOINT_DISPLAY, 0x13, 0x00, 0x02};
     public static final byte[] COMMAND_SET_LANGUAGE_SPANISH = new byte[]{ENDPOINT_DISPLAY, 0x13, 0x00, 0x03};
+    public static final byte[] COMMAND_SET_LANGUAGE_NEW_TEMPLATE = new byte[]{ENDPOINT_DISPLAY, 0x17, 0x00, 0, 0, 0, 0, 0};
+
 
     public static final byte[] COMMAND_ACK_FIND_PHONE_IN_PROGRESS = new byte[]{ENDPOINT_DISPLAY, 0x14, 0x00, 0x00};
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/AmazfitBipFirmwareInfo.java
Patch:
@@ -140,10 +140,11 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             return HuamiFirmwareType.WATCHFACE;
         }
         if (ArrayUtils.startsWith(bytes, NEWFT_HEADER)) {
-            if (bytes.length > 800000) {
+            if (bytes[10] == 0x01) {
                 return HuamiFirmwareType.FONT;
+            } else if (bytes[10] == 0x02) {
+                return HuamiFirmwareType.FONT_LATIN;
             }
-            return HuamiFirmwareType.FONT_LATIN;
         }
         return HuamiFirmwareType.INVALID;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -171,12 +171,12 @@ public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
     public void onSetCallState(CallSpec callSpec) {
         Context context = GBApplication.getContext();
         String currentPrivacyMode = GBApplication.getPrefs().getString("pref_call_privacy_mode", GBApplication.getContext().getString(R.string.p_call_privacy_mode_off));
-        if (context.getString(R.string.p_call_privacy_mode_name).equals(currentPrivacyMode)) {
+        if (currentPrivacyMode.equals(context.getString(R.string.p_call_privacy_mode_name))) {
             callSpec.name = callSpec.number;
-        } else if (context.getString(R.string.p_call_privacy_mode_complete).equals(currentPrivacyMode)) {
+        } else if (currentPrivacyMode.equals(context.getString(R.string.p_call_privacy_mode_complete))) {
             callSpec.number = null;
             callSpec.name = null;
-        } else if (context.getString(R.string.pref_call_privacy_mode_number).equals(currentPrivacyMode)) {
+        } else if (currentPrivacyMode.equals(context.getString(R.string.p_call_privacy_mode_number))){
             callSpec.name = coalesce(callSpec.name, getContactDisplayNameByNumber(callSpec.number));
             if (callSpec.name != null && !callSpec.name.equals(callSpec.number)) {
                 callSpec.number = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -308,10 +308,10 @@ public boolean onPreferenceClick(Preference preference) {
             public boolean onPreferenceChange(Preference preference, Object autoExportInterval) {
                 String summary = String.format(
                         getApplicationContext().getString(R.string.pref_summary_auto_export_interval),
-                        (int) autoExportInterval);
+                        Integer.valueOf((String) autoExportInterval));
                 preference.setSummary(summary);
                 boolean auto_export_enabled = GBApplication.getPrefs().getBoolean(GBPrefs.AUTO_EXPORT_ENABLED, false);
-                PeriodicExporter.sheduleAlarm(getApplicationContext(), (int) autoExportInterval, auto_export_enabled);
+                PeriodicExporter.sheduleAlarm(getApplicationContext(), Integer.valueOf((String) autoExportInterval), auto_export_enabled);
                 return true;
             }
         });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -86,7 +86,7 @@ public static Notification createNotification(GBDevice device, Context context)
         Boolean connected = device.isInitialized();
         NotificationCompat.Builder builder = new NotificationCompat.Builder(context);
         builder.setContentTitle(deviceName)
-                .setTicker(deviceName + text)
+                .setTicker(deviceName + " - " + text)
                 .setContentText(text)
                 .setSmallIcon(connected ? R.drawable.ic_notification : R.drawable.ic_notification_disconnected)
                 .setContentIntent(getContentIntent(context))

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -200,6 +200,7 @@ protected boolean connect() {
             }
             if (GBApplication.getGBPrefs().isBackgroundJsEnabled()) {
                 Intent startIntent = new Intent(getContext(), ExternalPebbleJSActivity.class);
+                startIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 startIntent.putExtra(ExternalPebbleJSActivity.START_BG_WEBVIEW, true);
                 getContext().startActivity(startIntent);
             } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -154,7 +154,7 @@ public void onStartInstall(GBDevice device) {
         File destDir;
         GBDeviceApp app = mPBWReader.getGBDeviceApp();
         try {
-            destDir = new File(FileUtils.getExternalFilesDir() + "/pbw-cache");
+            destDir = PebbleUtils.getPbwCacheDir();
             destDir.mkdirs();
             FileUtils.copyURItoFile(mContext, mUri, new File(destDir, app.getUUID().toString() + ".pbw"));
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandler.java
Patch:
@@ -34,6 +34,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.WeatherSpec;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
+import nodomain.freeyourgadget.gadgetbridge.util.PebbleUtils;
 
 class AppMessageHandler {
     final PebbleProtocol mPebbleProtocol;
@@ -73,7 +74,7 @@ protected GBDevice getDevice() {
     }
 
     JSONObject getAppKeys() throws IOException, JSONException {
-        File destDir = new File(FileUtils.getExternalFilesDir() + "/pbw-cache");
+        File destDir = PebbleUtils.getPbwCacheDir();
         File configurationFile = new File(destDir, mUUID.toString() + ".json");
         if (configurationFile.exists()) {
             String jsonstring = FileUtils.getStringFromFile(configurationFile);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -505,7 +505,7 @@ private boolean evaluateGBDeviceEventPebble(GBDeviceEvent deviceEvent) {
                         case REQUEST:
                             LOG.info("APPFETCH request: " + appMgmt.uuid + " / " + appMgmt.token);
                             try {
-                                installApp(Uri.fromFile(new File(FileUtils.getExternalFilesDir() + "/pbw-cache/" + appMgmt.uuid.toString() + ".pbw")), appMgmt.token);
+                                installApp(Uri.fromFile(new File(PebbleUtils.getPbwCacheDir(),appMgmt.uuid.toString() + ".pbw")), appMgmt.token);
                             } catch (IOException e) {
                                 LOG.error("Error installing app: " + e.getMessage(), e);
                             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -125,6 +125,9 @@ private AppNotificationType() {
         // Microsoft Outlook
         put("com.microsoft.office.outlook", NotificationType.OUTLOOK);
 
+        // Business Calendar
+        put("com.appgenix.bizcal", NotificationType.BUSINESS_CALENDAR);
+
         // Yahoo Mail
         put("com.yahoo.mobile.client.android.mail", NotificationType.YAHOO_MAIL);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -51,6 +51,7 @@ public enum NotificationType {
     LINKEDIN(PebbleIconID.NOTIFICATION_LINKEDIN, PebbleColor.CobaltBlue),
     MAILBOX(PebbleIconID.NOTIFICATION_MAILBOX, PebbleColor.VividCerulean),
     OUTLOOK(PebbleIconID.NOTIFICATION_OUTLOOK, PebbleColor.BlueMoon),
+    BUSINESS_CALENDAR(PebbleIconID.TIMELINE_CALENDAR, PebbleColor.BlueMoon),
     RIOT(PebbleIconID.NOTIFICATION_HIPCHAT, PebbleColor.LavenderIndigo),
     SIGNAL(PebbleIconID.NOTIFICATION_HIPCHAT, PebbleColor.BlueMoon),
     SKYPE(PebbleIconID.NOTIFICATION_SKYPE, PebbleColor.VividCerulean),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiIcon.java
Patch:
@@ -78,6 +78,7 @@ public static byte mapToIconId(NotificationType type) {
             case GENERIC_SMS:
                 return WECHAT;
             case GENERIC_CALENDAR:
+            case BUSINESS_CALENDAR:
                 return CALENDAR;
             case FACEBOOK:
                 return FACEBOOK;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -142,6 +142,9 @@ private AppNotificationType() {
 
         // Transit
         put("com.thetransitapp.droid", NotificationType.TRANSIT);
+
+        // Etar
+        put("ws.xsoh.etar", NotificationType.GENERIC_CALENDAR);
     }
 
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -70,7 +70,7 @@ private AppNotificationType() {
         put("org.telegram.messenger", NotificationType.TELEGRAM);
 
         // Threema
-        put("ch.threema.app", NotificationType.TELEGRAM);
+        put("ch.threema.app", NotificationType.THREEMA);
 
         // Twitter
         put("org.mariotaku.twidere", NotificationType.TWITTER);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -56,8 +56,8 @@ public enum NotificationType {
     SKYPE(PebbleIconID.NOTIFICATION_SKYPE, PebbleColor.VividCerulean),
     SLACK(PebbleIconID.NOTIFICATION_SLACK, PebbleColor.Folly),
     SNAPCHAT(PebbleIconID.NOTIFICATION_SNAPCHAT, PebbleColor.Icterine),
-    TELEGRAM(PebbleIconID.NOTIFICATION_TELEGRAM, PebbleColor.JaegerGreen),
-    THREEMA(PebbleIconID.NOTIFICATION_HIPCHAT, PebbleColor.VividCerulean),
+    TELEGRAM(PebbleIconID.NOTIFICATION_TELEGRAM, PebbleColor.VividCerulean),
+    THREEMA(PebbleIconID.NOTIFICATION_HIPCHAT, PebbleColor.JaegerGreen),
     TRANSIT(PebbleIconID.LOCATION, PebbleColor.JaegerGreen),
     TWITTER(PebbleIconID.NOTIFICATION_TWITTER, PebbleColor.BlueMoon),
     VIBER(PebbleIconID.NOTIFICATION_VIBER, PebbleColor.VividViolet),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -69,6 +69,9 @@ private AppNotificationType() {
         // Telegram
         put("org.telegram.messenger", NotificationType.TELEGRAM);
 
+        // Threema
+        put("ch.threema.app", NotificationType.TELEGRAM);
+
         // Twitter
         put("org.mariotaku.twidere", NotificationType.TWITTER);
         put("com.twitter.android", NotificationType.TWITTER);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -56,7 +56,8 @@ public enum NotificationType {
     SKYPE(PebbleIconID.NOTIFICATION_SKYPE, PebbleColor.VividCerulean),
     SLACK(PebbleIconID.NOTIFICATION_SLACK, PebbleColor.Folly),
     SNAPCHAT(PebbleIconID.NOTIFICATION_SNAPCHAT, PebbleColor.Icterine),
-    TELEGRAM(PebbleIconID.NOTIFICATION_TELEGRAM, PebbleColor.VividCerulean),
+    TELEGRAM(PebbleIconID.NOTIFICATION_TELEGRAM, PebbleColor.JaegerGreen),
+    THREEMA(PebbleIconID.NOTIFICATION_HIPCHAT, PebbleColor.VividCerulean),
     TRANSIT(PebbleIconID.LOCATION, PebbleColor.JaegerGreen),
     TWITTER(PebbleIconID.NOTIFICATION_TWITTER, PebbleColor.BlueMoon),
     VIBER(PebbleIconID.NOTIFICATION_VIBER, PebbleColor.VividViolet),
@@ -101,6 +102,7 @@ public String getGenericType() {
             case RIOT:
             case SIGNAL:
             case TELEGRAM:
+            case THREEMA:
             case WHATSAPP:
             case GOOGLE_MESSENGER:
             case GOOGLE_HANGOUTS:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BLETypeConversions.java
Patch:
@@ -288,6 +288,7 @@ public static AlertCategory toAlertCategory(NotificationType type) {
             case SKYPE:
             case SNAPCHAT:
             case TELEGRAM:
+            case THREEMA:
             case TWITTER:
             case WHATSAPP:
             case VIBER:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiIcon.java
Patch:
@@ -60,7 +60,6 @@ public class HuamiIcon {
     public static final byte WEATHER = 35;
     public static final byte HR_WARNING_36 = 36;
 
-
     public static byte mapToIconId(NotificationType type) {
         switch (type) {
             case UNKNOWN:
@@ -104,6 +103,8 @@ public static byte mapToIconId(NotificationType type) {
                 return SNAPCHAT;
             case TELEGRAM:
                 return TELEGRAM;
+            case THREEMA:
+                return CHAT_BLUE_13;
             case VIBER:
                 return VIBER;
             case WECHAT:
@@ -115,4 +116,4 @@ public static byte mapToIconId(NotificationType type) {
         }
         return APP_11;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/NotificationUtils.java
Patch:
@@ -46,6 +46,7 @@ public static String getPreferredTextFor(NotificationSpec notificationSpec, int
             case SKYPE:
             case SNAPCHAT:
             case TELEGRAM:
+            case THREEMA:
             case TWITTER:
             case WHATSAPP:
             case VIBER:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorCoordinator.java
Patch:
@@ -44,7 +44,7 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         try {
             BluetoothDevice device = candidate.getDevice();
             String name = device.getName();
-            if (name != null && name.equalsIgnoreCase("Amazfit Band")) {
+            if (name != null && (name.equalsIgnoreCase("Amazfit Band") || name.equalsIgnoreCase("Amazfit Cor"))) {
                 return DeviceType.AMAZFITCOR;
             }
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -62,6 +62,7 @@ public class MiBandFWHelper extends AbstractMiBandFWHelper {
             68094986, // 4.15.12.10 tested by developer
             68158215, // 4.16.3.7 tested by developer
             68158486, // 4.16.4.22 tested by developer and user
+            68160271, // 4.16.11.15 tested by developer
             84870926, // 5.15.7.14 tested by developer
     };
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -157,7 +157,7 @@ void bufferFlushed(int minutes) {
     public FetchActivityOperation(MiBandSupport support) {
         super(support);
         hasExtendedActivityData = support.getDeviceInfo().supportsHeartrate();
-        hasPacketCounter = support.getDeviceInfo().getProfileVersion() >= 0x02000000;
+        hasPacketCounter = support.getDeviceInfo().getProfileVersion() >= 0x02000700;
         //temporary buffer, size is a multiple of 60 because we want to store complete minutes (1 minute = 3 or 4 bytes)
         int activityDataHolderSize = getBytesPerMinuteOfActivityData() * 60 * 4;
         int maxDataPacketLength = hasPacketCounter ? (hasExtendedActivityData ? 16 : 18) : 20;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorFirmwareInfo.java
Patch:
@@ -33,6 +33,7 @@ public class AmazfitCorFirmwareInfo extends HuamiFirmwareInfo {
     };
 
     private static final int FW_HEADER_OFFSET = 0x9330;
+    private static final int FW_HEADER_OFFSET_2 = 0x9340;
     private static final int NEW_RES_HEADER_OFFSET = 0x9;
 
     private static Map<Integer, String> crcToVersion = new HashMap<>();
@@ -61,7 +62,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             return HuamiFirmwareType.RES;
         } else if (ArrayUtils.equals(bytes, RES_HEADER, NEW_RES_HEADER_OFFSET)) {
             return HuamiFirmwareType.RES_NEW;
-        } else if (ArrayUtils.equals(bytes, FW_HEADER, FW_HEADER_OFFSET)) {
+        } else if (ArrayUtils.equals(bytes, FW_HEADER, FW_HEADER_OFFSET) || ArrayUtils.equals(bytes, FW_HEADER, FW_HEADER_OFFSET_2)) {
             // TODO: this is certainly not a correct validation, but it works for now
             return HuamiFirmwareType.FIRMWARE;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -43,11 +43,11 @@
 import java.util.List;
 import java.util.Locale;
 
+import nodomain.freeyourgadget.gadgetbridge.BuildConfig;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceManager;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandPreferencesActivity;
-import nodomain.freeyourgadget.gadgetbridge.externalevents.CMWeatherReceiver;
 import nodomain.freeyourgadget.gadgetbridge.model.CannedMessagesSpec;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
@@ -268,7 +268,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
                 GBApplication.getPrefs().getPreferences().edit().putString("weather_cityid",null).apply();
                 preference.setSummary(newVal.toString());
                 Intent intent = new Intent("GB_UPDATE_WEATHER");
-                intent.setPackage(CMWeatherReceiver.class.getCanonicalName());
+                intent.setPackage(BuildConfig.APPLICATION_ID);
                 sendBroadcast(intent);
                 return true;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AlarmReceiver.java
Patch:
@@ -51,7 +51,7 @@ public AlarmReceiver() {
         Context context = GBApplication.getContext();
         Intent intent = new Intent("DAILY_ALARM");
         intent.setPackage(BuildConfig.APPLICATION_ID);
-        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, new Intent("DAILY_ALARM"), 0);
+        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, 0);
         AlarmManager am = (AlarmManager) (context.getSystemService(Context.ALARM_SERVICE));
 
         if (am != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/Mi2FirmwareInfo.java
Patch:
@@ -87,7 +87,7 @@ protected Map<Integer, String> getCrcMap() {
     }
 
     @Override
-    protected String searchVersion(byte[] fwbytes) {
+    protected String searchFirmwareVersion(byte[] fwbytes) {
         // does not work for Mi Band 2
         return null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -96,7 +96,7 @@ public static Notification createNotification(GBDevice device, Context context)
             deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_DISCONNECT);
             PendingIntent disconnectPendingIntent = PendingIntent.getService(context, 0, deviceCommunicationServiceIntent, PendingIntent.FLAG_ONE_SHOT);
             builder.addAction(R.drawable.ic_notification_disconnected, context.getString(R.string.controlcenter_disconnect), disconnectPendingIntent);
-            if (DeviceHelper.getInstance().getCoordinator(device).supportsActivityDataFetching()) {
+            if (GBApplication.isRunningLollipopOrLater() && DeviceHelper.getInstance().getCoordinator(device).supportsActivityDataFetching()) { //for some reason this fails on KK
                 deviceCommunicationServiceIntent.setAction(DeviceService.ACTION_FETCH_ACTIVITY_DATA);
                 PendingIntent fetchPendingIntent = PendingIntent.getService(context, 1, deviceCommunicationServiceIntent, PendingIntent.FLAG_ONE_SHOT);
                 builder.addAction(R.drawable.ic_action_fetch_activity_data, context.getString(R.string.controlcenter_fetch_activity_data), fetchPendingIntent);
@@ -122,6 +122,7 @@ public static Notification createNotification(String text, Context context) {
                 .setContentText(text)
                 .setSmallIcon(R.drawable.ic_notification_disconnected)
                 .setContentIntent(getContentIntent(context))
+                .setColor(context.getResources().getColor(R.color.accent))
                 .setOngoing(true);
         if (GBApplication.getPrefs().getString("last_device_address", null) != null) {
             Intent deviceCommunicationServiceIntent = new Intent(context, DeviceCommunicationService.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1986,7 +1986,7 @@ byte[] encodeApplicationMessagePush(short endpoint, UUID uuid, ArrayList<Pair<In
             }
         }
 
-        idLookup[last_id] = ext_id;
+        idLookup[last_id & 0xff] = ext_id;
 
         return buf.array();
     }
@@ -2633,14 +2633,14 @@ public GBDeviceEvent[] decodeResponse(byte[] responseData) {
                             LOG.info("got APPLICATIONMESSAGE/LAUNCHER (EP " + endpoint + ") NACK");
                         }
                         GBDeviceEventAppMessage evtAppMessage = null;
-                        if (endpoint == ENDPOINT_APPLICATIONMESSAGE && idLookup[last_id] != null) {
+                        if (endpoint == ENDPOINT_APPLICATIONMESSAGE && idLookup[last_id & 0xff] != null) {
                             evtAppMessage = new GBDeviceEventAppMessage();
                             if (pebbleCmd == APPLICATIONMESSAGE_ACK) {
                                 evtAppMessage.type = GBDeviceEventAppMessage.TYPE_ACK;
                             } else {
                                 evtAppMessage.type = GBDeviceEventAppMessage.TYPE_NACK;
                             }
-                            evtAppMessage.id = idLookup[last_id];
+                            evtAppMessage.id = idLookup[last_id & 0xff];
                             evtAppMessage.appUUID = currentRunningApp;
                         }
                         devEvts = new GBDeviceEvent[]{evtAppMessage};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleKitSupport.java
Patch:
@@ -85,7 +85,7 @@ public void onReceive(Context context, Intent intent) {
                         sendAppMessageAck(transaction_id);
                         //  }
                     } catch (JSONException e) {
-                        e.printStackTrace();
+                        LOG.error("failed decoding JSON", e);
                     }
                     break;
                 case PEBBLEKIT_ACTION_APP_ACK:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -2023,6 +2023,7 @@ byte[] encodeApplicationMessageFromJSON(UUID uuid, JSONArray jsonArray) {
                         break;
                 }
             } catch (JSONException e) {
+                LOG.error("error decoding JSON", e);
                 return null;
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BLETypeConversions.java
Patch:
@@ -265,7 +265,7 @@ public static byte mapTimeZone(TimeZone timeZone) {
      */
     public static byte mapTimeZone(TimeZone timeZone, int timezoneFlags) {
         int offsetMillis = timeZone.getRawOffset();
-        if (timezoneFlags == TZ_FLAG_INCLUDE_DST_IN_TZ) {
+        if (false && timezoneFlags == TZ_FLAG_INCLUDE_DST_IN_TZ) {
             offsetMillis += timeZone.getDSTSavings();
         }
         int utcOffsetInHours =  (offsetMillis / (1000 * 60 * 60));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiFirmwareType.java
Patch:
@@ -20,6 +20,7 @@ public enum HuamiFirmwareType {
     FIRMWARE((byte) 0),
     FONT((byte) 1),
     RES((byte) 2),
+    RES_NEW((byte)130),
     GPS((byte) 3),
     GPS_CEP((byte) 4),
     GPS_ALMANAC((byte)5),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/amazfitcor/AmazfitCorFirmwareInfo.java
Patch:
@@ -60,7 +60,7 @@ protected HuamiFirmwareType determineFirmwareType(byte[] bytes) {
             }
             return HuamiFirmwareType.RES;
         } else if (ArrayUtils.equals(bytes, RES_HEADER, NEW_RES_HEADER_OFFSET)) {
-            return HuamiFirmwareType.RES;
+            return HuamiFirmwareType.RES_NEW;
         } else if (ArrayUtils.equals(bytes, FW_HEADER, FW_HEADER_OFFSET)) {
             // TODO: this is certainly not a correct validation, but it works for now
             return HuamiFirmwareType.FIRMWARE;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/BipActivityType.java
Patch:
@@ -3,10 +3,10 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public enum BipActivityType {
-    Outdoor(4),
+    Outdoor(1),
     Treadmill(2),
-    Cycling(1),
-    Walking(3);
+    Walking(3),
+    Cycling(4);
 
     private final int code;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ActivitySummariesActivity.java
Patch:
@@ -26,7 +26,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getItemListView().setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                Object item = getItemAdapter().getItem(position);
+                Object item = parent.getItemAtPosition(position);
                 if (item != null) {
                     ActivitySummary summary = (ActivitySummary) item;
                     String gpxTrack = summary.getGpxTrack();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/BipActivityType.java
Patch:
@@ -3,10 +3,10 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public enum BipActivityType {
-    Outdoor(1),
+    Outdoor(4),
     Treadmill(2),
-    Cycling(3), // should be Walking
-    Walking(4); // should be cycling
+    Cycling(1),
+    Walking(3);
 
     private final int code;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/amazfitcor/AmazfitCorFWInstallHandler.java
Patch:
@@ -46,7 +46,7 @@ protected String getFwUpgradeNotice() {
 
     @Override
     protected AbstractMiBandFWHelper createHelper(Uri uri, Context context) throws IOException {
-        return new AmazfitBipFWHelper(uri, context);
+        return new AmazfitCorFWHelper(uri, context);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchSportsSummaryOperation.java
Patch:
@@ -179,7 +179,7 @@ private BaseActivitySummary parseSummary(ByteArrayOutputStream stream) {
         int activityKind = ActivityKind.TYPE_UNKNOWN;
         try {
             int rawKind = BLETypeConversions.toUnsigned(buffer.getShort());
-            BipActivityType activityType = BipActivityType.values()[rawKind];
+            BipActivityType activityType = BipActivityType.fromCode(rawKind);
             activityKind = activityType.toActivityKind();
         } catch (Exception ex) {
             LOG.error("Error mapping acivity kind: " + ex.getMessage(), ex);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband2/MiBand2Const.java
Patch:
@@ -42,7 +42,7 @@ public static int toActivityKind(int rawType) {
             case TYPE_CHARGING:
                 return ActivityKind.TYPE_NOT_WORN; //I believe it's a safe assumption
             case TYPE_RIDE_BIKE:
-                return ActivityKind.TYPE_BIKING;
+                return ActivityKind.TYPE_CYCLING;
             default:
             case TYPE_UNSET: // fall through
                 return ActivityKind.TYPE_UNKNOWN;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -570,7 +570,7 @@ private void setDeviceSupport(@Nullable DeviceSupport deviceSupport) {
 
     private void start() {
         if (!mStarted) {
-            startForeground(GB.NOTIFICATION_ID, GB.createNotification(getString(R.string.gadgetbridge_running), false, this));
+            startForeground(GB.NOTIFICATION_ID, GB.createNotification(getString(R.string.gadgetbridge_running), this));
             mStarted = true;
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/huami/miband2/MiBand2Coordinator.java
Patch:
@@ -37,7 +37,7 @@ public class MiBand2Coordinator extends HuamiCoordinator {
 
     @Override
     public DeviceType getDeviceType() {
-        return DeviceType.AMAZFITBIP;
+        return DeviceType.MIBAND2;
     }
 
     @NonNull

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -48,7 +48,7 @@ public class MiBand2Service {
     public static final UUID UUID_CHARACTERISTIC_8_USER_SETTINGS = UUID.fromString("00000008-0000-3512-2118-0009af100700");
     // service uuid fee1
     public static final UUID UUID_CHARACTERISTIC_AUTH = UUID.fromString("00000009-0000-3512-2118-0009af100700");
-    public static final UUID UUID_CHARACTERISTIC_10_BUTTON = UUID.fromString("00000010-0000-3512-2118-0009af100700");
+    public static final UUID UUID_CHARACTERISTIC_DEVICEEVENT = UUID.fromString("00000010-0000-3512-2118-0009af100700");
 
     public static final int ALERT_LEVEL_NONE = 0;
     public static final int ALERT_LEVEL_MESSAGE = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiDeviceEvent.java
Patch:
@@ -14,10 +14,10 @@
 
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
-package nodomain.freeyourgadget.gadgetbridge.service.devices.amazfitbip;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami;
 
 
-public class AmazfitBipEvent {
+public class HuamiDeviceEvent {
     public static final byte FELL_ASLEEP = 0x01;
     public static final byte WOKE_UP = 0x02;
     public static final byte STEPSGOAL_REACHED = 0x03;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/huami/HuamiIcon.java
Patch:
@@ -15,12 +15,12 @@
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 
-package nodomain.freeyourgadget.gadgetbridge.devices.miband2;
+package nodomain.freeyourgadget.gadgetbridge.service.devices.huami;
 
 
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationType;
 
-public class MiBand2Icon {
+public class HuamiIcon {
     // icons which are unsure which app they are for are suffixed with _NN
     public static final byte WECHAT = 0;
     public static final byte PENGUIN_1 = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/UpdateFirmwareOperation.java
Patch:
@@ -39,7 +39,7 @@
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetDeviceBusyAction;
 import nodomain.freeyourgadget.gadgetbridge.service.btle.actions.SetProgressAction;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.AbstractMiBand2Operation;
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.FirmwareType;
+import nodomain.freeyourgadget.gadgetbridge.service.devices.huami.HuamiFirmwareType;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.Mi2FirmwareInfo;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband2.MiBand2Support;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
@@ -146,7 +146,7 @@ private void handleNotificationNotif(byte[] value) {
                         break;
                     }
                     case MiBand2Service.COMMAND_FIRMWARE_CHECKSUM: {
-                        if (getFirmwareInfo().getFirmwareType() == FirmwareType.FIRMWARE) {
+                        if (getFirmwareInfo().getFirmwareType() == HuamiFirmwareType.FIRMWARE) {
                             TransactionBuilder builder = performInitialized("reboot");
                             getSupport().sendReboot(builder);
                             builder.queue(getQueue());
@@ -196,7 +196,7 @@ public boolean sendFwInfo() {
             int fwSize = getFirmwareInfo().getSize();
             byte[] sizeBytes = BLETypeConversions.fromUint24(fwSize);
             int arraySize = 4;
-            boolean isFirmwareCode = getFirmwareInfo().getFirmwareType() == FirmwareType.FIRMWARE;
+            boolean isFirmwareCode = getFirmwareInfo().getFirmwareType() == HuamiFirmwareType.FIRMWARE;
             if (!isFirmwareCode) {
                 arraySize++;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -218,7 +218,7 @@ public void onReceive(Context context, Intent intent) {
                     mGBDevice = device;
                     boolean enableReceivers = mDeviceSupport != null && (mDeviceSupport.useAutoConnect() || mGBDevice.isInitialized());
                     setReceiversEnableState(enableReceivers, mGBDevice.isInitialized(), DeviceHelper.getInstance().getCoordinator(device));
-                    GB.updateNotification(mGBDevice.getName() + " " + mGBDevice.getStateString(), mGBDevice.isInitialized(), context);
+                    GB.updateNotification(mGBDevice, context);
                 } else {
                     LOG.error("Got ACTION_DEVICE_CHANGED from unexpected device: " + device);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -110,16 +110,15 @@ public String getGenericType() {
             case KIK:
             case KAKAO_TALK:
             case SLACK:
+            case LINE:
+            case VIBER:
                 return "generic_chat";
             case GMAIL:
             case GOOGLE_INBOX:
             case MAILBOX:
             case OUTLOOK:
             case YAHOO_MAIL:
                 return "generic_email";
-            case LINE:
-            case VIBER:
-                return "generic_phone";
             case UNKNOWN:
             default:
                 return "generic";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -96,7 +96,7 @@ public void onNotification(NotificationSpec notificationSpec) {
                 alertCategory = AlertCategory.SMS;
             }
             // EMAIL icon does not work in FW 0.0.8.74, it did in 0.0.7.90
-            else if (notificationSpec.type == NotificationType.GENERIC_EMAIL) {
+            else if (customIconId == MiBand2Icon.EMAIL) {
                 alertCategory = AlertCategory.Email;
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -829,7 +829,9 @@ private byte[] encodeStringToDevice(String s) {
                     LOG.error("Could not convert String to Bytes: " + e.getMessage());
                 }
             }
-            for (int j = 0; j < cs.length; j++)
+
+            final int j0 = (unicode && i != 0) ? 2 : 0;
+            for (int j = j0; j < cs.length; j++)
                 outBytes.add(cs[j]);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/WeatherSpec.java
Patch:
@@ -16,6 +16,7 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>. */
 package nodomain.freeyourgadget.gadgetbridge.model;
 
+// FIXME: document me and my fields, including units
 public class WeatherSpec {
     public int timestamp;
     public String location;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -184,6 +184,7 @@ public void run() {
                         GBApplication.deviceService().onSendConfiguration(PREF_MEASUREMENT_SYSTEM);
                     }
                 });
+                preference.setSummary(newVal.toString());
                 return true;
             }
         });
@@ -294,7 +295,6 @@ private void invokeLater(Runnable runnable) {
     @Override
     protected String[] getPreferenceKeysWithSummary() {
         return new String[]{
-                "measurement_system",
                 "pebble_emu_addr",
                 "pebble_emu_port",
                 "pebble_reconnect_attempts",

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AbstractAppManagerFragment.java
Patch:
@@ -424,6 +424,7 @@ private boolean onContextItemSelected(MenuItem item, GBDeviceApp selectedApp) {
                 Intent startIntent = new Intent(getContext().getApplicationContext(), ExternalPebbleJSActivity.class);
                 startIntent.putExtra(DeviceService.EXTRA_APP_UUID, selectedApp.getUUID());
                 startIntent.putExtra(GBDevice.EXTRA_DEVICE, mGBDevice);
+                startIntent.putExtra(ExternalPebbleJSActivity.SHOW_CONFIG, true);
                 startActivity(startIntent);
                 return true;
             case R.id.appmanager_app_openinstore:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -126,6 +126,7 @@ public void onClick(View v) {
                 notificationSpec.sender = testString;
                 notificationSpec.subject = testString;
                 notificationSpec.type = NotificationType.values()[sendTypeSpinner.getSelectedItemPosition()];
+                notificationSpec.pebbleColor = notificationSpec.type.color;
                 notificationSpec.id = -1;
                 GBApplication.deviceService().onNotification(notificationSpec);
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -141,7 +141,8 @@ public void onNotification(NotificationSpec notificationSpec) {
                 .putExtra(EXTRA_NOTIFICATION_BODY, notificationSpec.body)
                 .putExtra(EXTRA_NOTIFICATION_ID, notificationSpec.id)
                 .putExtra(EXTRA_NOTIFICATION_TYPE, notificationSpec.type)
-                .putExtra(EXTRA_NOTIFICATION_SOURCENAME, notificationSpec.sourceName);
+                .putExtra(EXTRA_NOTIFICATION_SOURCENAME, notificationSpec.sourceName)
+                .putExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR, notificationSpec.pebbleColor);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -135,6 +135,9 @@ private AppNotificationType() {
 
         // Slack
         put("com.slack", NotificationType.SLACK);
+
+        // Transit
+        put("com.thetransitapp.droid", NotificationType.TRANSIT);
     }
 
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -73,6 +73,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NOTIFICATION_SUBJECT = "notification_subject";
     String EXTRA_NOTIFICATION_TITLE = "notification_title";
     String EXTRA_NOTIFICATION_TYPE = "notification_type";
+    String EXTRA_NOTIFICATION_PEBBLE_COLOR = "notification_pebble_color";
     String EXTRA_FIND_START = "find_start";
     String EXTRA_VIBRATION_INTENSITY = "vibration_intensity";
     String EXTRA_CALL_COMMAND = "call_command";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -23,7 +23,7 @@
 public enum NotificationType {
 
     // TODO: this this pebbleism needs to be moved somewhere else
-    UNKNOWN(PebbleIconID.NOTIFICATION_GENERIC, PebbleColor.Red),
+    UNKNOWN(PebbleIconID.NOTIFICATION_GENERIC, PebbleColor.DarkCandyAppleRed),
 
     AMAZON(PebbleIconID.NOTIFICATION_AMAZON, PebbleColor.ChromeYellow),
     BBM(PebbleIconID.NOTIFICATION_BLACKBERRY_MESSENGER, PebbleColor.DarkGray),
@@ -46,6 +46,7 @@ public enum NotificationType {
     INSTAGRAM(PebbleIconID.NOTIFICATION_INSTAGRAM, PebbleColor.CobaltBlue),
     KAKAO_TALK(PebbleIconID.NOTIFICATION_KAKAOTALK, PebbleColor.Yellow),
     KIK(PebbleIconID.NOTIFICATION_KIK, PebbleColor.IslamicGreen),
+    LIGHTHOUSE(PebbleIconID.NOTIFICATION_LIGHTHOUSE, PebbleColor.PictonBlue), // ??? - No idea what this is, but it works.
     LINE(PebbleIconID.NOTIFICATION_LINE, PebbleColor.IslamicGreen),
     LINKEDIN(PebbleIconID.NOTIFICATION_LINKEDIN, PebbleColor.CobaltBlue),
     MAILBOX(PebbleIconID.NOTIFICATION_MAILBOX, PebbleColor.VividCerulean),
@@ -56,6 +57,7 @@ public enum NotificationType {
     SLACK(PebbleIconID.NOTIFICATION_SLACK, PebbleColor.Folly),
     SNAPCHAT(PebbleIconID.NOTIFICATION_SNAPCHAT, PebbleColor.Icterine),
     TELEGRAM(PebbleIconID.NOTIFICATION_TELEGRAM, PebbleColor.VividCerulean),
+    TRANSIT(PebbleIconID.LOCATION, PebbleColor.JaegerGreen),
     TWITTER(PebbleIconID.NOTIFICATION_TWITTER, PebbleColor.BlueMoon),
     VIBER(PebbleIconID.NOTIFICATION_VIBER, PebbleColor.VividViolet),
     WECHAT(PebbleIconID.NOTIFICATION_WECHAT, PebbleColor.KellyGreen),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -137,6 +137,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_BODY;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_FLAGS;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_ID;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PEBBLE_COLOR;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_PHONENUMBER;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SENDER;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_NOTIFICATION_SOURCENAME;
@@ -342,6 +343,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 notificationSpec.body = intent.getStringExtra(EXTRA_NOTIFICATION_BODY);
                 notificationSpec.sourceName = intent.getStringExtra(EXTRA_NOTIFICATION_SOURCENAME);
                 notificationSpec.type = (NotificationType) intent.getSerializableExtra(EXTRA_NOTIFICATION_TYPE);
+                notificationSpec.pebbleColor = (byte) intent.getSerializableExtra(EXTRA_NOTIFICATION_PEBBLE_COLOR);
                 notificationSpec.id = intent.getIntExtra(EXTRA_NOTIFICATION_ID, -1);
                 notificationSpec.flags = intent.getIntExtra(EXTRA_NOTIFICATION_FLAGS, 0);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/amazfitbip/AmazfitBipService.java
Patch:
@@ -24,4 +24,6 @@ public class AmazfitBipService {
 
     // goes to UUID_CHARACTERISTIC_3_CONFIGURATION, TODO: validate this for Mi Band 2, it maybe triggers more than only GPS version...
     public static final byte[] COMMAND_REQUEST_GPS_VERSION = new byte[]{0x0e};
+
+    public static final byte COMMAND_ACTIVITY_DATA_TYPE_DEBUGLOGS = 0x07;
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -104,7 +104,7 @@ public class MiBand2Service {
     public static final byte AUTH_BYTE = 0x8;
 
     // maybe not really activity data, but steps?
-    public static final byte COMMAND_FETCH_ACTIVITY_DATA = 0x02;
+    public static final byte COMMAND_FETCH_DATA = 0x02;
     public static final byte COMMAND_XXXX_ACTIVITY_DATA = 0x03; // maybe delete/drop activity data?
 
     public static final byte[] COMMAND_SET_FITNESS_GOAL_START = new byte[] { 0x10, 0x0, 0x0 };
@@ -176,7 +176,7 @@ public class MiBand2Service {
     public static final byte COMMAND_ACTIVITY_DATA_START_DATE = 0x01;
     public static final byte COMMAND_ACTIVITY_DATA_TYPE_ACTIVTY = 0x01;
     public static final byte COMMAND_ACTIVITY_DATA_TYPE_UNKNOWN_2 = 0x02;
-    public static final byte COMMAND_ACTIVITY_DATA_XXX_DATE = 0x02; // issued on first connect, followd by COMMAND_XXXX_ACTIVITY_DATA instead of COMMAND_FETCH_ACTIVITY_DATA
+    public static final byte COMMAND_ACTIVITY_DATA_XXX_DATE = 0x02; // issued on first connect, followd by COMMAND_XXXX_ACTIVITY_DATA instead of COMMAND_FETCH_DATA
 
     public static final byte COMMAND_FIRMWARE_INIT = 0x01; // to UUID_CHARACTERISTIC_FIRMWARE, followed by fw file size in bytes
     public static final byte COMMAND_FIRMWARE_START_DATA = 0x03; // to UUID_CHARACTERISTIC_FIRMWARE

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -71,7 +71,7 @@ protected void startFetching(TransactionBuilder builder) {
         builder.write(characteristicFetch, BLETypeConversions.join(new byte[] { MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE, MiBand2Service.COMMAND_ACTIVITY_DATA_TYPE_ACTIVTY }, getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
-        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_ACTIVITY_DATA });
+        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_DATA});
     }
 
     protected void handleActivityFetchFinish() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchSportsSummaryOperation.java
Patch:
@@ -60,7 +60,7 @@ protected void startFetching(TransactionBuilder builder) {
 //                getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
 //        builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
 //        builder.notify(characteristicActivityData, true);
-//        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_ACTIVITY_DATA });
+//        builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_DATA });
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/AmazfitBipSupport.java
Patch:
@@ -80,7 +80,7 @@ public void onNotification(NotificationSpec notificationSpec) {
         try {
             TransactionBuilder builder = performInitialized("new notification");
             AlertNotificationProfile<?> profile = new AlertNotificationProfile(this);
-            profile.setMaxLength(255); // TODO: find out real limit, certainly it is more than 18 which is default
+            profile.setMaxLength(230);
 
             int customIconId = AmazfitBipIcon.mapToIconId(notificationSpec.type);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/GBActivity.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.Locale;
 
 public interface GBActivity {
-    void setLanguage(Locale language, boolean recreate);
+    void setLanguage(Locale language, boolean invalidateLanguage);
     void setTheme(int themeId);
 
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -159,6 +159,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
                 String newLang = newVal.toString();
                 try {
                     GBApplication.setLanguage(newLang);
+                    recreate();
                 } catch (Exception ex) {
                     GB.toast(getApplicationContext(),
                             "Error setting language: " + ex.getLocalizedMessage(),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/jyou/TeclastH30Support.java
Patch:
@@ -336,7 +336,7 @@ public void onAppDelete(UUID uuid) {
     }
 
     @Override
-    public void onAppConfiguration(UUID appUuid, String config) {
+    public void onAppConfiguration(UUID appUuid, String config, Integer id) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/MiBand2Support.java
Patch:
@@ -1064,7 +1064,6 @@ private MiBand2Support sendCalendarEvents(TransactionBuilder builder) {
                 queueAlarm(alarm, builder, characteristic);
                 iteration++;
             }
-            builder.queue(getQueue());
         }
         return this;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/amazfitbip/AmazfitBipTextNotificationStrategy.java
Patch:
@@ -40,7 +40,7 @@ class AmazfitBipTextNotificationStrategy extends Mi2TextNotificationStrategy {
 
     @Override
     protected void sendCustomNotification(VibrationProfile vibrationProfile, SimpleNotification simpleNotification, BtLEAction extraAction, TransactionBuilder builder) {
-        if (simpleNotification != null && !StringUtils.isEmpty(simpleNotification.getMessage())) {
+        if (simpleNotification != null) {
             sendAlert(simpleNotification, builder);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -229,7 +229,7 @@ private void handleGBDeviceEvent(GBDeviceEventScreenshot screenshot) {
 
             Intent shareIntent = new Intent(Intent.ACTION_SEND);
             shareIntent.setType("image/*");
-            shareIntent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new File(fullpath)));
+            shareIntent.putExtra(Intent.EXTRA_STREAM, screenshotURI);
 
             PendingIntent pendingShareIntent = PendingIntent.getActivity(context, 0, Intent.createChooser(shareIntent, "share screenshot"),
                     PendingIntent.FLAG_UPDATE_CURRENT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractGBFragmentActivity.java
Patch:
@@ -33,7 +33,7 @@
  *
  * @see AbstractGBFragment
  */
-public abstract class AbstractGBFragmentActivity extends GBActivity {
+public abstract class AbstractGBFragmentActivity extends AbstractGBActivity {
     /**
      * The {@link android.support.v4.view.PagerAdapter} that will provide
      * fragments for each of the sections. We use a

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AlarmDetails.java
Patch:
@@ -31,7 +31,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
-public class AlarmDetails extends GBActivity {
+public class AlarmDetails extends AbstractGBActivity {
 
     private GBAlarm alarm;
     private TimePicker timePicker;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AndroidPairingActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 
-public class AndroidPairingActivity extends GBActivity {
+public class AndroidPairingActivity extends AbstractGBActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppBlacklistActivity.java
Patch:
@@ -31,7 +31,7 @@
 import nodomain.freeyourgadget.gadgetbridge.adapter.AppBlacklistAdapter;
 
 
-public class AppBlacklistActivity extends GBActivity {
+public class AppBlacklistActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(AppBlacklistActivity.class);
 
     private AppBlacklistAdapter appBlacklistAdapter;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/CalBlacklistActivity.java
Patch:
@@ -47,7 +47,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 
-public class CalBlacklistActivity extends GBActivity {
+public class CalBlacklistActivity extends AbstractGBActivity {
 
     private final String[] EVENT_PROJECTION = new String[]{
             CalendarContract.Calendars.CALENDAR_DISPLAY_NAME,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ConfigureAlarms.java
Patch:
@@ -38,7 +38,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_ALARMS;
 
 
-public class ConfigureAlarms extends GBActivity {
+public class ConfigureAlarms extends AbstractGBActivity {
 
     private static final int REQ_CONFIGURE_ALARM = 1;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DbManagementActivity.java
Patch:
@@ -45,7 +45,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.ImportExportSharedPreferences;
 
 
-public class DbManagementActivity extends GBActivity {
+public class DbManagementActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(DbManagementActivity.class);
     private static SharedPreferences sharedPrefs;
     private ImportExportSharedPreferences shared_file = new ImportExportSharedPreferences();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -53,7 +53,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 
-public class DebugActivity extends GBActivity {
+public class DebugActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(DebugActivity.class);
 
     private static final String EXTRA_REPLY = "reply";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -69,7 +69,7 @@
 import static android.bluetooth.le.ScanSettings.MATCH_MODE_STICKY;
 import static android.bluetooth.le.ScanSettings.SCAN_MODE_LOW_LATENCY;
 
-public class DiscoveryActivity extends GBActivity implements AdapterView.OnItemClickListener {
+public class DiscoveryActivity extends AbstractGBActivity implements AdapterView.OnItemClickListener {
     private static final Logger LOG = LoggerFactory.getLogger(DiscoveryActivity.class);
     private static final long SCAN_DURATION = 60000; // 60s
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -64,7 +64,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.PebbleUtils;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
-public class ExternalPebbleJSActivity extends GBActivity {
+public class ExternalPebbleJSActivity extends AbstractGBActivity {
 
     private static final Logger LOG = LoggerFactory.getLogger(ExternalPebbleJSActivity.class);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -51,7 +51,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 
-public class FwAppInstallerActivity extends GBActivity implements InstallActivity {
+public class FwAppInstallerActivity extends AbstractGBActivity implements InstallActivity {
 
     private static final Logger LOG = LoggerFactory.getLogger(FwAppInstallerActivity.class);
     private static final String ITEM_DETAILS = "details";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/VibrationActivity.java
Patch:
@@ -26,7 +26,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 
 
-public class VibrationActivity extends GBActivity {
+public class VibrationActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(VibrationActivity.class);
     private SeekBar seekBar;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -37,7 +37,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenterv2;
 import nodomain.freeyourgadget.gadgetbridge.activities.DiscoveryActivity;
-import nodomain.freeyourgadget.gadgetbridge.activities.GBActivity;
+import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
@@ -46,7 +46,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
-public class MiBandPairingActivity extends GBActivity {
+public class MiBandPairingActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(MiBandPairingActivity.class);
 
     private static final int REQ_CODE_USER_SETTINGS = 52;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebblePairingActivity.java
Patch:
@@ -38,7 +38,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenterv2;
 import nodomain.freeyourgadget.gadgetbridge.activities.DiscoveryActivity;
-import nodomain.freeyourgadget.gadgetbridge.activities.GBActivity;
+import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
@@ -50,7 +50,7 @@
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
-public class PebblePairingActivity extends GBActivity {
+public class PebblePairingActivity extends AbstractGBActivity {
     private static final Logger LOG = LoggerFactory.getLogger(PebblePairingActivity.class);
     private TextView message;
     private boolean isPairing;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/WeatherNotificationConfig.java
Patch:
@@ -19,9 +19,9 @@
 import android.os.Bundle;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.activities.GBActivity;
+import nodomain.freeyourgadget.gadgetbridge.activities.AbstractGBActivity;
 
-public class WeatherNotificationConfig extends GBActivity {
+public class WeatherNotificationConfig extends AbstractGBActivity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/no1f1/No1F1Support.java
Patch:
@@ -282,7 +282,7 @@ private void sendSettings(TransactionBuilder builder) {
                 (byte) (c.get(Calendar.YEAR) % 256),
                 (byte) (c.get(Calendar.MONTH) + 1),
                 (byte) c.get(Calendar.DAY_OF_MONTH),
-                (byte) c.get(Calendar.HOUR),
+                (byte) c.get(Calendar.HOUR_OF_DAY),
                 (byte) c.get(Calendar.MINUTE),
                 (byte) c.get(Calendar.SECOND)
         };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/amazfitbip/AmazfitBipFWInstallHandler.java
Patch:
@@ -35,7 +35,7 @@ class AmazfitBipFWInstallHandler extends AbstractMiBandFWInstallHandler {
 
     @Override
     protected GenericItem createInstallItem() {
-        return new GenericItem(mContext.getString(R.string.amazfitbip_firmware), helper.getHumanFirmwareVersion());
+        return new GenericItem(mContext.getString(R.string.amazfitbip_firmware, helper.getHumanFirmwareVersion()));
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/Version.java
Patch:
@@ -28,7 +28,9 @@ public final String get() {
     public Version(String version) {
         if(version == null)
             throw new IllegalArgumentException("Version can not be null");
-        if(!version.matches("[0-9]+(\\.[0-9]+)*"))
+
+        version = version.trim();
+        if (!version.matches("[0-9]+(\\.[0-9]+)*"))
             throw new IllegalArgumentException("Invalid version format");
         this.version = version;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/amazfitbip/AmazfitBipCooordinator.java
Patch:
@@ -52,10 +52,9 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         return DeviceType.UNKNOWN;
     }
 
-
     @Override
     public InstallHandler findInstallHandler(Uri uri, Context context) {
-        return null; // not supported yet
+        AmazfitBipFWInstallHandler handler = new AmazfitBipFWInstallHandler(uri, context);
+        return handler.isValid() ? handler : null;
     }
-
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/FirmwareType.java
Patch:
@@ -19,8 +19,8 @@
 public enum FirmwareType {
     FIRMWARE((byte) 0),
     FONT((byte) 1),
-    UNKNOWN1((byte) 2),
-    UNKNOWN2((byte) 3),
+    RES((byte) 2),
+    GPS((byte) 3),
     INVALID(Byte.MIN_VALUE);
 
     private final byte value;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/Mi2FirmwareInfo.java
Patch:
@@ -53,7 +53,7 @@ public class Mi2FirmwareInfo {
             0x4b
     };
 
-    private static Map<Integer,String> crcToVersion = new HashMap<>();
+    protected static Map<Integer,String> crcToVersion = new HashMap<>();
     static {
         // firmware
         crcToVersion.put(41899, "1.0.0.39");
@@ -89,7 +89,7 @@ public Mi2FirmwareInfo(byte[] bytes) {
         firmwareType = determineFirmwareType(bytes);
     }
 
-    private FirmwareType determineFirmwareType(byte[] bytes) {
+    protected FirmwareType determineFirmwareType(byte[] bytes) {
         if (ArrayUtils.startsWith(bytes, FT_HEADER)) {
             return FirmwareType.FONT;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapterv2.java
Patch:
@@ -189,6 +189,7 @@ public void onClick(View v) {
                                                     public void onClick(View v) {
                                                         Intent startIntent;
                                                         startIntent = new Intent(context, ConfigureAlarms.class);
+                                                        startIntent.putExtra(GBDevice.EXTRA_DEVICE, device);
                                                         context.startActivity(startIntent);
                                                     }
                                                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -251,7 +251,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                 GBApplication.quit();
                 return true;
             case R.id.external_changelog:
-                ChangeLog cl = new ChangeLog(this, GBApplication.isDarkThemeEnabled() ? "body { color: #ffffff; background-color: #282828; }" : "");
+                ChangeLog cl = new ChangeLog(this, (GBApplication.isDarkThemeEnabled() ? "body { color: #ffffff; background-color: #282828; }\n" : "") + DEFAULT_CSS);
                 cl.getFullLogDialog().show();
                 return true;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -61,6 +61,8 @@
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
 
+import static de.cketti.library.changelog.ChangeLog.DEFAULT_CSS;
+
 //TODO: extend GBActivity, but it requires actionbar that is not available
 public class ControlCenterv2 extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
@@ -195,7 +197,7 @@ public void onChildDrawOver(Canvas c, RecyclerView recyclerView,
             checkAndRequestPermissions();
         }
 
-        ChangeLog cl = new ChangeLog(this, GBApplication.isDarkThemeEnabled() ? "body { color: #ffffff; background-color: #282828; }" : "");
+        ChangeLog cl = new ChangeLog(this, (GBApplication.isDarkThemeEnabled() ? "body { color: #ffffff; background-color: #282828; }\n" : "") + DEFAULT_CSS);
         if (cl.isFirstRun()) {
             cl.getLogDialog().show();
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -2608,15 +2608,15 @@ public GBDeviceEvent[] decodeResponse(byte[] responseData) {
                             LOG.info("got APPLICATIONMESSAGE/LAUNCHER (EP " + endpoint + ") NACK");
                         }
                         GBDeviceEventAppMessage evtAppMessage = null;
-                        if (idLookup[last_id] != null) {
+                        if (endpoint == ENDPOINT_APPLICATIONMESSAGE && idLookup[last_id] != null) {
                             evtAppMessage = new GBDeviceEventAppMessage();
                             if (pebbleCmd == APPLICATIONMESSAGE_ACK) {
                                 evtAppMessage.type = GBDeviceEventAppMessage.TYPE_ACK;
                             } else {
                                 evtAppMessage.type = GBDeviceEventAppMessage.TYPE_NACK;
                             }
                             evtAppMessage.id = idLookup[last_id];
-                            evtAppMessage.appUUID = uuid;
+                            evtAppMessage.appUUID = currentRunningApp;
                         }
                         devEvts = new GBDeviceEvent[]{evtAppMessage};
                         break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/WebViewSingleton.java
Patch:
@@ -131,7 +131,7 @@ public static void appMessage(GBDeviceEventAppMessage message) {
 
         if (!message.appUUID.equals(currentRunningUUID)) {
             LOG.info("WEBVIEW ignoring message for app that is not currently running: " + message.appUUID + " message: " + message.message + " type: " + message.type);
-//            return; //TODO: ignoring would be the right thing to do here, but sometimes appUUID is apparently wrong
+            return;
         }
 
         // TODO: handle ACK and NACK types with ids

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -33,7 +33,6 @@
 import android.os.Build.VERSION;
 import android.preference.PreferenceManager;
 import android.provider.ContactsContract.PhoneLookup;
-import android.support.annotation.Nullable;
 import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
 import android.util.TypedValue;
@@ -377,7 +376,7 @@ private static void saveBlackList() {
         if (blacklist.isEmpty()) {
             editor.putStringSet(GBPrefs.PACKAGE_BLACKLIST, null);
         } else {
-            editor.putStringSet(GBPrefs.PACKAGE_BLACKLIST, blacklist);
+            Prefs.putStringSet(editor, GBPrefs.PACKAGE_BLACKLIST, blacklist);
         }
         editor.apply();
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -149,8 +149,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
             public boolean onPreferenceChange(Preference preference, Object newVal) {
                 String newLang = newVal.toString();
                 try {
-                    GBApplication.setLanguage(newLang, getBaseContext());
-//                    recreate();
+                    GBApplication.setLanguage(newLang);
                 } catch (Exception ex) {
                     GB.toast(getApplicationContext(),
                             "Error setting language: " + ex.getLocalizedMessage(),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -221,9 +221,6 @@ public void sendAppMessage(String msg) {
 
                     if (passKey) {
                         Object obj = in.get(inKey);
-                        if (obj instanceof Boolean) {
-                            obj = ((Boolean) obj) ? "true" : "false";
-                        }
                         out.put(outKey, obj);
                     } else {
                         GB.toast("Discarded key " + inKey + ", not found in the local configuration and is not an integer key.", Toast.LENGTH_SHORT, GB.WARN);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -87,6 +87,8 @@ public void onAppConfiguration(UUID uuid, String config) {
                         byteArray[i] = ((Integer) jsonArray.get(i)).byteValue();
                     }
                     object = byteArray;
+                } else if (object instanceof Boolean) {
+                    object = (short) (((Boolean) object) ? 1 : 0);
                 }
                 pairs.add(new Pair<>(Integer.parseInt(keyStr), object));
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -343,7 +343,7 @@ public Fragment getItem(int position) {
         @Override
         public int getCount() {
             // Show 5 total pages.
-            return 6;
+            return 5; // hide "Speed Zones" for now
         }
 
         @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusCoordinator.java
Patch:
@@ -289,6 +289,6 @@ public static void setUnicodeSupport(String address, boolean state){
     }
 
     public static boolean getUnicodeSupport(String address){
-        return (prefs.getBoolean(HPlusConstants.PREF_HPLUS_UNICODE, false));
+        return (prefs.getBoolean(HPlusConstants.PREF_HPLUS_UNICODE + "_" + address, false));
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusHandlerThread.java
Patch:
@@ -41,6 +41,7 @@
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusConstants;
+import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusHealthSampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.entities.HPlusHealthActivityOverlay;
@@ -300,9 +301,9 @@ public int compare(HPlusDataRecordDaySlot one, HPlusDataRecordDaySlot other) {
 
                     sample.setRawHPlusHealthData(storedRecord.getRawData());
                     sample.setSteps(storedRecord.steps);
+                    sample.setRawIntensity(storedRecord.intensity);
                     sample.setHeartRate(storedRecord.heartRate);
                     sample.setRawKind(storedRecord.type);
-                    sample.setRawIntensity(record.intensity);
                     sample.setProvider(provider);
                     samples.add(sample);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -151,7 +151,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
     private void handleActivityFetchFinish() {
         LOG.info("Fetching activity data has finished round " + fetchCount);
         GregorianCalendar lastSyncTimestamp = saveSamples();
-        if (needsAnotherFetch(lastSyncTimestamp)) {
+        if (lastSyncTimestamp != null && needsAnotherFetch(lastSyncTimestamp)) {
             try {
                 startFetching();
                 return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -148,6 +148,7 @@ public void onNotification(NotificationSpec notificationSpec) {
             }
         }
         if (reconnect()) {
+            super.onDeleteNotification(notificationSpec.id); //update notification hack
             super.onNotification(notificationSpec);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -76,7 +76,7 @@ public static Notification createNotification(String text, boolean connected, Co
                 .setContentIntent(pendingIntent)
                 .setOngoing(true);
         if (GBApplication.isRunningLollipopOrLater()) {
-            builder.setVisibility(Notification.VISIBILITY_PUBLIC);
+            builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);
         }
         if (GBApplication.minimizeNotification()) {
             builder.setPriority(Notification.PRIORITY_MIN);
@@ -268,7 +268,7 @@ private static Notification createTransferNotification(String text, boolean ongo
                 notificationIntent, 0);
 
         NotificationCompat.Builder nb = new NotificationCompat.Builder(context)
-                .setVisibility(Notification.VISIBILITY_PUBLIC)
+                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
                 .setContentTitle(context.getString(R.string.app_name))
                 .setContentText(text)
                 .setContentIntent(pendingIntent)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LockHandler.java
Patch:
@@ -20,7 +20,6 @@
 import android.database.sqlite.SQLiteOpenHelper;
 
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
-import nodomain.freeyourgadget.gadgetbridge.database.DBOpenHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoMaster;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 
@@ -36,7 +35,7 @@ public class LockHandler implements DBHandler {
     public LockHandler() {
     }
 
-    public void init(DaoMaster daoMaster, DBOpenHelper helper) {
+    public void init(DaoMaster daoMaster, DaoMaster.OpenHelper helper) {
         if (isValid()) {
             throw new IllegalStateException("DB must be closed before initializing it again");
         }
@@ -82,7 +81,7 @@ public synchronized void openDb() {
             throw new IllegalStateException("session must be null");
         }
         // this will create completely new db instances and in turn update this handler through #init()
-        GBApplication.setupDatabase(GBApplication.getContext());
+        GBApplication.app().setupDatabase();
     }
 
     @Override

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/CalendarEventTest.java
Patch:
@@ -6,7 +6,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.CalendarSyncStateDao;
+import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEvents;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LockHandler.java
Patch:
@@ -20,6 +20,7 @@
 import android.database.sqlite.SQLiteOpenHelper;
 
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
+import nodomain.freeyourgadget.gadgetbridge.database.DBOpenHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoMaster;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 
@@ -35,7 +36,7 @@ public class LockHandler implements DBHandler {
     public LockHandler() {
     }
 
-    public void init(DaoMaster daoMaster, DaoMaster.OpenHelper helper) {
+    public void init(DaoMaster daoMaster, DBOpenHelper helper) {
         if (isValid()) {
             throw new IllegalStateException("DB must be closed before initializing it again");
         }
@@ -81,7 +82,7 @@ public synchronized void openDb() {
             throw new IllegalStateException("session must be null");
         }
         // this will create completely new db instances and in turn update this handler through #init()
-        GBApplication.app().setupDatabase();
+        GBApplication.setupDatabase(GBApplication.getContext());
     }
 
     @Override

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/CalendarEventTest.java
Patch:
@@ -5,9 +5,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.CalendarSyncStateDao;
-import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEvents;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -62,6 +62,9 @@ public class GB {
     public static final String DISPLAY_MESSAGE_SEVERITY = "severity";
 
     public static Notification createNotification(String text, boolean connected, Context context) {
+        if (GBEnvironment.env().isLocalTest()) {
+            return null;
+        }
         Intent notificationIntent = new Intent(context, ControlCenterv2.class);
         notificationIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
                 | Intent.FLAG_ACTIVITY_CLEAR_TASK);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusConstants.java
Patch:
@@ -121,6 +121,9 @@ public final class HPlusConstants {
     public static final byte DATA_DAY_SUMMARY_ALT = 0x39;
     public static final byte DATA_SLEEP = 0x1A;
     public static final byte DATA_VERSION = 0x18;
+    public static final byte DATA_VERSION1 = 0x2E;
+
+    public static final byte DATA_UNKNOWN = 0x4d;
 
     public static final String PREF_HPLUS_SCREENTIME = "hplus_screentime";
     public static final String PREF_HPLUS_ALLDAYHR = "hplus_alldayhr";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/LockHandler.java
Patch:
@@ -20,7 +20,6 @@
 import android.database.sqlite.SQLiteOpenHelper;
 
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
-import nodomain.freeyourgadget.gadgetbridge.database.DBOpenHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoMaster;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 
@@ -36,7 +35,7 @@ public class LockHandler implements DBHandler {
     public LockHandler() {
     }
 
-    public void init(DaoMaster daoMaster, DBOpenHelper helper) {
+    public void init(DaoMaster daoMaster, DaoMaster.OpenHelper helper) {
         if (isValid()) {
             throw new IllegalStateException("DB must be closed before initializing it again");
         }
@@ -82,7 +81,7 @@ public synchronized void openDb() {
             throw new IllegalStateException("session must be null");
         }
         // this will create completely new db instances and in turn update this handler through #init()
-        GBApplication.setupDatabase(GBApplication.getContext());
+        GBApplication.app().setupDatabase();
     }
 
     @Override

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/CalendarEventTest.java
Patch:
@@ -5,7 +5,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 import nodomain.freeyourgadget.gadgetbridge.entities.CalendarSyncStateDao;
+import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.CalendarEvents;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -43,12 +43,11 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.entities.Device;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.AlarmClockReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.AlarmReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.BluetoothConnectReceiver;
-import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.BluetoothPairingRequestReceiver;
+import nodomain.freeyourgadget.gadgetbridge.externalevents.CalendarReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.MusicPlaybackReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.PebbleReceiver;
 import nodomain.freeyourgadget.gadgetbridge.externalevents.PhoneCallReceiver;
@@ -584,7 +583,7 @@ private void setReceiversEnableState(boolean enable, boolean initialized, Device
         LOG.info("Setting broadcast receivers to: " + enable);
 
         if (enable && initialized && coordinator != null && coordinator.supportsCalendarEvents()) {
-            if (mCalendarReceiver == null) {
+            if (mCalendarReceiver == null  && getPrefs().getBoolean("enable_calendar_sync", true)) {
                 IntentFilter calendarIntentFilter = new IntentFilter();
                 calendarIntentFilter.addAction("android.intent.action.PROVIDER_CHANGED");
                 calendarIntentFilter.addDataScheme("content");

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/Tryout.java
Patch:
@@ -32,4 +32,6 @@ public void testCalendarBytes() {
         LOG.info("Calender: " + DateTimeUtils.formatDateTime(calendar.getTime()));
         Logging.logBytes(LOG, bytes);
     }
+
+
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AutoStartReceiver.java
Patch:
@@ -28,7 +28,7 @@ public class AutoStartReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        if (GBApplication.getGBPrefs().getAutoStart()) {
+        if (GBApplication.getGBPrefs().getAutoStart() && Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) {
             Log.i(TAG, "Boot completed, starting Gadgetbridge");
             GBApplication.deviceService().start();
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -207,14 +207,13 @@ public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
             if (action.equals(GBDevice.ACTION_DEVICE_CHANGED)) {
                 GBDevice device = intent.getParcelableExtra(GBDevice.EXTRA_DEVICE);
-                // FIXME: mGBDevice was null here once
-                if (mGBDevice.equals(device)) {
+                if (mGBDevice != null && mGBDevice.equals(device)) {
                     mGBDevice = device;
                     boolean enableReceivers = mDeviceSupport != null && (mDeviceSupport.useAutoConnect() || mGBDevice.isInitialized());
                     setReceiversEnableState(enableReceivers, mGBDevice.isInitialized(), DeviceHelper.getInstance().getCoordinator(device));
                     GB.updateNotification(mGBDevice.getName() + " " + mGBDevice.getStateString(), mGBDevice.isInitialized(), context);
                 } else {
-                    LOG.error("Got ACTION_DEVICE_CHANGED from unexpected device: " + mGBDevice);
+                    LOG.error("Got ACTION_DEVICE_CHANGED from unexpected device: " + device);
                 }
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/CalendarReceiver.java
Patch:
@@ -188,7 +188,7 @@ private void updateEvents(Long deviceId, DaoSession session) {
                     c.setTimeInMillis(calendarEvent.getBegin());
                     c.set(Calendar.HOUR, 0);
                     calendarEventSpec.timestamp = (int) (c.getTimeInMillis() / 1000);
-                    calendarEventSpec.durationInSeconds = 24 * 60 * 60; //TODO: commented because it is commented above
+                    calendarEventSpec.durationInSeconds = 24 * 60 * 60;
                 }
                 calendarEventSpec.description = calendarEvent.getDescription();
                 calendarEventSpec.location = calendarEvent.getLocation();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -332,7 +332,8 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
                 .putExtra(EXTRA_CALENDAREVENT_TIMESTAMP, calendarEventSpec.timestamp)
                 .putExtra(EXTRA_CALENDAREVENT_DURATION, calendarEventSpec.durationInSeconds)
                 .putExtra(EXTRA_CALENDAREVENT_TITLE, calendarEventSpec.title)
-                .putExtra(EXTRA_CALENDAREVENT_DESCRIPTION, calendarEventSpec.description);
+                .putExtra(EXTRA_CALENDAREVENT_DESCRIPTION, calendarEventSpec.description)
+                .putExtra(EXTRA_CALENDAREVENT_LOCATION, calendarEventSpec.location);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -129,6 +129,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_CALENDAREVENT_DURATION = "calendarevent_duration";
     String EXTRA_CALENDAREVENT_TITLE = "calendarevent_title";
     String EXTRA_CALENDAREVENT_DESCRIPTION = "calendarevent_description";
+    String EXTRA_CALENDAREVENT_LOCATION = "calendarevent_location";
 
     void start();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -108,6 +108,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_DESCRIPTION;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_DURATION;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_ID;
+import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_LOCATION;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_TIMESTAMP;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_TITLE;
 import static nodomain.freeyourgadget.gadgetbridge.model.DeviceService.EXTRA_CALENDAREVENT_TYPE;
@@ -375,6 +376,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 calendarEventSpec.durationInSeconds = intent.getIntExtra(EXTRA_CALENDAREVENT_DURATION, -1);
                 calendarEventSpec.title = intent.getStringExtra(EXTRA_CALENDAREVENT_TITLE);
                 calendarEventSpec.description = intent.getStringExtra(EXTRA_CALENDAREVENT_DESCRIPTION);
+                calendarEventSpec.location = intent.getStringExtra(EXTRA_CALENDAREVENT_LOCATION);
                 mDeviceSupport.onAddCalendarEvent(calendarEventSpec);
                 break;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -225,7 +225,7 @@ private void handleDisconnected(int status) {
         // alive (we do not close() it). Unfortunately we sometimes have problems
         // reconnecting automatically, so we try to fix this by re-creating mBluetoothGatt.
         // Not sure if this actually works without re-initializing the device...
-        if (status != 0) {
+        if (mBluetoothGatt != null) {
             if (!wasInitialized || !maybeReconnect()) {
                 disconnect(); // ensure that we start over cleanly next time
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/CalendarEventSpec.java
Patch:
@@ -27,4 +27,6 @@ public class CalendarEventSpec {
     public int durationInSeconds;
     public String title;
     public String description;
+    public String location;
+    public boolean allDay;
 }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/database/EntitiesTest.java
Patch:
@@ -82,6 +82,7 @@ public void testUser() {
     @Test
     public void testDBHelper() {
         GBDevice dummyGBDevice = createDummyGDevice("00:00:00:00:01");
+        dummyGBDevice.setState(GBDevice.State.INITIALIZED);
         Device device = DBHelper.getDevice(dummyGBDevice, daoSession);
         assertNotNull(device);
         assertEquals("00:00:00:00:01", device.getIdentifier());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -384,7 +384,9 @@ public static Device getDevice(GBDevice gbDevice, DaoSession session) {
         } else {
             ensureDeviceUpToDate(device, gbDevice, session);
         }
-        ensureDeviceAttributes(device, gbDevice, session);
+        if (gbDevice.isInitialized()) {
+            ensureDeviceAttributes(device, gbDevice, session);
+        }
 
         return device;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AppManagerActivity.java
Patch:
@@ -199,8 +199,7 @@ synchronized public static void addToAppOrderFile(String filename, UUID uuid) {
 
     static synchronized ArrayList<UUID> getUuidsFromFile(String filename) {
         ArrayList<UUID> uuids = new ArrayList<>();
-        try {
-            FileReader fileReader = new FileReader(FileUtils.getExternalFilesDir() + "/" + filename);
+        try (FileReader fileReader = new FileReader(FileUtils.getExternalFilesDir() + "/" + filename)) {
             BufferedReader in = new BufferedReader(fileReader);
             String line;
             while ((line = in.readLine()) != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -39,8 +39,8 @@ public enum NotificationType {
     GENERIC_ALARM_CLOCK(PebbleIconID.ALARM_CLOCK, PebbleColor.Red);
     // Note: if you add any more constants, update all clients as well
 
-    public int icon;
-    public byte color;
+    public final int icon;
+    public final byte color;
 
     NotificationType(int icon, byte color) {
         this.icon = icon;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/ValueDecoder.java
Patch:
@@ -30,7 +30,7 @@ public static int decodePercent(BluetoothGattCharacteristic characteristic) {
         int percent = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
         if (percent > 100 || percent < 0) {
             LOG.warn("Unexpected percent value: " + percent + ": " + GattCharacteristic.toString(characteristic));
-            percent = Math.max(100, Math.min(0, percent));
+            percent = Math.min(100, Math.max(0, percent));
         }
         return percent;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/liveview/LiveviewIoThread.java
Patch:
@@ -197,8 +197,6 @@ private byte[] parseIncoming() throws IOException {
                     break;
                 case HEADER_LEN:
                     int headerSize = 0xff & incoming[0];
-                    if (headerSize < 0)
-                        throw new IOException();
                     state = ReaderState.HEADER;
                     incoming = new byte[headerSize];
                     break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/MiBand2Support.java
Patch:
@@ -810,7 +810,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
     }
 
     private void handleButtonPressed(byte[] value) {
-        LOG.info("Button pressed: " + value);
+        LOG.info("Button pressed");
         logMessageContent(value);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -216,7 +216,7 @@ private void bufferActivityData(byte[] value) {
         int len = value.length;
 
         if (len % 4 != 1) {
-            throw new AssertionError("Unexpected activity array size: " + value);
+            throw new AssertionError("Unexpected activity array size: " + len);
         }
 
         for (int i = 1; i < len; i+=4) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerZalewszczak.java
Patch:
@@ -69,8 +69,8 @@ private byte[] encodeWeatherMessage(WeatherSpec weatherSpec) {
         }
 
         ArrayList<Pair<Integer, Object>> pairs = new ArrayList<>(2);
-        pairs.add(new Pair<>(KEY_TEMP, (Object) (Math.round(weatherSpec.currentTemp - 273) + "C")));
-        pairs.add(new Pair<>(KEY_ICON, (Object) (getIconForConditionCode(weatherSpec.currentConditionCode))));
+        pairs.add(new Pair<Integer, Object>(KEY_TEMP, weatherSpec.currentTemp - 273 + "C"));
+        pairs.add(new Pair<Integer, Object>(KEY_ICON, getIconForConditionCode(weatherSpec.currentConditionCode)));
         byte[] weatherMessage = mPebbleProtocol.encodeApplicationMessagePush(PebbleProtocol.ENDPOINT_APPLICATIONMESSAGE, mUUID, pairs);
 
         ByteBuffer buf = ByteBuffer.allocate(weatherMessage.length);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractWeekChartFragment.java
Patch:
@@ -115,6 +115,7 @@ private DefaultChartsData<BarData> refreshWeekBeforeData(DBHandler db, BarChart
 
         BarData barData = new BarData(set);
         barData.setValueTextColor(Color.GRAY); //prevent tearing other graph elements with the black text. Another approach would be to hide the values cmpletely with data.setDrawValues(false);
+        barData.setValueTextSize(10f);
 
         LimitLine target = new LimitLine(mTargetValue);
         barChart.getAxisLeft().removeAllLimitLines();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionAnalytics.java
Patch:
@@ -59,7 +59,7 @@ GBDeviceEvent[] handleMessage(ByteBuffer datalogMessage, int length) {
         LOG.info("Battery reading for TS " + messageTS + " is: " + reportedMilliVolts + " milliVolts, mapped to percentage: " + milliVoltstoPercentage(reportedMilliVolts));
 
         if (messageTS > 0 && reportedMilliVolts < 5000) { //some safety checks
-            mGBDeviceEventBatteryInfo.state = BatteryState.BATTERY_NORMAL;
+//            mGBDeviceEventBatteryInfo.state = BatteryState.BATTERY_NORMAL; //uncoomment this to show the battery status in the control center
             mGBDeviceEventBatteryInfo.level = milliVoltstoPercentage(reportedMilliVolts);
 
             return new GBDeviceEvent[]{mGBDeviceEventBatteryInfo, null};

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -433,7 +433,7 @@ public static boolean isDarkThemeEnabled() {
     public static int getTextColor(Context context) {
         TypedValue typedValue = new TypedValue();
         Resources.Theme theme = context.getTheme();
-        theme.resolveAttribute(android.R.attr.textColorPrimary, typedValue, true);
+        theme.resolveAttribute(R.attr.textColorPrimary, typedValue, true);
         return typedValue.data;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -154,10 +154,10 @@ protected AbstractChartFragment(String... intentFilterActions) {
         mIntentFilterActions = new HashSet<>();
         if (intentFilterActions != null) {
             mIntentFilterActions.addAll(Arrays.asList(intentFilterActions));
-            mIntentFilterActions.add(ChartsHost.DATE_NEXT);
-            mIntentFilterActions.add(ChartsHost.DATE_PREV);
-            mIntentFilterActions.add(ChartsHost.REFRESH);
         }
+        mIntentFilterActions.add(ChartsHost.DATE_NEXT);
+        mIntentFilterActions.add(ChartsHost.DATE_PREV);
+        mIntentFilterActions.add(ChartsHost.REFRESH);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -182,9 +182,9 @@ protected void init() {
         HEARTRATE_FILL_COLOR = ContextCompat.getColor(getContext(), R.color.chart_heartrate_fill);
         getContext().getTheme().resolveAttribute(R.attr.chart_activity, runningColor, true);
         AK_ACTIVITY_COLOR = runningColor.data;
-        getContext().getTheme().resolveAttribute(R.attr.chart_light_sleep, runningColor, true);
-        AK_DEEP_SLEEP_COLOR = runningColor.data;
         getContext().getTheme().resolveAttribute(R.attr.chart_deep_sleep, runningColor, true);
+        AK_DEEP_SLEEP_COLOR = runningColor.data;
+        getContext().getTheme().resolveAttribute(R.attr.chart_light_sleep, runningColor, true);
         AK_LIGHT_SLEEP_COLOR = runningColor.data;
         getContext().getTheme().resolveAttribute(R.attr.chart_not_worn, runningColor, true);
         AK_NOT_WORN_COLOR = runningColor.data;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -2275,6 +2275,7 @@ private GBDeviceEvent[] decodeDatalog(ByteBuffer buf, short length) {
                         mDatalogSessions.put(id, new DatalogSession(id, uuid, timestamp, log_tag, item_type, item_size));
                     }
                 }
+                devEvtsDataLogging = new GBDeviceEvent[]{null};
                 break;
             case DATALOG_CLOSE:
                 LOG.info("DATALOG_CLOSE. id=" + (id & 0xff));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractWeekChartFragment.java
Patch:
@@ -287,16 +287,17 @@ private ActivityAmounts getActivityAmountsForDay(DBHandler db, Calendar day, GBD
         ActivityAmounts amounts = null;
 
         Activity activity = getActivity();
+        int key = (int) (day.getTimeInMillis() / 1000) + (mOffsetHours * 3600);
         if (activity != null) {
             activityAmountCache = ((ChartsActivity) activity).mActivityAmountCache;
-            amounts = (ActivityAmounts) (activityAmountCache.lookup(day.hashCode() ^ mOffsetHours));
+            amounts = (ActivityAmounts) (activityAmountCache.lookup(key));
         }
 
         if (amounts == null) {
             ActivityAnalysis analysis = new ActivityAnalysis();
             amounts = analysis.calculateActivityAmounts(getSamplesOfDay(db, day, mOffsetHours, device));
             if (activityAmountCache != null) {
-                activityAmountCache.add(day.hashCode() ^ mOffsetHours, amounts);
+                activityAmountCache.add(key, amounts);
             }
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/NotificationUtils.java
Patch:
@@ -42,7 +42,7 @@ public static String getPreferredTextFor(NotificationSpec notificationSpec, int
             case CONVERSATIONS:
             case FACEBOOK:
             case FACEBOOK_MESSENGER:
-                return notificationSpec.body;
+                return StringUtils.ensureNotNull(notificationSpec.body);
         }
         return "";
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/StringUtils.java
Patch:
@@ -20,6 +20,7 @@
 
 public class StringUtils {
 
+    @NonNull
     public static String truncate(String s, int maxLength){
         if (s == null) {
             return "";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/AppNotificationType.java
Patch:
@@ -33,6 +33,7 @@ public static AppNotificationType getInstance() {
     private AppNotificationType() {
         // Generic Email
         put("com.fsck.k9", NotificationType.GENERIC_EMAIL);
+        put("com.imaeses.squeaky", NotificationType.GENERIC_EMAIL);
         put("com.android.email", NotificationType.GENERIC_EMAIL);
 
         // Generic SMS

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/WebViewSingleton.java
Patch:
@@ -243,6 +243,7 @@ private static WebResourceResponse mimicOpenWeatherMapResponse() {
             main.put("temp_max", weatherSpec.todayMaxTemp);
             main.put("name", weatherSpec.location);
 
+            resp.put("cod", 200);
             resp.put("coord", coord);
             resp.put("sys", sys);
             resp.put("weather", weather);

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/LanguageUtilsTest.java
Patch:
@@ -25,7 +25,7 @@ public void testStringTransliterateCyrillic() throws Exception {
     }
     
     @Test
-    public void testStringTransliterateCyrillic() throws Exception {
+    public void testStringTransliterateHebrew() throws Exception {
         //input with cyrillic and diacritic letters
         String input = "בדיקה עברית";
         String output = LanguageUtils.transliterate(input);
@@ -41,7 +41,7 @@ public void testTransliterateOption() throws Exception {
         SharedPreferences settings = GBApplication.getPrefs().getPreferences();
         SharedPreferences.Editor editor = settings.edit();
         editor.putBoolean("transliteration", true);
-        editor.commit();
+        editor.apply();
 
         assertTrue("Transliteration option fail! Expected 'On', but result is 'Off'", LanguageUtils.transliterate());
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -98,6 +98,8 @@ public class MiBand2Service {
 
     public static final byte[] DATEFORMAT_DATE_TIME = new byte[] { COMMAND_DATEFORMAT, 0x0a, 0x0, 0x03 };
     public static final byte[] DATEFORMAT_TIME = new byte[] { COMMAND_DATEFORMAT, 0x0a, 0x0, 0x0 };
+    public static final byte[] DATEFORMAT_TIME_12_HOURS = new byte[] { COMMAND_DATEFORMAT, 0x02, 0x0, 0x0 };
+    public static final byte[] DATEFORMAT_TIME_24_HOURS = new byte[] { COMMAND_DATEFORMAT, 0x02, 0x0, 0x1 };
 
     public static final byte RESPONSE = 0x10;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -18,6 +18,7 @@ public final class MiBandConst {
     public static final String PREF_MIBAND_USE_HR_FOR_SLEEP_DETECTION = "mi_hr_sleep_detection";
 	public static final String PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS = "mi_device_time_offset_hours";
 	public static final String PREF_MI2_DATEFORMAT = "mi2_dateformat";
+	public static final String PREF_MI2_TIMEFORMAT = "mi2_timeformat";
 	public static final String PREF_MI2_ACTIVATE_DISPLAY_ON_LIFT = "mi2_activate_display_on_lift_wrist";
     public static final String PREF_MIBAND_SETUP_BT_PAIRING = "mi_setup_bt_pairing";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -82,8 +82,7 @@ class PebbleIoThread extends GBDeviceIoThread {
     private int mBytesWritten = -1;
 
     private void sendAppMessageJS(GBDeviceEventAppMessage appMessage) {
-//        WebViewSingleton.runJavascriptInterface(gbDevice, appMessage.appUUID);
-        WebViewSingleton.appMessage(appMessage.message);
+        WebViewSingleton.appMessage(appMessage);
         write(mPebbleProtocol.encodeApplicationMessageAck(appMessage.appUUID, (byte) appMessage.id));
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -136,7 +136,9 @@ public void onCreate() {
     }
 
     private void createWebViewActivity() {
-        startActivity(new Intent(getContext(), BackgroundWebViewActivity.class));
+        Intent intent = new Intent(getContext(), BackgroundWebViewActivity.class);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        startActivity(intent);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -50,6 +50,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         WebViewSingleton.updateActivityContext(this);
         myWebView = WebViewSingleton.getWebView();
+        myWebView.setWillNotDraw(false);
+        myWebView.removeJavascriptInterface("GBActivity");
         myWebView.addJavascriptInterface(new ActivityJSInterface(ExternalPebbleJSActivity.this), "GBActivity");
         FrameLayout fl = (FrameLayout) findViewById(R.id.webview_placeholder);
         fl.addView(myWebView);
@@ -104,7 +106,6 @@ public void onViewDetachedFromWindow(View v) {
                 fl.removeAllViews();
             }
         });
-
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleHealthSampleProvider.java
Patch:
@@ -45,8 +45,8 @@ public List<PebbleHealthActivitySample> getAllActivitySamples(int timestamp_from
         QueryBuilder<PebbleHealthActivityOverlay> qb = getSession().getPebbleHealthActivityOverlayDao().queryBuilder();
 
         // I assume it returns the records by id ascending ... (last overlay is dominant)
-        qb.where(PebbleHealthActivityOverlayDao.Properties.DeviceId.eq(dbDevice.getId()), PebbleHealthActivityOverlayDao.Properties.TimestampFrom.ge(timestamp_from))
-                .where(PebbleHealthActivityOverlayDao.Properties.TimestampTo.le(timestamp_to));
+        qb.where(PebbleHealthActivityOverlayDao.Properties.DeviceId.eq(dbDevice.getId()), PebbleHealthActivityOverlayDao.Properties.TimestampTo.ge(timestamp_from))
+                .where(PebbleHealthActivityOverlayDao.Properties.TimestampFrom.le(timestamp_to));
         List<PebbleHealthActivityOverlay> overlayRecords = qb.build().list();
 
         for (PebbleHealthActivityOverlay overlay : overlayRecords) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -654,7 +654,7 @@ private byte[] encodeExtensibleNotification(int id, int timestamp, String title,
         buf.put(dismiss_string.getBytes());
 
         // open and mute actions
-        if (hasHandle) {
+        if (hasHandle && !"ALARMCLOCKRECEIVER".equals(sourceName)) {
             buf.put((byte) 0x01);
             buf.put((byte) 0x02); // generic
             buf.put((byte) 0x01); // number attributes
@@ -892,7 +892,7 @@ private byte[] encodeBlobdbNotification(int id, int timestamp, String title, Str
         }
 
         byte dismiss_action_id;
-        if (hasHandle) {
+        if (hasHandle && !"ALARMCLOCKRECEIVER".equals(sourceName)) {
             actions_count = 3;
             dismiss_string = "Dismiss";
             dismiss_action_id = 0x02;
@@ -979,7 +979,7 @@ private byte[] encodeBlobdbNotification(int id, int timestamp, String title, Str
         buf.put(dismiss_string.getBytes());
 
         // open and mute actions
-        if (hasHandle) {
+        if (hasHandle && !"ALARMCLOCKRECEIVER".equals(sourceName)) {
             buf.put((byte) 0x01);
             buf.put((byte) 0x02); // generic action
             buf.put((byte) 0x01); // number attributes

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -122,7 +122,7 @@ public void onNotification(NotificationSpec notificationSpec) {
             notificationSpec.title = null;
             notificationSpec.phoneNumber = null;
         } else if (getContext().getString(R.string.p_pebble_privacy_mode_content).equals(currentPrivacyMode)) {
-            if (notificationSpec.sender != null) {if (notificationSpec.sender != null) {
+            if (notificationSpec.sender != null) {
                 notificationSpec.sender = "\n\n\n\n\n" + notificationSpec.sender;
             } else if (notificationSpec.title != null) {
                 notificationSpec.title = "\n\n\n\n\n" + notificationSpec.title;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/AlarmClockReceiver.java
Patch:
@@ -48,6 +48,7 @@ private synchronized void sendAlarm(boolean on) {
             lastId = generateId();
             NotificationSpec spec = new NotificationSpec();
             spec.type = NotificationType.GENERIC_ALARM_CLOCK;
+            spec.id = -1;
             // can we get the alarm title somehow?
             GBApplication.deviceService().onNotification(spec);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -204,6 +204,9 @@ public PBWReader(Uri uri, Context context, String platform) throws IOException {
                 }
                 app = new GBDeviceApp(appUUID, appName, appCreator, appVersion, appType);
             }
+            else if (!isFirmware) {
+                isValid = false;
+            }
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusConstants.java
Patch:
@@ -18,8 +18,8 @@ public final class HPlusConstants {
     public static final byte ARG_LANGUAGE_CN = 1;
     public static final byte ARG_LANGUAGE_EN = 2;
 
-    public static final byte ARG_TIMEMODE_24H = 0;
-    public static final byte ARG_TIMEMODE_12H = 1;
+    public static final byte ARG_TIMEMODE_24H = 1;
+    public static final byte ARG_TIMEMODE_12H = 0;
 
     public static final byte ARG_UNIT_METRIC = 0;
     public static final byte ARG_UNIT_IMPERIAL = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusConstants.java
Patch:
@@ -18,8 +18,8 @@ public final class HPlusConstants {
     public static final byte ARG_LANGUAGE_CN = 1;
     public static final byte ARG_LANGUAGE_EN = 2;
 
-    public static final byte ARG_TIMEMODE_24H = 0;
-    public static final byte ARG_TIMEMODE_12H = 1;
+    public static final byte ARG_TIMEMODE_24H = 1;
+    public static final byte ARG_TIMEMODE_12H = 0;
 
     public static final byte ARG_UNIT_METRIC = 0;
     public static final byte ARG_UNIT_IMPERIAL = 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -599,8 +599,9 @@ private void setReceiversEnableState(boolean enable) {
                 mMusicPlaybackReceiver = new MusicPlaybackReceiver();
                 IntentFilter filter = new IntentFilter();
                 filter.addAction("com.android.music.metachanged");
+                filter.addAction("com.android.music.playstatechanged");
+                filter.addAction("com.android.music.playbackcomplete");
                 filter.addAction("net.sourceforge.subsonic.androidapp.EVENT_META_CHANGED");
-                //filter.addAction("com.android.music.playstatechanged");
                 registerReceiver(mMusicPlaybackReceiver, filter);
             }
             if (mTimeChangeReceiver == null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Coordinator.java
Patch:
@@ -54,12 +54,12 @@ public DeviceType getSupportedType(GBDeviceCandidate candidate) {
         // and a heuristic for now
         try {
             BluetoothDevice device = candidate.getDevice();
-            if (isHealthWearable(device)) {
+//            if (isHealthWearable(device)) {
                 String name = device.getName();
                 if (name != null && name.equalsIgnoreCase(MiBandConst.MI_BAND2_NAME)) {
                     return DeviceType.MIBAND2;
                 }
-            }
+//            }
         } catch (Exception ex) {
             LOG.error("unable to check device support", ex);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -127,7 +127,7 @@ public String getName() {
                 deviceName = (String) method.invoke(device);
             }
         } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException ignore) {
-            LOG.info("Could not get device alias for " + deviceName);
+            LOG.info("Could not get device alias for " + device.getName());
         }
         if (deviceName == null || deviceName.length() == 0) {
             deviceName = device.getName();
@@ -167,6 +167,6 @@ public int hashCode() {
 
     @Override
     public String toString() {
-        return getName() + ": " + getMacAddress();
+        return getName() + ": " + getMacAddress() + " (" + getDeviceType() + ")";
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -60,6 +60,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_VIBRATION_INTENSITY = "vibration_intensity";
     String EXTRA_CALL_COMMAND = "call_command";
     String EXTRA_CALL_PHONENUMBER = "call_phonenumber";
+    String EXTRA_CALL_DISPLAYNAME = "call_displayname";
     String EXTRA_CANNEDMESSAGES = "cannedmessages";
     String EXTRA_CANNEDMESSAGES_TYPE = "cannedmessages_type";
     String EXTRA_MUSIC_ARTIST = "music_artist";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -60,6 +60,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_VIBRATION_INTENSITY = "vibration_intensity";
     String EXTRA_CALL_COMMAND = "call_command";
     String EXTRA_CALL_PHONENUMBER = "call_phonenumber";
+    String EXTRA_CALL_DISPLAYNAME = "call_displayname";
     String EXTRA_CANNEDMESSAGES = "cannedmessages";
     String EXTRA_CANNEDMESSAGES_TYPE = "cannedmessages_type";
     String EXTRA_MUSIC_ARTIST = "music_artist";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -14,7 +14,7 @@ public enum DeviceType {
     VIBRATISSIMO(20),
     LIVEVIEW(30),
     HPLUS(40),
-    MAKIBESF68(50),
+    MAKIBESF68(41),
     TEST(1000);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -14,7 +14,7 @@ public enum DeviceType {
     VIBRATISSIMO(20),
     LIVEVIEW(30),
     HPLUS(40),
-    MAKIBESF68(50),
+    MAKIBESF68(41),
     TEST(1000);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/hplus/HPlusConstants.java
Patch:
@@ -15,8 +15,8 @@ public final class HPlusConstants {
     public static final UUID UUID_SERVICE_HP = UUID.fromString("14701820-620a-3973-7c78-9cfff0876abd");
 
 
-    public static final byte ARG_COUNTRY_CN = 1;
-    public static final byte ARG_COUNTRY_OTHER = 2;
+    public static final byte ARG_LANGUAGE_CN = 1;
+    public static final byte ARG_LANGUAGE_EN = 2;
 
     public static final byte ARG_TIMEMODE_24H = 0;
     public static final byte ARG_TIMEMODE_12H = 1;
@@ -111,7 +111,7 @@ public final class HPlusConstants {
     public static final String PREF_HPLUS_ALERT_TIME = "hplus_alert_time";
     public static final String PREF_HPLUS_SIT_START_TIME = "hplus_sit_start_time";
     public static final String PREF_HPLUS_SIT_END_TIME = "hplus_sit_end_time";
-    public static final String PREF_HPLUS_COUNTRY = "hplus_country";
+    public static final String PREF_HPLUS_LANGUAGE = "hplus_language";
 
     public static final Map<Character, Byte> transliterateMap = new HashMap<Character, Byte>(){
         {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -14,6 +14,7 @@ public enum DeviceType {
     VIBRATISSIMO(20),
     LIVEVIEW(30),
     HPLUS(40),
+    MAKIBESF68(50),
     TEST(1000);
 
     private final int key;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusDataRecordRealtime.java
Patch:
@@ -60,8 +60,8 @@ public HPlusDataRecordRealtime(byte[] data) {
         timestamp = (int) (GregorianCalendar.getInstance().getTimeInMillis() / 1000);
         distance = 10 * ((data[4] & 0xFF) * 256 + (data[3] & 0xFF)); // meters
         steps = (data[2] & 0xFF) * 256 + (data[1] & 0xFF);
-        int x = (data[6] & 0xFF) * 256 + data[5] & 0xFF;
-        int y = (data[8] & 0xFF) * 256 + data[7] & 0xFF;
+        int x = (data[6] & 0xFF) * 256 + (data[5] & 0xFF);
+        int y = (data[8] & 0xFF) * 256 + (data[7] & 0xFF);
 
         battery = data[9];
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -23,6 +23,7 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.UnknownDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.hplus.HPlusCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.devices.hplus.MakibesF68Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.liveview.LiveviewCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBand2Coordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
@@ -172,6 +173,8 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new VibratissimoCoordinator());
         result.add(new LiveviewCoordinator());
         result.add(new HPlusCoordinator());
+        result.add(new MakibesF68Coordinator());
+
         return result;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -509,7 +509,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         Class<? extends Activity> pairingActivity = coordinator.getPairingActivity();
         if (pairingActivity != null) {
             Intent intent = new Intent(this, pairingActivity);
-            intent.putExtra(DeviceCoordinator.EXTRA_DEVICE_MAC_ADDRESS, deviceCandidate.getMacAddress());
+            intent.putExtra(DeviceCoordinator.EXTRA_DEVICE_CANDIDATE, deviceCandidate);
             startActivity(intent);
         } else {
             try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -27,7 +27,7 @@
  * the given device.
  */
 public interface DeviceCoordinator {
-    String EXTRA_DEVICE_MAC_ADDRESS = "nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate.EXTRA_MAC_ADDRESS";
+    String EXTRA_DEVICE_CANDIDATE = "nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate.EXTRA_DEVICE_CANDIDATE";
 
     /**
      * Checks whether this coordinator handles the given candidate.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -123,7 +123,10 @@ public Set<GBDevice> getAvailableDevices(Context context) {
 
     public GBDevice toSupportedDevice(BluetoothDevice device) {
         GBDeviceCandidate candidate = new GBDeviceCandidate(device, GBDevice.RSSI_UNKNOWN, device.getUuids());
+        return toSupportedDevice(candidate);
+    }
 
+    public GBDevice toSupportedDevice(GBDeviceCandidate candidate) {
         for (DeviceCoordinator coordinator : getAllCoordinators()) {
             if (coordinator.supports(candidate)) {
                 return coordinator.createDevice(candidate);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -57,7 +57,7 @@ public void writeToParcel(Parcel dest, int flags) {
         dest.writeParcelable(device, 0);
         dest.writeInt(rssi);
         dest.writeString(deviceType.name());
-        dest.writeArray(serviceUuds);
+        dest.writeParcelableArray(serviceUuds, 0);
     }
 
     public static final Creator<GBDeviceCandidate> CREATOR = new Creator<GBDeviceCandidate>() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -19,6 +19,7 @@ public final class MiBandConst {
 	public static final String PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS = "mi_device_time_offset_hours";
 	public static final String PREF_MI2_DATEFORMAT = "mi2_dateformat";
 	public static final String PREF_MI2_ACTIVATE_DISPLAY_ON_LIFT = "mi2_activate_display_on_lift_wrist";
+    public static final String PREF_MIBAND_SETUP_BT_PAIRING = "mi_setup_bt_pairing";
 
 
     public static final String ORIGIN_INCOMING_CALL = "incoming_call";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPreferencesActivity.java
Patch:
@@ -25,6 +25,7 @@
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_FITNESS_GOAL;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_RESERVE_ALARM_FOR_CALENDAR;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_USE_HR_FOR_SLEEP_DETECTION;
+import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_SETUP_BT_PAIRING;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_USER_ALIAS;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.VIBRATION_COUNT;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.getNotificationPrefKey;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerHealthify.java
Patch:
@@ -28,8 +28,9 @@ class AppMessageHandlerHealthify extends AppMessageHandler {
             JSONObject appKeys = getAppKeys();
             KEY_TEMPERATURE = appKeys.getInt("TEMPERATURE");
             KEY_CONDITIONS = appKeys.getInt("CONDITIONS");
-        } catch (IOException | JSONException e) {
-            GB.toast("There was an error accessing the watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (JSONException e) {
+            GB.toast("There was an error accessing the Helthify watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (IOException ignore) {
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMorpheuz.java
Patch:
@@ -71,8 +71,9 @@ public AppMessageHandlerMorpheuz(UUID uuid, PebbleProtocol pebbleProtocol) {
             keyAutoReset = appKeys.getInt("keyAutoReset");
             keySnoozes = appKeys.getInt("keySnoozes");
             keyFault = appKeys.getInt("keyFault");
-        } catch (IOException | JSONException e) {
-            GB.toast("There was an error accessing the watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (JSONException e) {
+            GB.toast("There was an error accessing the morpheuz watchapp configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (IOException ignore) {
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerSquare.java
Patch:
@@ -34,8 +34,9 @@ class AppMessageHandlerSquare extends AppMessageHandler {
             CfgKeyWeatherMode = appKeys.getInt("CfgKeyWeatherMode");
             CfgKeyUseCelsius = appKeys.getInt("CfgKeyUseCelsius");
             CfgKeyWeatherLocation = appKeys.getInt("CfgKeyWeatherLocation");
-        } catch (IOException | JSONException e) {
-            GB.toast("There was an error accessing the watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (JSONException e) {
+            GB.toast("There was an error accessing the Square watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (IOException ignore) {
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerTimeStylePebble.java
Patch:
@@ -53,8 +53,9 @@ class AppMessageHandlerTimeStylePebble extends AppMessageHandler {
                         break;
                 }
             }
-        } catch (IOException | JSONException e) {
-            GB.toast("There was an error accessing the watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (JSONException e) {
+            GB.toast("There was an error accessing the timestyle watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (IOException ignore) {
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerTrekVolle.java
Patch:
@@ -35,8 +35,9 @@ class AppMessageHandlerTrekVolle extends AppMessageHandler {
             MESSAGE_KEY_WEATHER_TEMPERATURE_MIN = appKeys.getInt("WEATHER_TEMPERATURE_MIN");
             MESSAGE_KEY_WEATHER_TEMPERATURE_MAX = appKeys.getInt("WEATHER_TEMPERATURE_MAX");
             MESSAGE_KEY_WEATHER_LOCATION = appKeys.getInt("WEATHER_LOCATION");
-        } catch (IOException | JSONException e) {
-            GB.toast("There was an error accessing the watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (JSONException e) {
+            GB.toast("There was an error accessing the TrekVolle watchface configuration.", Toast.LENGTH_LONG, GB.ERROR);
+        } catch (IOException ignore) {
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1846,6 +1846,8 @@ private GBDeviceEvent[] decodeDictToJSONAppMessage(UUID uuid, ByteBuffer buf) th
     byte[] encodeApplicationMessagePush(short endpoint, UUID uuid, ArrayList<Pair<Integer, Object>> pairs) {
         int length = LENGTH_UUID + 3; // UUID + (PUSH + id + length of dict)
         for (Pair<Integer, Object> pair : pairs) {
+            if (pair.first == null || pair.second == null)
+                continue;
             length += 7; // key + type + length
             if (pair.second instanceof Integer) {
                 length += 4;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusDataRecordDaySlot.java
Patch:
@@ -46,7 +46,7 @@ public HPlusDataRecordDaySlot(byte[] data) {
         slot = a;
         heartRate = data[1] & 0xFF;
 
-        if(heartRate == 255)
+        if(heartRate == 255 || heartRate == 0)
             heartRate = ActivityKind.TYPE_NOT_MEASURED;
 
         steps = (data[2] & 0xFF) * 256 + data[3] & 0xFF;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusDataRecordRealtime.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.Locale;
 
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 
 
 class HPlusDataRecordRealtime extends HPlusDataRecord {
@@ -71,6 +72,7 @@ public HPlusDataRecordRealtime(byte[] data) {
         if(heartRate == 255) {
             intensity = 0;
             activityKind = ActivityKind.TYPE_NOT_MEASURED;
+            heartRate = ActivitySample.NOT_MEASURED;
         }
         else {
             intensity = (int) (100 * Math.max(0, Math.min((heartRate - 60) / 120.0, 1))); // TODO: Calculate a proper value

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusHandlerThread.java
Patch:
@@ -391,14 +391,15 @@ record = new HPlusDataRecordRealtime(data);
             sample.setRawHPlusHealthData(record.getRawData());
             sample.setProvider(provider);
 
+            provider.addGBActivitySample(sample);
+
             sample.setSteps(sample.getSteps() - prevRealTimeRecord.steps);
 
             Intent intent = new Intent(DeviceService.ACTION_REALTIME_SAMPLES)
                     .putExtra(DeviceService.EXTRA_REALTIME_SAMPLE, sample)
                     .putExtra(DeviceService.EXTRA_TIMESTAMP, System.currentTimeMillis());
             LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent);
 
-            provider.addGBActivitySample(sample);
 
             //TODO: Handle Active Time. With Overlay?
         } catch (GBException ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusDataRecordDaySlot.java
Patch:
@@ -46,7 +46,7 @@ public HPlusDataRecordDaySlot(byte[] data) {
         slot = a;
         heartRate = data[1] & 0xFF;
 
-        if(heartRate == 255)
+        if(heartRate == 255 || heartRate == 0)
             heartRate = ActivityKind.TYPE_NOT_MEASURED;
 
         steps = (data[2] & 0xFF) * 256 + data[3] & 0xFF;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusDataRecordRealtime.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.Locale;
 
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 
 
 class HPlusDataRecordRealtime extends HPlusDataRecord {
@@ -71,6 +72,7 @@ public HPlusDataRecordRealtime(byte[] data) {
         if(heartRate == 255) {
             intensity = 0;
             activityKind = ActivityKind.TYPE_NOT_MEASURED;
+            heartRate = ActivitySample.NOT_MEASURED;
         }
         else {
             intensity = (int) (100 * Math.max(0, Math.min((heartRate - 60) / 120.0, 1))); // TODO: Calculate a proper value

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusHandlerThread.java
Patch:
@@ -391,14 +391,15 @@ record = new HPlusDataRecordRealtime(data);
             sample.setRawHPlusHealthData(record.getRawData());
             sample.setProvider(provider);
 
+            provider.addGBActivitySample(sample);
+
             sample.setSteps(sample.getSteps() - prevRealTimeRecord.steps);
 
             Intent intent = new Intent(DeviceService.ACTION_REALTIME_SAMPLES)
                     .putExtra(DeviceService.EXTRA_REALTIME_SAMPLE, sample)
                     .putExtra(DeviceService.EXTRA_TIMESTAMP, System.currentTimeMillis());
             LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent);
 
-            provider.addGBActivitySample(sample);
 
             //TODO: Handle Active Time. With Overlay?
         } catch (GBException ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1874,6 +1874,8 @@ byte[] encodeApplicationMessagePush(short endpoint, UUID uuid, ArrayList<Pair<In
 
         buf.order(ByteOrder.LITTLE_ENDIAN);
         for (Pair<Integer, Object> pair : pairs) {
+            if (pair.first == null || pair.second == null)
+                continue;
             buf.putInt(pair.first);
             if (pair.second instanceof Integer) {
                 buf.put(TYPE_INT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/LanguageUtils.java
Patch:
@@ -26,7 +26,7 @@ public class LanguageUtils {
     //check transliterate option status
     public static boolean transliterate()
     {
-        return GBApplication.getPrefs().getBoolean("transliteration", true);
+        return GBApplication.getPrefs().getBoolean("transliteration", false);
     }
 
     //replace unsupported symbols to english analog

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -211,7 +211,7 @@ private HPlusSupport setUnit(TransactionBuilder transaction) {
 
     private HPlusSupport setCurrentDate(TransactionBuilder transaction) {
         Calendar c = GregorianCalendar.getInstance();
-        int year = c.get(Calendar.YEAR) - 1900;
+        int year = c.get(Calendar.YEAR);
         int month = c.get(Calendar.MONTH);
         int day = c.get(Calendar.DAY_OF_MONTH);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -211,7 +211,7 @@ private HPlusSupport setUnit(TransactionBuilder transaction) {
 
     private HPlusSupport setCurrentDate(TransactionBuilder transaction) {
         Calendar c = GregorianCalendar.getInstance();
-        int year = c.get(Calendar.YEAR) - 1900;
+        int year = c.get(Calendar.YEAR);
         int month = c.get(Calendar.MONTH);
         int day = c.get(Calendar.DAY_OF_MONTH);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/WeatherNotificationConfig.java
Patch:
@@ -1,10 +1,11 @@
-package nodomain.freeyourgadget.gadgetbridge.activities;
+package nodomain.freeyourgadget.gadgetbridge.externalevents;
 
 import android.os.Bundle;
 import android.os.PersistableBundle;
 import android.widget.TextView;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.activities.GBActivity;
 
 public class WeatherNotificationConfig extends GBActivity {
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1706,7 +1706,7 @@ byte[] encodeApplicationMessageAck(UUID uuid, byte id) {
         buf.put(APPLICATIONMESSAGE_ACK);
         buf.put(id);
         buf.putLong(uuid.getMostSignificantBits());
-        buf.putLong(uuid.getMostSignificantBits());
+        buf.putLong(uuid.getLeastSignificantBits());
 
         return buf.array();
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1811,7 +1811,7 @@ private GBDeviceEvent[] decodeDictToJSONAppMessage(UUID uuid, ByteBuffer buf) th
                     buf.get(bytes);
                     if (type == TYPE_BYTEARRAY) {
                         jsonObject.put("type", "bytes");
-                        jsonObject.put("value", Base64.encode(bytes, Base64.NO_WRAP));
+                        jsonObject.put("value", new String(Base64.encode(bytes, Base64.NO_WRAP)));
                     } else {
                         jsonObject.put("type", "string");
                         jsonObject.put("value", new String(bytes));

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -225,6 +225,7 @@ private static Entity addPebbleMorpheuzActivitySample(Schema schema, Entity user
 
     private static Entity addHPlusHealthActivitySample(Schema schema, Entity user, Entity device) {
         Entity activitySample = addEntity(schema, "HPlusHealthActivitySample");
+        activitySample.implementsSerializable();
         addCommonActivitySampleProperties("AbstractActivitySample", activitySample, user, device);
         activitySample.addByteArrayProperty("rawHPlusHealthData");
         activitySample.addIntProperty(SAMPLE_RAW_KIND).notNull().primaryKey();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -208,7 +208,7 @@ private HPlusSupport setUnit(TransactionBuilder transaction) {
     }
 
     private HPlusSupport setCurrentDate(TransactionBuilder transaction) {
-        Calendar c = GregorianGregorianCalendar.getInstance();
+        Calendar c = GregorianCalendar.getInstance();
         int year = c.get(Calendar.YEAR) - 1900;
         int month = c.get(Calendar.MONTH);
         int day = c.get(Calendar.DAY_OF_MONTH);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -367,6 +367,9 @@ private BarDataSet setupCommonChart(CustomBarChart chart, BarEntry entry, String
 //        chart.getXAxis().setPosition(XAxis.XAxisPosition.TOP);
         chart.getXAxis().setDrawLabels(false);
         chart.getXAxis().setEnabled(false);
+        chart.getXAxis().setTextColor(CHART_TEXT_COLOR);
+        chart.getAxisLeft().setTextColor(CHART_TEXT_COLOR);
+
         chart.setBackgroundColor(BACKGROUND_COLOR);
         chart.getDescription().setTextColor(DESCRIPTION_COLOR);
         chart.getDescription().setText(title);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -722,15 +722,15 @@ private void showText(String title, String body) {
 
             byte[] msg = new byte[20];
             for (int i = 0; i < msg.length; i++)
-                msg[i] = 32;
+                msg[i] = ' ';
 
             msg[0] = HPlusConstants.COMMAND_ACTION_DISPLAY_TEXT;
 
             String message = "";
 
             if (title != null) {
                 if (title.length() > 17) {
-                    message = title.substring(0, 12);
+                    message = title.substring(0, 17);
                 } else {
                     message = title;
                     for (int i = message.length(); i < 17; i++)
@@ -764,7 +764,7 @@ private void showText(String title, String body) {
 
                     msg = msg.clone();
                     for (i = 3; i < msg.length; i++)
-                        msg[i] = 32;
+                        msg[i] = ' ';
 
                     if (message_index < remaining)
                         i = 3;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/hplus/HPlusSupport.java
Patch:
@@ -653,11 +653,11 @@ private void showText(String title, String body) {
             String message = "";
 
             if (title != null) {
-                if (title.length() > 12) {
+                if (title.length() > 17) {
                     message = title.substring(0, 12);
                 } else {
                     message = title;
-                    for (int i = message.length(); i < 12; i++)
+                    for (int i = message.length(); i < 17; i++)
                         message += " ";
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -595,7 +595,7 @@ private void setInstallSlot(int slot) {
         }
     }
 
-    private void writeInstallApp(byte[] bytes) {
+    synchronized private void writeInstallApp(byte[] bytes) {
         if (!mIsInstalling) {
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenterv2.java
Patch:
@@ -103,7 +103,7 @@ public void onClick(View v) {
         navigationView.setNavigationItemSelectedListener(this);
 
         //end of material design boilerplate
-        deviceManager = GBApplication.getDeviceManager();
+        deviceManager = ((GBApplication) getApplication()).getDeviceManager();
 
         deviceListView = (RecyclerView) findViewById(R.id.deviceListView);
         deviceListView.setHasFixedSize(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/AbstractMi1FirmwareInfo.java
Patch:
@@ -94,7 +94,7 @@ protected boolean isGenerallySupportedFirmware() {
     @Override
     protected boolean isHeaderValid() {
         // TODO: not sure if this is a correct check!
-        return ArrayUtils.equals(SINGLE_FW_HEADER, wholeFirmwareBytes, SINGLE_FW_HEADER_OFFSET, SINGLE_FW_HEADER_OFFSET + SINGLE_FW_HEADER.length);
+        return ArrayUtils.equals(wholeFirmwareBytes, SINGLE_FW_HEADER, SINGLE_FW_HEADER_OFFSET);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/Mi1SFirmwareInfo.java
Patch:
@@ -41,7 +41,7 @@ public boolean isSingleMiBandFirmware() {
     @Override
     protected boolean isHeaderValid() {
         // TODO: not sure if this is a correct check!
-        return ArrayUtils.equals(DOUBLE_FW_HEADER, wholeFirmwareBytes, DOUBLE_FW_HEADER_OFFSET, DOUBLE_FW_HEADER_OFFSET + DOUBLE_FW_HEADER.length);
+        return ArrayUtils.equals(wholeFirmwareBytes, DOUBLE_FW_HEADER, DOUBLE_FW_HEADER_OFFSET);
     }
 
     @Nullable

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/Mi2FirmwareInfo.java
Patch:
@@ -59,7 +59,7 @@ public boolean isGenerallyCompatibleWith(GBDevice device) {
 
     public boolean isHeaderValid() {
         // TODO: this is certainly not a correct validation, but it works for now
-        return ArrayUtils.equals(FW_HEADER, bytes, FW_HEADER_OFFSET, FW_HEADER_OFFSET + FW_HEADER.length);
+        return ArrayUtils.equals(bytes, FW_HEADER, FW_HEADER_OFFSET);
     }
 
     public void checkValid() throws IllegalArgumentException {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -218,7 +218,7 @@ private MiBandActivitySample createSample(byte category, byte intensity, byte st
     private void handleActivityMetadata(byte[] value) {
         if (value.length == 15) {
             // first two bytes are whether our request was accepted
-            if (ArrayUtils.equals(MiBand2Service.RESPONSE_ACTIVITY_DATA_START_DATE_SUCCESS, value, 0, 3)) {
+            if (ArrayUtils.equals(value, MiBand2Service.RESPONSE_ACTIVITY_DATA_START_DATE_SUCCESS, 0)) {
                 // the third byte (0x01 on success) = ?
                 // the 4th - 7th bytes probably somehow represent the number of bytes/packets to expect
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband2/MiBand2FWHelper.java
Patch:
@@ -56,6 +56,9 @@ public boolean isSingleFirmware() {
     @Override
     protected void determineFirmwareInfo(byte[] wholeFirmwareBytes) {
         firmwareInfo = new Mi2FirmwareInfo(wholeFirmwareBytes);
+        if (!firmwareInfo.isHeaderValid()) {
+            throw new IllegalArgumentException("Not a Mi Band 2 firmware");
+        }
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/Mi2FirmwareInfo.java
Patch:
@@ -57,8 +57,8 @@ public boolean isGenerallyCompatibleWith(GBDevice device) {
         return isHeaderValid() && device.getType() == DeviceType.MIBAND2;
     }
 
-    protected boolean isHeaderValid() {
-        // TODO: not sure if this is a correct check!
+    public boolean isHeaderValid() {
+        // TODO: this is certainly not a correct validation, but it works for now
         return ArrayUtils.equals(FW_HEADER, bytes, FW_HEADER_OFFSET, FW_HEADER_OFFSET + FW_HEADER.length);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -218,7 +218,7 @@ private MiBandActivitySample createSample(byte category, byte intensity, byte st
     private void handleActivityMetadata(byte[] value) {
         if (value.length == 15) {
             // first two bytes are whether our request was accepted
-            if (ArrayUtils.equals(MiBand2Service.RESPONSE_ACTIVITY_DATA_START_DATE_SUCCESS, value, 0, 2)) {
+            if (ArrayUtils.equals(MiBand2Service.RESPONSE_ACTIVITY_DATA_START_DATE_SUCCESS, value, 0, 3)) {
                 // the third byte (0x01 on success) = ?
                 // the 4th - 7th bytes probably somehow represent the number of bytes/packets to expect
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1921,7 +1921,7 @@ private void decodeAppLogs(ByteBuffer buf) {
         int lineNumber = buf.getShort() & 0xffff;
         String fileName = getFixedString(buf, 16);
         String message = getFixedString(buf, messageLength);
-        LOG.debug("APP_LOGS from uuid " + uuid.toString() + " in " + fileName + ":" + lineNumber + " " + message);
+        LOG.debug("APP_LOGS (" + logLevel +") from uuid " + uuid.toString() + " in " + fileName + ":" + lineNumber + " " + message);
     }
 
     private GBDeviceEvent decodeSystemMessage(ByteBuffer buf) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBEnvironment.java
Patch:
@@ -13,9 +13,8 @@ public static GBEnvironment createLocalTestEnvironment() {
         return env;
     }
 
-    public static GBEnvironment createDeviceEnvironment() {
-        GBEnvironment env = new GBEnvironment();
-        return env;
+    static GBEnvironment createDeviceEnvironment() {
+        return new GBEnvironment();
     }
 
     public final boolean isTest() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -98,7 +98,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_controlcenter);
 
-        deviceManager = GBApplication.getDeviceManager();
+        deviceManager = ((GBApplication)getApplication()).getDeviceManager();
 
         hintTextView = (TextView) findViewById(R.id.hintTextView);
         ListView deviceListView = (ListView) findViewById(R.id.deviceListView);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DbManagementActivity.java
Patch:
@@ -190,7 +190,7 @@ protected Object doInBackground(Object[] params) {
     }
 
     private void selectDeviceForMergingActivityDatabaseInto(final DeviceSelectionCallback callback) {
-        GBDevice connectedDevice = GBApplication.getDeviceManager().getSelectedDevice();
+        GBDevice connectedDevice = ((GBApplication)getApplication()).getDeviceManager().getSelectedDevice();
         if (connectedDevice == null) {
             callback.invoke(null);
             return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -500,6 +500,7 @@ private boolean evaluateGBDeviceEventPebble(GBDeviceEvent deviceEvent) {
                 LOG.info("syncing time");
                 write(mPebbleProtocol.encodeSetTime());
             }
+            write(mPebbleProtocol.encodeEnableAppLogs(prefs.getBoolean("pebble_enable_applogs",false)));
             write(mPebbleProtocol.encodeReportDataLogSessions());
             gbDevice.setState(GBDevice.State.INITIALIZED);
             return false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.UUID;
+import java.util.concurrent.TimeUnit;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.Logging;
@@ -73,7 +74,7 @@ protected void doPerform() throws IOException {
         BluetoothGattCharacteristic characteristicActivityData = getCharacteristic(MiBand2Service.UUID_CHARACTERISTIC_ACTIVITY_DATA);
 
         GregorianCalendar sinceWhen = getLastSuccessfulSynchronizedTime();
-        builder.write(characteristicFetch, BLETypeConversions.join(new byte[] { MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE, 0x01 }, getSupport().getTimeBytes(sinceWhen)));
+        builder.write(characteristicFetch, BLETypeConversions.join(new byte[] { MiBand2Service.COMMAND_ACTIVITY_DATA_START_DATE, 0x01 }, getSupport().getTimeBytes(sinceWhen, TimeUnit.MINUTES)));
         builder.add(new WaitAction(1000)); // TODO: actually wait for the success-reply
         builder.notify(characteristicActivityData, true);
         builder.write(characteristicFetch, new byte[] { MiBand2Service.COMMAND_FETCH_ACTIVITY_DATA });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/InitOperation.java
Patch:
@@ -98,7 +98,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                 } else if (value[0] == MiBand2Service.AUTH_RESPONSE &&
                         value[1] == MiBand2Service.AUTH_SEND_ENCRYPTED_AUTH_NUMBER &&
                         value[2] == MiBand2Service.AUTH_SUCCESS) {
-                    TransactionBuilder builder = createTransactionBuilder("Sending the encrypted random key to the band");
+                    TransactionBuilder builder = createTransactionBuilder("Authenticated, now initialize phase 2");
                     builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
                     getSupport().requestDeviceInfo(builder);
                     getSupport().phase2Initialize(builder);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -298,7 +298,7 @@ public String getAppLocalstoragePrefix() {
 
         @JavascriptInterface
         public String getWatchToken() {
-            //specification says: A string that is is guaranteed to be identical for each Pebble device for the same app across different mobile devices. The token is unique to your app and cannot be used to track Pebble devices across applications. see https://developer.pebble.com/docs/js/Pebble/
+            //specification says: A string that is guaranteed to be identical for each Pebble device for the same app across different mobile devices. The token is unique to your app and cannot be used to track Pebble devices across applications. see https://developer.pebble.com/docs/js/Pebble/
             return "gb" + appUuid.toString();
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -148,7 +148,7 @@ public interface DeviceCoordinator {
     boolean supportsScreenshots();
 
     /**
-     * Returns true if this device/coordinator supports settig alarms.
+     * Returns true if this device/coordinator supports setting alarms.
      *
      * @return
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -14,7 +14,7 @@
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
 
 /**
- * Specifies all events that GadgetBridge intends to send to the gadget device.
+ * Specifies all events that Gadgetbridge intends to send to the gadget device.
  * Implementations can decide to ignore events that they do not support.
  * Implementations need to send/encode event to the connected device.
  */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -265,7 +265,7 @@ public class MiBand2Service {
      */
     public static final byte AUTH_RESPONSE = 0x10;
     /**
-     * Receeived in response to any authentication requests (byte 2 in the byte[] value.
+     * Received in response to any authentication requests (byte 2 in the byte[] value.
      * 0x01 means success.
      */
     public static final byte AUTH_SUCCESS = 0x01;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/VibrationProfile.java
Patch:
@@ -50,7 +50,7 @@ public static VibrationProfile getProfile(String id, short repeat) {
      *
      * @param id            the ID, used as preference key.
      * @param onOffSequence a sequence of alternating on and off durations, in milliseconds
-     * @param repeat        how ofoften the sequence shall be repeated
+     * @param repeat        how often the sequence shall be repeated
      */
     public VibrationProfile(String id, int[] onOffSequence, short repeat) {
         this.id = id;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -181,8 +181,8 @@ public void onStartInstall(GBDevice device) {
     }
 
     public boolean isValid() {
-        // always pretend it is valid, as we cant know yet about hw/fw version
+        // always pretend it is valid, as we can't know yet about hw/fw version
         return true;
     }
 
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -232,7 +232,7 @@ public PBWReader(Uri uri, Context context, String platform) throws FileNotFoundE
                     byte[] tmp_buf = new byte[32];
                     ByteBuffer buf = ByteBuffer.wrap(buffer);
                     buf.order(ByteOrder.LITTLE_ENDIAN);
-                    buf.getLong();  // header, TODO: verifiy
+                    buf.getLong();  // header, TODO: verify
                     buf.getShort(); // struct version, TODO: verify
                     mSdkVersion = buf.getShort();
                     mAppVersion = buf.getShort();
@@ -342,4 +342,4 @@ public int getIconId() {
     public JSONObject getAppKeysJSON() {
         return mAppKeys;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -57,7 +57,7 @@ public void onReceive(Context context, Intent intent) {
         notificationSpec.type = NotificationType.GENERIC_EMAIL;
 
         /*
-         * there seems to be no way to specify the the uri in the where clause.
+         * there seems to be no way to specify the uri in the where clause.
          * If we do so, we just get the newest message, not the one requested.
          * So, we will just search our message and match the uri manually.
          * It should be the first one returned by the query in most cases,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -257,7 +257,7 @@ public String getStateString() {
     }
 
     /**
-     * for simplicity the user wont see all internal states, just connecting -> connected
+     * for simplicity the user won't see all internal states, just connecting -> connected
      * instead of connecting->connected->initializing->initialized
      * Set simple to true to get this behavior.
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -644,7 +644,7 @@ public void onDestroy() {
 
         setDeviceSupport(null);
         NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
-        nm.cancel(GB.NOTIFICATION_ID); // need to do this because the updated notification wont be cancelled when service stops
+        nm.cancel(GB.NOTIFICATION_ID); // need to do this because the updated notification won't be cancelled when service stops
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEOperation.java
Patch:
@@ -59,15 +59,15 @@ protected void prePerform() throws IOException {
      * Subclasses must implement this. When invoked, #prePerform() returned
      * successfully.
      * Note that subclasses HAVE TO call #operationFinished() when the entire
-     * opreation is done (successful or not).
+     * operation is done (successful or not).
      *
      * @throws IOException
      */
     protected abstract void doPerform() throws IOException;
 
     /**
      * You MUST call this method when the operation has finished, either
-     * successfull or unsuccessfully.
+     * successfully or unsuccessfully.
      *
      * @throws IOException
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEAction.java
Patch:
@@ -25,7 +25,7 @@ public BtLEAction(BluetoothGattCharacteristic characteristic) {
     }
 
     /**
-     * Returns true if this actions expects an (async) result which must
+     * Returns true if this action expects an (async) result which must
      * be waited for, before continuing with other actions.
      * <p/>
      * This is needed because the current Bluedroid stack can only deal

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -48,7 +48,7 @@ public final class BtLEQueue {
     private final InternalGattCallback internalGattCallback;
     private boolean mAutoReconnect;
 
-    private Thread dispatchThread = new Thread("GadgetBridge GATT Dispatcher") {
+    private Thread dispatchThread = new Thread("Gadgetbridge GATT Dispatcher") {
 
         @Override
         public void run() {
@@ -148,7 +148,7 @@ public boolean connect() {
         }
         synchronized (mGattMonitor) {
             if (mBluetoothGatt != null) {
-                // Tribal knowledge says you're better off not reusing existing BlueoothGatt connections,
+                // Tribal knowledge says you're better off not reusing existing BluetoothGatt connections,
                 // so create a new one.
                 LOG.info("connect() requested -- disconnecting previous connection: " + mGbDevice.getName());
                 disconnect();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/WriteAction.java
Patch:
@@ -30,7 +30,7 @@ public WriteAction(BluetoothGattCharacteristic characteristic, byte[] value) {
     public boolean run(BluetoothGatt gatt) {
         BluetoothGattCharacteristic characteristic = getCharacteristic();
         int properties = characteristic.getProperties();
-        //TODO: expectsResult should return false if PROPERTY_WRITE_NO_RESPONSE is true, but this yelds to timing issues
+        //TODO: expectsResult should return false if PROPERTY_WRITE_NO_RESPONSE is true, but this leads to timing issues
         if ((properties & BluetoothGattCharacteristic.PROPERTY_WRITE) > 0 || ((properties & BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE) > 0)) {
             return writeValue(gatt, characteristic, value);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/alertnotification/AlertCategory.java
Patch:
@@ -29,7 +29,7 @@ public enum AlertCategory {
 
     /**
      * Returns the numerical ID value of this category
-     * To be used as uin8 value
+     * To be used as uint8 value
      * @return the uint8 value for this category
      */
     public int getId() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/alertnotification/SupportedNewAlertCategory.java
Patch:
@@ -17,7 +17,7 @@ public SupportedNewAlertCategory(int id) {
 
     /**
      * Returns the numerical ID value of this category
-     * To be used as uin8 value
+     * To be used as uint8 value
      * @return the uint8 value for this category
      */
     public int getId() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/heartrate/BodySensorLocation.java
Patch:
@@ -7,7 +7,7 @@
  */
 public enum BodySensorLocation {
     Other(0),
-    Checst(1),
+    Chest(1),
     Wrist(2),
     Finger(3),
     Hand(4),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerPebStyle.java
Patch:
@@ -56,7 +56,7 @@ private byte[] encodePebStyleConfig() {
         pairs.add(new Pair<>(KEY_SECOND_HAND, (Object) 0)); //1 enabled
         pairs.add(new Pair<>(KEY_BLUETOOTH_ALERT, (Object) 0)); //1 silent, 2 weak, up to 5
         pairs.add(new Pair<>(KEY_TEMPERATURE_FORMAT, (Object) 1)); //0 fahrenheit
-        pairs.add(new Pair<>(KEY_LOCATION_SERVICE, (Object) 2)); //0 uto, 1 manual
+        pairs.add(new Pair<>(KEY_LOCATION_SERVICE, (Object) 2)); //0 auto, 1 manual
         pairs.add(new Pair<>(KEY_SIDEBAR_LOCATION, (Object) 1)); //0 right
         pairs.add(new Pair<>(KEY_COLOR_SELECTION, (Object) 1)); //1 custom
         pairs.add(new Pair<>(KEY_MAIN_COLOR, (Object) PebbleColor.Black));
@@ -115,4 +115,4 @@ public GBDeviceEvent[] pushMessage() {
         return new GBDeviceEvent[]{sendBytes};
         */
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -323,7 +323,7 @@ public void run() {
                                 writeInstallApp(mPebbleProtocol.encodeInstallFirmwareComplete());
                                 finishInstall(false);
                             } else if (mPBWReader.isLanguage() || mPebbleProtocol.mFwMajor >= 3) {
-                                finishInstall(false); // FIXME: dont know yet how to detect success
+                                finishInstall(false); // FIXME: don't know yet how to detect success
                             } else {
                                 writeInstallApp(mPebbleProtocol.encodeAppRefresh(mInstallSlot));
                             }
@@ -753,4 +753,4 @@ private enum PebbleAppInstallState {
         UPLOAD_COMPLETE,
         APP_REFRESH,
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -808,7 +808,7 @@ private byte[] encodeTimelinePin(UUID uuid, int timestamp, short duration, int i
         buf.putShort(duration);
         buf.put((byte) 0x02); // type (0x02 = pin)
         buf.putShort((short) 0x0001); // flags 0x0001 = ?
-        buf.put((byte) 0x01); // layout was (0x02 = pin?), 0x01 needed for subtitle aber seems to do no harm if there isn't one
+        buf.put((byte) 0x01); // layout was (0x02 = pin?), 0x01 needed for subtitle but seems to do no harm if there isn't one
 
         buf.putShort((short) attributes_length); // total length of all attributes and actions in bytes
         buf.put(attributes_count);
@@ -1373,7 +1373,7 @@ public byte[] encodeSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {
         ByteBuffer buf = ByteBuffer.allocate(12 + replies_length);
         buf.order(ByteOrder.LITTLE_ENDIAN);
         buf.putInt(0x00000000); // unknown
-        buf.put((byte) 0x00); // atributes count?
+        buf.put((byte) 0x00); // attributes count?
         buf.put((byte) 0x01); // actions count?
 
         // action

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/ble/PebbleGATTServer.java
Patch:
@@ -113,10 +113,10 @@ public void onCharacteristicWriteRequest(BluetoothDevice device, int requestId,
         if (command == 0x02) { // some request?
             LOG.info("got command 0x02");
             if (value.length > 1) {
-                sendDataToPebble(new byte[]{0x03, 0x19, 0x19}); // no we dont know what that means
+                sendDataToPebble(new byte[]{0x03, 0x19, 0x19}); // no we don't know what that means
                 mPebbleLESupport.createPipedInputReader(); // FIXME: maybe not here
             } else {
-                sendDataToPebble(new byte[]{0x03}); // no we dont know what that means
+                sendDataToPebble(new byte[]{0x03}); // no we don't know what that means
             }
         } else if (command == 0) { // normal package
             LOG.info("got PPoGATT package serial = " + serial + " sending ACK");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -128,7 +128,7 @@ public static String writeScreenshot(GBDeviceEventScreenshot screenshot, String
             // file header
             headerbuf.put((byte) 'B');
             headerbuf.put((byte) 'M');
-            headerbuf.putInt(0); // size in bytes (unconpressed = 0)
+            headerbuf.putInt(0); // size in bytes (uncompressed = 0)
             headerbuf.putInt(0); // reserved
             headerbuf.putInt(FILE_HEADER_SIZE + INFO_HEADER_SIZE + screenshot.clut.length);
 
@@ -139,7 +139,7 @@ public static String writeScreenshot(GBDeviceEventScreenshot screenshot, String
             headerbuf.putShort((short) 1); // planes
             headerbuf.putShort((short) screenshot.bpp);
             headerbuf.putInt(0); // compression
-            headerbuf.putInt(0); // length of pixeldata in byte (uncompressed=0)
+            headerbuf.putInt(0); // length of pixeldata in bytes (uncompressed=0)
             headerbuf.putInt(0); // pixels per meter (x)
             headerbuf.putInt(0); // pixels per meter (y)
             headerbuf.putInt(screenshot.clut.length / 4); // number of colors in CLUT

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/FirmwareTest.java
Patch:
@@ -164,7 +164,7 @@ private static File getFirmwareDir() {
         String path = System.getProperty("MiFirmwareDir");
         Assert.assertNotNull("You must run this test with -DMiFirmwareDir=/path/to/directory/with/miband/firmwarefiles/", path);
         File dir = new File(path);
-        Assert.assertTrue("System property MiFirmwareDir should point to a directory continaing the Mi Band firmware files", dir.isDirectory());
+        Assert.assertTrue("System property MiFirmwareDir should point to a directory containing the Mi Band firmware files", dir.isDirectory());
         return dir;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -298,7 +298,7 @@ public String getAppLocalstoragePrefix() {
 
         @JavascriptInterface
         public String getWatchToken() {
-            //specification says: A string that is is guaranteed to be identical for each Pebble device for the same app across different mobile devices. The token is unique to your app and cannot be used to track Pebble devices across applications. see https://developer.pebble.com/docs/js/Pebble/
+            //specification says: A string that is guaranteed to be identical for each Pebble device for the same app across different mobile devices. The token is unique to your app and cannot be used to track Pebble devices across applications. see https://developer.pebble.com/docs/js/Pebble/
             return "gb" + appUuid.toString();
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -148,7 +148,7 @@ public interface DeviceCoordinator {
     boolean supportsScreenshots();
 
     /**
-     * Returns true if this device/coordinator supports settig alarms.
+     * Returns true if this device/coordinator supports setting alarms.
      *
      * @return
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -265,7 +265,7 @@ public class MiBand2Service {
      */
     public static final byte AUTH_RESPONSE = 0x10;
     /**
-     * Receeived in response to any authentication requests (byte 2 in the byte[] value.
+     * Received in response to any authentication requests (byte 2 in the byte[] value.
      * 0x01 means success.
      */
     public static final byte AUTH_SUCCESS = 0x01;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/VibrationProfile.java
Patch:
@@ -50,7 +50,7 @@ public static VibrationProfile getProfile(String id, short repeat) {
      *
      * @param id            the ID, used as preference key.
      * @param onOffSequence a sequence of alternating on and off durations, in milliseconds
-     * @param repeat        how ofoften the sequence shall be repeated
+     * @param repeat        how often the sequence shall be repeated
      */
     public VibrationProfile(String id, int[] onOffSequence, short repeat) {
         this.id = id;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -181,8 +181,8 @@ public void onStartInstall(GBDevice device) {
     }
 
     public boolean isValid() {
-        // always pretend it is valid, as we cant know yet about hw/fw version
+        // always pretend it is valid, as we can't know yet about hw/fw version
         return true;
     }
 
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -232,7 +232,7 @@ public PBWReader(Uri uri, Context context, String platform) throws FileNotFoundE
                     byte[] tmp_buf = new byte[32];
                     ByteBuffer buf = ByteBuffer.wrap(buffer);
                     buf.order(ByteOrder.LITTLE_ENDIAN);
-                    buf.getLong();  // header, TODO: verifiy
+                    buf.getLong();  // header, TODO: verify
                     buf.getShort(); // struct version, TODO: verify
                     mSdkVersion = buf.getShort();
                     mAppVersion = buf.getShort();
@@ -342,4 +342,4 @@ public int getIconId() {
     public JSONObject getAppKeysJSON() {
         return mAppKeys;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -57,7 +57,7 @@ public void onReceive(Context context, Intent intent) {
         notificationSpec.type = NotificationType.GENERIC_EMAIL;
 
         /*
-         * there seems to be no way to specify the the uri in the where clause.
+         * there seems to be no way to specify the uri in the where clause.
          * If we do so, we just get the newest message, not the one requested.
          * So, we will just search our message and match the uri manually.
          * It should be the first one returned by the query in most cases,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -257,7 +257,7 @@ public String getStateString() {
     }
 
     /**
-     * for simplicity the user wont see all internal states, just connecting -> connected
+     * for simplicity the user won't see all internal states, just connecting -> connected
      * instead of connecting->connected->initializing->initialized
      * Set simple to true to get this behavior.
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -644,7 +644,7 @@ public void onDestroy() {
 
         setDeviceSupport(null);
         NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
-        nm.cancel(GB.NOTIFICATION_ID); // need to do this because the updated notification wont be cancelled when service stops
+        nm.cancel(GB.NOTIFICATION_ID); // need to do this because the updated notification won't be cancelled when service stops
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEOperation.java
Patch:
@@ -59,15 +59,15 @@ protected void prePerform() throws IOException {
      * Subclasses must implement this. When invoked, #prePerform() returned
      * successfully.
      * Note that subclasses HAVE TO call #operationFinished() when the entire
-     * opreation is done (successful or not).
+     * operation is done (successful or not).
      *
      * @throws IOException
      */
     protected abstract void doPerform() throws IOException;
 
     /**
      * You MUST call this method when the operation has finished, either
-     * successfull or unsuccessfully.
+     * successfully or unsuccessfully.
      *
      * @throws IOException
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEAction.java
Patch:
@@ -25,7 +25,7 @@ public BtLEAction(BluetoothGattCharacteristic characteristic) {
     }
 
     /**
-     * Returns true if this actions expects an (async) result which must
+     * Returns true if this action expects an (async) result which must
      * be waited for, before continuing with other actions.
      * <p/>
      * This is needed because the current Bluedroid stack can only deal

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -148,7 +148,7 @@ public boolean connect() {
         }
         synchronized (mGattMonitor) {
             if (mBluetoothGatt != null) {
-                // Tribal knowledge says you're better off not reusing existing BlueoothGatt connections,
+                // Tribal knowledge says you're better off not reusing existing BluetoothGatt connections,
                 // so create a new one.
                 LOG.info("connect() requested -- disconnecting previous connection: " + mGbDevice.getName());
                 disconnect();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/WriteAction.java
Patch:
@@ -30,7 +30,7 @@ public WriteAction(BluetoothGattCharacteristic characteristic, byte[] value) {
     public boolean run(BluetoothGatt gatt) {
         BluetoothGattCharacteristic characteristic = getCharacteristic();
         int properties = characteristic.getProperties();
-        //TODO: expectsResult should return false if PROPERTY_WRITE_NO_RESPONSE is true, but this yelds to timing issues
+        //TODO: expectsResult should return false if PROPERTY_WRITE_NO_RESPONSE is true, but this leads to timing issues
         if ((properties & BluetoothGattCharacteristic.PROPERTY_WRITE) > 0 || ((properties & BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE) > 0)) {
             return writeValue(gatt, characteristic, value);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/alertnotification/AlertCategory.java
Patch:
@@ -29,7 +29,7 @@ public enum AlertCategory {
 
     /**
      * Returns the numerical ID value of this category
-     * To be used as uin8 value
+     * To be used as uint8 value
      * @return the uint8 value for this category
      */
     public int getId() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/alertnotification/SupportedNewAlertCategory.java
Patch:
@@ -17,7 +17,7 @@ public SupportedNewAlertCategory(int id) {
 
     /**
      * Returns the numerical ID value of this category
-     * To be used as uin8 value
+     * To be used as uint8 value
      * @return the uint8 value for this category
      */
     public int getId() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/heartrate/BodySensorLocation.java
Patch:
@@ -7,7 +7,7 @@
  */
 public enum BodySensorLocation {
     Other(0),
-    Checst(1),
+    Chest(1),
     Wrist(2),
     Finger(3),
     Hand(4),

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerPebStyle.java
Patch:
@@ -56,7 +56,7 @@ private byte[] encodePebStyleConfig() {
         pairs.add(new Pair<>(KEY_SECOND_HAND, (Object) 0)); //1 enabled
         pairs.add(new Pair<>(KEY_BLUETOOTH_ALERT, (Object) 0)); //1 silent, 2 weak, up to 5
         pairs.add(new Pair<>(KEY_TEMPERATURE_FORMAT, (Object) 1)); //0 fahrenheit
-        pairs.add(new Pair<>(KEY_LOCATION_SERVICE, (Object) 2)); //0 uto, 1 manual
+        pairs.add(new Pair<>(KEY_LOCATION_SERVICE, (Object) 2)); //0 auto, 1 manual
         pairs.add(new Pair<>(KEY_SIDEBAR_LOCATION, (Object) 1)); //0 right
         pairs.add(new Pair<>(KEY_COLOR_SELECTION, (Object) 1)); //1 custom
         pairs.add(new Pair<>(KEY_MAIN_COLOR, (Object) PebbleColor.Black));
@@ -115,4 +115,4 @@ public GBDeviceEvent[] pushMessage() {
         return new GBDeviceEvent[]{sendBytes};
         */
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -323,7 +323,7 @@ public void run() {
                                 writeInstallApp(mPebbleProtocol.encodeInstallFirmwareComplete());
                                 finishInstall(false);
                             } else if (mPBWReader.isLanguage() || mPebbleProtocol.mFwMajor >= 3) {
-                                finishInstall(false); // FIXME: dont know yet how to detect success
+                                finishInstall(false); // FIXME: don't know yet how to detect success
                             } else {
                                 writeInstallApp(mPebbleProtocol.encodeAppRefresh(mInstallSlot));
                             }
@@ -753,4 +753,4 @@ private enum PebbleAppInstallState {
         UPLOAD_COMPLETE,
         APP_REFRESH,
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -808,7 +808,7 @@ private byte[] encodeTimelinePin(UUID uuid, int timestamp, short duration, int i
         buf.putShort(duration);
         buf.put((byte) 0x02); // type (0x02 = pin)
         buf.putShort((short) 0x0001); // flags 0x0001 = ?
-        buf.put((byte) 0x01); // layout was (0x02 = pin?), 0x01 needed for subtitle aber seems to do no harm if there isn't one
+        buf.put((byte) 0x01); // layout was (0x02 = pin?), 0x01 needed for subtitle but seems to do no harm if there isn't one
 
         buf.putShort((short) attributes_length); // total length of all attributes and actions in bytes
         buf.put(attributes_count);
@@ -1373,7 +1373,7 @@ public byte[] encodeSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {
         ByteBuffer buf = ByteBuffer.allocate(12 + replies_length);
         buf.order(ByteOrder.LITTLE_ENDIAN);
         buf.putInt(0x00000000); // unknown
-        buf.put((byte) 0x00); // atributes count?
+        buf.put((byte) 0x00); // attributes count?
         buf.put((byte) 0x01); // actions count?
 
         // action

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/ble/PebbleGATTServer.java
Patch:
@@ -113,10 +113,10 @@ public void onCharacteristicWriteRequest(BluetoothDevice device, int requestId,
         if (command == 0x02) { // some request?
             LOG.info("got command 0x02");
             if (value.length > 1) {
-                sendDataToPebble(new byte[]{0x03, 0x19, 0x19}); // no we dont know what that means
+                sendDataToPebble(new byte[]{0x03, 0x19, 0x19}); // no we don't know what that means
                 mPebbleLESupport.createPipedInputReader(); // FIXME: maybe not here
             } else {
-                sendDataToPebble(new byte[]{0x03}); // no we dont know what that means
+                sendDataToPebble(new byte[]{0x03}); // no we don't know what that means
             }
         } else if (command == 0) { // normal package
             LOG.info("got PPoGATT package serial = " + serial + " sending ACK");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -128,7 +128,7 @@ public static String writeScreenshot(GBDeviceEventScreenshot screenshot, String
             // file header
             headerbuf.put((byte) 'B');
             headerbuf.put((byte) 'M');
-            headerbuf.putInt(0); // size in bytes (unconpressed = 0)
+            headerbuf.putInt(0); // size in bytes (uncompressed = 0)
             headerbuf.putInt(0); // reserved
             headerbuf.putInt(FILE_HEADER_SIZE + INFO_HEADER_SIZE + screenshot.clut.length);
 
@@ -139,7 +139,7 @@ public static String writeScreenshot(GBDeviceEventScreenshot screenshot, String
             headerbuf.putShort((short) 1); // planes
             headerbuf.putShort((short) screenshot.bpp);
             headerbuf.putInt(0); // compression
-            headerbuf.putInt(0); // length of pixeldata in byte (uncompressed=0)
+            headerbuf.putInt(0); // length of pixeldata in bytes (uncompressed=0)
             headerbuf.putInt(0); // pixels per meter (x)
             headerbuf.putInt(0); // pixels per meter (y)
             headerbuf.putInt(screenshot.clut.length / 4); // number of colors in CLUT

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/FirmwareTest.java
Patch:
@@ -164,7 +164,7 @@ private static File getFirmwareDir() {
         String path = System.getProperty("MiFirmwareDir");
         Assert.assertNotNull("You must run this test with -DMiFirmwareDir=/path/to/directory/with/miband/firmwarefiles/", path);
         File dir = new File(path);
-        Assert.assertTrue("System property MiFirmwareDir should point to a directory continaing the Mi Band firmware files", dir.isDirectory());
+        Assert.assertTrue("System property MiFirmwareDir should point to a directory containing the Mi Band firmware files", dir.isDirectory());
         return dir;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/ble/PebbleGATTServer.java
Patch:
@@ -40,6 +40,9 @@ boolean initialize() {
         BluetoothManager bluetoothManager = (BluetoothManager) mContext.getSystemService(Context.BLUETOOTH_SERVICE);
 
         mBluetoothGattServer = bluetoothManager.openGattServer(mContext, this);
+        if (mBluetoothGattServer == null) {
+            return false;
+        }
 
         BluetoothGattService pebbleGATTService = new BluetoothGattService(SERVER_SERVICE, BluetoothGattService.SERVICE_TYPE_PRIMARY);
         pebbleGATTService.addCharacteristic(new BluetoothGattCharacteristic(READ_CHARACTERISTICS, BluetoothGattCharacteristic.PROPERTY_READ, BluetoothGattCharacteristic.PERMISSION_READ));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -100,7 +100,7 @@ public Class<? extends Activity> getPrimaryActivity() {
 
     @Override
     public SampleProvider<? extends AbstractActivitySample> getSampleProvider(GBDevice device, DaoSession session) {
-        return new MiBand2SampleProvider(device, session);
+        return new MiBandSampleProvider(device, session);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -345,6 +345,9 @@ private static boolean isEqual(DeviceAttributes attr, GBDevice gbDevice) {
         if (!Objects.equals(attr.getFirmwareVersion2(), gbDevice.getFirmwareVersion2())) {
             return false;
         }
+        if (!Objects.equals(attr.getVolatileIdentifier(), gbDevice.getVolatileAddress())) {
+            return false;
+        }
         return true;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -156,7 +156,7 @@ private boolean hasBusyDevice() {
                 return true;
             }
         }
-        return true;
+        return false;
     }
 
     public static void setupLogging(boolean enabled) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -192,6 +192,7 @@ private void setupWeekStepsChart() {
         y.setTextColor(CHART_TEXT_COLOR);
         y.setDrawZeroLine(true);
         y.setSpaceBottom(0);
+        y.setAxisMinimum(0);
 
         y.setEnabled(true);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/FetchActivityOperation.java
Patch:
@@ -173,7 +173,7 @@ private void handleActivityNotif(byte[] value) {
             return;
         }
 
-        if (value.length == 17) {
+        if ((value.length % 4) == 1) {
             if ((byte) (lastPacketCounter + 1) == value[0] ) {
                 lastPacketCounter++;
                 bufferActivityData(value);
@@ -182,7 +182,6 @@ private void handleActivityNotif(byte[] value) {
                 handleActivityFetchFinish();
                 return;
             }
-            handleActivityMetadata(value);
         } else {
             GB.toast("Error fetching activity data, unexpected package length: " + value.length, Toast.LENGTH_LONG, GB.ERROR);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleCoordinator.java
Patch:
@@ -42,7 +42,7 @@ public DeviceType getDeviceType() {
 
     @Override
     public Class<? extends Activity> getPairingActivity() {
-        return null;
+        return PebblePairingActivity.class;
     }
 
     public Class<? extends Activity> getPrimaryActivity() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/GadgetbridgeUpdate_14.java
Patch:
@@ -15,7 +15,7 @@ public class GadgetbridgeUpdate_14 implements DBUpdateScript {
     public void upgradeSchema(SQLiteDatabase db) {
         if (!DBHelper.existsColumn(PebbleHealthActivitySampleDao.TABLENAME, PebbleHealthActivitySampleDao.Properties.HeartRate.columnName, db)) {
             String ADD_COLUMN_HEART_RATE = "ALTER TABLE " + PebbleHealthActivitySampleDao.TABLENAME + " ADD COLUMN "
-                    + PebbleHealthActivitySampleDao.Properties.HeartRate.columnName + " INTEGER NOT NULL;";
+                    + PebbleHealthActivitySampleDao.Properties.HeartRate.columnName + " INTEGER NOT NULL DEFAULT 0;";
             db.execSQL(ADD_COLUMN_HEART_RATE);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -297,6 +297,9 @@ public class MiBand2Service {
     public static final byte[] COMMAND_ENABLE_HR_SLEEP_MEASUREMENT = new byte[]{0x15, 0x00, 0x01};
     public static final byte[] COMMAND_DISABLE_HR_SLEEP_MEASUREMENT = new byte[]{0x15, 0x00, 0x00};
 
+    public static final byte[] COMMAND_ENABLE_DISPLAY_ON_LIFT_WRIST = new byte[]{0x06, 0x05, 0x00, 0x01};
+    public static final byte[] COMMAND_DISABLE_DISPLAY_ON_LIFT_WRIST = new byte[]{0x06, 0x05, 0x00, 0x00};
+
 
     static {
         MIBAND_DEBUG = new HashMap<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -18,8 +18,7 @@ public final class MiBandConst {
     public static final String PREF_MIBAND_USE_HR_FOR_SLEEP_DETECTION = "mi_hr_sleep_detection";
 	public static final String PREF_MIBAND_DEVICE_TIME_OFFSET_HOURS = "mi_device_time_offset_hours";
 	public static final String PREF_MI2_DATEFORMAT = "mi2_dateformat";
-
-    public static final String PREF_TRY_SMS = "mi_try_sms";
+	public static final String PREF_MI2_ACTIVATE_DISPLAY_ON_LIFT = "mi2_activate_display_on_lift_wrist";
 
 
     public static final String ORIGIN_INCOMING_CALL = "incoming_call";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AbstractAppManagerFragment.java
Patch:
@@ -310,7 +310,6 @@ public boolean onMenuItemClick(MenuItem item) {
 
     public boolean onContextItemSelected(MenuItem item, GBDeviceApp selectedApp) {
         switch (item.getItemId()) {
-            case R.id.appmanager_health_deactivate:
             case R.id.appmanager_app_delete_cache:
                 String baseName;
                 try {
@@ -354,6 +353,9 @@ public boolean onContextItemSelected(MenuItem item, GBDeviceApp selectedApp) {
             case R.id.appmanager_health_activate:
                 GBApplication.deviceService().onInstallApp(Uri.parse("fake://health"));
                 return true;
+            case R.id.appmanager_health_deactivate:
+                GBApplication.deviceService().onAppDelete(selectedApp.getUUID());
+                return true;
             case R.id.appmanager_app_configure:
                 GBApplication.deviceService().onAppStart(selectedApp.getUUID(), true);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband2/operations/InitOperation.java
Patch:
@@ -101,6 +101,7 @@ public boolean onCharacteristicChanged(BluetoothGatt gatt,
                     TransactionBuilder builder = createTransactionBuilder("Sending the encrypted random key to the band");
                     builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
                     getSupport().requestDeviceInfo(builder);
+                    getSupport().enableFurtherNotifications(builder, true);
                     getSupport().setInitialized(builder);
                     getSupport().performImmediately(builder);
                 } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1645,6 +1645,9 @@ byte[] encodeApplicationMessagePush(short endpoint, UUID uuid, ArrayList<Pair<In
             } else if (pair.second instanceof byte[]) {
                 length += ((byte[]) pair.second).length;
             }
+            else {
+                LOG.warn("unknown type: " + pair.second.getClass().toString());
+            }
         }
 
         ByteBuffer buf = ByteBuffer.allocate(LENGTH_PREFIX + length);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBand2Service.java
Patch:
@@ -16,8 +16,8 @@ public class MiBand2Service {
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC0 = UUID.fromString("00000000-0000-3512-2118-0009af100700");
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC1 = UUID.fromString("00000001-0000-3512-2118-0009af100700");
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC2 = UUID.fromString("00000002-0000-3512-2118-0009af100700");
-    public static final UUID UUID_UNKNOWN_CHARACTERISTIC3 = UUID.fromString("00000003-0000-3512-2118-0009af100700");
-    public static final UUID UUID_UNKNOWN_CHARACTERISTIC4 = UUID.fromString("00000004-0000-3512-2118-0009af100700"); // Alarm related
+    public static final UUID UUID_UNKNOWN_CHARACTERISTIC3 = UUID.fromString("00000003-0000-3512-2118-0009af100700"); // Alarm related
+    public static final UUID UUID_UNKNOWN_CHARACTERISTIC4 = UUID.fromString("00000004-0000-3512-2118-0009af100700");
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC5 = UUID.fromString("00000005-0000-3512-2118-0009af100700");
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC6 = UUID.fromString("00000006-0000-3512-2118-0009af100700");
     public static final UUID UUID_UNKNOWN_CHARACTERISTIC7 = UUID.fromString("00000007-0000-3512-2118-0009af100700");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -66,4 +66,6 @@ public interface EventHandler {
     void onAddCalendarEvent(CalendarEventSpec calendarEventSpec);
 
     void onDeleteCalendarEvent(byte type, long id);
+
+    void onTestNewFunction();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -48,6 +48,7 @@ public interface DeviceService extends EventHandler {
     String ACTION_HEARTRATE_MEASUREMENT = PREFIX + ".action.hr_measurement";
     String ACTION_ADD_CALENDAREVENT = PREFIX + ".action.add_calendarevent";
     String ACTION_DELETE_CALENDAREVENT = PREFIX + ".action.delete_calendarevent";
+    String ACTION_TEST_NEW_FUNCTION = PREFIX + ".action.test_new_function";
     String EXTRA_DEVICE_ADDRESS = "device_address";
     String EXTRA_NOTIFICATION_BODY = "notification_body";
     String EXTRA_NOTIFICATION_FLAGS = "notification_flags";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBand2Support.java
Patch:
@@ -1206,5 +1206,7 @@ private void sendCalendarEvents() {
         }
     }
 
-
+    @Override
+    public void onTestNewFunction() {
+    }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -1212,5 +1212,7 @@ private void sendCalendarEvents() {
         }
     }
 
-
+    @Override
+    public void onTestNewFunction() {
+    }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vibratissimo/VibratissimoSupport.java
Patch:
@@ -269,7 +269,10 @@ public boolean onCharacteristicRead(BluetoothGatt gatt,
 
         LOG.info("Unhandled characteristic read: " + characteristicUUID);
         return false;
+    }
 
+    @Override
+    public void onTestNewFunction() {
 
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/GBDeviceProtocol.java
Patch:
@@ -94,6 +94,8 @@ public byte[] encodeDeleteCalendarEvent(byte type, long id) {
         return null;
     }
 
+    public byte[] encodeTestNewFunction() { return null; }
+
     public GBDeviceEvent[] decodeResponse(byte[] responseData) {
         return null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPreferencesActivity.java
Patch:
@@ -93,7 +93,8 @@ protected String[] getPreferenceKeysWithSummary() {
         prefKeys.add(getNotificationPrefKey(VIBRATION_COUNT, ORIGIN_INCOMING_CALL));
 
         for (NotificationType type : NotificationType.values()) {
-            prefKeys.add(type.getGenericType());
+            String key = type.getGenericType();
+            prefKeys.add(getNotificationPrefKey(VIBRATION_COUNT, key));
         }
 
         return prefKeys.toArray(new String[0]);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPreferencesActivity.java
Patch:
@@ -57,7 +57,7 @@ public boolean onPreferenceChange(Preference preference, Object newVal) {
 
     private void addTryListeners() {
         for (final NotificationType type : NotificationType.values()) {
-            String prefKey = "mi_try_" + type.getFixedValue();
+            String prefKey = "mi_try_" + type.getGenericType();
             final Preference tryPref = findPreference(prefKey);
             if (tryPref != null) {
                 tryPref.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -54,7 +54,7 @@ public void onReceive(Context context, Intent intent) {
 
         NotificationSpec notificationSpec = new NotificationSpec();
         notificationSpec.id = -1;
-        notificationSpec.type = NotificationType.EMAIL;
+        notificationSpec.type = NotificationType.GENERIC_EMAIL;
 
         /*
          * there seems to be no way to specify the the uri in the where clause.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/SMSReceiver.java
Patch:
@@ -31,7 +31,7 @@ public void onReceive(Context context, Intent intent) {
 
         NotificationSpec notificationSpec = new NotificationSpec();
         notificationSpec.id = -1;
-        notificationSpec.type = NotificationType.SMS;
+        notificationSpec.type = NotificationType.GENERIC_SMS;
 
         Bundle bundle = intent.getExtras();
         if (bundle != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -310,14 +310,14 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 notificationSpec.id = intent.getIntExtra(EXTRA_NOTIFICATION_ID, -1);
                 notificationSpec.flags = intent.getIntExtra(EXTRA_NOTIFICATION_FLAGS, 0);
                 notificationSpec.sourceName = intent.getStringExtra(EXTRA_NOTIFICATION_SOURCENAME);
-                if (notificationSpec.type == NotificationType.SMS && notificationSpec.phoneNumber != null) {
+                if (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null) {
                     notificationSpec.sender = getContactDisplayNameByNumber(notificationSpec.phoneNumber);
 
                     notificationSpec.id = mRandom.nextInt(); // FIXME: add this in external SMS Receiver?
                     GBApplication.getIDSenderLookup().add(notificationSpec.id, notificationSpec.phoneNumber);
                 }
                 if (((notificationSpec.flags & NotificationSpec.FLAG_WEARABLE_REPLY) > 0)
-                        || (notificationSpec.type == NotificationType.SMS && notificationSpec.phoneNumber != null)) {
+                        || (notificationSpec.type == NotificationType.GENERIC_SMS && notificationSpec.phoneNumber != null)) {
                     // NOTE: maybe not where it belongs
                     if (prefs.getBoolean("pebble_force_untested", false)) {
                         // I would rather like to save that as an array in ShadredPreferences

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -279,7 +279,7 @@ public void onNotificationPosted(StatusBarNotification sbn) {
                 notificationSpec.type = NotificationType.FACEBOOK;
                 break;
             default:
-                notificationSpec.type = NotificationType.UNDEFINED;
+                notificationSpec.type = NotificationType.UNKNOWN;
                 break;
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -58,7 +58,7 @@ public void onReceive(Context context, Intent intent) {
         }
 
         if (notificationSpec.title != null) {
-            notificationSpec.type = NotificationType.UNDEFINED;
+            notificationSpec.type = NotificationType.UNKNOWN;
             String sender = intent.getStringExtra("sender");
             if ("Conversations".equals(sender)) {
                 notificationSpec.type = NotificationType.CHAT;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum NotificationType {
 
-    UNDEFINED,
+    UNKNOWN,
 
     CHAT,
     EMAIL,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBand2Support.java
Patch:
@@ -578,7 +578,7 @@ public void onNotification(NotificationSpec notificationSpec) {
                 task = "chat message received";
                 alertLevel = MiBand2Service.ALERT_LEVEL_MESSAGE;
                 break;
-            case UNDEFINED:
+            case UNKNOWN:
             default:
                 task = "generic notification received";
                 alertLevel = MiBand2Service.ALERT_LEVEL_VIBRATE_ONLY;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -554,7 +554,7 @@ public void onNotification(NotificationSpec notificationSpec) {
             case FACEBOOK:
                 performPreferredNotification("chat message received", origin, null);
                 break;
-            case UNDEFINED:
+            case UNKNOWN:
             default:
                 performPreferredNotification("generic notification received", origin, null);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -735,10 +735,10 @@ public void setxLabels(ArrayList<String> xLabels) {
 
         @Override
         public String getFormattedValue(float value, AxisBase axis) {
-            if (xLabels == null) {
+            int index = (int) value;
+            if (xLabels == null || index >= xLabels.size()) {
                 return String.valueOf(value);
             }
-            int index = (int) value;
             return xLabels.get(index);
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepChartFragment.java
Patch:
@@ -100,6 +100,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         mSleepAmountChart.setData(mcd.getPieData().getPieData());
 
         mActivityChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
+        xIndexFormatter.setxLabels(mcd.getChartsData().getXLabels());
         mActivityChart.setData(mcd.getChartsData().getCombinedData());
     }
 
@@ -165,8 +166,8 @@ private void setupActivityChart() {
         y.setDrawGridLines(false);
 //        y.setDrawLabels(false);
         // TODO: make fixed max value optional
-        y.setAxisMaxValue(1f);
-        y.setAxisMinValue(0);
+        y.setAxisMaximum(1f);
+        y.setAxisMinimum(0);
         y.setDrawTopYLabelEntry(false);
         y.setTextColor(CHART_TEXT_COLOR);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -194,6 +194,8 @@ private void setupWeekStepsChart() {
         y.setDrawGridLines(false);
         y.setDrawTopYLabelEntry(false);
         y.setTextColor(CHART_TEXT_COLOR);
+        y.setDrawZeroLine(true);
+        y.setSpaceBottom(0);
 
         y.setEnabled(true);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivitySleepChartFragment.java
Patch:
@@ -119,6 +119,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         DefaultChartsData dcd = (DefaultChartsData) chartsData;
         mChart.getLegend().setTextColor(LEGEND_TEXT_COLOR);
         mChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
+        xIndexFormatter.setxLabels(dcd.getXLabels());
         mChart.setData(dcd.getCombinedData());
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -71,6 +71,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         mWeekStepsChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
         mWeekStepsChart.setData(mcd.getWeekBeforeStepsData().getCombinedData());
         mWeekStepsChart.getLegend().setEnabled(false);
+        xIndexLabelFormatter.setxLabels(mcd.getWeekBeforeStepsData().getXLabels());
     }
 
     @Override
@@ -97,7 +98,6 @@ private DefaultChartsData refreshWeekBeforeSteps(DBHandler db, CombinedChart com
         BarDataSet set = new BarDataSet(entries, "");
         set.setColor(akActivity.color);
 
-        xIndexLabelFormatter.setxLabels(labels);
         BarData barData = new BarData(set);
         barData.setValueTextColor(Color.GRAY); //prevent tearing other graph elements with the black text. Another approach would be to hide the values cmpletely with data.setDrawValues(false);
 
@@ -107,7 +107,7 @@ private DefaultChartsData refreshWeekBeforeSteps(DBHandler db, CombinedChart com
 
         CombinedData combinedData = new CombinedData();
         combinedData.setData(barData);
-        return new DefaultChartsData(combinedData);
+        return new DefaultChartsData(combinedData, labels);
     }
 
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -726,7 +726,7 @@ public CombinedData getCombinedData() {
         }
     }
 
-    private static class XIndexLabelFormatter implements IAxisValueFormatter {
+    protected static class XIndexLabelFormatter implements IAxisValueFormatter {
 
         private ArrayList<String> xLabels;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -17,6 +17,7 @@
 import java.util.Set;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
+import nodomain.freeyourgadget.gadgetbridge.GBException;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
@@ -243,7 +244,7 @@ private List<GBDevice> getBondedDevices(BluetoothAdapter btAdapter) {
      * @param device
      * @return
      */
-    public boolean removeBond(GBDevice device) {
+    public boolean removeBond(GBDevice device) throws GBException {
         BluetoothAdapter defaultAdapter = BluetoothAdapter.getDefaultAdapter();
         if (defaultAdapter != null) {
             BluetoothDevice remoteDevice = defaultAdapter.getRemoteDevice(device.getAddress());
@@ -253,8 +254,7 @@ public boolean removeBond(GBDevice device) {
                     Object result = method.invoke(remoteDevice, (Object[]) null);
                     return Boolean.TRUE.equals(result);
                 } catch (Exception e) {
-                    LOG.warn("Error removing bond to device: " + device);
-                    return false;
+                    throw new GBException("Error removing bond to device: " + device, e);
                 }
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -372,10 +372,9 @@ public void onClick(DialogInterface dialog, int which) {
 
     private void deleteDevice(final GBDevice gbDevice) {
         LOG.info("will try to delete device: " + gbDevice.getName());
-        if (gbDevice.isConnected() || gbDevice.isConnected()) {
+        if (gbDevice.isConnected() || gbDevice.isConnecting()) {
             GBApplication.deviceService().disconnect();
         }
-        GBApplication.deviceService().disconnect();
         try (DBHandler dbHandler = GBApplication.acquireDB()) {
             DaoSession session = dbHandler.getDaoSession();
             Device device = DBHelper.getDevice(gbDevice, session);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivitySleepChartFragment.java
Patch:
@@ -13,6 +13,7 @@
 import com.github.mikephil.charting.components.LegendEntry;
 import com.github.mikephil.charting.components.XAxis;
 import com.github.mikephil.charting.components.YAxis;
+import com.github.mikephil.charting.data.CombinedData;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -117,6 +118,7 @@ protected ChartsData refreshInBackground(ChartsHost chartsHost, DBHandler db, GB
     protected void updateChartsnUIThread(ChartsData chartsData) {
         DefaultChartsData dcd = (DefaultChartsData) chartsData;
         mChart.getLegend().setTextColor(LEGEND_TEXT_COLOR);
+        mChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
         mChart.setData(dcd.getCombinedData());
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepChartFragment.java
Patch:
@@ -99,6 +99,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         mSleepAmountChart.setCenterText(mcd.getPieData().getTotalSleep());
         mSleepAmountChart.setData(mcd.getPieData().getPieData());
 
+        mActivityChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
         mActivityChart.setData(mcd.getChartsData().getCombinedData());
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -67,6 +67,7 @@ protected void updateChartsnUIThread(ChartsData chartsData) {
         mTodayStepsChart.setCenterText(NumberFormat.getNumberInstance(mLocale).format(mcd.getDaySteps().totalSteps));
         mTodayStepsChart.setData(mcd.getDaySteps().data);
 
+        mWeekStepsChart.setData(null); // workaround for https://github.com/PhilJay/MPAndroidChart/issues/2317
         mWeekStepsChart.setData(mcd.getWeekBeforeStepsData().getCombinedData());
         mWeekStepsChart.getLegend().setEnabled(false);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -89,6 +89,7 @@ public boolean isChartDirty() {
         return mChartDirty;
     }
 
+    @Override
     public abstract String getTitle();
 
     public boolean supportsHeartrate(GBDevice device) {
@@ -548,11 +549,11 @@ protected boolean isValidHeartRateValue(int value) {
     protected abstract void setupLegend(Chart chart);
 
     protected BarEntry createBarEntry(float value, int index) {
-        return new BarEntry(value, index);
+        return new BarEntry(index, value);
     }
 
     protected Entry createLineEntry(float value, int index) {
-        return new Entry(value, index);
+        return new Entry(index, value);
     }
 
     protected BarDataSet createActivitySet(List<BarEntry> values, List<Integer> colors, String label) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -120,7 +120,7 @@ public void onScanResult(int callbackType, ScanResult result) {
                         //logMessageContent(result.getScanRecord().getBytes());
                         handleDeviceFound(result.getDevice(), (short) result.getRssi());
                     } catch (NullPointerException e) {
-                        e.printStackTrace();
+                        LOG.warn("Error handling scan result", e);
                     }
                 }
             };

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -57,6 +57,8 @@ public interface EventHandler {
 
     void onFindDevice(boolean start);
 
+    void onSetConstantVibration(int integer);
+
     void onScreenshotReq();
 
     void onEnableHeartRateSleepSupport(boolean enable);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -34,6 +34,7 @@ public interface DeviceService extends EventHandler {
     String ACTION_FETCH_ACTIVITY_DATA = PREFIX + ".action.fetch_activity_data";
     String ACTION_DISCONNECT = PREFIX + ".action.disconnect";
     String ACTION_FIND_DEVICE = PREFIX + ".action.find_device";
+    String ACTION_SET_CONSTANT_VIBRATION = PREFIX + ".action.set_constant_vibration";
     String ACTION_SET_ALARMS = PREFIX + ".action.set_alarms";
     String ACTION_ENABLE_REALTIME_STEPS = PREFIX + ".action.enable_realtime_steps";
     String ACTION_REALTIME_STEPS = PREFIX + ".action.realtime_steps";
@@ -53,6 +54,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_NOTIFICATION_TITLE = "notification_title";
     String EXTRA_NOTIFICATION_TYPE = "notification_type";
     String EXTRA_FIND_START = "find_start";
+    String EXTRA_VIBRATION_INTENSITY = "vibration_intensity";
     String EXTRA_CALL_COMMAND = "call_command";
     String EXTRA_CALL_PHONENUMBER = "call_phonenumber";
     String EXTRA_CANNEDMESSAGES = "cannedmessages";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/profiles/battery/BatteryInfoProfile.java
Patch:
@@ -27,7 +27,7 @@ public class BatteryInfoProfile<T extends AbstractBTLEDeviceSupport> extends Abs
     public static final UUID SERVICE_UUID = GattService.UUID_SERVICE_BATTERY_SERVICE;
 
     public static final UUID UUID_CHARACTERISTIC_BATTERY_LEVEL = GattCharacteristic.UUID_CHARACTERISTIC_BATTERY_LEVEL;
-    private BatteryInfo batteryInfo;
+    private final BatteryInfo batteryInfo = new BatteryInfo();
 
     public BatteryInfoProfile(T support) {
         super(support);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/vibratissimo/VibratissimoSupport.java
Patch:
@@ -57,6 +57,7 @@ public VibratissimoSupport() {
         addSupportedService(GattService.UUID_SERVICE_GENERIC_ACCESS);
         addSupportedService(GattService.UUID_SERVICE_GENERIC_ATTRIBUTE);
         addSupportedService(GattService.UUID_SERVICE_DEVICE_INFORMATION);
+        addSupportedService(GattService.UUID_SERVICE_BATTERY_SERVICE);
         addSupportedService(UUID.fromString("00001523-1212-efde-1523-785feabcd123"));
 
         deviceInfoProfile = new DeviceInfoProfile<>(this);
@@ -88,6 +89,7 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
         builder.add(new SetDeviceStateAction(getDevice(), GBDevice.State.INITIALIZING, getContext()));
         requestDeviceInfo(builder);
         setInitialized(builder);
+        batteryInfoProfile.requestBatteryInfo(builder);
         return builder;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -12,6 +12,7 @@
 public interface DeviceService extends EventHandler {
     String PREFIX = "nodomain.freeyourgadget.gadgetbridge.devices";
 
+    String ACTION_MIBAND2_AUTH = PREFIX + ".action.miban2_auth";
     String ACTION_START = PREFIX + ".action.start";
     String ACTION_CONNECT = PREFIX + ".action.connect";
     String ACTION_NOTIFICATION = PREFIX + ".action.notification";
@@ -83,6 +84,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_CALENDAREVENT_DURATION = "calendarevent_duration";
     String EXTRA_CALENDAREVENT_TITLE = "calendarevent_title";
     String EXTRA_CALENDAREVENT_DESCRIPTION = "calendarevent_description";
+    String EXTRA_MIBAND2_AUTH_BYTE = "miband2_auth_byte";
 
     void start();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -981,9 +981,7 @@ private void handleDeviceInfo(byte[] value, int status) {
             mDeviceInfo = new DeviceInfo(value);
             mDeviceInfo.setTest1AHRMode(MI_1A_HR_FW_UPDATE_TEST_MODE_ENABLED);
             if (getDeviceInfo().supportsHeartrate()) {
-                getDevice().addDeviceInfo(new GenericItem(
-                        getContext().getString(R.string.DEVINFO_HR_VER),
-                        MiBandFWHelper.formatFirmwareVersion(mDeviceInfo.getHeartrateFirmwareVersion())));
+                getDevice().setFirmwareVersion2(MiBandFWHelper.formatFirmwareVersion(mDeviceInfo.getHeartrateFirmwareVersion()));
             }
             LOG.warn("Device info: " + mDeviceInfo);
             versionCmd.hwVersion = mDeviceInfo.getHwVersion();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -266,6 +266,8 @@ private static void ensureUserAttributes(User user, ActivityUser prefsUser, DaoS
         attributes.setValidFromUTC(now.getTime());
         attributes.setHeightCM(prefsUser.getHeightCm());
         attributes.setWeightKG(prefsUser.getWeightKg());
+        attributes.setSleepGoalHPD(prefsUser.getSleepDuration());
+        attributes.setStepsGoalSPD(prefsUser.getStepsGoal());
         attributes.setUserId(user.getId());
         session.getUserAttributesDao().insert(attributes);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMisfit.java
Patch:
@@ -83,7 +83,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                         Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                         for (int i = 0; i < samples; i++) {
                             short sample = buf.getShort();
-                            misfitSamples[i] = new PebbleMisfitSample(timestamp + i * 60, userId, deviceId, sample & 0xffff);
+                            misfitSamples[i] = new PebbleMisfitSample(timestamp + i * 60, deviceId, userId, sample & 0xffff);
                             misfitSamples[i].setProvider(sampleProvider);
                             int steps = misfitSamples[i].getSteps();
                             totalSteps += steps;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMorpheuz.java
Patch:
@@ -114,7 +114,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                                 Long userId = DBHelper.getUser(db.getDaoSession()).getId();
                                 Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                                 PebbleMorpheuzSampleProvider sampleProvider = new PebbleMorpheuzSampleProvider(getDevice(), db.getDaoSession());
-                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(recording_base_timestamp + index * 600, userId, deviceId, intensity);
+                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(recording_base_timestamp + index * 600, deviceId, userId, intensity);
                                 sample.setProvider(sampleProvider);
                                 sampleProvider.addGBActivitySample(sample);
                             } catch (Exception e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthSteps.java
Patch:
@@ -86,7 +86,7 @@ private void store(StepsRecord[] stepsRecords) {
                 StepsRecord stepsRecord = stepsRecords[j];
                 samples[j] = new PebbleHealthActivitySample(
                         stepsRecord.timestamp,
-                        userId, deviceId,
+                        deviceId, userId,
                         stepsRecord.getRawData(),
                         stepsRecord.intensity,
                         stepsRecord.steps

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractSampleProvider.java
Patch:
@@ -33,7 +33,7 @@ protected AbstractSampleProvider(GBDevice device, DaoSession session) {
         mSession = session;
     }
 
-    public GBDevice getmDevice() {
+    public GBDevice getDevice() {
         return mDevice;
     }
 
@@ -81,7 +81,7 @@ protected List<T> getGBActivitySamples(int timestamp_from, int timestamp_to, int
         }
         QueryBuilder<T> qb = getSampleDao().queryBuilder();
         Property timestampProperty = getTimestampSampleProperty();
-        Device dbDevice = DBHelper.findDevice(getmDevice(), getSession());
+        Device dbDevice = DBHelper.findDevice(getDevice(), getSession());
         if (dbDevice == null) {
             // no device, no samples
             return Collections.emptyList();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleHealthSampleProvider.java
Patch:
@@ -36,7 +36,7 @@ public PebbleHealthSampleProvider(GBDevice device, DaoSession session) {
     public List<PebbleHealthActivitySample> getAllActivitySamples(int timestamp_from, int timestamp_to) {
         List<PebbleHealthActivitySample> samples = super.getGBActivitySamples(timestamp_from, timestamp_to, ActivityKind.TYPE_ALL);
 
-        Device dbDevice = DBHelper.findDevice(getmDevice(), getSession());
+        Device dbDevice = DBHelper.findDevice(getDevice(), getSession());
         if (dbDevice == null) {
             // no device, no samples
             return Collections.emptyList();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -62,6 +62,7 @@ public Class<? extends Activity> getPairingActivity() {
         return MiBandPairingActivity.class;
     }
 
+    @Override
     public Class<? extends Activity> getPrimaryActivity() {
         return ChartsActivity.class;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -371,7 +371,7 @@ private void deleteActivityDatabase() {
                 .setPositiveButton("Delete", new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
-                        if (GBApplication.deleteActivityDatabase()) {
+                        if (GBApplication.deleteActivityDatabase(DebugActivity.this)) {
                             GB.toast(DebugActivity.this, "Activity database successfully deleted.", Toast.LENGTH_SHORT, GB.INFO);
                         } else {
                             GB.toast(DebugActivity.this, "Activity database deletion failed.", Toast.LENGTH_SHORT, GB.INFO);

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -112,6 +112,7 @@ private static Entity addDevice(Schema schema, Entity deviceAttributes) {
         device.addStringProperty("manufacturer").notNull();
         device.addStringProperty("identifier").notNull().unique().javaDocGetterAndSetter("The fixed identifier, i.e. MAC address of the device.");
         device.addIntProperty("type").notNull().javaDocGetterAndSetter("The DeviceType key, i.e. the GBDevice's type.");
+        device.addStringProperty("model").javaDocGetterAndSetter("An optional model, further specifying the kind of device-");
         Property deviceId = deviceAttributes.addLongProperty("deviceId").notNull().getProperty();
         // sorted by the from-date, newest first
         Property deviceAttributesSortProperty = getPropertyByName(deviceAttributes, VALID_FROM_UTC);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -302,6 +302,7 @@ private static Device createDevice(DaoSession session, GBDevice gbDevice) {
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(gbDevice);
         device.setManufacturer(coordinator.getManufacturer());
         device.setType(gbDevice.getType().getKey());
+        device.setModel(gbDevice.getModel());
         session.getDeviceDao().insert(device);
 
         return device;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -211,8 +211,8 @@ public String getActiveWatchInfo() {
             JSONObject wi = new JSONObject();
             try {
                 wi.put("firmware", mGBDevice.getFirmwareVersion());
-                wi.put("platform", PebbleUtils.getPlatformName(mGBDevice.getHardwareVersion()));
-                wi.put("model", PebbleUtils.getModel(mGBDevice.getHardwareVersion()));
+                wi.put("platform", PebbleUtils.getPlatformName(mGBDevice.getModel()));
+                wi.put("model", PebbleUtils.getModel(mGBDevice.getModel()));
                 //TODO: use real info
                 wi.put("language", "en");
             } catch (JSONException e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/appmanager/AbstractAppManagerFragment.java
Patch:
@@ -112,7 +112,7 @@ protected List<GBDeviceApp> getSystemApps() {
         systemApps.add(new GBDeviceApp(UUID.fromString("67a32d95-ef69-46d4-a0b9-854cc62f97f9"), "Alarms (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
         systemApps.add(new GBDeviceApp(UUID.fromString("18e443ce-38fd-47c8-84d5-6d0c775fbe55"), "Watchfaces (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
 
-        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getHardwareVersion()))) {
+        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getModel()))) {
             systemApps.add(new GBDeviceApp(UUID.fromString("0863fc6a-66c5-4f62-ab8a-82ed00a98b5d"), "Send Text (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
             systemApps.add(new GBDeviceApp(PebbleProtocol.UUID_PEBBLE_HEALTH, "Health (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
         }
@@ -188,7 +188,7 @@ else if (baseName.equals("4dab81a6-d2fc-458a-992c-7a1f3b96a970")) {
                             cachedAppList.add(new GBDeviceApp(UUID.fromString("cf1e816a-9db0-4511-bbb8-f60c48ca8fac"), "Golf (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
                         }
                         */
-                        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getHardwareVersion()))) {
+                        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getModel()))) {
                             if (baseName.equals(PebbleProtocol.UUID_PEBBLE_HEALTH.toString())) {
                                 cachedAppList.add(new GBDeviceApp(PebbleProtocol.UUID_PEBBLE_HEALTH, "Health (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
                                 continue;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapter.java
Patch:
@@ -161,8 +161,8 @@ public void justifyListViewHeightBasedOnChildren(ListView listView) {
     private String getUniqueDeviceName(GBDevice device) {
         String deviceName = device.getName();
         if (!isUniqueDeviceName(device, deviceName)) {
-            if (device.getHardwareVersion() != null) {
-                deviceName = deviceName + " " + device.getHardwareVersion();
+            if (device.getModel() != null) {
+                deviceName = deviceName + " " + device.getModel();
                 if (!isUniqueDeviceName(device, deviceName)) {
                     deviceName = deviceName + " " + device.getShortAddress();
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -180,7 +180,7 @@ public static int getReservedAlarmSlots(String miBandAddress) throws IllegalArgu
 
     @Override
     public boolean supportsHeartRateMeasurement(GBDevice device) {
-        String hwVersion = device.getHardwareVersion();
+        String hwVersion = device.getModel();
         return isMi1S(hwVersion) || isMiPro(hwVersion);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -52,7 +52,7 @@ public void validateInstallation(InstallActivity installActivity, GBDevice devic
             return;
         }
 
-        String platformName = PebbleUtils.getPlatformName(device.getHardwareVersion());
+        String platformName = PebbleUtils.getPlatformName(device.getModel());
 
         try {
             mPBWReader = new PBWReader(mUri, mContext, platformName);
@@ -75,7 +75,7 @@ public void validateInstallation(InstallActivity installActivity, GBDevice devic
             installItem.setIcon(R.drawable.ic_firmware);
 
             String hwRevision = mPBWReader.getHWRevision();
-            if (hwRevision != null && hwRevision.equals(device.getHardwareVersion())) {
+            if (hwRevision != null && hwRevision.equals(device.getModel())) {
                 installItem.setName(mContext.getString(R.string.pbw_installhandler_pebble_firmware, ""));
                 installItem.setDetails(mContext.getString(R.string.pbwinstallhandler_correct_hw_revision));
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -152,7 +152,7 @@ public void handleGBDeviceEvent(GBDeviceEventVersionInfo infoEvent) {
             return;
         }
         gbDevice.setFirmwareVersion(infoEvent.fwVersion);
-        gbDevice.setHardwareVersion(infoEvent.hwVersion);
+        gbDevice.setModel(infoEvent.hwVersion);
         gbDevice.sendDeviceUpdateIntent(context);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/AbstractMi1SFirmwareInfo.java
Patch:
@@ -13,7 +13,7 @@ public AbstractMi1SFirmwareInfo(@NonNull byte[] wholeFirmwareBytes) {
 
     @Override
     public boolean isGenerallyCompatibleWith(GBDevice device) {
-        return MiBandConst.MI_1S.equals(device.getHardwareVersion());
+        return MiBandConst.MI_1S.equals(device.getModel());
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/Mi1AFirmwareInfo.java
Patch:
@@ -31,7 +31,7 @@ protected int getSupportedMajorVersion() {
 
     @Override
     public boolean isGenerallyCompatibleWith(GBDevice device) {
-        String hwVersion = device.getHardwareVersion();
+        String hwVersion = device.getModel();
         return MiBandConst.MI_1A.equals(hwVersion);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/Mi1FirmwareInfo.java
Patch:
@@ -31,7 +31,7 @@ protected int getSupportedMajorVersion() {
 
     @Override
     public boolean isGenerallyCompatibleWith(GBDevice device) {
-        String hwVersion = device.getHardwareVersion();
+        String hwVersion = device.getModel();
         return MiBandConst.MI_1.equals(hwVersion);
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/Mi1SFirmwareInfo.java
Patch:
@@ -30,7 +30,7 @@ private Mi1SFirmwareInfo(byte[] wholeFirmwareBytes) {
 
     @Override
     public boolean isGenerallyCompatibleWith(GBDevice device) {
-        return MiBandConst.MI_1S.equals(device.getHardwareVersion());
+        return MiBandConst.MI_1S.equals(device.getModel());
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -591,7 +591,7 @@ public void installApp(Uri uri, int appId) {
             return;
         }
 
-        String platformName = PebbleUtils.getPlatformName(gbDevice.getHardwareVersion());
+        String platformName = PebbleUtils.getPlatformName(gbDevice.getModel());
 
         try {
             mPBWReader = new PBWReader(uri, getContext(), platformName);

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/database/EntitiesTest.java
Patch:
@@ -100,7 +100,7 @@ public void testDBHelper() {
 //        DBHelper dbHelper = new DBHelper(RuntimeEnvironment.application);
         GBDevice dummyGBDevice = new GBDevice("00:00:00:00:00", "Testie", DeviceType.TEST);
         dummyGBDevice.setFirmwareVersion("1.2.3");
-        dummyGBDevice.setHardwareVersion("4.0");
+        dummyGBDevice.setModel("4.0");
         Device device = DBHelper.getDevice(dummyGBDevice, daoSession);
         assertNotNull(device);
         assertEquals("00:00:00:00:00", device.getIdentifier());

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -17,7 +17,6 @@
 
 import de.greenrobot.daogenerator.DaoGenerator;
 import de.greenrobot.daogenerator.Entity;
-import de.greenrobot.daogenerator.Index;
 import de.greenrobot.daogenerator.Property;
 import de.greenrobot.daogenerator.Schema;
 
@@ -159,12 +158,13 @@ private static Entity addPebbleHealthActivityKindOverlay(Schema schema, Entity u
 
         activityOverlay.addIntProperty("timestampFrom").notNull().primaryKey();
         activityOverlay.addIntProperty("timestampTo").notNull().primaryKey();
+        activityOverlay.addIntProperty("rawKind").notNull().primaryKey();
         Property deviceId = activityOverlay.addLongProperty("deviceId").primaryKey().getProperty();
         activityOverlay.addToOne(device, deviceId);
 
         Property userId = activityOverlay.addLongProperty("userId").getProperty();
         activityOverlay.addToOne(user, userId);
-        activityOverlay.addIntProperty("rawKind").notNull();
+        activityOverlay.addByteArrayProperty("rawPebbleHealthData");
 
         return activityOverlay;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthOverlayData.java
Patch:
@@ -72,7 +72,7 @@ private void store(OverlayRecord[] overlayRecords) {
 
             List<PebbleHealthActivityOverlay> overlayList = new ArrayList<>();
             for (OverlayRecord overlayRecord : overlayRecords) {
-                overlayList.add(new PebbleHealthActivityOverlay(overlayRecord.timestampStart, overlayRecord.timestampStart + overlayRecord.durationSeconds, deviceId, userId, overlayRecord.type)); //TODO: consider if "-1" is what we really want
+                overlayList.add(new PebbleHealthActivityOverlay(overlayRecord.timestampStart, overlayRecord.timestampStart + overlayRecord.durationSeconds, overlayRecord.type, deviceId, userId, null));
             }
             overlayDao.insertOrReplaceInTx(overlayList);
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthSleep.java
Patch:
@@ -71,7 +71,7 @@ private void store(SleepRecord[] sleepRecords) {
 
             List<PebbleHealthActivityOverlay> overlayList = new ArrayList<>();
             for (SleepRecord sleepRecord : sleepRecords) {
-                overlayList.add(new PebbleHealthActivityOverlay(sleepRecord.bedTimeStart, sleepRecord.bedTimeEnd, deviceId, userId, sleepRecord.type)); //TODO: consider if "-1" is what we really want
+                overlayList.add(new PebbleHealthActivityOverlay(sleepRecord.bedTimeStart, sleepRecord.bedTimeEnd, sleepRecord.type, deviceId, userId, null));
             }
             overlayDao.insertOrReplaceInTx(overlayList);
         } catch (Exception ex) {

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -112,6 +112,7 @@ private static Entity addDevice(Schema schema, Entity deviceAttributes) {
         device.addStringProperty("name").notNull();
         device.addStringProperty("manufacturer").notNull();
         device.addStringProperty("identifier").notNull().unique().javaDocGetterAndSetter("The fixed identifier, i.e. MAC address of the device.");
+        device.addIntProperty("type").notNull().javaDocGetterAndSetter("The DeviceType key, i.e. the GBDevice's type.");
         Property deviceId = deviceAttributes.addLongProperty("deviceId").notNull().getProperty();
         // sorted by the from-date, newest first
         Property deviceAttributesSortProperty = getPropertyByName(deviceAttributes, VALID_FROM_UTC);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -302,6 +302,7 @@ private static Device createDevice(DaoSession session, GBDevice gbDevice) {
         device.setName(gbDevice.getName());
         DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(gbDevice);
         device.setManufacturer(coordinator.getManufacturer());
+        device.setType(gbDevice.getType().getKey());
         session.getDeviceDao().insert(device);
 
         return device;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceType.java
Patch:
@@ -7,5 +7,6 @@ public enum DeviceType {
     UNKNOWN,
     PEBBLE,
     TEST,
-    MIBAND
+    MIBAND,
+    MIBAND2
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -328,7 +328,6 @@ private void flushActivityDataHolder() {
                     }
 
                     samples[minutes] = new MiBandActivitySample(
-                            null,
                             timestampInSeconds,
                             intensity & 0xff,
                             steps & 0xff,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMisfit.java
Patch:
@@ -83,7 +83,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                         Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                         for (int i = 0; i < samples; i++) {
                             short sample = buf.getShort();
-                            misfitSamples[i] = new PebbleMisfitSample(null, timestamp + i * 60, userId, deviceId, sample & 0xffff);
+                            misfitSamples[i] = new PebbleMisfitSample(timestamp + i * 60, userId, deviceId, sample & 0xffff);
                             misfitSamples[i].setProvider(sampleProvider);
                             int steps = misfitSamples[i].getSteps();
                             totalSteps += steps;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMorpheuz.java
Patch:
@@ -114,7 +114,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                                 Long userId = DBHelper.getUser(db.getDaoSession()).getId();
                                 Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                                 PebbleMorpheuzSampleProvider sampleProvider = new PebbleMorpheuzSampleProvider(getDevice(), db.getDaoSession());
-                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(null, recording_base_timestamp + index * 600, userId, deviceId, intensity);
+                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(recording_base_timestamp + index * 600, userId, deviceId, intensity);
                                 sample.setProvider(sampleProvider);
                                 sampleProvider.addGBActivitySample(sample);
                             } catch (Exception e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthOverlayData.java
Patch:
@@ -72,7 +72,7 @@ private void store(OverlayRecord[] overlayRecords) {
 
             List<PebbleHealthActivityOverlay> overlayList = new ArrayList<>();
             for (OverlayRecord overlayRecord : overlayRecords) {
-                overlayList.add(new PebbleHealthActivityOverlay(null, userId, deviceId, overlayRecord.timestampStart, overlayRecord.timestampStart + overlayRecord.durationSeconds - 1, overlayRecord.type)); //TODO: consider if "-1" is what we really want
+                overlayList.add(new PebbleHealthActivityOverlay(userId, deviceId, overlayRecord.timestampStart, overlayRecord.timestampStart + overlayRecord.durationSeconds - 1, overlayRecord.type)); //TODO: consider if "-1" is what we really want
             }
             overlayDao.insertOrReplaceInTx(overlayList);
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthSleep.java
Patch:
@@ -71,7 +71,7 @@ private void store(SleepRecord[] sleepRecords) {
 
             List<PebbleHealthActivityOverlay> overlayList = new ArrayList<>();
             for (SleepRecord sleepRecord : sleepRecords) {
-                overlayList.add(new PebbleHealthActivityOverlay(null, userId, deviceId, sleepRecord.bedTimeStart, sleepRecord.bedTimeEnd - 1, sleepRecord.type)); //TODO: consider if "-1" is what we really want
+                overlayList.add(new PebbleHealthActivityOverlay(userId, deviceId, sleepRecord.bedTimeStart, sleepRecord.bedTimeEnd - 1, sleepRecord.type)); //TODO: consider if "-1" is what we really want
             }
             overlayDao.insertOrReplaceInTx(overlayList);
         } catch (Exception ex) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealthSteps.java
Patch:
@@ -82,7 +82,6 @@ private void store(StepsRecord[] stepsRecords) {
             for (int j = 0; j < stepsRecords.length; j++) {
                 StepsRecord stepsRecord = stepsRecords[j];
                 samples[j] = new PebbleHealthActivitySample(
-                        null,
                         stepsRecord.timestamp,
                         userId, deviceId,
                         null, // raw data here

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -196,7 +196,7 @@ private static void ensureUserAttributes(User user, ActivityUser prefsUser, DaoS
     private static boolean hasUpToDateUserAttributes(List<UserAttributes> userAttributes, ActivityUser prefsUser) {
         for (UserAttributes attr : userAttributes) {
             if (!isValidNow(attr)) {
-                return false;
+                continue;
             }
             if (isEqual(attr, prefsUser)) {
                 return true;
@@ -311,7 +311,7 @@ private static void ensureDeviceAttributes(Device device, GBDevice gbDevice, Dao
     private static boolean hasUpToDateDeviceAttributes(List<DeviceAttributes> deviceAttributes, GBDevice gbDevice) {
         for (DeviceAttributes attr : deviceAttributes) {
             if (!isValidNow(attr)) {
-                return false;
+                continue;
             }
             if (isEqual(attr, gbDevice)) {
                 return true;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMisfit.java
Patch:
@@ -83,7 +83,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                         Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                         for (int i = 0; i < samples; i++) {
                             short sample = buf.getShort();
-                            misfitSamples[i] = new PebbleMisfitSample(null, timestamp + i * 60, sample & 0xffff, userId, deviceId);
+                            misfitSamples[i] = new PebbleMisfitSample(null, timestamp + i * 60, userId, deviceId, sample & 0xffff);
                             misfitSamples[i].setProvider(sampleProvider);
                             int steps = misfitSamples[i].getSteps();
                             totalSteps += steps;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMorpheuz.java
Patch:
@@ -114,7 +114,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                                 Long userId = DBHelper.getUser(db.getDaoSession()).getId();
                                 Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                                 PebbleMorpheuzSampleProvider sampleProvider = new PebbleMorpheuzSampleProvider(getDevice(), db.getDaoSession());
-                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(null, recording_base_timestamp + index * 600, intensity, userId, deviceId);
+                                PebbleMorpheuzSample sample = new PebbleMorpheuzSample(null, recording_base_timestamp + index * 600, userId, deviceId, intensity);
                                 sample.setProvider(sampleProvider);
                                 sampleProvider.addGBActivitySample(sample);
                             } catch (Exception e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleHealthSampleProvider.java
Patch:
@@ -48,7 +48,7 @@ public List<PebbleHealthActivitySample> getAllActivitySamples(int timestamp_from
 
         for (PebbleHealthActivityOverlay overlay : overlayRecords) {
             for (PebbleHealthActivitySample sample : samples) {
-                if (overlay.getTimestampFrom() >= sample.getTimestamp() && overlay.getTimestampTo() <= sample.getTimestamp()) {
+                if (overlay.getTimestampFrom() <= sample.getTimestamp() && sample.getTimestamp() <= overlay.getTimestampTo()) {
                     // patch in the raw kind
                     sample.setRawKind(overlay.getRawKind());
                 }

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -34,7 +34,7 @@ public class GBDaoGenerator {
     private static final String VALID_BY_DATE = MODEL_PACKAGE + ".ValidByDate";
 
     public static void main(String[] args) throws Exception {
-        Schema schema = new Schema(10, MAIN_PACKAGE + ".entities");
+        Schema schema = new Schema(11, MAIN_PACKAGE + ".entities");
 
         addActivityDescription(schema);
 
@@ -164,7 +164,6 @@ private static Entity addPebbleMorpheuzActivitySample(Schema schema, Entity user
         Entity activitySample = addEntity(schema, "PebbleMorpheuzSample");
         addCommonActivitySampleProperties("AbstractActivitySample", activitySample, user, device);
         activitySample.addIntProperty("rawIntensity").notNull();
-        activitySample.addIntProperty("rawKind").notNull();
         addCommonActivitySampleProperties2(activitySample, user, device);
         return activitySample;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -90,7 +90,7 @@ private DeviceSupport createBTDeviceSupport(GBDevice gbDevice) throws GBExceptio
                     return deviceSupport;
                 }
             } catch (Exception e) {
-                throw new GBException(mContext.getString(R.string.cannot_connect_bt_address_invalid_, e));
+                throw new GBException(mContext.getString(R.string.cannot_connect_bt_address_invalid_), e);
             }
         }
         return null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMisfit.java
Patch:
@@ -83,7 +83,7 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                         Long deviceId = DBHelper.getDevice(getDevice(), db.getDaoSession()).getId();
                         for (int i = 0; i < samples; i++) {
                             short sample = buf.getShort();
-                            misfitSamples[i] = new PebbleMisfitSample(null, sample & 0xffff, timestamp + i * 60, userId, deviceId);
+                            misfitSamples[i] = new PebbleMisfitSample(null, timestamp + i * 60, sample & 0xffff, userId, deviceId);
                             misfitSamples[i].setProvider(sampleProvider);
                             int steps = misfitSamples[i].getSteps();
                             totalSteps += steps;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -109,7 +109,9 @@ protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
         enableNotifications(builder, true)
                 .setLowLatency(builder)
                 .readDate(builder) // without reading the data, we get sporadic connection problems, especially directly after turning on BT
-                .pair(builder)
+// this is apparently not needed anymore, and actually causes problems when bonding is not used/does not work
+// so we simply not use the UUID_PAIR characteristic.
+//                .pair(builder)
                 .requestDeviceInfo(builder)
                 .sendUserInfo(builder)
                 .checkAuthenticationNeeded(builder, getDevice())

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -10,15 +10,13 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.charts.ChartsActivity;
-import nodomain.freeyourgadget.gadgetbridge.database.DBHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.entities.AbstractActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.entities.DaoSession;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
-import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.model.ActivityUser;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.util.Prefs;
@@ -42,7 +40,7 @@ public boolean supports(GBDeviceCandidate candidate) {
         // and a heuristic
         try {
             if (isHealthWearable(candidate.getDevice())) {
-                return candidate.getName().toUpperCase().startsWith(MiBandConst.MI_GENERAL_NAME_PREFIX.toUpperCase());
+                return candidate.getDevice().getName().toUpperCase().startsWith(MiBandConst.MI_GENERAL_NAME_PREFIX.toUpperCase());
             }
         } catch (Exception ex) {
             LOG.error("unable to check device support", ex);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleCoordinator.java
Patch:
@@ -23,7 +23,7 @@ public PebbleCoordinator() {
 
     @Override
     public boolean supports(GBDeviceCandidate candidate) {
-        return candidate.getName().startsWith("Pebble");
+        return candidate.getDevice().getName().startsWith("Pebble");
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -44,7 +44,7 @@ private static class SimpleSetSummaryOnChangeListener implements Preference.OnPr
         @Override
         public boolean onPreferenceChange(Preference preference, Object value) {
             if (preference instanceof EditTextPreference) {
-                if (((EditTextPreference) preference).getEditText().getKeyListener().getInputType() == InputType.TYPE_CLASS_NUMBER) {
+                if ((((EditTextPreference) preference).getEditText().getKeyListener().getInputType() & InputType.TYPE_CLASS_NUMBER) != 0) {
                     if ("".equals(String.valueOf(value))) {
                         // reject empty numeric input
                         return false;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -82,7 +82,7 @@ public void onReceive(Context context, Intent intent) {
     };
 
     private void refreshBusyState(GBDevice dev) {
-        if (dev.isBusy()) {
+        if (dev != null && dev.isBusy()) {
             swipeLayout.setRefreshing(true);
         } else {
             boolean wasBusy = swipeLayout.isRefreshing();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -102,8 +102,8 @@ private void refreshBusyState(GBDevice dev) {
             swipeLayout.setRefreshing(true);
         } else {
             boolean wasBusy = swipeLayout.isRefreshing();
+            swipeLayout.setRefreshing(false);
             if (wasBusy) {
-                swipeLayout.setRefreshing(false);
                 LocalBroadcastManager.getInstance(this).sendBroadcast(new Intent(REFRESH));
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/AbstractMiBandOperation.java
Patch:
@@ -18,6 +18,7 @@ protected AbstractMiBandOperation(MiBandSupport support) {
     @Override
     protected void prePerform() throws IOException {
         super.prePerform();
+        getDevice().setBusyTask("fetch activity data"); // mark as busy quickly to avoid interruptions from the outside
         TransactionBuilder builder = performInitialized("disabling some notifications");
         enableOtherNotifications(builder, false);
         builder.queue(getQueue());
@@ -27,6 +28,7 @@ protected void prePerform() throws IOException {
     protected void operationFinished() {
         operationStatus = OperationStatus.FINISHED;
         if (getDevice() != null && getDevice().isConnected()) {
+            unsetBusy();
             try {
                 TransactionBuilder builder = performInitialized("reenabling disabled notifications");
                 enableOtherNotifications(builder, true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -120,12 +120,13 @@ public void onCreate() {
 
         setupExceptionHandler();
 
+        GB.environment = GBEnvironment.createDeviceEnvironment();
+
         setupDatabase(this);
 
         deviceManager = new DeviceManager(this);
 
         deviceService = createDeviceService();
-        GB.environment = GBEnvironment.createDeviceEnvironment();
 //        mActivityDatabaseHandler = new ActivityDatabaseHandler(context);
         loadBlackList();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -2100,7 +2100,8 @@ public GBDeviceEvent[] decodeResponse(byte[] responseData) {
 
                 versionCmd.fwVersion = new String(tmp).trim();
 
-                mFwMajor = versionCmd.fwVersion.charAt(1);
+                mFwMajor = versionCmd.fwVersion.charAt(1) - 48;
+                LOG.info("Pebble firmware major detected as " + mFwMajor);
 
                 buf.get(tmp, 0, 9);
                 int hwRev = buf.get() + 8;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -317,7 +317,7 @@ public void invoke(final GBDevice device) {
                     return;
                 }
                 try (DBHandler targetHandler = GBApplication.acquireDB()) {
-                    final ProgressDialog progress = ProgressDialog.show(DebugActivity.this, "Importing Activity Data", "Please wait while merging your activity data...", true, false);
+                    final ProgressDialog progress = ProgressDialog.show(DebugActivity.this, "Merging Activity Data", "Please wait while merging your activity data...", true, false);
                     new AsyncTask<Object,ProgressDialog,Object>() {
                         @Override
                         protected Object doInBackground(Object[] params) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -157,7 +157,7 @@ public static boolean isFileLoggingEnabled() {
 
     static void setupDatabase(Context context) {
 //        DaoMaster.DevOpenHelper helper = new DaoMaster.DevOpenHelper(this, "test-db", null);
-        DBOpenHelper helper = new DBOpenHelper(context, "test-db2", null);
+        DBOpenHelper helper = new DBOpenHelper(context, "test-db4", null);
         SQLiteDatabase db = helper.getWritableDatabase();
         DaoMaster daoMaster = new DaoMaster(db);
         if (lockHandler == null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -4,7 +4,6 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.ProgressDialog;
-import android.bluetooth.BluetoothDevice;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -327,7 +326,6 @@ private void launchDiscoveryActivity() {
     @Override
     protected void onDestroy() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mReceiver);
-        unregisterReceiver(mReceiver);
         super.onDestroy();
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHelper.java
Patch:
@@ -383,7 +383,7 @@ private <T extends AbstractActivitySample> void importActivitySamples(SQLiteData
                 }
                 newSamples.add(newSample);
             }
-            sampleProvider.getSampleDao().insertInTx(newSamples, true);
+            sampleProvider.getSampleDao().insertOrReplaceInTx(newSamples, true);
         }
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/receivers/GBMusicControlReceiver.java
Patch:
@@ -69,7 +69,9 @@ public void onReceive(Context context, Intent intent) {
             Intent upIntent = new Intent(Intent.ACTION_MEDIA_BUTTON, null);
             KeyEvent upEvent = new KeyEvent(eventtime, eventtime, KeyEvent.ACTION_UP, keyCode, 0);
             upIntent.putExtra(Intent.EXTRA_KEY_EVENT, upEvent);
-            upIntent.setPackage(audioPlayer);
+            if (!"default".equals(audioPlayer)) {
+                upIntent.setPackage(audioPlayer);
+            }
             context.sendOrderedBroadcast(upIntent, null);
         }
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBActivitySample.java
Patch:
@@ -4,6 +4,9 @@
 import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.util.DateTimeUtils;
 
+/**
+ * Can be removed entirely together with ActivityDatabaseHandler
+ */
 public class GBActivitySample implements ActivitySample {
     private final int timestamp;
     private final SampleProvider provider;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -361,7 +361,7 @@ private MiBandSupport setWearLocation(TransactionBuilder transaction) {
         LOG.info("Attempting to set wear location...");
         BluetoothGattCharacteristic characteristic = getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT);
         if (characteristic != null) {
-            transaction.add(new ConditionalWriteAction() {
+            transaction.add(new ConditionalWriteAction(characteristic) {
                 @Override
                 protected byte[] checkCondition() {
                     if (getDeviceInfo() != null && getDeviceInfo().isAmazFit()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEDeviceSupport.java
Patch:
@@ -147,7 +147,6 @@ public BluetoothGattCharacteristic getCharacteristic(UUID uuid) {
     }
 
     private void gattServicesDiscovered(List<BluetoothGattService> discoveredGattServices) {
-
         if (discoveredGattServices == null) {
             return;
         }
@@ -180,7 +179,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
 
     @Override
     public void onServicesDiscovered(BluetoothGatt gatt) {
-        gattServicesDiscovered(getQueue().getSupportedGattServices());
+        gattServicesDiscovered(gatt.getServices());
         initializeDevice(createTransactionBuilder("Initializing device")).queue(getQueue());
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothConnectReceiver.java
Patch:
@@ -14,7 +14,7 @@
 
 public class BluetoothConnectReceiver extends BroadcastReceiver {
 
-    private static final Logger LOG = LoggerFactory.getLogger(DeviceCommunicationService.class);
+    private static final Logger LOG = LoggerFactory.getLogger(BluetoothConnectReceiver.class);
 
     final DeviceCommunicationService service;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -241,7 +241,7 @@ public class PebbleProtocol extends GBDeviceProtocol {
 
     static final byte LENGTH_UUID = 16;
 
-    static final long GB_UUID_MASK = 0x4742474200L;
+    static final long GB_UUID_MASK = 0x4767744272646700L;
 
     // base is -5
     private static final String[] hwRevisions = {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -55,5 +55,5 @@ public interface EventHandler {
 
     void onAddCalendarEvent(CalendarEventSpec calendarEventSpec);
 
-    void onDeleteCalendarEvent(int type, long id);
+    void onDeleteCalendarEvent(byte type, long id);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -238,7 +238,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
         Intent intent = createIntent().setAction(ACTION_DELETE_CALENDAREVENT)
                 .putExtra(EXTRA_CALENDAREVENT_TYPE, type)
                 .putExtra(EXTRA_CALENDAREVENT_ID, id);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -282,7 +282,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
             case ACTION_ADD_CALENDAREVENT: {
                 CalendarEventSpec calendarEventSpec = new CalendarEventSpec();
                 calendarEventSpec.id = intent.getLongExtra(EXTRA_CALENDAREVENT_ID, -1);
-                calendarEventSpec.type = intent.getIntExtra(EXTRA_CALENDAREVENT_TYPE, -1);
+                calendarEventSpec.type = intent.getByteExtra(EXTRA_CALENDAREVENT_TYPE, (byte) -1);
                 calendarEventSpec.timestamp = intent.getIntExtra(EXTRA_CALENDAREVENT_TIMESTAMP, -1);
                 calendarEventSpec.durationInSeconds = intent.getIntExtra(EXTRA_CALENDAREVENT_DURATION, -1);
                 calendarEventSpec.title = intent.getStringExtra(EXTRA_CALENDAREVENT_TITLE);
@@ -292,7 +292,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
             }
             case ACTION_DELETE_CALENDAREVENT: {
                 long id = intent.getLongExtra(EXTRA_CALENDAREVENT_ID, -1);
-                int type = intent.getIntExtra(EXTRA_CALENDAREVENT_TYPE, -1);
+                byte type = intent.getByteExtra(EXTRA_CALENDAREVENT_TYPE, (byte) -1);
                 mDeviceSupport.onDeleteCalendarEvent(type, id);
                 break;
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/ServiceDeviceSupport.java
Patch:
@@ -279,7 +279,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
         if (checkBusy("delete calendar event")) {
             return;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -389,7 +389,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
         // not supported
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -129,7 +129,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
         if (reconnect()) {
             super.onDeleteCalendarEvent(type, id);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/AbstractSerialDeviceSupport.java
Patch:
@@ -196,7 +196,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
         byte[] bytes = gbDeviceProtocol.encodeDeleteCalendarEvent(type, id);
         sendToDevice(bytes);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/GBDeviceProtocol.java
Patch:
@@ -70,7 +70,7 @@ public byte[] encodeAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
         return null;
     }
 
-    public byte[] encodeDeleteCalendarEvent(int type, long id) {
+    public byte[] encodeDeleteCalendarEvent(byte type, long id) {
         return null;
     }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -137,7 +137,7 @@ public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {
     }
 
     @Override
-    public void onDeleteCalendarEvent(int type, long id) {
+    public void onDeleteCalendarEvent(byte type, long id) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1881,8 +1881,10 @@ private GBDeviceEventSendBytes decodeDatalog(ByteBuffer buf, short length) {
                 if (!mDatalogSessions.containsKey(id)) {
                     if (uuid.equals(UUID_ZERO) && log_tag == 81) {
                         mDatalogSessions.put(id, new DatalogSessionHealthSteps(id, uuid, log_tag, item_type, item_size));
-                    } else if (uuid.equals(UUID_ZERO) && (log_tag == 83 || log_tag == 84)) {
+                    } else if (uuid.equals(UUID_ZERO) && log_tag == 83) {
                         mDatalogSessions.put(id, new DatalogSessionHealthSleep(id, uuid, log_tag, item_type, item_size));
+                    } else if (uuid.equals(UUID_ZERO) && log_tag == 84) {
+                        mDatalogSessions.put(id, new DatalogSessionHealthOverlayData(id, uuid, log_tag, item_type, item_size));
                     } else {
                         mDatalogSessions.put(id, new DatalogSession(id, uuid, log_tag, item_type, item_size));
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -78,6 +78,7 @@ public synchronized PebbleIoThread getDeviceIOThread() {
     private boolean reconnect() {
         if (!isConnected() && useAutoConnect()) {
             if (getDevice().getState() == GBDevice.State.WAITING_FOR_RECONNECT) {
+                gbDeviceIOThread.quit();
                 gbDeviceIOThread.interrupt();
                 gbDeviceIOThread = null;
                 if (!connect()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -1,5 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge;
 
+import android.annotation.TargetApi;
 import android.app.Application;
 import android.app.NotificationManager;
 import android.app.NotificationManager.Policy;
@@ -289,6 +290,7 @@ private static boolean isPrioritySender(int prioritySenders, String number) {
         }
     }
 
+    @TargetApi(Build.VERSION_CODES.M)
     public static boolean isPriorityNumber(int priorityType, String number) {
         NotificationManager.Policy notificationPolicy = notificationManager.getNotificationPolicy();
         if(priorityType == Policy.PRIORITY_CATEGORY_MESSAGES) {
@@ -303,6 +305,7 @@ public static boolean isPriorityNumber(int priorityType, String number) {
         return false;
     }
 
+    @TargetApi(Build.VERSION_CODES.M)
     public static int getGrantedInterruptionFilter() {
         if (prefs.getBoolean("notification_filter", false) && GBApplication.isRunningMarshmallowOrLater()) {
             if (notificationManager.isNotificationPolicyAccessGranted()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.activities;
 
-import android.app.NotificationManager;
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
@@ -10,7 +9,6 @@
 import android.preference.PreferenceCategory;
 import android.support.v4.content.LocalBroadcastManager;
 import android.widget.Toast;
-import android.service.notification.NotificationListenerService;
 
 import java.io.IOException;
 import java.util.List;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.UUID;
 
 import nodomain.freeyourgadget.gadgetbridge.model.Alarm;
+import nodomain.freeyourgadget.gadgetbridge.model.CalendarEventSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.CallSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.MusicSpec;
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
@@ -51,4 +52,6 @@ public interface EventHandler {
     void onScreenshotReq();
 
     void onEnableHeartRateSleepSupport(boolean enable);
+
+    void onAddCalendarEvent(CalendarEventSpec calendarEventSpec);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/UpdateFirmwareOperation.java
Patch:
@@ -288,7 +288,7 @@ private boolean sendFirmwareData(byte[] fwbytes) {
             int firmwareProgress = 0;
 
             TransactionBuilder builder = performInitialized("send firmware packet");
-            if (prefs.getBoolean("mi_low_latency_fw_update", false)) {
+            if (prefs.getBoolean("mi_low_latency_fw_update", true)) {
                 getSupport().setLowLatency(builder);
             }
             for (int i = 0; i < packets; i++) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -179,7 +179,7 @@ private static void addFileLogger(Appender<ILoggingEvent> fileLogger) {
                 root.addAppender(fileLogger);
             }
         } catch (Throwable ex) {
-            Log.e("GBApplication", "Error removing logger FILE appender", ex);
+            Log.e("GBApplication", "Error adding logger FILE appender", ex);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -390,7 +390,8 @@ private void refreshPairedDevices() {
         }
 
         if (connected) {
-            hintTextView.setText(R.string.tap_connected_device_for_app_mananger);
+            DeviceCoordinator coordinator = DeviceHelper.getInstance().getCoordinator(selectedDevice);
+            hintTextView.setText(coordinator.getTapString());
         } else if (!deviceList.isEmpty()) {
             hintTextView.setText(R.string.tap_a_device_to_connect);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/DeviceCoordinator.java
Patch:
@@ -107,4 +107,6 @@ public interface DeviceCoordinator {
      * @return
      */
     boolean supportsAlarmConfiguration();
+
+    int getTapString();
 }

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -115,6 +115,7 @@ private static Entity addPebbleActivitySample(Schema schema, Entity user, Entity
     }
 
     private static void addCommonAcivitySampleProperties(Schema schema, Entity activitySample, Entity user, Entity device) {
+        activitySample.setSuperclass("AbstractActivitySample");
         activitySample.addImport(MODEL_PACKAGE + ".ActivitySample");
         activitySample.addImport(MAIN_PACKAGE + ".devices.SampleProvider");
         activitySample.implementsInterface("ActivitySample");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ConfigureAlarms.java
Patch:
@@ -1,9 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.activities;
 
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.MenuItem;
 import android.widget.ListView;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -10,11 +10,9 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.design.widget.FloatingActionButton;
 import android.support.v4.app.ActivityCompat;
 import android.support.v4.content.ContextCompat;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -2,9 +2,7 @@
 
 import android.app.Activity;
 import android.content.Context;
-import android.content.SharedPreferences;
 import android.net.Uri;
-import android.preference.PreferenceManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -7,11 +7,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
-import android.preference.PreferenceManager;
 import android.support.v4.content.LocalBroadcastManager;
 import android.widget.TextView;
 import android.widget.Toast;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothStateChangeReceiver.java
Patch:
@@ -4,8 +4,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 import android.support.v4.content.LocalBroadcastManager;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -3,11 +3,9 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.PowerManager;
-import android.preference.PreferenceManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -8,12 +8,10 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
 import android.os.PowerManager;
-import android.preference.PreferenceManager;
 import android.service.notification.NotificationListenerService;
 import android.service.notification.StatusBarNotification;
 import android.support.v4.app.NotificationCompat;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -3,9 +3,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.PowerManager;
-import android.preference.PreferenceManager;
 
 import org.json.JSONArray;
 import org.json.JSONException;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PhoneCallReceiver.java
Patch:
@@ -3,8 +3,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 import android.telephony.TelephonyManager;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/SMSReceiver.java
Patch:
@@ -3,10 +3,8 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.PowerManager;
-import android.preference.PreferenceManager;
 import android.telephony.SmsMessage;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/TimeChangeReceiver.java
Patch:
@@ -3,8 +3,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityUser.java
Patch:
@@ -1,8 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.model;
 
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
-
 import java.util.Calendar;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -3,9 +3,7 @@
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.net.Uri;
-import android.preference.PreferenceManager;
 import android.support.v4.content.LocalBroadcastManager;
 import android.widget.Toast;
 
@@ -1033,7 +1031,7 @@ private void sendCalendarEvents() {
             TransactionBuilder builder = performInitialized("Send upcoming events");
             BluetoothGattCharacteristic characteristic = getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT);
 
-            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+            Prefs prefs = GBApplication.getPrefs();
             int availableSlots = prefs.getInt(MiBandConst.PREF_MIBAND_RESERVE_ALARM_FOR_CALENDAR, 0);
 
             if (availableSlots > 0) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -2,9 +2,7 @@
 
 import android.bluetooth.BluetoothGatt;
 import android.bluetooth.BluetoothGattCharacteristic;
-import android.content.SharedPreferences;
 import android.database.sqlite.SQLiteDatabase;
-import android.preference.PreferenceManager;
 import android.widget.Toast;
 
 import org.slf4j.Logger;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -3,8 +3,6 @@
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
 import android.content.Context;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 import android.widget.Toast;
 
 import java.util.ArrayList;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBAlarmListAdapter.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.Collections;
 import java.util.Set;
 
+import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.ConfigureAlarms;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
@@ -152,7 +153,7 @@ private void highlightDay(TextView view, boolean isOn) {
         if (isOn) {
             view.setTextColor(Color.BLUE);
         } else {
-            view.setTextColor(Color.BLACK);
+            view.setTextColor(GBApplication.getTextColor(mContext));
         }
     }
 }

File: GBDaoGenerator/src/nodomain/freeyourgadget/gadgetbridge/daogen/GBDaoGenerator.java
Patch:
@@ -40,7 +40,7 @@ public static void main(String[] args) throws Exception {
 
         addActivitySample(schema, user, device);
 
-        new DaoGenerator().generateAll(schema, "../app/src/main/gen");
+        new DaoGenerator().generateAll(schema, "app/src/main/java");
     }
 
     private static Entity addUserInfo(Schema schema, Entity userAttributes) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -96,8 +96,6 @@ protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
         getDelegate().onPostCreate(savedInstanceState);
 
-        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-
         for (String prefKey : getPreferenceKeysWithSummary()) {
             final Preference pref = findPreference(prefKey);
             if (pref != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppBlacklistActivity.java
Patch:
@@ -53,7 +53,6 @@ public void onReceive(Context context, Intent intent) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_appblacklist);
-        getActionBar().setDisplayHomeAsUpEnabled(true);
 
         final PackageManager pm = getPackageManager();
         sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppManagerActivity.java
Patch:
@@ -134,7 +134,6 @@ protected void onCreate(Bundle savedInstanceState) {
         sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
 
         setContentView(R.layout.activity_appmanager);
-        getActionBar().setDisplayHomeAsUpEnabled(true);
 
         ListView appListView = (ListView) findViewById(R.id.appListView);
         mGBDeviceAppAdapter = new GBDeviceAppAdapter(this, appList);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -81,7 +81,6 @@ public void onReceive(Context context, Intent intent) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_debug);
-        getActionBar().setDisplayHomeAsUpEnabled(true);
 
         IntentFilter filter = new IntentFilter();
         filter.addAction(GBApplication.ACTION_QUIT);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ExternalPebbleJSActivity.java
Patch:
@@ -61,7 +61,6 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         setContentView(R.layout.activity_external_pebble_js);
-        getActionBar().setDisplayHomeAsUpEnabled(true);
 
         WebView myWebView = (WebView) findViewById(R.id.configureWebview);
         myWebView.clearCache(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -113,7 +113,7 @@ private void validateInstallation() {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_appinstaller);
-        getActionBar().setDisplayHomeAsUpEnabled(true);
+
         GBDevice dev = getIntent().getParcelableExtra(GBDevice.EXTRA_DEVICE);
         if (dev != null) {
             device = dev;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -32,6 +32,8 @@ public interface DBHandler {
 
     void changeStoredSamplesType(int timestampFrom, int timestampTo, int kind, SampleProvider provider);
 
+    void changeStoredSamplesType(int timestampFrom, int timestampTo, int fromKind, int toKind, SampleProvider provider);
+
     int fetchLatestTimestamp(SampleProvider provider);
 
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1876,7 +1876,7 @@ private GBDeviceEventSendBytes decodeDatalog(ByteBuffer buf, short length) {
                 int timestamp = buf.getInt();
                 int log_tag = buf.getInt();
                 byte item_type = buf.get();
-                short item_size = buf.get();
+                short item_size = buf.getShort();
                 LOG.info("DATALOG OPENSESSION. id=" + (id & 0xff) + ", App UUID=" + uuid.toString() + ", log_tag=" + log_tag + ", item_type=" + item_type + ", itemSize=" + item_size);
                 if (!mDatalogSessions.containsKey(id)) {
                     if (uuid.equals(UUID_ZERO) && log_tag == 81) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -48,4 +48,5 @@ public interface EventHandler {
 
     void onScreenshotReq();
 
+    void onEnableHeartRateSleepSupport(boolean enable);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -33,6 +33,7 @@ public interface DeviceService extends EventHandler {
     String ACTION_SET_ALARMS = PREFIX + ".action.set_alarms";
     String ACTION_ENABLE_REALTIME_STEPS = PREFIX + ".action.enable_realtime_steps";
     String ACTION_REALTIME_STEPS = PREFIX + ".action.realtime_steps";
+    String ACTION_ENABLE_HEARTRATE_SLEEP_SUPPORT = PREFIX + ".action.enable_heartrate_sleep_support";
     String EXTRA_DEVICE_ADDRESS = "device_address";
     String EXTRA_NOTIFICATION_BODY = "notification_body";
     String EXTRA_NOTIFICATION_FLAGS = "notification_flags";
@@ -58,7 +59,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_URI = "uri";
     String EXTRA_ALARMS = "alarms";
     String EXTRA_PERFORM_PAIR = "perform_pair";
-    String EXTRA_ENABLE_REALTIME_STEPS = "enable_realtime_steps";
+    String EXTRA_BOOLEAN_ENABLE = "enable_realtime_steps";
     String EXTRA_REALTIME_STEPS = "realtime_steps";
     String EXTRA_TIMESTAMP = "timestamp";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/serial/GBDeviceProtocol.java
Patch:
@@ -60,6 +60,8 @@ public byte[] encodeEnableRealtimeSteps(boolean enable) {
         return null;
     }
 
+    public byte[] encodeEnableHeartRateSleepSupport(boolean enable) { return null; }
+
     public GBDeviceEvent[] decodeResponse(byte[] responseData) {
         return null;
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -33,7 +33,7 @@ public boolean onPreferenceChange(Preference preference, Object value) {
         }
 
         public void updateSummary(Preference preference, Object value) {
-            String stringValue = value.toString();
+            String stringValue = String.valueOf(value);
 
             if (preference instanceof ListPreference) {
                 // For list preferences, look up the correct display value in

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/UpdateFirmwareOperation.java
Patch:
@@ -323,8 +323,8 @@ public boolean sendFwInfo() {
                 TransactionBuilder builder = performInitialized("send firmware info");
                 getSupport().setLowLatency(builder);
                 builder.add(new SetDeviceBusyAction(getDevice(), getContext().getString(R.string.updating_firmware), getContext()));
+                builder.add(new FirmwareInfoSentAction()); // Note: *before* actually sending the info, otherwise it's too late!
                 builder.write(getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT), getFirmwareInfo());
-                builder.add(new FirmwareInfoSucceededAction());
                 builder.queue(getQueue());
                 return true;
             } catch (IOException e) {
@@ -440,7 +440,7 @@ public boolean initNextOperation() {
         }
     }
 
-    private class FirmwareInfoSucceededAction extends PlainAction {
+    private class FirmwareInfoSentAction extends PlainAction {
         @Override
         public boolean run(BluetoothGatt gatt) {
             if (isOperationRunning()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppManagerActivity.java
Patch:
@@ -80,7 +80,7 @@ private List<GBDeviceApp> getSystemApps() {
         List<GBDeviceApp> systemApps = new ArrayList<>();
         systemApps.add(new GBDeviceApp(UUID.fromString("4dab81a6-d2fc-458a-992c-7a1f3b96a970"), "Sports (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
         systemApps.add(new GBDeviceApp(UUID.fromString("cf1e816a-9db0-4511-bbb8-f60c48ca8fac"), "Golf (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
-        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getFirmwareVersion()))) {
+        if (mGBDevice != null && !"aplite".equals(PebbleUtils.getPlatformName(mGBDevice.getHardwareVersion()))) {
             systemApps.add(new GBDeviceApp(PebbleProtocol.UUID_PEBBLE_HEALTH, "Health (System)", "Pebble Inc.", "", GBDeviceApp.Type.APP_SYSTEM));
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapter.java
Patch:
@@ -84,6 +84,7 @@ public void onClick(View v) {
                     adapter.addAll(infos);
                     justifyListViewHeightBasedOnChildren(deviceInfoList);
                     deviceInfoList.setVisibility(View.VISIBLE);
+                    deviceInfoList.setFocusable(false);
                 }
             }
         });

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -137,7 +137,7 @@ public void bufferFlushed(int minutes) {
 
     public FetchActivityOperation(MiBandSupport support) {
         super(support);
-        hasExtendedActivityData = support.getDeviceInfo().isMilli1S();
+        hasExtendedActivityData = support.getDeviceInfo().supportsHeartrate();
         activityDataHolderSize = getBytesPerMinuteOfActivityData() * 60 * 4; // 4h
         activityStruct = new ActivityStruct(activityDataHolderSize);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -67,16 +67,15 @@ public void onReceive(Context context, Intent intent) {
 
         try {
             if (c != null) {
-                c.moveToFirst();
-                do {
+                while (c.moveToFirst()) {
                     String uri = c.getString(c.getColumnIndex("uri"));
                     if (uri.equals(uriWanted)) {
                         notificationSpec.sender = c.getString(c.getColumnIndex("senderAddress"));
                         notificationSpec.subject = c.getString(c.getColumnIndex("subject"));
                         notificationSpec.body = c.getString(c.getColumnIndex("preview"));
                         break;
                     }
-                } while (c.moveToNext());
+                }
             }
         } finally {
             if (c != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -34,7 +34,7 @@ public class ActivityDatabaseHandler extends SQLiteOpenHelper implements DBHandl
 
     private static final Logger LOG = LoggerFactory.getLogger(ActivityDatabaseHandler.class);
 
-    private static final int DATABASE_VERSION = 6;
+    private static final int DATABASE_VERSION = 7;
 
     public ActivityDatabaseHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/schema/ActivityDBCreationScript.java
Patch:
@@ -4,6 +4,7 @@
 
 import nodomain.freeyourgadget.gadgetbridge.database.DBHelper;
 
+import static nodomain.freeyourgadget.gadgetbridge.database.DBConstants.KEY_CUSTOM_SHORT;
 import static nodomain.freeyourgadget.gadgetbridge.database.DBConstants.KEY_INTENSITY;
 import static nodomain.freeyourgadget.gadgetbridge.database.DBConstants.KEY_PROVIDER;
 import static nodomain.freeyourgadget.gadgetbridge.database.DBConstants.KEY_STEPS;
@@ -19,6 +20,7 @@ public void createSchema(SQLiteDatabase db) {
                 + KEY_INTENSITY + " SMALLINT,"
                 + KEY_STEPS + " TINYINT,"
                 + KEY_TYPE + " TINYINT,"
+                + KEY_CUSTOM_SHORT + " INT,"
                 + " PRIMARY KEY (" + KEY_TIMESTAMP + "," + KEY_PROVIDER + ") ON CONFLICT REPLACE)" + DBHelper.getWithoutRowId();
         db.execSQL(CREATE_GBACTIVITYSAMPLES_TABLE);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -51,7 +51,7 @@ public interface DeviceService extends EventHandler {
     String EXTRA_MUSIC_TRACK = "music_track";
     String EXTRA_APP_UUID = "app_uuid";
     String EXTRA_APP_START = "app_start";
-    String EXTRA_APP_CONFIG = "app_configt";
+    String EXTRA_APP_CONFIG = "app_config";
     String EXTRA_URI = "uri";
     String EXTRA_ALARMS = "alarms";
     String EXTRA_PERFORM_PAIR = "perform_pair";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -40,7 +40,7 @@ public interface EventHandler {
 
     void onReboot();
 
-    void onHearRateTest();
+    void onHeartRateTest();
 
     void onFindDevice(boolean start);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -172,7 +172,7 @@ public void onReboot() {
     }
 
     @Override
-    public void onHearRateTest() {
+    public void onHeartRateTest() {
         Intent intent = createIntent().setAction(ACTION_HEARTRATE_TEST);
         invokeService(intent);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -253,7 +253,7 @@ public synchronized int onStartCommand(Intent intent, int flags, int startId) {
                 break;
             }
             case ACTION_HEARTRATE_TEST: {
-                mDeviceSupport.onHearRateTest();
+                mDeviceSupport.onHeartRateTest();
                 break;
             }
             case ACTION_FETCH_ACTIVITY_DATA: {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/ServiceDeviceSupport.java
Patch:
@@ -195,11 +195,11 @@ public void onReboot() {
     }
 
     @Override
-    public void onHearRateTest() {
+    public void onHeartRateTest() {
         if (checkBusy("heartrate")) {
             return;
         }
-        delegate.onHearRateTest();
+        delegate.onHeartRateTest();
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -534,7 +534,7 @@ public void onReboot() {
     }
 
     @Override
-    public void onHearRateTest() {
+    public void onHeartRateTest() {
         if (supportsHeartRate()) {
             try {
                 TransactionBuilder builder = performInitialized("HeartRateTest");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleSupport.java
Patch:
@@ -38,7 +38,7 @@ public void onInstallApp(Uri uri) {
     }
 
     @Override
-    public void onHearRateTest() {
+    public void onHeartRateTest() {
 
     }
 

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -102,7 +102,7 @@ public void onReboot() {
     }
 
     @Override
-    public void onHearRateTest() {
+    public void onHeartRateTest() {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -79,7 +79,7 @@ public void onReceive(Context context, Intent intent) {
         }
     };
     private boolean mChartDirty = true;
-    private boolean supportsHeartrateChart = true;
+    private boolean supportsHeartrateChart = false;
 
     public boolean isChartDirty() {
         return mChartDirty;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -79,7 +79,7 @@ public void onReceive(Context context, Intent intent) {
         }
     };
     private boolean mChartDirty = true;
-    private boolean supportsHeartrateChart = false;
+    private boolean supportsHeartrateChart = true;
 
     public boolean isChartDirty() {
         return mChartDirty;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ActivitySleepChartFragment.java
Patch:
@@ -79,8 +79,8 @@ private void setupChart() {
         YAxis yAxisRight = mChart.getAxisRight();
         yAxisRight.setDrawGridLines(false);
         yAxisRight.setEnabled(supportsHeartrate());
-        yAxisRight.setDrawLabels(false);
-        yAxisRight.setDrawTopYLabelEntry(false);
+        yAxisRight.setDrawLabels(true);
+        yAxisRight.setDrawTopYLabelEntry(true);
         yAxisRight.setTextColor(CHART_TEXT_COLOR);
 
         // refresh immediately instead of use refreshIfVisible(), for perceived performance

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -327,6 +327,7 @@ private void flushActivityDataHolder() {
                     steps = activityStruct.activityDataHolder[i + 2];
                     if (hasExtendedActivityData) {
                         heartrate = activityStruct.activityDataHolder[i + 3];
+                        LOG.debug("heartrate received: " + (heartrate & 0xff));
                     }
 
                     samples[minutes] = new GBActivitySample(

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/EventHandler.java
Patch:
@@ -40,6 +40,8 @@ public interface EventHandler {
 
     void onReboot();
 
+    void onHearRateTest();
+
     void onFindDevice(boolean start);
 
     void onScreenshotReq();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/DeviceService.java
Patch:
@@ -26,13 +26,13 @@ public interface DeviceService extends EventHandler {
     String ACTION_DELETEAPP = PREFIX + ".action.deleteapp";
     String ACTION_INSTALL = PREFIX + ".action.install";
     String ACTION_REBOOT = PREFIX + ".action.reboot";
+    String ACTION_HEARTRATE_TEST = PREFIX + ".action.heartrate_test";
     String ACTION_FETCH_ACTIVITY_DATA = PREFIX + ".action.fetch_activity_data";
     String ACTION_DISCONNECT = PREFIX + ".action.disconnect";
     String ACTION_FIND_DEVICE = PREFIX + ".action.find_device";
     String ACTION_SET_ALARMS = PREFIX + ".action.set_alarms";
     String ACTION_ENABLE_REALTIME_STEPS = PREFIX + ".action.enable_realtime_steps";
     String ACTION_REALTIME_STEPS = PREFIX + ".action.realtime_steps";
-
     String EXTRA_DEVICE_ADDRESS = "device_address";
     String EXTRA_NOTIFICATION_BODY = "notification_body";
     String EXTRA_NOTIFICATION_FLAGS = "notification_flags";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PhoneCallReceiver.java
Patch:
@@ -31,7 +31,6 @@ public void onReceive(Context context, Intent intent) {
             } else if (TelephonyManager.EXTRA_STATE_RINGING.equals(stateStr)) {
                 state = TelephonyManager.CALL_STATE_RINGING;
             }
-
             onCallStateChanged(context, state, number);
         }
     }
@@ -52,6 +51,7 @@ public void onCallStateChanged(Context context, int state, String number) {
                     callCommand = ServiceCommand.CALL_START;
                 } else {
                     callCommand = ServiceCommand.CALL_OUTGOING;
+                    mSavedNumber = number;
                 }
                 break;
             case TelephonyManager.CALL_STATE_IDLE:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/AppMessageHandlerMorpheuz.java
Patch:
@@ -113,12 +113,12 @@ public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                     break;
                 case KEY_TO:
                     smartalarm_to = (int) pair.second;
-                    LOG.info("got from: " + smartalarm_to / 60 + ":" + smartalarm_to % 60);
+                    LOG.info("got to: " + smartalarm_to / 60 + ":" + smartalarm_to % 60);
                     ctrl_message = AppMessageHandlerMorpheuz.CTRL_VERSION_DONE | AppMessageHandlerMorpheuz.CTRL_SET_LAST_SENT | AppMessageHandlerMorpheuz.CTRL_DO_NEXT;
                     break;
                 case KEY_VERSION:
                     LOG.info("got version: " + ((float) ((int) pair.second) / 10.0f));
-                    ctrl_message = AppMessageHandlerMorpheuz.CTRL_VERSION_DONE | AppMessageHandlerMorpheuz.CTRL_SET_LAST_SENT;
+                    ctrl_message = AppMessageHandlerMorpheuz.CTRL_VERSION_DONE;
                     break;
                 case KEY_BASE:
                     // fix timestamp

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -29,4 +29,7 @@ public interface DBHandler {
     void addGBActivitySamples(ActivitySample[] activitySamples);
 
     SQLiteDatabase getWritableDatabase();
+
+    void changeStoredSamplesType(int timestampFrom, int timestampTo, byte kind, SampleProvider provider);
+
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1821,7 +1821,9 @@ private GBDeviceEventSendBytes decodeDatalog(ByteBuffer buf, short length) {
                 LOG.info("DATALOG OPENSESSION. id=" + (id & 0xff) + ", App UUID=" + uuid.toString() + ", log_tag=" + log_tag + ", item_type=" + item_type + ", itemSize=" + item_size);
                 if (!mDatalogSessions.containsKey(id)) {
                     if (uuid.equals(UUID_ZERO) && log_tag == 81) {
-                        mDatalogSessions.put(id, new DatalogSessionHealth(id, uuid, log_tag, item_type, item_size));
+                        mDatalogSessions.put(id, new DatalogSessionHealthSteps(id, uuid, log_tag, item_type, item_size));
+                    } else if (uuid.equals(UUID_ZERO) && log_tag == 83) {
+                        mDatalogSessions.put(id, new DatalogSessionHealthSleep(id, uuid, log_tag, item_type, item_size));
                     } else {
                         mDatalogSessions.put(id, new DatalogSession(id, uuid, log_tag, item_type, item_size));
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/DatalogSessionHealth.java
Patch:
@@ -22,7 +22,7 @@
 
 public class DatalogSessionHealth extends DatalogSession {
 
-    private final int preambleLength = 10; // FIXME: this is 14 but if would break the code if corrected
+    private final int preambleLength = 14;
     private final int packetLength = 99;
 
     private static final Logger LOG = LoggerFactory.getLogger(DatalogSessionHealth.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1832,7 +1832,7 @@ private GBDeviceEventSendBytes decodeDatalog(ByteBuffer buf, short length) {
                     LOG.info("DATALOG UUID=" + datalogSession.uuid + ", tag=" + datalogSession.tag + taginfo + ", item_size=" + datalogSession.item_size + ", item_type=" + datalogSession.item_type);
                 }
                 if (doHexdump) {
-                    LOG.info(GB.hexdump(buf.array(), 10, length - 10));
+                    LOG.info(GB.hexdump(buf.array(), buf.position(), length - buf.position()));
                 }
                 break;
             case DATALOG_OPENSESSION:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/LimitedQueue.java
Patch:
@@ -23,7 +23,7 @@ public void add(int id, Object obj) {
     public void remove(int id) {
         for (Iterator<Pair> iter = list.iterator(); iter.hasNext(); ) {
             Pair pair = iter.next();
-            if (pair.first == id) {
+            if ((Integer) pair.first == id) {
                 iter.remove();
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/LimitedQueue.java
Patch:
@@ -23,7 +23,7 @@ public void add(int id, Object obj) {
     public void remove(int id) {
         for (Iterator<Pair> iter = list.iterator(); iter.hasNext(); ) {
             Pair pair = iter.next();
-            if (pair.first == id) {
+            if ((Integer) pair.first == id) {
                 iter.remove();
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -362,7 +362,7 @@ public void run() {
                     if (reconnectAttempts > 0) {
                         gbDevice.setState(GBDevice.State.CONNECTING);
                         gbDevice.sendDeviceUpdateIntent(getContext());
-                        while (reconnectAttempts-- > 0 && !mQuit) {
+                        while (reconnectAttempts-- > 0 && !mQuit && !mIsConnected) {
                             LOG.info("Trying to reconnect (attempts left " + reconnectAttempts + ")");
                             mIsConnected = connect(gbDevice.getAddress());
                         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -468,6 +468,7 @@ private boolean evaluateGBDeviceEventPebble(GBDeviceEvent deviceEvent) {
                 LOG.info("syncing time");
                 write(mPebbleProtocol.encodeSetTime());
             }
+            write(mPebbleProtocol.encodeReportDataLogSessions());
             gbDevice.setState(GBDevice.State.INITIALIZED);
             return false;
         } else if (deviceEvent instanceof GBDeviceEventAppManagement) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/UserInfo.java
Patch:
@@ -1,5 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.miband;
 
+import nodomain.freeyourgadget.gadgetbridge.model.ActivityUser;
 import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.DeviceInfo;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 
@@ -23,7 +24,7 @@ public class UserInfo {
      * @param btAddress the address of the MI Band to connect to.
      */
     public static UserInfo getDefault(String btAddress) {
-        return new UserInfo(btAddress, "1550050550", 0, 25, 175, 70, 0);
+        return new UserInfo(btAddress, "1550050550", ActivityUser.defaultUserGender, ActivityUser.defaultUserAge, ActivityUser.defaultUserHeightCm, ActivityUser.defaultUserWeightKg, 0);
     }
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -62,7 +62,7 @@ public void onReceive(Context context, Intent intent) {
             e.printStackTrace();
             notificationSpec.sender = "Gadgetbridge";
             notificationSpec.subject = "Permission Error?";
-            notificationSpec.body = "Please reinstall Gadgerbridge to enable K-9 Mail notifications";
+            notificationSpec.body = "Please reinstall Gadgetbridge to enable K-9 Mail notifications";
         }
 
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -62,7 +62,7 @@ public void onReceive(Context context, Intent intent) {
             e.printStackTrace();
             notificationSpec.sender = "Gadgetbridge";
             notificationSpec.subject = "Permission Error?";
-            notificationSpec.body = "Please reinstall Gadgerbridge to enable K-9 Mail notifications";
+            notificationSpec.body = "Please reinstall Gadgetbridge to enable K-9 Mail notifications";
         }
 
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SettingsActivity.java
Patch:
@@ -110,6 +110,7 @@ protected String[] getPreferenceKeysWithSummary() {
                 "pebble_emu_addr",
                 "pebble_emu_port",
                 "pebble_reconnect_attempts",
+                "canned_reply_suffix",
                 "canned_reply_1",
                 "canned_reply_2",
                 "canned_reply_3",

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -9,7 +9,8 @@
 public class MiBandService {
 
 
-    public static final String MAC_ADDRESS_FILTER = "88:0F:10";
+    public static final String MAC_ADDRESS_FILTER_1_1A = "88:0F:10";
+    public static final String MAC_ADDRESS_FILTER_1S = "C8:0F:10";
 
     public static final UUID UUID_SERVICE_MIBAND_SERVICE = UUID.fromString(String.format(BASE_UUID, "FEE0"));
 

File: app/src/main/java/ru/gelin/android/weather/notification/ParcelableWeather2.java
Patch:
@@ -52,7 +52,7 @@ private ParcelableWeather2(Parcel in) {
             if (--conditions > 0) {
                 Bundle forecastBundle = in.readBundle();
                 forecastConditionType = forecastBundle.getStringArray("weather_condition_types");
-                forecastConditionCode = weatherConditionTypesToOpenWeatherMapIds(currentConditionType[0]);
+                forecastConditionCode = weatherConditionTypesToOpenWeatherMapIds(forecastConditionType[0]);
             }
         }
         // get the rest

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -367,7 +367,7 @@ public void run() {
                             mIsConnected = connect(gbDevice.getAddress());
                         }
                     }
-                    if (!mIsConnected) {
+                    if (!mIsConnected && !mQuit) {
                         try {
                             gbDevice.setState(GBDevice.State.WAITING_FOR_RECONNECT);
                             gbDevice.sendDeviceUpdateIntent(getContext());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -178,6 +178,9 @@ protected boolean connect(String btDeviceAddress) {
                 mIsTCP = false;
                 BluetoothDevice btDevice = mBtAdapter.getRemoteDevice(btDeviceAddress);
                 ParcelUuid uuids[] = btDevice.getUuids();
+                if (uuids == null) {
+                    return false;
+                }
                 for (ParcelUuid uuid : uuids) {
                     LOG.info("found service UUID " + uuid);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -811,16 +811,17 @@ private void sendEvents() {
                 int iteration = 0;
                 ArrayList<GBAlarm> alarmList = new ArrayList<>();
                 for(CalendarEvents.CalendarEvent mEvt : mEvents) {
-                    if (iteration >= availableSlots) {
+                    if (iteration >= availableSlots || iteration > 2) {
                         break;
                     }
+                    int slotToUse = 2 - iteration;
                     Calendar calendar = Calendar.getInstance();
                     calendar.setTimeInMillis(mEvt.getBegin());
                     byte[] calBytes = MiBandDateConverter.calendarToRawBytes(calendar);
 
                     byte[] alarmMessage = new byte[]{
                             MiBandService.COMMAND_SET_TIMER,
-                            (byte)(2-iteration),
+                            (byte) slotToUse,
                             (byte) 1,
                             calBytes[0],
                             calBytes[1],

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -357,7 +357,7 @@ public void run() {
                     mIsConnected = false;
                     int reconnectAttempts = Integer.valueOf(sharedPrefs.getString("pebble_reconnect_attempts", "10"));
                     if (reconnectAttempts > 0) {
-                        gbDevice.setState(GBDevice.State.CONNECTED);
+                        gbDevice.setState(GBDevice.State.CONNECTING);
                         gbDevice.sendDeviceUpdateIntent(getContext());
                         while (reconnectAttempts-- > 0 && !mQuit) {
                             LOG.info("Trying to reconnect (attempts left " + reconnectAttempts + ")");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -186,7 +186,7 @@ public PBWReader(Uri uri, Context context, String platform) throws FileNotFoundE
 
                 } else if (fileName.equals("appinfo.json")) {
                     long bytes = ze.getSize();
-                    if (bytes > 8192) // that should be too much
+                    if (bytes > 65536) // that should be too much
                         break;
 
                     ByteArrayOutputStream baos = new ByteArrayOutputStream();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -513,7 +513,7 @@ private static byte[] encodeExtensibleNotification(int id, int timestamp, String
         }
 
         int replies_length = -1;
-        if (cannedReplies != null) {
+        if (cannedReplies != null && cannedReplies.length > 0) {
             actions_count++;
             for (String reply : cannedReplies) {
                 replies_length += reply.getBytes().length + 1;
@@ -774,7 +774,7 @@ private byte[] encodeBlobdbNotification(int id, int timestamp, String title, Str
         }
 
         int replies_length = -1;
-        if (cannedReplies != null) {
+        if (cannedReplies != null && cannedReplies.length > 0) {
             actions_count++;
             for (String reply : cannedReplies) {
                 replies_length += reply.getBytes().length + 1;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -820,7 +820,7 @@ private void sendEvents() {
 
                     byte[] alarmMessage = new byte[]{
                             MiBandService.COMMAND_SET_TIMER,
-                            (byte)(3-iteration),
+                            (byte)(2-iteration),
                             (byte) 1,
                             calBytes[0],
                             calBytes[1],

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -426,6 +426,9 @@ private void write_real(byte[] bytes) {
 
     @Override
     synchronized public void write(byte[] bytes) {
+        if (bytes == null) {
+            return;
+        }
         // block writes if app installation in in progress
         if (mIsConnected && (!mIsInstalling || mInstallState == PebbleAppInstallState.WAIT_SLOT)) {
             write_real(bytes);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -12,7 +12,6 @@
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Random;
@@ -1252,7 +1251,7 @@ private ArrayList<Pair<Integer, Object>> decodeDict(ByteBuffer buf) {
                     if (type == TYPE_BYTEARRAY) {
                         dict.add(new Pair<Integer, Object>(key, bytes));
                     } else {
-                        dict.add(new Pair<Integer, Object>(key, Arrays.toString(bytes)));
+                        dict.add(new Pair<Integer, Object>(key, new String(bytes)));
                     }
                     break;
                 default:
@@ -1306,7 +1305,7 @@ private GBDeviceEvent[] decodeDictToJSONAppMessage(UUID uuid, ByteBuffer buf) th
                         jsonObject.put("value", Base64.encode(bytes, Base64.NO_WRAP));
                     } else {
                         jsonObject.put("type", "string");
-                        jsonObject.put("value", Arrays.toString(bytes));
+                        jsonObject.put("value", new String(bytes));
                     }
                     break;
                 default:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -271,6 +271,7 @@ public void run() {
                 getSupport().logMessageContent(value);
             }
         } else {
+            GB.toast(getContext(), "error buffering activity data: remaining bytes: " + activityStruct.activityDataRemainingBytes + ", received: " + value.length, Toast.LENGTH_LONG, GB.ERROR);
             try {
                 TransactionBuilder builder = performInitialized("send stop sync data");
                 builder.write(getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT), new byte[]{MiBandService.COMMAND_STOP_SYNC_DATA});
@@ -279,10 +280,8 @@ public void run() {
                 handleActivityFetchFinish();
 
             } catch (IOException e) {
-                e.printStackTrace();
+                LOG.error("error stopping activity sync", e);
             }
-            GB.toast(getContext(), "error buffering activity data: remaining bytes: " + activityStruct.activityDataRemainingBytes + ", received: " + value.length, Toast.LENGTH_LONG, GB.ERROR);
-            LOG.error("error buffering activity data: remaining bytes: " + activityStruct.activityDataRemainingBytes + ", received: " + value.length);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWInstallHandler.java
Patch:
@@ -108,11 +108,10 @@ public void onStartInstall(GBDevice device) {
         }
 
         GBDeviceApp app = mPBWReader.getGBDeviceApp();
-        File pbwFile = new File(mUri.getPath());
         try {
             File destDir = new File(FileUtils.getExternalFilesDir() + "/pbw-cache");
             destDir.mkdirs();
-            FileUtils.copyFile(pbwFile, new File(destDir + "/" + app.getUUID().toString() + ".pbw"));
+            FileUtils.copyURItoFile(mContext, mUri, new File(destDir + "/" + app.getUUID().toString() + ".pbw"));
         } catch (IOException e) {
             LOG.error("Installation failed: " + e.getMessage(), e);
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -433,7 +433,7 @@ private String getContactDisplayNameByNumber(String number) {
 
         Cursor contactLookup = null;
         try {
-            contentResolver.query(uri, null, null, null, null);
+            contactLookup = contentResolver.query(uri, null, null, null, null);
         } catch (SecurityException e) {
             return name;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -52,7 +52,6 @@ public class ControlCenter extends Activity {
             = "nodomain.freeyourgadget.gadgetbridge.controlcenter.action.set_version";
 
     private TextView hintTextView;
-    private ListView deviceListView;
     private SwipeRefreshLayout swipeLayout;
     private GBDeviceAdapter mGBDeviceAdapter;
     private GBDevice selectedDevice = null;
@@ -124,7 +123,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_controlcenter);
         hintTextView = (TextView) findViewById(R.id.hintTextView);
-        deviceListView = (ListView) findViewById(R.id.deviceListView);
+        ListView deviceListView = (ListView) findViewById(R.id.deviceListView);
         mGBDeviceAdapter = new GBDeviceAdapter(this, deviceList);
         deviceListView.setAdapter(this.mGBDeviceAdapter);
         deviceListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/K9Receiver.java
Patch:
@@ -60,8 +60,8 @@ public void onReceive(Context context, Intent intent) {
             c = context.getContentResolver().query(k9Uri, messagesProjection, null, null, null);
         } catch (Exception e) {
             e.printStackTrace();
-            notificationSpec.sender = "Permission Error?";
             notificationSpec.sender = "Gadgetbridge";
+            notificationSpec.subject = "Permission Error?";
             notificationSpec.body = "Please reinstall Gadgerbridge to enable K-9 Mail notifications";
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractFragmentPagerAdapter.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Set;
 
 public abstract class AbstractFragmentPagerAdapter extends FragmentStatePagerAdapter {
-    private Set<AbstractGBFragment> fragments = new HashSet<>();
+    private final Set<AbstractGBFragment> fragments = new HashSet<>();
     private Object primaryFragment;
 
     public AbstractFragmentPagerAdapter(FragmentManager fm) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -56,7 +56,7 @@ public void updateSummary(Preference preference, Object value) {
     }
 
     private static class ExtraSetSummaryOnChangeListener extends SimpleSetSummaryOnChangeListener {
-        private Preference.OnPreferenceChangeListener delegate;
+        private final Preference.OnPreferenceChangeListener delegate;
 
         public ExtraSetSummaryOnChangeListener(Preference.OnPreferenceChangeListener delegate) {
             this.delegate = delegate;
@@ -72,7 +72,7 @@ public boolean onPreferenceChange(Preference preference, Object value) {
         }
     }
 
-    private static SimpleSetSummaryOnChangeListener sBindPreferenceSummaryToValueListener = new SimpleSetSummaryOnChangeListener();
+    private static final SimpleSetSummaryOnChangeListener sBindPreferenceSummaryToValueListener = new SimpleSetSummaryOnChangeListener();
 
     @Override
     protected void onPostCreate(Bundle savedInstanceState) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppBlacklistActivity.java
Patch:
@@ -35,7 +35,7 @@
 public class AppBlacklistActivity extends Activity {
     private static final Logger LOG = LoggerFactory.getLogger(AppBlacklistActivity.class);
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AppManagerActivity.java
Patch:
@@ -37,7 +37,7 @@ public class AppManagerActivity extends Activity {
             = "nodomain.freeyourgadget.gadgetbridge.appmanager.action.refresh_applist";
     private static final Logger LOG = LoggerFactory.getLogger(AppManagerActivity.class);
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -50,7 +50,7 @@ public class DebugActivity extends Activity {
     private Button importDBButton;
     private EditText editContent;
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             if (intent.getAction().equals(ControlCenter.ACTION_QUIT)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -45,7 +45,7 @@ public class FwAppInstallerActivity extends Activity implements InstallActivity
     private InstallHandler installHandler;
     private boolean mayConnect;
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
@@ -72,7 +72,7 @@ public void onReceive(Context context, Intent intent) {
     };
     private ProgressBar mProgressBar;
     private ListView itemListView;
-    private List<ItemWithDetails> mItems = new ArrayList<>();
+    private final List<ItemWithDetails> mItems = new ArrayList<>();
     private ItemWithDetailsAdapter mItemAdapter;
 
     private void refreshBusyState(GBDevice dev) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -60,12 +60,12 @@
  * shift the date by one day.
  */
 public abstract class AbstractChartFragment extends AbstractGBFragment {
-    protected int ANIM_TIME = 350;
+    protected final int ANIM_TIME = 350;
 
     private static final Logger LOG = LoggerFactory.getLogger(AbstractChartFragment.class);
 
     private final Set<String> mIntentFilterActions;
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             AbstractChartFragment.this.onReceive(context, intent);
@@ -82,7 +82,7 @@ public boolean isChartDirty() {
     protected static final class ActivityConfig {
         public final int type;
         public final String label;
-        public Integer color;
+        public final Integer color;
 
         public ActivityConfig(int kind, String label, Integer color) {
             this.type = kind;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -80,7 +80,7 @@ public void setDuration(String duration) {
         }
     }
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -60,7 +60,7 @@ public class LiveActivityFragment extends AbstractChartFragment {
     private CustomBarChart mStepsPerMinuteCurrentChart;
     private CustomBarChart mTotalStepsChart;
 
-    private Steps mSteps = new Steps();
+    private final Steps mSteps = new Steps();
     private ScheduledExecutorService pulseScheduler;
     private int maxStepsResetCounter;
 
@@ -140,7 +140,7 @@ private int calculateStepsPerMinute(int stepsDelta, long millis) {
         }
     }
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -26,7 +26,7 @@ public class MiBandPairingActivity extends Activity {
     private TextView message;
     private boolean isPairing;
     private String macAddress;
-    private BroadcastReceiver mPairingReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mPairingReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             if (GBDevice.ACTION_DEVICE_CHANGED.equals(intent.getAction())) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandSampleProvider.java
Patch:
@@ -20,7 +20,7 @@ public class MiBandSampleProvider implements SampleProvider {
 //    public static final byte TYPE_WALKING = 1;
 
     // maybe this should be configurable 256 seems way off, though.
-    private float movementDivisor = 180.0f; //256.0f;
+    private final float movementDivisor = 180.0f; //256.0f;
 
     @Override
     public int normalizeType(byte rawType) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -207,7 +207,7 @@ public class MiBandService {
 
 	*/
 
-    private static Map<UUID, String> MIBAND_DEBUG;
+    private static final Map<UUID, String> MIBAND_DEBUG;
 
     static {
         MIBAND_DEBUG = new HashMap<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/VibrationProfile.java
Patch:
@@ -40,8 +40,8 @@ public static VibrationProfile getProfile(String id, short repeat) {
 
     private final String id;
 
-    private int[] onOffSequence;
-    private short repeat;
+    private final int[] onOffSequence;
+    private final short repeat;
 
     /**
      * Creates a new profile instance.

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/MisfitSampleProvider.java
Patch:
@@ -4,7 +4,7 @@
 
 public class MisfitSampleProvider implements SampleProvider {
 
-    protected float movementDivisor = 300f;
+    protected final float movementDivisor = 300f;
 
     @Override
     public int normalizeType(byte rawType) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/STM32CRC.java
Patch:
@@ -14,7 +14,7 @@
 public class STM32CRC {
     private int crc;
     private byte rem;
-    private byte buffer[] = {0, 0, 0, 0};
+    private final byte[] buffer = {0, 0, 0, 0};
 
     private static final int[] crc_table = {
             0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -1,7 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.externalevents;
 
 import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
 import android.app.ActivityManager;
 import android.app.Notification;
 import android.app.PendingIntent;
@@ -12,7 +11,6 @@
 import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
@@ -41,7 +39,7 @@ public class NotificationListener extends NotificationListenerService {
     public static final String ACTION_MUTE
             = "nodomain.freeyourgadget.gadgetbridge.notificationlistener.action.mute";
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @SuppressLint("NewApi")
         @Override
         public void onReceive(Context context, Intent intent) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBAlarm.java
Patch:
@@ -18,7 +18,7 @@
 
 public class GBAlarm implements Alarm {
 
-    private int index;
+    private final int index;
     private boolean enabled;
     private boolean smartWakeup;
     private int repetition;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -14,8 +14,8 @@
  * support this candidate, will the candidate be promoted to a GBDevice.
  */
 public class GBDeviceCandidate implements Parcelable {
-    private BluetoothDevice device;
-    private short rssi;
+    private final BluetoothDevice device;
+    private final short rssi;
     private DeviceType deviceType = DeviceType.UNKNOWN;
 
     public GBDeviceCandidate(BluetoothDevice device, short rssi) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityAmount.java
Patch:
@@ -5,7 +5,7 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 
 public class ActivityAmount {
-    private int activityKind;
+    private final int activityKind;
     private short percent;
     private long totalSeconds;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityAmounts.java
Patch:
@@ -4,7 +4,7 @@
 import java.util.List;
 
 public class ActivityAmounts {
-    private List<ActivityAmount> amounts = new ArrayList<>(4);
+    private final List<ActivityAmount> amounts = new ArrayList<>(4);
     private long totalSeconds;
 
     public void addAmount(ActivityAmount amount) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -93,7 +93,7 @@ public class DeviceCommunicationService extends Service {
     private MusicPlaybackReceiver mMusicPlaybackReceiver = null;
     private TimeChangeReceiver mTimeChangeReceiver = null;
 
-    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceSupportFactory.java
Patch:
@@ -18,7 +18,7 @@
 
 public class DeviceSupportFactory {
     private final BluetoothAdapter mBtAdapter;
-    private Context mContext;
+    private final Context mContext;
 
     public DeviceSupportFactory(Context context) {
         mContext = context;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEDeviceSupport.java
Patch:
@@ -33,7 +33,7 @@ public abstract class AbstractBTLEDeviceSupport extends AbstractDeviceSupport im
 
     private BtLEQueue mQueue;
     private HashMap<UUID, BluetoothGattCharacteristic> mAvailableCharacteristics;
-    private Set<UUID> mSupportedServices = new HashSet<>(4);
+    private final Set<UUID> mSupportedServices = new HashSet<>(4);
 
     public static final String BASE_UUID = "0000%s-0000-1000-8000-00805f9b34fb"; //this is common for all BTLE devices. see http://stackoverflow.com/questions/18699251/finding-out-android-bluetooth-le-gatt-profiles
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/GattCharacteristic.java
Patch:
@@ -178,7 +178,7 @@ public class GattCharacteristic {
 
     //do we need this?
 
-    private static Map<UUID, String> GATTCHARACTERISTIC_DEBUG;
+    private static final Map<UUID, String> GATTCHARACTERISTIC_DEBUG;
 
     static {
         GATTCHARACTERISTIC_DEBUG = new HashMap<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/GattService.java
Patch:
@@ -43,7 +43,7 @@ public class GattService {
 
     //do we need this?
 
-    private static Map<UUID, String> GATTSERVICE_DEBUG;
+    private static final Map<UUID, String> GATTSERVICE_DEBUG;
 
     static {
         GATTSERVICE_DEBUG = new HashMap<>();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/Transaction.java
Patch:
@@ -16,9 +16,9 @@
  * @author TREND
  */
 public class Transaction {
-    private String mName;
-    private List<BtLEAction> mActions = new ArrayList<>(4);
-    private long creationTimestamp = System.currentTimeMillis();
+    private final String mName;
+    private final List<BtLEAction> mActions = new ArrayList<>(4);
+    private final long creationTimestamp = System.currentTimeMillis();
     private
     @Nullable
     GattCallback gattCallback;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/TransactionBuilder.java
Patch:
@@ -14,7 +14,7 @@
 public class TransactionBuilder {
     private static final Logger LOG = LoggerFactory.getLogger(TransactionBuilder.class);
 
-    private Transaction mTransaction;
+    private final Transaction mTransaction;
     private boolean mQueued;
 
     public TransactionBuilder(String taskName) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/SetProgressAction.java
Patch:
@@ -7,9 +7,9 @@
 
 public class SetProgressAction extends PlainAction {
 
-    private String text;
-    private boolean ongoing;
-    private int percentage;
+    private final String text;
+    private final boolean ongoing;
+    private final int percentage;
     private final Context context;
 
     /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/WaitAction.java
Patch:
@@ -4,7 +4,7 @@
 
 public class WaitAction extends PlainAction {
 
-    private int mMillis;
+    private final int mMillis;
 
     public WaitAction(int millis) {
         mMillis = millis;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/WriteAction.java
Patch:
@@ -13,7 +13,7 @@
  */
 public class WriteAction extends BtLEAction {
 
-    private byte[] value;
+    private final byte[] value;
 
     public WriteAction(BluetoothGattCharacteristic characteristic, byte[] value) {
         super(characteristic);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/AbstractInfo.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.service.devices.miband;
 
 public class AbstractInfo {
-    protected byte[] mData;
+    protected final byte[] mData;
 
     public AbstractInfo(byte[] data) {
         mData = new byte[data.length];

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -78,8 +78,8 @@ public class MiBandSupport extends AbstractBTLEDeviceSupport {
 
     private DeviceInfo mDeviceInfo;
 
-    GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();
-    GBDeviceEventBatteryInfo batteryCmd = new GBDeviceEventBatteryInfo();
+    private final GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();
+    private final GBDeviceEventBatteryInfo batteryCmd = new GBDeviceEventBatteryInfo();
 
     public MiBandSupport() {
         addSupportedService(GattService.UUID_SERVICE_GENERIC_ACCESS);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -50,13 +50,13 @@ public class FetchActivityOperation extends AbstractBTLEOperation<MiBandSupport>
     //private ScheduledExecutorService scheduleTaskExecutor;
     //private ScheduledFuture scheduledTask;
 
-    private int activityMetadataLength = 11;
+    private final int activityMetadataLength = 11;
 
     //temporary buffer, size is a multiple of 60 because we want to store complete minutes (1 minute = 3 bytes)
     private static final int activityDataHolderSize = 3 * 60 * 4; // 4h
 
     private static class ActivityStruct {
-        private byte[] activityDataHolder = new byte[activityDataHolderSize];
+        private final byte[] activityDataHolder = new byte[activityDataHolderSize];
         //index of the buffer above
         private int activityDataHolderProgress = 0;
         //number of bytes we will get in a single data transfer, used as counter

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -56,7 +56,7 @@ public class PebbleIoThread extends GBDeviceIoThread {
     public static final String PEBBLEKIT_ACTION_APP_START = "com.getpebble.action.app.START";
     public static final String PEBBLEKIT_ACTION_APP_STOP = "com.getpebble.action.app.STOP";
 
-    SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+    final SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getContext());
 
     private final PebbleProtocol mPebbleProtocol;
     private final PebbleSupport mPebbleSupport;
@@ -419,6 +419,7 @@ private void write_real(byte[] bytes) {
                 mOutStream.flush();
             }
         } catch (IOException e) {
+            LOG.error("Error writing.", e);
         }
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -228,7 +228,7 @@ public class PebbleProtocol extends GBDeviceProtocol {
             "snowy_evt2", "snowy_dvt", "spalding_dvt", "snowy_s3", "spalding"
     };
 
-    private static Random mRandom = new Random();
+    private static final Random mRandom = new Random();
 
     boolean isFw3x = false;
     boolean mForceProtocol = false;
@@ -327,14 +327,14 @@ public class PebbleProtocol extends GBDeviceProtocol {
 
 
     byte last_id = -1;
-    private ArrayList<UUID> tmpUUIDS = new ArrayList<>();
+    private final ArrayList<UUID> tmpUUIDS = new ArrayList<>();
 
     private static final UUID UUID_GBPEBBLE = UUID.fromString("61476764-7465-7262-6469-656775527a6c");
     private static final UUID UUID_MORPHEUZ = UUID.fromString("5be44f1d-d262-4ea6-aa30-ddbec1e3cab2");
     private static final UUID UUID_WHETHERNEAT = UUID.fromString("3684003b-a685-45f9-a713-abc6364ba051");
     private static final UUID UUID_MISFIT = UUID.fromString("0b73b76a-cd65-4dc2-9585-aaa213320858");
 
-    private static Map<UUID, AppMessageHandler> mAppMessageHandlers = new HashMap<>();
+    private static final Map<UUID, AppMessageHandler> mAppMessageHandlers = new HashMap<>();
 
     {
         mAppMessageHandlers.put(UUID_GBPEBBLE, new AppMessageHandlerGBPebble(UUID_GBPEBBLE, PebbleProtocol.this));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -13,7 +13,7 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 
 public class DeviceHelper {
-    private static DeviceHelper instance = new DeviceHelper();
+    private static final DeviceHelper instance = new DeviceHelper();
 
     public static DeviceHelper getInstance() {
         return instance;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractServiceTestCase.java
Patch:
@@ -19,7 +19,7 @@
 
 public abstract class AbstractServiceTestCase<T extends Service> {
     private static final int ID = -1; // currently not supported
-    private Class<T> mServiceClass;
+    private final Class<T> mServiceClass;
     private T mServiceInstance;
     private Context mContext;
     private Application mApplication;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/test/GBMockIntent.java
Patch:
@@ -12,7 +12,7 @@
 
 public class GBMockIntent extends Intent {
     private String mAction;
-    private Map<String,Object> extras = new HashMap<>();
+    private final Map<String,Object> extras = new HashMap<>();
 
     @NonNull
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractGBFragment.java
Patch:
@@ -43,7 +43,7 @@ public boolean isVisibleInActivity() {
     }
 
     protected void updateActivityTitle() {
-        FragmentActivity activity = (FragmentActivity) getActivity();
+        FragmentActivity activity = getActivity();
         if (activity != null && !activity.isFinishing() && !activity.isDestroyed()) {
             if (getTitle() != null) {
                 activity.setTitle(getTitle());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -17,7 +17,7 @@
  * to set that listener in #onCreate, *not* in #onPostCreate, otherwise the value will
  * not be displayed.
  */
-public class AbstractSettingsActivity extends PreferenceActivity {
+public abstract class AbstractSettingsActivity extends PreferenceActivity {
 
     private static final Logger LOG = LoggerFactory.getLogger(AbstractSettingsActivity.class);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -27,7 +27,6 @@
 import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/AbstractChartFragment.java
Patch:
@@ -569,7 +569,7 @@ protected void doInBackground(DBHandler db) {
         @Override
         protected void onPostExecute(Object o) {
             super.onPostExecute(o);
-            FragmentActivity activity = (FragmentActivity) getActivity();
+            FragmentActivity activity = getActivity();
             if (activity != null && !activity.isFinishing() && !activity.isDestroyed()) {
                 renderCharts();
             } else {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -10,9 +10,7 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.content.LocalBroadcastManager;
-import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.PagerTabStrip;
-import android.support.v4.view.PagerTitleStrip;
 import android.support.v4.view.ViewPager;
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.Menu;
@@ -27,7 +25,6 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import java.lang.reflect.Method;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsHost.java
Patch:
@@ -7,9 +7,9 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 
 public interface ChartsHost {
-    static final String DATE_PREV = ChartsActivity.class.getName().concat(".date_prev");
-    static final String DATE_NEXT = ChartsActivity.class.getName().concat(".date_next");
-    static final String REFRESH = ChartsActivity.class.getName().concat(".refresh");
+    String DATE_PREV = ChartsActivity.class.getName().concat(".date_prev");
+    String DATE_NEXT = ChartsActivity.class.getName().concat(".date_next");
+    String REFRESH = ChartsActivity.class.getName().concat(".refresh");
 
     GBDevice getDevice();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SingleEntryValueAnimator.java
Patch:
@@ -1,6 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.activities.charts;
 
-import android.animation.Animator;
 import android.animation.ObjectAnimator;
 import android.animation.ValueAnimator;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/SleepUtils.java
Patch:
@@ -6,7 +6,7 @@ public class SleepUtils {
     public static final float Y_VALUE_DEEP_SLEEP = 0.01f;
     public static final float Y_VALUE_LIGHT_SLEEP = 0.016f;
 
-    public static final boolean isSleep(byte type) {
+    public static boolean isSleep(byte type) {
         return type == ActivityKind.TYPE_DEEP_SLEEP || type == ActivityKind.TYPE_LIGHT_SLEEP;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBAlarmListAdapter.java
Patch:
@@ -40,7 +40,7 @@ public GBAlarmListAdapter(Context context, Set<String> preferencesAlarmListSet)
         super(context, 0, new ArrayList<GBAlarm>());
 
         this.mContext = context;
-        alarmList = new ArrayList<GBAlarm>();
+        alarmList = new ArrayList<>();
 
         for (String alarmString : preferencesAlarmListSet) {
             alarmList.add(new GBAlarm(alarmString));
@@ -50,7 +50,7 @@ public GBAlarmListAdapter(Context context, Set<String> preferencesAlarmListSet)
     }
 
     public void setAlarmList(Set<String> preferencesAlarmListSet) {
-        alarmList = new ArrayList<GBAlarm>();
+        alarmList = new ArrayList<>();
 
         for (String alarmString : preferencesAlarmListSet) {
             alarmList.add(new GBAlarm(alarmString));

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -202,7 +202,7 @@ private ArrayList<ActivitySample> getGBActivitySamples(int timestamp_from, int t
         if (timestamp_from < 0) {
             throw new IllegalArgumentException("negative timestamp_from");
         }
-        ArrayList<ActivitySample> samples = new ArrayList<ActivitySample>();
+        ArrayList<ActivitySample> samples = new ArrayList<>();
         final String where = "(provider=" + provider.getID() + " and timestamp>=" + timestamp_from + " and timestamp<=" + timestamp_to + getWhereClauseFor(activityTypes, provider) + ")";
         LOG.info("Activity query where: " + where);
         final String order = "timestamp";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/AbstractDeviceCoordinator.java
Patch:
@@ -1,7 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.devices;
 
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 
 public abstract class AbstractDeviceCoordinator implements DeviceCoordinator {
     public boolean allowFetchActivityData(GBDevice device) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/InstallHandler.java
Patch:
@@ -13,7 +13,7 @@ public interface InstallHandler {
      * Returns true if this handler is able to install the element.
      * #validateInstallation may only be called if this method returned true.
      */
-    public boolean isValid();
+    boolean isValid();
 
     /**
      * Checks whether the installation of the 'element' on the device is possible

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -14,7 +14,6 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.activities.charts.ChartsActivity;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -45,6 +45,9 @@ public class MiBandFWHelper {
     public MiBandFWHelper(Uri uri, Context context) throws IOException {
         this.uri = uri;
         cr = context.getContentResolver();
+        if (cr == null) {
+            throw new IOException("No content resolver");
+        }
 
         String pebblePattern = ".*\\.(pbw|pbz|pbl)";
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -4,9 +4,6 @@
 import java.util.Map;
 import java.util.UUID;
 
-import nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic;
-import nodomain.freeyourgadget.gadgetbridge.service.btle.GattService;
-
 import static nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport.BASE_UUID;
 
 public class MiBandService {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -32,7 +32,7 @@ public class PBWReader {
     private static final HashMap<String, Byte> appFileTypesMap;
 
     static {
-        appFileTypesMap = new HashMap<String, Byte>();
+        appFileTypesMap = new HashMap<>();
         appFileTypesMap.put("application", PebbleProtocol.PUTBYTES_TYPE_BINARY);
         appFileTypesMap.put("resources", PebbleProtocol.PUTBYTES_TYPE_RESOURCES);
         appFileTypesMap.put("worker", PebbleProtocol.PUTBYTES_TYPE_WORKER);
@@ -41,7 +41,7 @@ public class PBWReader {
     private static final HashMap<String, Byte> fwFileTypesMap;
 
     static {
-        fwFileTypesMap = new HashMap<String, Byte>();
+        fwFileTypesMap = new HashMap<>();
         fwFileTypesMap.put("firmware", PebbleProtocol.PUTBYTES_TYPE_FIRMWARE);
         fwFileTypesMap.put("resources", PebbleProtocol.PUTBYTES_TYPE_SYSRESOURCES);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PebbleCoordinator.java
Patch:
@@ -9,7 +9,6 @@
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.activities.AppManagerActivity;
 import nodomain.freeyourgadget.gadgetbridge.devices.AbstractDeviceCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBAlarm.java
Patch:
@@ -190,7 +190,7 @@ public void store() {
         SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(GBApplication.getContext());
         Set<String> preferencesAlarmListSet = sharedPrefs.getStringSet(PREF_MIBAND_ALARMS, new HashSet<String>());
         //the old Set cannot be updated in place see http://developer.android.com/reference/android/content/SharedPreferences.html#getStringSet%28java.lang.String,%20java.util.Set%3Cjava.lang.String%3E%29
-        Set<String> newPrefs = new HashSet<String>(preferencesAlarmListSet);
+        Set<String> newPrefs = new HashSet<>(preferencesAlarmListSet);
 
         Iterator<String> iterator = newPrefs.iterator();
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/AbstractDeviceSupport.java
Patch:
@@ -248,7 +248,7 @@ public void handleGBDeviceEvent(GBDeviceEventBatteryInfo deviceEvent) {
             GB.updateBatteryNotification(context.getString(R.string.notif_battery_low_percent, gbDevice.getName(), deviceEvent.level),
                     deviceEvent.extendedInfoAvailable() ?
                             context.getString(R.string.notif_battery_low_percent, gbDevice.getName(), deviceEvent.level) + "\n" +
-                                    context.getString(R.string.notif_battery_low_bigtext_last_charge_time, DateFormat.getDateTimeInstance().format(deviceEvent.lastChargeTime.getTime()).toString()) +
+                                    context.getString(R.string.notif_battery_low_bigtext_last_charge_time, DateFormat.getDateTimeInstance().format(deviceEvent.lastChargeTime.getTime())) +
                                     context.getString(R.string.notif_battery_low_bigtext_number_of_charges, deviceEvent.numCharges)
                             : ""
                     , context);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/ServiceDeviceSupport.java
Patch:
@@ -21,7 +21,7 @@
  */
 public class ServiceDeviceSupport implements DeviceSupport {
 
-    static enum Flags {
+    enum Flags {
         THROTTLING,
         BUSY_CHECKING,
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BTLEOperation.java
Patch:
@@ -3,5 +3,5 @@
 import java.io.IOException;
 
 public interface BTLEOperation {
-    public void perform() throws IOException;
+    void perform() throws IOException;
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -30,7 +30,7 @@
 public final class BtLEQueue {
     private static final Logger LOG = LoggerFactory.getLogger(BtLEQueue.class);
 
-    private Object mGattMonitor = new Object();
+    private final Object mGattMonitor = new Object();
     private GBDevice mGbDevice;
     private BluetoothAdapter mBluetoothAdapter;
     private BluetoothGatt mBluetoothGatt;
@@ -41,7 +41,7 @@ public final class BtLEQueue {
 
     private static final long MIN_MILLIS_BEFORE_RECONNECT = 1000 * 60 * 5; // 5 minutes
 
-    private volatile BlockingQueue<Transaction> mTransactions = new LinkedBlockingQueue<Transaction>();
+    private volatile BlockingQueue<Transaction> mTransactions = new LinkedBlockingQueue<>();
     private volatile boolean mDisposed;
     private volatile boolean mCrashed;
     private volatile boolean mAbortTransaction;
@@ -460,7 +460,7 @@ private void checkWaitingCharacteristic(BluetoothGattCharacteristic characterist
                 }
             } else {
                 if (BtLEQueue.this.mWaitCharacteristic != null) {
-                    LOG.error("checkWaitingCharacteristic: mismatched characteristic received: " + characteristic != null ? characteristic.getUuid().toString() : "(null)");
+                    LOG.error("checkWaitingCharacteristic: mismatched characteristic received: " + ((characteristic != null && characteristic.getUuid() != null) ? characteristic.getUuid().toString() : "(null)"));
                 }
             }
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/GattCallback.java
Patch:
@@ -73,7 +73,7 @@ void onCharacteristicChanged(BluetoothGatt gatt,
      * @param status
      * @see BluetoothGattCallback#onDescriptorRead(BluetoothGatt, BluetoothGattDescriptor, int)
      */
-    public void onDescriptorRead(BluetoothGatt gatt, BluetoothGattDescriptor descriptor,
+    void onDescriptorRead(BluetoothGatt gatt, BluetoothGattDescriptor descriptor,
                                  int status);
 
     /**
@@ -82,7 +82,7 @@ public void onDescriptorRead(BluetoothGatt gatt, BluetoothGattDescriptor descrip
      * @param status
      * @see BluetoothGattCallback#onDescriptorWrite(BluetoothGatt, BluetoothGattDescriptor, int)
      */
-    public void onDescriptorWrite(BluetoothGatt gatt, BluetoothGattDescriptor descriptor,
+    void onDescriptorWrite(BluetoothGatt gatt, BluetoothGattDescriptor descriptor,
                                   int status);
 //
 //    /**

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/NotifyAction.java
Patch:
@@ -4,7 +4,6 @@
 import android.bluetooth.BluetoothGattCallback;
 import android.bluetooth.BluetoothGattCharacteristic;
 import android.bluetooth.BluetoothGattDescriptor;
-import android.bluetooth.BluetoothGattService;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/DeviceInfo.java
Patch:
@@ -4,8 +4,6 @@
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.util.CheckSums;
 
-import java.util.Locale;
-
 public class DeviceInfo extends AbstractInfo {
     public final String deviceId;
     public final int profileVersion;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -1178,7 +1178,7 @@ private static byte[] encodePing(byte command, int cookie) {
     }
 
     private ArrayList<Pair<Integer, Object>> decodeDict(ByteBuffer buf) {
-        ArrayList<Pair<Integer, Object>> dict = new ArrayList<Pair<Integer, Object>>();
+        ArrayList<Pair<Integer, Object>> dict = new ArrayList<>();
         buf.order(ByteOrder.LITTLE_ENDIAN);
         byte dictSize = buf.get();
         while (dictSize-- > 0) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/receivers/GBMusicControlReceiver.java
Patch:
@@ -69,9 +69,7 @@ public void onReceive(Context context, Intent intent) {
             Intent upIntent = new Intent(Intent.ACTION_MEDIA_BUTTON, null);
             KeyEvent upEvent = new KeyEvent(eventtime, eventtime, KeyEvent.ACTION_UP, keyCode, 0);
             upIntent.putExtra(Intent.EXTRA_KEY_EVENT, upEvent);
-            if (audioPlayer != null) {
-                upIntent.setPackage(audioPlayer);
-            }
+            upIntent.setPackage(audioPlayer);
             context.sendOrderedBroadcast(upIntent, null);
         }
     }

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationServiceTestCase.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 
-import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.mockito.InOrder;

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -11,10 +11,8 @@
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.Alarm;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
-import nodomain.freeyourgadget.gadgetbridge.model.ServiceCommand;
-import nodomain.freeyourgadget.gadgetbridge.model.NotificationType;
 import nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec;
-import nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport;
+import nodomain.freeyourgadget.gadgetbridge.model.ServiceCommand;
 
 public class TestDeviceSupport extends AbstractDeviceSupport {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/FileUtils.java
Patch:
@@ -97,7 +97,7 @@ private static List<File> getWritableExternalFilesDirs() throws IOException {
         }
         for (int i = 0; i < dirs.length; i++) {
             File dir = dirs[i];
-            if (!dir.exists() && !dir.mkdirs()) {
+            if (dir == null || (!dir.exists() && !dir.mkdirs())) {
                 continue;
             }
             // the first directory is also the primary external storage, i.e. the same as Environment.getExternalFilesDir()

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DebugActivity.java
Patch:
@@ -196,8 +196,7 @@ private void exportDB() {
             File destFile = helper.exportDB(dbHandler.getHelper(), dir);
             GB.toast(this, "Exported to: " + destFile.getAbsolutePath(), Toast.LENGTH_LONG, GB.INFO);
         } catch (Exception ex) {
-            LOG.error("Unable to export db", ex);
-            Toast.makeText(this, "Error exporting DB: " + ex.getMessage(), Toast.LENGTH_LONG).show();
+            GB.toast(this, "Error exporting DB: " + ex.getMessage(), Toast.LENGTH_LONG, GB.ERROR, ex);
         } finally {
             if (dbHandler != null) {
                 dbHandler.release();
@@ -217,7 +216,7 @@ private void importDB() {
             helper.validateDB(sqLiteOpenHelper);
             GB.toast(this, "Import successful.", Toast.LENGTH_LONG, GB.INFO);
         } catch (Exception ex) {
-            GB.toast(this, "Error importing DB: " + ex.getMessage(), Toast.LENGTH_LONG, GB.ERROR);
+            GB.toast(this, "Error importing DB: " + ex.getMessage(), Toast.LENGTH_LONG, GB.ERROR, ex);
         } finally {
             if (dbHandler != null) {
                 dbHandler.release();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -140,7 +140,7 @@ public void addGBActivitySample(int timestamp, byte provider, short intensity, s
     }
 
     @Override
-    public void addGBActivitySamples(GBActivitySample[] activitySamples) {
+    public void addGBActivitySamples(ActivitySample[] activitySamples) {
         try (SQLiteDatabase db = this.getWritableDatabase()) {
 
             String sql = "INSERT INTO " + TABLE_GBACTIVITYSAMPLES + " (" + KEY_TIMESTAMP + "," +
@@ -149,7 +149,7 @@ public void addGBActivitySamples(GBActivitySample[] activitySamples) {
             SQLiteStatement statement = db.compileStatement(sql);
             db.beginTransaction();
 
-            for (GBActivitySample activitySample : activitySamples) {
+            for (ActivitySample activitySample : activitySamples) {
                 statement.clearBindings();
                 statement.bindLong(1, activitySample.getTimestamp());
                 statement.bindLong(2, activitySample.getProvider().getID());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandConst.java
Patch:
@@ -31,7 +31,7 @@ public static int getNotificationPrefIntValue(String pref, String origin, Shared
         String value = null;
         try {
             value = prefs.getString(key, String.valueOf(defaultValue));
-            return Integer.valueOf(value).intValue();
+            return Integer.valueOf(value);
         } catch (NumberFormatException ex) {
             LOG.error("Error converting preference value to int: " + key + ": " + value);
             return defaultValue;
@@ -43,8 +43,8 @@ public static String getNotificationPrefStringValue(String pref, String origin,
         return prefs.getString(key, defaultValue);
     }
 
-    public static final String getNotificationPrefKey(String pref, String origin) {
-        return new StringBuilder(pref).append('_').append(origin).toString();
+    public static String getNotificationPrefKey(String pref, String origin) {
+        return pref + '_' + origin;
     }
 
     public static final String VIBRATION_PROFILE = "mi_vibration_profile";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -108,7 +108,7 @@ public void run() {
                     mConnectionLatch = null;
                     LOG.debug("Thread interrupted");
                 } catch (Throwable ex) {
-                    LOG.error("Queue Dispatch Thread died: " + ex.getMessage());
+                    LOG.error("Queue Dispatch Thread died: " + ex.getMessage(), ex);
                     mCrashed = true;
                     mConnectionLatch = null;
                 } finally {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -368,7 +368,7 @@ public void onCharacteristicRead(BluetoothGatt gatt,
                 try {
                     getCallbackToUse().onCharacteristicRead(gatt, characteristic, status);
                 } catch (Throwable ex) {
-                    LOG.error("onCharaceristicRead: " + ex.getMessage(), ex);
+                    LOG.error("onCharacteristicRead: " + ex.getMessage(), ex);
                 }
             }
             checkWaitingCharacteristic(characteristic, status);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -126,7 +126,7 @@ public static boolean supportsBluetoothLE() {
 
     public static String hexdump(byte[] buffer, int offset, int length) {
         if (length == -1) {
-            length = buffer.length;
+            length = buffer.length - offset;
         }
         final char[] hexArray = "0123456789ABCDEF".toCharArray();
         char[] hexChars = new char[length * 2];

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/LiveActivityFragment.java
Patch:
@@ -46,7 +46,7 @@ public class LiveActivityFragment extends AbstractChartFragment {
     private BarEntry stepsPerMinuteEntry;
     private BarDataSet mStepsPerMinuteData;
     private BarDataSet mTotalStepsData;
-    private LineDataSet mHistorySet = new LineDataSet(new ArrayList<Entry>(), getString(R.string.live_activity_steps_history));
+    private LineDataSet mHistorySet;
 
     private class Steps {
         private int initialSteps;
@@ -291,6 +291,7 @@ private void setupHistoryChart(BarLineChartBase chart) {
         yAxisRight.setDrawTopYLabelEntry(false);
         yAxisRight.setTextColor(CHART_TEXT_COLOR);
 
+        mHistorySet = new LineDataSet(new ArrayList<Entry>(), getString(R.string.live_activity_steps_history));
         mHistorySet.setColor(akActivity.color);
         mHistorySet.setDrawCircles(false);
         mHistorySet.setDrawCubic(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/NotificationListener.java
Patch:
@@ -173,6 +173,7 @@ public void onNotificationPosted(StatusBarNotification sbn) {
                 notificationSpec.type = NotificationType.EMAIL;
                 break;
             case "com.moez.QKSMS":
+            case "com.android.mms":
                 notificationSpec.type = NotificationType.SMS;
                 break;
             case "eu.siacs.conversations":

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -46,6 +46,7 @@ public void onReceive(Context context, Intent intent) {
         }
 
         NotificationSpec notificationSpec = new NotificationSpec();
+        notificationSpec.id = -1;
 
         String notificationData = intent.getStringExtra("notificationData");
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -101,9 +101,10 @@ public static DeviceService deviceService() {
      * when that was not successful
      * If acquiring was successful, callers must call #releaseDB when they
      * are done (from the same thread that acquired the lock!
+     *
      * @return the DBHandler
-     * @see #releaseDB()
      * @throws GBException
+     * @see #releaseDB()
      */
     public static DBHandler acquireDB() throws GBException {
         try {
@@ -118,6 +119,7 @@ public static DBHandler acquireDB() throws GBException {
 
     /**
      * Releases the database lock.
+     *
      * @throws IllegalMonitorStateException if the current thread is not owning the lock
      * @see #acquireDB()
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBException.java
Patch:
@@ -4,12 +4,15 @@ public class GBException extends Exception {
     public GBException(String message, Throwable cause) {
         super(message, cause);
     }
+
     public GBException(String message) {
         super(message);
     }
+
     public GBException(Throwable cause) {
         super(cause);
     }
+
     public GBException() {
         super();
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AlarmDetails.java
Patch:
@@ -8,9 +8,9 @@
 import android.widget.CheckBox;
 import android.widget.TimePicker;
 
-import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 
 public class AlarmDetails extends Activity {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ConfigureAlarms.java
Patch:
@@ -12,10 +12,9 @@
 import java.util.Set;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
-import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.adapter.GBAlarmListAdapter;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_ALARMS;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/ControlCenter.java
Patch:
@@ -37,7 +37,6 @@
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
-import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/DiscoveryActivity.java
Patch:
@@ -24,13 +24,13 @@
 
 import java.util.ArrayList;
 
+import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.adapter.DeviceCandidateAdapter;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 import nodomain.freeyourgadget.gadgetbridge.util.DeviceHelper;
 import nodomain.freeyourgadget.gadgetbridge.util.GB;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.adapter.DeviceCandidateAdapter;
 
 public class DiscoveryActivity extends Activity implements AdapterView.OnItemClickListener {
     private static final Logger LOG = LoggerFactory.getLogger(DiscoveryActivity.class);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -12,7 +12,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
-import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.ProgressBar;
 import android.widget.TextView;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/InstallActivity.java
Patch:
@@ -4,6 +4,7 @@
 
 public interface InstallActivity {
     void setInfoText(String text);
+
     void setInstallEnabled(boolean enable);
 
     void clearInstallItems();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsHost.java
Patch:
@@ -12,9 +12,12 @@ public interface ChartsHost {
     GBDevice getDevice();
 
     void setStartDate(Date startDate);
+
     void setEndDate(Date endDate);
 
     Date getStartDate();
+
     Date getEndDate();
+
     void setDateInfo(String dateInfo);
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/DeviceCandidateAdapter.java
Patch:
@@ -10,10 +10,10 @@
 
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.util.GB;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
+import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 public class DeviceCandidateAdapter extends ArrayAdapter<GBDeviceCandidate> {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBAlarmListAdapter.java
Patch:
@@ -15,9 +15,9 @@
 import java.util.Collections;
 import java.util.Set;
 
-import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.ConfigureAlarms;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBAlarm;
 import nodomain.freeyourgadget.gadgetbridge.model.Alarm;
 
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAdapter.java
Patch:
@@ -13,8 +13,8 @@
 
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.model.BatteryState;
 
 public class GBDeviceAdapter extends ArrayAdapter<GBDevice> {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAppAdapter.java
Patch:
@@ -10,8 +10,8 @@
 
 import java.util.List;
 
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceApp;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceApp;
 
 public class GBDeviceAppAdapter extends ArrayAdapter<GBDeviceApp> {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBAccess.java
Patch:
@@ -4,9 +4,9 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
-import nodomain.freeyourgadget.gadgetbridge.util.GB;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.util.GB;
 
 public abstract class DBAccess extends AsyncTask {
     private final String mTask;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -6,8 +6,8 @@
 import java.util.List;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
-import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivitySample;
 
 public interface DBHandler {
     public SQLiteOpenHelper getHelper();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/UnknownDeviceCoordinator.java
Patch:
@@ -4,11 +4,11 @@
 import android.content.Context;
 import android.net.Uri;
 
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenter;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
+import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
 public class UnknownDeviceCoordinator implements DeviceCoordinator {
     private final UnknownSampleProvider sampleProvider;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandDateConverter.java
Patch:
@@ -13,6 +13,7 @@ public static GregorianCalendar createCalendar() {
 
     /**
      * uses the standard algorithm to convert bytes received from the MiBand to a Calendar object
+     *
      * @param value
      * @return
      */
@@ -25,6 +26,7 @@ public static GregorianCalendar rawBytesToCalendar(byte[] value) {
 
     /**
      * uses the standard algorithm to convert bytes received from the MiBand to a Calendar object
+     *
      * @param value
      * @return
      */
@@ -46,6 +48,7 @@ public static GregorianCalendar rawBytesToCalendar(byte[] value, int offset) {
 
     /**
      * uses the standard algorithm to convert a Calendar object to a byte array to send to MiBand
+     *
      * @param timestamp
      * @return
      */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -12,7 +12,6 @@
 import java.io.InputStream;
 import java.util.Locale;
 
-import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 
 public class MiBandFWHelper {
@@ -48,7 +47,7 @@ public MiBandFWHelper(Uri uri, Context context) throws IOException {
             throw new IOException("Firmware has a filename that looks like a Pebble app/firmware.");
         }
 
-        try (InputStream in = new BufferedInputStream(cr.openInputStream(uri))){
+        try (InputStream in = new BufferedInputStream(cr.openInputStream(uri))) {
             this.fw = FileUtils.readAll(in, 1024 * 1024); // 1 MB
             if (fw.length <= firmwareVersionMajor || fw[firmwareVersionMajor] != 1) {
                 throw new IOException("Firmware major version should be 1, probably this isn't a MiBand firmware.");

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPairingActivity.java
Patch:
@@ -13,12 +13,11 @@
 import android.widget.Toast;
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
-import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
+import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenter;
+import nodomain.freeyourgadget.gadgetbridge.activities.DiscoveryActivity;
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
-import nodomain.freeyourgadget.gadgetbridge.R;
-import nodomain.freeyourgadget.gadgetbridge.activities.DiscoveryActivity;
 
 public class MiBandPairingActivity extends Activity {
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandPreferencesActivity.java
Patch:
@@ -5,18 +5,18 @@
 import android.preference.Preference;
 import android.support.v4.content.LocalBroadcastManager;
 
-import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenter;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.AbstractSettingsActivity;
+import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenter;
 
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.ORIGIN_GENERIC;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.ORIGIN_INCOMING_CALL;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.ORIGIN_K9MAIL;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.ORIGIN_PEBBLEMSG;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.ORIGIN_SMS;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_ADDRESS;
-import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_FITNESS_GOAL;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_DONT_ACK_TRANSFER;
+import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_FITNESS_GOAL;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_MIBAND_WEARSIDE;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_USER_ALIAS;
 import static nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandConst.PREF_USER_GENDER;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandSampleProvider.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.miband;
 
-import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public class MiBandSampleProvider implements SampleProvider {
     public static final byte TYPE_DEEP_SLEEP = 5;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandService.java
Patch:
@@ -179,12 +179,12 @@ public class MiBandService {
     */
 
     /* MODES: probably related to the sample data structure
-	*/
+    */
 
-	public static final byte MODE_REGULAR_DATA_LEN_BYTE = 0x0;
+    public static final byte MODE_REGULAR_DATA_LEN_BYTE = 0x0;
 
     // was MODE_REGULAR_DATA_LEN_MINITE
-	public static final byte MODE_REGULAR_DATA_LEN_MINUTE = 0x1;
+    public static final byte MODE_REGULAR_DATA_LEN_MINUTE = 0x1;
 
     /* PROFILE: unknown
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/MorpheuzSampleProvider.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.devices.pebble;
 
-import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 import nodomain.freeyourgadget.gadgetbridge.devices.SampleProvider;
+import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
 
 public class MorpheuzSampleProvider implements SampleProvider {
     // raw types

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/BluetoothStateChangeReceiver.java
Patch:
@@ -10,7 +10,6 @@
 
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.activities.ControlCenter;
-import nodomain.freeyourgadget.gadgetbridge.service.DeviceCommunicationService;
 
 public class BluetoothStateChangeReceiver extends BroadcastReceiver {
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/MusicPlaybackReceiver.java
Patch:
@@ -3,8 +3,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDevice.java
Patch:
@@ -9,10 +9,10 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import nodomain.freeyourgadget.gadgetbridge.model.BatteryState;
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.model.BatteryState;
+import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
 public class GBDevice implements Parcelable {
     public static final String ACTION_DEVICE_CHANGED

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceCandidate.java
Patch:
@@ -4,9 +4,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 import nodomain.freeyourgadget.gadgetbridge.GBApplication;
 import nodomain.freeyourgadget.gadgetbridge.R;
+import nodomain.freeyourgadget.gadgetbridge.model.DeviceType;
 
 /**
  */

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ActivityAmount.java
Patch:
@@ -2,8 +2,6 @@
 
 import android.content.Context;
 
-import nodomain.freeyourgadget.gadgetbridge.model.ActivityKind;
-
 public class ActivityAmount {
     private int activityKind;
     private short percent;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ItemWithDetails.java
Patch:
@@ -2,6 +2,8 @@
 
 public interface ItemWithDetails {
     String getName();
+
     String getDetails();
+
     int getIcon();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/NotificationType.java
Patch:
@@ -1,6 +1,6 @@
 package nodomain.freeyourgadget.gadgetbridge.model;
 
-public enum NotificationKind {
+public enum NotificationType {
 
     UNDEFINED,
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEOperation.java
Patch:
@@ -14,10 +14,10 @@
  * Abstract base class for a BTLEOperation, i.e. an operation that does more than
  * just sending a few bytes to the device. It typically involves exchanging many messages
  * between the mobile and the device.
- *
+ * <p/>
  * One operation may execute multiple @{link Transaction transactions} with each
  * multiple @{link BTLEAction actions}.
- *
+ * <p/>
  * This class implements GattCallback so that subclasses may override those methods
  * to handle those events.
  * Note: by default all Gatt events are forwarded to AbstractBTLEDeviceSupport, subclasses may override
@@ -33,6 +33,7 @@ protected AbstractBTLEOperation(T support) {
     /**
      * Delegates to the DeviceSupport instance and additionally sets this instance as the Gatt
      * callback for the transaction.
+     *
      * @param taskName
      * @return
      * @throws IOException

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BTLEOperation.java
Patch:
@@ -2,8 +2,6 @@
 
 import java.io.IOException;
 
-import nodomain.freeyourgadget.gadgetbridge.service.devices.miband.MiBandSupport;
-
 public interface BTLEOperation {
     public void perform() throws IOException;
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/actions/SetProgressAction.java
Patch:
@@ -14,6 +14,7 @@ public class SetProgressAction extends PlainAction {
 
     /**
      * When run, will update the progress notification.
+     *
      * @param text
      * @param ongoing
      * @param percentage

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/BatteryInfo.java
Patch:
@@ -11,7 +11,7 @@ public class BatteryInfo extends AbstractInfo {
     public static final byte DEVICE_BATTERY_CHARGING = 2;
     public static final byte DEVICE_BATTERY_CHARGING_FULL = 3;
     public static final byte DEVICE_BATTERY_CHARGE_OFF = 4;
-    
+
     public BatteryInfo(byte[] data) {
         super(data);
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/WeatherNeatSupport.java
Patch:
@@ -51,6 +51,6 @@ private byte[] encodeWeatherNeatMessage(String city, String temperature, String
     public GBDeviceEvent[] handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
         GBDeviceEventSendBytes sendBytes = new GBDeviceEventSendBytes();
         sendBytes.encodedBytes = encodeWeatherNeatMessage("Berlin", "22 C", "cloudy", 0);
-        return new GBDeviceEvent[] {sendBytes};
+        return new GBDeviceEvent[]{sendBytes};
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -5,10 +5,10 @@
 
 import nodomain.freeyourgadget.gadgetbridge.devices.DeviceCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.UnknownDeviceCoordinator;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
-import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
 import nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandCoordinator;
 import nodomain.freeyourgadget.gadgetbridge.devices.pebble.PebbleCoordinator;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDevice;
+import nodomain.freeyourgadget.gadgetbridge.impl.GBDeviceCandidate;
 
 public class DeviceHelper {
     private static DeviceHelper instance = new DeviceHelper();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/FileUtils.java
Patch:
@@ -51,7 +51,8 @@ public static File getExternalFilesDir() throws IOException {
      * Reads the contents of the given InputStream into a byte array, but does not
      * read more than maxLen bytes. If the stream provides more than maxLen bytes,
      * an IOException is thrown.
-     * @param in the stream to read from
+     *
+     * @param in     the stream to read from
      * @param maxLen the maximum number of bytes to read/return
      * @return the bytes read from the InputStream
      * @throws IOException when reading failed or when maxLen was exceeded

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/GB.java
Patch:
@@ -355,7 +355,7 @@ private static Notification createBatteryNotification(String text, String bigTex
                 notificationIntent, 0);
 
         NotificationCompat.Builder nb = new NotificationCompat.Builder(context)
-                .setContentTitle( context.getString(R.string.notif_battery_low_title))
+                .setContentTitle(context.getString(R.string.notif_battery_low_title))
                 .setContentText(text)
                 .setContentIntent(pendingIntent)
                 .setSmallIcon(R.drawable.ic_notification_low_battery)

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/UpdateFirmwareOperation.java
Patch:
@@ -190,10 +190,10 @@ private boolean sendFirmwareData(byte fwbytes[]) {
 
                 if ((i > 0) && (i % 50 == 0)) {
                     builder.write(getCharacteristic(MiBandService.UUID_CHARACTERISTIC_CONTROL_POINT), new byte[]{MiBandService.COMMAND_SYNC});
-                    builder.add(new SetProgressAction("Firmware update in progress", true, (firmwareProgress / len) * 100, getContext()));
+                    builder.add(new SetProgressAction("Firmware update in progress", true, (int)(((float) firmwareProgress) / len * 100), getContext()));
                 }
 
-                LOG.info("Firmware update progress:" + firmwareProgress + " total len:" + len + " progress:" + (firmwareProgress / len));
+                LOG.info("Firmware update progress:" + firmwareProgress + " total len:" + len + " progress:" + (int)(((float) firmwareProgress) / len * 100));
             }
 
             if (!(len % packetLength == 0)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -541,7 +541,7 @@ public void installApp(Uri uri, int appId) {
             return;
         }
 
-        mPBWReader = new PBWReader(uri, getContext(), gbDevice.getHardwareVersion().equals("dvt") ? "basalt" : "aplite");
+        mPBWReader = new PBWReader(uri, getContext(), gbDevice.getHardwareVersion().startsWith("snowy") ? "basalt" : "aplite");
         mPebbleInstallables = mPBWReader.getPebbleInstallables();
         mCurrentInstallableIndex = 0;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleProtocol.java
Patch:
@@ -408,7 +408,7 @@ public byte[] encodeEmail(String from, String subject, String body) {
 
     @Override
     public byte[] encodeGenericNotification(String title, String details, int handle, NotificationKind notificationKind) {
-        return encodeNotification(handle, title, null, details, NOTIFICATION_UNDEFINED, handle != -1, notificationKind);
+        return encodeNotification(handle != -1 ? handle : mRandom.nextInt(), title, null, details, NOTIFICATION_UNDEFINED, handle != -1, notificationKind);
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/operations/FetchActivityOperation.java
Patch:
@@ -111,14 +111,14 @@ private void handleActivityNotif(byte[] value) {
 
             // counter of all data held by the band
             int totalDataToRead = (value[7] & 0xff) | ((value[8] & 0xff) << 8);
-            totalDataToRead *= (dataType == 1) ? 3 : 1;
+            totalDataToRead *= (dataType == MiBandService.MODE_REGULAR_DATA_LEN_MINUTE) ? 3 : 1;
 
 
             // counter of this data block
             int dataUntilNextHeader = (value[9] & 0xff) | ((value[10] & 0xff) << 8);
-            dataUntilNextHeader *= (dataType == 1) ? 3 : 1;
+            dataUntilNextHeader *= (dataType == MiBandService.MODE_REGULAR_DATA_LEN_MINUTE) ? 3 : 1;
 
-            // there is a total of totalDataToRead that will come in chunks (3 bytes per minute if dataType == 1),
+            // there is a total of totalDataToRead that will come in chunks (3 bytes per minute if dataType == 1 (MiBandService.MODE_REGULAR_DATA_LEN_MINUTE)),
             // these chunks are usually 20 bytes long and grouped in blocks
             // after dataUntilNextHeader bytes we will get a new packet of 11 bytes that should be parsed
             // as we just did

File: app/src/test/java/nodomain/freeyourgadget/gadgetbridge/service/TestDeviceSupport.java
Patch:
@@ -94,7 +94,7 @@ public void onAppInfoReq() {
     }
 
     @Override
-    public void onAppStart(UUID uuid) {
+    public void onAppStart(UUID uuid, boolean start) {
 
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ServiceCommand.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum ServiceCommand {
 
-    UNDEFINEND,
+    UNDEFINED,
 
     CALL_ACCEPT,
     CALL_END,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/model/ServiceCommand.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum ServiceCommand {
 
-    UNDEFINEND,
+    UNDEFINED,
 
     CALL_ACCEPT,
     CALL_END,

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractGBFragment.java
Patch:
@@ -1,7 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.activities;
 
-import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.support.annotation.Nullable;
 import android.support.v4.app.FragmentActivity;
 
 /**
@@ -41,7 +41,7 @@ public boolean isVisibleInActivity() {
     }
 
     protected void updateActivityTitle() {
-        FragmentActivity activity = getActivity();
+        FragmentActivity activity = (FragmentActivity) getActivity();
         if (activity != null && !activity.isFinishing() && !activity.isDestroyed()) {
             if (getTitle() != null) {
                 activity.setTitle(getTitle());

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -9,7 +9,6 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.content.LocalBroadcastManager;
-import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.view.Menu;
 import android.view.MenuItem;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/WeekStepsChartFragment.java
Patch:
@@ -126,8 +126,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         View rootView = inflater.inflate(R.layout.fragment_sleepchart, container, false);
 
-        GBDevice device = getHost().getDevice();
-        if(device != null) {
+        GBDevice device = ((ChartsHost) getHost()).getDevice();
+        if (device != null) {
             mTargetSteps = MiBandCoordinator.getFitnessGoal(device.getAddress());
         }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/impl/GBDeviceService.java
Patch:
@@ -175,7 +175,7 @@ public void onReboot() {
     @Override
     public void onFindDevice(boolean start) {
         Intent intent = createIntent().setAction(ACTION_FIND_DEVICE)
-                .putExtra(EXTRA_APP_UUID, start);
+                .putExtra(EXTRA_FIND_START, start);
         invokeService(intent);
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandCoordinator.java
Patch:
@@ -120,7 +120,7 @@ public static UserInfo getConfiguredUserInfo(String miBandAddress) throws Illega
     public static int getWearLocation(String miBandAddress) throws IllegalArgumentException {
         int location = 0; //left hand
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(GBApplication.getContext());
-        if (prefs.getString(MiBandConst.PREF_MIBAND_WEARSIDE, "left") == "right") {
+        if ("right".equals(prefs.getString(MiBandConst.PREF_MIBAND_WEARSIDE, "left"))) {
             location = 1; // right hand
         }
         return location;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/FwAppInstallerActivity.java
Patch:
@@ -47,7 +47,7 @@ public void onReceive(Context context, Intent intent) {
             } else if (action.equals(GBDevice.ACTION_DEVICE_CHANGED)) {
                 device = intent.getParcelableExtra(GBDevice.EXTRA_DEVICE);
                 if (device != null) {
-                    if (!device.isConnected()) {
+                    if (!device.isInitialized()) {
                         setInstallEnabled(false);
                         if (mayConnect) {
                             GB.toast(FwAppInstallerActivity.this, getString(R.string.connecting), Toast.LENGTH_SHORT, GB.INFO);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/pebble/PBWReader.java
Patch:
@@ -147,7 +147,6 @@ public PBWReader(Uri uri, Context context, String platform) {
                         if (appName != null && appCreator != null && appVersion != null) {
                             // FIXME: dont assume WATCHFACE
                             app = new GBDeviceApp(uuid, appName, appCreator, appVersion, GBDeviceApp.Type.WATCHFACE);
-                            isValid = true;
                         }
 
                     } catch (JSONException e) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/AbstractBTLEDeviceSupport.java
Patch:
@@ -132,7 +132,7 @@ protected void addSupportedService(UUID aSupportedService) {
      * @return the characteristic for the given UUID or <code>null</code>
      * @see #addSupportedService(UUID)
      */
-    protected BluetoothGattCharacteristic getCharacteristic(UUID uuid) {
+    public BluetoothGattCharacteristic getCharacteristic(UUID uuid) {
         if (mAvailableCharacteristics == null) {
             return null;
         }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/btle/BtLEQueue.java
Patch:
@@ -61,7 +61,7 @@ public void run() {
             while (!mDisposed && !mCrashed) {
                 try {
                     Transaction transaction = mTransactions.take();
-                    internalGattCallback.setTransactionGattCallback(null);
+                    internalGattCallback.reset();
 
                     if (!isConnected()) {
                         // TODO: request connection and initialization from the outside and wait until finished
@@ -114,7 +114,6 @@ public void run() {
                 } finally {
                     mWaitForActionResultLatch = null;
                     mWaitCharacteristic = null;
-                    internalGattCallback.reset();
                 }
             }
             LOG.info("Queue Dispatch Thread terminated.");
@@ -185,6 +184,7 @@ public void disconnect() {
     }
 
     private void handleDisconnected(int status) {
+        internalGattCallback.reset();
         mTransactions.clear();
         mAbortTransaction = true;
         if (mWaitForActionResultLatch != null) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/pebble/PebbleIoThread.java
Patch:
@@ -123,6 +123,7 @@ public void run() {
                             mBinarySize = pi.getFileSize();
                             mBytesWritten = 0;
                             writeInstallApp(mPebbleProtocol.encodeUploadStart(pi.getType(), mInstallSlot, mBinarySize));
+                            mAppInstallToken = -1;
                             mInstallState = PebbleAppInstallState.WAIT_TOKEN;
                             break;
                         case WAIT_TOKEN:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBApplication.java
Patch:
@@ -7,7 +7,6 @@
 import android.os.Build.VERSION;
 import android.preference.PreferenceManager;
 import android.util.Log;
-import android.widget.Toast;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -27,7 +26,7 @@ public class GBApplication extends Application {
     private static final String TAG = "GBApplication";
     private static GBApplication context;
     private static ActivityDatabaseHandler mActivityDatabaseHandler;
-    private static Lock dbLock = new ReentrantLock();
+    private static final Lock dbLock = new ReentrantLock();
 
     public GBApplication() {
         context = this;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/charts/ChartsActivity.java
Patch:
@@ -132,7 +132,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * A {@link FragmentStatePagerAdapter} that returns a fragment corresponding to
      * one of the sections/tabs/pages.
      */
-    public class SectionsPagerAdapter extends FragmentStatePagerAdapter {
+    public static class SectionsPagerAdapter extends FragmentStatePagerAdapter {
 
         public SectionsPagerAdapter(FragmentManager fm) {
             super(fm);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -115,7 +115,8 @@ public void addGBActivitySample(ActivitySample sample) {
      * @param steps     the sample's steps value
      * @param kind      the raw activity kind of the sample
      */
-    public void addGBActivitySample(int timestamp, byte provider, short intensity, byte steps, byte kind) {
+    @Override
+    public void addGBActivitySample(int timestamp, byte provider, short intensity, short steps, byte kind) {
         try (SQLiteDatabase db = this.getWritableDatabase()) {
             ContentValues values = new ContentValues();
             values.put(KEY_TIMESTAMP, timestamp);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/DBHandler.java
Patch:
@@ -24,7 +24,7 @@ public interface DBHandler {
 
     List<ActivitySample> getSleepSamples(int tsFrom, int tsTo, SampleProvider provider);
 
-    void addGBActivitySample(int timestamp, byte provider, short intensity, byte steps, byte kind);
+    void addGBActivitySample(int timestamp, byte provider, short intensity, short steps, byte kind);
 
     SQLiteDatabase getWritableDatabase();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/devices/miband/MiBandSupport.java
Patch:
@@ -12,6 +12,7 @@
 import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
+import java.nio.charset.Charset;
 import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -918,7 +919,7 @@ private void flushActivityDataHolder() {
                             (int) (activityStruct.activityDataTimestampProgress.getTimeInMillis() / 1000),
                             SampleProvider.PROVIDER_MIBAND,
                             intensity,
-                            steps,
+                            (short) (steps & 0xff),
                             category);
                     activityStruct.activityDataTimestampProgress.add(Calendar.MINUTE, 1);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/service/DeviceCommunicationService.java
Patch:
@@ -133,7 +133,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             }
         }
 
-        // when we get past this, we should have a valid mDeviceSupport and mGBDevice instances
+        // when we get past this, we should have valid mDeviceSupport and mGBDevice instances
 
         switch (action) {
             case ACTION_START:

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/devices/miband/MiBandFWHelper.java
Patch:
@@ -12,6 +12,7 @@
 import java.io.InputStream;
 import java.util.Locale;
 
+import nodomain.freeyourgadget.gadgetbridge.devices.InstallHandler;
 import nodomain.freeyourgadget.gadgetbridge.util.FileUtils;
 
 public class MiBandFWHelper {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/util/DeviceHelper.java
Patch:
@@ -77,5 +77,4 @@ private List<DeviceCoordinator> createCoordinators() {
         result.add(new PebbleCoordinator());
         return result;
     }
-
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/AppManagerActivity.java
Patch:
@@ -26,7 +26,7 @@
 
 public class AppManagerActivity extends Activity {
     public static final String ACTION_REFRESH_APPLIST
-            = "nodomain.freeyourgadget.gadgetbride.appmanager.action.refresh_applist";
+            = "nodomain.freeyourgadget.gadgetbridge.appmanager.action.refresh_applist";
     private static final Logger LOG = LoggerFactory.getLogger(AppManagerActivity.class);
 
     private BroadcastReceiver mReceiver = new BroadcastReceiver() {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/ControlCenter.java
Patch:
@@ -40,10 +40,10 @@ public class ControlCenter extends Activity {
     private static final Logger LOG = LoggerFactory.getLogger(ControlCenter.class);
 
     public static final String ACTION_QUIT
-            = "nodomain.freeyourgadget.gadgetbride.controlcenter.action.quit";
+            = "nodomain.freeyourgadget.gadgetbridge.controlcenter.action.quit";
 
     public static final String ACTION_REFRESH_DEVICELIST
-            = "nodomain.freeyourgadget.gadgetbride.controlcenter.action.set_version";
+            = "nodomain.freeyourgadget.gadgetbridge.controlcenter.action.set_version";
 
     TextView hintTextView;
     ListView deviceListView;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBDevice.java
Patch:
@@ -11,7 +11,7 @@
 
 public class GBDevice implements Parcelable {
     public static final String ACTION_DEVICE_CHANGED
-            = "nodomain.freeyourgadget.gadgetbride.gbdevice.action.device_changed";
+            = "nodomain.freeyourgadget.gadgetbridge.gbdevice.action.device_changed";
     public static final Creator<GBDevice> CREATOR = new Creator<GBDevice>() {
         @Override
         public GBDevice createFromParcel(Parcel source) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractChartFragment.java
Patch:
@@ -30,7 +30,7 @@ public abstract class AbstractChartFragment extends Fragment {
     private static final Logger LOG = LoggerFactory.getLogger(ActivitySleepChartFragment.class);
 
     public static final String ACTION_REFRESH
-            = "nodomain.freeyourgadget.gadgetbride.chart.action.refresh";
+            = "nodomain.freeyourgadget.gadgetbridge.chart.action.refresh";
 
 
     protected static final class ActivityKind {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/GadgetbridgePblSupport.java
Patch:
@@ -36,7 +36,7 @@ public GBDeviceEvent handleMessage(ArrayList<Pair<Integer, Object>> pairs) {
                     break;
                 case KEY_SAMPLES:
                     byte[] samples = (byte[]) pair.second;
-                    LOG.info("got " + samples.length + " samples");
+                    LOG.info("got " + samples.length/2  + " samples");
                     ByteBuffer samplesBuffer = ByteBuffer.wrap(samples);
                     // TODO: read samples and put into database
                     break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/AbstractDeviceSupport.java
Patch:
@@ -18,7 +18,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-import nodomain.freeyourgadget.gadgetbridge.activities.SleepChartActivity;
+import nodomain.freeyourgadget.gadgetbridge.activities.AbstractChartFragment;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEvent;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventAppInfo;
 import nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventCallControl;
@@ -142,7 +142,7 @@ public void handleGBDeviceEvent(GBDeviceEventAppInfo appInfoEvent) {
     public void handleGBDeviceEvent(GBDeviceEventSleepMonitorResult sleepMonitorResult) {
         Context context = getContext();
         LOG.info("Got event for SLEEP_MONIOR_RES");
-        Intent sleepMontiorIntent = new Intent(SleepChartActivity.ACTION_REFRESH);
+        Intent sleepMontiorIntent = new Intent(AbstractChartFragment.ACTION_REFRESH);
         sleepMontiorIntent.putExtra("smartalarm_from", sleepMonitorResult.smartalarm_from);
         sleepMontiorIntent.putExtra("smartalarm_to", sleepMonitorResult.smartalarm_to);
         sleepMontiorIntent.putExtra("recording_base_timestamp", sleepMonitorResult.recording_base_timestamp);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/ControlCenter.java
Patch:
@@ -29,8 +29,8 @@
 import java.util.List;
 import java.util.Set;
 
+import nodomain.freeyourgadget.gadgetbridge.activities.ChartsActivity;
 import nodomain.freeyourgadget.gadgetbridge.activities.ConfigureAlarms;
-import nodomain.freeyourgadget.gadgetbridge.activities.SleepChartActivity;
 import nodomain.freeyourgadget.gadgetbridge.adapter.GBDeviceAdapter;
 import nodomain.freeyourgadget.gadgetbridge.discovery.DiscoveryActivity;
 import nodomain.freeyourgadget.gadgetbridge.miband.MiBandConst;
@@ -195,8 +195,8 @@ public boolean onContextItemSelected(MenuItem item) {
             case R.id.controlcenter_start_sleepmonitor:
                 if (selectedDevice != null) {
                     Intent startIntent;
-                    startIntent = new Intent(ControlCenter.this, SleepChartActivity.class);
-//                    startIntent = new Intent(ControlCenter.this, ChartsActivity.class);
+//                    startIntent = new Intent(ControlCenter.this, SleepChartActivity.class);
+                    startIntent = new Intent(ControlCenter.this, ChartsActivity.class);
                     startIntent.putExtra("device", selectedDevice);
                     startActivity(startIntent);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -120,7 +120,7 @@ public ArrayList<GBActivitySample> getGBActivitySamples(int timestamp_from, int
         String selectQuery = "SELECT  * FROM " + TABLE_GBACTIVITYSAMPLES
                 + " where (provider=" + provider + " and timestamp>=" + timestamp_from + " and timestamp<=" + timestamp_to + ") order by timestamp";
 
-        try (SQLiteDatabase db = this.getWritableDatabase()) {
+        try (SQLiteDatabase db = this.getReadableDatabase()) {
             Cursor cursor = db.rawQuery(selectQuery, null);
 
             if (cursor.moveToFirst()) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBDevice.java
Patch:
@@ -144,6 +144,7 @@ public void setBusyTask(String task) {
         if (mBusyTask != null) {
             LOG.warn("Attempt to mark device as busy with: " + task + ", but is already busy with: " + mBusyTask);
         }
+        LOG.info("Mark device as busy: " + mBusyTask);
         mBusyTask = task;
     }
 
@@ -153,7 +154,9 @@ public void setBusyTask(String task) {
     public void unsetBusyTask() {
         if (mBusyTask == null) {
             LOG.error("Attempt to mark device as not busy anymore, but was not busy before.");
+            return;
         }
+        LOG.info("Mark device as NOT busy anymore: " + mBusyTask);
         mBusyTask = null;
     }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/btle/BtLEQueue.java
Patch:
@@ -71,6 +71,9 @@ public void run() {
                     for (BtLEAction action : transaction.getActions()) {
                         mWaitCharacteristic = action.getCharacteristic();
                         mWaitForActionResultLatch = new CountDownLatch(1);
+                        if (LOG.isDebugEnabled()) {
+                            LOG.debug("About to run action: " + action);
+                        }
                         if (action.run(mBluetoothGatt)) {
                             // check again, maybe due to some condition, action did not need to write, so we can't wait
                             boolean waitForResult = action.expectsResult();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/btle/SetDeviceBusyAction.java
Patch:
@@ -32,6 +32,6 @@ public boolean run(BluetoothGatt gatt) {
 
     @Override
     public String toString() {
-        return getClass().getName() + ": " + busyTask;
+        return getCreationTime() + ": " + getClass().getName() + ": " + busyTask;
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/ControlCenter.java
Patch:
@@ -230,6 +230,7 @@ public void onCancel(DialogInterface dialog) {
                                 }
                             });
                 }
+                return true;
             case R.id.controlcenter_configure_alarms:
                 if (selectedDevice != null) {
                     Intent startIntent;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/EventHandler.java
Patch:
@@ -13,6 +13,8 @@ public interface EventHandler {
 
     void onSetTime(long ts);
 
+    void onSetAlarms();
+
     void onSetCallState(String number, String name, GBCommand command);
 
     void onSetMusicInfo(String artist, String album, String track);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/MiBandService.java
Patch:
@@ -134,6 +134,9 @@ public class MiBandService {
     public static final byte COMMAND_CONFIRM_ACTIVITY_DATA_TRANSFER_COMPLETE = 0xa;
 
     public static final byte COMMAND_FETCH_DATA = 0x6;
+
+    public static final byte COMMAND_SET_TIMER = 0x4;
+
     /*
 
 
@@ -152,8 +155,6 @@ public class MiBandService {
 
 	public static final COMMAND_SET_REALTIME_STEPS_NOTIFICATION = 0x3t
 
-	public static final COMMAND_SET_TIMER = 0x4t
-
 	public static final COMMAND_SET_WEAR_LOCATION = 0xft
 
 	public static final COMMAND_STOP_SYNC_DATA = 0x11t

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleProtocol.java
Patch:
@@ -755,7 +755,7 @@ public GBDeviceCommand decodeResponse(byte[] responseData) {
                 buf.get(tmp, 0, 32);
 
                 versionCmd.fwVersion = new String(tmp).trim();
-                if (versionCmd.fwVersion.startsWith("3.")) {
+                if (versionCmd.fwVersion.startsWith("v3")) {
                     isFw3x = true;
                 }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/SleepChartActivity.java
Patch:
@@ -118,7 +118,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         YAxis y = mChart.getAxisLeft();
         y.setDrawGridLines(false);
-        y.setDrawLabels(false);
+//        y.setDrawLabels(false);
         y.setDrawTopYLabelEntry(false);
         y.setTextColor(Color.WHITE);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -37,7 +37,7 @@ public void onCreate(SQLiteDatabase db) {
                 + KEY_INTENSITY + " SMALLINT,"
                 + KEY_STEPS + " TINYINT,"
                 + KEY_TYPE + " TINYINT,"
-                + " PRIMARY_KEY (" + KEY_TIMESTAMP + "," + KEY_PROVIDER + ") ON CONFLICT REPLACE)" + getWithoutRowId();
+                + " PRIMARY KEY (" + KEY_TIMESTAMP + "," + KEY_PROVIDER + ") ON CONFLICT REPLACE)" + getWithoutRowId();
         db.execSQL(CREATE_GBACTIVITYSAMPLES_TABLE);
     }
 
@@ -127,4 +127,4 @@ public ArrayList<GBActivitySample> getGBActivitySamples(int timestamp_from, int
 
         return GBActivitySampleList;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/database/ActivityDatabaseHandler.java
Patch:
@@ -37,7 +37,7 @@ public void onCreate(SQLiteDatabase db) {
                 + KEY_INTENSITY + " SMALLINT,"
                 + KEY_STEPS + " TINYINT,"
                 + KEY_TYPE + " TINYINT,"
-                + " PRIMARY_KEY (" + KEY_TIMESTAMP + "," + KEY_PROVIDER + ") ON CONFLICT REPLACE)" + getWithoutRowId();
+                + " PRIMARY KEY (" + KEY_TIMESTAMP + "," + KEY_PROVIDER + ") ON CONFLICT REPLACE)" + getWithoutRowId();
         db.execSQL(CREATE_GBACTIVITYSAMPLES_TABLE);
     }
 
@@ -127,4 +127,4 @@ public ArrayList<GBActivitySample> getGBActivitySamples(int timestamp_from, int
 
         return GBActivitySampleList;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/ControlCenter.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.List;
 import java.util.Set;
 
+import nodomain.freeyourgadget.gadgetbridge.activities.SleepChartActivity;
 import nodomain.freeyourgadget.gadgetbridge.adapter.GBDeviceAdapter;
 import nodomain.freeyourgadget.gadgetbridge.discovery.DiscoveryActivity;
 import nodomain.freeyourgadget.gadgetbridge.miband.MiBandConst;
@@ -176,8 +177,8 @@ public boolean onContextItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.controlcenter_start_sleepmonitor:
                 if (selectedDevice != null) {
-                    Intent startIntent = new Intent(ControlCenter.this, SleepMonitorActivity.class);
-//                    Intent startIntent = new Intent(ControlCenter.this, AbstractChartActivity.class);
+//                    Intent startIntent = new Intent(ControlCenter.this, SleepMonitorActivity.class);
+                    Intent startIntent = new Intent(ControlCenter.this, SleepChartActivity.class);
                     startIntent.putExtra("device", selectedDevice);
                     startActivity(startIntent);
                 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/MiBandSupport.java
Patch:
@@ -51,8 +51,8 @@ public class MiBandSupport extends AbstractBTLEDeviceSupport {
     private static final Logger LOG = LoggerFactory.getLogger(MiBandSupport.class);
     private static final Logger ACTIVITYLOG = LoggerFactory.getLogger("activity");
 
-    //temporary buffer, size is 60 because we want to store complete minutes (1 minute = 3 bytes)
-    private static final int activityDataHolderSize = 60;
+    //temporary buffer, size is a multiple of 60 because we want to store complete minutes (1 minute = 3 bytes)
+    private static final int activityDataHolderSize = 60 * 24; // 8h
     private byte[] activityDataHolder = new byte[activityDataHolderSize];
     //index of the buffer above
     private int activityDataHolderProgress = 0;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/btle/BtLEQueue.java
Patch:
@@ -242,8 +242,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
             }
 
             if (status != BluetoothGatt.GATT_SUCCESS) {
-                LOG.warn("ignoring connection state event with status " + status);
-                return;
+                LOG.warn("connection state event with error status " + status);
             }
 
             switch (newState) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/btle/AbstractBTLEDeviceSupport.java
Patch:
@@ -77,6 +77,7 @@ protected TransactionBuilder performInitialized(String taskName) throws IOExcept
         if (!isInitialized()) {
             // first, add a transaction that performs device initialization
             TransactionBuilder builder = createTransactionBuilder("Initialize device");
+            builder.add(new CheckInitializedAction(gbDevice));
             initializeDevice(builder).queue(getQueue());
         }
         return createTransactionBuilder(taskName);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/btle/BtLEQueue.java
Patch:
@@ -87,15 +87,14 @@ public void run() {
                         }
                     }
                 } catch (InterruptedException ignored) {
-                    mWaitForActionResultLatch = null;
                     mConnectionLatch = null;
                     LOG.debug("Thread interrupted");
                 } catch (Throwable ex) {
                     LOG.error("Queue Dispatch Thread died: " + ex.getMessage());
                     mCrashed = true;
-                    mWaitForActionResultLatch = null;
                     mConnectionLatch = null;
                 } finally {
+                    mWaitForActionResultLatch = null;
                     mWaitCharacteristic = null;
                 }
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleIoThread.java
Patch:
@@ -325,7 +325,7 @@ public void run() {
     @Override
     synchronized public void write(byte[] bytes) {
         // block writes if app installation in in progress
-        if (mIsConnected && !mIsInstalling) {
+        if (mIsConnected && (!mIsInstalling || mInstallState == PebbleAppInstallState.APP_WAIT_SLOT)) {
             try {
                 mOutStream.write(bytes);
                 mOutStream.flush();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/EventHandler.java
Patch:
@@ -22,4 +22,6 @@ public interface EventHandler {
     void onAppDelete(int id, int index);
 
     void onPhoneVersion(byte os);
+
+    void onReboot();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/protocol/GBDeviceProtocol.java
Patch:
@@ -48,7 +48,7 @@ public byte[] encodePhoneVersion(byte os) {
         return null;
     }
 
-    public GBDeviceCommand decodeResponse(byte[] responseData) {
-        return null;
-    }
+    public byte[] encodeReboot() { return null; }
+
+    public GBDeviceCommand decodeResponse(byte[] responseData) { return null; }
 }
\ No newline at end of file

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/AppManagerActivity.java
Patch:
@@ -50,7 +50,6 @@ public void onReceive(Context context, Intent intent) {
         }
     };
     final List<GBDeviceApp> appList = new ArrayList<>();
-    private ListView appListView;
     private GBDeviceAppAdapter mGBDeviceAppAdapter;
     private GBDeviceApp selectedApp = null;
 
@@ -60,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_appmanager);
         getActionBar().setDisplayHomeAsUpEnabled(true);
 
-        appListView = (ListView) findViewById(R.id.appListView);
+        ListView appListView = (ListView) findViewById(R.id.appListView);
         mGBDeviceAppAdapter = new GBDeviceAppAdapter(this, appList);
         appListView.setAdapter(this.mGBDeviceAppAdapter);
         registerForContextMenu(appListView);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/DeviceCoordinator.java
Patch:
@@ -7,9 +7,9 @@
 public interface DeviceCoordinator {
     String EXTRA_DEVICE_MAC_ADDRESS = "nodomain.freeyourgadget.gadgetbridge.discovery.DeviceCandidate.EXTRA_MAC_ADDRESS";
 
-    public boolean supports(DeviceCandidate candidate);
-    public boolean supports(GBDevice device);
-    public DeviceType getDeviceType();
+    boolean supports(DeviceCandidate candidate);
+    boolean supports(GBDevice device);
+    DeviceType getDeviceType();
 
     Class<? extends Activity> getPairingActivity();
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/DeviceHelper.java
Patch:
@@ -1,7 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge;
 
-import android.bluetooth.BluetoothClass;
-
 import java.util.ArrayList;
 import java.util.List;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBCallControlReceiver.java
Patch:
@@ -39,8 +39,6 @@ public void onReceive(Context context, Intent intent) {
                 }
                 break;
             default:
-                return;
         }
-
     }
 }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AbstractSettingsActivity.java
Patch:
@@ -53,7 +53,7 @@ public void updateSummary(Preference preference, Object value) {
                 preference.setSummary(stringValue);
             }
         }
-    };
+    }
 
     private static class ExtraSetSummaryOnChangeListener extends SimpleSetSummaryOnChangeListener {
         private Preference.OnPreferenceChangeListener delegate;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/activities/AndroidPairingActivity.java
Patch:
@@ -1,10 +1,7 @@
 package nodomain.freeyourgadget.gadgetbridge.activities;
 
 import android.app.Activity;
-import android.support.v7.app.ActionBarActivity;
 import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
 
 import nodomain.freeyourgadget.gadgetbridge.R;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/DeviceCandidateAdapter.java
Patch:
@@ -18,13 +18,11 @@
 public class DeviceCandidateAdapter extends ArrayAdapter<DeviceCandidate> {
 
     private final Context context;
-    private final List<DeviceCandidate> deviceCandidates;
 
     public DeviceCandidateAdapter(Context context, List<DeviceCandidate> deviceCandidates) {
         super(context, 0, deviceCandidates);
 
         this.context = context;
-        this.deviceCandidates = deviceCandidates;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAppAdapter.java
Patch:
@@ -16,13 +16,11 @@
 public class GBDeviceAppAdapter extends ArrayAdapter<GBDeviceApp> {
 
     private final Context context;
-    private final List<GBDeviceApp> appList;
 
     public GBDeviceAppAdapter(Context context, List<GBDeviceApp> appList) {
         super(context, 0, appList);
 
         this.context = context;
-        this.appList = appList;
     }
 
     @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/discovery/DiscoveryActivity.java
Patch:
@@ -93,7 +93,6 @@ public void run() {
     private ProgressBar progressView;
     private BluetoothAdapter adapter;
     private ArrayList<DeviceCandidate> deviceCandidates = new ArrayList<>();
-    private ListView deviceCandidatesView;
     private DeviceCandidateAdapter cadidateListAdapter;
     private Button startButton;
     private Scanning isScanning = Scanning.SCANNING_OFF;
@@ -122,7 +121,7 @@ public void onClick(View v) {
         progressView.setProgress(0);
         progressView.setIndeterminate(true);
         progressView.setVisibility(View.GONE);
-        deviceCandidatesView = (ListView) findViewById(R.id.discovery_deviceCandidatesView);
+        ListView deviceCandidatesView = (ListView) findViewById(R.id.discovery_deviceCandidatesView);
 
         cadidateListAdapter = new DeviceCandidateAdapter(this, deviceCandidates);
         deviceCandidatesView.setAdapter(cadidateListAdapter);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/MiBandConst.java
Patch:
@@ -1,7 +1,5 @@
 package nodomain.freeyourgadget.gadgetbridge.miband;
 
-import nodomain.freeyourgadget.gadgetbridge.GB;
-
 public interface MiBandConst {
     String PREF_USER_ALIAS = "mi_user_alias";
     String PREF_USER_YEAR_OF_BIRTH = "mi_user_year_of_birth";

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/MiBandPreferencesActivity.java
Patch:
@@ -3,11 +3,9 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.preference.Preference;
-import android.preference.PreferenceActivity;
 import android.support.v4.content.LocalBroadcastManager;
 
 import nodomain.freeyourgadget.gadgetbridge.ControlCenter;
-import nodomain.freeyourgadget.gadgetbridge.GB;
 import nodomain.freeyourgadget.gadgetbridge.R;
 import nodomain.freeyourgadget.gadgetbridge.activities.AbstractSettingsActivity;
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/MiBandSupport.java
Patch:
@@ -279,8 +279,8 @@ private void handlePairResult(byte[] pairResult, int status) {
             if (pairResult.length == 1) {
                 try {
                     byte b = pairResult[0];
-                    Integer intValue = Integer.valueOf(b);
-                    if (intValue.intValue() == 2) {
+                    Integer intValue = (int) b;
+                    if (intValue == 2) {
                         LOG.info("Successfully paired  MI device");
                         return;
                     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/UserInfo.java
Patch:
@@ -74,8 +74,7 @@ private UserInfo(String address, String alias, int gender, int age, int height,
             sequence[u] = normalizedAlias.getBytes()[u - 9];
 
         byte[] crcSequence = new byte[19];
-        for (int u = 0; u < crcSequence.length; u++)
-            crcSequence[u] = sequence[u];
+        System.arraycopy(sequence, 0, crcSequence, 0, crcSequence.length);
 
         sequence[19] = (byte) ((getCRC8(crcSequence) ^ Integer.parseInt(address.substring(address.length() - 2), 16)) & 0xff);
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PBWReader.java
Patch:
@@ -52,7 +52,7 @@ public PBWReader(Uri uri, Context context) {
         this.uri = uri;
         cr = context.getContentResolver();
 
-        InputStream fin = null;
+        InputStream fin;
         try {
             fin = new BufferedInputStream(cr.openInputStream(uri));
 
@@ -153,7 +153,7 @@ public GBDeviceApp getGBDeviceApp() {
     }
 
     public ZipInputStream getInputStreamFile(String filename) {
-        InputStream fin = null;
+        InputStream fin;
         try {
             fin = new BufferedInputStream(cr.openInputStream(uri));
 
@@ -163,7 +163,7 @@ public ZipInputStream getInputStreamFile(String filename) {
         }
 
         ZipInputStream zis = new ZipInputStream(fin);
-        ZipEntry ze = null;
+        ZipEntry ze;
         try {
             while ((ze = zis.getNextEntry()) != null) {
                 if (ze.getName().equals(filename)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleProtocol.java
Patch:
@@ -657,9 +657,9 @@ public GBDeviceCommand decodeResponse(byte[] responseData) {
                 switch (pebbleCmd) {
                     case APPLICATIONMESSAGE_PUSH:
                         UUID uuid = new UUID(uuid_high, uuid_low);
-                        Log.info(TAG, "got APPLICATIONMESSAGE PUSH from UUID " + uuid + " , dict size " + dictSize);
+                        LOG.info("got APPLICATIONMESSAGE PUSH from UUID " + uuid + " , dict size " + dictSize);
                         if (WeatherNeatUUID.equals(uuid)) {
-                            Log.info(TAG, "We know you, you are WeatherNeat");
+                            LOG.info("We know you, you are WeatherNeat");
                             GBDeviceCommandSendBytes sendBytes = new GBDeviceCommandSendBytes();
                             sendBytes.encodedBytes = encodeApplicationMessageTest();
                             cmd = sendBytes;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -21,10 +21,10 @@ public class PebbleReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
 
         SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
-        if ("never".equals(sharedPrefs.getString("notification_mode_pebblemsg", "never"))) {
+        if ("never".equals(sharedPrefs.getString("notification_mode_pebblemsg", "when_screen_off"))) {
             return;
         }
-        if ("when_screen_off".equals(sharedPrefs.getString("notification_mode_pebblemsg", "never"))) {
+        if ("when_screen_off".equals(sharedPrefs.getString("notification_mode_pebblemsg", "when_screen_off"))) {
             PowerManager powermanager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
             if (powermanager.isScreenOn()) {
                 return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/miband/UserInfo.java
Patch:
@@ -31,7 +31,7 @@ public static UserInfo getDefault(String btAddress) {
      * @throws IllegalArgumentException when the given values are not valid
      */
     public static UserInfo create(String address, String alias, int gender, int age, int height, int weight, int type) throws IllegalArgumentException {
-        if (address == null || alias == null || gender <= 0 || age <= 0 || weight <= 0 || type <= 0) {
+        if (address == null || address.length() == 0 || alias == null || alias.length() == 0 || gender < 0 || age <= 0 || weight <= 0 || type < 0) {
             throw new IllegalArgumentException("Invalid parameters");
         }
         try {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/externalevents/PebbleReceiver.java
Patch:
@@ -21,10 +21,10 @@ public class PebbleReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
 
         SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
-        if ("never".equals(sharedPrefs.getString("notification_mode_pebblemsg", "when_screen_off"))) {
+        if ("never".equals(sharedPrefs.getString("notification_mode_pebblemsg", "never"))) {
             return;
         }
-        if ("when_screen_off".equals(sharedPrefs.getString("notification_mode_pebblemsg", "when_screen_off"))) {
+        if ("when_screen_off".equals(sharedPrefs.getString("notification_mode_pebblemsg", "never"))) {
             PowerManager powermanager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
             if (powermanager.isScreenOn()) {
                 return;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/protocol/GBDeviceCommand.java
Patch:
@@ -11,6 +11,7 @@ public enum CommandClass {
         APP_INFO,
         VERSION_INFO,
         APP_MANAGEMENT_RES,
+        SEND_BYTES,
     }
 }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/BluetoothCommunicationService.java
Patch:
@@ -130,7 +130,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     BluetoothDevice btDevice = mBtAdapter.getRemoteDevice(btDeviceAddress);
                     if (btDevice != null) {
                         if (btDevice.getName() == null || btDevice.getName().equals("MI")) { //FIXME: workaround for Miband not being paired
-                            mGBDevice = new GBDevice(btDeviceAddress, btDevice.getName(), GBDevice.Type.MIBAND);
+                            mGBDevice = new GBDevice(btDeviceAddress, "MI", GBDevice.Type.MIBAND);
                             mDeviceSupport = new MiBandSupport();
                         } else if (btDevice.getName().indexOf("Pebble") == 0) {
                             mGBDevice = new GBDevice(btDeviceAddress, btDevice.getName(), GBDevice.Type.PEBBLE);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/GBDevice.java
Patch:
@@ -10,7 +10,7 @@
 public class GBDevice implements Parcelable {
     public static final String ACTION_DEVICE_CHANGED
             = "nodomain.freeyourgadget.gadgetbride.gbdevice.action.device_changed";
-    public static final Creator CREATOR = new Creator<GBDevice>() {
+    public static final Creator<GBDevice> CREATOR = new Creator<GBDevice>() {
         @Override
         public GBDevice createFromParcel(Parcel source) {
             return new GBDevice(source);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/ControlCenter.java
Patch:
@@ -185,7 +185,7 @@ private void refreshPairedDevices() {
 
             SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(this);
             String miAddr = sharedPrefs.getString("development_miaddr", null);
-            if (miAddr != null && !miAddr.equals("") && !miAddr.equals(connectedDevice.getAddress())) {
+            if (miAddr != null && !miAddr.equals("") && (connectedDevice == null || !miAddr.equals(connectedDevice.getAddress()))) {
                 deviceList.add(new GBDevice(miAddr, "MI", GBDevice.Type.MIBAND));
             }
 

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleIoThread.java
Patch:
@@ -80,14 +80,15 @@ public PebbleIoThread(GBDevice gbDevice, GBDeviceProtocol gbDeviceProtocol, Blue
     protected boolean connect(String btDeviceAddress) {
         BluetoothDevice btDevice = mBtAdapter.getRemoteDevice(btDeviceAddress);
         ParcelUuid uuids[] = btDevice.getUuids();
+        GBDevice.State originalState = gbDevice.getState();
         try {
             mBtSocket = btDevice.createRfcommSocketToServiceRecord(uuids[0].getUuid());
             mBtSocket.connect();
             mmInStream = mBtSocket.getInputStream();
             mmOutStream = mBtSocket.getOutputStream();
         } catch (IOException e) {
             e.printStackTrace();
-            gbDevice.setState(GBDevice.State.NOT_CONNECTED);
+            gbDevice.setState(originalState);
             mmInStream = null;
             mmOutStream = null;
             mBtSocket = null;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/adapter/GBDeviceAppAdapter.java
Patch:
@@ -42,6 +42,9 @@ public View getView(int position, View view, ViewGroup parent) {
         deviceStatusLabel.setText(deviceApp.getVersion() + " by " + deviceApp.getCreator());
         deviceNameLabel.setText(deviceApp.getName());
         switch (deviceApp.getType()) {
+            case APP_ACTIVITYTRACKER:
+                deviceImageView.setImageResource(R.drawable.ic_activitytracker);
+                break;
             case WATCHFACE:
                 deviceImageView.setImageResource(R.drawable.ic_watchface);
                 break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/NotificationListener.java
Patch:
@@ -65,6 +65,7 @@ public void onNotificationPosted(StatusBarNotification sbn) {
          */
 
         if (source.equals("android") ||
+                source.equals("com.android.systemui" ) ||
                 source.equals("com.android.dialer") ||
                 source.equals("com.fsck.k9") ||
                 source.equals("com.android.mms")) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleAppInstallerActivity.java
Patch:
@@ -31,13 +31,12 @@ protected void onCreate(Bundle savedInstanceState) {
         debugTextView = (TextView) findViewById(R.id.debugTextView);
         installButton = (Button) findViewById(R.id.installButton);
 
-        debugTextView.setText("contents:\n");
         final Uri uri = getIntent().getData();
         PBWReader pbwReader = new PBWReader(uri, getApplicationContext());
         GBDeviceApp app = pbwReader.getGBDeviceApp();
 
         if (pbwReader != null && app != null) {
-            debugTextView.setText("This is just a test, you cant install anything yet \n\n" + app.getName() + " Version " + app.getVersion() + " by " + app.getCreator() + "\n");
+            debugTextView.setText("THIS IS HIGHLY EXPERIMENTAL PROCEED AT YOUR OWN RISK\n\n\n" + app.getName() + " Version " + app.getVersion() + " by " + app.getCreator() + "\n");
             installButton.setEnabled(true);
             installButton.setOnClickListener(new View.OnClickListener() {
                 @Override

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/pebble/PebbleAppInstallerActivity.java
Patch:
@@ -34,8 +34,8 @@ protected void onCreate(Bundle savedInstanceState) {
         debugTextView.setText("contents:\n");
         final Uri uri = getIntent().getData();
         PBWReader pbwReader = new PBWReader(uri, getApplicationContext());
-
         GBDeviceApp app = pbwReader.getGBDeviceApp();
+
         if (pbwReader != null && app != null) {
             debugTextView.setText("This is just a test, you cant install anything yet \n\n" + app.getName() + " Version " + app.getVersion() + " by " + app.getCreator() + "\n");
             installButton.setEnabled(true);

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/DebugActivity.java
Patch:
@@ -151,7 +151,7 @@ private void testNotification() {
         ncomp.setContentTitle("Test Notification");
         ncomp.setContentText("This is a Test Notification from Gadgetbridge");
         ncomp.setTicker("This is a Test Notification from Gadgetbridge");
-        ncomp.setSmallIcon(R.drawable.ic_launcher);
+        ncomp.setSmallIcon(R.drawable.ic_notification);
         ncomp.setAutoCancel(true);
         nManager.notify((int) System.currentTimeMillis(), ncomp.build());
     }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/AppManagerActivity.java
Patch:
@@ -38,8 +38,9 @@ public void onReceive(Context context, Intent intent) {
                     String appCreator = intent.getStringExtra("app_creator" + i.toString());
                     int id = intent.getIntExtra("app_id" + i.toString(), -1);
                     int index = intent.getIntExtra("app_index" + i.toString(), -1);
+                    GBDeviceApp.Type appType = GBDeviceApp.Type.values()[intent.getIntExtra("app_type" + i.toString(), 0)];
 
-                    appList.add(new GBDeviceApp(id, index, appName, appCreator, ""));
+                    appList.add(new GBDeviceApp(id, index, appName, appCreator, "", appType));
                 }
                 mGBDeviceAppAdapter.notifyDataSetChanged();
             }

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/BluetoothStateChangeReceiver.java
Patch:
@@ -17,7 +17,7 @@ public void onReceive(Context context, Intent intent) {
             if (intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, -1) == BluetoothAdapter.STATE_ON) {
 
                 Intent refreshIntent = new Intent(ControlCenter.ACTION_REFRESH_DEVICELIST);
-                context.sendBroadcast(refreshIntent);
+                LocalBroadcastManager.getInstance(context).sendBroadcast(refreshIntent);
 
                 SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
                 if (!sharedPrefs.getBoolean("general_autoconnectonbluetooth", false)) {

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/BluetoothCommunicationService.java
Patch:
@@ -99,7 +99,7 @@ private Notification createNotification(String text) {
                 .setContentTitle("Gadgetbridge")
                 .setTicker(text)
                 .setContentText(text)
-                .setSmallIcon(R.drawable.ic_launcher)
+                .setSmallIcon(R.drawable.ic_notification)
                 .addAction(android.R.drawable.ic_menu_close_clear_cancel, "Quit", pendingIntentStop)
                 .setContentIntent(pendingIntent)
                 .setOngoing(true).build();

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/PhoneCallReceiver.java
Patch:
@@ -53,8 +53,7 @@ public void onCallStateChanged(Context context, int state, String number) {
                 if (mLastState == TelephonyManager.CALL_STATE_RINGING) {
                     //pebblePhoneCommand = PebbleProtocol.PHONECONTROL_MISSEDCALL;
                     pebblePhoneCommand = PebbleProtocol.PHONECONTROL_END; // MISSED CALL DOES NOT WORK
-                }
-                else {
+                } else {
                     pebblePhoneCommand = PebbleProtocol.PHONECONTROL_END;
                 }
                 break;

File: app/src/main/java/nodomain/freeyourgadget/gadgetbridge/PebbleProtocol.java
Patch:
@@ -133,7 +133,7 @@ public static byte[] encodeSetTime(long ts) {
         return buf.array();
     }
 
-    public static byte[] encodeIncomingCall(String number, String name, byte state) {
+    public static byte[] encodePhoneState(String number, String name, byte state) {
         String cookie = "000"; // That's a dirty trick to make the cookie part 4 bytes long :P
         String[] parts = {cookie, number, name};
         return encodeMessage(ENDPOINT_PHONECONTROL, state, parts);

