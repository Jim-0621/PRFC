File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImageCropActivity.java
Patch:
@@ -129,6 +129,7 @@ public void onBitmapSaveError(File file) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
+        mCropImageView.setOnBitmapSaveCompleteListener(null);
         if (null != mBitmap && !mBitmap.isRecycled()) {
             mBitmap.recycle();
             mBitmap = null;

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImageCropActivity.java
Patch:
@@ -129,6 +129,7 @@ public void onBitmapSaveError(File file) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
+        mCropImageView.setOnBitmapSaveCompleteListener(null);
         if (null != mBitmap && !mBitmap.isRecycled()) {
             mBitmap.recycle();
             mBitmap = null;

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImageGridActivity.java
Patch:
@@ -322,8 +322,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                     setResult(ImagePicker.RESULT_CODE_ITEMS, intent);   //单选不需要裁剪，返回数据
                     finish();
                 }
-            }
-            if (directPhoto){
+            } else if (directPhoto){
                 finish();
             }
         }

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImagePreviewActivity.java
Patch:
@@ -32,7 +32,7 @@ public class ImagePreviewActivity extends ImagePreviewBaseActivity implements Im
     private boolean isOrigin;                      //是否选中原图
     private SuperCheckBox mCbCheck;                //是否选中当前图片的CheckBox
     private SuperCheckBox mCbOrigin;               //原图
-    private Button mBtnOk;                       //确认图片的选择
+    private Button mBtnOk;                         //确认图片的选择
     private View bottomBar;
 
     @Override

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImagePreviewBaseActivity.java
Patch:
@@ -53,6 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
         RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) topBar.getLayoutParams();
         params.topMargin = Utils.getStatusHeight(this);
         topBar.setLayoutParams(params);
+        topBar.findViewById(R.id.btn_ok).setVisibility(View.GONE);
 
         mTitleCount = (TextView) findViewById(R.id.tv_des);
 

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImageCropActivity.java
Patch:
@@ -96,7 +96,7 @@ public void onClick(View v) {
 
     @Override
     public void onBitmapSaveSuccess(File file) {
-        Toast.makeText(ImageCropActivity.this, "裁剪成功:" + file.getAbsolutePath(), Toast.LENGTH_SHORT).show();
+//        Toast.makeText(ImageCropActivity.this, "裁剪成功:" + file.getAbsolutePath(), Toast.LENGTH_SHORT).show();
 
         //裁剪后替换掉返回数据的内容，但是不要改变全局中的选中数据
         mImageItems.remove(0);

File: imagepicker/src/main/java/com/lzy/imagepicker/ui/ImageGridActivity.java
Patch:
@@ -15,11 +15,11 @@
 import com.lzy.imagepicker.ImageDataSource;
 import com.lzy.imagepicker.ImagePicker;
 import com.lzy.imagepicker.R;
+import com.lzy.imagepicker.Utils;
 import com.lzy.imagepicker.adapter.ImageFolderAdapter;
 import com.lzy.imagepicker.adapter.ImageGridAdapter;
 import com.lzy.imagepicker.bean.ImageFolder;
 import com.lzy.imagepicker.bean.ImageItem;
-import com.lzy.imagepicker.Utils;
 
 import java.util.List;
 
@@ -221,7 +221,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
             }
         } else {
             //如果是裁剪，因为裁剪指定了存储的Uri，所以返回的data一定为null
-            if (requestCode == ImagePicker.REQUEST_CODE_TAKE) {
+            if (resultCode == RESULT_OK && requestCode == ImagePicker.REQUEST_CODE_TAKE) {
                 //发送广播通知图片增加了
                 ImagePicker.galleryAddPic(this, imagePicker.getTakeImageFile());
                 ImageItem imageItem = new ImageItem();

