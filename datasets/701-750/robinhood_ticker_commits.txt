File: ticker/src/main/java/com/robinhood/ticker/TickerColumnManager.java
Patch:
@@ -59,7 +59,7 @@ void setCharacterLists(String... characterLists) {
         }
     }
 
-    List<char[]> getCharacterLists() {
+    TickerCharacterList[] getCharacterLists() {
         return characterLists;
     }
 

File: ticker-sample/src/main/java/com/robinhood/ticker/sample/BaseActivity.java
Patch:
@@ -15,7 +15,7 @@ public abstract class BaseActivity extends AppCompatActivity {
     protected void onResume() {
         super.onResume();
         resumed = true;
-        handler.post(createRunnable());
+        handler.postDelayed(createRunnable(), 1000);
     }
 
     private Runnable createRunnable() {

File: ticker/src/main/java/com/robinhood/ticker/TickerView.java
Patch:
@@ -262,7 +262,6 @@ public synchronized void setText(String text, boolean animate) {
 
         columnManager.setText(targetText);
         setContentDescription(text);
-        checkForRelayout();
 
         if (animate) {
             // Kick off the animator that draws the transition
@@ -276,6 +275,7 @@ public synchronized void setText(String text, boolean animate) {
         } else {
             columnManager.setAnimationProgress(1f);
             columnManager.onAnimationEnd();
+            checkForRelayout();
             invalidate();
         }
     }

File: ticker/src/main/java/com/robinhood/ticker/TickerView.java
Patch:
@@ -55,7 +55,7 @@
 public class TickerView extends View {
     private static final int DEFAULT_TEXT_SIZE = 12;
     private static final int DEFAULT_TEXT_COLOR = Color.BLACK;
-    private static final long DEFAULT_ANIMATION_DURATION = 350;
+    private static final int DEFAULT_ANIMATION_DURATION = 350;
     private static final Interpolator DEFAULT_ANIMATION_INTERPOLATOR =
             new AccelerateDecelerateInterpolator();
 
@@ -118,7 +118,8 @@ protected void init(Context context, AttributeSet attrs, int defStyleAttr, int d
                         res.getDisplayMetrics()));
         setTextSize(textSize);
 
-        animationDurationInMillis = DEFAULT_ANIMATION_DURATION;
+        animationDurationInMillis = arr.getInt(R.styleable.TickerView_ticker_animationDuration,
+                DEFAULT_ANIMATION_DURATION);
         animationInterpolator = DEFAULT_ANIMATION_INTERPOLATOR;
 
         arr.recycle();

File: ticker/src/main/java/com/robinhood/ticker/TickerView.java
Patch:
@@ -142,7 +142,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
      * the start and end characters.
      *
      * <p>For example, given the list [a,b,c,d,e], if the view wants to animate from 'd' to 'a',
-     * it will know that it has to go from 'd' -> 'c' -> 'b' -> 'a', and these are the characters
+     * it will know that it has to go from 'd' to 'c' to 'b' to 'a', and these are the characters
      * that show up during the animation scroll.
      *
      * <p>You can find some helpful character list generators in {@link TickerUtils}.
@@ -185,7 +185,7 @@ public void setText(String text) {
      * animate to the provided text or not.
      *
      * @param text the text to display.
-     * @param animate whether to animate to {@param text}.
+     * @param animate whether to animate to text.
      */
     public synchronized void setText(String text, boolean animate) {
         final char[] targetText = text == null ? new char[0] : text.toCharArray();

