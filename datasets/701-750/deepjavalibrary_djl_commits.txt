File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -40,7 +40,7 @@ public abstract class NDArrayAdapter implements NDArray {
 
     protected NDManager manager;
     protected NDManager alternativeManager;
-    private NDArray alternativeArray;
+    protected NDArray alternativeArray;
 
     protected Shape shape;
     protected DataType dataType;

File: api/src/main/java/ai/djl/modality/nlp/translator/ZeroShotClassificationServingTranslator.java
Patch:
@@ -32,9 +32,9 @@ public class ZeroShotClassificationServingTranslator
     private Translator<ZeroShotClassificationInput, ZeroShotClassificationOutput> translator;
 
     /**
-     * Constructs a {@code TokenClassificationServingTranslator} instance.
+     * Constructs a {@code ZeroShotClassificationServingTranslator} instance.
      *
-     * @param translator a {@code Translator} processes token classification input
+     * @param translator a {@code Translator} processes zero-shot-classification input
      */
     public ZeroShotClassificationServingTranslator(
             Translator<ZeroShotClassificationInput, ZeroShotClassificationOutput> translator) {

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/ZeroShotClassificationTranslator.java
Patch:
@@ -116,7 +116,7 @@ private String applyTemplate(String template, String arg) {
             return template + arg;
         }
         int len = template.length();
-        return template.substring(0, pos) + arg + template.substring(pos + 1, len);
+        return template.substring(0, pos) + arg + template.substring(pos + 2, len);
     }
 
     /**

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -31,6 +31,7 @@
 import java.util.List;
 
 /** {@code MxNDArrayEx} is the MXNet implementation of the {@link NDArrayEx}. */
+@SuppressWarnings("dangling-doc-comments")
 class MxNDArrayEx implements NDArrayEx {
 
     private MxNDArray array;

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/JnaUtils.java
Patch:
@@ -51,7 +51,7 @@
 /**
  * A class containing utilities to interact with the MXNet Engine's Java Native Access (JNA) layer.
  */
-@SuppressWarnings("MissingJavadocMethod")
+@SuppressWarnings({"MissingJavadocMethod", "dangling-doc-comments"})
 public final class JnaUtils {
 
     public static final ObjectPool<PointerByReference> REFS =

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/jni/CharSpan.java
Patch:
@@ -10,8 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-
-/** A class holds character span information. */
 package ai.djl.huggingface.tokenizers.jni;
 
 /** A class holds character span information. */

File: integration/src/test/java/ai/djl/integration/IntegrationTests.java
Patch:
@@ -38,7 +38,7 @@ public void runIntegrationTests() {
             // TODO: windows CPU build is having OOM issue if 3 engines are loaded and running tests
             // together
             if (System.getProperty("os.name").startsWith("Win")) {
-                engines.add("MXNet");
+                engines.add("PyTorch");
             } else if ("aarch64".equals(System.getProperty("os.arch"))) {
                 engines.add("PyTorch");
             } else {

File: api/src/main/java/ai/djl/modality/nlp/translator/TokenClassificationServingTranslator.java
Patch:
@@ -56,6 +56,7 @@ public NDList processInput(TranslatorContext ctx, Input input) throws Exception
         TextPrompt prompt = TextPrompt.parseInput(input);
         if (prompt.isBatch()) {
             ctx.setAttachment("batch", Boolean.TRUE);
+            return translator.batchProcessInput(ctx, prompt.getBatch());
         }
 
         NDList ret = translator.processInput(ctx, prompt.getText());

File: api/src/main/java/ai/djl/ndarray/BytesSupplierImpl.java
Patch:
@@ -40,7 +40,7 @@ class BytesSupplierImpl implements BytesSupplier {
     public byte[] getAsBytes() {
         if (buf == null) {
             if (value == null) {
-                value = JsonUtils.toJson(obj) + '\n';
+                value = JsonUtils.toJson(obj);
             }
             buf = value.getBytes(StandardCharsets.UTF_8);
         }
@@ -52,7 +52,7 @@ public byte[] getAsBytes() {
     public String getAsString() {
         if (value == null) {
             if (obj != null) {
-                value = JsonUtils.toJson(obj) + '\n';
+                value = JsonUtils.toJson(obj);
             } else {
                 value = new String(buf, StandardCharsets.UTF_8);
             }

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/tokenizers/QuestionAnsweringTranslatorTest.java
Patch:
@@ -102,7 +102,7 @@ public void testQATranslator() throws ModelException, IOException, TranslateExce
             input.add("question", question);
             input.add("paragraph", paragraph);
             Output res = predictor.predict(input);
-            Assert.assertEquals(res.getAsString(0), "December 2004");
+            Assert.assertEquals(res.getAsString(0), "{\"answer\":\"December 2004\"}");
 
             Assert.assertThrows(
                     "Input data is empty.",

File: api/src/main/java/ai/djl/modality/cv/output/CategoryMask.java
Patch:
@@ -34,7 +34,9 @@ public class CategoryMask implements JsonSerializable {
 
     private static final int COLOR_BLACK = 0xFF000000;
 
+    @SuppressWarnings("serial")
     private List<String> classes;
+
     private int[][] mask;
 
     /**

File: engines/pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/PtModelZoo.java
Patch:
@@ -43,8 +43,8 @@ public class PtModelZoo extends ModelZoo {
         addModel(
                 REPOSITORY.model(CV.IMAGE_CLASSIFICATION, GROUP_ID, "resnet18_embedding", "0.0.1"));
         addModel(REPOSITORY.model(CV.INSTANCE_SEGMENTATION, GROUP_ID, "yolov8n-seg", "0.0.1"));
-        addModel(REPOSITORY.model(CV.MASK_GENERATION, GROUP_ID, "sam2-hiera-tiny", "0.0.2"));
-        addModel(REPOSITORY.model(CV.MASK_GENERATION, GROUP_ID, "sam2-hiera-large", "0.0.2"));
+        addModel(REPOSITORY.model(CV.MASK_GENERATION, GROUP_ID, "sam2-hiera-tiny", "0.0.1"));
+        addModel(REPOSITORY.model(CV.MASK_GENERATION, GROUP_ID, "sam2-hiera-large", "0.0.1"));
         addModel(REPOSITORY.model(CV.OBJECT_DETECTION, GROUP_ID, "ssd", "0.0.1"));
         addModel(REPOSITORY.model(CV.OBJECT_DETECTION, GROUP_ID, "yolov5s", "0.0.1"));
         addModel(REPOSITORY.model(CV.OBJECT_DETECTION, GROUP_ID, "yolov8n", "0.0.1"));

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtModel.java
Patch:
@@ -241,7 +241,8 @@ private String getOrtxLibraryPath() {
             Method method = clazz.getDeclaredMethod("getLibraryPath");
             return (String) method.invoke(null);
         } catch (Throwable e) {
-            logger.debug("Failed to load onnx extension", e);
+            logger.info("Onnx extension not found in classpath.");
+            logger.trace("Failed to load onnx extension", e);
         }
         return null;
     }

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RsNDArray.java
Patch:
@@ -209,7 +209,8 @@ public NDArray stopGradient() {
     /** {@inheritDoc} */
     @Override
     public ByteBuffer toByteBuffer(boolean tryDirect) {
-        ByteBuffer bb = RustLibrary.getByteBuffer(getHandle());
+        byte[] buf = RustLibrary.toByteArray(getHandle());
+        ByteBuffer bb = ByteBuffer.wrap(buf);
         bb.order(ByteOrder.nativeOrder());
         return bb;
     }

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RustLibrary.java
Patch:
@@ -87,7 +87,7 @@ public static long hannWindow(long numPoints, String deviceType, int deviceId) {
 
     public static native long toDataType(long handle, int dataType);
 
-    public static native ByteBuffer getByteBuffer(long handle);
+    public static native byte[] toByteArray(long handle);
 
     public static native long fullSlice(long handle, long[] min, long[] max, long[] step);
 

File: api/src/main/java/ai/djl/translate/DeferredTranslatorFactory.java
Patch:
@@ -76,7 +76,7 @@ private TranslatorFactory loadTranslatorFactory(String className) {
             Constructor<? extends TranslatorFactory> constructor = subclass.getConstructor();
             return constructor.newInstance();
         } catch (Throwable e) {
-            logger.trace("Not able to load TranslatorFactory: " + className, e);
+            logger.trace("Not able to load TranslatorFactory: {}", className, e);
         }
         return null;
     }

File: api/src/main/java/ai/djl/translate/ServingTranslatorFactory.java
Patch:
@@ -97,7 +97,7 @@ private TranslatorFactory loadTranslatorFactory(String className) {
             Constructor<? extends TranslatorFactory> constructor = subclass.getConstructor();
             return constructor.newInstance();
         } catch (Throwable e) {
-            logger.trace("Not able to load TranslatorFactory: " + className, e);
+            logger.trace("Not able to load TranslatorFactory: {}", className, e);
         }
         return null;
     }

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngine.java
Patch:
@@ -115,7 +115,7 @@ public boolean hasCapability(String capability) {
                 sessionOptions.addCUDA();
                 return true;
             } catch (OrtException e) {
-                logger.warn("CUDA is not supported OnnxRuntime engine: " + e.getMessage());
+                logger.warn("CUDA is not supported OnnxRuntime engine: {}", e.getMessage());
                 return false;
             }
         }

File: api/src/main/java/ai/djl/modality/nlp/translator/CrossEncoderServingTranslator.java
Patch:
@@ -35,7 +35,7 @@
 /** A {@link Translator} that can handle generic cross encoder {@link Input} and {@link Output}. */
 public class CrossEncoderServingTranslator implements NoBatchifyTranslator<Input, Output> {
 
-    private static final Type LIST_TYPE = new TypeToken<List<String>>() {}.getType();
+    private static final Type LIST_TYPE = new TypeToken<List<StringPair>>() {}.getType();
 
     private Translator<StringPair, float[]> translator;
 

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/HuggingFaceTokenizer.java
Patch:
@@ -608,10 +608,11 @@ private Encoding toEncoding(long encoding, boolean withOverflowingTokens) {
         long[] specialTokenMask = TokenizersLibrary.LIB.getSpecialTokenMask(encoding);
         CharSpan[] charSpans = TokenizersLibrary.LIB.getTokenCharSpans(encoding);
 
-        long[] overflowingHandles = TokenizersLibrary.LIB.getOverflowing(encoding);
-        boolean exceedMaxLength = overflowingHandles.length > 0;
+        int overFlowCount = TokenizersLibrary.LIB.getOverflowCount(encoding);
+        boolean exceedMaxLength = overFlowCount > 0;
         Encoding[] overflowing;
         if (withOverflowingTokens) {
+            long[] overflowingHandles = TokenizersLibrary.LIB.getOverflowing(encoding);
             overflowing = new Encoding[overflowingHandles.length];
             for (int i = 0; i < overflowingHandles.length; ++i) {
                 overflowing[i] = toEncoding(overflowingHandles[i], true);

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/jni/TokenizersLibrary.java
Patch:
@@ -60,6 +60,8 @@ public native long[] batchEncodePair(
 
     public native long[] getOverflowing(long encoding);
 
+    public native int getOverflowCount(long encoding);
+
     public native String decode(long tokenizer, long[] ids, boolean addSpecialTokens);
 
     public native String getTruncationStrategy(long tokenizer);

File: examples/src/test/java/ai/djl/examples/inference/MaskDetectionTest.java
Patch:
@@ -35,6 +35,7 @@ public class MaskDetectionTest {
     @Test
     public void testMaskDetection() throws ModelException, TranslateException, IOException {
         TestRequirements.linux();
+        TestRequirements.notGpu();
 
         DetectedObjects result = MaskDetection.predict();
         logger.info("{}", result);

File: examples/src/test/java/ai/djl/examples/inference/ObjectDetectionWithTensorflowSavedModelTest.java
Patch:
@@ -35,6 +35,7 @@ public void testObjectDetection() throws ModelException, TranslateException, IOE
         // throttling and will fail the test.
         TestRequirements.linux();
         TestRequirements.nightly();
+        TestRequirements.notGpu();
 
         DetectedObjects result = ObjectDetectionWithTensorflowSavedModel.predict();
 

File: examples/src/test/java/ai/djl/examples/inference/SuperResolutionTest.java
Patch:
@@ -32,6 +32,7 @@ public class SuperResolutionTest {
     @Test
     public void testSuperResolution() throws ModelException, TranslateException, IOException {
         TestRequirements.linux();
+        TestRequirements.notGpu();
 
         String imagePath = "src/test/resources/";
         Image fox = ImageFactory.getInstance().fromFile(Paths.get(imagePath + "fox.png"));

File: examples/src/test/java/ai/djl/examples/inference/UniversalSentenceEncoderTest.java
Patch:
@@ -29,6 +29,7 @@ public class UniversalSentenceEncoderTest {
     public void testSentimentAnalysis() throws ModelException, TranslateException, IOException {
         TestRequirements.linux();
         TestRequirements.nightly();
+        TestRequirements.notGpu();
 
         List<String> inputs = new ArrayList<>();
         inputs.add("The quick brown fox jumps over the lazy dog.");

File: examples/src/test/java/ai/djl/examples/inference/Yolov8DetectionTest.java
Patch:
@@ -28,7 +28,7 @@ public class Yolov8DetectionTest {
 
     @Test
     public void testYolov8Detection() throws ModelException, TranslateException, IOException {
-        TestRequirements.linux();
+        TestRequirements.notGpu();
 
         DetectedObjects result = Yolov8Detection.predict();
 

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -32,6 +32,7 @@ public class TrainResNetTest {
     @Test
     public void testTrainResNet() throws ModelException, IOException, TranslateException {
         TestRequirements.nightly();
+        TestRequirements.gpu("PyTorch", 1);
 
         // Limit max 4 gpu for cifar10 training to make it converge faster.
         // and only train 10 batch for unit test.
@@ -47,7 +48,7 @@ public void testTrainResNetImperativeNightly()
             throws ModelException, IOException, TranslateException {
         TestRequirements.linux();
         TestRequirements.nightly();
-        TestRequirements.gpu("PyTorch");
+        TestRequirements.gpu("PyTorch", 4);
 
         // Limit max 4 gpu for cifar10 training to make it converge faster.
         // and only train 10 batch for unit test.

File: examples/src/test/java/ai/djl/examples/training/TrainSentimentAnalysisTest.java
Patch:
@@ -27,7 +27,7 @@ public void testTrainSentimentAnalysis()
             throws ModelException, TranslateException, IOException {
         TestRequirements.linux();
         TestRequirements.nightly();
-        TestRequirements.gpu("MXNet");
+        TestRequirements.gpu("MXNet", 1);
 
         String[] args = {"-e", "1", "-g", "1", "--engine", "MXNet"};
         TrainSentimentAnalysis.runExample(args);

File: integration/src/main/java/ai/djl/integration/tests/training/listener/EarlyStoppingListenerTest.java
Patch:
@@ -149,7 +149,7 @@ public void testEarlyStoppingStopsOnEpoch3AsMinEpochsIs3() throws Exception {
                 }
 
                 TrainingResult trainingResult = trainer.getTrainingResult();
-                Assert.assertEquals(trainingResult.getEpoch(), 3);
+                Assert.assertTrue(trainingResult.getEpoch() < 5);
             }
         }
     }

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/tokenizers/TextEmbeddingTranslatorTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.huggingface.tokenizers;
 
+import ai.djl.Device;
 import ai.djl.Model;
 import ai.djl.ModelException;
 import ai.djl.huggingface.translator.TextEmbeddingTranslatorFactory;
@@ -104,6 +105,7 @@ public void testTextEmbeddingTranslator()
                         .optArgument("block_shapes", "(1,7,384)")
                         .optArgument("block_names", "last_hidden_state")
                         .optEngine("PyTorch")
+                        .optDevice(Device.cpu())
                         .optArgument("tokenizer", "bert-base-uncased")
                         .optArgument("pooling", "max")
                         .optOption("hasParameter", "false")

File: api/src/test/java/ai/djl/util/cuda/CudaUtilsTest.java
Patch:
@@ -55,6 +55,8 @@ public void testCudaUtilsWithFork() {
         System.setProperty("ai.djl.util.cuda.fork", "true");
         try {
             testCudaUtils();
+            CudaUtils.main(new String[0]);
+            CudaUtils.main(new String[] {"-1"});
         } finally {
             System.clearProperty("ai.djl.util.cuda.fork");
         }

File: engines/mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/embedding/GloveWordEmbeddingTranslatorFactory.java
Patch:
@@ -70,6 +70,7 @@ public void prepare(TranslatorContext ctx) {
         /** {@inheritDoc} */
         @Override
         public NDList processOutput(TranslatorContext ctx, NDList list) {
+            list.detach();
             return list;
         }
 

File: examples/src/test/java/ai/djl/examples/training/TrainAirfoilWithTabNetTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.examples.training;
 
+import ai.djl.testing.TestRequirements;
 import ai.djl.training.TrainingResult;
 import ai.djl.translate.TranslateException;
 
@@ -24,6 +25,8 @@ public class TrainAirfoilWithTabNetTest {
 
     @Test
     public void testTrainAirfoilWithTabNet() throws TranslateException, IOException {
+        TestRequirements.linux(); // TODO: NaN on Windows for PyTorch 2.3.1
+
         String[] args = {"-g", "1", "-e", "20", "-b", "32"};
         if (!Boolean.getBoolean("nightly")) {
             args[3] = "2";

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -842,7 +842,7 @@ public PtNDArray exp() {
     /** {@inheritDoc} */
     @Override
     public NDArray gammaln() {
-        throw new UnsupportedOperationException("Not implemented yet.");
+        return JniUtils.gammaln(this);
     }
 
     /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -324,6 +324,8 @@ native long[] torchUnique(
 
     native long torchExp(long handle);
 
+    native long torchLgamma(long handle);
+
     native long torchLog(long handle);
 
     native long torchLog10(long handle);

File: extensions/timeseries/src/main/java/ai/djl/timeseries/distribution/DistributionLoss.java
Patch:
@@ -57,7 +57,7 @@ public NDArray evaluate(NDList labels, NDList predictions) {
             NDArray lossWeights = predictions.get("loss_weights");
             NDArray weightedValue =
                     NDArrays.where(lossWeights.neq(0), loss.mul(lossWeights), loss.zerosLike());
-            NDArray sumWeights = lossWeights.sum().maximum(1.);
+            NDArray sumWeights = lossWeights.sum().maximum(1f);
             loss = weightedValue.sum().div(sumWeights);
         }
         return loss;

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/ALibUtilsTest.java
Patch:
@@ -27,7 +27,7 @@ public void setup() {
         TestRequirements.notMacX86();
 
         System.setProperty("ai.djl.pytorch.native_helper", ALibUtilsTest.class.getName());
-        System.setProperty("STDCXX_LIBRARY_PATH", "/usr/lib/non-exists");
+        System.setProperty("LIBSTDCXX_LIBRARY_PATH", "/usr/lib/non-exists");
     }
 
     @AfterClass

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RsSymbolBlock.java
Patch:
@@ -63,7 +63,7 @@ protected NDList forwardInternal(
                 inputHandles[i] = sub.from(inputs.get(i)).getHandle();
             }
             long outputHandle = RustLibrary.runInference(handle.get(), inputHandles);
-            RsNDArray output = new RsNDArray(manager, outputHandle, inputs.head().getDataType());
+            RsNDArray output = new RsNDArray(manager, outputHandle);
             output.attach(inputs.head().getManager());
             return new NDList(output);
         }

File: extensions/sentencepiece/src/test/java/ai/djl/sentencepiece/SpTokenizerTest.java
Patch:
@@ -13,6 +13,7 @@
 
 package ai.djl.sentencepiece;
 
+import ai.djl.engine.Engine;
 import ai.djl.testing.TestRequirements;
 import ai.djl.training.util.DownloadUtils;
 
@@ -45,6 +46,8 @@ public void testLoadFromBytes() throws IOException {
         Path modelPath = Paths.get("build/test/sp_model/sp_model.model");
         byte[] bytes = Files.readAllBytes(modelPath);
         try (SpTokenizer tokenizer = new SpTokenizer(bytes)) {
+            String djlVersion = Engine.getDjlVersion();
+            Assert.assertEquals(tokenizer.getProcessor().getVersion(), "0.2.0-" + djlVersion);
             String original = "Hello World";
             List<String> tokens = tokenizer.tokenize(original);
             List<String> expected = Arrays.asList("▁He", "ll", "o", "▁", "W", "or", "l", "d");

File: api/src/test/java/ai/djl/util/passthrough/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for {@link ai.djl.util.passthrough}. */
 package ai.djl.util.passthrough;

File: engines/ml/lightgbm/src/test/java/ai/djl/ml/lightgbm/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** The integration test for testing LightGBM specific features. */
-package ai.djl.ml.lightgbm;
\ No newline at end of file
+package ai.djl.ml.lightgbm;

File: engines/ml/xgboost/src/test/java/ai/djl/ml/xgboost/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** The integration test for testing XGBoost specific features. */
-package ai.djl.ml.xgboost;
\ No newline at end of file
+package ai.djl.ml.xgboost;

File: engines/pytorch/pytorch-model-zoo/src/test/java/ai/djl/pytorch/zoo/nlp/textgeneration/package-info.java
Patch:
@@ -10,7 +10,5 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-/**
- * Contains unit test classes for text generation.
- */
+/** Contains unit test classes for text generation. */
 package ai.djl.pytorch.zoo.nlp.textgeneration;

File: extensions/audio/src/test/java/ai/djl/audio/dataset/package-info.java
Patch:
@@ -11,6 +11,5 @@
  * and limitations under the License.
  */
 
-
 /** Contains tests for the dataset module. */
-package ai.djl.audio.dataset;
\ No newline at end of file
+package ai.djl.audio.dataset;

File: extensions/audio/src/test/java/ai/djl/audio/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for the audio extension module. */
 package ai.djl.audio;

File: extensions/audio/src/test/java/ai/djl/audio/processor/package-info.java
Patch:
@@ -11,6 +11,5 @@
  * and limitations under the License.
  */
 
-
 /** Contains tests for the processor module. */
-package ai.djl.audio.processor;
\ No newline at end of file
+package ai.djl.audio.processor;

File: extensions/timeseries/src/test/java/ai/djl/timeseries/block/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** Contains tests for the basic block module. */
-package ai.djl.timeseries.block;
\ No newline at end of file
+package ai.djl.timeseries.block;

File: extensions/timeseries/src/test/java/ai/djl/timeseries/distribution/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** Contains tests for the distribution module. */
-package ai.djl.timeseries.distribution;
\ No newline at end of file
+package ai.djl.timeseries.distribution;

File: extensions/timeseries/src/test/java/ai/djl/timeseries/evaluator/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** Contains tests for the evaluator module. */
-package ai.djl.timeseries.evaluator;
\ No newline at end of file
+package ai.djl.timeseries.evaluator;

File: extensions/timeseries/src/test/java/ai/djl/timeseries/model/package-info.java
Patch:
@@ -12,4 +12,4 @@
  */
 
 /** Contains tests for the model module. */
-package ai.djl.timeseries.model;
\ No newline at end of file
+package ai.djl.timeseries.model;

File: extensions/timeseries/src/test/java/ai/djl/timeseries/translator/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for the timeseries translator module. */
 package ai.djl.timeseries.translator;

File: extensions/tokenizers/src/test/java/ai/djl/engine/rust/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for the rust module. */
 package ai.djl.engine.rust;

File: extensions/tokenizers/src/test/java/ai/djl/engine/rust/zoo/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for the rust zoo module. */
 package ai.djl.engine.rust.zoo;

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/zoo/package-info.java
Patch:
@@ -10,4 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
+
+/** Contains tests for the huggingface zoo module. */
 package ai.djl.huggingface.zoo;

File: integration/src/test/java/ai/djl/CoverageTest.java
Patch:
@@ -26,6 +26,7 @@ public class CoverageTest {
 
     @Test
     public void test() throws IOException, ReflectiveOperationException, URISyntaxException {
+
         // API
         CoverageUtils.testGetterSetters(Device.class);
 

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/tokenizers/TextEmbeddingTranslatorTest.java
Patch:
@@ -114,7 +114,7 @@ public void testTextEmbeddingTranslator()
                 Predictor<String, float[]> predictor = model.newPredictor()) {
             float[] res = predictor.predict(text);
             Assert.assertEquals(res.length, 384);
-            Assertions.assertAlmostEquals(res[0], 1.0);
+            Assertions.assertAlmostEquals(res[0], 0.05103);
         }
 
         // pooling_mean_sqrt_len_tokens

File: examples/src/main/java/ai/djl/examples/inference/cv/ObjectDetection.java
Patch:
@@ -57,8 +57,8 @@ public static DetectedObjects predict() throws IOException, ModelException, Tran
                 Criteria.builder()
                         .optApplication(Application.CV.OBJECT_DETECTION)
                         .setTypes(Image.class, DetectedObjects.class)
-                        .optFilter("backbone", "mobilenet_v2")
-                        .optEngine("TensorFlow")
+                        .optArgument("threshold", 0.5)
+                        .optEngine("PyTorch")
                         .optProgress(new ProgressBar())
                         .build();
 

File: examples/src/test/java/ai/djl/examples/inference/ObjectDetectionTest.java
Patch:
@@ -42,7 +42,7 @@ public void testObjectDetection() throws ModelException, TranslateException, IOE
         Assert.assertTrue(result.getNumberOfObjects() >= 3);
         Classifications.Classification obj = result.best();
         String className = obj.getClassName();
-        List<String> objects = Arrays.asList("dog", "Cat", "car");
+        List<String> objects = Arrays.asList("dog", "bicycle", "car");
         Assert.assertTrue(objects.contains(className));
         Assert.assertTrue(obj.getProbability() > 0.6);
     }

File: engines/pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/PtSsdTranslator.java
Patch:
@@ -232,7 +232,7 @@ public Builder setBoxes(
         /** {@inheritDoc} */
         @Override
         protected Builder self() {
-            return null;
+            return this;
         }
 
         /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/ALibUtilsTest.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.pytorch.integration;
 
 import ai.djl.engine.Engine;
+import ai.djl.testing.TestRequirements;
 
 import org.testng.annotations.AfterClass;
 import org.testng.annotations.BeforeClass;
@@ -23,6 +24,8 @@ public class ALibUtilsTest {
 
     @BeforeClass
     public void setup() {
+        TestRequirements.notMacX86();
+
         System.setProperty("ai.djl.pytorch.native_helper", ALibUtilsTest.class.getName());
         System.setProperty("STDCXX_LIBRARY_PATH", "/usr/lib/non-exists");
     }

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/MkldnnTest.java
Patch:
@@ -25,7 +25,7 @@
 /** The file is for testing PyTorch MKLDNN functionalities. */
 public class MkldnnTest {
 
-    @Test
+    @Test(enabled = false)
     public void testMkldnn() {
         if (!"amd64".equals(System.getProperty("os.arch"))) {
             throw new SkipException("MKLDNN Test requires x86_64 arch.");

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/ProfilerTest.java
Patch:
@@ -28,6 +28,7 @@
 import ai.djl.repository.zoo.Criteria;
 import ai.djl.repository.zoo.ModelNotFoundException;
 import ai.djl.repository.zoo.ZooModel;
+import ai.djl.testing.TestRequirements;
 import ai.djl.training.util.ProgressBar;
 import ai.djl.translate.TranslateException;
 
@@ -47,6 +48,8 @@ public void testProfiler()
                     ModelNotFoundException,
                     IOException,
                     TranslateException {
+        TestRequirements.notMacX86();
+
         try (NDManager manager = NDManager.newBaseManager()) {
             ImageClassificationTranslator translator =
                     ImageClassificationTranslator.builder().addTransform(new ToTensor()).build();

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/PtModelTest.java
Patch:
@@ -21,6 +21,7 @@
 import ai.djl.ndarray.types.Shape;
 import ai.djl.repository.zoo.Criteria;
 import ai.djl.repository.zoo.ZooModel;
+import ai.djl.testing.TestRequirements;
 import ai.djl.training.util.ProgressBar;
 import ai.djl.translate.NoopTranslator;
 import ai.djl.translate.TranslateException;
@@ -36,6 +37,8 @@ public class PtModelTest {
 
     @Test
     public void testLoadFromStream() throws IOException, TranslateException, ModelException {
+        TestRequirements.notMacX86();
+
         Criteria<NDList, NDList> criteria =
                 Criteria.builder()
                         .setTypes(NDList.class, NDList.class)

File: engines/pytorch/pytorch-model-zoo/src/test/java/ai/djl/pytorch/zoo/nlp/textgeneration/GptTranslatorTest.java
Patch:
@@ -24,6 +24,7 @@
 import ai.djl.nn.LambdaBlock;
 import ai.djl.repository.zoo.Criteria;
 import ai.djl.repository.zoo.ZooModel;
+import ai.djl.testing.TestRequirements;
 import ai.djl.translate.TranslateException;
 
 import org.testng.Assert;
@@ -38,6 +39,8 @@ public class GptTranslatorTest {
 
     @Test
     public void testGpt2() throws TranslateException, ModelException, IOException {
+        TestRequirements.notMacX86();
+
         // This is a fake model that simulates language models like GPT2: NDList(inputIds, posIds,
         // attnMask) -> NDList(logits(1), pastKv(12*2)[, hiddenStates(13)])
         Block block =

File: examples/src/test/java/ai/djl/examples/inference/TimeSeriesTest.java
Patch:
@@ -55,7 +55,7 @@ public void testM5Forecasting() throws ModelException, TranslateException, IOExc
 
     @Test
     public void testAirPassenger() throws ModelException, TranslateException, IOException {
-        TestRequirements.engine("MXNet");
+        TestRequirements.linux();
 
         float[] result = AirPassengersDeepAR.predict();
         logger.info("{}", result);

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -44,7 +44,7 @@ public void testTrainResNet() throws ModelException, IOException, TranslateExcep
     @Test
     public void testTrainResNetSymbolicNightly()
             throws ModelException, IOException, TranslateException {
-        TestRequirements.engine("MXNet");
+        TestRequirements.linux();
         TestRequirements.nightly();
         TestRequirements.gpu("MXNet");
 
@@ -65,6 +65,7 @@ public void testTrainResNetSymbolicNightly()
     @Test
     public void testTrainResNetImperativeNightly()
             throws ModelException, IOException, TranslateException {
+        TestRequirements.linux();
         TestRequirements.nightly();
         TestRequirements.gpu("MXNet");
 

File: api/src/main/java/ai/djl/repository/SimpleUrlRepository.java
Patch:
@@ -90,7 +90,7 @@ public List<MRL> getResources() {
                 return Collections.singletonList(mrl);
             }
         } catch (IOException e) {
-            logger.warn("Failed to connect URL: " + uri, e);
+            logger.warn("Failed to connect URL: {}", uri, e);
         }
         return Collections.emptyList();
     }
@@ -141,7 +141,7 @@ private long getContentLength() throws IOException {
                 conn.setRequestMethod("HEAD");
                 int code = conn.getResponseCode();
                 if (code != 200) {
-                    logger.info("request error: " + code);
+                    logger.info("request error: {}", code);
                     return -1;
                 }
                 return conn.getContentLength();

File: api/src/main/java/ai/djl/repository/zoo/ModelZoo.java
Patch:
@@ -302,7 +302,7 @@ protected Map<String, Map<String, Object>> listModels(Repository repo, Applicati
                 Utils.deleteQuietly(tmp);
             }
         } catch (IOException e) {
-            logger.warn("Failed load index of models: " + app, e);
+            logger.warn("Failed load index of models: {}", app, e);
         }
 
         return Collections.emptyMap();

File: api/src/main/java/ai/djl/training/listener/MemoryTrainingListener.java
Patch:
@@ -177,7 +177,7 @@ private static void getProcessInfo(Metrics metrics) {
                     metrics.addMetric("rss", rss, Unit.BYTES);
                 }
             } catch (IOException e) {
-                logger.error("Failed execute cmd: " + cmd, e);
+                logger.error("Failed execute cmd: {}", cmd, e);
             }
         }
     }

File: api/src/main/java/ai/djl/util/NativeResource.java
Patch:
@@ -58,7 +58,7 @@ public T getHandle() {
         T reference = handle.get();
         if (reference == null) {
             if (TRACK_RESOURCE) {
-                logger.error("Native resource " + uid + " is released. Closed at:", exception);
+                logger.error("Native resource {} is released. Closed at:", uid, exception);
             }
             String message = "Native resource has been released already.";
             throw new IllegalStateException(message);

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -305,7 +305,7 @@ public boolean matches(Platform system) {
                         <= Integer.parseInt(system.flavor.substring(2, 5))) {
             return true;
         }
-        logger.warn("The bundled library: " + this + " doesn't match system: " + system);
+        logger.warn("The bundled library: {}} doesn't match system: {}", this, system);
         return false;
     }
 

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngine.java
Patch:
@@ -69,8 +69,8 @@ static Engine newInstance() {
                             + " inference latency and throughput. See:"
                             + " https://docs.djl.ai/docs/development/inference_performance_optimization.html#graph-executor-optimization");
             }
-            logger.info("Number of inter-op threads is " + JniUtils.getNumInteropThreads());
-            logger.info("Number of intra-op threads is " + JniUtils.getNumThreads());
+            logger.info("Number of inter-op threads is {}", JniUtils.getNumInteropThreads());
+            logger.info("Number of intra-op threads is {}", JniUtils.getNumThreads());
 
             String paths = Utils.getEnvOrSystemProperty("PYTORCH_EXTRA_LIBRARY_PATH");
             if (paths != null) {

File: examples/src/main/java/ai/djl/examples/inference/BertClassification.java
Patch:
@@ -60,7 +60,7 @@ public static void main(String[] args) throws IOException, ModelException, Trans
 
         Classifications[] results = predict(inputs);
         for (int i = 0; i < inputs.size(); i++) {
-            logger.info("Prediction for: " + inputs.get(i) + "\n" + results[i].toString());
+            logger.info("Prediction for: {}\n{}", inputs.get(i), results[i]);
         }
     }
 

File: examples/src/main/java/ai/djl/examples/inference/UniversalSentenceEncoder.java
Patch:
@@ -56,7 +56,7 @@ public static void main(String[] args) throws IOException, ModelException, Trans
 
         float[][] embeddings = UniversalSentenceEncoder.predict(inputs);
         for (int i = 0; i < inputs.size(); i++) {
-            logger.info("Embedding for: " + inputs.get(i) + "\n" + Arrays.toString(embeddings[i]));
+            logger.info("Embedding for: {}\n{}", inputs.get(i), Arrays.toString(embeddings[i]));
         }
     }
 

File: extensions/aws-ai/src/main/java/ai/djl/aws/s3/S3Repository.java
Patch:
@@ -147,7 +147,7 @@ public List<MRL> getResources() {
                 return Collections.singletonList(mrl);
             }
         } catch (IOException e) {
-            logger.warn("Failed to scan S3: " + bucket, e);
+            logger.warn("Failed to scan S3: {}", bucket, e);
         }
         return Collections.emptyList();
     }

File: extensions/hadoop/src/main/java/ai/djl/hadoop/hdfs/HdfsRepository.java
Patch:
@@ -144,7 +144,7 @@ public List<MRL> getResources() {
                 return Collections.singletonList(mrl);
             }
         } catch (IOException e) {
-            logger.warn("Failed to scan: " + uri.toString(), e);
+            logger.warn("Failed to scan: {}", uri, e);
         }
         return Collections.emptyList();
     }
@@ -157,7 +157,7 @@ private synchronized Metadata getMetadata() throws IOException {
         resolved = true;
         Artifact artifact = listFiles();
         if (artifact == null) {
-            logger.debug("No object found in hdfs: " + uri);
+            logger.debug("No object found in hdfs: {}", uri);
             return null;
         }
 

File: integration/src/main/java/ai/djl/integration/IntegrationTest.java
Patch:
@@ -373,8 +373,7 @@ public TestResult runTest(int index) {
                     logger.trace("", e.getCause());
                     result = TestResult.UNSUPPORTED;
                 } else {
-                    logger.error("Test {}.{} FAILED", getName(), method.getName());
-                    logger.error("", e.getCause());
+                    logger.error("Test {}.{} FAILED", getName(), method.getName(), e.getCause());
                     result = TestResult.FAILED;
                 }
             } finally {

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -42,6 +42,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 
 /**
  * {@code MxModel} is the MXNet implementation of {@link Model}.
@@ -176,9 +177,8 @@ public Trainer newTrainer(TrainingConfig trainingConfig) {
     /** {@inheritDoc} */
     @Override
     public String[] getArtifactNames() {
-        try {
-            List<Path> files =
-                    Files.walk(modelDir).filter(Files::isRegularFile).collect(Collectors.toList());
+        try (Stream<Path> stream = Files.walk(modelDir)) {
+            List<Path> files = stream.filter(Files::isRegularFile).collect(Collectors.toList());
             List<String> ret = new ArrayList<>(files.size());
             for (Path path : files) {
                 String fileName = path.toFile().getName();

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.Map;
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 
 /**
  * {@code PtModel} is the PyTorch implementation of {@link Model}.
@@ -227,9 +228,8 @@ public Trainer newTrainer(TrainingConfig trainingConfig) {
     /** {@inheritDoc} */
     @Override
     public String[] getArtifactNames() {
-        try {
-            List<Path> files =
-                    Files.walk(modelDir).filter(Files::isRegularFile).collect(Collectors.toList());
+        try (Stream<Path> stream = Files.walk(modelDir)) {
+            List<Path> files = stream.filter(Files::isRegularFile).collect(Collectors.toList());
             List<String> ret = new ArrayList<>(files.size());
             for (Path path : files) {
                 String fileName = path.toFile().getName();

File: examples/src/main/java/ai/djl/examples/training/util/BertCodeDataset.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.function.Function;
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
+import java.util.stream.Stream;
 
 /** An example code dataset using the code within the DJL path. */
 public class BertCodeDataset implements Dataset {
@@ -94,9 +95,8 @@ public int getMaxSequenceLength() {
     }
 
     private static List<Path> listSourceFiles(Path root) {
-        try {
-            return Files.walk(root)
-                    .filter(Files::isRegularFile)
+        try (Stream<Path> stream = Files.walk(root)) {
+            return stream.filter(Files::isRegularFile)
                     .filter(path -> path.toString().toLowerCase().endsWith(".java"))
                     .collect(Collectors.toList());
         } catch (IOException ioe) {

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/TextEmbeddingTranslator.java
Patch:
@@ -175,7 +175,6 @@ private NDArray processEmbedding(NDManager manager, NDList list, Encoding encodi
                 throw new AssertionError("Unexpected pooling mode: " + pooling);
         }
 
-        embedding = embedding.toDevice(Device.cpu(), false);
         if (denseModel != null) {
             NDArray weight = denseModel.get("linear.weight");
             NDArray bias = denseModel.get("linear.bias");

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RsSymbolBlock.java
Patch:
@@ -57,14 +57,13 @@ protected NDList forwardInternal(
         if (inputNames.size() != inputs.size()) {
             throw new IllegalArgumentException("Input size mismatch, requires: " + inputNames);
         }
-        try (RsNDManager sub = manager.newSubManager()) {
+        try (RsNDManager sub = (RsNDManager) manager.newSubManager()) {
             long[] inputHandles = new long[inputs.size()];
             for (int i = 0; i < inputs.size(); i++) {
                 inputHandles[i] = sub.from(inputs.get(i)).getHandle();
             }
             long outputHandle = RustLibrary.runInference(handle.get(), inputHandles);
-            RsNDArray output =
-                    manager.createInternal(null, outputHandle, inputs.head().getDataType());
+            RsNDArray output = new RsNDArray(manager, outputHandle, inputs.head().getDataType());
             output.attach(inputs.head().getManager());
             return new NDList(output);
         }

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RustLibrary.java
Patch:
@@ -20,7 +20,7 @@ public final class RustLibrary {
 
     private RustLibrary() {}
 
-    public static native boolean hasCapability();
+    public static native boolean isCudaAvailable();
 
     public static native long loadModel(String modelPath, int dtype);
 

File: engines/llama/src/test/java/ai/djl/llama/engine/LlamaTest.java
Patch:
@@ -136,7 +136,7 @@ public void testLlamaInfill() throws TranslateException, ModelException, IOExcep
 
     private void downloadModel() throws IOException {
         String url =
-                "https://huggingface.co/TheBloke/TinyLlama-1.1B-1T-OpenOrca-GGUF/resolve/main/tinyllama-1.1b-1t-openorca.Q4_K_M.gguf?download=true";
+                "https://resources.djl.ai/test-models/gguf/tinyllama-1.1b-1t-openorca.Q4_K_M.gguf";
         Path dir = Paths.get("models/tinyllama-1.1b-1t-openorca.Q4_K_M.gguf");
         DownloadUtils.download(URI.create(url).toURL(), dir, null);
     }

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/tokenizers/HuggingFaceTokenizerTest.java
Patch:
@@ -111,7 +111,7 @@ public void testTokenizer() throws IOException {
         }
 
         DownloadUtils.download(
-                "https://huggingface.co/bert-base-cased/raw/main/tokenizer.json",
+                "https://resources.djl.ai/test-models/tokenizer/bert-base-cased/tokenizer.json",
                 "build/tokenizer/tokenizer.json");
         Path path = Paths.get("build/tokenizer");
         try (HuggingFaceTokenizer tokenizer = HuggingFaceTokenizer.newInstance(path)) {

File: extensions/tokenizers/src/main/java/ai/djl/engine/rust/RsEngine.java
Patch:
@@ -66,7 +66,7 @@ public String getVersion() {
     /** {@inheritDoc} */
     @Override
     public boolean hasCapability(String capability) {
-        return true;
+        return false;
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/repository/RepositoryFactoryImpl.java
Patch:
@@ -99,7 +99,7 @@ public Repository newInstance(String name, URI uri) {
     /** {@inheritDoc} */
     @Override
     public Set<String> getSupportedScheme() {
-        return Collections.emptySet();
+        return REGISTRY.keySet();
     }
 
     static void registerRepositoryFactory(RepositoryFactory factory) {

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/CrossEncoderBatchTranslator.java
Patch:
@@ -65,7 +65,7 @@ public float[][] processOutput(TranslatorContext ctx, NDList list) {
         NDList[] batch = batchifier.unbatchify(list);
         float[][] ret = new float[batch.length][];
         for (int i = 0; i < batch.length; ++i) {
-            NDArray result = list.get(0);
+            NDArray result = batch[i].get(0);
             if (sigmoid) {
                 result = result.getNDArrayInternal().sigmoid();
             }

File: api/src/main/java/ai/djl/util/TarUtils.java
Patch:
@@ -48,7 +48,7 @@ public static void untar(InputStream is, Path dir, boolean gzip) throws IOExcept
         try (TarArchiveInputStream tis = new TarArchiveInputStream(bis)) {
             TarArchiveEntry entry;
             while ((entry = tis.getNextEntry()) != null) {
-                String entryName = entry.getName();
+                String entryName = ZipUtils.removeLeadingFileSeparator(entry.getName());
                 if (entryName.contains("..")) {
                     throw new IOException("Malicious zip entry: " + entryName);
                 }

File: api/src/main/java/ai/djl/util/ZipUtils.java
Patch:
@@ -223,7 +223,7 @@ private End findEND(ByteBuffer bb) throws IOException {
                         // Let's do some extra verification, we don't care about the
                         // performance in this situation.
                         int cenpos = end.endpos - end.cenlen;
-                        int locpos = cenpos - end.cenoff;
+                        int locpos = Math.toIntExact(cenpos - end.cenoff);
                         if (cenpos < 0
                                 || locpos < 0
                                 || bb.getInt(cenpos) != CENSIG
@@ -243,7 +243,7 @@ private End findEND(ByteBuffer bb) throws IOException {
 
                     // end64 candidate found,
                     int cenlen64 = Math.toIntExact(bb.getLong(relativePos + 40));
-                    int cenoff64 = Math.toIntExact(bb.getLong(relativePos + 48));
+                    long cenoff64 = bb.getLong(relativePos + 48);
                     // double-check
                     if (cenlen64 != end.cenlen && end.cenlen > 0
                             || cenoff64 != end.cenoff && end.cenoff > 0) {
@@ -303,7 +303,7 @@ private List<String> initCEN(byte[] header) throws IOException {
 
         private static final class End {
             int cenlen; // 4 bytes
-            int cenoff; // 4 bytes
+            long cenoff; // 4 bytes
             int endpos; // 4 bytes
         }
     }

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/HuggingFaceTokenizer.java
Patch:
@@ -56,9 +56,8 @@ public final class HuggingFaceTokenizer extends NativeResource<Long> implements
 
     private HuggingFaceTokenizer(long handle, Map<String, String> options) {
         super(handle);
-        String val = TokenizersLibrary.LIB.getTruncationStrategy(handle);
-        truncation = TruncationStrategy.fromValue(val);
-        val = TokenizersLibrary.LIB.getPaddingStrategy(handle);
+        truncation = TruncationStrategy.LONGEST_FIRST;
+        String val = TokenizersLibrary.LIB.getPaddingStrategy(handle);
         padding = PaddingStrategy.fromValue(val);
         maxLength = TokenizersLibrary.LIB.getMaxLength(handle);
         stride = TokenizersLibrary.LIB.getStride(handle);

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/TextEmbeddingTranslator.java
Patch:
@@ -81,7 +81,8 @@ public float[] processOutput(TranslatorContext ctx, NDList list) {
     @Override
     public TextEmbeddingBatchTranslator toBatchTranslator(Batchifier batchifier) {
         tokenizer.enableBatch();
-        return new TextEmbeddingBatchTranslator(tokenizer, batchifier, pooling, normalize);
+        return new TextEmbeddingBatchTranslator(
+                tokenizer, batchifier, pooling, normalize, includeTokenTypes);
     }
 
     static NDArray processEmbedding(

File: api/src/main/java/ai/djl/metric/Metrics.java
Patch:
@@ -172,7 +172,8 @@ public Metric percentile(String metricName, int percentile) {
         List<Metric> list = new ArrayList<>(metric);
         list.sort(Comparator.comparingDouble(Metric::getValue));
         int index = metric.size() * percentile / 100;
-        return list.get(index);
+        Metric m = list.get(index);
+        return m.copyOf(m.getMetricName() + "_p" + percentile);
     }
 
     /**

File: api/src/main/java/ai/djl/metric/Unit.java
Patch:
@@ -41,6 +41,7 @@ public enum Unit {
     GIGABITS_PER_SECOND("Gigabits/Second"),
     TERABITS_PER_SECOND("Terabits/Second"),
     COUNT_PER_SECOND("Count/Second"),
+    COUNT_PER_ITEM("Count/Item"),
     NONE("None");
 
     private static final ConcurrentHashMap<String, Unit> MAP = new ConcurrentHashMap<>();

File: api/src/test/java/ai/djl/util/cuda/CudaUtilsTest.java
Patch:
@@ -50,12 +50,12 @@ public void testCudaUtils() {
     }
 
     @Test
-    public void testCudaUtilsWithFolk() {
-        System.setProperty("ai.djl.util.cuda.folk", "true");
+    public void testCudaUtilsWithFork() {
+        System.setProperty("ai.djl.util.cuda.fork", "true");
         try {
             testCudaUtils();
         } finally {
-            System.clearProperty("ai.djl.util.cuda.folk");
+            System.clearProperty("ai.djl.util.cuda.fork");
         }
     }
 }

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/engine/TrtEngineTest.java
Patch:
@@ -26,7 +26,7 @@ public void getVersion() {
         try {
             Engine engine = Engine.getEngine("TensorRT");
             version = engine.getVersion();
-        } catch (Exception ignore) {
+        } catch (Throwable ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         Assert.assertEquals(version, "8.4.1");

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/engine/TrtNDManagerTest.java
Patch:
@@ -28,7 +28,7 @@ public void testNDArray() {
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Exception ignore) {
+        } catch (Throwable ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/integration/TrtTest.java
Patch:
@@ -49,7 +49,7 @@ public void testTrtOnnx() throws ModelException, IOException, TranslateException
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Exception ignore) {
+        } catch (Throwable ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {
@@ -75,7 +75,7 @@ public void testTrtUff() throws ModelException, IOException, TranslateException
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Exception ignore) {
+        } catch (Throwable ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {
@@ -112,7 +112,7 @@ public void testSerializedEngine() throws ModelException, IOException, Translate
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Exception ignore) {
+        } catch (Throwable ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         Device device = engine.defaultDevice();

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/engine/TrtEngineTest.java
Patch:
@@ -26,7 +26,7 @@ public void getVersion() {
         try {
             Engine engine = Engine.getEngine("TensorRT");
             version = engine.getVersion();
-        } catch (Throwable ignore) {
+        } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         Assert.assertEquals(version, "8.4.1");

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/engine/TrtNDManagerTest.java
Patch:
@@ -28,7 +28,7 @@ public void testNDArray() {
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Throwable ignore) {
+        } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/integration/TrtTest.java
Patch:
@@ -49,7 +49,7 @@ public void testTrtOnnx() throws ModelException, IOException, TranslateException
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Throwable ignore) {
+        } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {
@@ -75,7 +75,7 @@ public void testTrtUff() throws ModelException, IOException, TranslateException
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Throwable ignore) {
+        } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         if (!engine.defaultDevice().isGpu()) {
@@ -112,7 +112,7 @@ public void testSerializedEngine() throws ModelException, IOException, Translate
         Engine engine;
         try {
             engine = Engine.getEngine("TensorRT");
-        } catch (Throwable ignore) {
+        } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
         Device device = engine.defaultDevice();

File: integration/src/main/java/ai/djl/integration/tests/training/listener/EarlyStoppingListenerTest.java
Patch:
@@ -178,7 +178,7 @@ public void testEarlyStoppingStopsOnEpoch1AsMaxDurationIs1ms() throws Exception
                     // epoch
                     EasyTrain.fit(trainer, 10, trainMnistDataset, testMnistDataset);
                 } catch (EarlyStoppingListener.EarlyStoppedException e) {
-                    Assert.assertTrue(e.getMessage().contains("ms elapsed >= 1 maxMillis"));
+                    Assert.assertTrue(e.getMessage().contains("ms elapsed >="));
                     Assert.assertTrue(e.getStopEpoch() < 10); // Stop epoch is before 10
                 }
 

File: api/src/main/java/ai/djl/training/listener/EvaluatorTrainingListener.java
Patch:
@@ -144,9 +144,7 @@ private void updateEvaluators(Trainer trainer, BatchData batchData, String[] acc
             for (Device device : batchData.getLabels().keySet()) {
                 NDList labels = batchData.getLabels().get(device);
                 NDList predictions = batchData.getPredictions().get(device);
-                for (String accumulator : accumulators) {
-                    evaluator.updateAccumulator(accumulator, labels, predictions);
-                }
+                evaluator.updateAccumulators(accumulators, labels, predictions);
             }
         }
     }

File: api/src/main/java/ai/djl/training/loss/AbstractCompositeLoss.java
Patch:
@@ -80,10 +80,10 @@ public void addAccumulator(String key) {
 
     /** {@inheritDoc} */
     @Override
-    public void updateAccumulator(String key, NDList labels, NDList predictions) {
+    public void updateAccumulators(String[] keys, NDList labels, NDList predictions) {
         for (int i = 0; i < components.size(); i++) {
             Pair<NDList, NDList> inputs = inputForComponent(i, labels, predictions);
-            components.get(i).updateAccumulator(key, inputs.getKey(), inputs.getValue());
+            components.get(i).updateAccumulators(keys, inputs.getKey(), inputs.getValue());
         }
     }
 

File: integration/src/main/java/ai/djl/integration/tests/training/listener/EarlyStoppingListenerTest.java
Patch:
@@ -183,7 +183,7 @@ public void testEarlyStoppingStopsOnEpoch1AsMaxDurationIs1ms() throws Exception
                 }
 
                 TrainingResult trainingResult = trainer.getTrainingResult();
-                Assert.assertEquals(trainingResult.getEpoch(), 1);
+                Assert.assertTrue(trainingResult.getEpoch() < 10); // Stop epoch is before 10
             }
         }
     }

File: api/src/main/java/ai/djl/repository/AbstractRepository.java
Patch:
@@ -243,7 +243,7 @@ private void untar(InputStream is, Path dir, boolean gzip) throws IOException {
         bis = new CloseShieldFilterInputStream(bis);
         try (TarArchiveInputStream tis = new TarArchiveInputStream(bis)) {
             TarArchiveEntry entry;
-            while ((entry = tis.getNextTarEntry()) != null) {
+            while ((entry = tis.getNextEntry()) != null) {
                 String entryName = entry.getName();
                 if (entryName.contains("..")) {
                     throw new IOException("Malicious zip entry: " + entryName);

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/FillMaskBatchTranslator.java
Patch:
@@ -37,7 +37,7 @@ public class FillMaskBatchTranslator implements NoBatchifyTranslator<String[], C
         this.maskToken = maskToken;
         this.topK = topK;
         this.batchifier = batchifier;
-        Encoding encoding = tokenizer.encode(maskToken, false);
+        Encoding encoding = tokenizer.encode(maskToken, false, false);
         maskTokenId = encoding.getIds()[0];
     }
 

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/FillMaskTranslator.java
Patch:
@@ -44,7 +44,7 @@ public class FillMaskTranslator implements Translator<String, Classifications> {
         this.maskToken = maskToken;
         this.topK = topK;
         this.batchifier = batchifier;
-        Encoding encoding = tokenizer.encode(maskToken, false);
+        Encoding encoding = tokenizer.encode(maskToken, false, false);
         maskTokenId = encoding.getIds()[0];
     }
 

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/HuggingFaceTokenizer.java
Patch:
@@ -787,7 +787,7 @@ public HuggingFaceTokenizer build() throws IOException {
                     return managed(HuggingFaceTokenizer.newInstance(vocab, merges, options));
                 }
                 throw new IOException("tokenizer.json file not found.");
-            } else if (Files.exists(tokenizerPath)) {
+            } else if (!Files.exists(tokenizerPath)) {
                 throw new IOException("Tokenizer file not exits: " + tokenizerPath);
             }
             return managed(HuggingFaceTokenizer.newInstance(tokenizerPath, options));

File: api/src/test/java/ai/djl/ndarray/NDSerializerTest.java
Patch:
@@ -107,7 +107,7 @@ private static byte[] encode(NDArray array) throws IOException {
 
     private static NDArray decode(NDManager manager, byte[] data) throws IOException {
         try (ByteArrayInputStream bis = new ByteArrayInputStream(data)) {
-            return NDSerializer.decodeNumpy(manager, bis);
+            return NDList.decode(manager, bis).get(0);
         }
     }
 

File: examples/src/test/java/ai/djl/examples/training/TrainPikachuTest.java
Patch:
@@ -27,7 +27,6 @@ public class TrainPikachuTest {
 
     @Test
     public void testDetection() throws IOException, MalformedModelException, TranslateException {
-        TestRequirements.engine("MXNet");
         TestRequirements.nightly();
 
         String[] args;

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/BasicModelZoo.java
Patch:
@@ -43,8 +43,8 @@ public String getGroupId() {
     public Set<String> getSupportedEngines() {
         Set<String> set = new HashSet<>();
         set.add("MXNet");
+        set.add("PyTorch");
         // TODO Currently WIP in supporting these two engines in the basic model zoo
-        //        set.add("PyTorch");
         //        set.add("TensorFlow");
         return set;
     }

File: examples/src/main/java/ai/djl/examples/inference/timeseries/AirPassengersDeepAR.java
Patch:
@@ -116,7 +116,7 @@ private static TimeSeriesData getTimeSeriesData(NDManager manager, URL url) thro
     private static void saveNDArray(NDArray array) throws IOException {
         Path path = Paths.get("build").resolve(array.getName() + ".npz");
         try (OutputStream os = Files.newOutputStream(path)) {
-            new NDList(new NDList(array)).encode(os, true);
+            new NDList(new NDList(array)).encode(os, NDList.Encoding.NPZ);
         }
     }
 

File: examples/src/main/java/ai/djl/examples/inference/timeseries/M5ForecastingDeepAR.java
Patch:
@@ -153,7 +153,7 @@ public static Map<String, Float> predict()
     private static void saveNDArray(NDArray array) throws IOException {
         Path path = Paths.get("build").resolve(array.getName() + ".npz");
         try (OutputStream os = Files.newOutputStream(path)) {
-            new NDList(new NDList(array)).encode(os, true);
+            new NDList(new NDList(array)).encode(os, NDList.Encoding.NPZ);
         }
     }
 

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -281,7 +281,7 @@ public List<Evaluator> getEvaluators() {
      *
      * @param listenerConsumer a consumer that executes the method
      */
-    public void notifyListeners(Consumer<TrainingListener> listenerConsumer) {
+    public final void notifyListeners(Consumer<TrainingListener> listenerConsumer) {
         listeners.forEach(listenerConsumer);
     }
 

File: api/src/test/java/ai/djl/nn/BlockFactoryTest.java
Patch:
@@ -20,6 +20,7 @@
 import java.nio.file.Path;
 import java.nio.file.Paths;
 
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public class BlockFactoryTest {
 
     @Test

File: integration/src/main/java/ai/djl/integration/IntegrationTest.java
Patch:
@@ -51,6 +51,7 @@
 import java.util.jar.JarFile;
 import java.util.stream.Collectors;
 
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public class IntegrationTest {
 
     private static final Logger logger = LoggerFactory.getLogger(IntegrationTest.class);

File: integration/src/main/java/ai/djl/integration/tests/inference/StreamingTest.java
Patch:
@@ -35,6 +35,7 @@
 import java.util.List;
 import java.util.stream.Stream;
 
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public class StreamingTest {
 
     @Test

File: integration/src/main/java/ai/djl/integration/tests/nn/BlockFactoryTest.java
Patch:
@@ -99,6 +99,7 @@ private Path prepareModel(Path savedDir) throws IOException, ModelException {
         return zipPath;
     }
 
+    @SuppressWarnings("PMD.TestClassWithoutTestCases")
     public static class TestBlockFactory implements BlockFactory {
 
         private static final long serialVersionUID = 1234567L;

File: integration/src/main/java/ai/djl/integration/tests/nn/ScaledDotProductAttentionBlockTest.java
Patch:
@@ -30,6 +30,7 @@
 import org.testng.Assert;
 import org.testng.annotations.Test;
 
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public class ScaledDotProductAttentionBlockTest {
 
     private double[] keySequenceInitialization = {

File: integration/src/main/java/ai/djl/integration/util/TestUtils.java
Patch:
@@ -20,6 +20,7 @@
 
 import java.util.Arrays;
 
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public final class TestUtils {
 
     private static String engineName = Engine.getDefaultEngineName();

File: testing/src/main/java/ai/djl/testing/CoverageUtils.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.jar.JarFile;
 import java.util.stream.Collectors;
 
-@SuppressWarnings("PMD.AvoidAccessibilityAlteration")
+@SuppressWarnings({"PMD.AvoidAccessibilityAlteration", "PMD.TestClassWithoutTestCases"})
 public final class CoverageUtils {
 
     private CoverageUtils() {}

File: testing/src/main/java/ai/djl/testing/TestRequirements.java
Patch:
@@ -24,6 +24,7 @@
  * <p>When the test requirements are not fulfilled, the test is skipped with a {@link
  * SkipException}.
  */
+@SuppressWarnings("PMD.TestClassWithoutTestCases")
 public final class TestRequirements {
 
     private TestRequirements() {}

File: examples/src/main/java/ai/djl/examples/inference/whisper/WhisperModel.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.examples.inference.whisper;
 
+import ai.djl.Device;
 import ai.djl.ModelException;
 import ai.djl.audio.translator.WhisperTranslatorFactory;
 import ai.djl.inference.Predictor;
@@ -32,12 +33,14 @@ public class WhisperModel implements AutoCloseable {
     ZooModel<Audio, String> whisperModel;
 
     public WhisperModel() throws ModelException, IOException {
+        // this model is traced on CPU and can only be loaded on CPU
         Criteria<Audio, String> criteria =
                 Criteria.builder()
                         .setTypes(Audio.class, String.class)
                         .optModelUrls(
                                 "https://resources.djl.ai/demo/pytorch/whisper/whisper_en.zip")
                         .optEngine("PyTorch")
+                        .optDevice(Device.cpu())
                         .optTranslatorFactory(new WhisperTranslatorFactory())
                         .build();
         whisperModel = criteria.loadModel();

File: api/src/main/java/ai/djl/util/NeuronUtils.java
Patch:
@@ -88,7 +88,7 @@ public static int getNeuronCoresForDevice(String location) {
             return 0;
         }
         Path file = path.resolve("core_count");
-        if (Files.exists(file)) {
+        if (Files.exists(file) && Files.isReadable(file)) {
             try (InputStream is = Files.newInputStream(file)) {
                 return Integer.parseInt(Utils.toString(is));
             } catch (IOException e) {

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainAmazonReviewRanking.java
Patch:
@@ -125,7 +125,7 @@ public static TrainingResult runExample(String[] args)
     private static CsvDataset getDataset(
             Arguments arguments, BertFullTokenizer tokenizer, int maxLength) {
         String amazonReview =
-                "https://s3.amazonaws.com/amazon-reviews-pds/tsv/amazon_reviews_us_Digital_Software_v1_00.tsv.gz";
+                "https://mlrepo.djl.ai/dataset/nlp/ai/djl/basicdataset/amazon_reviews/1.0/amazon_reviews_us_Digital_Software_v1_00.tsv.gz";
         float paddingToken = tokenizer.getVocabulary().getIndex("[PAD]");
         return CsvDataset.builder()
                 .optCsvUrl(amazonReview)

File: api/src/main/java/ai/djl/inference/streaming/ChunkedBytesSupplier.java
Patch:
@@ -50,10 +50,10 @@ public void appendContent(byte[] data, boolean lastChunk) {
      * @param lastChunk true if this is the last chunk
      */
     public void appendContent(BytesSupplier bytesSupplier, boolean lastChunk) {
-        queue.offer(bytesSupplier);
         if (lastChunk) {
             completed.set(true);
         }
+        queue.offer(bytesSupplier);
     }
 
     /**

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -1351,8 +1351,9 @@ public PtNDArray dot(NDArray other) {
         int otherDim = other.getShape().dimension();
         if (selfDim != otherDim || selfDim > 2) {
             throw new UnsupportedOperationException(
-                    "Dimension mismatch or high dimensional dot operation is not supported. Please"
-                            + " use .matMul instead.");
+                    "Dimension mismatch or dimension is greater than 2.  Dot product is only"
+                            + " applied on two 1D vectors. For high dimensions, please use .matMul"
+                            + " instead.");
         }
         return JniUtils.dot(this, manager.from(other));
     }

File: api/src/main/java/ai/djl/modality/cv/output/BoundingBox.java
Patch:
@@ -41,7 +41,7 @@ public interface BoundingBox extends Serializable {
     Point getPoint();
 
     /**
-     * Gets the Intersection over Union (IoU) value between bounding boxes.
+     * Returns the Intersection over Union (IoU) value between bounding boxes.
      *
      * <p>Also known as <a href="https://en.wikipedia.org/wiki/Jaccard_index">Jaccard index</a>
      *

File: api/src/test/java/ai/djl/DeviceTest.java
Patch:
@@ -35,6 +35,7 @@ public void testDevice() {
         Device dev = Device.of("myDevice", 1);
         Assert.assertEquals(dev.getDeviceType(), "myDevice");
 
+        System.setProperty("test_key", "test");
         Engine.debugEnvironment();
     }
 

File: api/src/main/java/ai/djl/training/loss/TabNetClassificationLoss.java
Patch:
@@ -42,6 +42,6 @@ public TabNetClassificationLoss(String name) {
     public NDArray evaluate(NDList labels, NDList predictions) {
         return Loss.softmaxCrossEntropyLoss()
                 .evaluate(labels, new NDList(predictions.get(0)))
-                .add(predictions.get(1));
+                .add(predictions.get(1).mean());
     }
 }

File: api/src/main/java/ai/djl/training/loss/TabNetRegressionLoss.java
Patch:
@@ -46,6 +46,6 @@ public NDArray evaluate(NDList labels, NDList predictions) {
                 .sub(predictions.get(0))
                 .square()
                 .mean()
-                .add(predictions.get(1));
+                .add(predictions.get(1).mean());
     }
 }

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/TabularTranslator.java
Patch:
@@ -62,7 +62,7 @@ public TabularTranslator(Model model, Map<String, ?> arguments) {
     @Override
     public TabularResults processOutput(TranslatorContext ctx, NDList list) throws Exception {
         List<TabularResult> results = new ArrayList<>(labels.size());
-        float[] data = list.singletonOrThrow().toFloatArray();
+        float[] data = list.head().toFloatArray();
         int dataIndex = 0;
         for (Feature label : labels) {
             Featurizer featurizer = label.getFeaturizer();

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/tabular/TabNet.java
Patch:
@@ -444,8 +444,7 @@ protected NDList forwardInternal(
             NDArray sparseLoss =
                     mask.singletonOrThrow()
                             .mul(-1)
-                            .mul(NDArrays.add(mask.singletonOrThrow(), 1e-10).log())
-                            .mean();
+                            .mul(NDArrays.add(mask.singletonOrThrow(), 1e-10).log());
             NDList x1 = featureTransformer.forward(parameterStore, new NDList(x), training);
             return new NDList(x1.singletonOrThrow(), sparseLoss);
         }

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (MxEngineProvider.class) {
                 engine = MxEngine.newInstance();
             }
         }

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxSymbolBlock.java
Patch:
@@ -187,7 +187,7 @@ protected NDList forwardInternal(
             boolean training,
             PairList<String, Object> params) {
         if (first) {
-            synchronized (MxSymbolBlock.class) {
+            synchronized (this) {
                 if (first) {
                     // create CachedOp is not thread-safe
                     // add synchronized block to avoid creating multiple CachedOps

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (OrtEngineProvider.class) {
                 engine = OrtEngine.newInstance();
             }
         }

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (PpEngineProvider.class) {
                 engine = PpEngine.newInstance();
             }
         }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (PtEngineProvider.class) {
                 engine = PtEngine.newInstance();
             }
         }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtSymbolBlock.java
Patch:
@@ -135,7 +135,7 @@ protected NDList forwardInternal(
             JniUtils.setGraphExecutorOptimize(setOptimizer);
         }
         if (first) {
-            synchronized (PtSymbolBlock.class) {
+            synchronized (this) {
                 if (first) {
                     inputDescriptions = new PairList<>();
                     outputDescriptions = new PairList<>();

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (TfEngineProvider.class) {
                 engine = TfEngine.newInstance();
             }
         }

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (TrtEngineProvider.class) {
                 engine = TrtEngine.newInstance();
             }
         }

File: engines/tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteEngineProvider.java
Patch:
@@ -36,7 +36,7 @@ public int getEngineRank() {
     @Override
     public Engine getEngine() {
         if (engine == null) {
-            synchronized (this) {
+            synchronized (TfLiteEngineProvider.class) {
                 engine = TfLiteEngine.newInstance();
             }
         }

File: engines/tflite/tflite-engine/src/main/java/org/tensorflow/lite/Tensor.java
Patch:
@@ -274,6 +274,8 @@ DataType dataTypeOf(Object o) {
                     return DataType.STRING;
                 }
             }
+        } else {
+            throw new NullPointerException();
         }
         throw new IllegalArgumentException(
                 "DataType error: cannot resolve DataType of " + o.getClass().getName());

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/ExpectedNumInstanceSampler.java
Patch:
@@ -14,10 +14,10 @@
 package ai.djl.timeseries.transform;
 
 import ai.djl.ndarray.NDArray;
+import ai.djl.util.RandomUtils;
 
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Random;
 
 /**
  * Keeps track of the average time series length and adjusts the probability per time point such
@@ -62,10 +62,9 @@ public List<Integer> call(NDArray ts) {
 
         double prob = numInstances / avgLength;
         List<Integer> indices = new ArrayList<>();
-        Random random = new Random();
         while (indices.isEmpty()) {
             for (int i = 0; i < windowSize; i++) {
-                if (random.nextDouble() < prob) {
+                if (RandomUtils.RANDOM.nextDouble() < prob) {
                     indices.add(i + bound[0]);
                 }
             }

File: api/src/main/java/ai/djl/util/cuda/CudaUtils.java
Patch:
@@ -23,6 +23,7 @@
 
 import java.io.File;
 import java.lang.management.MemoryUsage;
+import java.util.Locale;
 import java.util.regex.Pattern;
 
 /** A class containing CUDA utility methods. */
@@ -100,7 +101,7 @@ public static String getCudaVersionString() {
         int version = getCudaVersion();
         int major = version / 1000;
         int minor = (version / 10) % 10;
-        return String.valueOf(major) + minor;
+        return String.format(Locale.ROOT, "%02d", major) + minor;
     }
 
     /**

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -295,10 +295,10 @@ public boolean matches(Platform system) {
             return true;
         }
 
-        // native package can run on system which major version is greater or equal
+        // native package can run on system which CUDA version is greater or equal
         if (system.flavor.startsWith("cu")
-                && Integer.parseInt(flavor.substring(2, 4))
-                        <= Integer.parseInt(system.flavor.substring(2, 4))) {
+                && Integer.parseInt(flavor.substring(2, 5))
+                        <= Integer.parseInt(system.flavor.substring(2, 5))) {
             return true;
         }
         logger.warn("The bundled library: " + this + " doesn't match system: " + system);

File: api/src/test/java/ai/djl/util/PlatformTest.java
Patch:
@@ -61,8 +61,8 @@ public void testPlatform() throws IOException {
         platform = Platform.fromUrl(url);
         // cu111 can run on cu113 machine
         Assert.assertTrue(platform.matches(system));
-        // cu113 can run on cu111 machine (the same major version)
-        Assert.assertTrue(system.matches(platform));
+        // cu113 cannot run on cu111 machine (the same major version)
+        Assert.assertFalse(system.matches(platform));
 
         url = createPropertyFile("version=1.8.0\nclassifier=cu102-linux-x86_64");
         platform = Platform.fromUrl(url);

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngine.java
Patch:
@@ -97,7 +97,7 @@ public int getRank() {
     /** {@inheritDoc} */
     @Override
     public String getVersion() {
-        return "1.13.1";
+        return "1.14.0";
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/modality/cv/output/Joints.java
Patch:
@@ -49,7 +49,7 @@ public List<Joint> getJoints() {
     @Override
     public String toString() {
         StringBuilder sb = new StringBuilder(4000);
-        sb.append("\n[\t");
+        sb.append("\n[\n\t");
         boolean first = true;
         for (Joint joint : joints) {
             if (first) {
@@ -97,7 +97,8 @@ public double getConfidence() {
         @Override
         public String toString() {
             return String.format(
-                    "Joint [x=%.3f, y=%.3f], confidence: %.4f", getX(), getY(), getConfidence());
+                    "{\"Joint\": {\"x\"=%.3f, \"y\"=%.3f}, \"confidence\": %.4f}",
+                    getX(), getY(), getConfidence());
         }
     }
 }

File: api/src/main/java/ai/djl/modality/cv/output/Rectangle.java
Patch:
@@ -138,6 +138,7 @@ public double getHeight() {
     public String toString() {
         double x = getX();
         double y = getY();
-        return String.format("[x=%.3f, y=%.3f, width=%.3f, height=%.3f]", x, y, width, height);
+        return String.format(
+                "{\"x\"=%.3f, \"y\"=%.3f, \"width\"=%.3f, \"height\"=%.3f}", x, y, width, height);
     }
 }

File: api/src/main/java/ai/djl/util/Ec2Utils.java
Patch:
@@ -93,7 +93,7 @@ public static String readMetadata(String key) {
      */
     public static void callHome(String engine) {
         if (Boolean.getBoolean("offline")
-                || Boolean.parseBoolean(Utils.getenv("OPT_OUT_TRACKING"))
+                || Boolean.parseBoolean(Utils.getEnvOrSystemProperty("OPT_OUT_TRACKING"))
                 || System.currentTimeMillis() - lastCheckIn < ONE_DAY) {
             return;
         }

File: api/src/main/java/ai/djl/ndarray/BytesSupplier.java
Patch:
@@ -25,7 +25,7 @@ public interface BytesSupplier {
      */
     default byte[] getAsBytes() {
         ByteBuffer bb = toByteBuffer();
-        if (bb.hasArray() && bb.remaining() == bb.capacity()) {
+        if (bb.hasArray() && bb.remaining() == bb.array().length) {
             return bb.array();
         }
         byte[] buf = new byte[bb.remaining()];

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -302,7 +302,7 @@ default long[] toLongArray() {
      */
     default byte[] toByteArray() {
         ByteBuffer bb = toByteBuffer();
-        if (bb.hasArray()) {
+        if (bb.hasArray() && bb.remaining() == bb.array().length) {
             return bb.array();
         }
         byte[] buf = new byte[bb.remaining()];

File: api/src/main/java/ai/djl/ndarray/NDSerializer.java
Patch:
@@ -89,7 +89,7 @@ static void encode(NDArray array, OutputStream os) throws IOException {
         dos.writeInt(length);
 
         if (length > 0) {
-            if (bb.hasArray()) {
+            if (bb.hasArray() && bb.remaining() == bb.array().length) {
                 dos.write(bb.array(), bb.position(), length);
             } else {
                 if (length > BUFFER_SIZE) {

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -145,7 +145,6 @@ private static Model getModel(Arguments arguments)
             SequentialBlock newBlock = new SequentialBlock();
             SymbolBlock block = (SymbolBlock) model.getBlock();
             block.removeLastBlock();
-            block.freezeParameters(false);
             newBlock.add(block);
             // the original model don't include the flatten
             // so apply the flatten here

File: engines/mxnet/mxnet-model-zoo/src/test/java/ai/djl/mxnet/integration/modality/nlp/WordEmbeddingTest.java
Patch:
@@ -32,7 +32,6 @@ public class WordEmbeddingTest {
     @Test
     public void testGlove() throws IOException, ModelException, EmbeddingException {
         TestRequirements.notArm();
-        TestRequirements.engine("MXNet");
 
         Criteria<String, NDList> criteria =
                 Criteria.builder()

File: examples/src/main/java/ai/djl/examples/inference/BertQaInference.java
Patch:
@@ -54,8 +54,6 @@ public static void main(String[] args) throws IOException, TranslateException, M
     }
 
     public static String predict() throws IOException, TranslateException, ModelException {
-        //        String question = "How is the weather";
-        //        String paragraph = "The weather is nice, it is beautiful day";
         String question = "When did BBC Japan start broadcasting?";
         String paragraph =
                 "BBC Japan was a general entertainment Channel. "

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxSymbolBlock.java
Patch:
@@ -155,7 +155,7 @@ public PairList<String, Shape> describeInput() {
                 // in MXNet models
                 logger.warn(
                         "Input shapes are unknown, please run predict or forward once"
-                                + "and call describeInput again.");
+                                + " and call describeInput again.");
                 inputDescriptions.add(name, new Shape());
             }
         }
@@ -174,7 +174,7 @@ public PairList<String, Shape> describeOutput() {
         if (outputDescriptions == null) {
             logger.warn(
                     "Output shapes are unknown, please run predict or forward once"
-                            + "and call describeOutput again.");
+                            + " and call describeOutput again.");
         }
         return outputDescriptions;
     }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtSymbolBlock.java
Patch:
@@ -160,7 +160,7 @@ public PairList<String, Shape> describeInput() {
         if (inputDescriptions == null) {
             logger.warn(
                     "Input shapes are unknown, please run predict or forward once"
-                            + "and call describeInput again.");
+                            + " and call describeInput again.");
         }
         return inputDescriptions;
     }
@@ -208,7 +208,7 @@ public PairList<String, Shape> describeOutput() {
         if (outputDescriptions == null) {
             logger.warn(
                     "Output shapes are unknown, please run predict or forward once"
-                            + "and call describeOutput again.");
+                            + " and call describeOutput again.");
         }
         return outputDescriptions;
     }

File: examples/src/main/java/ai/djl/examples/inference/whisper/WhisperTranslator.java
Patch:
@@ -49,12 +49,13 @@ public WhisperTranslator() {
     /** {@inheritDoc} */
     @Override
     public void prepare(TranslatorContext ctx) throws IOException {
-        NDManager manager = ctx.getNDManager();
         Path path = ctx.getModel().getModelPath();
         Path melFile = path.resolve("mel_80_filters.npz");
 
         processors.add(new PadOrTrim(480000));
-        processors.add(LogMelSpectrogram.newInstance(melFile, 80, manager));
+        // Use model's NDManager
+        NDManager modelManager = ctx.getModel().getNDManager();
+        processors.add(LogMelSpectrogram.newInstance(melFile, 80, modelManager));
 
         Map<String, Integer> vocab;
         Map<String, Integer> added;

File: integration/src/main/java/ai/djl/integration/util/DebugEnvironment.java
Patch:
@@ -73,7 +73,8 @@ private static void hardware() throws IOException {
 
         if (!TestUtils.isWindows()) {
             System.out.println("GCC: ");
-            Process process = rt.exec("gcc --version");
+            String[] cmd = {"gcc", "--version"};
+            Process process = rt.exec(cmd);
             try (Scanner gccOut =
                     new Scanner(process.getInputStream(), StandardCharsets.UTF_8.name())) {
                 gccOut.useDelimiter(System.lineSeparator());

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -68,6 +68,8 @@ private PyTorchLibrary() {}
 
     native long tensorClone(long handle);
 
+    native void torchCudaEmptyCache();
+
     native long torchEmpty(long[] shape, int dType, int layout, int[] device, boolean requiredGrad);
 
     native long torchZeros(long[] shape, int dType, int layout, int[] device, boolean requiredGrad);

File: examples/src/test/java/ai/djl/examples/training/TrainAirfoilWithTabNetTest.java
Patch:
@@ -24,7 +24,6 @@
 public class TrainAirfoilWithTabNetTest {
     @Test
     public void testTrainAirfoilWithTabNet() throws TranslateException, IOException {
-        TestRequirements.nightly();
         TestRequirements.engine("MXNet", "PyTorch");
         String[] args = new String[] {"-g", "1", "-e", "20", "-b", "32"};
         TrainingResult result = TrainAirfoilWithTabNet.runExample(args);

File: api/src/main/java/ai/djl/modality/Input.java
Patch:
@@ -188,7 +188,7 @@ public BytesSupplier getData() {
      */
     public NDList getDataAsNDList(NDManager manager) {
         if (content.isEmpty()) {
-            return null;
+            return null; // NOPMD
         }
 
         int index = content.indexOf("data");
@@ -227,7 +227,7 @@ public BytesSupplier get(int index) {
     public byte[] getAsBytes(String key) {
         BytesSupplier data = content.get(key);
         if (data == null) {
-            return null;
+            return null; // NOPMD
         }
         return data.getAsBytes();
     }
@@ -306,7 +306,7 @@ public NDArray getAsNDArray(NDManager manager, int index) {
     public NDList getAsNDList(NDManager manager, String key) {
         int index = content.indexOf(key);
         if (index < 0) {
-            return null;
+            return null; // NOPMD
         }
         return getAsNDList(manager, index);
     }

File: api/src/main/java/ai/djl/modality/nlp/preprocess/HyphenNormalizer.java
Patch:
@@ -55,6 +55,7 @@ public static boolean isHyphenLike(final Integer codePoint) {
      * @return the same string with soft hyphens dropped and hyphen-like codepoints replaced by an
      *     ASCII minus.
      */
+    @SuppressWarnings("PMD.EmptyControlStatement")
     public static String normalizeHyphens(final String s) {
         final StringBuilder temp = new StringBuilder(s.length());
         int position = 0;

File: api/src/main/java/ai/djl/training/dataset/RandomAccessDataset.java
Patch:
@@ -319,7 +319,7 @@ private Number[] flattenRecord(NDList data) {
         NDList flattened =
                 new NDList(data.stream().map(NDArray::flatten).collect(Collectors.toList()));
         if (flattened.size() == 0) {
-            return null;
+            return null; // NOPMD
         }
         if (flattened.size() == 1) {
             return flattened.get(0).toArray();

File: engines/ml/lightgbm/src/main/java/ai/djl/ml/lightgbm/LgbmNDArray.java
Patch:
@@ -164,6 +164,7 @@ public void intern(NDArray replaced) {
         floatData = array.floatData;
         doubleData = array.doubleData;
         typeConstant = array.typeConstant;
+        replaced.close();
     }
 
     /** {@inheritDoc} */

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDArray.java
Patch:
@@ -82,6 +82,9 @@ public void setName(String name) {
     /** {@inheritDoc} */
     @Override
     public DataType getDataType() {
+        if (isClosed) {
+            throw new IllegalStateException("Native resource has been release already.");
+        }
         if (dataType == null) {
             dataType = JniUtils.getDTypeFromNd(this);
         }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArrayIndexer.java
Patch:
@@ -91,7 +91,7 @@ public void set(NDArray array, NDIndex index, Object data) {
         if (data instanceof Number) {
             JniUtils.indexAdvPut(ptArray, index, (PtNDArray) manager.create((Number) data));
         } else if (data instanceof NDArray) {
-            JniUtils.indexAdvPut(ptArray, index, (PtNDArray) data);
+            JniUtils.indexAdvPut(ptArray, index, manager.from((NDArray) data));
         } else {
             throw new IllegalArgumentException(
                     "The type of value to assign cannot be other than NDArray and Number.");

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -396,7 +396,7 @@ public static PtNDArray indexAdv(PtNDArray ndArray, NDIndex index, PtNDManager m
                 PtNDArray indexArr = (PtNDArray) ((NDIndexBooleans) elem).getIndex();
                 PyTorchLibrary.LIB.torchIndexAppendArray(torchIndexHandle, indexArr.getHandle());
             } else if (elem instanceof NDIndexTake) {
-                PtNDArray indexArr = (PtNDArray) ((NDIndexTake) elem).getIndex();
+                PtNDArray indexArr = manager.from(((NDIndexTake) elem).getIndex());
                 if (indexArr.getDataType() != DataType.INT64) {
                     indexArr = indexArr.toType(DataType.INT64, true);
                 }

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxDetectionTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.integration.tests.modality.cv;
 
+import ai.djl.integration.util.TestUtils;
 import ai.djl.modality.cv.MultiBoxDetection;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
@@ -22,10 +23,11 @@
 import org.testng.annotations.Test;
 
 public class MultiBoxDetectionTest {
+
     @Test
     public void testDetections() {
         MultiBoxDetection multiBoxDetection = MultiBoxDetection.builder().build();
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getEngine())) {
             NDArray anchors =
                     manager.create(
                                     new float[] {

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxPriorTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.integration.tests.modality.cv;
 
+import ai.djl.integration.util.TestUtils;
 import ai.djl.modality.cv.MultiBoxPrior;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDManager;
@@ -24,9 +25,10 @@
 import java.util.List;
 
 public class MultiBoxPriorTest {
+
     @Test
     public void testMultiBoxPriors() {
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getEngine())) {
             List<Float> sizes = Arrays.asList(0.2f, 0.272f);
             List<Float> ratios = Arrays.asList(1f, 2f, 0.5f);
             MultiBoxPrior multiBoxPriors =

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/SingleShotDetectionTest.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.integration.tests.modality.cv;
 
 import ai.djl.basicmodelzoo.cv.object_detection.ssd.SingleShotDetection;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.DataType;
@@ -64,7 +65,7 @@ public void testDownSamplingBlock() {
 
     @Test
     public void testSingleShotDetectionShape() {
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getEngine())) {
             int[] numFilters = {16, 32, 64};
             SequentialBlock block = new SequentialBlock();
             for (int numFilter : numFilters) {

File: integration/src/main/java/ai/djl/integration/tests/modality/nlp/SimpleTextEncoderTest.java
Patch:
@@ -50,7 +50,7 @@ public void testEncoder() {
                                 .optBatchFirst(true)
                                 .optReturnState(true)
                                 .build());
-        try (NDManager manager = NDManager.newBaseManager(TestUtils.getDevices()[0])) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getDevices(1)[0])) {
             encoder.initialize(manager, DataType.FLOAT32, new Shape(4, 7));
             NDList output =
                     encoder.forward(

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/SqueezenetTest.java
Patch:
@@ -15,7 +15,7 @@
 
 import ai.djl.Model;
 import ai.djl.basicmodelzoo.cv.classification.SqueezeNet;
-import ai.djl.engine.Engine;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
@@ -41,10 +41,10 @@ public class SqueezenetTest {
     public void testTrain() {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
-                        .optDevices(Engine.getInstance().getDevices(2))
+                        .optDevices(TestUtils.getDevices(2))
                         .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         Block squeezeNet = SqueezeNet.squeezenet(10);
-        try (Model model = Model.newInstance("squeezenet")) {
+        try (Model model = Model.newInstance("squeezenet", TestUtils.getEngine())) {
             model.setBlock(squeezeNet);
             try (Trainer trainer = model.newTrainer(config)) {
                 int batchSize = 1;

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDListTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.integration.tests.ndarray;
 
+import ai.djl.integration.util.TestUtils;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 
@@ -22,7 +23,7 @@ public class NDListTest {
 
     @Test
     public void testEncode() {
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getEngine())) {
             Assert.assertThrows(
                     () -> {
                         // invalid NDList length

File: integration/src/main/java/ai/djl/integration/tests/training/BlocksTest.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.integration.tests.training;
 
 import ai.djl.Model;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
@@ -37,7 +38,7 @@ public class BlocksTest {
 
     @Test
     public void testFlattenBlock() {
-        try (Model model = Model.newInstance("model")) {
+        try (Model model = Model.newInstance("model", TestUtils.getEngine())) {
             model.setBlock(Blocks.batchFlattenBlock());
 
             try (Trainer trainer = model.newTrainer(config)) {

File: integration/src/main/java/ai/djl/integration/tests/training/EvaluateDatasetTest.java
Patch:
@@ -15,6 +15,7 @@
 import ai.djl.Model;
 import ai.djl.basicdataset.cv.classification.Mnist;
 import ai.djl.basicmodelzoo.basic.Mlp;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.metric.Metrics;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
@@ -39,7 +40,7 @@ public class EvaluateDatasetTest {
 
     @Test
     public void testDatasetEvaluation() throws IOException, TranslateException {
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getEngine())) {
             Mnist testMnistDataset =
                     Mnist.builder()
                             .optManager(manager)
@@ -51,7 +52,7 @@ public void testDatasetEvaluation() throws IOException, TranslateException {
 
             Mlp mlpModel = new Mlp(784, 1, new int[] {256}, Activation::relu);
 
-            try (Model model = Model.newInstance("lin-reg")) {
+            try (Model model = Model.newInstance("lin-reg", TestUtils.getEngine())) {
                 model.setBlock(mlpModel);
 
                 Loss l2loss = Loss.l2Loss();

File: integration/src/main/java/ai/djl/integration/tests/training/ModelTest.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.MalformedModelException;
 import ai.djl.Model;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.ndarray.types.DataType;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.ParameterList;
@@ -35,8 +36,8 @@ public void testModelSaveAndLoad() throws IOException, MalformedModelException {
         SequentialBlock block = new SequentialBlock();
         block.add(Conv2d.builder().setKernelShape(new Shape(1, 1)).setFilters(10).build());
         block.add(BatchNorm.builder().build());
-        try (Model saveModel = Model.newInstance("saveModel");
-                Model loadModel = Model.newInstance("loadModel")) {
+        try (Model saveModel = Model.newInstance("saveModel", TestUtils.getEngine());
+                Model loadModel = Model.newInstance("loadModel", TestUtils.getEngine())) {
             block.initialize(saveModel.getNDManager(), DataType.FLOAT32, new Shape(1, 3, 32, 32));
             ParameterList savedParameters = block.getParameters();
             saveModel.setBlock(block);

File: api/src/main/java/ai/djl/nn/AbstractBaseBlock.java
Patch:
@@ -313,7 +313,7 @@ protected void saveMetadata(DataOutputStream os) throws IOException {
      * Overwrite this to load additional metadata with the parameter values.
      *
      * <p>If you overwrite {@link AbstractBlock#saveMetadata(DataOutputStream)} or need to provide
-     * backward compatibility to older binary formats, you prabably need to overwrite this. This
+     * backward compatibility to older binary formats, you probably need to overwrite this. This
      * default implementation checks if the version number fits, if not it throws an {@link
      * MalformedModelException}. After that it restores the input shapes.
      *

File: api/src/main/java/ai/djl/nn/AbstractBlock.java
Patch:
@@ -131,7 +131,7 @@ protected final LambdaBlock addChildBlockSingleton(String name, Function<NDArray
     }
 
     /**
-     * Adds a parameter to this block. If parameters are added with this method, intialization of
+     * Adds a parameter to this block. If parameters are added with this method, initialization of
      * the parameter works out of the box
      *
      * @param <P> the specific parameter subclass

File: api/src/main/java/ai/djl/ndarray/NDArrays.java
Patch:
@@ -199,7 +199,7 @@ public static NDArray eq(NDArray a, Number n) {
      * @return the boolean {@link NDArray} for element-wise "Equals" comparison
      */
     public static NDArray eq(Number n, NDArray a) {
-        return a.eq(n);
+        return eq(a, n);
     }
 
     /**
@@ -264,7 +264,7 @@ public static NDArray neq(NDArray a, Number n) {
      * @return the boolean {@link NDArray} for element-wise "Not equals" comparison
      */
     public static NDArray neq(Number n, NDArray a) {
-        return a.neq(n);
+        return neq(a, n);
     }
 
     /**

File: api/src/main/java/ai/djl/ndarray/NDUtils.java
Patch:
@@ -23,7 +23,7 @@ public final class NDUtils {
     private NDUtils() {}
 
     /**
-     * Get {@link Shape} of the empty {@link NDArray} after applying reduction operations.
+     * Returns {@link Shape} of the empty {@link NDArray} after applying reduction operations.
      *
      * @param shape input shape
      * @param axis axis to apply reduction

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -412,9 +412,10 @@ public NDArray sequenceMask(NDArray sequenceLength) {
     /** {@inheritDoc} */
     @Override
     public boolean contentEquals(Number number) {
-        if (number == null) {
+        if (number == null || getDataType().isBoolean()) {
             return false;
         }
+
         try (NDArray result = eq(number)) {
             return result.all().getBoolean();
         }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -401,7 +401,7 @@ public NDArray sequenceMask(NDArray sequenceLength) {
     /** {@inheritDoc} */
     @Override
     public boolean contentEquals(Number number) {
-        return JniUtils.contentEqual(this, (PtNDArray) manager.create(number));
+        return contentEquals(manager.create(number));
     }
 
     /** {@inheritDoc} */

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -311,7 +311,7 @@ public NDArray sequenceMask(NDArray sequenceLength) {
     /** {@inheritDoc} */
     @Override
     public boolean contentEquals(Number number) {
-        if (number == null) {
+        if (number == null || getDataType().isBoolean()) {
             return false;
         }
         try (NDArray result = eq(number)) {

File: engines/ml/lightgbm/src/main/java/ai/djl/ml/lightgbm/LgbmNDManager.java
Patch:
@@ -80,12 +80,12 @@ public NDArray create(Buffer data, Shape shape, DataType dataType) {
             // output only NDArray
             return new LgbmNDArray(this, alternativeManager, (ByteBuffer) data, shape, dataType);
         } else if (data instanceof FloatBuffer && dataType == DataType.FLOAT32) {
-            ByteBuffer bb = ByteBuffer.allocateDirect(data.capacity() * 4);
+            ByteBuffer bb = allocateDirect(data.capacity() * 4);
             bb.asFloatBuffer().put((FloatBuffer) data);
             bb.rewind();
             return new LgbmNDArray(this, alternativeManager, bb, shape, dataType);
         } else if (data instanceof DoubleBuffer && dataType == DataType.FLOAT64) {
-            ByteBuffer bb = ByteBuffer.allocateDirect(data.capacity() * 8);
+            ByteBuffer bb = allocateDirect(data.capacity() * 8);
             bb.asDoubleBuffer().put((DoubleBuffer) data);
             bb.rewind();
             return new LgbmNDArray(this, alternativeManager, bb, shape, dataType);

File: basicdataset/src/main/java/ai/djl/basicdataset/nlp/TextDataset.java
Patch:
@@ -197,7 +197,7 @@ public abstract static class Builder<T extends Builder<T>> extends BaseBuilder<T
         protected Usage usage;
 
         /** Constructs a new builder. */
-        Builder() {
+        protected Builder() {
             repository = BasicDatasets.REPOSITORY;
             groupId = BasicDatasets.GROUP_ID;
             usage = Usage.TRAIN;

File: extensions/aws-ai/src/test/java/ai/djl/aws/sagemaker/SageMakerTest.java
Patch:
@@ -28,6 +28,7 @@
 
 import software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider;
 import software.amazon.awssdk.core.exception.SdkClientException;
+import software.amazon.awssdk.services.sagemaker.model.SageMakerException;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -82,7 +83,7 @@ public void testDeployModel() throws IOException, ModelException {
                 sageMaker.deleteEndpointConfig(true);
                 sageMaker.deleteSageMakerModel(true);
             }
-        } catch (SdkClientException e) {
+        } catch (SdkClientException | SageMakerException e) {
             throw new SkipException("Skip tests that requires permission.", e);
         }
     }

File: examples/src/test/java/ai/djl/examples/training/TrainTicTacToeTest.java
Patch:
@@ -27,7 +27,7 @@ public class TrainTicTacToeTest {
     public void testTrainTicTacToe() throws IOException {
         TestRequirements.engine("MXNet", "PyTorch");
 
-        if (Boolean.getBoolean("nightly")) {
+        if (Boolean.getBoolean("nightly") && Engine.getInstance().getGpuCount() > 0) {
             String[] args = new String[] {"-g", "1", "-e", "6"};
             Engine.getInstance().setRandomSeed(1234);
 

File: api/src/main/java/ai/djl/ndarray/types/DataType.java
Patch:
@@ -33,6 +33,7 @@ public enum DataType {
     INT8(Format.INT, 1),
     INT64(Format.INT, 8),
     BOOLEAN(Format.BOOLEAN, 1),
+    COMPLEX64(Format.FLOATING, 4),
     UNKNOWN(Format.UNKNOWN, 0),
     STRING(Format.STRING, -1);
 
@@ -185,6 +186,7 @@ public Buffer asDataType(ByteBuffer data) {
                 return data.asLongBuffer();
             case UINT8:
             case INT8:
+            case COMPLEX64:
             case UNKNOWN:
             default:
                 return data;
@@ -217,6 +219,7 @@ public String asNumpy() {
                 return "|b1";
             case STRING:
                 return "|S1";
+            case COMPLEX64:
             case UNKNOWN:
             default:
                 throw new IllegalArgumentException("Unsupported dataType: " + this);

File: extensions/audio/src/test/java/ai/djl/audio/processor/AudioProcessorTest.java
Patch:
@@ -64,6 +64,6 @@ public static void testLinearSpecgram() {
         testData.setAudioPaths(Collections.singletonList("build/test/test_01.wav"));
         NDArray samples = testData.getPreprocessedData(manager, 0);
         Assert.assertEquals(new Shape(161, 838), samples.getShape());
-        Assert.assertEquals(samples.get("0,0").toFloatArray()[0], -15.4571f, 1e-3f);
+        Assert.assertEquals(samples.get("0,0").toFloatArray()[0], -15.4531f, 1e-3f);
     }
 }

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngine.java
Patch:
@@ -42,7 +42,7 @@
 public final class MxEngine extends Engine {
 
     public static final String ENGINE_NAME = "MXNet";
-    static final int RANK = 1;
+    static final int RANK = 0;
     private static final String MXNET_EXTRA_LIBRARY_VERBOSE = "MXNET_EXTRA_LIBRARY_VERBOSE";
 
     /** Constructs an MXNet Engine. */

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngineProvider.java
Patch:
@@ -29,7 +29,7 @@ public String getEngineName() {
     /** {@inheritDoc} */
     @Override
     public int getEngineRank() {
-        return 0;
+        return MxEngine.RANK;
     }
 
     /** {@inheritDoc} */

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngineProvider.java
Patch:
@@ -29,7 +29,7 @@ public String getEngineName() {
     /** {@inheritDoc} */
     @Override
     public int getEngineRank() {
-        return 10;
+        return OrtEngine.RANK;
     }
 
     /** {@inheritDoc} */

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -71,6 +71,7 @@ public MxNDArray from(NDArray array) {
         }
         MxNDArray ret = create(array.getShape(), array.getDataType());
         ret.set(array.toByteBuffer());
+        ret.setName(array.getName());
         return ret;
     }
 

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -57,7 +57,9 @@ public OrtNDArray from(NDArray array) {
         if (array == null || array instanceof OrtNDArray) {
             return (OrtNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        OrtNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     OrtNDArray createInternal(OnnxTensor tensor) {

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -70,7 +70,9 @@ public PpNDArray from(NDArray array) {
         if (array == null || array instanceof PpNDArray) {
             return (PpNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        PpNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     /**

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -52,7 +52,9 @@ public PtNDArray from(NDArray array) {
         if (array == null || array instanceof PtNDArray) {
             return (PtNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        PtNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     /** {@inheritDoc} */

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -56,7 +56,9 @@ public TfNDArray from(NDArray array) {
         if (array == null || array instanceof TfNDArray) {
             return (TfNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        TfNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     /** {@inheritDoc} */

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtNDManager.java
Patch:
@@ -56,7 +56,9 @@ public TrtNDArray from(NDArray array) {
         if (array == null || array instanceof TrtNDArray) {
             return (TrtNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        TrtNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     /** {@inheritDoc} */

File: engines/tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDManager.java
Patch:
@@ -51,7 +51,9 @@ public TfLiteNDArray from(NDArray array) {
         if (array == null || array instanceof TfLiteNDArray) {
             return (TfLiteNDArray) array;
         }
-        return create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        TfLiteNDArray result = create(array.toByteBuffer(), array.getShape(), array.getDataType());
+        result.setName(array.getName());
+        return result;
     }
 
     TfLiteNDArray createInternal(Tensor tensor) {

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -28,6 +28,7 @@
 import ai.djl.util.ClassLoaderUtils;
 import ai.djl.util.Pair;
 import ai.djl.util.Progress;
+import ai.djl.util.Utils;
 
 import java.io.IOException;
 import java.io.Reader;
@@ -102,6 +103,7 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
             if (modelDir == null) {
                 throw new AssertionError("Directory should not be null.");
             }
+            modelDir = Utils.getNestedModelDir(modelDir);
 
             loadServingProperties(modelDir, arguments, options);
             Application application = criteria.getApplication();

File: extensions/aws-ai/src/test/java/ai/djl/aws/sagemaker/SageMakerTest.java
Patch:
@@ -59,7 +59,7 @@ public void testDeployModel() throws IOException, ModelException {
                             .optBucketName("djl-sm-test")
                             .optModelName("resnet18-jit")
                             .optContainerImage(
-                                    "125045733377.dkr.ecr.us-east-1.amazonaws.com/djl-serving")
+                                    "125045733377.dkr.ecr.us-east-1.amazonaws.com/djl-serving:cpu-nightly")
                             .optExecutionRole(
                                     "arn:aws:iam::125045733377:role/service-role/DJLSageMaker-ExecutionRole-20210213T1027050")
                             .build();

File: integration/src/main/java/ai/djl/integration/tests/nn/BlockCoreTest.java
Patch:
@@ -1050,7 +1050,7 @@ public void testParallelBlock() throws IOException, MalformedModelException {
     private void testEncode(NDManager manager, Block block)
             throws IOException, MalformedModelException {
         PairList<String, Parameter> original = block.getParameters();
-        File temp = File.createTempFile("block", ".param");
+        File temp = Files.createTempFile("block", ".param").toFile();
         DataOutputStream os = new DataOutputStream(Files.newOutputStream(temp.toPath()));
         block.saveParameters(os);
         block.loadParameters(manager, new DataInputStream(Files.newInputStream(temp.toPath())));

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/zoo/HfModelZoo.java
Patch:
@@ -52,7 +52,7 @@ public class HfModelZoo extends ModelZoo {
     private static final long ONE_DAY = Duration.ofDays(1).toMillis();
 
     HfModelZoo() {
-        Version version = new Version(Engine.class.getPackage().getSpecificationVersion());
+        Version version = new Version(Engine.getDjlVersion());
         addModels(NLP.FILL_MASK, version);
         addModels(NLP.QUESTION_ANSWER, version);
         addModels(NLP.TEXT_CLASSIFICATION, version);

File: djl-zero/src/main/java/ai/djl/zero/cv/ImageClassification.java
Patch:
@@ -158,7 +158,8 @@ public static ZooModel<Image, Classifications> train(
             EasyTrain.fit(trainer, 35, trainDataset, validateDataset);
         }
 
-        Translator<Image, Classifications> translator = dataset.makeTranslator();
+        Translator<Image, Classifications> translator =
+                dataset.matchingTranslatorOptions().option(Image.class, Classifications.class);
         return new ZooModel<>(model, translator);
     }
 

File: engines/pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/PtModelZoo.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.Application.CV;
 import ai.djl.Application.NLP;
+import ai.djl.Application.TimeSeries;
 import ai.djl.pytorch.engine.PtEngine;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.ModelZoo;
@@ -41,6 +42,7 @@ public class PtModelZoo extends ModelZoo {
         addModel(REPOSITORY.model(CV.IMAGE_GENERATION, GROUP_ID, "biggan-deep", "0.0.1"));
         addModel(REPOSITORY.model(CV.IMAGE_GENERATION, GROUP_ID, "cyclegan", "0.0.1"));
         addModel(REPOSITORY.model(CV.SEMANTIC_SEGMENTATION, GROUP_ID, "deeplabv3", "0.0.1"));
+        addModel(REPOSITORY.model(TimeSeries.FORECASTING, GROUP_ID, "deepar", "0.0.1"));
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/ndarray/internal/NDFormat.java
Patch:
@@ -123,6 +123,7 @@ protected String dump(
             sb.append("[]").append(LF);
         } else if (dimension == 0) {
             // scalar case
+            init(array);
             sb.append(format(array.toArray()[0])).append(LF);
         } else if (size > maxSize) {
             sb.append("[ Exceed max print size ]");

File: api/src/test/java/ai/djl/ndarray/internal/NDFormatTest.java
Patch:
@@ -144,6 +144,9 @@ public void testLargeArray() {
             String str = large.toString();
             Assert.assertEquals(
                     str, "ND: (100, 100, 100, 100) cpu() float32\n[ Exceed max print size ]");
+
+            NDArray arr = manager.create(new float[] {1, 0, 0, 0});
+            Assert.assertEquals(arr.mean().toString(), "ND: () cpu() float32\n0.25\n");
         }
     }
 }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -1555,7 +1555,7 @@ public static PtSymbolBlock loadModule(
             boolean mapLocation,
             String[] extraFileKeys,
             String[] extraFileValues,
-            boolean retrain) {
+            boolean trainParam) {
         Device device = manager.getDevice();
         // MPS doesn't support mapLocation
         if ("mps".equals(device.getDeviceType())) {
@@ -1570,7 +1570,7 @@ public static PtSymbolBlock loadModule(
                         mapLocation,
                         extraFileKeys,
                         extraFileValues,
-                        retrain);
+                        trainParam);
         return new PtSymbolBlock(manager, handle);
     }
 

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -494,7 +494,7 @@ native long moduleLoad(
             boolean mapLocation,
             String[] extraFileNames,
             String[] extraFileValues,
-            boolean retrain);
+            boolean trainParam);
 
     native long moduleLoad(
             InputStream is, int[] device, boolean mapLocation, byte[] buffer, long size);

File: integration/src/test/java/ai/djl/integration/IntegrationTests.java
Patch:
@@ -46,7 +46,6 @@ public void runIntegrationTests() {
         for (String engine : engines) {
             System.setProperty("ai.djl.default_engine", engine);
             logger.info("Testing engine: {} ...", engine);
-            logger.info("=============== {} ===============", engine);
             Assert.assertTrue(new IntegrationTest(IntegrationTest.class).runTests(args));
             // currently each engine will reserve a certain amount of memory and hold it until
             // process terminate so running 3 different engines sequentially without

File: engines/ml/lightgbm/src/test/java/ai/djl/ml/lightgbm/LgbmModelTest.java
Patch:
@@ -55,7 +55,7 @@ public void testLoad() throws ModelException, IOException, TranslateException {
             try (NDManager manager = NDManager.newBaseManager()) {
                 NDArray array = manager.ones(new Shape(10, 4));
                 NDList output = predictor.predict(new NDList(array));
-                Assert.assertEquals(output.singletonOrThrow().getDataType(), DataType.FLOAT64);
+                Assert.assertEquals(output.singletonOrThrow().getDataType(), DataType.FLOAT32);
                 Assert.assertEquals(output.singletonOrThrow().getShape().size(), 10);
             }
         }

File: examples/src/test/java/ai/djl/examples/training/TrainAirfoilWithTabNetTest.java
Patch:
@@ -24,6 +24,7 @@
 public class TrainAirfoilWithTabNetTest {
     @Test
     public void testTrainAirfoilWithTabNet() throws TranslateException, IOException {
+        TestRequirements.nightly();
         TestRequirements.engine("MXNet", "PyTorch");
         String[] args = new String[] {"-g", "1", "-e", "20", "-b", "32"};
         TrainingResult result = TrainAirfoilWithTabNet.runExample(args);

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -127,7 +127,7 @@ public void close() {
     private static final class SystemManager extends OrtNDManager implements SystemNDManager {
 
         SystemManager() {
-            super(null, null, OrtEnvironment.getEnvironment());
+            super(null, null, ((OrtEngine) Engine.getEngine(OrtEngine.ENGINE_NAME)).getEnv());
         }
 
         /** {@inheritDoc} */

File: extensions/timeseries/src/main/java/ai/djl/timeseries/timefeature/TimeFeature.java
Patch:
@@ -16,6 +16,7 @@
 import ai.djl.ndarray.NDManager;
 
 import java.time.LocalDateTime;
+import java.time.temporal.ChronoField;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
@@ -124,7 +125,8 @@ public static NDArray monthOfYear(NDManager manager, List<LocalDateTime> index)
      * @return the result feature
      */
     public static NDArray weekOfYear(NDManager manager, List<LocalDateTime> index) {
-        throw new UnsupportedOperationException("weekOfYear is not supported yet");
+        float[] data = getFeature(index, a -> a.get(ChronoField.ALIGNED_WEEK_OF_YEAR));
+        return manager.create(data).sub(1f).div(52f).sub(0.5f);
     }
 
     private static float[] getFeature(

File: extensions/timeseries/src/main/java/ai/djl/timeseries/timefeature/TimeOffset.java
Patch:
@@ -25,7 +25,7 @@ public class TimeOffset {
     private int n;
 
     /**
-     * Constructs a new {@code DateOffset} instance.
+     * Constructs a new {@code TimeOffset} instance.
      *
      * @param name offset granularity including "D", "M" etc
      * @param n offset multiple

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/InstanceSampler.java
Patch:
@@ -50,9 +50,9 @@ public InstanceSampler(int axis, int minPast, int minFuture) {
      * @return the indices bound
      */
     public int[] getBounds(NDArray ts) {
-        int start = this.minPast;
-        int posAxis = this.axis < 0 ? ts.getShape().dimension() + this.axis : this.axis;
-        int end = (int) ts.getShape().get(posAxis) - this.minFuture;
+        int start = minPast;
+        int posAxis = axis < 0 ? ts.getShape().dimension() + axis : axis;
+        int end = (int) ts.getShape().get(posAxis) - minFuture;
         return new int[] {start, end};
     }
 

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/PredictionSplitSampler.java
Patch:
@@ -40,7 +40,7 @@ public PredictionSplitSampler(
     /** {@inheritDoc} * */
     @Override
     public List<Integer> call(NDArray ts) {
-        int[] bound = this.getBounds(ts);
+        int[] bound = getBounds(ts);
         List<Integer> ret = new ArrayList<>();
         if (bound[0] < bound[1]) {
             ret.add(bound[1]);

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/convert/VstackFeatures.java
Patch:
@@ -54,7 +54,7 @@ public VstackFeatures(FieldName outputField, FieldName[] inputFields) {
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         Convert.vstackFeatures(outputField, inputFields, dropInputs, hStack, data);
         return data;
     }

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/feature/AddAgeFeature.java
Patch:
@@ -54,7 +54,7 @@ public AddAgeFeature(
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         return Feature.addAgeFeature(
                 manager, targetField, outputField, predictionLength, logScale, data);
     }

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/feature/AddObservedValuesIndicator.java
Patch:
@@ -36,7 +36,7 @@ public AddObservedValuesIndicator(FieldName targetField, FieldName outputField)
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         Feature.addObservedValuesIndicator(manager, targetField, outputField, data);
         return data;
     }

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/feature/AddTimeFeature.java
Patch:
@@ -59,7 +59,7 @@ public AddTimeFeature(
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         Feature.addTimeFeature(
                 manager,
                 startField,

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/field/RemoveFields.java
Patch:
@@ -35,7 +35,7 @@ public RemoveFields(List<FieldName> fieldNames) {
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         Field.removeFields(fieldNames, data);
         return data;
     }

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/field/SelectField.java
Patch:
@@ -32,7 +32,7 @@ public SelectField(String[] inputFields) {
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         return Field.selectField(inputFields, data);
     }
 }

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/field/SetField.java
Patch:
@@ -37,7 +37,7 @@ public SetField(FieldName outputField, NDArray value) {
 
     /** {@inheritDoc} */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         NDArray copyValue = value.duplicate();
         Field.setField(outputField, copyValue, data);
         return data;

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/split/InstanceSplit.java
Patch:
@@ -115,7 +115,7 @@ public InstanceSplit(
 
     /** {@inheritDoc}. */
     @Override
-    public TimeSeriesData transform(NDManager manager, TimeSeriesData data) {
+    public TimeSeriesData transform(NDManager manager, TimeSeriesData data, boolean isTrain) {
         Split.instanceSplit(
                 manager,
                 targetField,

File: extensions/timeseries/src/main/java/ai/djl/timeseries/transform/split/Split.java
Patch:
@@ -100,7 +100,7 @@ public static void instanceSplit(
                     shape = shape.slice(0, dims - 1).add(padLength);
                     NDArray padBlock = manager.full(shape, dummyValue, tsData.getDataType());
 
-                    pastPiece = padBlock.concat(tsData.get("..., :{}", i), -1);
+                    pastPiece = i == 0 ? padBlock : padBlock.concat(tsData.get("..., :{}", i), -1);
                 } else {
                     pastPiece = tsData.get("..., :{}", i);
                 }

File: api/src/main/java/ai/djl/training/GradientCollector.java
Patch:
@@ -31,6 +31,9 @@ public interface GradientCollector extends AutoCloseable {
      */
     void backward(NDArray target);
 
+    /** Sets all the gradients within the engine to zero. */
+    void zeroGradients();
+
     /** {@inheritDoc} */
     @Override
     void close();

File: api/src/main/java/ai/djl/ndarray/internal/NDFormat.java
Patch:
@@ -83,6 +83,7 @@ public static String format(
             sb.append(" hasGradient");
         }
         if (!withContent) {
+            sb.append("\nCheck the \"Development Guideline\"->Debug to enable array display.\n");
             return sb.toString();
         }
 
@@ -114,9 +115,7 @@ protected String dump(
             int maxDepth,
             int maxRows,
             int maxColumns) {
-        init(array);
         sb.append(LF);
-
         long size = array.size();
         long dimension = array.getShape().dimension();
         if (size == 0) {
@@ -130,6 +129,7 @@ protected String dump(
         } else if (dimension > maxDepth) {
             sb.append("[ Exceed max print dimension ]");
         } else {
+            init(array);
             dump(sb, array, 0, true, maxRows, maxColumns);
         }
         return sb.toString();

File: android/core/src/main/java/ai/djl/android/core/BitmapImageFactory.java
Patch:
@@ -327,7 +327,7 @@ public void drawImage(Image overlay, boolean resize) {
 
         private int randomColor() {
             return Color.rgb(
-                    RandomUtils.nextInt(255), RandomUtils.nextInt(255), RandomUtils.nextInt(255));
+                    RandomUtils.nextInt(256), RandomUtils.nextInt(256), RandomUtils.nextInt(256));
         }
 
         private int darker(int color) {

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/CsvDataset.java
Patch:
@@ -155,7 +155,6 @@ public T setCsvFormat(CSVFormat csvFormat) {
          * @return the new {@link CsvDataset}
          */
         public CsvDataset build() {
-            validate();
             return new CsvDataset(this);
         }
     }

File: basicdataset/src/test/java/ai/djl/basicdataset/DailyDelhiClimateTest.java
Patch:
@@ -51,6 +51,7 @@ public void testDailyDelhiClimateRemote() throws IOException, TranslateException
                             .optUsage(Dataset.Usage.TEST)
                             .addFeature("humidity")
                             .addFeature("wind_speed")
+                            .noLabels()
                             .setSampling(32, true)
                             .build();
 

File: extensions/tablesaw/src/main/java/ai/djl/tablesaw/TablesawDataset.java
Patch:
@@ -104,7 +104,6 @@ public T setReadOptions(ReadOptions readOptions) {
          * @return the new {@link TablesawDataset}
          */
         public TablesawDataset build() {
-            validate();
             return new TablesawDataset(this);
         }
     }

File: api/src/main/java/ai/djl/modality/cv/output/CategoryMask.java
Patch:
@@ -23,7 +23,6 @@
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 
-import java.awt.Color;
 import java.lang.reflect.Type;
 import java.nio.ByteBuffer;
 import java.nio.charset.StandardCharsets;
@@ -37,6 +36,8 @@ public class CategoryMask implements JsonSerializable {
 
     private static final long serialVersionUID = 1L;
 
+    private static final int COLOR_BLACK = 0xFF000000;
+
     private static final Gson GSON =
             JsonUtils.builder()
                     .registerTypeAdapter(CategoryMask.class, new SegmentationSerializer())
@@ -134,7 +135,7 @@ public Image getBackgroundImage(Image image) {
      *     completely opaque.
      */
     public void drawMask(Image image, int transparency) {
-        drawMask(image, transparency, Color.BLACK.getRGB());
+        drawMask(image, transparency, COLOR_BLACK);
     }
 
     /**

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -134,7 +134,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                         .optUsage(usage)
                         .optLimit(arguments.getLimit())
                         .optPipeline(pipeline)
-                        .setSampling(arguments.getBatchSize(), true)
+                        .setSampling(1, true)
                         .build();
         pikachuDetection.prepare(new ProgressBar());
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/tabular/package-info.java
Patch:
@@ -12,7 +12,7 @@
  */
 
 /**
- * Contains classes for the computer vision section ({@link ai.djl.Application.Tabular}) of the
- * {@link ai.djl.basicmodelzoo.BasicModelZoo}.
+ * Contains classes for the tabular section ({@link ai.djl.Application.Tabular}) of the {@link
+ * ai.djl.basicmodelzoo.BasicModelZoo}.
  */
 package ai.djl.basicmodelzoo.tabular;

File: api/src/main/java/ai/djl/nn/Parameter.java
Patch:
@@ -120,7 +120,8 @@ public void setShape(Shape shape) {
      */
     public NDArray getArray() {
         if (!isInitialized()) {
-            throw new IllegalStateException("The array has not been initialized");
+            throw new UninitializedParameterException(
+                    "The array for parameter \"" + getName() + "\" has not been initialized");
         }
         return array;
     }

File: examples/src/main/java/ai/djl/examples/inference/ObjectDetectionWithTensorflowSavedModel.java
Patch:
@@ -88,7 +88,7 @@ public static DetectedObjects predict() throws IOException, ModelException, Tran
                         .setTypes(Image.class, DetectedObjects.class)
                         .optModelUrls(modelUrl)
                         // saved_model.pb file is in the subfolder of the model archive file
-                        .optModelName("ssd_mobilenet_v2_320x320_coco17_tpu-8/saved_model")
+                        .optModelName("saved_model")
                         .optTranslator(new MyTranslator())
                         .optEngine("TensorFlow")
                         .optProgress(new ProgressBar())

File: api/src/main/java/ai/djl/nn/core/SparseMax.java
Patch:
@@ -10,7 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-
 package ai.djl.nn.core;
 
 import ai.djl.ndarray.NDArray;
@@ -66,7 +65,7 @@ public SparseMax(int axis, int topK) {
     @Override
     public Shape[] getOutputShapes(Shape[] inputShapes) {
         // the shape of input and output are the same
-        return new Shape[0];
+        return new Shape[] {inputShapes[0]};
     }
 
     /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/LibUtils.java
Patch:
@@ -253,6 +253,7 @@ private static Path findJniLibrary(LibTorch libTorch) {
         String libPath = "jnilib/" + classifier + '/' + flavor + '/' + JNI_LIB_NAME;
         logger.info("Extracting {} to cache ...", libPath);
         try (InputStream is = ClassLoaderUtils.getResourceAsStream(libPath)) {
+            Files.createDirectories(dir);
             tmp = Files.createTempFile(dir, "jni", "tmp");
             Files.copy(is, tmp, StandardCopyOption.REPLACE_EXISTING);
             Utils.moveQuietly(tmp, path);

File: api/src/main/java/ai/djl/modality/cv/translator/BigGANTranslator.java
Patch:
@@ -40,15 +40,13 @@ public BigGANTranslator(float truncation) {
     /** {@inheritDoc} */
     @Override
     public Image[] processOutput(TranslatorContext ctx, NDList list) {
-        NDArray output = list.get(0).addi(1).muli(128).clip(0, 255);
-
+        NDArray output = list.get(0).duplicate().addi(1).muli(128).clip(0, 255);
         int sampleSize = (int) output.getShape().get(0);
         Image[] images = new Image[sampleSize];
 
         for (int i = 0; i < sampleSize; ++i) {
             images[i] = ImageFactory.getInstance().fromNDArray(output.get(i));
         }
-
         return images;
     }
 

File: api/src/main/java/ai/djl/modality/cv/translator/StyleTransferTranslator.java
Patch:
@@ -34,7 +34,7 @@ public NDList processInput(TranslatorContext ctx, Image input) {
     /** {@inheritDoc} */
     @Override
     public Image processOutput(TranslatorContext ctx, NDList list) {
-        NDArray output = list.get(0).addi(1).muli(128);
+        NDArray output = list.get(0).duplicate().addi(1).muli(128);
         return ImageFactory.getInstance().fromNDArray(output.squeeze());
     }
 

File: examples/src/main/java/ai/djl/examples/inference/StyleTransfer.java
Patch:
@@ -52,7 +52,9 @@ public static void main(String[] args) throws IOException, ModelException, Trans
         Image input = ImageFactory.getInstance().fromFile(Paths.get(imagePath));
         Image output = transfer(input, artist);
 
-        logger.info("Using PyTorch Engine. " + artist + " painting generated.");
+        logger.info(
+                "Using PyTorch Engine. {} painting generated. Image saved in build/output/cyclegan",
+                artist);
         save(output, artist.toString(), "build/output/cyclegan/");
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/utils/DynamicBuffer.java
Patch:
@@ -33,13 +33,13 @@ public DynamicBuffer() {
      */
     public DynamicBuffer put(float f) {
         ++length;
+        buffer.put(f);
         if (buffer.capacity() == length) {
             FloatBuffer buf = buffer;
             buf.rewind();
             buffer = FloatBuffer.allocate(length * 2);
             buffer.put(buf);
         }
-        buffer.put(f);
         return this;
     }
 

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -400,9 +400,9 @@ default Number[] toArray() {
     /**
      * Sets this {@code NDArray} value from {@link Buffer}.
      *
-     * @param data the input buffered data
+     * @param buffer the input buffered data
      */
-    void set(Buffer data);
+    void set(Buffer buffer);
 
     /**
      * Sets this {@code NDArray} value from an array of floats.

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -211,8 +211,8 @@ public NDArray get(NDIndex index) {
 
     /** {@inheritDoc} */
     @Override
-    public void set(Buffer data) {
-        NDArray array = manager.create(data, getShape(), getDataType());
+    public void set(Buffer buffer) {
+        NDArray array = manager.create(buffer, getShape(), getDataType());
         intern(array);
         array.detach();
     }

File: engines/dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDManager.java
Patch:
@@ -81,7 +81,7 @@ public NDArray create(Buffer data, Shape shape, DataType dataType) {
             throw new UnsupportedOperationException("DlrNDArray only supports float32.");
         }
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data instanceof ByteBuffer) {
             return new DlrNDArray(this, alternativeManager, (ByteBuffer) data, shape, dataType);
         }

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -73,7 +73,7 @@ public OrtNDArray create(Buffer data, Shape shape, DataType dataType) {
                     "Use NDManager.create(String[], Shape) to create String NDArray.");
         }
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         OnnxTensor tensor = OrtUtils.toTensor(env, data, shape, dataType);
         return new OrtNDArray(this, alternativeManager, tensor);
     }

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -91,7 +91,7 @@ public PpNDArray createInternal(ByteBuffer data, long handle) {
     @Override
     public PpNDArray create(Buffer data, Shape shape, DataType dataType) {
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data.isDirect() && data instanceof ByteBuffer) {
             return JniUtils.createNdArray(this, (ByteBuffer) data, shape, dataType);
         }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -66,7 +66,7 @@ public PtNDArray create(Shape shape, DataType dataType) {
     @Override
     public PtNDArray create(Buffer data, Shape shape, DataType dataType) {
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data.isDirect() && data instanceof ByteBuffer) {
             return JniUtils.createNdFromByteBuffer(
                     this, (ByteBuffer) data, shape, dataType, SparseFormat.DENSE, device);

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -85,7 +85,7 @@ public TfNDArray create(Buffer data, Shape shape, DataType dataType) {
                     "Use NDManager.create(String[], Charset, Shape) to create String NDArray.");
         }
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data.isDirect() && data instanceof ByteBuffer) {
             TFE_TensorHandle handle =
                     JavacppUtils.createTFETensorFromByteBuffer(

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtNDArray.java
Patch:
@@ -62,9 +62,9 @@ public ByteBuffer toByteBuffer() {
 
     /** {@inheritDoc} */
     @Override
-    public void set(Buffer data) {
+    public void set(Buffer buffer) {
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
-        BaseNDManager.copyBuffer(data, this.data);
+        BaseNDManager.validateBuffer(buffer, dataType, size);
+        BaseNDManager.copyBuffer(buffer, data);
     }
 }

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtNDManager.java
Patch:
@@ -72,7 +72,7 @@ public TrtNDManager newSubManager(Device dev) {
     @Override
     public TrtNDArray create(Buffer data, Shape shape, DataType dataType) {
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data.isDirect() && data instanceof ByteBuffer) {
             return new TrtNDArray(this, alternativeManager, (ByteBuffer) data, shape, dataType);
         }

File: engines/tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDManager.java
Patch:
@@ -63,7 +63,7 @@ TfLiteNDArray createInternal(Tensor tensor) {
     @Override
     public TfLiteNDArray create(Buffer data, Shape shape, DataType dataType) {
         int size = Math.toIntExact(shape.size());
-        BaseNDManager.validateBufferSize(data, dataType, size);
+        BaseNDManager.validateBuffer(data, dataType, size);
         if (data.isDirect() && data instanceof ByteBuffer) {
             return new TfLiteNDArray(this, alternativeManager, (ByteBuffer) data, shape, dataType);
         }

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxDeviceType.java
Patch:
@@ -13,10 +13,9 @@
 package ai.djl.mxnet.engine;
 
 import ai.djl.Device;
-import ai.djl.DeviceType;
 
 /** DeviceType is the MXNet equivalent of the types in {@link Device}. */
-public final class MxDeviceType implements DeviceType {
+public final class MxDeviceType {
 
     private static final String CPU_PINNED = "cpu_pinned";
 
@@ -38,7 +37,7 @@ public static int toDeviceType(Device device) {
         } else if (CPU_PINNED.equals(deviceType)) {
             return 3;
         } else {
-            throw new IllegalArgumentException("Unsupported device: " + device.toString());
+            throw new IllegalArgumentException("Unsupported device: " + device);
         }
     }
 

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtDeviceType.java
Patch:
@@ -13,10 +13,9 @@
 package ai.djl.pytorch.engine;
 
 import ai.djl.Device;
-import ai.djl.DeviceType;
 
 /** DeviceType is the PyTorch equivalent of the types in {@link Device}. */
-public final class PtDeviceType implements DeviceType {
+public final class PtDeviceType {
 
     private PtDeviceType() {}
 

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/translator/QuestionAnsweringTranslator.java
Patch:
@@ -73,8 +73,8 @@ public String processOutput(TranslatorContext ctx, NDList list) {
         NDArray endLogits = list.get(1).duplicate();
 
         // exclude <CLS>, TODO: exclude impossible ids properly and handle max answer length
-        startLogits.set(new NDIndex(0), 0);
-        endLogits.set(new NDIndex(0), 0);
+        startLogits.set(new NDIndex(0), -100000);
+        endLogits.set(new NDIndex(0), -100000);
         int startIdx = (int) startLogits.argMax().getLong();
         int endIdx = (int) endLogits.argMax().getLong();
         if (startIdx > endIdx) {

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/javacpp/LibUtils.java
Patch:
@@ -188,6 +188,7 @@ private static String downloadTensorFlow(Platform platform) {
                             cudaArch);
                     return path.toAbsolutePath().toString();
                 }
+                flavor = cpuFlavor;
                 found = downloadFiles(lines, link, os, flavor, tmp);
             }
 

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngine.java
Patch:
@@ -78,7 +78,7 @@ public int getRank() {
     /** {@inheritDoc} */
     @Override
     public String getVersion() {
-        return "1.11.0";
+        return "1.12.1";
     }
 
     /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -111,7 +111,7 @@ public void load(Path modelPath, String prefix, Map<String, ?> options)
                             "Parameter file not found in: "
                                     + modelDir
                                     + ". If you only specified model path, make sure path name"
-                                    + " matchyour saved model file name.");
+                                    + " match your saved model file name.");
                 }
                 readParameters(paramFile, options);
             }

File: examples/src/main/java/ai/djl/examples/training/TrainBertOnGoemotions.java
Patch:
@@ -39,6 +39,7 @@
 import ai.djl.training.tracker.WarmUpTracker;
 import ai.djl.training.util.ProgressBar;
 import ai.djl.translate.TranslateException;
+
 import java.io.IOException;
 
 /** Example that performs Bert pretraining on the GoEmotions dataset. */

File: examples/src/test/java/ai/djl/examples/training/TrainBertOnGoemotionsTest.java
Patch:
@@ -14,9 +14,11 @@
 
 import ai.djl.testing.TestRequirements;
 import ai.djl.translate.TranslateException;
-import java.io.IOException;
+
 import org.testng.annotations.Test;
 
+import java.io.IOException;
+
 public class TrainBertOnGoemotionsTest {
 
     @Test

File: integration/src/test/java/ai/djl/integration/IntegrationTests.java
Patch:
@@ -37,7 +37,7 @@ public void runIntegrationTests() {
             } else if ("aarch64".equals(System.getProperty("os.arch"))) {
                 engines = new String[] {"PyTorch"};
             } else {
-                engines = new String[] {"MXNet", "PyTorch", "TensorFlow", "XGBoost"};
+                engines = new String[] {"MXNet", "PyTorch", "TensorFlow", "XGBoost", "LightGBM"};
             }
         } else {
             engines = new String[] {defaultEngine};

File: extensions/hadoop/src/test/java/ai/djl/hadoop/hdfs/HdfsRepositoryTest.java
Patch:
@@ -126,7 +126,8 @@ public void testAccessDeny() throws IOException {
 
     private void setFilePermission(Configuration config) {
         try {
-            Process process = Runtime.getRuntime().exec("/bin/sh -c umask");
+            String[] cmd = {"/bin/sh", "-c", "umask"};
+            Process process = Runtime.getRuntime().exec(cmd);
             int rc = process.waitFor();
             if (rc != 0) {
                 return;

File: extensions/tokenizers/src/test/java/ai/djl/huggingface/tokenizers/TranslatorTest.java
Patch:
@@ -60,7 +60,9 @@ public void testQATranslator() throws ModelException, IOException, TranslateExce
                             NDManager manager = a.getManager();
                             long[][] start = new long[1][36];
                             long[][] end = new long[1][36];
+                            start[0][0] = 2;
                             start[0][20] = 1;
+                            end[0][0] = 2;
                             end[0][21] = 1;
                             NDArray arr1 = manager.create(start);
                             NDArray arr2 = manager.create(end);

File: api/src/main/java/ai/djl/ndarray/index/NDIndex.java
Patch:
@@ -76,7 +76,7 @@ public NDIndex() {
      *     assertEquals(a.get(new NDIndex("2")).getShape(), new Shape(4, 3));
      *
      *     // Gets a subsection of the NDArray indexing from the end (-i == length - i).
-     *     assertEquals(a.get(new NDIndex("-1")).getShape(), new Shape(4, 3));
+     *     assertEquals(a.get(new NDIndex("-2")).getShape(), new Shape(4, 3));
      *
      *     // Gets everything in the first axis and a subsection in the second axis.
      *     // You can use either : or * to represent everything

File: android/core/src/androidTest/java/ai/djl/android/core/ModelLoadingTest.java
Patch:
@@ -49,7 +49,7 @@ public void testModelLoading() throws IOException, ModelException, TranslateExce
         try (ZooModel<Image, Classifications> model = ModelZoo.loadModel(criteria);
              Predictor<Image, Classifications> predictor = model.newPredictor()) {
             Classifications result = predictor.predict(image);
-            Assert.assertEquals("dog", result.best().getClassName());
+            Assert.assertEquals("matches", result.best().getClassName());
         }
     }
 }

File: api/src/main/java/ai/djl/modality/nlp/bert/BertFullTokenizer.java
Patch:
@@ -76,7 +76,7 @@ public List<String> tokenize(String input) {
 
     /** {@inheritDoc} */
     @Override
-    public String tokenToString(List<String> tokens) {
+    public String buildSentence(List<String> tokens) {
         return String.join(" ", tokens).replace(" ##", "").trim();
     }
 

File: engines/mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/qa/MxBertQATranslator.java
Patch:
@@ -113,7 +113,7 @@ public String processOutput(TranslatorContext ctx, NDList list) {
         NDArray endLogits = output.get(1).reshape(new Shape(1, -1));
         int startIdx = (int) startLogits.argMax(1).getLong();
         int endIdx = (int) endLogits.argMax(1).getLong();
-        return tokenizer.tokenToString(tokens.subList(startIdx, endIdx + 1));
+        return tokenizer.buildSentence(tokens.subList(startIdx, endIdx + 1));
     }
 
     /**

File: engines/pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/nlp/qa/PtBertQATranslator.java
Patch:
@@ -93,7 +93,7 @@ public String processOutput(TranslatorContext ctx, NDList list) {
         if (startIdx >= endIdx) {
             return "";
         }
-        return tokenizer.tokenToString(tokens.subList(startIdx, endIdx + 1));
+        return tokenizer.buildSentence(tokens.subList(startIdx, endIdx + 1));
     }
 
     /**

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -1534,6 +1534,8 @@ public static PtSymbolBlock loadModule(
             String[] extraFileKeys,
             String[] extraFileValues) {
         Device device = manager.getDevice();
+        logger.debug("mapLocation: {}", mapLocation);
+        logger.debug("extraFileKeys: {}", Arrays.toString(extraFileKeys));
         long handle =
                 PyTorchLibrary.LIB.moduleLoad(
                         path.toString(),

File: api/src/main/java/ai/djl/ndarray/index/NDIndex.java
Patch:
@@ -21,7 +21,6 @@
 import ai.djl.ndarray.index.dim.NDIndexPick;
 import ai.djl.ndarray.index.dim.NDIndexSlice;
 import ai.djl.ndarray.index.dim.NDIndexTake;
-import ai.djl.ndarray.types.DataType;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -370,10 +369,11 @@ private int addIndexItem(String indexItem, int argIndex, Object[] args) {
                     return argIndex + 1;
                 } else if (arg instanceof NDArray) {
                     NDArray array = (NDArray) arg;
-                    if (array.getDataType() == DataType.BOOLEAN) {
+                    if (array.getDataType().isBoolean()) {
                         indices.add(new NDIndexBooleans(array));
                         return argIndex + 1;
-                    } else if (array.getDataType().isInteger()) {
+                    } else if (array.getDataType().isInteger()
+                            || array.getDataType().isFloating()) {
                         indices.add(new NDIndexTake(array));
                         return argIndex + 1;
                     }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -200,6 +200,8 @@ native void torchIndexPut(
 
     native long torchTake(long handle, long index);
 
+    native long torchPut(long handle, long index, long data);
+
     native long torchMaskedSelect(long handle, long maskHandle);
 
     native void torchMaskedPut(long handle, long valueHandle, long maskHandle);

File: api/src/main/java/ai/djl/ndarray/NDManager.java
Patch:
@@ -165,7 +165,7 @@ static NDManager subManagerOf(NDResource resource) {
     ByteBuffer allocateDirect(int capacity);
 
     /**
-     * Creates a new {@code NDArray} if the input {@link NDArray} is from external engine.
+     * Creates a new {@code NDArray} if the input {@link NDArray} is from an external engine.
      *
      * @param array the input {@code NDArray}
      * @return a new {@code NDArray} if the input {@code NDArray} is from external engine

File: api/src/main/java/ai/djl/ndarray/index/full/NDIndexFullPick.java
Patch:
@@ -53,7 +53,7 @@ public static Optional<NDIndexFullPick> fromIndex(NDIndex index, Shape target) {
                 axis++;
             } else if (el instanceof NDIndexPick) {
                 if (fullPick == null) {
-                    fullPick = new NDIndexFullPick(((NDIndexPick) el).getIndices(), axis);
+                    fullPick = new NDIndexFullPick(((NDIndexPick) el).getIndex(), axis);
                 } else {
                     // Don't support multiple picks
                     throw new UnsupportedOperationException(

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfEngine.java
Patch:
@@ -63,7 +63,7 @@ static TfEngine newInstance() {
             TensorFlow.version();
             return new TfEngine();
         } catch (Throwable t) {
-            if (t.getMessage().contains("libstdc++")) {
+            if (t.getMessage() != null && t.getMessage().contains("libstdc++")) {
                 // Does not mention .so to work with osx .dylib
                 String msg =
                         "There was an issue with your libstdc++ file required for the Tensorflow"

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/AirfoilRandomAccess.java
Patch:
@@ -14,7 +14,7 @@
 
 import ai.djl.Application.Tabular;
 import ai.djl.basicdataset.BasicDatasets;
-import ai.djl.basicdataset.utils.Feature;
+import ai.djl.basicdataset.tabular.utils.Feature;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/utils/DynamicBuffer.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.basicdataset.utils;
+package ai.djl.basicdataset.tabular.utils;
 
 import java.nio.FloatBuffer;
 

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/utils/Feature.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.basicdataset.utils;
+package ai.djl.basicdataset.tabular.utils;
 
 import java.util.Map;
 

File: basicdataset/src/main/java/ai/djl/basicdataset/tabular/utils/Featurizer.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.basicdataset.utils;
+package ai.djl.basicdataset.tabular.utils;
 
 /** An interface that convert String to numeric data. */
 public interface Featurizer {

File: basicdataset/src/test/java/ai/djl/basicdataset/AmazonReviewsTest.java
Patch:
@@ -35,8 +35,9 @@ public void testAmazonReviews() throws IOException, TranslateException {
             dataset.prepare();
 
             Record record = dataset.get(manager, 0);
-            Assert.assertEquals(record.getData().get(0).getFloat(), 0);
-            Assert.assertEquals(record.getLabels().get(0).getFloat(), 4.0);
+            Assert.assertEquals(
+                    record.getData().singletonOrThrow().toFloatArray(), new float[] {1});
+            Assert.assertEquals(record.getLabels().singletonOrThrow().getFloat(), 4.0);
         }
     }
 }

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainAmazonReviewRanking.java
Patch:
@@ -16,9 +16,9 @@
 import ai.djl.Model;
 import ai.djl.ModelException;
 import ai.djl.basicdataset.tabular.CsvDataset;
-import ai.djl.basicdataset.utils.DynamicBuffer;
-import ai.djl.basicdataset.utils.Feature;
-import ai.djl.basicdataset.utils.Featurizer;
+import ai.djl.basicdataset.tabular.utils.DynamicBuffer;
+import ai.djl.basicdataset.tabular.utils.Feature;
+import ai.djl.basicdataset.tabular.utils.Featurizer;
 import ai.djl.engine.Engine;
 import ai.djl.examples.training.util.Arguments;
 import ai.djl.inference.Predictor;

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -80,8 +80,8 @@ public void attach(NDManager manager) {
     /** {@inheritDoc} */
     @Override
     public void tempAttach(NDManager manager) {
-        detach();
         NDManager original = this.manager;
+        detach();
         this.manager = manager;
         manager.tempAttachInternal(original, getUid(), this);
     }

File: api/src/main/java/ai/djl/ndarray/internal/NDArrayEx.java
Patch:
@@ -486,9 +486,10 @@ default NDArray crop(int x, int y, int width, int height) {
     /**
      * Returns an {@link NDArrayIndexer}.
      *
+     * @param manager the manager used to create the arrays
      * @return an {@link NDArrayIndexer}
      */
-    NDArrayIndexer getIndexer();
+    NDArrayIndexer getIndexer(NDManager manager);
 
     /**
      * Returns elements chosen from the {@code NDArray} or the other {@code NDArray} depending on

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -984,8 +984,8 @@ public NDArray randomColorJitter(
 
     /** {@inheritDoc} */
     @Override
-    public NDArrayIndexer getIndexer() {
-        return new MxNDArrayIndexer(array.getManager());
+    public NDArrayIndexer getIndexer(NDManager manager) {
+        return new MxNDArrayIndexer((MxNDManager) manager);
     }
 
     ////////////////////////////////////////

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -235,8 +235,8 @@ public void set(Buffer data) {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray get(long... indices) {
-        return JniUtils.getItem(this, indices);
+    public NDArray get(NDManager manager, long... indices) {
+        return JniUtils.getItem(this, indices, (PtNDManager) manager);
     }
 
     /** {@inheritDoc} */
@@ -274,8 +274,8 @@ public void attach(NDManager manager) {
     /** {@inheritDoc} */
     @Override
     public void tempAttach(NDManager manager) {
-        detach();
         NDManager original = this.manager;
+        detach();
         this.manager = (PtNDManager) manager;
         manager.tempAttachInternal(original, getUid(), this);
     }

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArrayEx.java
Patch:
@@ -624,8 +624,8 @@ public NDArray randomColorJitter(
 
     /** {@inheritDoc} */
     @Override
-    public NDArrayIndexer getIndexer() {
-        return new PtNDArrayIndexer(array.getManager());
+    public NDArrayIndexer getIndexer(NDManager manager) {
+        return new PtNDArrayIndexer((PtNDManager) manager);
     }
 
     /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArrayIndexer.java
Patch:
@@ -43,7 +43,7 @@ public NDArray get(NDArray array, NDIndexFullSlice fullSlice) {
         long[] min = fullSlice.getMin();
         long[] max = fullSlice.getMax();
         long[] step = fullSlice.getStep();
-        try (PtNDArray res = JniUtils.index(manager.from(array), min, max, step)) {
+        try (PtNDArray res = JniUtils.index(manager.from(array), min, max, step, manager)) {
             return res.squeeze(fullSlice.getToSqueeze());
         }
     }

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -229,8 +229,8 @@ public void attach(NDManager manager) {
     /** {@inheritDoc} */
     @Override
     public void tempAttach(NDManager manager) {
-        detach();
         NDManager original = this.manager;
+        detach();
         this.manager = (TfNDManager) manager;
         manager.tempAttachInternal(original, getUid(), this);
     }

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArrayEx.java
Patch:
@@ -15,6 +15,7 @@
 
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
+import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.NDUtils;
 import ai.djl.ndarray.index.NDArrayIndexer;
 import ai.djl.ndarray.internal.NDArrayEx;
@@ -555,8 +556,8 @@ public NDArray randomColorJitter(
 
     /** {@inheritDoc} */
     @Override
-    public NDArrayIndexer getIndexer() {
-        return new TfNDArrayIndexer(array.getManager());
+    public NDArrayIndexer getIndexer(NDManager manager) {
+        return new TfNDArrayIndexer((TfNDManager) manager);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -561,7 +561,8 @@ default NDArray get(long... indices) {
     NDArray gather(NDArray index, int axis);
 
     /**
-     * Returns a partial {@code NDArray} pointed by the indexed array, according to linear indexing.
+     * Returns a partial {@code NDArray} pointed by the indexed array according to linear indexing,
+     * and the of output is of the same shape as index.
      *
      * @param index picks the elements of an NDArray to the same position as index
      * @return the partial {@code NDArray} of the same shape as index

File: api/src/main/java/ai/djl/ndarray/index/NDArrayIndexer.java
Patch:
@@ -59,7 +59,7 @@ public NDArray get(NDArray array, NDIndex index) {
         if (!indices.isEmpty() && indices.get(0) instanceof NDIndexBooleans) {
             if (indices.size() != 1) {
                 throw new IllegalArgumentException(
-                        "get() currently didn't support more that one boolean NDArray");
+                        "get() currently doesn't support more that one boolean NDArray");
             }
             return array.booleanMask(((NDIndexBooleans) indices.get(0)).getIndex());
         }

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -315,7 +315,9 @@ public NDArray gather(NDArray index, int axis) {
     /** {@inheritDoc} */
     @Override
     public NDArray take(NDArray index) {
-        throw new UnsupportedOperationException("Not implemented yet.");
+        MxOpParams params = new MxOpParams();
+        params.add("mode", "wrap");
+        return manager.invoke("take", new NDList(this.flatten(), index), params).singletonOrThrow();
     }
 
     /** {@inheritDoc} */

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -301,7 +301,7 @@ public PtNDArray booleanMask(NDArray index, int axis) {
             // Result is flattened since shape is undetermined
             return JniUtils.booleanMask(this, manager.from(index));
         } else if (indexShape.equals(getShape().slice(axis))) {
-            // index will be broadcasted by default
+            // index will be broadcast by default
             try (PtNDArray flattedResult = JniUtils.booleanMask(this, manager.from(index))) {
                 // Shape recovery
                 Shape remainder = getShape().slice(0, axis);

File: api/src/main/java/ai/djl/modality/cv/output/Rectangle.java
Patch:
@@ -89,7 +89,7 @@ public double getIoU(BoundingBox box) {
         Rectangle rec = (Rectangle) box;
         // caculate intesection lrtb
         double left = Math.max(getX(), rec.getX());
-        double top = Math.min(getY(), rec.getY());
+        double top = Math.max(getY(), rec.getY());
         double right = Math.min(getX() + getWidth(), rec.getX() + rec.getWidth());
         double bottom = Math.min(getY() + getHeight(), rec.getY() + rec.getHeight());
         double intersection = (right - left) * (bottom - top);

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -4683,7 +4683,7 @@ default NDArray oneHot(int depth) {
      *     href=https://d2l.djl.ai/chapter_linear-networks/softmax-regression.html#classification-problems>Classification-problems</a>
      */
     default NDArray oneHot(int depth, DataType dataType) {
-        return oneHot(depth, 0f, 1f, dataType);
+        return oneHot(depth, 1f, 0f, dataType);
     }
 
     /**

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -906,6 +906,7 @@ public void testOneHot() {
                     manager.create(
                             new float[][] {{0f, 1f, 0f}, {1f, 0f, 0f}, {0f, 0f, 1f}, {1f, 0f, 0f}});
             Assert.assertEquals(array.oneHot(3), expected);
+            Assert.assertEquals(array.oneHot(3, DataType.FLOAT32), expected);
             // test with all parameters
             array = manager.create(new int[] {1, 0, 2, 0});
             expected = manager.create(new int[][] {{1, 8, 1}, {8, 1, 1}, {1, 1, 8}, {8, 1, 1}});

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/jni/LibUtils.java
Patch:
@@ -62,7 +62,7 @@ private static String copyJniLibraryFromClasspath() {
             return path.toAbsolutePath().toString();
         }
         Path tmp = null;
-        String libPath = "/jnilib/" + classifier + "/" + name;
+        String libPath = "native/lib/" + classifier + "/" + name;
         logger.info("Extracting {} to cache ...", libPath);
         try (InputStream is = ClassLoaderUtils.getResourceAsStream(libPath)) {
             Files.createDirectories(dir);

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -198,6 +198,8 @@ native void torchIndexPut(
 
     native long torchGather(long handle, long index, long dim, boolean sparseGrad);
 
+    native long torchTake(long handle, long index);
+
     native long torchMaskedSelect(long handle, long maskHandle);
 
     native void torchMaskedPut(long handle, long valueHandle, long maskHandle);

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/javacpp/JavacppUtils.java
Patch:
@@ -425,7 +425,9 @@ public static TFE_TensorHandle toDevice(
                     tensorflow.TFE_TensorHandleCopyToDevice(
                             handle, eagerSessionHandle, deviceName, status);
             status.throwExceptionIfNotOK();
-            return newHandle;
+            // C API does not have deallocator by default
+            newHandle.withDeallocator();
+            return newHandle.retainReference();
         }
     }
 

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/javacpp/LibUtils.java
Patch:
@@ -175,8 +175,8 @@ private static String downloadTensorFlow(Platform platform) {
             boolean found = downloadFiles(lines, link, os, flavor, tmp);
             if (!found && cudaArch != null) {
                 // fallback to cpu
-                flavor = "cpu";
-                dir = cacheDir.resolve(version + '-' + flavor + '-' + classifier);
+                String cpuFlavor = "cpu";
+                dir = cacheDir.resolve(version + '-' + cpuFlavor + '-' + classifier);
                 path = dir.resolve(libName);
                 if (Files.exists(path)) {
                     logger.warn(

File: api/src/main/java/ai/djl/modality/cv/output/DetectedObjects.java
Patch:
@@ -30,6 +30,7 @@ public class DetectedObjects extends Classifications {
                     .registerTypeAdapter(DetectedObjects.class, new ClassificationsSerializer())
                     .create();
 
+    @SuppressWarnings("serial")
     private List<BoundingBox> boundingBoxes;
 
     /**

File: api/src/main/java/ai/djl/modality/cv/output/Joints.java
Patch:
@@ -23,6 +23,8 @@
 public class Joints implements Serializable {
 
     private static final long serialVersionUID = 1L;
+
+    @SuppressWarnings("serial")
     private List<Joint> joints;
 
     /**

File: api/src/main/java/ai/djl/modality/cv/output/Landmark.java
Patch:
@@ -19,6 +19,7 @@ public class Landmark extends Rectangle {
 
     private static final long serialVersionUID = 1L;
 
+    @SuppressWarnings("serial")
     private List<Point> points;
 
     /**

File: api/src/main/java/ai/djl/modality/cv/output/Rectangle.java
Patch:
@@ -28,6 +28,7 @@ public class Rectangle implements BoundingBox {
 
     private static final long serialVersionUID = 1L;
 
+    @SuppressWarnings("serial")
     private List<Point> corners;
 
     private double width;

File: basicdataset/src/test/java/ai/djl/basicdataset/StanfordQuestionAnsweringDatasetTest.java
Patch:
@@ -122,13 +122,12 @@ public void testMisc() throws TranslateException, IOException {
                                                     TestUtils.getTextEmbedding(
                                                             manager, EMBEDDING_SIZE)))
                             .setSampling(32, true)
-                            .optLimit(350)
                             .optUsage(Dataset.Usage.TEST)
                             .build();
 
             stanfordQuestionAnsweringDataset.prepare();
             stanfordQuestionAnsweringDataset.prepare();
-            Assert.assertEquals(stanfordQuestionAnsweringDataset.size(), 350);
+            Assert.assertEquals(stanfordQuestionAnsweringDataset.size(), 11873);
 
             Record record0 = stanfordQuestionAnsweringDataset.get(manager, 0);
             Record record6 = stanfordQuestionAnsweringDataset.get(manager, 6);

File: extensions/tokenizers/src/main/java/ai/djl/huggingface/tokenizers/jni/TokenizersLibrary.java
Patch:
@@ -45,4 +45,6 @@ private TokenizersLibrary() {}
     public native long[] getAttentionMask(long encoding);
 
     public native long[] getSpecialTokenMask(long encoding);
+
+    public native CharSpan[] getTokenCharSpans(long encoding);
 }

File: examples/src/main/java/ai/djl/examples/inference/ImageClassification.java
Patch:
@@ -68,6 +68,7 @@ public static Classifications predict() throws IOException, ModelException, Tran
                     ImageClassificationTranslator.builder()
                             .addTransform(new ToTensor())
                             .optSynset(classes)
+                            .optApplySoftmax(true)
                             .build();
 
             try (Predictor<Image, Classifications> predictor = model.newPredictor(translator)) {

File: engines/ml/xgboost/src/test/java/ai/djl/ml/xgboost/XgbModelTest.java
Patch:
@@ -68,6 +68,7 @@ public void testNDArray() {
 
         try (XgbNDManager manager =
                 (XgbNDManager) XgbNDManager.getSystemManager().newSubManager()) {
+            manager.setMissingValue(Float.NaN);
             NDArray zeros = manager.zeros(new Shape(1, 2));
             Assert.expectThrows(UnsupportedOperationException.class, zeros::toFloatArray);
 

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -187,7 +187,8 @@ protected Model createModel(
         Model model = Model.newInstance(name, device, engine);
         if (block == null) {
             String className = (String) arguments.get("blockFactory");
-            BlockFactory factory = ClassLoaderUtils.findImplementation(modelPath, className);
+            BlockFactory factory =
+                    ClassLoaderUtils.findImplementation(modelPath, BlockFactory.class, className);
             if (factory != null) {
                 block = factory.newBlock(model, modelPath, arguments);
             }
@@ -229,7 +230,7 @@ protected TranslatorFactory getTranslatorFactory(
         String factoryClass = (String) arguments.get("translatorFactory");
         if (factoryClass != null) {
             ClassLoader cl = ClassLoaderUtils.getContextClassLoader();
-            factory = ClassLoaderUtils.initClass(cl, factoryClass);
+            factory = ClassLoaderUtils.initClass(cl, TranslatorFactory.class, factoryClass);
         }
         return factory;
     }

File: basicdataset/src/test/java/ai/djl/basicdataset/ImageFolderTest.java
Patch:
@@ -29,7 +29,6 @@
 import ai.djl.training.dataset.Batch;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.loss.Loss;
-import ai.djl.translate.Pipeline;
 import ai.djl.translate.TranslateException;
 import java.io.IOException;
 import java.nio.file.Paths;
@@ -52,8 +51,8 @@ public void testImageFolder() throws IOException, TranslateException {
             ImageFolder dataset =
                     ImageFolder.builder()
                             .setRepository(repository)
-                            .optPipeline(
-                                    new Pipeline().add(new Resize(100, 100)).add(new ToTensor()))
+                            .addTransform(new Resize(100, 100))
+                            .addTransform(new ToTensor())
                             .setSampling(1, false)
                             .build();
 

File: extensions/fasttext/src/main/java/ai/djl/fasttext/zoo/nlp/textclassification/TextClassificationModelLoader.java
Patch:
@@ -24,6 +24,7 @@
 import ai.djl.repository.zoo.ModelNotFoundException;
 import ai.djl.repository.zoo.ZooModel;
 import ai.djl.util.Progress;
+import ai.djl.util.passthrough.PassthroughTranslator;
 import java.io.IOException;
 import java.nio.file.Path;
 
@@ -66,6 +67,6 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
         Model model = new FtModel(modelName);
         Path modelPath = mrl.getRepository().getResourceDirectory(artifact);
         model.load(modelPath, modelName, criteria.getOptions());
-        return new ZooModel<>(model, null);
+        return new ZooModel<>(model, new PassthroughTranslator<>());
     }
 }

File: api/src/main/java/ai/djl/repository/Repository.java
Patch:
@@ -30,7 +30,7 @@
  * Unlike in Maven, the data doesn't need to be located within the repository. Instead, the
  * repository only stores metadata including the URL and checksum of the actual data. When the
  * artifact is prepared, the data is downloaded, checked, and then stored in the {@code
- * ~/.djo-ai/cache} folder.
+ * ~/.djl.ai/cache} folder.
  *
  * <p>The artifacts are first divided into a number of {@link Metadata} files that can each have
  * multiple artifacts. The metadata files are identified by an {@link MRL} which contains:

File: engines/dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDManager.java
Patch:
@@ -29,11 +29,8 @@ public class DlrNDManager extends BaseNDManager {
 
     private static final DlrNDManager SYSTEM_MANAGER = new SystemManager();
 
-    private NDManager alternativeManager;
-
     private DlrNDManager(NDManager parent, Device device) {
         super(parent, device);
-        alternativeManager = getAlternativeManager();
     }
 
     static DlrNDManager getSystemManager() {

File: engines/ml/xgboost/src/main/java/ai/djl/ml/xgboost/XgbNDManager.java
Patch:
@@ -32,11 +32,8 @@ public class XgbNDManager extends BaseNDManager {
 
     private static final XgbNDManager SYSTEM_MANAGER = new SystemManager();
 
-    private NDManager alternativeManager;
-
     private XgbNDManager(NDManager parent, Device device) {
         super(parent, device);
-        alternativeManager = getAlternativeManager();
     }
 
     static XgbNDManager getSystemManager() {

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -34,12 +34,10 @@ public class OrtNDManager extends BaseNDManager {
     private static final OrtNDManager SYSTEM_MANAGER = new SystemManager();
 
     private OrtEnvironment env;
-    private NDManager alternativeManager;
 
     private OrtNDManager(NDManager parent, Device device, OrtEnvironment env) {
         super(parent, device);
         this.env = env;
-        alternativeManager = getAlternativeManager();
     }
 
     static OrtNDManager getSystemManager() {

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -29,11 +29,8 @@ public class PpNDManager extends BaseNDManager {
 
     private static final PpNDManager SYSTEM_MANAGER = new SystemManager();
 
-    private NDManager alternativeManager;
-
     private PpNDManager(NDManager parent, Device device) {
         super(parent, device);
-        alternativeManager = getAlternativeManager();
     }
 
     static PpNDManager getSystemManager() {

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtNDManager.java
Patch:
@@ -29,11 +29,8 @@ public class TrtNDManager extends BaseNDManager {
 
     private static final TrtNDManager SYSTEM_MANAGER = new SystemManager();
 
-    private NDManager alternativeManager;
-
     private TrtNDManager(NDManager parent, Device device) {
         super(parent, device);
-        alternativeManager = getAlternativeManager();
     }
 
     static TrtNDManager getSystemManager() {

File: engines/tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDManager.java
Patch:
@@ -29,11 +29,8 @@ public class TfLiteNDManager extends BaseNDManager {
 
     private static final TfLiteNDManager SYSTEM_MANAGER = new SystemManager();
 
-    private NDManager alternativeManager;
-
     private TfLiteNDManager(NDManager parent, Device device) {
         super(parent, device);
-        alternativeManager = getAlternativeManager();
     }
 
     static TfLiteNDManager getSystemManager() {

File: engines/onnxruntime/onnxruntime-engine/src/test/java/ai/djl/onnxruntime/engine/OrtTest.java
Patch:
@@ -48,6 +48,7 @@ public void testOrt() throws TranslateException, ModelException, IOException {
                             .optOption("executionMode", "SEQUENTIAL")
                             .optOption("optLevel", "NO_OPT")
                             .optOption("memoryPatternOptimization", "true")
+                            .optOption("cpuArenaAllocator", "true")
                             .build();
 
             IrisFlower virginica = new IrisFlower(1.0f, 2.0f, 3.0f, 4.0f);

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/LibUtils.java
Patch:
@@ -65,7 +65,7 @@ public static synchronized void loadLibrary() {
         // TODO workaround to make it work on Android Studio
         // It should search for several places to find the native library
         if ("http://www.android.com/".equals(System.getProperty("java.vendor.url"))) {
-            System.loadLibrary(JNI_LIB_NAME); // NOPMD
+            System.loadLibrary("djl_torch"); // NOPMD
             return;
         }
         libTorch = getLibTorch();

File: api/src/main/java/ai/djl/modality/cv/output/DetectedObjects.java
Patch:
@@ -45,6 +45,7 @@ public DetectedObjects(
             List<String> classNames, List<Double> probabilities, List<BoundingBox> boundingBoxes) {
         super(classNames, probabilities);
         this.boundingBoxes = boundingBoxes;
+        setTopK(Integer.MAX_VALUE);
     }
 
     /** {@inheritDoc} */

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayElementArithmeticOpTest.java
Patch:
@@ -55,7 +55,7 @@ private void testCornerCase(
             array1 = manager.create(new float[] {x1, x1});
             array2 = manager.create(x2);
             NDArray expected = manager.create(new float[] {y, y});
-            Assert.assertEquals(arrayArithmeticOp.apply(array1, array2), expected);
+            Assertions.assertAlmostEquals(arrayArithmeticOp.apply(array1, array2), expected);
 
             // test zero-dim with zero-dim
             array1 = manager.create(new Shape(4, 0, 1));
@@ -119,7 +119,7 @@ private void testReverseScalarCornerCase(
         float x2 = 3f;
         NDArray ndArray = manager.create(x1);
         NDArray result = arrayArithmeticOp.apply(x2, ndArray);
-        Assert.assertEquals(result.getFloat(), arithmeticOp.apply(x2, x1).floatValue());
+        Assertions.assertAlmostEquals(result.getFloat(), arithmeticOp.apply(x2, x1));
         if (inplace) {
             Assert.assertSame(ndArray, result);
         } else {

File: api/src/main/java/ai/djl/modality/nlp/embedding/TrainableWordEmbedding.java
Patch:
@@ -50,12 +50,12 @@ public TrainableWordEmbedding(Builder builder) {
      * @param embeddingSize the required embedding size
      */
     public TrainableWordEmbedding(Vocabulary vocabulary, int embeddingSize) {
-        super(
+        this(
                 builder()
+                        .setVocabulary(vocabulary)
                         .setEmbeddingSize(embeddingSize)
                         .optDefaultItem(DEFAULT_UNKNOWN_TOKEN)
                         .optUseDefault(false));
-        this.vocabulary = vocabulary;
     }
 
     /**

File: api/src/main/java/ai/djl/repository/RepositoryFactoryImpl.java
Patch:
@@ -154,6 +154,7 @@ public Repository newInstance(String name, URI uri) {
                 throw new IllegalArgumentException("Only archive file is supported for res URL.");
             }
 
+            fileName = FilenameUtils.getNamePart(fileName);
             return new JarRepository(name, uri, fileName);
         }
 

File: api/src/main/java/ai/djl/repository/RepositoryFactoryImpl.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.repository.zoo.ModelLoader;
 import ai.djl.repository.zoo.ModelZoo;
+import ai.djl.util.ClassLoaderUtils;
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URI;
@@ -137,7 +138,7 @@ public Repository newInstance(String name, URI uri) {
             if (p.startsWith("/")) {
                 p = p.substring(1);
             }
-            URL u = Thread.currentThread().getContextClassLoader().getResource(p);
+            URL u = ClassLoaderUtils.getContextClassLoader().getResource(p);
             if (u == null) {
                 throw new IllegalArgumentException("Resource not found: " + uri);
             }

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -228,7 +228,7 @@ protected TranslatorFactory getTranslatorFactory(
 
         String factoryClass = (String) arguments.get("translatorFactory");
         if (factoryClass != null) {
-            ClassLoader cl = Thread.currentThread().getContextClassLoader();
+            ClassLoader cl = ClassLoaderUtils.getContextClassLoader();
             factory = ClassLoaderUtils.initClass(cl, factoryClass);
         }
         return factory;

File: api/src/main/java/ai/djl/translate/ServingTranslatorFactory.java
Patch:
@@ -20,6 +20,7 @@
 import ai.djl.modality.cv.translator.ImageServingTranslator;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
+import ai.djl.util.ClassLoaderUtils;
 import ai.djl.util.Pair;
 import java.io.File;
 import java.io.IOException;
@@ -107,7 +108,7 @@ private ServingTranslator findTranslator(Path path, String className) {
                 urls.add(p.toUri().toURL());
             }
 
-            ClassLoader parentCl = Thread.currentThread().getContextClassLoader();
+            ClassLoader parentCl = ClassLoaderUtils.getContextClassLoader();
             ClassLoader cl = new URLClassLoader(urls.toArray(new URL[0]), parentCl);
             if (className != null && !className.isEmpty()) {
                 return initTranslator(cl, className);

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -59,7 +59,7 @@ public static Platform detectPlatform(String engine) {
         String nativeProp = "native/lib/" + engine + ".properties";
         Enumeration<URL> urls;
         try {
-            urls = Thread.currentThread().getContextClassLoader().getResources(nativeProp);
+            urls = ClassLoaderUtils.getContextClassLoader().getResources(nativeProp);
         } catch (IOException e) {
             throw new AssertionError("Failed to list property files.", e);
         }

File: basicdataset/src/main/java/ai/djl/basicdataset/cv/classification/ImageNet.java
Patch:
@@ -15,6 +15,7 @@
 import ai.djl.modality.cv.transform.ToTensor;
 import ai.djl.training.dataset.Dataset;
 import ai.djl.translate.Pipeline;
+import ai.djl.util.ClassLoaderUtils;
 import ai.djl.util.JsonUtils;
 import ai.djl.util.Progress;
 import java.io.IOException;
@@ -101,7 +102,7 @@ public void prepare(Progress progress) throws IOException {
     }
 
     private void loadSynset() {
-        ClassLoader cl = Thread.currentThread().getContextClassLoader();
+        ClassLoader cl = ClassLoaderUtils.getContextClassLoader();
         try (InputStream classStream = cl.getResourceAsStream("imagenet/classes.json")) {
             if (classStream == null) {
                 throw new AssertionError("Missing imagenet/classes.json in jar resource");

File: testing/src/main/java/ai/djl/testing/CoverageUtils.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.testing;
 
+import ai.djl.util.ClassLoaderUtils;
 import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.Constructor;
@@ -98,13 +99,13 @@ public static void testGetterSetters(Class<?> baseClass)
 
     private static List<Class<?>> getClasses(Class<?> clazz)
             throws IOException, ReflectiveOperationException, URISyntaxException {
-        ClassLoader appClassLoader = Thread.currentThread().getContextClassLoader();
+        ClassLoader appClassLoader = ClassLoaderUtils.getContextClassLoader();
         Field field = appClassLoader.getClass().getDeclaredField("ucp");
         field.setAccessible(true);
         Object ucp = field.get(appClassLoader);
         Method method = ucp.getClass().getDeclaredMethod("getURLs");
         URL[] urls = (URL[]) method.invoke(ucp);
-        ClassLoader cl = new TestClassLoader(urls, Thread.currentThread().getContextClassLoader());
+        ClassLoader cl = new TestClassLoader(urls, ClassLoaderUtils.getContextClassLoader());
 
         URL url = clazz.getProtectionDomain().getCodeSource().getLocation();
         String path = url.getPath();

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/PtModelTest.java
Patch:
@@ -12,6 +12,7 @@
  */
 package ai.djl.pytorch.integration;
 
+import ai.djl.Device;
 import ai.djl.Model;
 import ai.djl.ModelException;
 import ai.djl.inference.Predictor;
@@ -42,7 +43,8 @@ public void testLoadFromStream() throws IOException, TranslateException, ModelEx
                         .build();
         try (ZooModel<NDList, NDList> zooModel = criteria.loadModel()) {
             Path modelFile = zooModel.getModelPath().resolve("traced_resnet18.pt");
-            try (PtModel model = (PtModel) Model.newInstance("test model")) {
+            // This model only support CPU
+            try (PtModel model = (PtModel) Model.newInstance("test model", Device.cpu())) {
                 model.load(Files.newInputStream(modelFile));
                 try (Predictor<NDList, NDList> predictor =
                         model.newPredictor(new NoopTranslator())) {

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/IValue.java
Patch:
@@ -250,6 +250,9 @@ public static IValue listFrom(PtNDArray... list) {
      * @return a new {@code IValue} of type {@code NDArray[]}
      */
     public static IValue listFrom(IValue... list) {
+        if (list.length == 0) {
+            throw new IllegalArgumentException("Empty IValue list is not supported.");
+        }
         long[] tensors = Arrays.stream(list).mapToLong(IValue::getHandle).toArray();
         return new IValue(PyTorchLibrary.LIB.iValueFromList(tensors));
     }

File: engines/pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/IValueTest.java
Patch:
@@ -137,6 +137,7 @@ public void testIValue() {
                 NDList list = ivalue.toNDList(manager);
                 Assert.assertEquals(list.size(), 3);
             }
+            Assert.assertThrows(() -> IValue.listFrom(new IValue[0]));
 
             try (IValue iv1 = IValue.from(array1);
                     IValue iv2 = IValue.from(array2);

File: extensions/sentencepiece/src/test/java/ai/djl/sentencepiece/SpTextEmbeddingTest.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.sentencepiece;
 
-import ai.djl.testing.TestRequirements;
 import ai.djl.training.util.DownloadUtils;
 import java.io.IOException;
 import java.nio.file.Files;
@@ -36,8 +35,6 @@ public void downloadModel() throws IOException {
 
     @Test
     public void testEmbedding() throws IOException {
-        TestRequirements.notWindows();
-
         Path modelPath = Paths.get("build/test/models/sententpiece_test_model.model");
         try (SpTokenizer tokenizer = new SpTokenizer(modelPath)) {
             SpTextEmbedding embedding = SpTextEmbedding.from(tokenizer);

File: extensions/sentencepiece/src/test/java/ai/djl/sentencepiece/SpTokenizerTest.java
Patch:
@@ -39,8 +39,6 @@ public void downloadModel() throws IOException {
 
     @Test
     public void testLoadFromBytes() throws IOException {
-        TestRequirements.notWindows();
-
         Path modelPath = Paths.get("build/test/models/sententpiece_test_model.model");
         byte[] bytes = Files.readAllBytes(modelPath);
         try (SpTokenizer tokenizer = new SpTokenizer(bytes)) {

File: extensions/sentencepiece/src/test/java/ai/djl/sentencepiece/SpVocabularyTest.java
Patch:
@@ -13,7 +13,6 @@
 
 package ai.djl.sentencepiece;
 
-import ai.djl.testing.TestRequirements;
 import ai.djl.training.util.DownloadUtils;
 import java.io.IOException;
 import java.nio.file.Files;
@@ -37,8 +36,6 @@ public void downloadModel() throws IOException {
 
     @Test
     public void testTokenIdConversion() throws IOException {
-        TestRequirements.notWindows();
-
         Path modelPath = Paths.get("build/test/models");
         String prefix = "sententpiece_test_model";
         SpTokenizer tokenizer = new SpTokenizer(modelPath, prefix);

File: examples/src/test/java/ai/djl/testing/TestRequirements.java
Patch:
@@ -0,0 +1 @@
+../../../../../../../testing/src/main/java/ai/djl/testing/TestRequirements.java
\ No newline at end of file

File: examples/src/test/java/ai/djl/testing/package-info.java
Patch:
@@ -0,0 +1 @@
+../../../../../../../testing/src/main/java/ai/djl/testing/package-info.java
\ No newline at end of file

File: api/src/main/java/ai/djl/modality/cv/translator/ImageServingTranslator.java
Patch:
@@ -67,6 +67,9 @@ public Output processOutput(TranslatorContext ctx, NDList list) throws Exception
     public NDList processInput(TranslatorContext ctx, Input input) throws Exception {
         BytesSupplier data = input.getData();
         try {
+            if (data == null) {
+                throw new TranslateException("Input data is empty.");
+            }
             Image image = factory.fromInputStream(new ByteArrayInputStream(data.getAsBytes()));
             return translator.processInput(ctx, image);
         } catch (IOException e) {

File: api/src/main/java/ai/djl/repository/JarRepository.java
Patch:
@@ -108,7 +108,7 @@ private synchronized Metadata getMetadata() {
         artifact.getArguments().putAll(arguments);
         Map<String, Artifact.Item> files = new ConcurrentHashMap<>();
         Artifact.Item item = new Artifact.Item();
-        item.setUri(uri.getPath());
+        item.setUri(uri.getSchemeSpecificPart());
         item.setName(""); // avoid creating extra folder
         item.setArtifact(artifact);
         item.setSize(-1);

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -32,7 +32,6 @@
 /** {@code MxNDArrayEx} is the MXNet implementation of the {@link NDArrayEx}. */
 class MxNDArrayEx implements NDArrayEx {
 
-    private NDArrayIndexer indexer;
     private MxNDArray array;
 
     /**
@@ -42,7 +41,6 @@ class MxNDArrayEx implements NDArrayEx {
      */
     MxNDArrayEx(MxNDArray parent) {
         this.array = parent;
-        indexer = new MxNDArrayIndexer(array.getManager());
     }
 
     // TODO only used to calculate zero-dim numpy shape
@@ -962,7 +960,7 @@ public NDArray randomColorJitter(
     /** {@inheritDoc} */
     @Override
     public NDArrayIndexer getIndexer() {
-        return indexer;
+        return new MxNDArrayIndexer(array.getManager());
     }
 
     ////////////////////////////////////////

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -244,8 +244,8 @@ private MxNDArray createGradient(SparseFormat format) {
     public NDArray getGradient() {
         if (!hasGradient()) {
             throw new IllegalStateException(
-                    "No gradient attached to this NDArray, please call array.requiredGradient()"
-                            + "on your NDArray or block.setInitializer() on your Block");
+                    "No gradient attached to this NDArray, please call array.setRequiresGradient()"
+                            + " on your NDArray or block.setInitializer() on your Block");
         }
         Pointer pointer = JnaUtils.getGradient(getHandle());
         return manager.create(pointer);

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -164,8 +164,8 @@ public void setRequiresGradient(boolean requiresGrad) {
     public PtNDArray getGradient() {
         if (!hasGradient()) {
             throw new IllegalStateException(
-                    "No gradient attached to this NDArray, please call array.requiredGradient()"
-                            + "on your NDArray or block.setInitializer() on your Block");
+                    "No gradient attached to this NDArray, please call array.setRequiresGradient()"
+                            + " on your NDArray or block.setInitializer() on your Block");
         }
         PtNDArray res = JniUtils.getGradient(this);
         // If you call getGradient() before you run the backward,

File: api/src/main/java/ai/djl/util/cuda/CudaUtils.java
Patch:
@@ -128,7 +128,7 @@ public static String getComputeCapability(int device) {
      * @throws IllegalArgumentException if {@link Device} is not GPU device or does not exist
      */
     public static MemoryUsage getGpuMemory(Device device) {
-        if (!Device.Type.GPU.equals(device.getDeviceType())) {
+        if (!device.isGpu()) {
             throw new IllegalArgumentException("Only GPU device is allowed.");
         }
 

File: api/src/test/java/ai/djl/util/PlatformTest.java
Patch:
@@ -40,7 +40,6 @@ public void testPlatform() throws IOException {
         Assert.assertEquals(system.getClassifier(), "linux-x86_64");
         Assert.assertEquals(system.getOsPrefix(), "linux");
         Assert.assertEquals(system.getOsArch(), "x86_64");
-        Assert.assertNull(system.getCudaArch());
 
         url = createPropertyFile("version=1.8.0\nplaceholder=true");
         Platform platform = Platform.fromUrl(url);

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/JnaUtils.java
Patch:
@@ -196,7 +196,7 @@ public static int getGpuCount() {
     }
 
     public static long[] getGpuMemory(Device device) {
-        if (!Device.Type.GPU.equals(device.getDeviceType())) {
+        if (!device.isGpu()) {
             throw new IllegalArgumentException("Only GPU device is allowed.");
         }
 

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtModel.java
Patch:
@@ -71,7 +71,7 @@ public void load(Path modelPath, String prefix, Map<String, ?> options)
         try {
             Device device = manager.getDevice();
             OrtSession session;
-            if (Device.Type.GPU.equals(device.getDeviceType())) {
+            if (device.isGpu()) {
                 OrtSession.SessionOptions sessionOptions = new OrtSession.SessionOptions();
                 sessionOptions.addCUDA(manager.getDevice().getDeviceId());
                 session = env.createSession(modelFile.toString(), sessionOptions);

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -215,7 +215,7 @@ public void set(Buffer data) {
         if (data.isDirect() && data instanceof ByteBuffer) {
             // If NDArray is on the GPU, it is native code responsibility to control the data life
             // cycle
-            if (!Device.Type.GPU.equals(getDevice().getDeviceType())) {
+            if (!getDevice().isGpu()) {
                 dataRef = (ByteBuffer) data;
             }
             JniUtils.set(this, (ByteBuffer) data);
@@ -227,7 +227,7 @@ public void set(Buffer data) {
         BaseNDManager.copyBuffer(data, buf);
 
         // If NDArray is on the GPU, it is native code responsibility to control the data life cycle
-        if (!Device.Type.GPU.equals(getDevice().getDeviceType())) {
+        if (!getDevice().isGpu()) {
             dataRef = buf;
         }
         JniUtils.set(this, buf);

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -141,7 +141,7 @@ public static PtNDArray createNdFromByteBuffer(
                         new int[] {PtDeviceType.toDeviceType(device), device.getDeviceId()},
                         false);
 
-        if (layout == 1 || layout == 2 || Device.Type.GPU.equals(device.getDeviceType())) {
+        if (layout == 1 || layout == 2 || device.isGpu()) {
             // MKLDNN & COO & GPU device will explicitly make a copy in native code
             // so we don't want to hold a reference on Java side
             return new PtNDArray(manager, handle);

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtEngine.java
Patch:
@@ -130,7 +130,7 @@ public TrtNDManager newBaseManager() {
     public TrtNDManager newBaseManager(Device device) {
         // Only support GPU for now
         device = device == null ? defaultDevice() : device;
-        if (!Device.Type.GPU.equals(device.getDeviceType())) {
+        if (!device.isGpu()) {
             throw new IllegalArgumentException("TensorRT only support GPU");
         }
         return TrtNDManager.getSystemManager().newSubManager(device);

File: engines/tensorrt/src/test/java/ai/djl/tensorrt/engine/TrtNDManagerTest.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.tensorrt.engine;
 
-import ai.djl.Device;
 import ai.djl.engine.Engine;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDManager;
@@ -31,7 +30,7 @@ public void testNDArray() {
         } catch (Exception ignore) {
             throw new SkipException("Your os configuration doesn't support TensorRT.");
         }
-        if (!Device.Type.GPU.equals(engine.defaultDevice().getDeviceType())) {
+        if (!engine.defaultDevice().isGpu()) {
             throw new SkipException("TensorRT only support GPU.");
         }
         try (NDManager manager = TrtNDManager.getSystemManager().newSubManager()) {

File: extensions/benchmark/src/main/java/ai/djl/benchmark/Arguments.java
Patch:
@@ -98,8 +98,7 @@ public class Arguments {
             threads = Integer.parseInt(cmd.getOptionValue("threads"));
             Engine eng = Engine.getEngine(engine);
             Device[] devices = eng.getDevices(maxGpus);
-            String deviceType = devices[0].getDeviceType();
-            if (Device.Type.GPU.equals(deviceType)) {
+            if (devices[0].isGpu()) {
                 // one thread per GPU
                 if (threads <= 0) {
                     threads = devices.length;

File: engines/dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDManager.java
Patch:
@@ -55,7 +55,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public DlrNDArray from(NDArray array) {
-        if (array instanceof DlrNDArray) {
+        if (array == null || array instanceof DlrNDArray) {
             return (DlrNDArray) array;
         }
         return (DlrNDArray) create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/ml/xgboost/src/main/java/ai/djl/ml/xgboost/XgbNDManager.java
Patch:
@@ -52,7 +52,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public XgbNDArray from(NDArray array) {
-        if (array instanceof XgbNDArray) {
+        if (array == null || array instanceof XgbNDArray) {
             return (XgbNDArray) array;
         }
         return (XgbNDArray) create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -65,7 +65,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public MxNDArray from(NDArray array) {
-        if (array instanceof MxNDArray) {
+        if (array == null || array instanceof MxNDArray) {
             return (MxNDArray) array;
         }
         MxNDArray ret = create(array.getShape(), array.getDataType());

File: engines/onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -55,7 +55,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public OrtNDArray from(NDArray array) {
-        if (array instanceof OrtNDArray) {
+        if (array == null || array instanceof OrtNDArray) {
             return (OrtNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -69,7 +69,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public PpNDArray from(NDArray array) {
-        if (array instanceof PpNDArray) {
+        if (array == null || array instanceof PpNDArray) {
             return (PpNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -47,7 +47,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public PtNDArray from(NDArray array) {
-        if (array instanceof PtNDArray) {
+        if (array == null || array instanceof PtNDArray) {
             return (PtNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -51,7 +51,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public TfNDArray from(NDArray array) {
-        if (array instanceof TfNDArray) {
+        if (array == null || array instanceof TfNDArray) {
             return (TfNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtNDManager.java
Patch:
@@ -55,7 +55,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public TrtNDArray from(NDArray array) {
-        if (array instanceof TrtNDArray) {
+        if (array == null || array instanceof TrtNDArray) {
             return (TrtNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: engines/tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDManager.java
Patch:
@@ -49,7 +49,7 @@ public ByteBuffer allocateDirect(int capacity) {
     /** {@inheritDoc} */
     @Override
     public TfLiteNDArray from(NDArray array) {
-        if (array instanceof TfLiteNDArray) {
+        if (array == null || array instanceof TfLiteNDArray) {
             return (TfLiteNDArray) array;
         }
         return create(array.toByteBuffer(), array.getShape(), array.getDataType());

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -3490,8 +3490,8 @@ default NDArray argSort(int axis) {
      * ]
      * jshell&gt; array.sort(0); // sort along the first axis
      * ND: (2, 2) cpu() float32
-     * [[1., 4.],
-     *  [1., 3.],
+     * [[1., 1.],
+     *  [3., 4.],
      * ]
      * </pre>
      *

File: api/src/main/java/ai/djl/translate/ServingTranslatorFactory.java
Patch:
@@ -311,7 +311,8 @@ public NDList processInput(TranslatorContext ctx, Input input) throws TranslateE
         @Override
         public Output processOutput(TranslatorContext ctx, NDList list) {
             Output output = new Output(200, "OK");
-            output.add(list);
+            // TODO: find a way to pass NDList out
+            output.add(list.getAsBytes());
             output.addProperty("Content-Type", "tensor/ndlist");
             return output;
         }

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.types.Shape;
 import ai.djl.ndarray.types.SparseFormat;
 import java.nio.Buffer;
+import java.nio.charset.Charset;
 import java.util.Arrays;
 
 /**
@@ -165,7 +166,7 @@ public NDArray stopGradient() {
 
     /** {@inheritDoc} */
     @Override
-    public String[] toStringArray() {
+    public String[] toStringArray(Charset charset) {
         throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
 

File: engines/pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -24,6 +24,7 @@
 import ai.djl.util.NativeResource;
 import java.nio.Buffer;
 import java.nio.ByteBuffer;
+import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashSet;
@@ -200,7 +201,7 @@ public ByteBuffer toByteBuffer() {
 
     /** {@inheritDoc} */
     @Override
-    public String[] toStringArray() {
+    public String[] toStringArray(Charset charset) {
         throw new UnsupportedOperationException("String NDArray is not supported!");
     }
 

File: api/src/main/java/ai/djl/inference/Predictor.java
Patch:
@@ -83,7 +83,7 @@ public class Predictor<I, O> implements AutoCloseable {
 
     private boolean prepared;
     private Model model;
-    private NDManager manager;
+    protected NDManager manager;
     Metrics metrics;
     protected Block block;
     protected ParameterStore parameterStore;

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -1037,8 +1037,9 @@ private NDArray getAlternativeArray() {
         }
         if (alternativeArray == null) {
             alternativeArray = alternativeManager.from(this);
+        } else {
+            alternativeArray.set(getDataType().asDataType(toByteBuffer()));
         }
-        alternativeArray.set(getDataType().asDataType(toByteBuffer()));
         return alternativeArray;
     }
 }

File: engines/dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrPredictor.java
Patch:
@@ -36,7 +36,7 @@ public DlrPredictor(
             DlrModel model, String modelDir, Device device, Translator<I, O> translator) {
         super(model, translator, false);
         long modelHandle = JniUtils.createDlrModel(modelDir, device);
-        block = new DlrSymbolBlock(modelHandle);
+        block = new DlrSymbolBlock((DlrNDManager) manager, modelHandle);
         // disable cpu affinity by default
         JniUtils.useDlrCpuAffinity(modelHandle, false);
     }

File: engines/dlr/dlr-engine/src/main/java/ai/djl/dlr/jni/JniUtils.java
Patch:
@@ -13,7 +13,7 @@
 package ai.djl.dlr.jni;
 
 import ai.djl.Device;
-import ai.djl.ndarray.NDArray;
+import ai.djl.dlr.engine.DlrNDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
@@ -27,7 +27,7 @@ public final class JniUtils {
 
     private JniUtils() {}
 
-    public static void setDlrInput(long modelHandle, NDArray input, int index) {
+    public static void setDlrInput(long modelHandle, DlrNDArray input, int index) {
         long[] shape = input.getShape().getShape();
         float[] data = input.toFloatArray();
         String name = DlrLibrary.LIB.getDlrInputName(modelHandle, index);

File: engines/dlr/dlr-engine/src/test/java/ai/djl/dlr/engine/DlrNDManagerTest.java
Patch:
@@ -45,7 +45,7 @@ public void testNDArray() {
             bb.asFloatBuffer().put(buf);
             bb.rewind();
 
-            NDArray dlrArray = manager.createDirect(bb, new Shape(4), DataType.FLOAT32);
+            NDArray dlrArray = manager.create(bb, new Shape(4), DataType.FLOAT32);
             Assert.assertEquals(dlrArray.toFloatArray(), buf);
         }
     }

File: engines/paddlepaddle/paddlepaddle-model-zoo/src/main/java/ai/djl/paddlepaddle/zoo/cv/objectdetection/PpFaceDetectionTranslator.java
Patch:
@@ -65,7 +65,7 @@ public NDList processInput(TranslatorContext ctx, Image input) {
                         array, (int) (shape.get(1) * shrink), (int) (shape.get(0) * shrink));
         array = array.transpose(2, 0, 1).flip(0); // HWC -> CHW RGB -> BGR
         NDArray mean =
-                ctx.getNDManager().create(new float[] {104f, 117f, 123f}, new Shape(3, 1, 1));
+                array.getManager().create(new float[] {104f, 117f, 123f}, new Shape(3, 1, 1));
         array = array.sub(mean).mul(0.007843f); // normalization
         array = array.expandDims(0); // make batch dimension
         return new NDList(array);

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtSession.java
Patch:
@@ -49,7 +49,7 @@ public class TrtSession extends AbstractBlock implements AutoCloseable {
             int size = Math.toIntExact(inputShapes[i].size() * inputTypes[i].getNumOfBytes());
             ByteBuffer bb = manager.allocateDirect(size);
             JniUtils.bind(session, inputName, bb);
-            NDArray array = manager.createDirect(bb, inputShapes[i], inputTypes[i]);
+            NDArray array = manager.create(bb, inputShapes[i], inputTypes[i]);
             array.setName(inputName);
             inputBindings.add(array);
         }
@@ -63,7 +63,7 @@ public class TrtSession extends AbstractBlock implements AutoCloseable {
             int size = Math.toIntExact(outputShapes[i].size() * outputTypes[i].getNumOfBytes());
             ByteBuffer bb = manager.allocateDirect(size);
             JniUtils.bind(session, outputNames[i], bb);
-            NDArray array = manager.createDirect(bb, outputShapes[i], outputTypes[i]);
+            NDArray array = manager.create(bb, outputShapes[i], outputTypes[i]);
             array.setName(outputNames[i]);
             outputBindings.add(array);
         }

File: engines/tensorrt/src/main/java/ai/djl/tensorrt/engine/TrtModel.java
Patch:
@@ -128,6 +128,7 @@ private Path findModelFile(String prefix) {
     public void close() {
         if (block != null) {
             ((TrtSymbolBlock) block).close();
+            block = null;
         }
         super.close();
     }

File: integration/src/main/java/ai/djl/integration/tests/nn/BlockCoreTest.java
Patch:
@@ -658,7 +658,6 @@ public void testLstm() throws IOException, MalformedModelException {
     @SuppressWarnings("try")
     @Test
     public void testGRU() throws IOException, MalformedModelException {
-
         Loss loss = new SoftmaxCrossEntropyLoss("SmCeLoss", 1, -1, false, true);
         TrainingConfig config =
                 new DefaultTrainingConfig(loss)

File: integration/src/main/java/ai/djl/integration/tests/nn/BlockFactoryTest.java
Patch:
@@ -76,16 +76,15 @@ public void testBlockFactoryLoadingFromZip()
     private Path prepareModel(Path savedDir)
             throws IOException, ModelNotFoundException, MalformedModelException {
         TestBlockFactory factory = new TestBlockFactory();
-        Model model = factory.getRemoveLastBlockModel();
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (Model model = factory.getRemoveLastBlockModel();
+                NDManager manager = NDManager.newBaseManager()) {
             Block block = model.getBlock();
             block.forward(
                     new ParameterStore(manager, true),
                     new NDList(manager.ones(new Shape(1, 3, 32, 32))),
                     true);
             model.save(savedDir, "exported");
         }
-        model.close();
         Path classDir = savedDir.resolve("classes/ai/djl/integration/tests/nn");
         Files.createDirectories(classDir);
         Files.copy(

File: basicdataset/src/main/java/ai/djl/basicdataset/nlp/TextDataset.java
Patch:
@@ -16,7 +16,7 @@
 import ai.djl.basicdataset.utils.TextData;
 import ai.djl.basicdataset.utils.TextData.Configuration;
 import ai.djl.engine.Engine;
-import ai.djl.modality.nlp.SimpleVocabulary;
+import ai.djl.modality.nlp.DefaultVocabulary;
 import ai.djl.modality.nlp.Vocabulary;
 import ai.djl.modality.nlp.embedding.EmbeddingException;
 import ai.djl.modality.nlp.embedding.TextEmbedding;
@@ -82,10 +82,10 @@ public TextEmbedding getTextEmbedding(boolean source) {
     }
 
     /**
-     * Gets the {@link SimpleVocabulary} built while preprocessing the text data.
+     * Gets the {@link DefaultVocabulary} built while preprocessing the text data.
      *
      * @param source whether to get source or target vocabulary
-     * @return the {@link SimpleVocabulary}
+     * @return the {@link DefaultVocabulary}
      */
     public Vocabulary getVocabulary(boolean source) {
         TextData textData = source ? sourceTextData : targetTextData;

File: engines/mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/qa/MxBertQATranslator.java
Patch:
@@ -13,7 +13,7 @@
 package ai.djl.mxnet.zoo.nlp.qa;
 
 import ai.djl.Model;
-import ai.djl.modality.nlp.SimpleVocabulary;
+import ai.djl.modality.nlp.DefaultVocabulary;
 import ai.djl.modality.nlp.Vocabulary;
 import ai.djl.modality.nlp.bert.BertToken;
 import ai.djl.modality.nlp.bert.BertTokenizer;
@@ -56,8 +56,7 @@ public class MxBertQATranslator extends QATranslator {
     public void prepare(TranslatorContext ctx) throws IOException {
         Model model = ctx.getModel();
         vocabulary =
-                SimpleVocabulary.builder()
-                        .optMinFrequency(1)
+                DefaultVocabulary.builder()
                         .addFromCustomizedFile(
                                 model.getArtifact("vocab.json"), VocabParser::parseToken)
                         .optUnknownToken("[UNK]")

File: engines/mxnet/mxnet-model-zoo/src/test/java/ai/djl/mxnet/integration/modality/nlp/WordEmbeddingTest.java
Patch:
@@ -42,7 +42,7 @@ public void testGlove()
                 NDList result =
                         new NDList(
                                 wordEmbedding.embedText(manager, Collections.singletonList("the")));
-                Assert.assertEquals(result.singletonOrThrow().sum().getFloat(), -5.24, .01);
+                Assert.assertEquals(result.singletonOrThrow().sum().getFloat(), 0.0, .01);
             }
         }
     }

File: engines/pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/nlp/qa/PtBertQATranslator.java
Patch:
@@ -12,7 +12,7 @@
  */
 package ai.djl.pytorch.zoo.nlp.qa;
 
-import ai.djl.modality.nlp.SimpleVocabulary;
+import ai.djl.modality.nlp.DefaultVocabulary;
 import ai.djl.modality.nlp.Vocabulary;
 import ai.djl.modality.nlp.bert.BertToken;
 import ai.djl.modality.nlp.bert.BertTokenizer;
@@ -40,8 +40,7 @@ public class PtBertQATranslator extends QATranslator {
     @Override
     public void prepare(TranslatorContext ctx) throws IOException {
         vocabulary =
-                SimpleVocabulary.builder()
-                        .optMinFrequency(1)
+                DefaultVocabulary.builder()
                         .addFromTextFile(ctx.getModel().getArtifact("bert-base-uncased-vocab.txt"))
                         .optUnknownToken("[UNK]")
                         .build();

File: integration/src/main/java/ai/djl/integration/tests/modality/nlp/SimpleTextEncoderTest.java
Patch:
@@ -14,7 +14,7 @@
 
 import ai.djl.basicmodelzoo.nlp.SimpleTextEncoder;
 import ai.djl.integration.util.TestUtils;
-import ai.djl.modality.nlp.SimpleVocabulary;
+import ai.djl.modality.nlp.DefaultVocabulary;
 import ai.djl.modality.nlp.embedding.TrainableTextEmbedding;
 import ai.djl.modality.nlp.embedding.TrainableWordEmbedding;
 import ai.djl.ndarray.NDList;
@@ -36,7 +36,7 @@ public void testEncoder() {
                         TrainableWordEmbedding.builder()
                                 .setEmbeddingSize(8)
                                 .setVocabulary(
-                                        new SimpleVocabulary(
+                                        new DefaultVocabulary(
                                                 Arrays.asList("1 2 3 4 5 6 7 8 9 10".split(" "))))
                                 .build());
         SimpleTextEncoder encoder =

File: engines/ml/xgboost/src/main/java/ai/djl/ml/xgboost/XgbNDArray.java
Patch:
@@ -66,6 +66,7 @@ public ByteBuffer toByteBuffer() {
         if (data == null) {
             throw new UnsupportedOperationException("Cannot obtain value from DMatrix");
         }
+        data.rewind();
         return data;
     }
 

File: extensions/fasttext/src/main/java/ai/djl/fasttext/zoo/nlp/textclassification/TextClassificationModelLoader.java
Patch:
@@ -65,7 +65,7 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
         }
         Model model = new FtModel(modelName);
         Path modelPath = mrl.getRepository().getResourceDirectory(artifact);
-        model.load(modelPath);
+        model.load(modelPath, modelName, criteria.getOptions());
         return new ZooModel<>(model, null);
     }
 }

File: extensions/fasttext/src/test/java/ai/djl/fasttext/CookingStackExchangeTest.java
Patch:
@@ -73,12 +73,13 @@ public void testTextClassification()
                 Criteria.builder()
                         .setTypes(String.class, Classifications.class)
                         .optArtifactId("ai.djl.fasttext:cooking_stackexchange")
+                        .optOption("label-prefix", "__label")
                         .build();
         try (ZooModel<String, Classifications> model = criteria.loadModel()) {
             String input = "Which baking dish is best to bake a banana bread ?";
             FtModel ftModel = (FtModel) model.getWrappedModel();
             Classifications result = ftModel.classify(input, 8);
-            Assert.assertEquals(result.item(0).getClassName(), "__label__bread");
+            Assert.assertEquals(result.item(0).getClassName(), "__bread");
         }
     }
 
@@ -131,7 +132,7 @@ public void testBlazingText() throws IOException, ModelException {
             Classifications result = model.classify(text, 5);
 
             logger.info("{}", result);
-            Assert.assertEquals(result.item(0).getClassName(), "__label__Company");
+            Assert.assertEquals(result.item(0).getClassName(), "Company");
         }
     }
 }

File: extensions/benchmark/src/main/java/ai/djl/benchmark/Arguments.java
Patch:
@@ -211,7 +211,7 @@ static Options getOptions() {
 
     static boolean hasHelp(String[] args) {
         List<String> list = Arrays.asList(args);
-        return list.contains("-h") || list.contains("help");
+        return list.contains("-h") || list.contains("--help");
     }
 
     static void printHelp(String msg, Options options) {

File: extensions/fasttext/src/test/java/ai/djl/fasttext/CookingStackExchangeTest.java
Patch:
@@ -131,7 +131,7 @@ public void testBlazingText() throws IOException, ModelException {
             Classifications result = model.classify(text, 5);
 
             logger.info("{}", result);
-            Assert.assertEquals(result.item(0).getClassName(), "Company");
+            Assert.assertEquals(result.item(0).getClassName(), "__label__Company");
         }
     }
 }

File: extensions/fasttext/src/test/java/ai/djl/fasttext/CookingStackExchangeTest.java
Patch:
@@ -78,7 +78,7 @@ public void testTextClassification()
             String input = "Which baking dish is best to bake a banana bread ?";
             FtModel ftModel = (FtModel) model.getWrappedModel();
             Classifications result = ftModel.classify(input, 8);
-            Assert.assertEquals(result.item(0).getClassName(), "bread");
+            Assert.assertEquals(result.item(0).getClassName(), "__label__bread");
         }
     }
 

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -181,7 +181,7 @@ public boolean isPlaceholder() {
      * @return true if the platforms match
      */
     public boolean matches(Platform system) {
-        if (!osPrefix.equals(system.osPrefix) || osArch.equals(system.osArch)) {
+        if (!osPrefix.equals(system.osPrefix) || !osArch.equals(system.osArch)) {
             return false;
         }
         // if system Machine is GPU

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -35,7 +35,7 @@ public interface NDArrayAdapter extends NDArray {
     /** {@inheritDoc} */
     @Override
     default SparseFormat getSparseFormat() {
-        throw new UnsupportedOperationException(UNSUPPORTED_MSG);
+        return SparseFormat.DENSE;
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/modality/cv/util/NDImageUtils.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.modality.cv.util;
 
-import ai.djl.engine.Engine;
 import ai.djl.modality.cv.Image;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.types.Shape;
@@ -109,7 +108,7 @@ public static NDArray normalize(NDArray input, float mean, float std) {
      */
     public static NDArray normalize(NDArray input, float[] mean, float[] std) {
         boolean chw = isCHW(input.getShape());
-        boolean tf = "TensorFlow".equals(Engine.getInstance().getEngineName());
+        boolean tf = "TensorFlow".equals(input.getManager().getEngine().getEngineName());
         if ((chw && tf) || (!chw && !tf)) {
             throw new IllegalArgumentException(
                     "normalize requires CHW format. TensorFlow requires HWC");

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -117,7 +117,7 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
             // Otherwise check the modelzoo supported engine and grab a random engine in the list.
             // Otherwise if none of them is specified or model zoo is null, go to default engine.
             if (engine == null && modelZoo != null) {
-                String defaultEngine = Engine.getInstance().getEngineName();
+                String defaultEngine = Engine.getDefaultEngineName();
                 for (String supportedEngine : modelZoo.getSupportedEngines()) {
                     if (supportedEngine.equals(defaultEngine)) {
                         engine = supportedEngine;

File: api/src/main/java/ai/djl/training/listener/LoggingTrainingListener.java
Patch:
@@ -158,8 +158,9 @@ public void onTrainingBegin(Trainer trainer) {
         logger.info("Training on: {}.", devicesMsg);
 
         long init = System.nanoTime();
-        String engineName = Engine.getInstance().getEngineName();
-        String version = Engine.getInstance().getVersion();
+        Engine engine = trainer.getManager().getEngine();
+        String engineName = engine.getEngineName();
+        String version = engine.getVersion();
         long loaded = System.nanoTime();
         logger.info(
                 String.format(

File: extensions/benchmark/src/main/java/ai/djl/benchmark/Arguments.java
Patch:
@@ -76,7 +76,7 @@ public class Arguments {
         if (cmd.hasOption("engine")) {
             engine = cmd.getOptionValue("engine");
         } else {
-            engine = Engine.getInstance().getEngineName();
+            engine = Engine.getDefaultEngineName();
         }
 
         if (cmd.hasOption("duration")) {

File: extensions/fasttext/src/main/java/ai/djl/fasttext/zoo/FtModelZoo.java
Patch:
@@ -50,6 +50,6 @@ public String getGroupId() {
     /** {@inheritDoc} */
     @Override
     public Set<String> getSupportedEngines() {
-        return Collections.singleton(Engine.getInstance().getEngineName());
+        return Collections.singleton(Engine.getDefaultEngineName());
     }
 }

File: api/src/main/java/ai/djl/modality/Input.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.modality;
 
 import ai.djl.util.PairList;
+import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
@@ -82,7 +83,7 @@ public void addProperty(String key, String value) {
      * @return the value to which the specified key is mapped
      */
     public String getProperty(String key, String defaultValue) {
-        return properties.getOrDefault(key, defaultValue);
+        return properties.getOrDefault(key.toLowerCase(Locale.ROOT), defaultValue);
     }
 
     /**

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/LibUtils.java
Patch:
@@ -155,7 +155,8 @@ private static String copyJniLibraryFromClasspath(Path nativeDir, boolean fallba
         }
 
         Path tmp = null;
-        String libPath = "/jnilib/" + classifier + '/' + flavor + '/' + name;
+        // Paddle GPU and CPU share the same jni so file
+        String libPath = "/jnilib/" + classifier + "/cpu/" + name;
         try (InputStream stream = LibUtils.class.getResourceAsStream(libPath)) {
             logger.info("Extracting {} to cache ...", libPath);
             if (stream == null) {

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -1740,7 +1740,7 @@ default boolean allClose(NDArray other, double rtol, double atol, boolean equalN
     NDArray minimum(Number n);
 
     /**
-     * Returns the maximum of this {@code NDArray} and the other {@code NDArray} element-wise.
+     * Returns the minimum of this {@code NDArray} and the other {@code NDArray} element-wise.
      *
      * <p>The shapes of this {@code NDArray} and the other {@code NDArray} must be broadcastable.
      *
@@ -1762,7 +1762,7 @@ default boolean allClose(NDArray other, double rtol, double atol, boolean equalN
      * </pre>
      *
      * @param other the {@code NDArray} to be compared
-     * @return the maximum of this {@code NDArray} and the other {@code NDArray} element-wise
+     * @return the minimum of this {@code NDArray} and the other {@code NDArray} element-wise
      */
     NDArray minimum(NDArray other);
 

File: serving/serving/src/main/java/ai/djl/serving/plugins/FolderScanPluginManager.java
Patch:
@@ -86,11 +86,12 @@ public void loadPlugins() throws IOException {
                         .parallelStream()
                         .map(PropertyFilePluginMetaDataReader::new)
                         .map(PropertyFilePluginMetaDataReader::read)
-                        .peek(p -> logger.info("load plugin: {}", p.getName()))
+                        .distinct()
                         .collect(Collectors.toMap(PluginMetaData::getName, i -> i));
 
         // phase 2: initialize components
         for (PluginMetaData plugin : pluginRegistry.values()) {
+            logger.info("Loading plugin: {}", plugin);
             if (pluginRegistry.keySet().containsAll(plugin.getDependencies())) {
                 try {
                     for (String handlerClassName : plugin.getComponentNames()) {

File: serving/serving/src/main/java/ai/djl/serving/plugins/PropertyFilePluginMetaDataReader.java
Patch:
@@ -71,7 +71,7 @@ public PluginMetaData read() {
         List<String> exportedComponents = getPropertyAsStringList(PROPERTY_PLUGIN_EXPORT);
         List<String> requires = getPropertyAsStringList(PROPERTY_PLUGIN_REQUIRES);
 
-        logger.info("plugin found and registered {}", pluginName);
+        logger.info("Plugin found: {}/{}", pluginName, url);
         return new PluginMetaData(pluginName, url, exportedComponents, requires);
     }
 

File: integration/src/test/java/ai/djl/integration/IntegrationTests.java
Patch:
@@ -34,7 +34,7 @@ public void runIntegrationTests() {
             if (System.getProperty("os.name").startsWith("Win")) {
                 engines = new String[] {"MXNet"};
             } else {
-                engines = new String[] {"MXNet", "PyTorch", "TensorFlow"};
+                engines = new String[] {"MXNet", "PyTorch", "TensorFlow", "XGBoost"};
             }
         } else {
             engines = new String[] {defaultEngine};

File: api/src/main/java/ai/djl/inference/Predictor.java
Patch:
@@ -168,7 +168,7 @@ public List<O> batchPredict(List<I> inputs) throws TranslateException {
             return ret;
         } catch (EngineException e) {
             throw new TranslateException(e);
-        } catch (RuntimeException e) {
+        } catch (TranslateException | RuntimeException e) {
             throw e;
         } catch (Exception e) {
             throw new TranslateException(e);

File: serving/serving/src/main/java/ai/djl/serving/ModelServer.java
Patch:
@@ -89,7 +89,7 @@ public static void main(String[] args) {
             CommandLine cmd = parser.parse(options, args, null, false);
             Arguments arguments = new Arguments(cmd);
             if (arguments.hasHelp()) {
-                printHelp("model-server [OPTIONS]", options);
+                printHelp("djl-serving [OPTIONS]", options);
                 return;
             }
 
@@ -340,7 +340,7 @@ private void initModelStore() throws IOException {
                             configManager.getMaxBatchDelay(),
                             configManager.getMaxIdleTime());
             ModelInfo modelInfo = future.join();
-            modelManager.triggerModelUpdated(modelInfo.scaleWorkers(workers, workers));
+            modelManager.triggerModelUpdated(modelInfo.scaleWorkers(1, workers));
             startupModels.add(modelName);
         }
     }

File: serving/serving/src/main/java/ai/djl/serving/wlm/ModelManager.java
Patch:
@@ -154,6 +154,7 @@ public boolean unregisterModel(String modelName, String version) {
                 startupModels.remove(modelName);
                 m.close();
             }
+            endpoint.getModels().clear();
             logger.info("Model {} unregistered.", modelName);
         } else {
             ModelInfo model = endpoint.remove(version);

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfEngine.java
Patch:
@@ -103,7 +103,7 @@ public boolean hasCapability(String capability) {
             return true;
         } else if (StandardCapabilities.CUDA.equals(capability)) {
             TF_DeviceList deviceList = null;
-            try (PointerScope scope = new PointerScope()) {
+            try (PointerScope ignore = new PointerScope()) {
                 TF_Status status = tensorflow.TF_NewStatus();
                 deviceList = tensorflow.TFE_ContextListDevices(eagerSessionHandle.get(), status);
                 int deviceCount = tensorflow.TF_DeviceListCount(deviceList);

File: api/src/main/java/ai/djl/Application.java
Patch:
@@ -181,6 +181,9 @@ public interface CV {
          * String}&gt;.
          */
         Application WORD_RECOGNITION = new Application("cv/word_recognition");
+
+        /** An application that accepts a seed and returns generated images. */
+        Application GAN = new Application("cv/gan");
     }
 
     /** The common set of applications for natural language processing (text data). */

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/PtModelZoo.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.modality.cv.zoo.ImageClassificationModelLoader;
 import ai.djl.pytorch.engine.PtEngine;
+import ai.djl.pytorch.zoo.cv.gan.BigGANModelLoader;
 import ai.djl.pytorch.zoo.cv.objectdetection.PtSsdModelLoader;
 import ai.djl.pytorch.zoo.nlp.qa.BertQAModelLoader;
 import ai.djl.pytorch.zoo.nlp.sentimentanalysis.DistilBertSentimentAnalysisModelLoader;
@@ -43,6 +44,8 @@ public class PtModelZoo implements ModelZoo {
     public static final DistilBertSentimentAnalysisModelLoader DB_SENTIMENT_ANALYSIS =
             new DistilBertSentimentAnalysisModelLoader(REPOSITORY);
 
+    public static final BigGANModelLoader BIG_GAN = new BigGANModelLoader(REPOSITORY);
+
     /** {@inheritDoc} */
     @Override
     public String getGroupId() {

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -26,6 +26,7 @@
 import ai.djl.util.Preconditions;
 import java.nio.Buffer;
 import java.nio.ByteBuffer;
+import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
@@ -171,9 +172,7 @@ public NDArray stopGradient() {
     /** {@inheritDoc} */
     @Override
     public String[] toStringArray() {
-        // TODO: Parse String Array from bytes[]
-        throw new UnsupportedOperationException(
-                "TensorFlow does not supporting printing String NDArray");
+        return new String[] {JavacppUtils.getString(getHandle(), StandardCharsets.UTF_8)};
     }
 
     /** {@inheritDoc} */

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpEngine.java
Patch:
@@ -80,7 +80,7 @@ public String getVersion() {
     /** {@inheritDoc} */
     @Override
     public boolean hasCapability(String capability) {
-        // TODO: Support GPU
+        // Default device is always CPU
         return false;
     }
 
@@ -106,7 +106,8 @@ public NDManager newBaseManager() {
     @Override
     public NDManager newBaseManager(Device device) {
         if (getAlternativeEngine() != null) {
-            return alternativeEngine.newBaseManager(device);
+            // use CPU as a default to achieve best performance
+            return alternativeEngine.newBaseManager(Device.cpu());
         }
         return PpNDManager.getSystemManager().newSubManager(device);
     }

File: api/src/main/java/ai/djl/ndarray/BaseNDManager.java
Patch:
@@ -169,7 +169,7 @@ public NDArray truncatedNormal(float loc, float scale, Shape shape, DataType dat
             dist[i] = sample;
         }
 
-        return create(dist).addi(loc).muli(scale).reshape(shape).toType(dataType, false);
+        return create(dist).muli(scale).addi(loc).reshape(shape).toType(dataType, false);
     }
 
     /** {@inheritDoc} */

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/ModelZooTest.java
Patch:
@@ -52,7 +52,7 @@ public void testDownloadModels() throws IOException, ModelException {
         if (!Boolean.getBoolean("nightly") || Boolean.getBoolean("offline")) {
             throw new SkipException("Weekly only");
         }
-        if (Calendar.SATURDAY == Calendar.getInstance().get(Calendar.DAY_OF_WEEK)) {
+        if (Calendar.SATURDAY != Calendar.getInstance().get(Calendar.DAY_OF_WEEK)) {
             throw new SkipException("Weekly only");
         }
 

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfSymbolBlock.java
Patch:
@@ -79,7 +79,7 @@ public TfSymbolBlock(SavedModelBundle bundle, String signatureDefKey) {
                             + "not found in Saved Model Bundle."
                             + "Available keys: "
                             + String.join(" ", keys)
-                            + "Please use .optOptions(\"SignatureDefKey\", \"value\") with Criteria.builder to load the model."
+                            + "Please use .optOption(\"SignatureDefKey\", \"value\") with Criteria.builder to load the model."
                             + "Normally the value is \"default\" for TF1.x models and \"serving_default\" for TF2.x models. "
                             + "Refer to: https://www.tensorflow.org/guide/saved_model"
                             + "Loading the model using next available key.");

File: api/src/main/java/ai/djl/BaseModel.java
Patch:
@@ -228,6 +228,9 @@ protected Block loadFromBlockFactory() {
     /** {@inheritDoc} */
     @Override
     public void save(Path modelPath, String newModelName) throws IOException {
+        if (newModelName == null || newModelName.isEmpty()) {
+            newModelName = modelName;
+        }
         if (Files.notExists(modelPath)) {
             Files.createDirectories(modelPath);
         }

File: api/src/main/java/ai/djl/translate/ServingTranslator.java
Patch:
@@ -24,5 +24,5 @@ public interface ServingTranslator extends Translator<Input, Output> {
      *
      * @param arguments the configurations for the {@code Translator} instance
      */
-    void setArguments(Map<String, Object> arguments);
+    void setArguments(Map<String, ?> arguments);
 }

File: api/src/main/java/ai/djl/util/ClassLoaderUtils.java
Patch:
@@ -96,7 +96,7 @@ public static <T> T findImplementation(Path path, String className) {
 
     private static <T> T scanDirectory(ClassLoader cl, Path dir) throws IOException {
         if (!Files.isDirectory(dir)) {
-            logger.debug("Directory not exists: {}", dir);
+            logger.trace("Directory not exists: {}", dir);
             return null;
         }
         Collection<Path> files =

File: serving/serving/src/main/java/ai/djl/serving/wlm/ModelManager.java
Patch:
@@ -115,7 +115,7 @@ public CompletableFuture<ModelInfo> registerModel(
                             throw new BadRequestException(
                                     "Model " + modelName + " is already registered.");
                         }
-                        logger.info("Model {} loaded.", modelInfo.getModelName());
+                        logger.info("Model {} loaded.", modelName);
 
                         return modelInfo;
                     } catch (ModelException | IOException e) {

File: examples/src/main/java/ai/djl/examples/inference/benchmark/util/Arguments.java
Patch:
@@ -258,14 +258,14 @@ public Map<String, String> getCriteria() {
     }
 
     public Class<?> getInputClass() {
-        if (inputShapes == null) {
+        if (inputShapes.isEmpty()) {
             return Image.class;
         }
         return NDList.class;
     }
 
     public Class<?> getOutputClass() {
-        if (inputShapes == null) {
+        if (inputShapes.isEmpty()) {
             if (artifactId != null && artifactId.contains("ssd")) {
                 return DetectedObjects.class;
             }
@@ -275,7 +275,7 @@ public Class<?> getOutputClass() {
     }
 
     public Object getInputData() throws IOException {
-        if (inputShapes == null) {
+        if (inputShapes.isEmpty()) {
             return ImageFactory.getInstance().fromFile(getImageFile());
         }
         return null;

File: examples/src/main/java/ai/djl/examples/inference/benchmark/util/Arguments.java
Patch:
@@ -91,7 +91,7 @@ public Arguments(CommandLine cmd) {
                     long[] array = Arrays.stream(tokens).mapToLong(Long::parseLong).toArray();
                     DataType dataType;
                     String dataTypeStr = matcher.group(4);
-                    if (dataTypeStr == null) {
+                    if (dataTypeStr == null || dataTypeStr.isEmpty()) {
                         dataType = DataType.FLOAT32;
                     } else {
                         switch (dataTypeStr) {

File: serving/central/src/main/java/ai/djl/serving/central/handler/HttpStaticClasspathResourceHandler.java
Patch:
@@ -159,8 +159,6 @@ private String mapToPathInResourceFolder(String uri) {
         StringBuilder newURI = new StringBuilder(RESOURCE_FOLDER);
         if ("/".equals(uri)) {
             newURI.append("/index.html");
-        } else if (uri.startsWith("/modelzoo-frontend.js")) {
-            newURI.append("/dist/").append(uri);
         } else {
             newURI.append(uri);
         }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -472,6 +472,8 @@ native long moduleLoad(
 
     native long moduleForward(long moduleHandle, long[] iValueHandles, boolean isTrain);
 
+    native void setGraphExecutorOptimize(boolean enabled);
+
     native void moduleWrite(long moduleHandle, OutputStream os, byte[] buffer, boolean writeSize);
 
     native long[] moduleGetParams(long moduleHandle);

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -170,10 +170,11 @@ public boolean matches(Platform system) {
         }
         // if system Machine is GPU
         if (system.flavor.startsWith("cu")) {
+            // system flavor doesn't contain mkl, but MXNet has: cu110mkl
             return "".equals(flavor)
                     || "cpu".equals(flavor)
                     || "mkl".equals(flavor)
-                    || flavor.equals(system.flavor);
+                    || flavor.startsWith(system.flavor);
         }
         return "".equals(flavor) || "cpu".equals(flavor) || "mkl".equals(flavor);
     }

File: examples/src/test/java/ai/djl/examples/inference/ListModelsTest.java
Patch:
@@ -32,7 +32,7 @@ public class ListModelsTest {
 
     @AfterClass
     public void tearDown() {
-        System.setProperty("ai.djl.repository.zoo.location", "");
+        System.clearProperty("ai.djl.repository.zoo.location");
     }
 
     @Test

File: extensions/hadoop/src/test/java/ai/djl/hadoop/hdfs/HdfsRepositoryTest.java
Patch:
@@ -45,7 +45,7 @@ public void setup() throws IOException {
 
         System.setProperty("DJL_CACHE_DIR", "build/cache");
         String userHome = System.getProperty("user.home");
-        System.setProperty("ENGINE_CACHE_DIR", userHome);
+        System.setProperty("ENGINE_CACHE_DIR", userHome + "/.djl.ai");
 
         java.nio.file.Path dir = Paths.get("build/test/mlp");
         java.nio.file.Path zipFile = Paths.get("build/test/mlp.zip");
@@ -75,8 +75,8 @@ public void setup() throws IOException {
     @AfterClass
     public void tearDown() {
         miniDfs.shutdown();
-        System.setProperty("DJL_CACHE_DIR", "");
-        System.setProperty("ENGINE_CACHE_DIR", "");
+        System.clearProperty("DJL_CACHE_DIR");
+        System.clearProperty("ENGINE_CACHE_DIR");
     }
 
     @Test

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/ModelZooTest.java
Patch:
@@ -37,12 +37,13 @@ public void setUp() {
         // force downloading without cache in .djl.ai folder.
         System.setProperty("DJL_CACHE_DIR", "build/cache");
         String userHome = System.getProperty("user.home");
-        System.setProperty("ENGINE_CACHE_DIR", userHome);
+        System.setProperty("ENGINE_CACHE_DIR", userHome + "/.djl.ai");
     }
 
     @AfterClass
     public void tearDown() {
-        System.setProperty("DJL_CACHE_DIR", "");
+        System.clearProperty("DJL_CACHE_DIR");
+        System.clearProperty("ENGINE_CACHE_DIR");
     }
 
     @Test

File: pytorch/pytorch-engine/src/test/java/ai/djl/pytorch/integration/LibUtilsTest.java
Patch:
@@ -27,7 +27,7 @@ public void setup() {
 
     @AfterClass
     public void teardown() {
-        System.setProperty("ai.djl.pytorch.native_helper", "");
+        System.clearProperty("ai.djl.pytorch.native_helper");
     }
 
     @Test

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -542,7 +542,6 @@ public void testTile() {
             Assert.assertEquals(array.tile(1, 3), expected);
             Assert.assertEquals(array.tile(3), expected);
 
-
             // zero-dim
             array = manager.create(new Shape(2, 0));
             expected = manager.create(new Shape(2, 0));

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfSymbolBlock.java
Patch:
@@ -111,7 +111,8 @@ protected NDList forwardInternal(
             // if no name specified in input array or
             // the input order matches inputDescriptions
             // use default order from translator
-            if (currentNDArray.getName().isEmpty() || currentNDArray.getName().equals(inputName)) {
+            String name = currentNDArray.getName();
+            if (name == null || name.isEmpty() || name.equals(inputName)) {
                 inputTensorHandles[i] = JavacppUtils.resolveTFETensor(currentNDArray.getHandle());
                 continue;
             }

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -540,6 +540,8 @@ public void testTile() {
 
             expected = manager.create(new float[] {5f, 5f, 5f}, new Shape(1, 3));
             Assert.assertEquals(array.tile(1, 3), expected);
+            Assert.assertEquals(array.tile(3), expected);
+
 
             // zero-dim
             array = manager.create(new Shape(2, 0));

File: integration/src/test/translator/MyTranslator.java
Patch:
@@ -49,7 +49,7 @@ public Output processOutput(TranslatorContext ctx, NDList list) {
 
         Input input = (Input) ctx.getAttachment("input");
         Output output = new Output(input.getRequestId(), 200, "OK");
-        output.setContent(JsonUtils.GSON_PRETTY.toJson(classifications));
+        output.setContent(classifications.toJson());
         return output;
     }
 

File: serving/serving-plugins/static-file-plugin/src/main/java/ai/djl/serving/plugins/StaticFileRequestHandler.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * A HTTP endpoint handler to sends static-resources as response to a client request.
  *
- * <p>This classs is registered by the model-server as a HTTP endpoint handler.
+ * <p>This class is registered by the model-server as a HTTP endpoint handler.
  *
  * @author erik.bamberg@web.de
  */

File: serving/serving/src/test/java/ai/djl/serving/ModelServerTest.java
Patch:
@@ -426,8 +426,8 @@ private void testInvalidRootRequest() throws InterruptedException {
 
         if (!System.getProperty("os.name").startsWith("Win")) {
             ErrorResponse resp = JsonUtils.GSON.fromJson(result, ErrorResponse.class);
-            Assert.assertEquals(resp.getCode(), HttpResponseStatus.METHOD_NOT_ALLOWED.code());
-            Assert.assertEquals(resp.getMessage(), ERROR_METHOD_NOT_ALLOWED);
+            Assert.assertEquals(resp.getCode(), HttpResponseStatus.NOT_FOUND.code());
+            Assert.assertEquals(resp.getMessage(), ERROR_NOT_FOUND);
         }
     }
 

File: ml/xgboost/src/main/java/ai/djl/ml/xgboost/XgbEngine.java
Patch:
@@ -30,6 +30,7 @@
 public final class XgbEngine extends Engine {
 
     public static final String ENGINE_NAME = "XGBoost";
+    static final int RANK = 10;
 
     private XgbEngine() {}
 
@@ -47,7 +48,7 @@ public String getEngineName() {
     /** {@inheritDoc} */
     @Override
     public int getRank() {
-        return 10;
+        return RANK;
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/modality/cv/output/BoundingBox.java
Patch:
@@ -28,10 +28,10 @@ public interface BoundingBox extends Serializable {
      * Returns an iterator object that iterates along the {@code BoundingBox} boundary and provides
      * access to the geometry of the {@code BoundingBox} outline.
      *
-     * @return a {@code PathIterator} object, which independently traverses the geometry of the
-     *     {@code BoundingBox}
+     * @return a {@code Iterable} object, which independently traverses the geometry of the {@code
+     *     BoundingBox}
      */
-    PathIterator getPath();
+    Iterable<Point> getPath();
 
     /**
      * Returns the top left point of the bounding box.

File: basicdataset/src/main/java/ai/djl/basicdataset/cv/BananaDetection.java
Patch:
@@ -129,8 +129,7 @@ public void prepare(Progress progress) throws IOException, TranslateException {
                 long objectClass = label.get(0).longValue();
                 Rectangle objectLocation =
                         new Rectangle(
-                                new Point(label.get(1), label.get(2)),
-                                new Point(label.get(3), label.get(4)));
+                                new Point(label.get(1), label.get(2)), label.get(3), label.get(4));
                 labels.add(objectClass, objectLocation);
             }
         }

File: basicdataset/src/main/java/ai/djl/basicdataset/cv/CocoDetection.java
Patch:
@@ -126,8 +126,7 @@ private PairList<Long, Rectangle> getLabels(CocoUtils coco, long imageId) {
             if (annotation.getArea() > 0) {
                 double[] box = annotation.getBoundingBox();
                 long labelClass = coco.mapCategoryId(annotation.getCategoryId());
-                Rectangle objectLocation =
-                        new Rectangle(new Point(box[0], box[1]), new Point(box[2], box[3]));
+                Rectangle objectLocation = new Rectangle(new Point(box[0], box[1]), box[2], box[3]);
                 label.add(labelClass, objectLocation);
             }
         }

File: basicdataset/src/main/java/ai/djl/basicdataset/cv/PikachuDetection.java
Patch:
@@ -107,16 +107,15 @@ public void prepare(Progress progress) throws IOException {
                 long objectClass = label.get(4).longValue();
                 Rectangle objectLocation =
                         new Rectangle(
-                                new Point(label.get(5), label.get(6)),
-                                new Point(label.get(7), label.get(8)));
+                                new Point(label.get(5), label.get(6)), label.get(7), label.get(8));
                 labels.add(objectClass, objectLocation);
             }
         }
         prepared = true;
     }
 
     @Override
-    public PairList<Long, Rectangle> getObjects(long index) throws IOException {
+    public PairList<Long, Rectangle> getObjects(long index) {
         return new PairList<>(Collections.singletonList(labels.get((int) index)));
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngine.java
Patch:
@@ -148,6 +148,7 @@ public ParameterServer newParameterServer(Optimizer optimizer) {
     /** {@inheritDoc} */
     @Override
     public void setRandomSeed(int seed) {
+        super.setRandomSeed(seed);
         JnaUtils.randomSeed(seed);
         RandomUtils.RANDOM.setSeed(seed);
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -200,7 +200,6 @@ public NDArray toDevice(Device device, boolean copy) {
         if (device.equals(getDevice()) && !copy) {
             return this;
         }
-        // TODO support copy
         return duplicate(getManager(), getShape(), getDataType(), device, getName());
     }
 
@@ -210,7 +209,6 @@ public NDArray toType(DataType dataType, boolean copy) {
         if (dataType.equals(getDataType()) && !copy) {
             return this;
         }
-        // TODO support copy
         return duplicate(getManager(), getShape(), dataType, getDevice(), getName());
     }
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngine.java
Patch:
@@ -115,6 +115,7 @@ public GradientCollector newGradientCollector() {
     /** {@inheritDoc} */
     @Override
     public void setRandomSeed(int seed) {
+        super.setRandomSeed(seed);
         JniUtils.setSeed(seed);
         RandomUtils.RANDOM.setSeed(seed);
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -309,7 +309,7 @@ public static PtNDArray createSparseCoo(PtNDArray indices, PtNDArray values, Sha
                         shape.getShape(), indices.getHandle(), values.getHandle(), false));
     }
 
-    public static PtNDArray to(PtNDArray ndArray, DataType dataType, Device device, boolean copy) {
+    public static PtNDArray to(PtNDArray ndArray, DataType dataType, Device device) {
         PtNDManager manager = ndArray.getManager();
         // the device of the manager should always match the one in NDArray which the manager attach
         // to
@@ -324,8 +324,7 @@ public static PtNDArray to(PtNDArray ndArray, DataType dataType, Device device,
                         new int[] {
                             PtDeviceType.toDeviceType(device),
                             device.equals(Device.cpu()) ? -1 : device.getDeviceId()
-                        },
-                        copy));
+                        }));
     }
 
     public static PtNDArray toSparse(PtNDArray ndArray) {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -50,7 +50,7 @@ private PyTorchLibrary() {}
 
     native int torchLayout(long handle);
 
-    native long torchTo(long handle, int dType, int[] device, boolean copy);
+    native long torchTo(long handle, int dType, int[] device);
 
     native long torchGetItem(long handle, long index);
 

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/javacpp/LibUtils.java
Patch:
@@ -11,7 +11,7 @@
  * and limitations under the License.
  */
 
-package ai.djl.tensorflow.engine;
+package ai.djl.tensorflow.engine.javacpp;
 
 import ai.djl.util.Platform;
 import ai.djl.util.Utils;
@@ -48,6 +48,7 @@ public static void loadLibrary() {
             String path = new File(libName).getParentFile().toString();
             System.setProperty("org.bytedeco.javacpp.platform.preloadpath", path);
             // workaround javacpp physical memory check bug
+            System.setProperty("org.bytedeco.javacpp.maxBytes", "0");
             System.setProperty("org.bytedeco.javacpp.maxPhysicalBytes", "0");
         }
         // defer to tensorflow-core-api to handle loading native library.

File: testing/src/main/java/ai/djl/testing/Assertions.java
Patch:
@@ -87,7 +87,7 @@ public static void assertAlmostEquals(
             double a = actualDoubleArray[i].doubleValue();
             double b = expectedDoubleArray[i].doubleValue();
             if (Math.abs(a - b) > (atol + rtol * Math.abs(b))) {
-                throw new AssertionError(getDefaultErrorMessage(actual, expected));
+                throw new AssertionError("Expected:" + b + " but got " + a);
             }
         }
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngine.java
Patch:
@@ -73,7 +73,7 @@ public int getRank() {
     /** {@inheritDoc} */
     @Override
     public String getVersion() {
-        return "1.8.0";
+        return "1.8.1";
     }
 
     /** {@inheritDoc} */

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -386,9 +386,9 @@ public NDArray booleanMask(NDArray index, int axis) {
     /** {@inheritDoc} */
     @Override
     public NDArray sequenceMask(NDArray sequenceLength, float value) {
-        if (getShape().dimension() < 3 || getShape().isScalar() || getShape().hasZeroDimension()) {
+        if (getShape().dimension() < 2 || getShape().isScalar() || getShape().hasZeroDimension()) {
             throw new IllegalArgumentException(
-                    "sequenceMask is not supported for NDArray with less than 3 dimensions");
+                    "sequenceMask is not supported for NDArray with less than 2 dimensions");
         }
         Shape expectedSequenceLengthShape = new Shape(getShape().get(0));
         if (!sequenceLength.getShape().equals(expectedSequenceLengthShape)) {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngine.java
Patch:
@@ -73,7 +73,7 @@ public int getRank() {
     /** {@inheritDoc} */
     @Override
     public String getVersion() {
-        return "1.7.1";
+        return "1.8.0";
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/util/Platform.java
Patch:
@@ -172,6 +172,6 @@ public boolean matches(Platform system) {
         if (system.flavor.startsWith("cu")) {
             return "".equals(flavor) || "cpu".equals(flavor) || flavor.equals(system.flavor);
         }
-        return "".equals(flavor) || "cpu".equals(flavor);
+        return "".equals(flavor) || "cpu".equals(flavor) || "mkl".equals(flavor);
     }
 }

File: api/src/main/java/ai/djl/repository/FilenameUtils.java
Patch:
@@ -65,7 +65,7 @@ public static String getNamePart(String name) {
             return name.substring(0, name.length() - 7);
         } else if (name.endsWith(".tar.z")) {
             return name.substring(0, name.length() - 6);
-        } else if (name.endsWith(".tgz") || name.endsWith(".zip")) {
+        } else if (name.endsWith(".tgz") || name.endsWith(".zip") || name.endsWith(".tar")) {
             return name.substring(0, name.length() - 4);
         } else if (name.endsWith(".gz")) {
             return name.substring(0, name.length() - 3);

File: serving/src/main/java/ai/djl/serving/ModelServer.java
Patch:
@@ -300,7 +300,7 @@ private void initModelStore() throws IOException {
             int workers = configManager.getDefaultWorkers();
             CompletableFuture<ModelInfo> future =
                     modelManager.registerModel(
-                            null,
+                            ModelInfo.inferModelNameFromUrl(url),
                             url,
                             configManager.getBatchSize(),
                             configManager.getMaxBatchDelay(),

File: serving/src/main/java/ai/djl/serving/Arguments.java
Patch:
@@ -95,7 +95,7 @@ public Path getConfigFile() {
         if (Files.isRegularFile(file)) {
             return file;
         }
-        file = modelServerHome.resolve("conf/config.properties");
+        file = modelServerHome.resolve("config.properties");
         if (Files.isRegularFile(file)) {
             return file;
         }

File: serving/src/main/java/ai/djl/serving/util/Connector.java
Patch:
@@ -105,7 +105,7 @@ public static Connector parse(String binding, ConnectorType connectorType) {
         } else {
             port = Integer.parseInt(listeningPort);
         }
-        if (port >= Short.MAX_VALUE) {
+        if (port >= 65535) {
             throw new IllegalArgumentException("Invalid port number: " + binding);
         }
         return new Connector(port, false, host, String.valueOf(port), ssl, connectorType);

File: examples/src/main/java/ai/djl/examples/training/TrainSentimentAnalysis.java
Patch:
@@ -234,7 +234,7 @@ public NDList processInput(TranslatorContext ctx, String input) throws Embedding
             for (TextProcessor processor : TEXT_PROCESSORS) {
                 tokens = processor.preprocess(tokens);
             }
-            NDArray array = textEmbedding.embedText(manager, tokens);
+            NDArray array = manager.create(textEmbedding.preprocessTextToEmbed(tokens));
             return new NDList(array);
         }
 
@@ -243,7 +243,7 @@ public NDList processInput(TranslatorContext ctx, String input) throws Embedding
         public Batchifier getBatchifier() {
             return PaddingStackBatchifier.builder()
                     .optIncludeValidLengths(false)
-                    .addPad(0, 0, m -> m.ones(new Shape(1, 50)).mul(paddingTokenValue))
+                    .addPad(0, 0, m -> m.ones(new Shape(1)).mul(paddingTokenValue))
                     .build();
         }
     }

File: central/src/main/java/ai/djl/serving/central/HttpStaticFileServerInitializer.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.serving.central;
 
 import ai.djl.serving.central.handler.HttpStaticFileServerHandler;
+import ai.djl.serving.central.handler.ModelDownloadHandler;
 import ai.djl.serving.central.handler.ModelMetaDataHandler;
 import io.netty.channel.ChannelInitializer;
 import io.netty.channel.ChannelPipeline;
@@ -54,6 +55,7 @@ public void initChannel(SocketChannel ch) {
         pipeline.addLast(new HttpServerCodec());
         pipeline.addLast(new HttpObjectAggregator(65536));
         pipeline.addLast(new ChunkedWriteHandler());
+        pipeline.addLast(new ModelDownloadHandler());
         pipeline.addLast(new ModelMetaDataHandler());
         pipeline.addLast(new HttpStaticFileServerHandler());
     }

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayCreationOpTest.java
Patch:
@@ -70,7 +70,7 @@ public void testCreateCSRMatrix() {
             long[] indptr = {0, 2, 2, 3};
             long[] indices = {0, 2, 1};
             NDArray nd = manager.createCSR(buf, indptr, indices, new Shape(3, 4));
-            float[] array = nd.toFloatArray();
+            float[] array = nd.toDense().toFloatArray();
             Assert.assertEquals(array[0], expected[0]);
             Assert.assertEquals(array[2], expected[1]);
             Assert.assertEquals(array[9], expected[2]);
@@ -85,7 +85,7 @@ public void testCreateRowSparseMatrix() {
             FloatBuffer buf = FloatBuffer.wrap(expected);
             long[] indices = {0, 1, 3};
             NDArray nd = manager.createRowSparse(buf, new Shape(3, 2), indices, new Shape(4, 2));
-            float[] array = nd.toFloatArray();
+            float[] array = nd.toDense().toFloatArray();
             Assert.assertEquals(array[0], expected[0]);
             Assert.assertEquals(array[1], expected[1]);
             Assert.assertEquals(array[2], expected[2]);

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -290,6 +290,9 @@ public String[] toStringArray() {
     /** {@inheritDoc} */
     @Override
     public ByteBuffer toByteBuffer() {
+        if (getSparseFormat() != SparseFormat.DENSE) {
+            throw new IllegalStateException("Require Dense NDArray, actual " + getSparseFormat());
+        }
         Shape sh = getShape();
         DataType dType = getDataType();
         long product = sh.size();

File: api/src/main/java/ai/djl/ndarray/NDArrayAdapter.java
Patch:
@@ -83,7 +83,7 @@ default SparseFormat getSparseFormat() {
 
     /** {@inheritDoc} */
     @Override
-    default NDManager attach(NDManager manager) {
+    default void attach(NDManager manager) {
         throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
 

File: dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDManager.java
Patch:
@@ -54,7 +54,7 @@ public ByteBuffer allocateDirect(int capacity) {
     @Override
     public DlrNDManager newSubManager(Device dev) {
         DlrNDManager manager = new DlrNDManager(this, dev);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -105,11 +105,11 @@ private static final class SystemManager extends DlrNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/CachedOp.java
Patch:
@@ -73,7 +73,7 @@ public CachedOp(
         this.dataIndicesMap = dataIndices.toMap();
         // holds all parameter and data NDArray values, final inputs to CachedOp
         this.manager = manager;
-        manager.attach(getUid(), this);
+        manager.attachInternal(getUid(), this);
     }
 
     /**
@@ -139,7 +139,7 @@ public NDList forward(ParameterStore parameterStore, NDList data, boolean traini
     public void close() {
         Pointer pointer = handle.getAndSet(null);
         if (pointer != null) {
-            manager.detach(getUid());
+            manager.detachInternal(getUid());
             JnaUtils.freeCachedOp(pointer);
             manager = null;
         }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -272,7 +272,7 @@ public NDArray randomMultinomial(int n, NDArray pValues) {
     @Override
     public MxNDManager newSubManager(Device dev) {
         MxNDManager manager = new MxNDManager(this, dev, version);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -386,11 +386,11 @@ private static final class SystemManager extends MxNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/Symbol.java
Patch:
@@ -52,7 +52,7 @@ public class Symbol extends NativeResource<Pointer> {
     Symbol(MxNDManager manager, Pointer pointer) {
         super(pointer);
         this.manager = manager;
-        manager.attach(getUid(), this);
+        manager.attachInternal(getUid(), this);
         //        argParams = JnaUtils.listSymbolArguments(getHandle());
         //        auxParams = JnaUtils.listSymbolAuxiliaryStates(getHandle());
     }
@@ -311,7 +311,7 @@ public String toString() {
     public void close() {
         Pointer pointer = handle.getAndSet(null);
         if (pointer != null) {
-            manager.detach(getUid());
+            manager.detachInternal(getUid());
             JnaUtils.freeSymbol(pointer);
             manager = null;
         }

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -136,7 +136,7 @@ public NDArray ones(Shape shape, DataType dataType) {
     @Override
     public OrtNDManager newSubManager(Device device) {
         OrtNDManager manager = new OrtNDManager(this, device, env);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -155,11 +155,11 @@ private static final class SystemManager extends OrtNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -51,7 +51,7 @@ public PpNDManager newSubManager() {
     @Override
     public PpNDManager newSubManager(Device device) {
         PpNDManager manager = new PpNDManager(this, device);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -156,11 +156,11 @@ private static final class SystemManager extends PpNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -181,7 +181,7 @@ public NDArray randomNormal(float loc, float scale, Shape shape, DataType dataTy
     @Override
     public PtNDManager newSubManager(Device device) {
         PtNDManager manager = new PtNDManager(this, device);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -200,11 +200,11 @@ private static final class SystemManager extends PtNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtSymbolBlock.java
Patch:
@@ -65,7 +65,7 @@ public PtSymbolBlock(PtNDManager manager, long handle) {
         this.handle = new AtomicReference<>(handle);
         this.manager = manager;
         uid = String.valueOf(handle);
-        manager.attach(uid, this);
+        manager.attachInternal(uid, this);
         // training mode is on by default
         isTrain = true;
         first = true;
@@ -90,7 +90,7 @@ public void close() {
         Long pointer = handle.getAndSet(null);
         if (pointer != null) {
             JniUtils.deleteModule(pointer);
-            manager.detach(uid);
+            manager.detachInternal(uid);
             manager = null;
         }
     }
@@ -177,7 +177,7 @@ public void loadParameters(NDManager manager, DataInputStream is)
         long rawHandle = JniUtils.loadModuleHandle(is, manager.getDevice(), true);
         this.handle = new AtomicReference<>(rawHandle);
         uid = String.valueOf(rawHandle);
-        manager.attach(uid, this);
+        manager.attachInternal(uid, this);
     }
 
     /**

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -423,7 +423,7 @@ public NDArray randomNormal(float loc, float scale, Shape shape, DataType dataTy
     @Override
     public TfNDManager newSubManager(Device device) {
         TfNDManager manager = new TfNDManager(this, device);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         // initialize eager sessions and operators only for sub managers
         manager.getEagerSession();
         manager.getTf();
@@ -447,11 +447,11 @@ private static final class SystemManager extends TfNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resrouceId, AutoCloseable resource) {}
+        public void attachInternal(String resrouceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDManager.java
Patch:
@@ -132,7 +132,7 @@ public NDArray ones(Shape shape, DataType dataType) {
     @Override
     public TfLiteNDManager newSubManager(Device device) {
         TfLiteNDManager manager = new TfLiteNDManager(this, device);
-        attach(manager.uid, manager);
+        attachInternal(manager.uid, manager);
         return manager;
     }
 
@@ -151,11 +151,11 @@ private static final class SystemManager extends TfLiteNDManager {
 
         /** {@inheritDoc} */
         @Override
-        public void attach(String resourceId, AutoCloseable resource) {}
+        public void attachInternal(String resourceId, AutoCloseable resource) {}
 
         /** {@inheritDoc} */
         @Override
-        public void detach(String resourceId) {}
+        public void detachInternal(String resourceId) {}
 
         /** {@inheritDoc} */
         @Override

File: api/src/main/java/ai/djl/training/listener/SaveModelTrainingListener.java
Patch:
@@ -108,7 +108,8 @@ public void setOverrideModelName(String overrideModelName) {
     }
 
     /**
-     * Returns the checkpoint frequency (or -1 for no checkpointing).
+     * Returns the checkpoint frequency (or -1 for no checkpointing) in {@link
+     * SaveModelTrainingListener}.
      *
      * @return the checkpoint frequency (or -1 for no checkpointing)
      */
@@ -117,7 +118,7 @@ public int getCheckpoint() {
     }
 
     /**
-     * Sets the checkpoint frequency.
+     * Sets the checkpoint frequency in {@link SaveModelTrainingListener}.
      *
      * @param checkpoint how many epochs between checkpoints (or -1 for no checkpoints)
      */

File: api/src/main/java/ai/djl/modality/nlp/Decoder.java
Patch:
@@ -64,8 +64,8 @@ public void initializeChildBlocks(NDManager manager, DataType dataType, Shape...
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
-        return block.getOutputShapes(manager, inputShapes);
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
+        return block.getOutputShapes(inputShapes);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/modality/nlp/Encoder.java
Patch:
@@ -79,8 +79,8 @@ public void initializeChildBlocks(NDManager manager, DataType dataType, Shape...
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
-        return block.getOutputShapes(manager, inputShapes);
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
+        return block.getOutputShapes(inputShapes);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/modality/nlp/embedding/TrainableTextEmbedding.java
Patch:
@@ -88,7 +88,7 @@ public void initializeChildBlocks(NDManager manager, DataType dataType, Shape...
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
-        return trainableWordEmbedding.getOutputShapes(manager, inputShapes);
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
+        return trainableWordEmbedding.getOutputShapes(inputShapes);
     }
 }

File: api/src/main/java/ai/djl/nn/AbstractSymbolBlock.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.nn;
 
-import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 
 /** {@code AbstractSymbolBlock} is an abstract implementation of {@link SymbolBlock}. */
@@ -29,7 +28,7 @@ public AbstractSymbolBlock(byte version) {
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         throw new UnsupportedOperationException("not implement!");
     }
 }

File: api/src/main/java/ai/djl/nn/LambdaBlock.java
Patch:
@@ -70,11 +70,11 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
-        try (NDManager subManager = manager.newSubManager()) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
+        try (NDManager manager = NDManager.newBaseManager()) {
             NDList input = new NDList(inputShapes.length);
             for (Shape shape : inputShapes) {
-                input.add(subManager.zeros(shape));
+                input.add(manager.zeros(shape));
             }
             NDList output = lambda.apply(input);
             Shape[] outputShapes = new Shape[output.size()];

File: api/src/main/java/ai/djl/nn/core/ConstantEmbedding.java
Patch:
@@ -57,7 +57,7 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[] {inputShapes[0].addAll(embedding.getShape())};
     }
 

File: api/src/main/java/ai/djl/nn/norm/Dropout.java
Patch:
@@ -15,7 +15,6 @@
 import ai.djl.MalformedModelException;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
-import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.internal.NDArrayEx;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.AbstractBlock;
@@ -76,7 +75,7 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[] {inputShapes[0]};
     }
 

File: api/src/main/java/ai/djl/nn/transformer/BertNextSentenceBlock.java
Patch:
@@ -53,7 +53,7 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[] {new Shape(inputShapes[0].get(0), 2)};
     }
 }

File: api/src/main/java/ai/djl/nn/transformer/BertPretrainingBlock.java
Patch:
@@ -51,7 +51,8 @@ public BertPretrainingBlock(final BertBlock.Builder builder) {
     @Override
     public void initializeChildBlocks(NDManager manager, DataType dataType, Shape... inputShapes) {
         inputNames = Arrays.asList("tokenIds", "typeIds", "sequenceMasks", "maskedIndices");
-        Shape[] bertOutputShapes = bertBlock.initialize(manager, dataType, inputShapes);
+        bertBlock.initialize(manager, dataType, inputShapes);
+        Shape[] bertOutputShapes = bertBlock.getOutputShapes(inputShapes);
         Shape embeddedSequence = bertOutputShapes[0];
         Shape pooledOutput = bertOutputShapes[1];
         Shape maskedIndices = inputShapes[2];
@@ -97,7 +98,7 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         long batchSize = inputShapes[0].get(0);
         long maskedIndexCount = inputShapes[3].get(1);
         return new Shape[] {

File: api/src/main/java/ai/djl/nn/transformer/ScaledDotProductAttentionBlock.java
Patch:
@@ -146,7 +146,7 @@ public Linear getResultProjection() {
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         // Return shape is the shape of the query. For 2 or less inputs we have self-attention, i.e.
         // the shape of the output is the shape of the input
         if (inputShapes.length == 1 || inputShapes.length == 2) {

File: api/src/main/java/ai/djl/nn/transformer/TransformerEncoderBlock.java
Patch:
@@ -82,7 +82,7 @@ public TransformerEncoderBlock(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return inputShapes;
     }
 

File: api/src/main/java/ai/djl/training/initializer/XavierInitializer.java
Patch:
@@ -80,7 +80,7 @@ public XavierInitializer(RandomType randomType, FactorType factorType, float mag
 
     /** Creates a new instance of {@code XavierInitializer}. */
     public XavierInitializer() {
-        this(RandomType.UNIFORM, FactorType.AVG, 3f);
+        this(RandomType.UNIFORM, FactorType.AVG, 6f);
     }
 
     /** {@inheritDoc} */

File: api/src/test/java/ai/djl/nn/convolutional/ShapeUtils.java
Patch:
@@ -31,7 +31,7 @@ private ShapeUtils() {}
      * @return the corresponding output shape for the provided input
      */
     public static Shape outputShapeForBlock(NDManager manager, Block block, Shape inputShape) {
-        Shape[] outputs = block.getOutputShapes(manager, new Shape[] {inputShape});
+        Shape[] outputs = block.getOutputShapes(new Shape[] {inputShape});
         return outputs[0];
     }
 

File: basicdataset/src/test/java/ai/djl/basicdataset/AirfoilRandomAccessTest.java
Patch:
@@ -17,6 +17,7 @@
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
@@ -48,7 +49,7 @@ public class AirfoilRandomAccessTest {
     public void testAirfoilRemote() throws IOException, TranslateException {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
-                        .optInitializer(Initializer.ONES);
+                        .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
         try (Model model = Model.newInstance("model")) {
             model.setBlock(Blocks.identityBlock());

File: basicdataset/src/test/java/ai/djl/basicdataset/AmesRandomAccessTest.java
Patch:
@@ -17,6 +17,7 @@
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
@@ -48,7 +49,7 @@ public class AmesRandomAccessTest {
     public void testAmesRandomAccessRemote() throws IOException, TranslateException {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
-                        .optInitializer(Initializer.ONES);
+                        .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
         try (Model model = Model.newInstance("model")) {
             model.setBlock(Blocks.identityBlock());

File: basicdataset/src/test/java/ai/djl/basicdataset/PikachuTest.java
Patch:
@@ -16,6 +16,7 @@
 import ai.djl.basicdataset.cv.PikachuDetection;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
@@ -42,7 +43,7 @@ public void testPikachuRemote() throws IOException, TranslateException {
                         .build();
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
-                        .optInitializer(new NormalInitializer(0.01f));
+                        .optInitializer(new NormalInitializer(0.01f), Parameter.Type.WEIGHT);
         try (Model model = Model.newInstance("model")) {
             model.setBlock(Blocks.identityBlock());
             try (Trainer trainer = model.newTrainer(config)) {

File: examples/src/main/java/ai/djl/examples/training/TrainBertOnCode.java
Patch:
@@ -20,6 +20,7 @@
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
+import ai.djl.nn.Parameter;
 import ai.djl.nn.transformer.BertBlock;
 import ai.djl.nn.transformer.BertPretrainingBlock;
 import ai.djl.nn.transformer.BertPretrainingLoss;
@@ -135,7 +136,8 @@ private static Model createBertPretrainingModel(Dictionary dictionary) {
         model.setBlock(
                 new BertPretrainingBlock(
                         BERT_BUILDER.setTokenDictionarySize(dictionary.tokens.size())));
-        model.getBlock().setInitializer(new TruncatedNormalInitializer(0.02f));
+        model.getBlock()
+                .setInitializer(new TruncatedNormalInitializer(0.02f), Parameter.Type.WEIGHT);
         return model;
     }
 

File: examples/src/main/java/ai/djl/examples/training/TrainMnistWithLSTM.java
Patch:
@@ -31,7 +31,6 @@
 import ai.djl.training.dataset.Dataset;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.initializer.XavierInitializer;
 import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
@@ -119,7 +118,6 @@ public static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
 
         return new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
                 .addEvaluator(new Accuracy())
-                .optInitializer(new XavierInitializer())
                 .optDevices(Device.getDevices(arguments.getMaxGpus()))
                 .addTrainingListeners(TrainingListener.Defaults.logging(outputDir))
                 .addTrainingListeners(listener);

File: integration/src/main/java/ai/djl/integration/tests/modality/nlp/SimpleTextEncoderTest.java
Patch:
@@ -23,7 +23,6 @@
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.recurrent.LSTM;
 import ai.djl.training.ParameterStore;
-import ai.djl.training.initializer.XavierInitializer;
 import java.util.Arrays;
 import org.testng.Assert;
 import org.testng.annotations.Test;
@@ -50,7 +49,6 @@ public void testEncoder() {
                                 .optReturnState(true)
                                 .build());
         try (NDManager manager = NDManager.newBaseManager(TestUtils.getDevices()[0])) {
-            encoder.setInitializer(new XavierInitializer());
             encoder.initialize(manager, DataType.FLOAT32, new Shape(4, 7));
             NDList output =
                     encoder.forward(

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/AlexNetTest.java
Patch:
@@ -159,7 +159,7 @@ public void testOutputShapes() {
         Shape currentShape = x.getShape();
 
         Block alexNet = AlexNet.builder().build();
-        alexNet.setInitializer(Initializer.ONES);
+        alexNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         alexNet.initialize(manager, DataType.FLOAT32, currentShape);
 
         Map<String, Shape> shapeMap = new ConcurrentHashMap<>();
@@ -169,7 +169,7 @@ public void testOutputShapes() {
                     alexNet.getChildren()
                             .get(i)
                             .getValue()
-                            .getOutputShapes(manager, new Shape[] {currentShape});
+                            .getOutputShapes(new Shape[] {currentShape});
             currentShape = newShape[0];
             shapeMap.put(alexNet.getChildren().get(i).getKey(), currentShape);
         }
@@ -188,7 +188,7 @@ public void testForwardMethod() {
         Block alexNet = AlexNet.builder().build();
         int batchSize = 1;
         NDArray x = manager.ones(new Shape(batchSize, 1, 224, 224));
-        alexNet.setInitializer(Initializer.ONES);
+        alexNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         alexNet.initialize(manager, DataType.FLOAT32, x.getShape());
         NDArray xHat =
                 alexNet.forward(new ParameterStore(manager, true), new NDList(x), false)

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/GoogLeNetTest.java
Patch:
@@ -100,7 +100,7 @@ public void testOutputShapes() {
         Shape currentShape = x.getShape();
 
         Block googLeNet = GoogLeNet.builder().build();
-        googLeNet.setInitializer(Initializer.ONES);
+        googLeNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         googLeNet.initialize(manager, DataType.FLOAT32, currentShape);
 
         Map<String, Shape> shapeMap = new ConcurrentHashMap<>();
@@ -111,7 +111,7 @@ public void testOutputShapes() {
                             .getChildren()
                             .get(i)
                             .getValue()
-                            .getOutputShapes(manager, new Shape[] {currentShape});
+                            .getOutputShapes(new Shape[] {currentShape});
             currentShape = newShape[0];
             shapeMap.put(googLeNet.getChildren().get(i).getKey(), currentShape);
         }
@@ -130,7 +130,7 @@ public void testForwardMethod() {
         Block googLeNet = GoogLeNet.builder().build();
         int batchSize = 1;
         NDArray x = manager.ones(new Shape(batchSize, 1, 28, 28));
-        googLeNet.setInitializer(Initializer.ONES);
+        googLeNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         googLeNet.initialize(manager, DataType.FLOAT32, x.getShape());
         NDArray xHat =
                 googLeNet

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/LeNetTest.java
Patch:
@@ -137,7 +137,7 @@ public void testOutputShapes() {
         Shape currentShape = x.getShape();
 
         Block leNet = LeNet.builder().build();
-        leNet.setInitializer(Initializer.ONES);
+        leNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         leNet.initialize(manager, DataType.FLOAT32, currentShape);
 
         Map<String, Shape> shapeMap = new ConcurrentHashMap<>();
@@ -147,7 +147,7 @@ public void testOutputShapes() {
                     leNet.getChildren()
                             .get(i)
                             .getValue()
-                            .getOutputShapes(manager, new Shape[] {currentShape});
+                            .getOutputShapes(new Shape[] {currentShape});
             currentShape = newShape[0];
             shapeMap.put(leNet.getChildren().get(i).getKey(), currentShape);
         }
@@ -165,7 +165,7 @@ public void testForwardMethod() {
         Block leNet = LeNet.builder().build();
         int batchSize = 1;
         NDArray x = manager.ones(new Shape(batchSize, 1, 28, 28));
-        leNet.setInitializer(Initializer.ONES);
+        leNet.setInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         leNet.initialize(manager, DataType.FLOAT32, x.getShape());
         NDArray xHat =
                 leNet.forward(new ParameterStore(manager, true), new NDList(x), true)

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/SqueezenetTest.java
Patch:
@@ -40,7 +40,7 @@ public void testTrain() {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
                         .optDevices(Device.getDevices(2))
-                        .optInitializer(Initializer.ONES);
+                        .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
         Block squeezeNet = SqueezeNet.squeezenet(10);
         try (Model model = Model.newInstance("squeezenet")) {
             model.setBlock(squeezeNet);

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayElementArithmeticOpTest.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.GradientCollector;
@@ -139,7 +140,7 @@ public void testAddScalar() {
             try (Trainer trainer =
                     model.newTrainer(
                             new DefaultTrainingConfig(Loss.l2Loss())
-                                    .optInitializer(Initializer.ONES))) {
+                                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT))) {
                 try (GradientCollector gradCol = trainer.newGradientCollector()) {
                     lhs.attachGradient();
                     result = NDArrays.add(lhs, 2);
@@ -360,7 +361,7 @@ public void testDot() {
             try (Trainer trainer =
                     model.newTrainer(
                             new DefaultTrainingConfig(Loss.l2Loss())
-                                    .optInitializer(Initializer.ONES))) {
+                                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT))) {
                 try (GradientCollector gradCol = trainer.newGradientCollector()) {
                     lhs.attachGradient();
                     result = NDArrays.dot(lhs, rhs);

File: integration/src/main/java/ai/djl/integration/tests/nn/PoolingOperationsTest.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.index.NDIndex;
 import ai.djl.ndarray.types.Shape;
+import ai.djl.nn.Parameter;
 import ai.djl.nn.pooling.Pool;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
@@ -29,7 +30,8 @@
 
 public class PoolingOperationsTest {
     TrainingConfig config =
-            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
+            new DefaultTrainingConfig(Loss.l2Loss())
+                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
     @Test
     public void testMaxPool1d() {

File: integration/src/main/java/ai/djl/integration/tests/nn/ScaledDotProductAttentionBlockTest.java
Patch:
@@ -19,6 +19,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.DataType;
 import ai.djl.ndarray.types.Shape;
+import ai.djl.nn.Parameter;
 import ai.djl.nn.transformer.ScaledDotProductAttentionBlock;
 import ai.djl.training.GradientCollector;
 import ai.djl.training.ParameterStore;
@@ -752,7 +753,7 @@ public void testMaskedAttention() {
                         .optAttentionProbsDropoutProb(0.0f)
                         .build();
 
-        block.setInitializer(new NormalInitializer());
+        block.setInitializer(new NormalInitializer(), Parameter.Type.WEIGHT);
         block.getKeyProjection().setInitializer(keyKernelInitializer, "weight");
         block.getValueProjection().setInitializer(valueKernelInitializer, "weight");
         block.getQueryProjection().setInitializer(queryKernelInitializer, "weight");

File: integration/src/main/java/ai/djl/integration/tests/training/ActivationTest.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Activation;
+import ai.djl.nn.Parameter;
 import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
@@ -30,7 +31,8 @@
 public class ActivationTest {
 
     TrainingConfig config =
-            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
+            new DefaultTrainingConfig(Loss.l2Loss())
+                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
     @Test
     public void testRelu() {

File: integration/src/main/java/ai/djl/integration/tests/training/BlocksTest.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.ParameterStore;
@@ -30,7 +31,8 @@
 public class BlocksTest {
 
     TrainingConfig config =
-            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
+            new DefaultTrainingConfig(Loss.l2Loss())
+                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
     @Test
     public void testFlattenBlock() {

File: integration/src/main/java/ai/djl/integration/tests/training/DatasetTest.java
Patch:
@@ -20,6 +20,7 @@
 import ai.djl.ndarray.types.DataType;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
@@ -49,7 +50,8 @@
 public class DatasetTest {
 
     private TrainingConfig config =
-            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
+            new DefaultTrainingConfig(Loss.l2Loss())
+                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT);
 
     @Test
     public void testSequenceSampler() throws IOException, TranslateException {

File: integration/src/main/java/ai/djl/integration/tests/training/GradientCollectorIntegrationTest.java
Patch:
@@ -19,6 +19,7 @@
 import ai.djl.ndarray.types.DataType;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.nn.core.Linear;
 import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
@@ -49,7 +50,7 @@ public void testAutograd() {
             try (Trainer trainer =
                     model.newTrainer(
                             new DefaultTrainingConfig(Loss.l2Loss())
-                                    .optInitializer(Initializer.ONES))) {
+                                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT))) {
                 try (GradientCollector gradCol = trainer.newGradientCollector()) {
                     NDArray lhs =
                             manager.create(new float[] {6, -9, -12, 15, 0, 4}, new Shape(2, 3));
@@ -87,7 +88,7 @@ public void testTrain() throws IOException, TranslateException {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.l2Loss())
                         .addTrainingListeners(new EvaluatorTrainingListener())
-                        .optInitializer(Initializer.ONES)
+                        .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT)
                         .optOptimizer(optimizer);
 
         try (Model model = Model.newInstance("linear")) {

File: integration/src/main/java/ai/djl/integration/tests/training/ModelTest.java
Patch:
@@ -21,7 +21,6 @@
 import ai.djl.nn.convolutional.Conv2d;
 import ai.djl.nn.norm.BatchNorm;
 import ai.djl.testing.Assertions;
-import ai.djl.training.initializer.XavierInitializer;
 import java.io.IOException;
 import java.nio.file.Paths;
 import org.testng.Assert;
@@ -36,7 +35,6 @@ public void testModelSaveAndLoad() throws IOException, MalformedModelException {
         block.add(BatchNorm.builder().build());
         try (Model saveModel = Model.newInstance("saveModel");
                 Model loadModel = Model.newInstance("loadModel")) {
-            block.setInitializer(new XavierInitializer());
             block.initialize(saveModel.getNDManager(), DataType.FLOAT32, new Shape(1, 3, 32, 32));
             ParameterList savedParameters = block.getParameters();
             saveModel.setBlock(block);

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/integration/MxGradientCollectorIntegrationTest.java
Patch:
@@ -19,6 +19,7 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.nn.Parameter;
 import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.GradientCollector;
@@ -38,7 +39,7 @@ public void testMxAutograd() {
             try (Trainer trainer =
                     model.newTrainer(
                             new DefaultTrainingConfig(Loss.l2Loss())
-                                    .optInitializer(Initializer.ONES))) {
+                                    .optInitializer(Initializer.ONES, Parameter.Type.WEIGHT))) {
                 try (GradientCollector gradCol = trainer.newGradientCollector()) {
                     NDArray lhs =
                             manager.create(new float[] {6, -9, -12, 15, 0, 4}, new Shape(2, 3));

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpSymbolBlock.java
Patch:
@@ -98,7 +98,7 @@ private NDList getOutputs(PpNDArray[] outputs, boolean foreignEngine, NDManager
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[0];
     }
 }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtSymbolBlock.java
Patch:
@@ -155,7 +155,7 @@ public PairList<String, Shape> describeOutput() {
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[0];
     }
 

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfSymbolBlock.java
Patch:
@@ -131,8 +131,8 @@ protected NDList forwardInternal(
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] initialize(NDManager manager, DataType dataType, Shape... inputShapes) {
-        return new Shape[0];
+    public void initialize(NDManager manager, DataType dataType, Shape... inputShapes) {
+        throw new IllegalStateException("TfSymbolBlock can't be initialized");
     }
 
     /** {@inheritDoc} */
@@ -197,7 +197,7 @@ public final PairList<String, Shape> describeOutput() {
 
     /** {@inheritDoc} */
     @Override
-    public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
+    public Shape[] getOutputShapes(Shape[] inputShapes) {
         return new Shape[0];
     }
 

File: extensions/aws-ai/src/test/java/ai/djl/aws/sagemaker/SageMakerTest.java
Patch:
@@ -54,6 +54,7 @@ public void testDeployModel() throws IOException, ModelException {
                     SageMaker.builder()
                             .setModel(model)
                             .optBucketName("djl-sm-test")
+                            .optModelName("resnet")
                             .optContainerImage("125045733377.dkr.ecr.us-east-1.amazonaws.com/djl")
                             .optExecutionRole(
                                     "arn:aws:iam::125045733377:role/service-role/DJLSageMaker-ExecutionRole-20210213T1027050")

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -838,13 +838,13 @@ public void testNorm() {
         try (NDManager manager = NDManager.newBaseManager()) {
             // test 1-D
             NDArray array = manager.create(new float[] {1f, 0.5f, -1f});
-            Assert.assertEquals(array.norm().getFloat(), 1.5f);
+            Assert.assertEquals(array.norm(), manager.create(1.5f));
             // test 2-D
             array = manager.create(new float[][] {{1f, 0.5f}, {-1f, 2f}});
-            Assert.assertEquals(array.norm().getFloat(), 2.5f);
+            Assert.assertEquals(array.norm(), manager.create(2.5f));
             // test scalar
             array = manager.create(new float[] {5f});
-            Assert.assertEquals(array.norm().getFloat(), 5f);
+            Assert.assertEquals(array.norm(), manager.create(5f));
             // test zero-dim
             array = manager.create(new float[] {});
             Assert.assertEquals(array.norm().getFloat(), 0f);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -1379,13 +1379,13 @@ public PtNDArray erfinv() {
     /** {@inheritDoc} */
     @Override
     public NDArray norm(boolean keepDims) {
-        throw new UnsupportedOperationException("Not implemented");
+        return JniUtils.norm(this, 2, new int[] {}, keepDims);
     }
 
     /** {@inheritDoc} */
     @Override
     public NDArray norm(int order, int[] axes, boolean keepDims) {
-        throw new UnsupportedOperationException("Not implemented");
+        return JniUtils.norm(this, order, axes, keepDims);
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -532,4 +532,6 @@ native void sgdUpdate(
             float rescaleGrad,
             float clipGrad,
             float momentum);
+
+    native long torchNorm(long handle, int ord, long[] axis, boolean keepDims);
 }

File: examples/src/main/java/ai/djl/examples/training/TrainCaptcha.java
Patch:
@@ -55,7 +55,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -50,7 +50,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainMnistWithLSTM.java
Patch:
@@ -48,7 +48,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -71,7 +71,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainSentimentAnalysis.java
Patch:
@@ -86,7 +86,7 @@ public static void main(String[] args)
     public static TrainingResult runExample(String[] args)
             throws IOException, ModelNotFoundException, MalformedModelException,
                     TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainSeq2Seq.java
Patch:
@@ -64,7 +64,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainTicTacToe.java
Patch:
@@ -57,7 +57,7 @@ public static void main(String[] args) throws IOException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/TrainWithHpo.java
Patch:
@@ -50,7 +50,7 @@ public static void main(String[] args) throws IOException, TranslateException {
     }
 
     public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainAmazonReviewRanking.java
Patch:
@@ -66,7 +66,7 @@ public static void main(String[] args)
 
     public static TrainingResult runExample(String[] args)
             throws IOException, TranslateException, ModelException, URISyntaxException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -77,7 +77,7 @@ public static void main(String[] args) throws ModelException, IOException, Trans
 
     public static TrainingResult runExample(String[] args)
             throws IOException, ModelException, TranslateException {
-        Arguments arguments = Arguments.parseArgs(args);
+        Arguments arguments = new Arguments().parseArgs(args);
         if (arguments == null) {
             return null;
         }

File: api/src/main/java/ai/djl/nn/transformer/BertMaskedLanguageModelLoss.java
Patch:
@@ -46,7 +46,7 @@ public NDArray evaluate(NDList labels, NDList predictions) {
         int dictionarySize = (int) logProbs.getShape().get(1);
         NDArray targetIds = labels.get(labelIdx).flatten(); // (B * I)
         NDArray mask = labels.get(maskIdx).flatten().toType(DataType.FLOAT32, false); // (B * I)
-        NDArray targetOneHots = MissingOps.oneHot(dictionarySize, targetIds);
+        NDArray targetOneHots = targetIds.oneHot(dictionarySize);
         // Multiplying log_probs and one_hot_labels leaves the log probabilities of the correct
         // entries.
         // By summing we get the total predicition quality. We want to minimize the error,

File: api/src/main/java/ai/djl/nn/transformer/BertNextSentenceLoss.java
Patch:
@@ -42,7 +42,7 @@ public NDArray evaluate(final NDList labels, final NDList predictions) {
         NDArray label = labels.get(labelIdx).toType(DataType.FLOAT32, false);
         // predictions are log(softmax)
         NDArray logPredictions = predictions.get(nextSentencePredictionIdx);
-        NDArray oneHotLabels = MissingOps.oneHot(2, label).toType(DataType.FLOAT32, false);
+        NDArray oneHotLabels = label.oneHot(2);
         // we use negative log likelihood as loss: log(softmax) turns high confidence into
         // negative values near one, low confidence into negative values near -inf,
         // negating gives almost 0 for high confidence and near +inf for very low confidence

File: api/src/main/java/ai/djl/Device.java
Patch:
@@ -25,6 +25,9 @@
  *
  * <p>Users can use this to specify whether to load/compute the {@code NDArray} on CPU/GPU with
  * deviceType and deviceId provided.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_deep-learning-computation/use-gpu.html">The D2L chapter
+ *     on GPU devices</a>
  */
 public final class Device {
 

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -40,6 +40,8 @@
  *
  * @see <a href="http://docs.djl.ai/docs/engine.html">Engine Guide</a>
  * @see EngineProvider
+ * @see <a href="http://docs.djl.ai/docs/development/cache_management.html">The guide on resource
+ *     and engine caching</a>
  */
 public abstract class Engine {
 

File: api/src/main/java/ai/djl/modality/cv/output/BoundingBox.java
Patch:
@@ -14,7 +14,7 @@
 
 import java.io.Serializable;
 
-/** An interface representing a bounding box for the detected object. */
+/** An interface representing a bounding box around an object inside an image. */
 public interface BoundingBox extends Serializable {
 
     /**

File: api/src/main/java/ai/djl/modality/cv/output/DetectedObjects.java
Patch:
@@ -16,7 +16,8 @@
 import java.util.List;
 
 /**
- * A class representing the detected objects results for a single image in an object detection case.
+ * A class representing the detected objects results for a single image in an {@link
+ * ai.djl.Application.CV#OBJECT_DETECTION} case.
  */
 public class DetectedObjects extends Classifications {
 

File: api/src/main/java/ai/djl/modality/nlp/qa/QAInput.java
Patch:
@@ -12,7 +12,7 @@
  */
 package ai.djl.modality.nlp.qa;
 
-/** The input container for BERT QA model. */
+/** The input container for a {@link ai.djl.Application.NLP#QUESTION_ANSWER} model. */
 public class QAInput {
 
     private String question;

File: api/src/main/java/ai/djl/ndarray/NDList.java
Patch:
@@ -31,6 +31,8 @@
  *
  * <p>Each {@link NDArray} in this list can optionally have a name. You can use the name to look up
  * an NDArray in the NDList.
+ *
+ * @see NDArray
  */
 public class NDList extends ArrayList<NDArray> implements AutoCloseable {
 

File: api/src/main/java/ai/djl/nn/Parameter.java
Patch:
@@ -32,6 +32,9 @@
  * function depends on the values in the {@code Parameter}. During training, the values in the
  * {@code Parameter} are updated to reflect the training data. This process forms the crux of
  * learning.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_deep-learning-computation/parameters.html">The D2L
+ *     chapter on parameter management</a>
  */
 public class Parameter implements AutoCloseable {
 

File: api/src/main/java/ai/djl/nn/convolutional/Conv1d.java
Patch:
@@ -45,6 +45,8 @@
  * </ul>
  *
  * <p>Both {@code weight} and {@code bias} are learn-able parameters.
+ *
+ * @see Convolution
  */
 public class Conv1d extends Convolution {
 

File: api/src/main/java/ai/djl/nn/convolutional/Conv1dTranspose.java
Patch:
@@ -39,6 +39,8 @@
  * </ul>
  *
  * <p>Both {@code weight} and {@code bias} are learn-able parameters.
+ *
+ * @see Deconvolution
  */
 public class Conv1dTranspose extends Deconvolution {
 

File: api/src/main/java/ai/djl/nn/convolutional/Conv2d.java
Patch:
@@ -49,6 +49,8 @@
  * </ul>
  *
  * <p>Both {@code weight} and {@code bias} are learn-able parameters.
+ *
+ * @see Convolution
  */
 public class Conv2d extends Convolution {
 

File: api/src/main/java/ai/djl/nn/convolutional/Conv2dTranspose.java
Patch:
@@ -35,6 +35,8 @@
  * </ul>
  *
  * <p>Both {@code weight} and {@code bias} are learn-able parameters.
+ *
+ * @see Deconvolution
  */
 public class Conv2dTranspose extends Deconvolution {
 

File: api/src/main/java/ai/djl/nn/convolutional/Conv3d.java
Patch:
@@ -49,6 +49,8 @@
  * </ul>
  *
  * <p>Both {@code weight} and {@code bias} are learn-able parameters.
+ *
+ * @see Convolution
  */
 public class Conv3d extends Convolution {
 

File: api/src/main/java/ai/djl/nn/convolutional/Convolution.java
Patch:
@@ -66,6 +66,9 @@
  * share the same core principal as a {@code Convolution} layer does, with the difference being the
  * number of input dimension each operates on as denoted by {@code ConvXD} for {@code X}
  * dimension(s).
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-neural-networks/why-conv.html">The D2L
+ *     chapters on convolution</a>
  */
 public abstract class Convolution extends AbstractBlock {
 

File: api/src/main/java/ai/djl/nn/norm/BatchNorm.java
Patch:
@@ -59,6 +59,9 @@
  * stability. The scale and shift operation can be formally defined as follows: <br>
  * \(y \:=\: \gamma\hat{x} \:+\: \beta\), <br>
  * where \(\gamma\) is the scale factor and \(\beta\) is the shift factor.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/batch-norm.html">The D2L chapter on
+ *     batch normalization</a>
  */
 public class BatchNorm extends AbstractBlock {
 

File: api/src/main/java/ai/djl/nn/norm/Dropout.java
Patch:
@@ -49,6 +49,9 @@
  * and limited size of the dataset, and it is reported that dropout layer increases training time by
  * 2-3 times since different simulated multiple networks are trained for each iteration, thus
  * resulting in noisy parameter updates.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_multilayer-perceptrons/dropout.html">The D2L chapter on
+ *     dropout</a>
  */
 public class Dropout extends AbstractBlock {
 

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -56,6 +56,9 @@
  *       href="https://github.com/awslabs/djl/blob/master/jupyter/load_mxnet_model.ipynb">Inference
  *       with an MXNet model</a>
  * </ul>
+ *
+ * @see <a href="http://docs.djl.ai/docs/development/memory_management.html">The guide on memory
+ *     management</a>
  */
 public class Trainer implements AutoCloseable {
 

File: api/src/main/java/ai/djl/training/listener/LoggingTrainingListener.java
Patch:
@@ -26,6 +26,9 @@
 
 /**
  * {@link TrainingListener} that outputs the progress of training each batch and epoch into logs.
+ *
+ * @see <a href="http://docs.djl.ai/docs/development/configure_logging.html">The guide on DJL
+ *     logging</a>
  */
 public class LoggingTrainingListener implements TrainingListener {
 

File: api/src/main/java/ai/djl/training/optimizer/Adagrad.java
Patch:
@@ -33,6 +33,9 @@
  * \( weight -= lr * grad / (sqrt(history) + epsilon) \)<br>
  * <br>
  * where grad represents the gradient, wd represents weight decay, and lr represents learning rate.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/adagrad.html">The D2L chapter on
+ *     Adagrad</a>
  */
 public class Adagrad extends Optimizer {
 

File: api/src/main/java/ai/djl/training/optimizer/Adam.java
Patch:
@@ -32,6 +32,8 @@
  * <br>
  * where g represents the gradient, and m/v are 1st and 2nd order moment estimates (mean and
  * variance).
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/adam.html">The D2L chapter on Adam</a>
  */
 public class Adam extends Optimizer {
 

File: api/src/main/java/ai/djl/training/optimizer/Optimizer.java
Patch:
@@ -21,6 +21,9 @@
 /**
  * An {@code Optimizer} updates the weight parameters to minimize the loss function. {@code
  * Optimizer} is an abstract class that provides the base implementation for optimizers.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/index.html">The D2L chapters on
+ *     optimization algorithms</a>
  */
 public abstract class Optimizer {
 

File: api/src/main/java/ai/djl/training/optimizer/RmsProp.java
Patch:
@@ -48,6 +48,9 @@
  * <br>
  * Grad represents the gradient, mean and var are the 1st and 2nd order moment estimates (mean and
  * variance), and mom is the momentum.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/rmsprop.html">The D2L chapter on
+ *     RMSProp</a>
  */
 public class RmsProp extends Optimizer {
 

File: api/src/main/java/ai/djl/training/optimizer/Sgd.java
Patch:
@@ -31,6 +31,8 @@
  * \( state = momentum * state + learning_rate * gradient \)<br>
  * \( weight -= state \)<br>
  * Momentum update has better convergence rates on neural networks.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/sgd.html">The D2L chapter on SGD</a>
  */
 public class Sgd extends Optimizer {
 

File: api/src/main/java/ai/djl/training/tracker/CosineTracker.java
Patch:
@@ -12,12 +12,14 @@
  */
 package ai.djl.training.tracker;
 
-import ai.djl.training.tracker.WarmUpTracker.Builder;
 import ai.djl.util.Preconditions;
 
 /**
  * {@code CosineTracker} is an implementation of {@link Tracker} which is updated by taking sections
  * of a cosine curve to smoothly reduce learning rate until a specified step and base learning rate.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/lr-scheduler.html#cosine-tracker">For
+ *     tracking learning rates, this section in the D2L chapter on learning rate scheduling</a>
  */
 public class CosineTracker implements Tracker {
 

File: api/src/main/java/ai/djl/training/tracker/FactorTracker.java
Patch:
@@ -12,12 +12,14 @@
  */
 package ai.djl.training.tracker;
 
-import ai.djl.training.tracker.WarmUpTracker.Builder;
 import ai.djl.util.Preconditions;
 
 /**
  * {@code FactorTracker} is an implementation of {@link Tracker} which is updated by a
  * multiplicative factor.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/lr-scheduler.html#factor-tracker">For
+ *     tracking learning rates, this section in the D2L chapter on learning rate scheduling</a>
  */
 public class FactorTracker implements Tracker {
 

File: api/src/main/java/ai/djl/training/tracker/LinearTracker.java
Patch:
@@ -18,6 +18,8 @@
 /**
  * {@code FactorTracker} is an implementation of {@link Tracker} which is updated by a constant
  * factor.
+ *
+ * @see Tracker
  */
 public class LinearTracker implements Tracker {
 

File: api/src/main/java/ai/djl/training/tracker/Tracker.java
Patch:
@@ -15,6 +15,9 @@
 /**
  * A {@code Tracker} represents a hyper-parameter that changes gradually through the training
  * process.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_optimization/lr-scheduler.html">For tracking learning
+ *     rates, the D2L chapter on learning rate scheduling</a>
  */
 public interface Tracker {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/basic/Mlp.java
Patch:
@@ -30,6 +30,9 @@
  * <p>MLP is widely used for solving problems that require supervised learning as well as research
  * into computational neuroscience and parallel distributed processing. Applications include speech
  * recognition, image recognition and machine translation.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_multilayer-perceptrons/mlp.html">The D2L chapters on
+ *     MLPs</a>
  */
 public class Mlp extends SequentialBlock {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/AlexNet.java
Patch:
@@ -28,6 +28,9 @@
  * implmentation](https://github.com/pytorch/vision/blob/master/torchvision/models/alexnet.py)
  *
  * <p>AlexNet model from the "One weird trick..." https://arxiv.org/abs/1404.5997 paper.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/alexnet.html">The D2L chapter on
+ *     AlexNet</a>
  */
 public final class AlexNet {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/GoogLeNet.java
Patch:
@@ -37,6 +37,9 @@
  * <p>GoogLeNet paper from Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed,
  * Dragomir Anguelov, Dumitru Erhan, Vincent Vanhoucke, Andrew Rabinovich “Going Deeper with
  * Convolutions” https://arxiv.org/abs/1409.4842
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/googlenet.html">The D2L chapter on
+ *     GoogLeNet</a>
  */
 public final class GoogLeNet {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/LeNet.java
Patch:
@@ -25,6 +25,9 @@
 /**
  * The model was introduced (and named for) Yann Lecun, for the purpose of recognizing handwritten
  * digits in images [LeNet5](http://yann.lecun.com/exdb/lenet/).
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-neural-networks/lenet.html">The D2L
+ *     chapter on LeNet</a>
  */
 public final class LeNet {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/NiN.java
Patch:
@@ -31,6 +31,9 @@
  * function to scan the input.
  *
  * <p>NiN model from the "Network In Network" http://arxiv.org/abs/1312.4400 paper.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/nin.html">The D2L chapter on
+ *     NiN</a>
  */
 public final class NiN {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/ResNetV1.java
Patch:
@@ -32,6 +32,9 @@
  *
  * <p>Implementing the original resnet ILSVRC 2015 winning network from Kaiming He, Xiangyu Zhang,
  * Shaoqing Ren, Jian Sun. "Deep Residual Learning for Image Recognition"
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/resnet.html">The D2L chapter on
+ *     ResNet</a>
  */
 public final class ResNetV1 {
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/VGG.java
Patch:
@@ -26,6 +26,9 @@
 /**
  * VGG model from the "Very Deep Convolutional Networks for Large-Scale Image Recognition"
  * https://arxiv.org/abs/1409.1556 paper.
+ *
+ * @see <a href="https://d2l.djl.ai/chapter_convolutional-modern/vgg.html">The D2L chapter on
+ *     VGG</a>
  */
 public final class VGG {
 

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -38,6 +38,7 @@
  * contain methods to detect information about the usable machine hardware and to create a new
  * {@link NDManager} and {@link Model}.
  *
+ * @see <a href="http://docs.djl.ai/docs/engine.html">Engine Guide</a>
  * @see EngineProvider
  */
 public abstract class Engine {

File: dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDArray.java
Patch:
@@ -124,6 +124,7 @@ public NDArray stopGradient() {
     /** {@inheritDoc} */
     @Override
     public ByteBuffer toByteBuffer() {
+        data.rewind();
         return data;
     }
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -783,7 +783,7 @@ public void testEncodeDecode() {
             NDArray array = manager.create(new byte[] {0, 3}, new Shape(2));
             byte[] bytes = array.encode();
             NDArray recovered = NDArray.decode(manager, bytes);
-            Assert.assertEquals(recovered, array);
+            Assertions.assertAlmostEquals(recovered, array);
 
             array.setName("data");
             bytes = array.encode();
@@ -795,7 +795,7 @@ public void testEncodeDecode() {
                     "00044e44415200000001000544454e53450004494e543800000001000000000000000200000001003f000000020003";
             bytes = Hex.toByteArray(s);
             recovered = NDArray.decode(manager, bytes);
-            Assert.assertEquals(recovered, array);
+            Assertions.assertAlmostEquals(recovered, array);
         }
     }
 

File: examples/src/main/java/ai/djl/examples/inference/benchmark/util/AbstractBenchmark.java
Patch:
@@ -239,7 +239,7 @@ public final boolean runBenchmark(String[] args) {
                         logger.info(String.format("nonHeap P90: %.3f MB", nonHeap / mb));
                         logger.info(String.format("rss (base): %.3f MB", rssBeforeModel / mb));
                         logger.info(String.format("rss (model): %.3f MB", rssBeforeInference / mb));
-                        logger.info(String.format("rss P90: %.3f MB", rss));
+                        logger.info(String.format("rss P90: %.3f MB", rss / mb));
                     }
                 }
                 MemoryTrainingListener.dumpMemoryInfo(metrics, arguments.getOutputDir());

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -688,7 +688,7 @@ public NDList rnn(
             boolean training,
             boolean bidirectional,
             boolean batchFirst) {
-        int numParams = numLayers * ((hasBiases) ? 4 : 2);
+        int numParams = numLayers * ((hasBiases) ? 4 : 2) * ((bidirectional) ? 2 : 1);
         Preconditions.checkArgument(
                 params.size() == numParams,
                 "The size of Params is incorrect expect "
@@ -749,7 +749,7 @@ public NDList gru(
             boolean training,
             boolean bidirectional,
             boolean batchFirst) {
-        int numParams = numLayers * ((hasBiases) ? 4 : 2);
+        int numParams = numLayers * ((hasBiases) ? 4 : 2) * ((bidirectional) ? 2 : 1);
         Preconditions.checkArgument(
                 params.size() == numParams,
                 "The size of Params is incorrect expect "
@@ -810,7 +810,7 @@ public NDList lstm(
             boolean training,
             boolean bidirectional,
             boolean batchFirst) {
-        int numParams = numLayers * ((hasBiases) ? 4 : 2);
+        int numParams = numLayers * ((hasBiases) ? 4 : 2) * ((bidirectional) ? 2 : 1);
         Preconditions.checkArgument(
                 params.size() == numParams,
                 "The size of Params is incorrect expect "

File: serving/src/main/java/ai/djl/serving/wlm/BatchAggregator.java
Patch:
@@ -27,7 +27,7 @@
  */
 abstract class BatchAggregator {
 
-    protected ModelInfo model;
+    protected int batchSize;
     protected List<Job> jobs;
     protected LinkedBlockingDeque<Job> jobQueue;
 
@@ -38,7 +38,7 @@ abstract class BatchAggregator {
      * @param jobQueue the job queue for polling data from.
      */
     public BatchAggregator(ModelInfo model, LinkedBlockingDeque<Job> jobQueue) {
-        this.model = model;
+        this.batchSize = model.getBatchSize();
         this.jobQueue = jobQueue;
         jobs = new ArrayList<>();
     }

File: serving/src/main/java/ai/djl/serving/wlm/PermanentBatchAggregator.java
Patch:
@@ -41,10 +41,10 @@ public PermanentBatchAggregator(ModelInfo model, LinkedBlockingDeque<Job> jobQue
     /** {@inheritDoc} */
     @Override
     protected List<Job> pollBatch() throws InterruptedException {
-        List<Job> list = new ArrayList<>(model.getBatchSize());
+        List<Job> list = new ArrayList<>(batchSize);
         Job job = jobQueue.take();
         list.add(job);
-        jobQueue.drainTo(list, model.getBatchSize() - 1);
+        jobQueue.drainTo(list, batchSize - 1);
         logger.trace("sending jobs, size: {}", list.size());
         return list;
     }

File: serving/src/main/java/ai/djl/serving/wlm/TemporaryBatchAggregator.java
Patch:
@@ -46,11 +46,11 @@ public TemporaryBatchAggregator(ModelInfo model, LinkedBlockingDeque<Job> jobQue
     /** {@inheritDoc} */
     @Override
     protected List<Job> pollBatch() throws InterruptedException {
-        List<Job> list = new ArrayList<>(model.getBatchSize());
+        List<Job> list = new ArrayList<>(batchSize);
         Job job = jobQueue.poll(maxIdleTime, TimeUnit.SECONDS);
         if (job != null) {
             list.add(job);
-            jobQueue.drainTo(list, model.getBatchSize() - 1);
+            jobQueue.drainTo(list, batchSize - 1);
             logger.trace("sending jobs, size: {}", list.size());
             idleSince = System.currentTimeMillis();
         }

File: serving/src/test/java/ai/djl/serving/wlm/ModelInfoTest.java
Patch:
@@ -19,7 +19,7 @@ public class ModelInfoTest {
 
     @Test
     public void testQueueSizeIsSet() {
-        ModelInfo modelInfo = new ModelInfo("", "", null, 4711);
+        ModelInfo modelInfo = new ModelInfo("", "", null, 4711, 1, 300, 1);
         Assert.assertEquals(4711, modelInfo.getQueueSize());
     }
 }

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/LibUtils.java
Patch:
@@ -321,7 +321,7 @@ private static String downloadLibrary(Platform platform) throws IOException {
 
             tmp = Files.createTempDirectory(cacheDir, "tmp");
             for (String line : lines) {
-                if (line.startsWith(os + '/' + flavor + '/')) {
+                if (line.startsWith(flavor + '/' + os + '/')) {
                     URL url = new URL(link + '/' + line);
                     String fileName = line.substring(line.lastIndexOf('/') + 1, line.length() - 3);
                     logger.info("Downloading {} ...", url);

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -102,9 +102,7 @@ private static synchronized String initEngine() {
      *
      * @return the rank of the engine
      */
-    public int getRank() {
-        return 1;
-    }
+    public abstract int getRank();
 
     /**
      * Returns the default Engine.

File: examples/src/main/java/ai/djl/examples/training/TrainCaptcha.java
Patch:
@@ -31,7 +31,7 @@
 import ai.djl.training.dataset.Dataset.Usage;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.SimpleCompositeLoss;
 import ai.djl.training.loss.SoftmaxCrossEntropyLoss;
@@ -88,7 +88,7 @@ public static TrainingResult runExample(String[] args) throws IOException, Trans
 
     private static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -27,7 +27,7 @@
 import ai.djl.training.dataset.Dataset;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.util.ProgressBar;
@@ -93,7 +93,7 @@ public static TrainingResult runExample(String[] args) throws IOException, Trans
 
     private static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainMnistWithLSTM.java
Patch:
@@ -32,7 +32,7 @@
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
 import ai.djl.training.initializer.XavierInitializer;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.util.ProgressBar;
@@ -102,7 +102,7 @@ private static Block getLSTMModel() {
 
     public static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -40,7 +40,7 @@
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.BoundingBoxError;
 import ai.djl.training.evaluator.SingleShotDetectionAccuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.SingleShotDetectionLoss;
 import ai.djl.training.util.ProgressBar;
@@ -142,7 +142,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
 
     private static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainSentimentAnalysis.java
Patch:
@@ -50,7 +50,7 @@
 import ai.djl.training.dataset.Batch;
 import ai.djl.training.dataset.Dataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.SoftmaxCrossEntropyLoss;
 import ai.djl.training.util.ProgressBar;
@@ -167,7 +167,7 @@ private static Block getModel() {
     public static DefaultTrainingConfig setupTrainingConfig(
             Arguments arguments, ModelZooTextEmbedding embedding) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainSeq2Seq.java
Patch:
@@ -43,7 +43,7 @@
 import ai.djl.training.dataset.Batch;
 import ai.djl.training.dataset.Dataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.MaskedSoftmaxCrossEntropyLoss;
 import ai.djl.training.util.ProgressBar;
@@ -139,7 +139,7 @@ private static Block getSeq2SeqModel(
 
     public static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainWithHpo.java
Patch:
@@ -28,7 +28,7 @@
 import ai.djl.training.hyperparameter.EasyHpo;
 import ai.djl.training.hyperparameter.param.HpInt;
 import ai.djl.training.hyperparameter.param.HpSet;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.util.ProgressBar;
@@ -69,7 +69,7 @@ public Train(Arguments arguments) {
         @Override
         protected TrainingConfig setupTrainingConfig(HpSet hpVals) {
             String outputDir = arguments.getOutputDir();
-            CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+            SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
             listener.setSaveModelCallback(
                     trainer -> {
                         TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -40,7 +40,7 @@
 import ai.djl.training.dataset.Dataset;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.optimizer.Optimizer;
@@ -165,8 +165,7 @@ private static Model getModel(Arguments arguments)
 
     private static DefaultTrainingConfig setupTrainingConfig(OptimizerArguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener =
-                new CheckpointsTrainingListener(outputDir, "resnetv1");
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir, "resnetv1");
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainAmazonReviewRanking.java
Patch:
@@ -43,7 +43,7 @@
 import ai.djl.training.TrainingResult;
 import ai.djl.training.dataset.RandomAccessDataset;
 import ai.djl.training.evaluator.Accuracy;
-import ai.djl.training.listener.CheckpointsTrainingListener;
+import ai.djl.training.listener.SaveModelTrainingListener;
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.util.ProgressBar;
@@ -196,7 +196,7 @@ private static Block getBlock(Predictor<NDList, NDList> embedder) {
 
     private static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
         String outputDir = arguments.getOutputDir();
-        CheckpointsTrainingListener listener = new CheckpointsTrainingListener(outputDir);
+        SaveModelTrainingListener listener = new SaveModelTrainingListener(outputDir);
         listener.setSaveModelCallback(
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();

File: serving/src/test/java/ai/djl/serving/ConfigManagerTest.java
Patch:
@@ -41,9 +41,7 @@ public class ConfigManagerTest {
     public void testSsl()
             throws IOException, GeneralSecurityException, ParseException,
                     ReflectiveOperationException {
-        String[] args = new String[0];
-        Arguments arguments = parseArguments(args);
-        ConfigManager.init(arguments);
+        ConfigManager.init(parseArguments(new String[0]));
         ConfigManager config = ConfigManager.getInstance();
         Assert.assertNotNull(config.getSslContext());
         Assert.assertNotNull(config.getModelServerHome());

File: serving/src/test/java/ai/djl/serving/ModelServerTest.java
Patch:
@@ -351,7 +351,9 @@ private void testScaleModel(Channel channel) throws InterruptedException {
         latch.await();
 
         StatusResponse resp = JsonUtils.GSON.fromJson(result, StatusResponse.class);
-        Assert.assertEquals(resp.getStatus(), "Model \"mlp_2\" worker scaled.");
+        Assert.assertEquals(
+                resp.getStatus(),
+                "Model \"mlp_2\" worker scaled. New Worker configuration min workers:2 max workers:2");
     }
 
     private void testDescribeModel(Channel channel) throws InterruptedException {

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -2444,7 +2444,7 @@ default NDArray min(int[] axes) {
     NDArray sum();
 
     /**
-     * Returns the minimum of this {@code NDArray} along given axes.
+     * Returns the sum of this {@code NDArray} along given axes.
      *
      * <p>Examples
      *
@@ -2473,7 +2473,7 @@ default NDArray sum(int[] axes) {
     }
 
     /**
-     * Returns the minimum of this {@code NDArray} along given axes.
+     * Returns the sum of this {@code NDArray} along given axes.
      *
      * <p>Examples
      *

File: api/src/main/java/ai/djl/ndarray/index/full/NDIndexFullSlice.java
Patch:
@@ -157,7 +157,7 @@ private static void addSliceInfo(
             long rawMax = Optional.ofNullable(slice.getMax()).orElse(target.size(i));
             max[i] = rawMax < 0 ? Math.floorMod(rawMax, target.get(i)) : rawMax;
             step[i] = Optional.ofNullable(slice.getStep()).orElse(1L);
-            shape[i] = (max[i] - min[i]) / step[i];
+            shape[i] = (long) Math.ceil(((double) (max[i] - min[i])) / step[i]);
             squeezedShape.add(shape[i]);
         } else if (ie instanceof NDIndexAll) {
             padIndexAll(i, target, min, max, step, shape, squeezedShape);

File: api/src/main/java/ai/djl/nn/transformer/IdEmbedding.java
Patch:
@@ -57,12 +57,14 @@ public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
         return new Shape[] {inputShapes[0].addAll(new Shape(embeddingSize))};
     }
 
+    /** {@inheritDoc} */
     @Override
-    public NDList forward(
+    protected NDList forwardInternal(
             ParameterStore ps, NDList inputs, boolean training, PairList<String, Object> params) {
         return forward(ps, inputs, training);
     }
 
+    /** {@inheritDoc} */
     @Override
     public NDList forward(ParameterStore ps, NDList inputs, boolean training) {
         return new NDList(inputs.singletonOrThrow());

File: api/src/main/java/ai/djl/training/tracker/Tracker.java
Patch:
@@ -43,7 +43,7 @@ static FactorTracker.Builder factor() {
      * @return the {@link WarmUpTracker} {@link WarmUpTracker.Builder}
      */
     static WarmUpTracker.Builder warmUp() {
-        return new WarmUpTracker.Builder();
+        return WarmUpTracker.builder();
     }
 
     /**

File: dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrNDManager.java
Patch:
@@ -68,6 +68,7 @@ public DlrNDArray create(Buffer data, Shape shape, DataType dataType) {
         int numOfBytes = dataType.getNumOfBytes();
         ByteBuffer bb = ByteBuffer.allocate(size * numOfBytes);
         bb.asFloatBuffer().put((FloatBuffer) data);
+        bb.rewind();
         return new DlrNDArray(this, bb, shape);
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -321,6 +321,7 @@ public void set(Buffer data) {
             default:
                 throw new UnsupportedOperationException("data type is not supported!");
         }
+        buf.rewind();
         JnaUtils.syncCopyFromCPU(getHandle(), buf, size);
     }
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpEngine.java
Patch:
@@ -17,6 +17,7 @@
 import ai.djl.engine.Engine;
 import ai.djl.ndarray.NDManager;
 import ai.djl.paddlepaddle.jni.JniUtils;
+import ai.djl.paddlepaddle.jni.LibUtils;
 import ai.djl.training.GradientCollector;
 
 /**
@@ -38,6 +39,7 @@ private PpEngine() {
     }
 
     static Engine newInstance() {
+        LibUtils.loadLibrary();
         return new PpEngine();
     }
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpNDManager.java
Patch:
@@ -102,6 +102,7 @@ public PpNDArray create(Buffer data, Shape shape, DataType dataType) {
             default:
                 throw new AssertionError("Show never happen");
         }
+        buf.rewind();
         return JniUtils.createNdArray(this, buf, shape, dataType);
     }
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/PaddleLibrary.java
Patch:
@@ -36,6 +36,8 @@ private PaddleLibrary() {}
 
     native String getTensorName(long handle);
 
+    native void loadExtraDir(String[] args);
+
     native long createAnalysisConfig(String modelDir, String paramDir, int deviceId);
 
     native void useFeedFetchOp(long handle);

File: paddlepaddle/paddlepaddle-engine/src/test/java/ai/djl/paddlepaddle/jni/JniUtilsTest.java
Patch:
@@ -20,10 +20,8 @@
 
 public class JniUtilsTest {
 
-    @Test(enabled = false)
+    @Test
     void createNDArray() {
-        // Require user to override PADDLE_LIBRARY_PATH
-        LibUtils.loadLibrary();
         try (NDManager manager = NDManager.newBaseManager(null, "PaddlePaddle")) {
             NDArray array = manager.zeros(new Shape(1, 2));
             float[] expected = new float[] {0, 0};

File: paddlepaddle/paddlepaddle-model-zoo/src/test/java/ai/djl/paddlepaddle/zoo/ImageClassificationTest.java
Patch:
@@ -19,7 +19,6 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.DataType;
 import ai.djl.ndarray.types.Shape;
-import ai.djl.paddlepaddle.jni.LibUtils;
 import ai.djl.repository.zoo.Criteria;
 import ai.djl.repository.zoo.ModelNotFoundException;
 import ai.djl.repository.zoo.ModelZoo;
@@ -36,8 +35,6 @@ public class ImageClassificationTest {
     public void testImageClassification()
             throws MalformedModelException, ModelNotFoundException, IOException,
                     TranslateException {
-        // Require user to override PADDLE_LIBRARY_PATH
-        LibUtils.loadLibrary();
         Criteria<NDList, NDList> criteria =
                 Criteria.builder()
                         .setTypes(NDList.class, NDList.class)

File: paddlepaddle/paddlepaddle-model-zoo/src/test/java/ai/djl/paddlepaddle/zoo/MaskDetectionTest.java
Patch:
@@ -30,7 +30,6 @@
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.types.Shape;
-import ai.djl.paddlepaddle.jni.LibUtils;
 import ai.djl.repository.zoo.Criteria;
 import ai.djl.repository.zoo.ModelNotFoundException;
 import ai.djl.repository.zoo.ModelZoo;
@@ -53,8 +52,6 @@ public class MaskDetectionTest {
 
     @Test(enabled = false)
     public void testMaskDetection() throws IOException, ModelException, TranslateException {
-        // Require user to override PADDLE_LIBRARY_PATH
-        LibUtils.loadLibrary();
         String url =
                 "https://raw.githubusercontent.com/PaddlePaddle/PaddleHub/release/v1.5/demo/mask_detection/python/images/mask.jpg";
         Image img = ImageFactory.getInstance().fromUrl(url);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -251,6 +251,7 @@ public void set(Buffer data) {
             default:
                 throw new UnsupportedOperationException("data type is not supported!");
         }
+        buf.rewind();
         // If NDArray is on the GPU, it is native code responsibility to control the data life cycle
         if (!Device.Type.GPU.equals(getDevice().getDeviceType())) {
             dataRef = buf;

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -90,6 +90,7 @@ public PtNDArray create(Buffer data, Shape shape, DataType dataType) {
             default:
                 throw new AssertionError("Show never happen");
         }
+        buf.rewind();
         return JniUtils.createNdFromByteBuffer(
                 this, buf, shape, dataType, SparseFormat.DENSE, device);
     }

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtEngine.java
Patch:
@@ -69,7 +69,7 @@ private Engine getAlternativeEngine() {
     /** {@inheritDoc} */
     @Override
     public String getVersion() {
-        return "1.4.0";
+        return "1.5.2";
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/ndarray/types/Shape.java
Patch:
@@ -155,7 +155,7 @@ public LayoutType getLayoutType(int dimension) {
      * @throws IllegalArgumentException thrown if passed an invalid dimension
      */
     public long size(int... dimensions) {
-        int total = 1;
+        long total = 1;
         for (long d : dimensions) {
             if (d < 0 || d >= shape.length) {
                 throw new IllegalArgumentException("Invalid dimension " + d);
@@ -174,7 +174,7 @@ public long size(int... dimensions) {
      * @return the total size or -1 for indeterminate size
      */
     public long size() {
-        int total = 1;
+        long total = 1;
         for (long v : shape) {
             if (v == -1) {
                 return -1;

File: api/src/main/java/ai/djl/util/ZipUtils.java
Patch:
@@ -39,6 +39,9 @@ public static void unzip(InputStream is, Path dest) throws IOException {
         ZipEntry entry;
         while ((entry = zis.getNextEntry()) != null) {
             String name = entry.getName();
+            if (name.contains("..")) {
+                throw new IOException("Malicious zip entry: " + name);
+            }
             Path file = dest.resolve(name).toAbsolutePath();
             if (entry.isDirectory()) {
                 Files.createDirectories(file);

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/JniUtils.java
Patch:
@@ -47,7 +47,7 @@ public static DataType getDTypeFromNd(PpNDArray array) {
     }
 
     public static ByteBuffer getByteBufferFromNd(PpNDArray array) {
-        ByteBuffer bb = PaddleLibrary.LIB.getTensorData(array.getHandle());
+        ByteBuffer bb = ByteBuffer.wrap(PaddleLibrary.LIB.getTensorData(array.getHandle()));
         return bb.order(ByteOrder.nativeOrder());
     }
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/PaddleLibrary.java
Patch:
@@ -30,7 +30,7 @@ private PaddleLibrary() {}
 
     native int getTensorDType(long handle);
 
-    native ByteBuffer getTensorData(long handle);
+    native byte[] getTensorData(long handle);
 
     native void setTensorName(long handle, String name);
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jni/JniUtils.java
Patch:
@@ -48,8 +48,7 @@ public static DataType getDTypeFromNd(PpNDArray array) {
 
     public static ByteBuffer getByteBufferFromNd(PpNDArray array) {
         ByteBuffer bb = PaddleLibrary.LIB.getTensorData(array.getHandle());
-        bb.order(ByteOrder.nativeOrder());
-        return bb;
+        return bb.order(ByteOrder.nativeOrder());
     }
 
     public static Shape getShapeFromNd(PpNDArray array) {

File: api/src/main/java/ai/djl/modality/nlp/EncoderDecoder.java
Patch:
@@ -49,6 +49,7 @@ public EncoderDecoder(Encoder encoder, Decoder decoder) {
         super(VERSION);
         this.encoder = addChildBlock("Encoder", encoder);
         this.decoder = addChildBlock("Decoder", decoder);
+        inputNames = Arrays.asList("encoderInput", "decoderInput");
     }
 
     /** {@inheritDoc} */
@@ -57,7 +58,6 @@ public PairList<String, Shape> describeInput() {
         if (!isInitialized()) {
             throw new IllegalStateException("Parameter of this block are not initialised");
         }
-        inputNames = Arrays.asList("encoderInput", "decoderInput");
         return new PairList<>(inputNames, Arrays.asList(inputShapes));
     }
 

File: api/src/main/java/ai/djl/nn/convolutional/Convolution.java
Patch:
@@ -147,7 +147,7 @@ public NDList forward(
     /** {@inheritDoc} */
     @Override
     protected void beforeInitialize(Shape[] inputs) {
-        this.inputShapes = inputs;
+        super.beforeInitialize(inputs);
         Shape inputShape = inputs[0];
         Block.validateLayout(getExpectedLayout(), inputShape.getLayout());
     }

File: api/src/main/java/ai/djl/nn/convolutional/Deconvolution.java
Patch:
@@ -127,7 +127,7 @@ public NDList forward(
     /** {@inheritDoc} */
     @Override
     protected void beforeInitialize(Shape[] inputs) {
-        this.inputShapes = inputs;
+        super.beforeInitialize(inputs);
         Shape inputShape = inputs[0];
         Block.validateLayout(getExpectedLayout(), inputShape.getLayout());
     }

File: api/src/main/java/ai/djl/nn/core/Linear.java
Patch:
@@ -100,7 +100,7 @@ public PairList<String, Shape> describeInput() {
     /** {@inheritDoc} */
     @Override
     public void beforeInitialize(Shape[] inputShapes) {
-        this.inputShapes = inputShapes;
+        super.beforeInitialize(inputShapes);
         Shape input = inputShapes[0];
         inputFeatures = input.get(input.dimension() - 1);
         inputShape = input.slice(0, input.dimension() - 1);

File: api/src/main/java/ai/djl/nn/norm/BatchNorm.java
Patch:
@@ -139,7 +139,7 @@ public Shape[] getOutputShapes(NDManager manager, Shape[] inputShapes) {
     /** {@inheritDoc} */
     @Override
     public void beforeInitialize(Shape[] inputShapes) {
-        this.inputShapes = inputShapes;
+        super.beforeInitialize(inputShapes);
         inChannels = inputShapes[0].size(axis);
     }
 

File: api/src/main/java/ai/djl/nn/recurrent/RecurrentBlock.java
Patch:
@@ -180,7 +180,7 @@ public Shape[] getOutputShapes(NDManager manager, Shape[] inputs) {
     /** {@inheritDoc} */
     @Override
     public void beforeInitialize(Shape[] inputs) {
-        this.inputShapes = inputs;
+        super.beforeInitialize(inputs);
         Shape inputShape = inputs[0];
         Block.validateLayout(EXPECTED_LAYOUT, inputShape.getLayout());
         inputs[0] = new Shape(inputShape.get(1), inputShape.get(0), inputShape.get(2));

File: examples/src/test/java/ai/djl/examples/training/TrainTicTacToeTest.java
Patch:
@@ -14,13 +14,14 @@
 
 import ai.djl.engine.Engine;
 import ai.djl.training.TrainingResult;
+import java.io.IOException;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 
 public class TrainTicTacToeTest {
 
     @Test
-    public void testTrainTicTacToe() {
+    public void testTrainTicTacToe() throws IOException {
         if (Boolean.getBoolean("nightly")) {
             String[] args = new String[] {"-g", "1", "-e", "6"};
             Engine.getInstance().setRandomSeed(1234);

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jna/LibUtils.java
Patch:
@@ -214,12 +214,12 @@ private static String downloadLibrary(Platform platform) throws IOException {
         }
 
         Files.createDirectories(cacheDir);
-        Path tmp = Files.createTempDirectory(cacheDir, "tmp");
-
         Matcher matcher = VERSION_PATTERN.matcher(version);
         if (!matcher.matches()) {
             throw new IllegalArgumentException("Unexpected version: " + version);
         }
+
+        Path tmp = null;
         String link = "https://publish.djl.ai/paddlepaddle-" + matcher.group(1);
         try (InputStream is = new URL(link + "/files.txt").openStream()) {
             List<String> lines = Utils.readLines(is);

File: paddlepaddle/paddlepaddle-model-zoo/src/test/java/ai/djl/paddlepaddle/zoo/ImageClassificationTest.java
Patch:
@@ -40,6 +40,7 @@ public void testImageClassification()
                         .setTypes(NDList.class, NDList.class)
                         .optModelUrls(
                                 "http://paddle-inference-dist.bj.bcebos.com/resnet50_model.tar.gz")
+                        .optModelName("model")
                         .optEngine("PaddlePaddle")
                         .optProgress(new ProgressBar())
                         .build();

File: paddlepaddle/paddlepaddle-model-zoo/src/test/java/ai/djl/paddlepaddle/zoo/ImageClassificationTest.java
Patch:
@@ -30,6 +30,7 @@
 import org.testng.annotations.Test;
 
 public class ImageClassificationTest {
+
     @Test
     public void testImageClassification()
             throws MalformedModelException, ModelNotFoundException, IOException,
@@ -39,6 +40,7 @@ public void testImageClassification()
                         .setTypes(NDList.class, NDList.class)
                         .optModelUrls(
                                 "http://paddle-inference-dist.bj.bcebos.com/resnet50_model.tar.gz")
+                        .optEngine("PaddlePaddle")
                         .optProgress(new ProgressBar())
                         .build();
 

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpModel.java
Patch:
@@ -32,6 +32,7 @@ public class PpModel extends BaseModel {
      * Constructs a new Model on a given device.
      *
      * @param name the model name
+     * @param manager the {@link NDManager} to holds the NDArray
      */
     PpModel(String name, NDManager manager) {
         super(name);

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jna/JnaUtils.java
Patch:
@@ -125,9 +125,7 @@ public static void deletePredictor(Pointer predictor) {
 
     public static PpNDArray[] runInference(
             AnalysisConfig config, PpNDArray[] inputs, int batchSize) {
-        PointerArray inputPtr =
-                new PointerArray(
-                        Arrays.stream(inputs).map(PpNDArray::getHandle).toArray(Pointer[]::new));
+        // FIXME: only single input are supported in C
         PointerByReference outputPtr = new PointerByReference();
         IntBuffer outSizeBuf = IntBuffer.allocate(1);
         LIB.PD_PredictorRun(

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/engine/PpEngineProvider.java
Patch:
@@ -15,7 +15,7 @@
 import ai.djl.engine.Engine;
 import ai.djl.engine.EngineProvider;
 
-/** {@code PpEngineProvider} is the ONNX Runtime implementation of {@link EngineProvider}. */
+/** {@code PpEngineProvider} is the PaddlePaddle implementation of {@link EngineProvider}. */
 public class PpEngineProvider implements EngineProvider {
 
     private static Engine engine;

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jna/JnaUtils.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Arrays;
 
 /**
- * A class containing utilities to interact with the MXNet Engine's Java Native Access (JNA) layer.
+ * A class containing utilities to interact with the PaddlePaddle Engine's Java Native Access (JNA) layer.
  */
 @SuppressWarnings("MissingJavadocMethod")
 public final class JnaUtils {

File: paddlepaddle/paddlepaddle-engine/src/main/java/ai/djl/paddlepaddle/jna/package-info.java
Patch:
@@ -11,5 +11,5 @@
  * and limitations under the License.
  */
 
-/** Contains classes to interface with the underlying MXNet Engine. */
+/** Contains classes to interface with the underlying PaddlePaddle Engine. */
 package ai.djl.paddlepaddle.jna;

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/zoo/TfLiteModelZoo.java
Patch:
@@ -13,7 +13,7 @@
 package ai.djl.tflite.zoo;
 
 import ai.djl.engine.Engine;
-import ai.djl.modality.cv.zoo.ObjectDetectionModelLoader;
+import ai.djl.modality.cv.zoo.ImageClassificationModelLoader;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.ModelZoo;
 import ai.djl.tflite.engine.TfLiteEngine;
@@ -28,8 +28,8 @@ public class TfLiteModelZoo implements ModelZoo {
     public static final String GROUP_ID = "ai.djl.tflite";
     private static final TfLiteModelZoo ZOO = new TfLiteModelZoo();
 
-    public static final ObjectDetectionModelLoader SSD =
-            new ObjectDetectionModelLoader(REPOSITORY, GROUP_ID, "ssd", "0.0.1", ZOO);
+    public static final ImageClassificationModelLoader MOBILENET =
+            new ImageClassificationModelLoader(REPOSITORY, GROUP_ID, "mobilenet", "0.0.1", ZOO);
 
     /** {@inheritDoc} */
     @Override

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/LibUtils.java
Patch:
@@ -54,6 +54,7 @@ public static void loadLibrary() {
         String libName = findLibraryInClasspath();
         if (libName == null) {
             System.loadLibrary(LIB_NAME); // NOPMD
+            return;
         }
         logger.debug("Loading TFLite native library from: {}", libName);
         System.load(libName); // NOPMD

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/LibUtils.java
Patch:
@@ -53,7 +53,7 @@ private LibUtils() {}
     public static void loadLibrary() {
         String libName = findLibraryInClasspath();
         if (libName == null) {
-            System.loadLibrary(LIB_NAME);
+            System.loadLibrary(LIB_NAME); // NOPMD
         }
         logger.debug("Loading TFLite native library from: {}", libName);
         System.load(libName); // NOPMD

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteNDArray.java
Patch:
@@ -158,6 +158,9 @@ public boolean hasGradient() {
     /** {@inheritDoc} */
     @Override
     public ByteBuffer toByteBuffer() {
+        if (data == null) {
+            data = tensor.buffer();
+        }
         return data;
     }
 

File: tflite/tflite-engine/src/main/java/ai/djl/tflite/engine/TfLiteSymbolBlock.java
Patch:
@@ -39,7 +39,7 @@ public class TfLiteSymbolBlock implements SymbolBlock, AutoCloseable {
     private TfLiteNDManager manager;
     private Interpreter interpreter;
 
-    public TfLiteSymbolBlock(Interpreter interpreter, TfLiteNDManager manager) {
+    TfLiteSymbolBlock(Interpreter interpreter, TfLiteNDManager manager) {
         this.interpreter = interpreter;
         this.manager = manager;
     }

File: api/src/main/java/ai/djl/repository/RepositoryFactoryImpl.java
Patch:
@@ -95,6 +95,7 @@ public Repository newInstance(String name, String url) {
                                             f.endsWith("metadata.json")
                                                     && Files.isRegularFile(f)
                                                     && !f.getParent().equals(path))) {
+                        logger.debug("Found local repository: {}", path);
                         return new LocalRepository(name, path);
                     }
                 } catch (IOException e) {

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -92,7 +92,8 @@ public void load(Path modelPath, String prefix, Map<String, ?> options)
             prefix = modelDir.toFile().getName();
             paramFile = paramPathResolver(prefix, options);
             if (paramFile == null) {
-                throw new IOException("Parameter file not found in: " + modelDir);
+                throw new FileNotFoundException(
+                        "Parameter file with prefix: " + prefix + " not found in: " + modelDir);
             }
         }
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -362,6 +362,7 @@ public static void indexSet(
     }
 
     public static void set(PtNDArray self, ByteBuffer data) {
+        // Note the ByteBuffer here is directByteBuffer
         PyTorchLibrary.LIB.torchSet(self.getHandle(), data);
     }
 

File: dlr/dlr-engine/src/test/java/ai/djl/dlr/engine/DlrNDManagerTest.java
Patch:
@@ -23,10 +23,10 @@ public class DlrNDManagerTest {
 
     @Test
     public void testNDArray() {
+        if (System.getProperty("os.name").toLowerCase().startsWith("win")) {
+            throw new SkipException("test only work on mac and Linux");
+        }
         try (NDManager manager = DlrNDManager.getSystemManager().newSubManager()) {
-            if (System.getProperty("os.name").toLowerCase().startsWith("win")) {
-                throw new SkipException("test only work on mac and Linux");
-            }
             NDArray zeros = manager.zeros(new Shape(1, 2));
             float[] data = zeros.toFloatArray();
             Assert.assertEquals(data[0], 0);

File: dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrEngine.java
Patch:
@@ -83,7 +83,7 @@ public boolean hasCapability(String capability) {
     /** {@inheritDoc} */
     @Override
     public Model newModel(String name, Device device) {
-        return new DlrModel(name, newBaseManager(device));
+        return new DlrModel(name, newBaseManager(device), Device.defaultIfNull(device, this));
     }
 
     /** {@inheritDoc} */

File: dlr/dlr-engine/src/main/java/ai/djl/dlr/engine/DlrPredictor.java
Patch:
@@ -29,7 +29,7 @@ public class DlrPredictor<I, O> extends Predictor<I, O> {
      *
      * @param model the model on which the predictions are based
      * @param modelDir the path to the model artifacts
-     * @param device the device that the model
+     * @param device the device that the model use
      * @param translator the translator to be used
      */
     public DlrPredictor(

File: api/src/main/java/ai/djl/nn/convolutional/Convolution.java
Patch:
@@ -162,9 +162,9 @@ public Shape[] getOutputShapes(NDManager manager, Shape[] inputs) {
             shape[2 + i] =
                     (inputs[0].get(2 + i)
                                             + 2 * padding.get(i)
-                                            - dilation.get(0) * (kernelShape.get(i) - 1)
+                                            - dilation.get(i) * (kernelShape.get(i) - 1)
                                             - 1)
-                                    / stride.get(0)
+                                    / stride.get(i)
                             + 1;
         }
         return new Shape[] {new Shape(shape)};

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfModel.java
Patch:
@@ -100,7 +100,9 @@ public void load(Path modelPath, String prefix, Map<String, ?> options)
                     throw new MalformedModelException("Invalid RunOptions: " + run, e);
                 }
             }
-            signatureDefKey = (String) options.get("SignatureDefKey");
+            if (options.containsKey("SignatureDefKey")) {
+                signatureDefKey = (String) options.get("SignatureDefKey");
+            }
         }
         if (tags == null) {
             tags = new String[] {"serve"};

File: api/src/main/java/ai/djl/Model.java
Patch:
@@ -57,7 +57,7 @@ public interface Model extends AutoCloseable {
      * @return a new Model instance
      */
     static Model newInstance(String name) {
-        return newInstance(name, Device.defaultDevice());
+        return newInstance(name, (Device) null);
     }
 
     /**
@@ -79,7 +79,8 @@ static Model newInstance(String name, Device device) {
      * @return a new model instance
      */
     static Model newInstance(String name, String engineName) {
-        return Engine.getEngine(engineName).newModel(name, Device.defaultDevice());
+        Engine engine = Engine.getEngine(engineName);
+        return engine.newModel(name, null);
     }
 
     /**

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -56,7 +56,6 @@ public class MxModel extends BaseModel {
      */
     MxModel(String name, Device device) {
         super(name);
-        device = Device.defaultIfNull(device);
         dataType = DataType.FLOAT32;
         properties = new ConcurrentHashMap<>();
         manager = MxNDManager.getSystemManager().newSubManager(device);

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -361,7 +361,7 @@ public NDArray invoke(String operation, PairList<String, ?> params) {
 
     /** {@inheritDoc} */
     @Override
-    public Engine getEngine() {
+    public final Engine getEngine() {
         return Engine.getEngine(MxEngine.ENGINE_NAME);
     }
 
@@ -380,7 +380,7 @@ private NDArray fill(String opName, Shape shape, DataType dataType) {
     private static final class SystemManager extends MxNDManager {
 
         SystemManager() {
-            super(null, Device.defaultDevice(), JnaUtils.getVersion());
+            super(null, null, JnaUtils.getVersion());
         }
 
         /** {@inheritDoc} */

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/embedding/utils/BuildModelZooWordEmbedding.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.mxnet.zoo.nlp.embedding.utils;
 
-import ai.djl.Device;
 import ai.djl.Model;
 import ai.djl.modality.nlp.embedding.TrainableWordEmbedding;
 import ai.djl.ndarray.NDArray;
@@ -44,8 +43,7 @@ public static void main(String[] args) throws IOException {
 
     private static void buildEmbedding(String dir, String name) throws IOException {
         Path path = Paths.get(dir);
-        Device device = Device.defaultDevice();
-        Model model = Model.newInstance(name, device);
+        Model model = Model.newInstance(name);
         NDArray idxToVec =
                 model.getNDManager().load(path.resolve("idx_to_vec.mx")).singletonOrThrow();
         List<String> idxToToken = Utils.readLines(path.resolve("idx_to_token.txt"));

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -115,7 +115,7 @@ public OrtNDManager newSubManager(Device device) {
 
     /** {@inheritDoc} */
     @Override
-    public Engine getEngine() {
+    public final Engine getEngine() {
         return Engine.getEngine(OrtEngine.ENGINE_NAME);
     }
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -46,7 +46,6 @@ public class PtModel extends BaseModel {
      */
     PtModel(String name, Device device) {
         super(name);
-        device = Device.defaultIfNull(device);
         manager = PtNDManager.getSystemManager().newSubManager(device);
         manager.setName("ptModel");
         dataType = DataType.FLOAT32;

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -186,15 +186,15 @@ public PtNDManager newSubManager(Device device) {
 
     /** {@inheritDoc} */
     @Override
-    public Engine getEngine() {
+    public final Engine getEngine() {
         return Engine.getEngine(PtEngine.ENGINE_NAME);
     }
 
     /** The SystemManager is the root {@link PtNDManager} of which all others are children. */
     private static final class SystemManager extends PtNDManager {
 
         SystemManager() {
-            super(null, Device.defaultDevice());
+            super(null, null);
         }
 
         /** {@inheritDoc} */

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfModel.java
Patch:
@@ -43,7 +43,6 @@ public class TfModel extends BaseModel {
      */
     TfModel(String name, Device device) {
         super(name);
-        device = Device.defaultIfNull(device);
         properties = new ConcurrentHashMap<>();
         manager = TfNDManager.getSystemManager().newSubManager(device);
         manager.setName("tfModel");

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -222,7 +222,7 @@ public TfNDArray create(Buffer data, Shape shape, DataType dataType) {
 
     /** {@inheritDoc} */
     @Override
-    public Engine getEngine() {
+    public final Engine getEngine() {
         return Engine.getEngine(TfEngine.ENGINE_NAME);
     }
 
@@ -435,7 +435,7 @@ public void close() {
     private static final class SystemManager extends TfNDManager {
 
         SystemManager() {
-            super(null, Device.defaultDevice());
+            super(null, null);
         }
 
         /** {@inheritDoc} */

File: basicdataset/src/main/java/ai/djl/basicdataset/utils/FixedBucketSampler.java
Patch:
@@ -45,7 +45,7 @@ public class FixedBucketSampler implements Sampler {
      *
      * @param batchSize the batch size
      * @param numBuckets the number of buckets
-     * @param shuffle whether to shuffle data randomyl while sampling
+     * @param shuffle whether to shuffle data randomly while sampling
      */
     public FixedBucketSampler(int batchSize, int numBuckets, boolean shuffle) {
         this.numBuckets = numBuckets;

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -71,7 +71,7 @@ public void load(Path modelPath, String prefix, Map<String, ?> options)
             String[] extraFileKeys = new String[0];
             String[] extraFileValues = new String[0];
             // load jit extra files
-            if (options.containsKey("extraFiles")) {
+            if (options != null && options.containsKey("extraFiles")) {
                 extraFileKeys = ((String) options.get("extraFiles")).split(",");
                 extraFileValues = new String[extraFileKeys.length];
             }

File: api/src/main/java/ai/djl/modality/nlp/embedding/ModelZooTextEmbedding.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.ndarray.NDList;
 import ai.djl.nn.core.Embedding;
 import ai.djl.repository.zoo.ZooModel;
+import ai.djl.translate.Batchifier;
 import ai.djl.translate.NoopTranslator;
 import ai.djl.translate.TranslateException;
 import java.util.List;
@@ -36,7 +37,7 @@ public class ModelZooTextEmbedding implements TextEmbedding, AutoCloseable {
      */
     @SuppressWarnings("unchecked")
     public ModelZooTextEmbedding(Model model) {
-        predictor = model.newPredictor(new NoopTranslator());
+        predictor = model.newPredictor(new NoopTranslator(Batchifier.STACK));
         try {
             embedding = (Embedding<String>) model.getBlock();
         } catch (ClassCastException e) {

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainAmazonReviewRanking.java
Patch:
@@ -45,7 +45,6 @@
 import ai.djl.training.listener.TrainingListener;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.util.ProgressBar;
-import ai.djl.translate.NoopTranslator;
 import ai.djl.translate.PaddingStackBatchifier;
 import ai.djl.translate.TranslateException;
 import java.io.IOException;
@@ -75,7 +74,6 @@ public static TrainingResult runExample(String[] args)
                         .optApplication(Application.NLP.WORD_EMBEDDING)
                         .setTypes(NDList.class, NDList.class)
                         .optModelUrls("https://resources.djl.ai/test-models/distilbert.zip")
-                        .optTranslator(new NoopTranslator(null))
                         .optProgress(new ProgressBar())
                         .build();
         int maxTokenLength = 64;

File: extensions/aws-ai/src/test/java/ai/djl/aws/s3/S3RepositoryTest.java
Patch:
@@ -22,7 +22,6 @@
 import ai.djl.repository.zoo.ModelNotFoundException;
 import ai.djl.repository.zoo.ModelZoo;
 import ai.djl.repository.zoo.ZooModel;
-import ai.djl.translate.NoopTranslator;
 import java.io.IOException;
 import java.net.URI;
 import java.util.List;
@@ -57,7 +56,6 @@ public void testLoadModelFromS3()
                         .optModelUrls(
                                 "s3://djl-ai/mlrepo/model/cv/image_classification/ai/djl/mxnet/mlp/0.0.1")
                         .optModelName("mlp")
-                        .optTranslator(new NoopTranslator())
                         .build();
 
         try (ZooModel<NDList, NDList> model = ModelZoo.loadModel(criteria)) {
@@ -81,7 +79,6 @@ public void testLoadArchiveFromS3()
                         .setTypes(NDList.class, NDList.class)
                         .optModelUrls("s3://djl-ai/resources/test-models/mlp.tar.gz")
                         .optModelName("mlp")
-                        .optTranslator(new NoopTranslator())
                         .build();
 
         try (ZooModel<NDList, NDList> model = ModelZoo.loadModel(criteria)) {

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/ResnetTest.java
Patch:
@@ -107,7 +107,8 @@ public void testLoadPredict()
             throws IOException, ModelNotFoundException, TranslateException,
                     MalformedModelException {
         try (ZooModel<Image, Classifications> model = getModel()) {
-            try (Predictor<NDList, NDList> predictor = model.newPredictor(new NoopTranslator())) {
+            NoopTranslator translator = new NoopTranslator(Batchifier.STACK);
+            try (Predictor<NDList, NDList> predictor = model.newPredictor(translator)) {
                 NDList input = new NDList(model.getNDManager().ones(new Shape(3, 32, 32)));
                 List<NDList> inputs = Collections.nCopies(16, input);
                 predictor.batchPredict(inputs);

File: serving/src/main/java/ai/djl/serving/http/InferenceRequestHandler.java
Patch:
@@ -136,15 +136,14 @@ private void predict(
             modelManager
                     .registerModel(modelName, modelUrl, 1, 0)
                     .thenAccept(m -> modelManager.updateModel(modelName, 1, 1))
-                    .thenApply(
+                    .thenAccept(
                             p -> {
                                 try {
                                     modelManager.addJob(new Job(ctx, modelName, input));
                                 } catch (ModelNotFoundException e) {
                                     logger.warn("Unexpected error", e);
                                     NettyUtils.sendError(ctx, e);
                                 }
-                                return null;
                             })
                     .exceptionally(
                             t -> {

File: serving/src/main/java/ai/djl/serving/wlm/ModelManager.java
Patch:
@@ -100,10 +100,10 @@ public CompletableFuture<ModelInfo> registerModel(
                         String actualModelName;
                         if (modelName == null || modelName.isEmpty()) {
                             actualModelName = model.getName();
+                            actualModelName = actualModelName.replaceAll("(\\W|^_)", "_");
                         } else {
                             actualModelName = modelName;
                         }
-                        actualModelName = actualModelName.replaceAll("(\\W|^_)", "_");
 
                         ModelInfo modelInfo =
                                 new ModelInfo(

File: api/src/main/java/ai/djl/training/dataset/Batch.java
Patch:
@@ -181,7 +181,7 @@ public Batch[] split(Device[] devices, boolean evenSplit) {
                 NDList l = labels.toDevice(devices[0], true);
                 return new Batch[] {
                     new Batch(
-                            manager.newSubManager(),
+                            manager.newSubManager(devices[0]),
                             d,
                             l,
                             size,
@@ -205,7 +205,7 @@ public Batch[] split(Device[] devices, boolean evenSplit) {
                     (i == splittedData.length - 1) ? (size - i * baseSplitSize) : baseSplitSize;
             splitted[i] =
                     new Batch(
-                            manager.newSubManager(),
+                            manager.newSubManager(devices[i]),
                             d,
                             l,
                             subSize,

File: extensions/fasttext/src/main/java/ai/djl/fasttext/jni/NativeResource.java
Patch:
@@ -66,16 +66,16 @@ public void close() {
     @SuppressWarnings("deprecation")
     @Override
     protected void finalize() throws Throwable {
-        if (handle != null) {
+        if (handle.get() != null) {
             if (exception != null) {
                 logger.warn(
                         "Resource ({}) was not closed explicitly: {}",
                         getHandle(),
                         getClass().getSimpleName());
                 logger.warn("Resource was created:", exception);
             }
+            close();
         }
-        close();
         super.finalize();
     }
 }

File: extensions/sentencepiece/src/main/java/ai/djl/sentencepiece/jni/NativeResource.java
Patch:
@@ -74,8 +74,8 @@ protected void finalize() throws Throwable {
                         getClass().getSimpleName());
                 logger.warn("Resource was created:", exception);
             }
+            close();
         }
-        close();
         super.finalize();
     }
 }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/NativeResource.java
Patch:
@@ -86,8 +86,8 @@ protected void finalize() throws Throwable {
                         getClass().getSimpleName());
                 logger.warn("Resource was created:", exception);
             }
+            close();
         }
-        close();
         super.finalize();
     }
 }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/NativeResource.java
Patch:
@@ -85,8 +85,8 @@ protected void finalize() throws Throwable {
                         getClass().getSimpleName());
                 logger.warn("Resource was created:", exception);
             }
+            close();
         }
-        close();
         super.finalize();
     }
 }

File: basicdataset/src/main/java/ai/djl/basicdataset/AbstractImageFolder.java
Patch:
@@ -64,7 +64,7 @@ protected AbstractImageFolder(ImageFolderBuilder<?> builder) {
 
     /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) throws IOException {
+    public Record get(NDManager manager, long index) throws IOException {
         Pair<String, Integer> item = items.get(Math.toIntExact(index));
 
         Path imagePath = getImagePath(item.getKey());

File: basicdataset/src/main/java/ai/djl/basicdataset/BananaDetection.java
Patch:
@@ -84,7 +84,7 @@ public static Builder builder() {
     }
 
     @Override
-    protected Record get(NDManager manager, long index) throws IOException {
+    public Record get(NDManager manager, long index) throws IOException {
         int idx = Math.toIntExact(index);
         NDList d =
                 new NDList(

File: basicdataset/src/main/java/ai/djl/basicdataset/CaptchaDataset.java
Patch:
@@ -80,7 +80,7 @@ public static CaptchaDataset.Builder builder() {
 
     /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) throws IOException {
+    public Record get(NDManager manager, long index) throws IOException {
         String item = items.get(Math.toIntExact(index));
         Path imagePath =
                 resource.getRepository().getFile(dataItem, pathPrefix + '/' + item + ".jpeg");

File: basicdataset/src/main/java/ai/djl/basicdataset/CocoDetection.java
Patch:
@@ -70,7 +70,7 @@ public static Builder builder() {
 
     /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) throws IOException {
+    public Record get(NDManager manager, long index) throws IOException {
         int idx = Math.toIntExact(index);
         NDList d =
                 new NDList(

File: basicdataset/src/main/java/ai/djl/basicdataset/PikachuDetection.java
Patch:
@@ -122,7 +122,7 @@ public void prepare(Progress progress) throws IOException {
 
     /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) throws IOException {
+    public Record get(NDManager manager, long index) throws IOException {
         int idx = Math.toIntExact(index);
         NDList d =
                 new NDList(

File: basicdataset/src/main/java/ai/djl/basicdataset/StanfordMovieReview.java
Patch:
@@ -129,7 +129,7 @@ private void prepareDataSentiment(Path path, boolean sentiment, List<String> rev
 
     /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) {
+    public Record get(NDManager manager, long index) {
         NDList data = new NDList();
         data.add(sourceTextData.getEmbedding(manager, index));
         NDList label =

File: basicdataset/src/main/java/ai/djl/basicdataset/TatoebaEnglishFrenchDataset.java
Patch:
@@ -100,8 +100,9 @@ public void prepare(Progress progress) throws IOException, EmbeddingException {
         prepared = true;
     }
 
+    /** {@inheritDoc} */
     @Override
-    protected Record get(NDManager manager, long index) {
+    public Record get(NDManager manager, long index) {
         NDList data = new NDList();
         NDList labels = new NDList();
         data.add(sourceTextData.getEmbedding(manager, index));

File: api/src/main/java/ai/djl/training/listener/TimeMeasureTrainingListener.java
Patch:
@@ -83,7 +83,7 @@ public void onTrainingEnd(Trainer trainer) {
     }
 
     private static void dumpTrainingTimeInfo(Metrics metrics, String logDir) {
-        if (logDir == null) {
+        if (metrics == null || logDir == null) {
             return;
         }
         try {

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -201,11 +201,10 @@ private Batch fetch(List<Long> indices, int progress) throws IOException {
     }
 
     private void preFetch() {
-        List<Long> indices;
         if (!sample.hasNext()) {
             return;
         }
-        indices = sample.next();
+        List<Long> indices = sample.next();
         Callable<Batch> task = new PreFetchCallable(indices);
         Future<Batch> result = executor.submit(task);
         queue.offer(result);

File: api/src/main/java/ai/djl/training/LocalParameterServer.java
Patch:
@@ -15,7 +15,6 @@
 import ai.djl.Device;
 import ai.djl.ndarray.NDArray;
 import ai.djl.training.optimizer.Optimizer;
-import java.util.Arrays;
 
 /** {@code LocalParameterServer} is an implementation of the {@code ParameterServer} interface. */
 public class LocalParameterServer implements ParameterServer {
@@ -60,7 +59,6 @@ public void update(String parameterId, NDArray[] grads, NDArray[] params) {
                 }
             }
         }
-        Arrays.stream(grads).forEach(NDArray::close);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/training/ParameterServer.java
Patch:
@@ -36,6 +36,7 @@ public interface ParameterServer extends AutoCloseable {
     default void update(String parameterId, NDArray[] params) {
         NDArray[] grads = Arrays.stream(params).map(NDArray::getGradient).toArray(NDArray[]::new);
         update(parameterId, grads, params);
+        Arrays.stream(grads).forEach(NDArray::close);
     }
     /**
      * Updates the parameter of a key from Parameter Server.

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -188,6 +188,7 @@ private Batch fetch(List<Long> indices, int progress) throws IOException {
             batchLabels = batchLabels.toDevice(device, false);
         }
         return new Batch(
+                subManager,
                 batchData,
                 batchLabels,
                 batchSize,

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -154,8 +154,8 @@ public SparseFormat getSparseFormat() {
     /** {@inheritDoc} */
     @Override
     public NDManager attach(NDManager manager) {
-        detach();
         NDManager original = this.manager;
+        detach();
         this.manager = (MxNDManager) manager;
         manager.attach(getUid(), this);
         return original;

File: examples/src/main/java/ai/djl/examples/training/TrainSentimentAnalysis.java
Patch:
@@ -199,9 +199,7 @@ public static StanfordMovieReview getDataset(
                                                 (m) -> m.ones(new Shape(1)).mul(paddingTokenValue))
                                         .build())
                         .setSourceConfiguration(
-                                new TextData.Configuration()
-                                        .setTextEmbedding(new ModelZooTextEmbedding(embeddingModel))
-                                        .setTextProcessors(TEXT_PROCESSORS))
+                                new TextData.Configuration().setTextProcessors(TEXT_PROCESSORS))
                         .optUsage(usage)
                         .optExecutor(executorService, 8)
                         .optLimit(arguments.getLimit())

File: api/src/main/java/ai/djl/training/tracker/LinearTracker.java
Patch:
@@ -140,7 +140,7 @@ public LinearTracker build() {
                         slope < 0, "The slope must be negative for a min value");
                 Preconditions.checkArgument(
                         min < baseValue, "The min must be smaller than the base value");
-                maxUpdates = Math.round((baseValue - min) / slope);
+                maxUpdates = -Math.round((baseValue - min) / slope);
             } else if (maxUpdates == null) {
                 // Default to no max if none set
                 maxUpdates = Integer.MAX_VALUE;

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/PointerArray.java
Patch:
@@ -60,7 +60,7 @@ public boolean equals(Object o) {
         if (o == null) {
             return false;
         }
-        return (o instanceof Pointer)
+        return (o instanceof PointerArray)
                 && (((PointerArray) o).numElements() == numElements())
                 && super.equals(o);
     }

File: api/src/main/java/ai/djl/ndarray/index/NDIndex.java
Patch:
@@ -46,8 +46,10 @@
  */
 public class NDIndex {
 
+    /* Android regex requires escape } char as well */
     private static final Pattern ITEM_PATTERN =
-            Pattern.compile("(\\*)|((-?\\d+|\\{})?:(-?\\d+|\\{})?(:(-?\\d+|\\{}))?)|(-?\\d+|\\{})");
+            Pattern.compile(
+                    "(\\*)|((-?\\d+|\\{\\})?:(-?\\d+|\\{\\})?(:(-?\\d+|\\{\\}))?)|(-?\\d+|\\{\\})");
 
     private int rank;
     private List<NDIndexElement> indices;

File: api/src/main/java/ai/djl/ndarray/index/NDIndex.java
Patch:
@@ -106,7 +106,7 @@ public NDIndex() {
      *
      * @param indices a comma separated list of indices corresponding to either subsections,
      *     everything, or slices on a particular dimension
-     * @param args arguments to replace the varaible "{}" in the indices string. Can be an integer,
+     * @param args arguments to replace the variable "{}" in the indices string. Can be an integer,
      *     long, boolean {@link NDArray}, or integer {@link NDArray}.
      * @see <a href="https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html">Numpy
      *     Indexing</a>
@@ -185,7 +185,7 @@ public List<NDIndexElement> getIndices() {
      * Updates the NDIndex by appending indices to the array.
      *
      * @param indices the indices to add similar to {@link #NDIndex(String, Object...)}
-     * @param args arguments to replace the varaible "{}" in the indices string. Can be an integer,
+     * @param args arguments to replace the variable "{}" in the indices string. Can be an integer,
      *     long, boolean {@link NDArray}, or integer {@link NDArray}.
      * @return the updated {@link NDIndex}
      * @see #NDIndex(String, Object...)

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/LibUtils.java
Patch:
@@ -48,6 +48,8 @@ public static void loadLibrary() {
             logger.debug("Loading TensorFlow library from: {}", libName);
             String path = new File(libName).getParentFile().toString();
             System.setProperty("org.bytedeco.javacpp.platform.preloadpath", path);
+            // workaround javacpp physical memory check bug
+            System.setProperty("org.bytedeco.javacpp.maxPhysicalBytes", "0");
         }
         // defer to tensorflow-core-api to handle loading native library.
     }

File: api/src/main/java/ai/djl/training/dataset/RandomAccessDataset.java
Patch:
@@ -408,6 +408,7 @@ public SubDataset(RandomAccessDataset dataset, int[] indices, int from, int to)
             this.indices = indices;
             this.from = from;
             this.to = to;
+            limit = Long.MAX_VALUE;
         }
 
         /** {@inheritDoc} */

File: api/src/main/java/ai/djl/nn/convolutional/package-info.java
Patch:
@@ -13,6 +13,6 @@
 
 /**
  * Contains classes that define convolutional operations extending {@link
- * ai.djl.nn.convolutional.Convolution}.
+ * ai.djl.nn.convolutional.Convolution} and {@link ai.djl.nn.convolutional.Deconvolution}.
  */
 package ai.djl.nn.convolutional;

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -53,7 +53,7 @@ public void testTrainResNetSymbolicNightly()
             Engine.getInstance().setRandomSeed(SEED);
             TrainingResult result = TrainResnetWithCifar10.runExample(args);
             Assert.assertTrue(result.getTrainEvaluation("Accuracy") >= 0.8f);
-            Assert.assertTrue(result.getValidateEvaluation("Accuracy") >= 0.7f);
+            Assert.assertTrue(result.getValidateEvaluation("Accuracy") >= 0.68f);
             Assert.assertTrue(result.getValidateLoss() < 1.1);
         }
     }

File: api/src/main/java/ai/djl/translate/PaddingStackBatchifier.java
Patch:
@@ -62,6 +62,7 @@ public NDList batchify(NDList[] inputs) {
             maxSize = Math.max(maxSize, paddingSize);
             for (int j = 0; j < inputs.length; j++) {
                 NDArray array = inputs[j].get(arrayIndex);
+                String arrayName = array.getName();
                 long validLength = array.getShape().get(dimIndex);
                 if (validLength < maxSize) {
                     NDArray paddingArray =
@@ -71,6 +72,8 @@ public NDList batchify(NDList[] inputs) {
                     array = array.concat(paddingArray.toType(array.getDataType(), false), dimIndex);
                 }
                 arrayValidLengths[j] = validLength;
+                // keep input name
+                array.setName(arrayName);
                 inputs[j].set(arrayIndex, array);
             }
             validLengths.add(manager.create(arrayValidLengths));

File: api/src/main/java/ai/djl/translate/StackBatchifier.java
Patch:
@@ -44,10 +44,13 @@ public NDList batchify(NDList[] inputs) {
             NDList result = new NDList(numInputKinds);
             for (int i = 0; i < numInputKinds; i++) {
                 NDList inputsOfKind = new NDList(batchSize);
+                String inputName = inputs[0].get(i).getName();
                 for (NDList input : inputs) {
                     inputsOfKind.add(input.get(i));
                 }
                 NDArray stacked = NDArrays.stack(new NDList(inputsOfKind));
+                // keep the name for stacked inputs
+                stacked.setName(inputName);
                 result.add(stacked);
             }
 

File: api/src/main/java/ai/djl/BaseModel.java
Patch:
@@ -250,8 +250,7 @@ protected void finalize() throws Throwable {
         super.finalize();
     }
 
-    protected Path paramPathResolver(String prefix, Map<String, Object> options)
-            throws IOException {
+    protected Path paramPathResolver(String prefix, Map<String, ?> options) throws IOException {
         Object epochOption = null;
         if (options != null) {
             epochOption = options.get("epoch");
@@ -269,7 +268,7 @@ protected Path paramPathResolver(String prefix, Map<String, Object> options)
         return modelDir.resolve(String.format(Locale.ENGLISH, "%s-%04d.params", prefix, epoch));
     }
 
-    protected boolean readParameters(Path paramFile, Map<String, Object> options)
+    protected boolean readParameters(Path paramFile, Map<String, ?> options)
             throws IOException, MalformedModelException {
         logger.debug("Try to load model from {}", paramFile);
         try (DataInputStream dis = new DataInputStream(Files.newInputStream(paramFile))) {

File: api/src/main/java/ai/djl/Model.java
Patch:
@@ -129,7 +129,7 @@ default void load(Path modelPath, String prefix) throws IOException, MalformedMo
      * @throws IOException when IO operation fails in loading a resource
      * @throws MalformedModelException if model file is corrupted
      */
-    void load(Path modelPath, String prefix, Map<String, Object> options)
+    void load(Path modelPath, String prefix, Map<String, ?> options)
             throws IOException, MalformedModelException;
 
     /**

File: api/src/main/java/ai/djl/modality/cv/translator/ImageClassificationTranslator.java
Patch:
@@ -75,7 +75,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);
@@ -109,9 +109,9 @@ protected Builder self() {
 
         /** {@inheritDoc} */
         @Override
-        protected void configPostProcess(Map<String, Object> arguments) {
+        protected void configPostProcess(Map<String, ?> arguments) {
             super.configPostProcess(arguments);
-            applySoftmax = getBooleanValue(arguments, "applySoftmax");
+            applySoftmax = getBooleanValue(arguments, "applySoftmax", false);
         }
 
         /**

File: api/src/main/java/ai/djl/modality/cv/translator/InstanceSegmentationTranslator.java
Patch:
@@ -170,7 +170,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);
@@ -230,7 +230,7 @@ protected Builder self() {
 
         /** {@inheritDoc} */
         @Override
-        protected void configPostProcess(Map<String, Object> arguments) {
+        protected void configPostProcess(Map<String, ?> arguments) {
             super.configPostProcess(arguments);
             threshold = getFloatValue(arguments, "threshold", 0.3f);
             shortEdge = getIntValue(arguments, "shortEdge", 600);

File: api/src/main/java/ai/djl/modality/cv/translator/ObjectDetectionTranslator.java
Patch:
@@ -108,9 +108,9 @@ public double getImageHeight() {
 
         /** {@inheritDoc} */
         @Override
-        protected void configPostProcess(Map<String, Object> arguments) {
+        protected void configPostProcess(Map<String, ?> arguments) {
             super.configPostProcess(arguments);
-            if (getBooleanValue(arguments, "rescale")) {
+            if (getBooleanValue(arguments, "rescale", false)) {
                 optRescaleSize(width, height);
             }
             threshold = getFloatValue(arguments, "threshold", 0.2f);

File: api/src/main/java/ai/djl/modality/cv/translator/SimplePoseTranslator.java
Patch:
@@ -99,7 +99,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);
@@ -135,7 +135,7 @@ protected Builder self() {
 
         /** {@inheritDoc} */
         @Override
-        protected void configPostProcess(Map<String, Object> arguments) {
+        protected void configPostProcess(Map<String, ?> arguments) {
             threshold = getFloatValue(arguments, "threshold", 0.2f);
         }
 

File: api/src/main/java/ai/djl/modality/cv/translator/SingleShotDetectionTranslator.java
Patch:
@@ -89,7 +89,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);

File: api/src/main/java/ai/djl/modality/cv/translator/YoloTranslator.java
Patch:
@@ -83,7 +83,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/FileTranslatorFactory.java
Patch:
@@ -40,7 +40,7 @@ public FileTranslatorFactory(TranslatorFactory<Image, T> factory) {
 
     /** {@inheritDoc} */
     @Override
-    public Translator<Path, T> newInstance(Model model, Map<String, Object> arguments)
+    public Translator<Path, T> newInstance(Model model, Map<String, ?> arguments)
             throws TranslateException {
         return new FileTranslator<>(factory.newInstance(model, arguments));
     }

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/InputStreamTranslatorFactory.java
Patch:
@@ -40,7 +40,7 @@ public InputStreamTranslatorFactory(TranslatorFactory<Image, T> factory) {
 
     /** {@inheritDoc} */
     @Override
-    public Translator<InputStream, T> newInstance(Model model, Map<String, Object> arguments)
+    public Translator<InputStream, T> newInstance(Model model, Map<String, ?> arguments)
             throws TranslateException {
         return new InputStreamTranslator<>(factory.newInstance(model, arguments));
     }

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/UrlTranslatorFactory.java
Patch:
@@ -40,7 +40,7 @@ public UrlTranslatorFactory(TranslatorFactory<Image, T> factory) {
 
     /** {@inheritDoc} */
     @Override
-    public Translator<URL, T> newInstance(Model model, Map<String, Object> arguments)
+    public Translator<URL, T> newInstance(Model model, Map<String, ?> arguments)
             throws TranslateException {
         return new UrlTranslator<>(factory.newInstance(model, arguments));
     }

File: api/src/main/java/ai/djl/modality/cv/zoo/ActionRecognitionModelLoader.java
Patch:
@@ -110,7 +110,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Class
         /** {@inheritDoc} */
         @Override
         public Translator<Image, Classifications> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return ImageClassificationTranslator.builder(arguments).build();
         }
     }

File: api/src/main/java/ai/djl/modality/cv/zoo/ImageClassificationModelLoader.java
Patch:
@@ -132,7 +132,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Class
         /** {@inheritDoc} */
         @Override
         public Translator<Image, Classifications> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return ImageClassificationTranslator.builder(arguments).build();
         }
     }

File: api/src/main/java/ai/djl/modality/cv/zoo/InstanceSegmentationModelLoader.java
Patch:
@@ -137,7 +137,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Detec
         /** {@inheritDoc} */
         @Override
         public Translator<Image, DetectedObjects> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return InstanceSegmentationTranslator.builder(arguments).build();
         }
     }

File: api/src/main/java/ai/djl/modality/cv/zoo/ObjectDetectionModelLoader.java
Patch:
@@ -147,7 +147,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Detec
         /** {@inheritDoc} */
         @Override
         public Translator<Image, DetectedObjects> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return SingleShotDetectionTranslator.builder(arguments).build();
         }
     }

File: api/src/main/java/ai/djl/modality/cv/zoo/SimplePoseModelLoader.java
Patch:
@@ -133,7 +133,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Joint
 
         /** {@inheritDoc} */
         @Override
-        public Translator<Image, Joints> newInstance(Model model, Map<String, Object> arguments) {
+        public Translator<Image, Joints> newInstance(Model model, Map<String, ?> arguments) {
             // default size: 192
             return SimplePoseTranslator.builder(arguments).build();
         }

File: api/src/main/java/ai/djl/modality/cv/zoo/YoloModelLoader.java
Patch:
@@ -65,7 +65,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Detec
 
         @Override
         public Translator<Image, DetectedObjects> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return YoloTranslator.builder(arguments).build();
         }
     }

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -85,9 +85,9 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
             throw new ModelNotFoundException("Model not found.");
         }
 
-        Map<String, Object> override = criteria.getArguments();
         Progress progress = criteria.getProgress();
-        Map<String, Object> arguments = artifact.getArguments(override);
+        Map<String, Object> arguments = artifact.getArguments(criteria.getArguments());
+        Map<String, String> options = artifact.getOptions(criteria.getOptions());
 
         try {
             TranslatorFactory<I, O> factory = criteria.getTranslatorFactory();
@@ -139,7 +139,7 @@ public <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
             if (criteria.getBlock() != null) {
                 model.setBlock(criteria.getBlock());
             }
-            model.load(modelPath, null, criteria.getOptions());
+            model.load(modelPath, null, options);
             Application application = criteria.getApplication();
             if (application != Application.UNDEFINED) {
                 arguments.put("application", application.getPath());

File: api/src/main/java/ai/djl/repository/zoo/ZooModel.java
Patch:
@@ -54,7 +54,7 @@ public ZooModel(Model model, Translator<I, O> translator) {
 
     /** {@inheritDoc} */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options) {
+    public void load(Path modelPath, String prefix, Map<String, ?> options) {
         throw new IllegalArgumentException("ZooModel should not be re-loaded.");
     }
 

File: api/src/main/java/ai/djl/translate/TranslatorFactory.java
Patch:
@@ -31,6 +31,5 @@ public interface TranslatorFactory<I, O> {
      * @return a new instance of the {@code Translator} class
      * @throws TranslateException if failed to create Translator instance
      */
-    Translator<I, O> newInstance(Model model, Map<String, Object> arguments)
-            throws TranslateException;
+    Translator<I, O> newInstance(Model model, Map<String, ?> arguments) throws TranslateException;
 }

File: api/src/test/java/ai/djl/test/mock/MockModel.java
Patch:
@@ -41,8 +41,7 @@ public class MockModel implements Model {
 
     /** {@inheritDoc} */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options)
-            throws IOException {
+    public void load(Path modelPath, String prefix, Map<String, ?> options) throws IOException {
         if (Files.notExists(modelPath)) {
             throw new FileNotFoundException("File not found: " + modelPath);
         }

File: extensions/fasttext/src/main/java/ai/djl/fasttext/FtModel.java
Patch:
@@ -67,7 +67,7 @@ public FtModel(String name) {
 
     /** {@inheritDoc} */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options)
+    public void load(Path modelPath, String prefix, Map<String, ?> options)
             throws IOException, MalformedModelException {
         if (Files.notExists(modelPath)) {
             throw new FileNotFoundException(

File: extensions/fasttext/src/main/java/ai/djl/fasttext/zoo/nlp/textclassification/TextClassificationModelLoader.java
Patch:
@@ -80,7 +80,7 @@ private static final class FactoryImpl implements TranslatorFactory<String, Clas
         /** {@inheritDoc} */
         @Override
         public Translator<String, Classifications> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return null;
         }
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -87,7 +87,7 @@ public class MxModel extends BaseModel {
      * @throws IOException Exception for file loading
      */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options)
+    public void load(Path modelPath, String prefix, Map<String, ?> options)
             throws IOException, MalformedModelException {
         modelDir = modelPath.toAbsolutePath();
         if (prefix == null) {
@@ -178,7 +178,7 @@ public void close() {
     }
 
     @SuppressWarnings("PMD.UseConcurrentHashMap")
-    private void loadParameters(Path paramFile, Map<String, Object> options)
+    private void loadParameters(Path paramFile, Map<String, ?> options)
             throws IOException, MalformedModelException {
         if (readParameters(paramFile, options)) {
             return;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/embedding/GloveWordEmbeddingModelLoader.java
Patch:
@@ -117,7 +117,7 @@ private static final class FactoryImpl implements TranslatorFactory<String, NDLi
 
         /** {@inheritDoc} */
         @Override
-        public Translator<String, NDList> newInstance(Model model, Map<String, Object> arguments) {
+        public Translator<String, NDList> newInstance(Model model, Map<String, ?> arguments) {
             String unknownToken = (String) arguments.get("unknownToken");
             return new TranslatorImpl(unknownToken);
         }

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtModel.java
Patch:
@@ -55,7 +55,7 @@ public class OrtModel extends BaseModel {
 
     /** {@inheritDoc} */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options)
+    public void load(Path modelPath, String prefix, Map<String, ?> options)
             throws IOException, MalformedModelException {
         modelDir = modelPath.toAbsolutePath();
         if (prefix == null) {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -55,7 +55,7 @@ public class PtModel extends BaseModel {
 
     /** {@inheritDoc} */
     @Override
-    public void load(Path modelPath, String prefix, Map<String, Object> options)
+    public void load(Path modelPath, String prefix, Map<String, ?> options)
             throws IOException, MalformedModelException {
         modelDir = modelPath.toAbsolutePath();
         if (prefix == null) {

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/PtSsdModelLoader.java
Patch:
@@ -59,7 +59,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Detec
         @Override
         @SuppressWarnings("unchecked")
         public Translator<Image, DetectedObjects> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return PtSsdTranslator.builder(arguments).build();
         }
     }

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/PtSsdTranslator.java
Patch:
@@ -191,7 +191,7 @@ public static Builder builder() {
      * @param arguments arguments to specify builder options
      * @return a new builder
      */
-    public static Builder builder(Map<String, Object> arguments) {
+    public static Builder builder(Map<String, ?> arguments) {
         Builder builder = new Builder();
         builder.configPreProcess(arguments);
         builder.configPostProcess(arguments);
@@ -236,14 +236,14 @@ protected Builder self() {
 
         /** {@inheritDoc} */
         @Override
-        protected void configPreProcess(Map<String, Object> arguments) {
+        protected void configPreProcess(Map<String, ?> arguments) {
             super.configPreProcess(arguments);
         }
 
         /** {@inheritDoc} */
         @Override
         @SuppressWarnings("unchecked")
-        protected void configPostProcess(Map<String, Object> arguments) {
+        protected void configPostProcess(Map<String, ?> arguments) {
             super.configPostProcess(arguments);
 
             threshold = getFloatValue(arguments, "threshold", 0.4f);

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/nlp/qa/BertQAModelLoader.java
Patch:
@@ -85,7 +85,7 @@ private static final class FactoryImpl implements TranslatorFactory<QAInput, Str
 
         /** {@inheritDoc} */
         @Override
-        public Translator<QAInput, String> newInstance(Model model, Map<String, Object> arguments) {
+        public Translator<QAInput, String> newInstance(Model model, Map<String, ?> arguments) {
             return PtBertQATranslator.builder().build();
         }
     }

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/nlp/sentimentanalysis/DistilBertSentimentAnalysisModelLoader.java
Patch:
@@ -86,7 +86,7 @@ private static final class FactoryImpl implements TranslatorFactory<String, Clas
         /** {@inheritDoc} */
         @Override
         public Translator<String, Classifications> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
             return new PtDistilBertTranslator();
         }
     }

File: tensorflow/tensorflow-model-zoo/src/main/java/ai/djl/tensorflow/zoo/cv/objectdetction/TfSsdModelLoader.java
Patch:
@@ -63,7 +63,7 @@ private static final class FactoryImpl implements TranslatorFactory<Image, Detec
         @Override
         @SuppressWarnings("unchecked")
         public Translator<Image, DetectedObjects> newInstance(
-                Model model, Map<String, Object> arguments) {
+                Model model, Map<String, ?> arguments) {
 
             return TfSsdTranslator.builder(arguments).build();
         }

File: tensorflow/tensorflow-model-zoo/src/test/java/ai/djl/tensorflow/integration/modality/cv/TfSsdTest.java
Patch:
@@ -36,17 +36,16 @@
 import org.testng.annotations.Test;
 
 public class TfSsdTest {
+
     @Test
     public void testTfSSD() throws IOException, ModelException, TranslateException {
-
         Criteria<Image, DetectedObjects> criteria =
                 Criteria.builder()
                         .optApplication(Application.CV.OBJECT_DETECTION)
                         .setTypes(Image.class, DetectedObjects.class)
                         .optArtifactId("ssd")
                         .optFilter("backbone", "mobilenet_v2")
                         .optEngine("TensorFlow")
-                        .optOption("Tags", new String[] {})
                         .optProgress(new ProgressBar())
                         .build();
 

File: api/src/main/java/ai/djl/ndarray/types/Shape.java
Patch:
@@ -269,7 +269,7 @@ public Stream<Pair<Long, LayoutType>> stream() {
     }
 
     /**
-     * Joins a this shape with axes.
+     * Joins this shape with axes.
      *
      * @param axes the axes to join
      * @return the joined {@code Shape}
@@ -279,7 +279,7 @@ public Shape add(long... axes) {
     }
 
     /**
-     * Joins a this shape with specified {@code other} shape.
+     * Joins this shape with specified {@code other} shape.
      *
      * @param other the shape to join
      * @return the joined {@code Shape}

File: api/src/main/java/ai/djl/modality/nlp/preprocess/PunctuationSeparator.java
Patch:
@@ -21,15 +21,15 @@
 public class PunctuationSeparator implements TextProcessor {
     private static final Pattern PATTERN =
             Pattern.compile(
-                    "\\s*(?<=[\\p{Punct}\\p{IsPunctuation}])|(?=[\\p{Punct}\\p{IsPunctuation}])\\s*");
+                    "\\s+|(?<=[\\p{Punct}\\p{IsPunctuation}])|(?=[\\p{Punct}\\p{IsPunctuation}])");
 
     /** {@inheritDoc} */
     @Override
     public List<String> preprocess(List<String> tokens) {
         return tokens.stream()
                 .map(PATTERN::split)
                 .flatMap(Arrays::stream)
-                .filter(s -> !s.trim().isEmpty())
+                .filter(s -> !s.isEmpty())
                 .collect(Collectors.toList());
     }
 }

File: api/src/main/java/ai/djl/ndarray/NDManager.java
Patch:
@@ -1066,7 +1066,7 @@ default NDArray linspace(float start, float stop, int num, boolean endpoint, Dev
      * @return the drawn samples {@link NDArray}
      */
     default NDArray randomUniform(float low, float high, Shape shape) {
-        return randomUniform(low, high, shape, DataType.UNKNOWN);
+        return randomUniform(low, high, shape, DataType.FLOAT32);
     }
 
     /**

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -338,6 +338,8 @@ native Pointer tensorUniform(
     native Pointer torchEye(
             int n, int m, int dType, int layout, int[] device, boolean requiredGrad);
 
+    native Pointer torchErfinv(Pointer handle);
+
     native Pointer torchNNInterpolate(Pointer handle, long[] size, int mode, boolean alignCorners);
 
     native Pointer torchNNLinear(Pointer handle, Pointer weightHandle, Pointer biasHandle);

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -498,7 +498,9 @@ public NDArray any() {
     /** {@inheritDoc} */
     @Override
     public NDArray erfinv() {
-        throw new UnsupportedOperationException("TensorFlow does not support erfinv yet");
+        try (Tensor<?> tensor = tf.math.erfinv(getOperand()).asTensor()) {
+            return new TfNDArray(manager, tensor);
+        }
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/nn/AbstractBlock.java
Patch:
@@ -28,6 +28,7 @@
 import java.util.Collections;
 import java.util.LinkedHashMap;
 import java.util.List;
+import java.util.Locale;
 import java.util.function.Function;
 
 /**
@@ -126,7 +127,7 @@ public AbstractBlock(byte version) {
      */
     protected final <B extends Block> B addChildBlock(String name, B block) {
         int childNumber = children.size() + 1;
-        children.add(String.format("%02d%s", childNumber, name), block);
+        children.add(String.format(Locale.ENGLISH, "%02d%s", childNumber, name), block);
         return block;
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/CachedOp.java
Patch:
@@ -51,7 +51,8 @@ public class CachedOp extends NativeResource {
     /**
      * Creates an instance of {@link CachedOp}.
      *
-     * <p>It can be created by using {@link JnaUtils#createCachedOp(MxSymbolBlock, MxNDManager)}
+     * <p>It can be created by using {@link JnaUtils#createCachedOp(MxSymbolBlock, MxNDManager,
+     * boolean)}
      *
      * @param handle the C handle of the CachedOp
      * @param manager the manager used to create the NDArray

File: tensorflow/tensorflow-model-zoo/src/main/java/ai/djl/tensorflow/zoo/cv/objectdetction/TfSsdTranslator.java
Patch:
@@ -33,7 +33,6 @@
 public class TfSsdTranslator extends SingleShotDetectionTranslator {
 
     private int maxBoxes;
-    private float threshHold;
 
     /**
      * Creates the SSD translator from the given builder.
@@ -43,7 +42,6 @@ public class TfSsdTranslator extends SingleShotDetectionTranslator {
     protected TfSsdTranslator(Builder builder) {
         super(builder);
         this.maxBoxes = builder.maxBoxes;
-        this.threshHold = builder.getThreshold();
     }
 
     @Override
@@ -92,7 +90,7 @@ public DetectedObjects processOutput(TranslatorContext ctx, NDList list) {
             long classId = classIds[i];
             double score = scores[i];
             // classId starts from 0, -1 means background
-            if (classId >= 0 && score > threshHold) {
+            if (classId >= 0 && score > threshold) {
                 if (classId >= classes.size()) {
                     throw new AssertionError("Unexpected index: " + classId);
                 }

File: api/src/main/java/ai/djl/util/cuda/CudaUtils.java
Patch:
@@ -36,7 +36,7 @@ private CudaUtils() {}
      * @return {@code true} if CUDA runtime library is in the system
      */
     public static boolean hasCuda() {
-        return LIB != null;
+        return getGpuCount() > 0;
     }
 
     /**

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/LibUtils.java
Patch:
@@ -308,7 +308,7 @@ private static String downloadPyTorch(Platform platform, AtomicBoolean fallback)
         try (InputStream is = new URL(link + "/files.txt").openStream()) {
             List<String> lines = Utils.readLines(is);
             if (flavor.startsWith("cu")
-                    && !lines.contains(flavor + '/' + os + "/native/lib/libtorch.so.gz")) {
+                    && !lines.contains(flavor + '/' + os + "/native/lib/" + libName + ".gz")) {
                 logger.warn("No matching cuda flavor for {} found: {}.", os, flavor);
                 // fallback to CPU
                 flavor = "cpu";

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/CustomTranslatorTest.java
Patch:
@@ -202,7 +202,7 @@ private void runImageClassification(Application application, Map<String, Object>
                         .setTypes(Input.class, Output.class)
                         .optApplication(application)
                         .optArguments(arguments)
-                        .optModelUrls(modelDir.toString())
+                        .optModelUrls(modelDir.toUri().toURL().toString())
                         .build();
 
         try (ZooModel<Input, Output> model = ModelZoo.loadModel(criteria);
@@ -221,7 +221,7 @@ public void runRawTranslator() throws IOException, ModelException, TranslateExce
         Criteria<Input, Output> criteria =
                 Criteria.builder()
                         .setTypes(Input.class, Output.class)
-                        .optModelUrls(modelDir.toString())
+                        .optModelUrls(modelDir.toUri().toURL().toString())
                         .build();
 
         try (ZooModel<Input, Output> model = ModelZoo.loadModel(criteria);

File: extensions/sentencepiece/src/main/java/ai/djl/sentencepiece/SpTokenizer.java
Patch:
@@ -37,7 +37,7 @@ public class SpTokenizer implements Tokenizer {
      * @throws IOException when IO operation fails in loading a resource
      */
     public SpTokenizer(Path modelPath, String prefix) throws IOException {
-        this.processor = new SpProcessor();
+        this.processor = SpProcessor.newInstance();
         loadModel(modelPath, prefix);
     }
 

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -152,9 +152,9 @@ default byte[] encode() {
      * <p>Attached resource will be closed when the {@link NDManager} is closed.
      *
      * @param manager the {@link NDManager} to be attached
-     * @see NDManager
+     * @return the original {@link NDManager}
      */
-    void attach(NDManager manager);
+    NDManager attach(NDManager manager);
 
     /**
      * Detaches the {@code NDArray} from current {@link NDManager}'s lifecycle.

File: api/src/main/java/ai/djl/training/optimizer/Optimizer.java
Patch:
@@ -141,6 +141,7 @@ protected NDArray withDefaultState(
                         k -> {
                             Map<Device, NDArray> map = new ConcurrentHashMap<>();
                             NDArray s = defaultFunction.apply(k);
+                            // TODO attach s to the NDManager of ParameterStore
                             s.detach(); // s is detached because it would be put into the optimizer
                             // callback manager and closed after the optimizer callback
                             // when using the MxParameterServer. For now, this will let it be closed

File: api/src/test/java/ai/djl/test/mock/MockNDArray.java
Patch:
@@ -211,10 +211,12 @@ public NDArray get(NDIndex index) {
 
     /** {@inheritDoc} */
     @Override
-    public void attach(NDManager manager) {
+    public NDManager attach(NDManager manager) {
         detach();
+        NDManager original = this.manager;
         this.manager = manager;
         manager.attach(getUid(), this);
+        return original;
     }
 
     /** {@inheritDoc} */

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxParameterServer.java
Patch:
@@ -101,8 +101,6 @@ public void apply(String parameterId, Pointer recv, Pointer local, Pointer handl
             try (MxNDManager manager = MxNDManager.getSystemManager().newSubManager()) {
                 MxNDArray grad = manager.create(recv);
                 MxNDArray weight = manager.create(local);
-                grad.setShouldFree(false);
-                weight.setShouldFree(false);
                 optimizer.update(parameterId, weight, grad);
             }
         }

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDArray.java
Patch:
@@ -114,10 +114,12 @@ public SparseFormat getSparseFormat() {
 
     /** {@inheritDoc} */
     @Override
-    public void attach(NDManager manager) {
+    public NDManager attach(NDManager manager) {
         detach();
+        NDManager original = this.manager;
         this.manager = (OrtNDManager) manager;
         manager.attach(getUid(), this);
+        return original;
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -196,10 +196,12 @@ public void copyTo(NDArray array) {
 
     /** {@inheritDoc} */
     @Override
-    public void attach(NDManager manager) {
+    public NDManager attach(NDManager manager) {
         detach();
+        NDManager original = this.manager;
         this.manager = (PtNDManager) manager;
         manager.attach(getUid(), this);
+        return original;
     }
 
     /** {@inheritDoc} */

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -250,10 +250,12 @@ public void set(Buffer data) {
 
     /** {@inheritDoc} */
     @Override
-    public void attach(NDManager manager) {
+    public NDManager attach(NDManager manager) {
         detach();
+        NDManager original = this.manager;
         this.manager = (TfNDManager) manager;
         manager.attach(uid, this);
+        return original;
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArrayEx.java
Patch:
@@ -220,9 +220,6 @@ public PtNDArray lpPool(
         if (padding.size() != 0) {
             throw new IllegalArgumentException("padding is not supported for PyTorch engine");
         }
-        if (array.getShape().dimension() - 2 == 3) {
-            throw new IllegalArgumentException("3D lpPool is not supported in PyTorch engine");
-        }
         return JniUtils.lpPool(array, normType, kernelShape, stride, ceilMode);
     }
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -1004,6 +1004,9 @@ public static PtNDArray adaptiveAvgPool(PtNDArray ndArray, Shape outputSize) {
 
     public static PtNDArray lpPool(
             PtNDArray ndArray, double normType, Shape kernelSize, Shape stride, boolean ceilMode) {
+        if (ndArray.getShape().dimension() - 2 == 3) {
+            throw new UnsupportedOperationException("3D lpPool is not supported in PyTorch engine");
+        }
         return ndArray.getManager()
                 .create(
                         PyTorchLibrary.LIB.torchNNLpPool(

File: mxnet/jnarator/src/main/java/ai/djl/mxnet/jnarator/package-info.java
Patch:
@@ -11,5 +11,5 @@
  * and limitations under the License.
  */
 
-/** Contains classes to generate the MXNet native interface. */
+/** Contains classes to generate the Apache MXNet (incubating) native interface. */
 package ai.djl.mxnet.jnarator;

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/package-info.java
Patch:
@@ -12,7 +12,7 @@
  */
 
 /**
- * Contains implementations of interfaces within the DJL API for the MXNet Engine.
+ * Contains implementations of interfaces within the DJL API for the Apache MXNet Engine.
  *
  * @see ai.djl.mxnet.engine.MxEngine
  */

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/package-info.java
Patch:
@@ -12,7 +12,7 @@
  */
 
 /**
- * Contains the main MXNet implementation of the DJL API.
+ * Contains the main DJL implementation of the API for Apache MXNet.
  *
  * @see ai.djl.mxnet.engine.MxEngine
  */

File: api/src/main/java/ai/djl/modality/cv/BufferedImageFactory.java
Patch:
@@ -115,9 +115,9 @@ public Image fromNDArray(NDArray array) {
                         ele -> {
                             int x = ele % width;
                             int y = ele / width;
-                            int red = ((byte) raw[ele]) & 0xFF;
-                            int green = ((byte) raw[ele + imageArea]) & 0xFF;
-                            int blue = ((byte) raw[ele + imageArea * 2]) & 0xFF;
+                            int red = raw[ele] & 0xFF;
+                            int green = raw[ele + imageArea] & 0xFF;
+                            int blue = raw[ele + imageArea * 2] & 0xFF;
                             int rgb = (red << 16) | (green << 8) | blue;
                             image.setRGB(x, y, rgb);
                         });

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/AlexNetTest.java
Patch:
@@ -49,7 +49,7 @@ public void testTrainWithDefaultChannels() {
         try (Model model = Model.newInstance("alexnet")) {
             model.setBlock(alexNet);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = 2;
+                int batchSize = 1;
                 Shape inputShape = new Shape(batchSize, 1, 224, 224);
                 NDManager manager = trainer.getManager();
                 trainer.initialize(inputShape);
@@ -105,7 +105,7 @@ public void testTrainWithCustomChannels() {
         try (Model model = Model.newInstance("alexnet")) {
             model.setBlock(alexNet);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = 2;
+                int batchSize = 1;
                 Shape inputShape = new Shape(batchSize, 1, 224, 224);
                 NDManager manager = trainer.getManager();
                 trainer.initialize(inputShape);
@@ -199,7 +199,7 @@ public void testForwardMethod() {
         model.setBlock(alexNet);
 
         Trainer trainer = model.newTrainer(config);
-        int batchSize = 2;
+        int batchSize = 1;
         NDArray x = trainer.getManager().ones(new Shape(batchSize, 1, 224, 224));
 
         trainer.initialize(x.getShape());

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/GoogLeNetTest.java
Patch:
@@ -48,7 +48,7 @@ public void testTrainWithDefaultChannels() {
         try (Model model = Model.newInstance("googlenet")) {
             model.setBlock(googLeNet);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = 2;
+                int batchSize = 1;
                 Shape inputShape = new Shape(batchSize, 1, 96, 96);
                 NDManager manager = trainer.getManager();
                 trainer.initialize(inputShape);
@@ -102,7 +102,7 @@ public void testOutputShapes() {
         model.setBlock(googLeNet);
 
         Trainer trainer = model.newTrainer(config);
-        int batchSize = 2;
+        int batchSize = 1;
         NDArray x = trainer.getManager().ones(new Shape(batchSize, 1, 96, 96));
 
         trainer.initialize(x.getShape());
@@ -141,7 +141,7 @@ public void testForwardMethod() {
         model.setBlock(googLeNet);
 
         Trainer trainer = model.newTrainer(config);
-        int batchSize = 2;
+        int batchSize = 1;
         NDArray x = trainer.getManager().ones(new Shape(batchSize, 1, 28, 28));
 
         trainer.initialize(x.getShape());

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/ResnetTest.java
Patch:
@@ -68,7 +68,7 @@ public void testTrain() {
         try (Model model = Model.newInstance("resnet")) {
             model.setBlock(resNet50);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = 2;
+                int batchSize = 1;
                 Shape inputShape = new Shape(batchSize, 1, 28, 28);
                 trainer.initialize(inputShape);
 

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/SqueezenetTest.java
Patch:
@@ -45,7 +45,7 @@ public void testTrain() {
         try (Model model = Model.newInstance("squeezenet")) {
             model.setBlock(squeezeNet);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = 2;
+                int batchSize = 1;
                 Shape inputShape = new Shape(batchSize, 1, 28, 28);
                 trainer.initialize(inputShape);
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1046,6 +1046,9 @@ public NDArray trace(int offset, int axis1, int axis2) {
     /** {@inheritDoc} */
     @Override
     public NDList split(long[] indices, int axis) {
+        if (indices.length == 0) {
+            return new NDList(this);
+        }
         MxOpParams params = new MxOpParams();
         // follow the numpy behavior
         if (indices[0] != 0) {

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -1148,6 +1148,9 @@ public NDList split(long[] indices, int axis) {
     // TODO: remove helper once this issue is fixed:
     // https://github.com/tensorflow/java/issues/45
     private NDList splitHelper(long[] indices, int axis) {
+        if (indices.length == 0) {
+            return new NDList(this);
+        }
         NDList result = new NDList();
 
         List<Long> sizes = new ArrayList<>();

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/SqueezenetTest.java
Patch:
@@ -13,6 +13,7 @@
 
 package ai.djl.integration.tests.model_zoo.classification;
 
+import ai.djl.Device;
 import ai.djl.Model;
 import ai.djl.basicmodelzoo.cv.classification.SqueezeNet;
 import ai.djl.ndarray.NDArray;
@@ -38,12 +39,13 @@ public class SqueezenetTest {
     public void testTrain() {
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
+                        .optDevices(Device.getDevices(2))
                         .optInitializer(Initializer.ONES);
         Block squeezeNet = SqueezeNet.squeezenet(10);
         try (Model model = Model.newInstance("squeezenet")) {
             model.setBlock(squeezeNet);
             try (Trainer trainer = model.newTrainer(config)) {
-                int batchSize = config.getDevices().length * 16;
+                int batchSize = 2;
                 Shape inputShape = new Shape(batchSize, 1, 28, 28);
                 trainer.initialize(inputShape);
 

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -125,8 +125,7 @@ public <S, T> ZooModel<S, T> loadModel(Criteria<S, T> criteria)
                 modelName = artifact.getName();
             }
 
-            Model model =
-                    createModel(modelName, Device.defaultDevice(), artifact, arguments, engine);
+            Model model = createModel(modelName, criteria.getDevice(), artifact, arguments, engine);
             if (criteria.getBlock() != null) {
                 model.setBlock(criteria.getBlock());
             }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -162,6 +162,7 @@ public NDArray full(Shape shape, float value, DataType dataType) {
         params.addParam("shape", shape);
         params.addParam("value", value);
         params.setDataType(dataType);
+        params.setDevice(device);
         return invoke("_npi_full", params);
     }
 

File: api/src/main/java/ai/djl/training/tracker/FactorTracker.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * {@code FactorTracker} is an implementation of {@link Tracker} which is updated by a
- * multiplicative factor, at a constant interval of steps, until it reaches a specified stop value.
+ * multiplicative factor.
  */
 public class FactorTracker extends Tracker {
 

File: api/src/main/java/ai/djl/training/evaluator/Accuracy.java
Patch:
@@ -66,7 +66,7 @@ protected Pair<Long, NDArray> accuracyHelper(NDList labels, NDList predictions)
         }
         // result of sum is int64 now
         long total = label.size();
-        try (NDArray nd = label.toType(DataType.INT64, false)) {
+        try (NDArray nd = label.toType(DataType.INT64, true)) {
             NDArray correct = predictionReduced.toType(DataType.INT64, false).eq(nd).countNonzero();
             return new Pair<>(total, correct);
         }

File: jupyter/d2l-java/utils/FashionMnistUtils.java
Patch:
@@ -19,7 +19,7 @@ class FashionMnistUtils {
 
     public static RandomAccessDataset getDataset(Dataset.Usage usage,
                                                  int batchSize,
-                                                 boolean randomShuffle) throws IOException {
+                                                 boolean randomShuffle) throws IOException, TranslateException {
         FashionMnist fashionMnist = FashionMnist.builder().optUsage(usage)
                 .setSampling(batchSize, randomShuffle)
                 .build();

File: examples/src/main/java/ai/djl/examples/training/TrainMnistWithLSTM.java
Patch:
@@ -69,7 +69,7 @@ public static TrainingResult runExample(String[] args) throws IOException, Parse
                  * MNIST is 28x28 grayscale image and pre processed into 28 * 28 NDArray.
                  * 1st axis is batch axis, we can use 1 for initialization.
                  */
-                Shape inputShape = new Shape(32, 28, 28);
+                Shape inputShape = new Shape(32, 1, 28, 28);
 
                 // initialize trainer with proper input shape
                 trainer.initialize(inputShape);

File: api/src/main/java/ai/djl/repository/SimpleRepository.java
Patch:
@@ -178,7 +178,7 @@ private synchronized Metadata getMetadata() throws IOException {
         Map<String, Item> files = new ConcurrentHashMap<>();
         if (isRemote) {
             Artifact.Item item = new Artifact.Item();
-            String uri = path.toAbsolutePath().toString();
+            String uri = path.toAbsolutePath().toUri().toString();
             item.setUri(uri);
             item.setName(""); // avoid creating extra folder
             item.setArtifact(artifact);

File: 3rdparty/hadoop/src/main/java/ai/djl/hadoop/hdfs/HdfsRepositoryFactory.java
Patch:
@@ -57,7 +57,7 @@ public Repository newInstance(String name, String url) {
 
         String path = uri.getPath();
         String fileName = Paths.get(path).toFile().getName();
-        boolean isDirectory = FilenameUtils.isArchiveFile(fileName);
+        boolean isDirectory = !FilenameUtils.isArchiveFile(fileName);
         if (!isDirectory) {
             fileName = FilenameUtils.getNamePart(fileName);
         }

File: api/src/main/java/ai/djl/repository/AbstractRepository.java
Patch:
@@ -24,7 +24,6 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
-import java.nio.file.StandardCopyOption;
 import java.security.DigestInputStream;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
@@ -128,7 +127,7 @@ public void prepare(Artifact artifact, Progress progress) throws IOException {
             for (Artifact.Item item : files.values()) {
                 download(tmp, baseUri, item, progress);
             }
-            Files.move(tmp, resourceDir, StandardCopyOption.ATOMIC_MOVE);
+            Utils.moveQuietly(tmp, resourceDir);
         } finally {
             Utils.deleteQuietly(tmp);
             if (progress != null) {

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1534,8 +1534,7 @@ public void close() {
         }
         Pointer pointer = handle.getAndSet(null);
         if (pointer != null) {
-            // TODO: remove after fixing multi-thread data loading issue
-            // JnaUtils.waitToRead(pointer);
+            JnaUtils.waitToRead(pointer);
             JnaUtils.freeNdArray(pointer);
             manager.detach(getUid());
             manager = null;

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -87,8 +87,8 @@ public Trainer(Model model, TrainingConfig trainingConfig) {
         evaluators = new ArrayList<>(trainingConfig.getEvaluators());
         evaluators.add(loss); // track loss as an evaluator by default
 
-        // ParameterServer parameterServer = new MxParameterServer(trainingConfig.getOptimizer());
-        ParameterServer parameterServer = new LocalParameterServer(trainingConfig.getOptimizer());
+        ParameterServer parameterServer =
+                manager.getEngine().newParameterServer(trainingConfig.getOptimizer());
 
         parameterStore = new ParameterStore(manager, false);
         parameterStore.setParameterServer(parameterServer, devices);

File: api/src/test/java/ai/djl/test/mock/MockEngine.java
Patch:
@@ -58,6 +58,7 @@ public NDManager newBaseManager(Device device) {
         return new MockNDManager();
     }
 
+    /** {@inheritDoc} */
     @Override
     public GradientCollector newGradientCollector() {
         return null;

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/integration/MxParameterStoreTest.java
Patch:
@@ -39,9 +39,8 @@ public void testParameterStore() {
             } else {
                 numDevices = 4;
             }
-            int numWeights = 2;
-            // TODO: this test is currently flaky with large numUpdates and large numWeights
-            int numUpdates = 10;
+            int numWeights = Boolean.getBoolean("nightly") ? 100 : 2;
+            int numUpdates = Boolean.getBoolean("nightly") ? 1000 : 10;
             NDArray[][] weights = new NDArray[numWeights][numDevices];
             NDArray[][] grads = new NDArray[numWeights][numDevices];
             NDArray[] expected = new NDArray[numWeights];

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtNDManager.java
Patch:
@@ -172,7 +172,7 @@ public NDList invoke(String operation, NDList src, PairList<String, ?> params) {
     /** {@inheritDoc} */
     @Override
     public Engine getEngine() {
-        throw new UnsupportedOperationException("Not supported for ONNX Runtime");
+        return Engine.getEngine(OrtEngine.ENGINE_NAME);
     }
 
     /** The SystemManager is the root {@link OrtNDManager} of which all others are children. */

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtSymbolBlock.java
Patch:
@@ -78,7 +78,7 @@ public NDList forward(
             PairList<String, Object> params) {
         NDManager inputManager = inputs.head().getManager();
         boolean foreignEngine =
-                OrtEngine.ENGINE_NAME.equals(inputManager.getEngine().getEngineName());
+                !OrtEngine.ENGINE_NAME.equals(inputManager.getEngine().getEngineName());
         List<String> inputNames = new ArrayList<>(session.getInputNames());
         if (inputs.size() != inputNames.size()) {
             throw new IllegalArgumentException("Input mismatch, looking for: " + inputNames);

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -24,7 +24,6 @@
 import ai.djl.modality.cv.Image;
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Block;
 import ai.djl.nn.Blocks;
@@ -126,9 +125,10 @@ private static Model getModel(Arguments arguments)
             SymbolBlock block = (SymbolBlock) model.getBlock();
             block.removeLastBlock();
             newBlock.add(block);
-            newBlock.add(x -> new NDList(x.singletonOrThrow().squeeze()));
+            // the original model don't include the flatten
+            // so apply the flatten here
+            newBlock.add(Blocks.batchFlattenBlock());
             newBlock.add(Linear.builder().setOutChannels(10).build());
-            newBlock.add(Blocks.batchFlattenBlock(10));
             model.setBlock(newBlock);
             if (!preTrained) {
                 model.getBlock().clear();

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -29,7 +29,6 @@
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.ToTensor;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Block;
 import ai.djl.nn.Blocks;
@@ -146,9 +145,10 @@ private static Model getModel(Arguments arguments)
             SymbolBlock block = (SymbolBlock) model.getBlock();
             block.removeLastBlock();
             newBlock.add(block);
-            newBlock.add(x -> new NDList(x.singletonOrThrow().squeeze()));
+            // the original model don't include the flatten
+            // so apply the flatten here
+            newBlock.add(Blocks.batchFlattenBlock());
             newBlock.add(Linear.builder().setOutChannels(10).build());
-            newBlock.add(Blocks.batchFlattenBlock(10));
             model.setBlock(newBlock);
             if (!preTrained) {
                 model.getBlock().clear();

File: 3rdparty/aws-ai/src/main/java/ai/djl/aws/s3/S3Repository.java
Patch:
@@ -120,6 +120,7 @@ public Artifact resolve(MRL mrl, String version, Map<String, String> filter)
     protected void download(Path tmp, URI baseUri, Artifact.Item item, Progress progress)
             throws IOException {
         String key = item.getUri();
+        logger.debug("Downloading artifact from: s3://{}/{} ...", bucket, key);
         GetObjectRequest req = GetObjectRequest.builder().bucket(bucket).key(key).build();
         try (ResponseInputStream<GetObjectResponse> is = client.getObject(req)) {
             save(is, tmp, baseUri, item, progress);

File: 3rdparty/hadoop/src/main/java/ai/djl/hadoop/hdfs/HdfsRepository.java
Patch:
@@ -117,6 +117,7 @@ protected void download(Path tmp, URI baseUri, Artifact.Item item, Progress prog
             throws IOException {
         FileSystem fs = FileSystem.get(uri, config);
         org.apache.hadoop.fs.Path path = new org.apache.hadoop.fs.Path(item.getUri());
+        logger.debug("Downloading artifact: {} ...", path);
         try (InputStream is = fs.open(path)) {
             save(is, tmp, baseUri, item, progress);
         }

File: api/src/main/java/ai/djl/repository/SimpleUrlRepository.java
Patch:
@@ -105,6 +105,7 @@ public List<MRL> getResources() {
     @Override
     protected void download(Path tmp, URI baseUri, Artifact.Item item, Progress progress)
             throws IOException {
+        logger.debug("Downloading artifact: {} ...", uri);
         try (InputStream is = uri.toURL().openStream()) {
             save(is, tmp, baseUri, item, progress);
         }

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfModel.java
Patch:
@@ -82,7 +82,7 @@ public void load(Path modelPath, String prefix, Map<String, Object> options)
         }
 
         SavedModelBundle.Loader loader =
-                SavedModelBundle.loader(modelDir.toString()).withTags(tags);
+                SavedModelBundle.loader(exportDir.toString()).withTags(tags);
         if (proto != null) {
             loader.withConfigProto(proto);
         }

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/LibUtils.java
Patch:
@@ -255,12 +255,12 @@ private static Path getCacheDir() {
                     cacheDir = System.getenv("DJL_CACHE_DIR");
                     if (cacheDir == null || cacheDir.isEmpty()) {
                         String userHome = System.getProperty("user.home");
-                        return Paths.get(userHome, ".djl-ai/onnxruntime");
+                        return Paths.get(userHome, ".djl.ai/onnxruntime");
                     }
                 }
                 return Paths.get(cacheDir, "onnxruntime");
             }
         }
-        return Paths.get(cacheDir, ".djl-ai/onnxruntime");
+        return Paths.get(cacheDir, ".djl.ai/onnxruntime");
     }
 }

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/LibUtils.java
Patch:
@@ -59,6 +59,7 @@ private static String getTensorFlowLib() {
                         .getResource("native/lib/tensorflow.properties");
         if (url == null) {
             // defer to tensorflow-core-api to handle loading native library.
+            logger.debug("tensorflow.properties not found in class path.");
             return null;
         }
 
@@ -88,6 +89,7 @@ private static String downloadTensorFlow(Platform platform) throws IOException {
 
         String libName = System.mapLibraryName(LIB_NAME);
         Path cacheDir = getCacheDir();
+        logger.debug("Using cache dir: {}", cacheDir);
         Path dir = cacheDir.resolve(version + '-' + flavor + '-' + classifier);
         Path path = dir.resolve(libName);
         if (Files.exists(path)) {

File: api/src/main/java/ai/djl/BaseModel.java
Patch:
@@ -167,7 +167,7 @@ public String getProperty(String key) {
     }
 
     protected void setModelDir(Path modelDir) {
-        this.modelDir = modelDir;
+        this.modelDir = modelDir.toAbsolutePath();
     }
 
     /** {@inheritDoc} */

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -95,7 +95,7 @@ public void load(Path modelPath, String prefix, Map<String, Object> options)
         }
         Path paramFile = paramPathResolver(prefix, options);
         if (paramFile == null) {
-            prefix = modelPath.toFile().getName();
+            prefix = modelDir.toFile().getName();
             paramFile = paramPathResolver(prefix, options);
             if (paramFile == null) {
                 throw new IOException("Parameter file not found in: " + modelDir);

File: onnxruntime/onnxruntime-engine/src/main/java/ai/djl/onnxruntime/engine/OrtModel.java
Patch:
@@ -63,7 +63,7 @@ public void load(Path modelPath, String prefix, Map<String, Object> options)
         }
         Path modelFile = findModelFile(prefix);
         if (modelFile == null) {
-            modelFile = findModelFile(modelPath.toFile().getName());
+            modelFile = findModelFile(modelDir.toFile().getName());
             if (modelFile == null) {
                 throw new FileNotFoundException(".onnx file not found in: " + modelPath);
             }
@@ -81,12 +81,12 @@ public void load(Path modelPath, String prefix, Map<String, Object> options)
 
     private Path findModelFile(String prefix) {
         Path modelFile = modelDir.resolve(prefix);
-        if (Files.notExists(modelFile)) {
+        if (Files.notExists(modelFile) || !Files.isRegularFile(modelFile)) {
             if (prefix.endsWith(".onnx")) {
                 return null;
             }
             modelFile = modelDir.resolve(prefix + ".onnx");
-            if (Files.notExists(modelFile)) {
+            if (Files.notExists(modelFile) || !Files.isRegularFile(modelFile)) {
                 return null;
             }
         }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -414,6 +414,8 @@ native void torchBackward(
 
     native boolean iValueIsTuple(Pointer iValueHandle);
 
+    native void zeroGrad(Pointer handle);
+
     native void adamUpdate(
             Pointer weight,
             Pointer grad,

File: api/src/main/java/ai/djl/training/listener/LoggingTrainingListener.java
Patch:
@@ -177,7 +177,7 @@ public void onTrainingEnd(Trainer trainer) {
             logger.info(String.format("step P50: %.3f ms, P90: %.3f ms", p50, p90));
         }
 
-        if (metrics.hasMetric("step")) {
+        if (metrics.hasMetric("epoch")) {
             p50 = metrics.percentile("epoch", 50).getValue().longValue() / 1_000_000_000f;
             p90 = metrics.percentile("epoch", 90).getValue().longValue() / 1_000_000_000f;
             logger.info(String.format("epoch P50: %.3f s, P90: %.3f s", p50, p90));

File: api/src/main/java/ai/djl/modality/nlp/embedding/TrainableTextEmbedding.java
Patch:
@@ -33,7 +33,7 @@ public class TrainableTextEmbedding extends AbstractBlock implements TextEmbeddi
     private TrainableWordEmbedding trainableWordEmbedding;
 
     /**
-     * Constructs a {@link SimpleTextEmbedding}.
+     * Constructs a {@link TrainableTextEmbedding}.
      *
      * @param wordEmbedding the word embedding to embed each word
      */

File: api/src/main/java/ai/djl/training/DataManager.java
Patch:
@@ -16,8 +16,8 @@
 import ai.djl.training.dataset.Batch;
 
 /**
- * {@code DataManager} is an interface that is used primarily in the {@link Trainer} to manipulate
- * data from the dataset to be appropriate for the current model.
+ * {@code DataManager} is an class that is used primarily in the {@link Trainer} to manipulate data
+ * from the dataset to be appropriate for the current model.
  */
 public class DataManager {
     public static final DataManager DEFAULT_DATA_MANAGER = new DataManager();

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -96,11 +96,11 @@ public static TrainingResult runExample(String[] args) throws IOException, Parse
 
     public static int predict(String outputDir, String imageFile)
             throws IOException, MalformedModelException, TranslateException {
-        try (Model model = Model.newInstance("predModel")) {
+        try (Model model = Model.newInstance("pikachu-ssd")) {
             float detectionThreshold = 0.6f;
             // load parameters back to original training block
             model.setBlock(getSsdTrainBlock());
-            model.load(Paths.get(outputDir), "ssd");
+            model.load(Paths.get(outputDir), "pikachu-ssd");
             // append prediction logic at end of training block with parameter loaded
             Block ssdTrain = model.getBlock();
             model.setBlock(getSsdPredictBlock(ssdTrain));

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/integration/MxParameterStoreTest.java
Patch:
@@ -114,7 +114,9 @@ protected TestOptimizer(TestOptimizer.Builder builder) {
         /** {@inheritDoc} */
         @Override
         public void update(String parameterId, NDArray weight, NDArray grad) {
-            weight.addi(grad.mul(learningRateTracker.getNewLearningRate(0)));
+            weight.addi(
+                    grad.mul(learningRateTracker.getNewLearningRate(0))
+                            .toDevice(weight.getDevice(), false));
             updateCount++;
         }
 

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -148,7 +148,7 @@ private static DefaultTrainingConfig setupTrainingConfig(Arguments arguments) {
                 trainer -> {
                     TrainingResult result = trainer.getTrainingResult();
                     Model model = trainer.getModel();
-                    float accuracy = result.getValidateEvaluation("Accuracy");
+                    float accuracy = result.getValidateEvaluation("classAccuracy");
                     model.setProperty("ClassAccuracy", String.format("%.5f", accuracy));
                     model.setProperty("Loss", String.format("%.5f", result.getValidateLoss()));
                 });

File: api/src/main/java/ai/djl/repository/zoo/ModelZoo.java
Patch:
@@ -107,8 +107,7 @@ static <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
 
             Set<String> supportedEngine = zoo.getSupportedEngines();
             String engine = criteria.getEngine();
-
-            if (engine != null && !engine.isEmpty() && !supportedEngine.contains(engine)) {
+            if (engine != null && !supportedEngine.contains(engine)) {
                 continue;
             }
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/MlpModelLoader.java
Patch:
@@ -107,7 +107,8 @@ public ZooModel<Image, Classifications> loadModel(
 
     /** {@inheritDoc} */
     @Override
-    protected Model createModel(Device device, Artifact artifact, Map<String, Object> arguments) {
+    protected Model createModel(
+            Device device, Artifact artifact, Map<String, Object> arguments, String engine) {
         int width = ((Double) arguments.getOrDefault("width", 28d)).intValue();
         int height = ((Double) arguments.getOrDefault("height", 28d)).intValue();
         int input = width * height;
@@ -119,7 +120,7 @@ protected Model createModel(Device device, Artifact artifact, Map<String, Object
                         .mapToInt(Double::intValue)
                         .toArray();
 
-        Model model = Model.newInstance(device);
+        Model model = Model.newInstance(device, engine);
         model.setBlock(new Mlp(input, output, hidden));
         return model;
     }

File: api/src/main/java/ai/djl/Model.java
Patch:
@@ -87,6 +87,9 @@ static Model newInstance(String engineName) {
      * @return a new model instance
      */
     static Model newInstance(Device device, String engineName) {
+        if (engineName == null || engineName.isEmpty()) {
+            return newInstance(device);
+        }
         return Engine.getEngine(engineName).newModel(device);
     }
 

File: api/src/main/java/ai/djl/repository/zoo/DefaultModelLoader.java
Patch:
@@ -32,7 +32,7 @@ public class DefaultModelLoader extends BaseModelLoader<NDList, NDList> {
      * @param mrl the mrl of the model to load
      */
     public DefaultModelLoader(Repository repository, MRL mrl) {
-        super(repository, mrl, null);
+        super(repository, mrl, null, null);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/repository/zoo/ModelZoo.java
Patch:
@@ -106,7 +106,9 @@ static <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
             }
 
             Set<String> supportedEngine = zoo.getSupportedEngines();
-            if (!supportedEngine.contains(criteria.getEngine())) {
+            String engine = criteria.getEngine();
+
+            if (engine != null && !engine.isEmpty() && !supportedEngine.contains(engine)) {
                 continue;
             }
 

File: fasttext/fasttext-engine/src/main/java/ai/djl/fasttext/zoo/nlp/textclassification/TextClassificationModelLoader.java
Patch:
@@ -45,7 +45,7 @@ public class TextClassificationModelLoader extends BaseModelLoader<String, Class
      * @param repository the repository to load the model from
      */
     public TextClassificationModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new FtModelZoo());
         factories.put(new Pair<>(String.class, Classifications.class), new FactoryImpl());
     }
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/BasicModelZoo.java
Patch:
@@ -43,8 +43,9 @@ public String getGroupId() {
     public Set<String> getSupportedEngines() {
         Set<String> set = new HashSet<>();
         set.add("MXNet");
-        set.add("PyTorch");
-        set.add("TensorFlow");
+        // TODO Currently WIP in supporting these two engines in the basic model zoo
+        //        set.add("PyTorch");
+        //        set.add("TensorFlow");
         return set;
     }
 }

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/MlpModelLoader.java
Patch:
@@ -60,7 +60,7 @@ public class MlpModelLoader extends BaseModelLoader<Image, Classifications> {
      * @param repository the repository to load the model from
      */
     public MlpModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, null);
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Classifications.class), factory);

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -92,6 +92,7 @@ public void load(Path modelPath, String modelName, Map<String, Object> options)
         if (block == null) {
             // load MxSymbolBlock
             Path symbolFile = modelDir.resolve(modelName + "-symbol.json");
+            logger.debug("Finding Symbol File: {}", symbolFile.toString());
             if (Files.notExists(symbolFile)) {
                 throw new FileNotFoundException(
                         "Symbol file not found in: " + modelPath + ", please set block manually.");

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/MxModelZoo.java
Patch:
@@ -47,7 +47,7 @@
 public class MxModelZoo implements ModelZoo {
 
     private static final String DJL_REPO_URL = "https://mlrepo.djl.ai/";
-    private static final Repository REPOSITORY = Repository.newInstance("MxNet", DJL_REPO_URL);
+    private static final Repository REPOSITORY = Repository.newInstance("MXNet", DJL_REPO_URL);
     public static final String GROUP_ID = "ai.djl.mxnet";
 
     public static final SingleShotDetectionModelLoader SSD =

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/actionrecognition/ActionRecognitionModelLoader.java
Patch:
@@ -63,7 +63,7 @@ public class ActionRecognitionModelLoader extends BaseModelLoader<Image, Classif
      * @param repository the repository to load the model from
      */
     public ActionRecognitionModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Classifications.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -58,7 +58,7 @@ public abstract class ImageClassificationModelLoader
      */
     public ImageClassificationModelLoader(
             Repository repository, String artifactId, String version) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Classifications.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -70,7 +70,7 @@ public class SingleShotDetectionModelLoader extends BaseModelLoader<Image, Detec
      * @param repository the repository to load the model from
      */
     public SingleShotDetectionModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, DetectedObjects.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/YoloModelLoader.java
Patch:
@@ -71,7 +71,7 @@ public class YoloModelLoader extends BaseModelLoader<Image, DetectedObjects> {
      * @param repository the repository to load the model from
      */
     public YoloModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, DetectedObjects.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/poseestimation/SimplePoseModelLoader.java
Patch:
@@ -63,7 +63,7 @@ public class SimplePoseModelLoader extends BaseModelLoader<Image, Joints> {
      * @param repository the repository to load the model from
      */
     public SimplePoseModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Joints.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/segmentation/InstanceSegmentationModelLoader.java
Patch:
@@ -62,7 +62,7 @@ public class InstanceSegmentationModelLoader extends BaseModelLoader<Image, Dete
      * @param repository the repository to load the model from
      */
     public InstanceSegmentationModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, DetectedObjects.class), factory);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/qa/BertQAModelLoader.java
Patch:
@@ -54,7 +54,7 @@ public class BertQAModelLoader extends BaseModelLoader<QAInput, String> {
      * @param repository the repository to load the model from
      */
     public BertQAModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new MxModelZoo());
         factories.put(new Pair<>(QAInput.class, String.class), new FactoryImpl());
     }
 

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -59,7 +59,7 @@ public abstract class ImageClassificationModelLoader
      */
     public ImageClassificationModelLoader(
             Repository repository, String artifactId, String version) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version, new PtModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Classifications.class), factory);

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/FasterRcnnDetectionModelLoader.java
Patch:
@@ -62,7 +62,7 @@ public class FasterRcnnDetectionModelLoader extends BaseModelLoader<Image, Detec
      * @param repository the repository to load the model from
      */
     public FasterRcnnDetectionModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new PtModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, DetectedObjects.class), factory);

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -63,7 +63,7 @@ public class SingleShotDetectionModelLoader extends BaseModelLoader<Image, Detec
      * @param repository the repository to load the model from
      */
     public SingleShotDetectionModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new PtModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, DetectedObjects.class), factory);

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/nlp/qa/BertQAModelLoader.java
Patch:
@@ -52,7 +52,7 @@ public class BertQAModelLoader extends BaseModelLoader<QAInput, String> {
      * @param repository the repository to load the model from
      */
     public BertQAModelLoader(Repository repository) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, ARTIFACT_ID), VERSION, new PtModelZoo());
         factories.put(new Pair<>(QAInput.class, String.class), new FactoryImpl());
     }
 

File: tensorflow/tensorflow-model-zoo/src/main/java/ai/djl/tensorflow/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -56,7 +56,7 @@ public abstract class ImageClassificationModelLoader
      */
     public ImageClassificationModelLoader(
             Repository repository, String artifactId, String version) {
-        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version);
+        super(repository, MRL.model(APPLICATION, GROUP_ID, artifactId), version, new TfModelZoo());
         FactoryImpl factory = new FactoryImpl();
 
         factories.put(new Pair<>(Image.class, Classifications.class), factory);

File: examples/src/main/java/ai/djl/examples/inference/benchmark/util/Arguments.java
Patch:
@@ -14,13 +14,13 @@
 
 import ai.djl.engine.Engine;
 import ai.djl.modality.Classifications;
+import ai.djl.modality.cv.Image;
 import ai.djl.modality.cv.ImageFactory;
 import ai.djl.modality.cv.output.DetectedObjects;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.types.Shape;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
-import java.awt.image.BufferedImage;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.lang.reflect.Type;
@@ -229,7 +229,7 @@ public Map<String, String> getCriteria() {
 
     public Class<?> getInputClass() throws ClassNotFoundException {
         if (inputClass == null) {
-            return BufferedImage.class;
+            return Image.class;
         }
         return Class.forName(inputClass);
     }
@@ -246,7 +246,7 @@ public Class<?> getOutputClass() throws ClassNotFoundException {
 
     public Object getInputData() throws IOException, ClassNotFoundException {
         Class<?> klass = getInputClass();
-        if (klass == BufferedImage.class) {
+        if (klass == Image.class) {
             return ImageFactory.getInstance().fromFile(getImageFile());
         } else if (klass == float[].class || klass == NDList.class) {
             // TODO: load data from input file

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfModel.java
Patch:
@@ -147,6 +147,8 @@ public void cast(DataType dataType) {
     @Override
     public void close() {
         manager.close();
-        block.clear();
+        if (block != null) {
+            block.clear();
+        }
     }
 }

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDManager.java
Patch:
@@ -451,7 +451,9 @@ public void detach(String resourceId) {
     @Override
     public void close() {
         super.close();
-        eagerSession.close();
+        if (eagerSession != null) {
+            eagerSession.close();
+        }
     }
 
     private static final class SystemManager extends TfNDManager {

File: api/src/main/java/ai/djl/nn/ParallelBlock.java
Patch:
@@ -219,7 +219,8 @@ public String toString() {
         StringBuilder sb = new StringBuilder(200);
         sb.append("Parallel(\n");
         for (Block block : blocks) {
-            sb.append('\t').append(block).append('\n');
+            String blockString = block.toString().replaceAll("(?m)^", "\t");
+            sb.append(blockString).append('\n');
         }
         sb.append(')');
         return sb.toString();

File: api/src/main/java/ai/djl/nn/SequentialBlock.java
Patch:
@@ -201,7 +201,8 @@ public String toString() {
         StringBuilder sb = new StringBuilder(200);
         sb.append("Sequential(\n");
         for (Block block : blocks) {
-            sb.append('\t').append(block).append('\n');
+            String blockString = block.toString().replaceAll("(?m)^", "\t");
+            sb.append(blockString).append('\n');
         }
         sb.append(')');
         return sb.toString();

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -943,8 +943,8 @@ public static void deleteNdArray(Pointer handle) {
         PyTorchLibrary.LIB.torchDeleteTensor(handle);
     }
 
-    public static void deleteModule(PtSymbolBlock block) {
-        PyTorchLibrary.LIB.torchDeleteModule(block.getHandle());
+    public static void deleteModule(Pointer pointer) {
+        PyTorchLibrary.LIB.torchDeleteModule(pointer);
     }
 
     public static PtSymbolBlock loadModule(PtNDManager manager, Path path, Device device) {

File: api/src/main/java/ai/djl/modality/cv/ImageFactory.java
Patch:
@@ -38,8 +38,8 @@ static ImageFactory newInstance() {
         try {
             Class<? extends ImageFactory> clazz =
                     Class.forName(className).asSubclass(ImageFactory.class);
-            return clazz.newInstance();
-        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
+            return clazz.getConstructor().newInstance();
+        } catch (ReflectiveOperationException e) {
             throw new IllegalStateException("Create new ImageFactory failed!", e);
         }
     }

File: android/core/src/androidTest/java/ai/djl/android/core/ExampleInstrumentedTest.java
Patch:
@@ -48,7 +48,7 @@ public void useAppContext() {
 
     @Test
     public void testBitmapImageFactory() throws IOException {
-        try (NDManager manager = Engine.getInstance().newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager()) {
             ImageFactory factory = ImageFactory.newInstance();
             Image img = factory.fromUrl("https://github.com/awslabs/djl/raw/master/examples/src/test/resources/dog_bike_car.jpg");
             NDArray array = img.toNDArray(manager);

File: api/src/main/java/ai/djl/modality/cv/Image.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDManager;
+import java.io.IOException;
 import java.io.OutputStream;
 
 /**
@@ -60,8 +61,9 @@ default NDArray toNDArray(NDManager manager) {
      *
      * @param os {@link OutputStream} to save the image.
      * @param type type of the image, such as "png", "jpeg"
+     * @throws IOException image cannot be saved through output stream
      */
-    void save(OutputStream os, String type);
+    void save(OutputStream os, String type) throws IOException;
 
     /** Flag indicates the color channel options for images. */
     public enum Flag {

File: api/src/main/java/ai/djl/modality/cv/ImageFactory.java
Patch:
@@ -31,7 +31,7 @@ public interface ImageFactory {
      * @return {@link ImageFactory}
      */
     static ImageFactory newInstance() {
-        String className = "ai.djl.api.cv.BufferedImageFactory";
+        String className = "ai.djl.modality.cv.BufferedImageFactory";
         if (System.getProperty("java.vendor.url").equals("http://www.android.com/")) {
             className = "ai.djl.android.cv.BitmapImageFactory";
         }
@@ -82,8 +82,9 @@ default Image fromUrl(String url) throws IOException {
      *
      * @param is {@link InputStream}
      * @return {@link Image}
+     * @throws IOException image cannot be read from input stream.
      */
-    Image fromInputStream(InputStream is);
+    Image fromInputStream(InputStream is) throws IOException;
 
     /**
      * Gets {@link Image} from varies Java image types.

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/ModelZooTest.java
Patch:
@@ -56,9 +56,9 @@ public void testDownloadModels() throws IOException, ModelException {
                         Model model = modelLoader.loadModel(artifact.getProperties());
                         model.close();
                     }
+                    Utils.deleteQuietly(Paths.get("build/cache"));
                 }
             }
-            Utils.deleteQuietly(Paths.get("build/cache"));
         }
     }
 }

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/ModelZooTest.java
Patch:
@@ -18,7 +18,9 @@
 import ai.djl.repository.zoo.ModelLoader;
 import ai.djl.repository.zoo.ModelZoo;
 import ai.djl.repository.zoo.ZooProvider;
+import ai.djl.util.Utils;
 import java.io.IOException;
+import java.nio.file.Paths;
 import java.util.List;
 import java.util.ServiceLoader;
 import org.testng.annotations.AfterClass;
@@ -56,6 +58,7 @@ public void testDownloadModels() throws IOException, ModelException {
                     }
                 }
             }
+            Utils.deleteQuietly(Paths.get("build/cache"));
         }
     }
 }

File: integration/src/main/java/ai/djl/integration/tests/modality/nlp/SimpleSequenceEncoderTest.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.integration.tests.modality.nlp;
 
 import ai.djl.basicmodelzoo.nlp.SimpleSequenceEncoder;
+import ai.djl.integration.util.TestUtils;
 import ai.djl.modality.nlp.embedding.TrainableTextEmbedding;
 import ai.djl.modality.nlp.embedding.TrainableWordEmbedding;
 import ai.djl.ndarray.NDList;
@@ -27,6 +28,7 @@
 import org.testng.annotations.Test;
 
 public class SimpleSequenceEncoderTest {
+
     @Test
     public void testEncoder() {
         TrainableTextEmbedding trainableTextEmbedding =
@@ -43,7 +45,7 @@ public void testEncoder() {
                                 .setSequenceLength(false)
                                 .setStateSize(16)
                                 .build());
-        try (NDManager manager = NDManager.newBaseManager()) {
+        try (NDManager manager = NDManager.newBaseManager(TestUtils.getDevices()[0])) {
             encoder.setInitializer(new XavierInitializer());
             encoder.initialize(manager, DataType.FLOAT32, new Shape(4, 7));
             NDList output =

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/LibUtils.java
Patch:
@@ -13,7 +13,6 @@
 
 package ai.djl.tensorflow.engine;
 
-import ai.djl.engine.EngineException;
 import ai.djl.util.Platform;
 import ai.djl.util.Utils;
 import java.io.File;
@@ -126,7 +125,7 @@ private static String downloadTensorFlow(Platform platform) throws IOException {
             }
 
             if (!found) {
-                throw new EngineException(
+                throw new UnsupportedOperationException(
                         "TensorFlow engine does not support this platform: " + os);
             }
 

File: examples/src/main/java/ai/djl/examples/training/TrainSeq2Seq.java
Patch:
@@ -143,7 +143,7 @@ public static TextDataset getDataset(
                         .optBatchier(
                                 PaddingStackBatchifier.builder()
                                         .optIncludeValidLengths(true)
-                                        .addPad(0, 0, () -> manager.zeros(new Shape(1)))
+                                        .addPad(0, 0, (m) -> m.zeros(new Shape(1)))
                                         .build())
                         .optEmbeddingSize(32)
                         .optUsage(usage)

File: integration/src/main/java/ai/djl/integration/tests/training/BlocksTest.java
Patch:
@@ -18,13 +18,13 @@
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Blocks;
+import ai.djl.testing.Assertions;
 import ai.djl.training.DefaultTrainingConfig;
 import ai.djl.training.ParameterStore;
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
 import ai.djl.training.initializer.Initializer;
 import ai.djl.training.loss.Loss;
-import org.testng.Assert;
 import org.testng.annotations.Test;
 
 public class BlocksTest {
@@ -44,7 +44,7 @@ public void testFlattenBlock() {
                 NDArray data = manager.randomUniform(0, 255, new Shape(10, 28, 28));
                 NDArray expected = data.reshape(10, 28 * 28);
                 NDArray result = model.getBlock().forward(parameterStore, new NDList(data)).head();
-                Assert.assertEquals(result, expected);
+                Assertions.assertAlmostEquals(result, expected);
             }
         }
     }

File: api/src/main/java/ai/djl/ndarray/internal/NDArrayEx.java
Patch:
@@ -284,6 +284,7 @@ NDList embedding(
             NDList inputs,
             int numItems,
             int embeddingSize,
+            boolean sparseGrad,
             DataType dataType,
             PairList<String, Object> additional);
 

File: api/src/test/java/ai/djl/test/mock/MockNDArray.java
Patch:
@@ -128,6 +128,9 @@ public NDArray toType(DataType dataType, boolean copy) {
     @Override
     public void attachGradient() {}
 
+    @Override
+    public void attachGradient(SparseFormat sparseFormat) {}
+
     /** {@inheritDoc} */
     @Override
     public NDArray getGradient() {

File: api/src/test/java/ai/djl/test/mock/MockNDArrayEx.java
Patch:
@@ -295,6 +295,7 @@ public NDList embedding(
             NDList inputs,
             int numItems,
             int embeddingSize,
+            boolean sparseGrad,
             DataType dataType,
             PairList<String, Object> additional) {
         return null;

File: basicdataset/src/main/java/ai/djl/basicdataset/TextDataset.java
Patch:
@@ -17,7 +17,6 @@
 import ai.djl.modality.nlp.embedding.EmbeddingException;
 import ai.djl.modality.nlp.embedding.SimpleTextEmbedding;
 import ai.djl.modality.nlp.embedding.TextEmbedding;
-import ai.djl.modality.nlp.embedding.VocabWordEmbedding;
 import ai.djl.modality.nlp.preprocess.LowerCaseConvertor;
 import ai.djl.modality.nlp.preprocess.PunctuationSeparator;
 import ai.djl.modality.nlp.preprocess.SentenceLengthNormalizer;
@@ -38,8 +37,8 @@
  * <p>The {@code TextDataset} fetches the data in the form of {@link String}, processes the data as
  * required, and creates embeddings for the tokens. Embeddings can be either pre-trained or trained
  * on the go. Pre-trained {@link TextEmbedding} must be set in the {@link Builder}. If no embeddings
- * are set, the dataset creates {@link VocabWordEmbedding} based {@link SimpleTextEmbedding} from
- * the {@link Vocabulary} created within the dataset.
+ * are set, the dataset creates {@link ai.djl.modality.nlp.embedding.TrainableWordEmbedding} based
+ * {@link SimpleTextEmbedding} from the {@link Vocabulary} created within the dataset.
  */
 public abstract class TextDataset extends RandomAccessDataset {
 

File: basicdataset/src/main/java/ai/djl/basicdataset/utils/TextData.java
Patch:
@@ -16,7 +16,7 @@
 import ai.djl.modality.nlp.embedding.EmbeddingException;
 import ai.djl.modality.nlp.embedding.SimpleTextEmbedding;
 import ai.djl.modality.nlp.embedding.TextEmbedding;
-import ai.djl.modality.nlp.embedding.VocabWordEmbedding;
+import ai.djl.modality.nlp.embedding.TrainableWordEmbedding;
 import ai.djl.modality.nlp.preprocess.SentenceLengthNormalizer;
 import ai.djl.modality.nlp.preprocess.TextProcessor;
 import ai.djl.ndarray.NDList;
@@ -110,8 +110,7 @@ public void preprocess(List<String> newTextData) {
         }
         if (textEmbedding == null) {
             textEmbedding =
-                    new SimpleTextEmbedding(
-                            new VocabWordEmbedding(vocabulary.newEmbedding(embeddingSize)));
+                    new SimpleTextEmbedding(new TrainableWordEmbedding(vocabulary, embeddingSize));
             trainEmbedding = true;
         }
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -502,12 +502,13 @@ public NDList embedding(
             NDList inputs,
             int numItems,
             int embeddingSize,
+            boolean sparseGrad,
             DataType dataType,
             PairList<String, Object> additional) {
         MxOpParams params = new MxOpParams();
         params.addParam("input_dim", numItems);
         params.addParam("output_dim", embeddingSize);
-        params.addParam("sparse_grad", false);
+        params.addParam("sparse_grad", sparseGrad);
         params.setDataType(dataType);
         params.addAll(additional);
 

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/embedding/utils/BuildModelZooWordEmbedding.java
Patch:
@@ -14,8 +14,8 @@
 
 import ai.djl.Device;
 import ai.djl.Model;
+import ai.djl.modality.nlp.embedding.TrainableWordEmbedding;
 import ai.djl.ndarray.NDArray;
-import ai.djl.nn.core.Embedding;
 import ai.djl.util.Utils;
 import java.io.IOException;
 import java.nio.file.Path;
@@ -49,7 +49,7 @@ private static void buildEmbedding(String dir, String name) throws IOException {
         NDArray idxToVec =
                 model.getNDManager().load(path.resolve("idx_to_vec.mx")).singletonOrThrow();
         List<String> idxToToken = Utils.readLines(path.resolve("idx_to_token.txt"));
-        Embedding<String> embedding = new Embedding<>(idxToVec, idxToToken);
+        TrainableWordEmbedding embedding = new TrainableWordEmbedding(idxToVec, idxToToken);
         model.setBlock(embedding);
         model.save(path, name);
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArrayEx.java
Patch:
@@ -321,6 +321,7 @@ public NDList embedding(
             NDList inputs,
             int numItems,
             int embeddingSize,
+            boolean sparseGrad,
             DataType dataType,
             PairList<String, Object> additional) {
         throw new UnsupportedOperationException("Not implemented");

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArrayEx.java
Patch:
@@ -322,6 +322,7 @@ public NDList embedding(
             NDList inputs,
             int numItems,
             int embeddingSize,
+            boolean sparseGrad,
             DataType dataType,
             PairList<String, Object> additional) {
         throw new UnsupportedOperationException("Not implemented");

File: api/src/main/java/ai/djl/modality/cv/translator/BaseImageTranslator.java
Patch:
@@ -26,7 +26,7 @@
  *
  * @param <T> the output object type
  */
-public abstract class ImageTranslator<T> implements Translator<BufferedImage, T> {
+public abstract class BaseImageTranslator<T> implements Translator<BufferedImage, T> {
 
     private NDImageUtils.Flag flag;
     private Pipeline pipeline;
@@ -36,7 +36,7 @@ public abstract class ImageTranslator<T> implements Translator<BufferedImage, T>
      *
      * @param builder the data to build with
      */
-    public ImageTranslator(BaseBuilder<?> builder) {
+    public BaseImageTranslator(BaseBuilder<?> builder) {
         flag = builder.flag;
         pipeline = builder.pipeline;
     }
@@ -61,7 +61,7 @@ public NDList processInput(TranslatorContext ctx, BufferedImage input) {
     }
 
     /**
-     * A builder to extend for all classes extending the {@link ImageTranslator}.
+     * A builder to extend for all classes extending the {@link BaseImageTranslator}.
      *
      * @param <T> the concrete builder type
      */

File: api/src/main/java/ai/djl/modality/cv/translator/ImageClassificationTranslator.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.List;
 
 /** A generic {@link ai.djl.translate.Translator} for Image Classification tasks. */
-public class ImageClassificationTranslator extends ImageTranslator<Classifications> {
+public class ImageClassificationTranslator extends BaseImageTranslator<Classifications> {
 
     private String synsetArtifactName;
     private boolean applySoftmax;

File: api/src/main/java/ai/djl/modality/cv/translator/InstanceSegmentationTranslator.java
Patch:
@@ -31,10 +31,10 @@
 import java.util.List;
 
 /**
- * A {@link ImageTranslator} that post-process the {@link NDArray} into {@link DetectedObjects} with
- * boundaries at the detailed pixel level.
+ * A {@link BaseImageTranslator} that post-process the {@link NDArray} into {@link DetectedObjects}
+ * with boundaries at the detailed pixel level.
  */
-public class InstanceSegmentationTranslator extends ImageTranslator<DetectedObjects>
+public class InstanceSegmentationTranslator extends BaseImageTranslator<DetectedObjects>
         implements Transform {
 
     private String synsetArtifactName;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/FileTranslator.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.modality.cv.util.BufferedImageUtils;
 import ai.djl.ndarray.NDList;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/FileTranslatorFactory.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.translate.Translator;
 import ai.djl.translate.TranslatorFactory;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/InputStreamTranslator.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.ndarray.NDList;
 import ai.djl.translate.Translator;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/InputStreamTranslatorFactory.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.translate.Translator;
 import ai.djl.translate.TranslatorFactory;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/UrlTranslator.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.modality.cv.util.BufferedImageUtils;
 import ai.djl.ndarray.NDList;

File: api/src/main/java/ai/djl/modality/cv/translator/wrapper/UrlTranslatorFactory.java
Patch:
@@ -10,7 +10,7 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-package ai.djl.modality.cv.translator;
+package ai.djl.modality.cv.translator.wrapper;
 
 import ai.djl.translate.Translator;
 import ai.djl.translate.TranslatorFactory;

File: api/src/main/java/ai/djl/repository/AbstractRepository.java
Patch:
@@ -90,9 +90,7 @@ protected URI resolvePath(Artifact.Item item, String path) throws IOException {
     /** {@inheritDoc} */
     @Override
     public void prepare(Artifact artifact, Progress progress) throws IOException {
-        Path cacheDir = getCacheDirectory();
-        URI resourceUri = artifact.getResourceUri();
-        Path resourceDir = cacheDir.resolve(resourceUri.getPath());
+        Path resourceDir = getResourceDirectory(artifact);
         if (Files.exists(resourceDir)) {
             // files have been downloaded already.
             return;

File: api/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -96,9 +96,7 @@ public <S, T> ZooModel<S, T> loadModel(Criteria<S, T> criteria)
                 progress.update(1);
             }
 
-            Path dir = repository.getCacheDirectory();
-            String relativePath = artifact.getResourceUri().getPath();
-            Path modelPath = dir.resolve(relativePath);
+            Path modelPath = repository.getResourceDirectory(artifact);
 
             Model model = createModel(criteria.getDevice(), artifact, arguments);
             model.load(modelPath, artifact.getName(), criteria.getOptions());

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/MlpModelLoader.java
Patch:
@@ -22,10 +22,10 @@
 import ai.djl.modality.cv.transform.CenterCrop;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.modality.cv.util.NDImageUtils;
 import ai.djl.repository.Artifact;
 import ai.djl.repository.MRL;

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/ResNetModelLoader.java
Patch:
@@ -22,10 +22,10 @@
 import ai.djl.modality.cv.transform.CenterCrop;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Block;
 import ai.djl.repository.Artifact;

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/object_detection/ssd/SingleShotDetectionModelLoader.java
Patch:
@@ -20,10 +20,10 @@
 import ai.djl.basicmodelzoo.BasicModelZoo;
 import ai.djl.modality.cv.output.DetectedObjects;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
 import ai.djl.modality.cv.translator.SingleShotDetectionTranslator;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.nn.Block;
 import ai.djl.nn.SequentialBlock;
 import ai.djl.repository.Artifact;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/MxModelZoo.java
Patch:
@@ -21,6 +21,7 @@
 import ai.djl.mxnet.zoo.cv.classification.Senet;
 import ai.djl.mxnet.zoo.cv.classification.Squeezenet;
 import ai.djl.mxnet.zoo.cv.objectdetection.SingleShotDetectionModelLoader;
+import ai.djl.mxnet.zoo.cv.objectdetection.YoloModelLoader;
 import ai.djl.mxnet.zoo.cv.poseestimation.SimplePoseModelLoader;
 import ai.djl.mxnet.zoo.cv.segmentation.InstanceSegmentationModelLoader;
 import ai.djl.mxnet.zoo.nlp.embedding.GloveWordEmbeddingModelLoader;
@@ -43,6 +44,7 @@ public class MxModelZoo implements ModelZoo {
     public static final MlpModelLoader MLP = new MlpModelLoader(REPOSITORY);
     public static final SingleShotDetectionModelLoader SSD =
             new SingleShotDetectionModelLoader(REPOSITORY);
+    public static final YoloModelLoader YOLO = new YoloModelLoader(REPOSITORY);
     public static final Resnet RESNET = new Resnet(REPOSITORY);
     public static final Resnext RESNEXT = new Resnext(REPOSITORY);
     public static final Senet SENET = new Senet(REPOSITORY);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/actionrecognition/ActionRecognitionModelLoader.java
Patch:
@@ -19,10 +19,10 @@
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -19,10 +19,10 @@
 import ai.djl.modality.cv.transform.CenterCrop;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.modality.cv.util.NDImageUtils;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.MRL;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/poseestimation/SimplePoseModelLoader.java
Patch:
@@ -19,10 +19,10 @@
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
 import ai.djl.modality.cv.translator.SimplePoseTranslator;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/segmentation/InstanceSegmentationModelLoader.java
Patch:
@@ -18,10 +18,10 @@
 import ai.djl.modality.cv.output.DetectedObjects;
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
 import ai.djl.modality.cv.translator.InstanceSegmentationTranslator;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -20,10 +20,10 @@
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.modality.cv.util.NDImageUtils;
 import ai.djl.pytorch.zoo.PtModelZoo;
 import ai.djl.repository.MRL;

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/FasterRcnnDetectionModelLoader.java
Patch:
@@ -18,10 +18,10 @@
 import ai.djl.modality.cv.output.DetectedObjects;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
 import ai.djl.modality.cv.translator.SingleShotDetectionTranslator;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.pytorch.zoo.PtModelZoo;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -19,9 +19,9 @@
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.pytorch.zoo.PtModelZoo;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: tensorflow/tensorflow-model-zoo/src/main/java/ai/djl/tensorflow/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -17,10 +17,10 @@
 import ai.djl.MalformedModelException;
 import ai.djl.modality.Classifications;
 import ai.djl.modality.cv.transform.Resize;
-import ai.djl.modality.cv.translator.FileTranslatorFactory;
 import ai.djl.modality.cv.translator.ImageClassificationTranslator;
-import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
-import ai.djl.modality.cv.translator.UrlTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.FileTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.InputStreamTranslatorFactory;
+import ai.djl.modality.cv.translator.wrapper.UrlTranslatorFactory;
 import ai.djl.modality.cv.util.NDImageUtils;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;

File: api/src/main/java/ai/djl/modality/nlp/bert/BertToken.java
Patch:
@@ -51,7 +51,7 @@ public List<Long> getIndices() {
      *
      * @return segment token indices
      */
-    public List<Long> getTokenType() {
+    public List<Long> getTokenTypes() {
         return tokenType;
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngine.java
Patch:
@@ -18,6 +18,7 @@
 import ai.djl.mxnet.jna.JnaUtils;
 import ai.djl.mxnet.jna.LibUtils;
 import ai.djl.ndarray.NDManager;
+import ai.djl.util.RandomUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -99,6 +100,7 @@ public NDManager newBaseManager(Device device) {
     @Override
     public void setRandomSeed(int seed) {
         JnaUtils.randomSeed(seed);
+        RandomUtils.RANDOM.setSeed(seed);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/training/dataset/ArrayDataset.java
Patch:
@@ -64,7 +64,7 @@ public ArrayDataset(BaseBuilder<?> builder) {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return data[0].size(0);
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/AbstractImageFolder.java
Patch:
@@ -68,7 +68,7 @@ public Record get(NDManager manager, long index) throws IOException {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return items.size();
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/CaptchaDataset.java
Patch:
@@ -101,7 +101,7 @@ public Record get(NDManager manager, long index) throws IOException {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return items.size();
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/CocoDetection.java
Patch:
@@ -158,7 +158,7 @@ public void prepareData(Usage usage) throws IOException {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return imagePaths.size();
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/PikachuDetection.java
Patch:
@@ -178,7 +178,7 @@ public Record get(NDManager manager, long index) throws IOException {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return imagePaths.size();
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/TatoebaEnglishFrenchDataset.java
Patch:
@@ -262,7 +262,7 @@ public Record get(NDManager manager, long index) throws EmbeddingException {
 
     /** {@inheritDoc} */
     @Override
-    public long size() {
+    protected long availableSize() {
         return sourceSentences.size();
     }
 

File: examples/src/main/java/ai/djl/examples/training/TrainCaptcha.java
Patch:
@@ -118,7 +118,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                 CaptchaDataset.builder()
                         .optUsage(usage)
                         .setSampling(arguments.getBatchSize(), true)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .build();
         dataset.prepare(new ProgressBar());
         return dataset;

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -111,7 +111,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                 Mnist.builder()
                         .optUsage(usage)
                         .setSampling(arguments.getBatchSize(), true)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .build();
         mnist.prepare(new ProgressBar());
         return mnist;

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -142,7 +142,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
         PikachuDetection pikachuDetection =
                 PikachuDetection.builder()
                         .optUsage(usage)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .optPipeline(pipeline)
                         .setSampling(arguments.getBatchSize(), true)
                         .build();

File: examples/src/main/java/ai/djl/examples/training/TrainWithHpo.java
Patch:
@@ -151,7 +151,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                 Mnist.builder()
                         .optUsage(usage)
                         .setSampling(arguments.getBatchSize(), true)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .build();
         mnist.prepare(new ProgressBar());
         return mnist;

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -221,7 +221,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                 Cifar10.builder()
                         .optUsage(usage)
                         .setSampling(arguments.getBatchSize(), true)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .optPipeline(pipeline)
                         .build();
         cifar10.prepare(new ProgressBar());

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -183,7 +183,7 @@ private static RandomAccessDataset getDataset(Dataset.Usage usage, Arguments arg
                 Cifar10.builder()
                         .optUsage(usage)
                         .setSampling(arguments.getBatchSize(), true)
-                        .optMaxIteration(arguments.getMaxIterations())
+                        .optLimit(arguments.getLimit())
                         .optPipeline(pipeline)
                         .build();
         cifar10.prepare(new ProgressBar());

File: integration/src/main/java/ai/djl/integration/tests/training/DatasetTest.java
Patch:
@@ -279,7 +279,7 @@ public void testMultithreading() throws IOException, InterruptedException {
                             .optUsage(Dataset.Usage.TEST)
                             // you could start trying prefetchNumber with 2 * number of threads.
                             // This number should be adjusted based on your machines and data.
-                            .optExcutor(executor, 4)
+                            .optExecutor(executor, 4)
                             .build();
 
             cifar10.prepare();

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -193,7 +193,7 @@ private Batch fetch(List<Long> indices, int progress) throws IOException, Transl
                 batchSize,
                 batchifier,
                 progress,
-                dataset.getNumIterations());
+                dataset.size());
     }
 
     private void preFetch() {

File: api/src/main/java/ai/djl/training/loss/SoftmaxCrossEntropyLoss.java
Patch:
@@ -52,7 +52,8 @@ public SoftmaxCrossEntropyLoss(String name) {
      * @param weight the weight to apply on the loss value, default 1
      * @param classAxis the axis that represents the class probabilities, default -1
      * @param sparseLabel whether labels are integer array or probabilities, default true
-     * @param fromLogit whether labels are log probabilities or un-normalized numbers
+     * @param fromLogit whether predictions are log probabilities or un-normalized numbers, default
+     *     false
      */
     public SoftmaxCrossEntropyLoss(
             String name, float weight, int classAxis, boolean sparseLabel, boolean fromLogit) {

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/LibUtils.java
Patch:
@@ -25,6 +25,7 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
+import java.nio.file.StandardCopyOption;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
@@ -166,7 +167,7 @@ private static String loadLibraryFromClasspath(Platform platform) {
             for (String file : platform.getLibraries()) {
                 String libPath = "/native/lib/" + file;
                 try (InputStream is = LibUtils.class.getResourceAsStream(libPath)) {
-                    Files.copy(is, tmp.resolve(file));
+                    Files.copy(is, tmp.resolve(file), StandardCopyOption.REPLACE_EXISTING);
                 }
             }
 
@@ -333,7 +334,7 @@ private static String downloadMxnet(Platform platform) throws IOException {
                         }
                     }
                     try (InputStream fis = new GZIPInputStream(url.openStream())) {
-                        Files.copy(fis, tmp.resolve(fileName));
+                        Files.copy(fis, tmp.resolve(fileName), StandardCopyOption.REPLACE_EXISTING);
                     }
                 }
             }

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -193,7 +193,7 @@ private Batch fetch(List<Long> indices, int progress) throws IOException, Transl
                 batchSize,
                 batchifier,
                 progress,
-                dataset.size());
+                dataset.getNumIterations());
     }
 
     private void preFetch() {

File: api/src/main/java/ai/djl/Application.java
Patch:
@@ -44,5 +44,6 @@ public interface CV {
     public interface NLP {
         Application QUESTION_ANSWER = new Application("nlp/question_answer");
         Application TEXT_CLASSIFICATION = new Application("nlp/text_classification");
+        Application WORD_EMBEDDING = new Application("nlp/word_embedding");
     }
 }

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/MlpModelLoader.java
Patch:
@@ -27,6 +27,7 @@
 import ai.djl.modality.cv.translator.InputStreamTranslatorFactory;
 import ai.djl.modality.cv.translator.UrlTranslatorFactory;
 import ai.djl.modality.cv.util.NDImageUtils;
+import ai.djl.repository.Artifact;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.BaseModelLoader;
@@ -106,7 +107,7 @@ public ZooModel<BufferedImage, Classifications> loadModel(
     }
 
     @Override
-    protected Model createModel(Device device, Map<String, Object> arguments) {
+    protected Model createModel(Device device, Artifact artifact, Map<String, Object> arguments) {
         int width = ((Double) arguments.getOrDefault("width", 28d)).intValue();
         int height = ((Double) arguments.getOrDefault("height", 28d)).intValue();
         int input = width * height;

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/classification/ResNetModelLoader.java
Patch:
@@ -28,6 +28,7 @@
 import ai.djl.modality.cv.translator.UrlTranslatorFactory;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Block;
+import ai.djl.repository.Artifact;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.BaseModelLoader;
@@ -107,7 +108,7 @@ public ZooModel<BufferedImage, Classifications> loadModel(
     }
 
     @Override
-    protected Model createModel(Device device, Map<String, Object> arguments) {
+    protected Model createModel(Device device, Artifact artifact, Map<String, Object> arguments) {
         @SuppressWarnings("unchecked")
         Shape shape =
                 new Shape(

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/cv/object_detection/ssd/SingleShotDetectionModelLoader.java
Patch:
@@ -26,6 +26,7 @@
 import ai.djl.modality.cv.translator.UrlTranslatorFactory;
 import ai.djl.nn.Block;
 import ai.djl.nn.SequentialBlock;
+import ai.djl.repository.Artifact;
 import ai.djl.repository.MRL;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.BaseModelLoader;
@@ -109,7 +110,7 @@ public ZooModel<BufferedImage, DetectedObjects> loadModel(
 
     @Override
     @SuppressWarnings("unchecked")
-    protected Model createModel(Device device, Map<String, Object> arguments) {
+    protected Model createModel(Device device, Artifact artifact, Map<String, Object> arguments) {
         int numClasses = ((Double) arguments.get("outSize")).intValue();
         int numFeatures = ((Double) arguments.get("numFeatures")).intValue();
         boolean globalPool = (boolean) arguments.get("globalPool");

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -170,9 +170,7 @@ private void loadParameters(String modelName, Map<String, String> options)
         }
         logger.debug("DJL formatted model not found, try to find MXNet model");
         Path paramFile = paramPathResolver(options);
-        NDList paramNDlist =
-                JnaUtils.loadNdArray(
-                        (MxNDManager) manager, paramFile.toAbsolutePath(), manager.getDevice());
+        NDList paramNDlist = manager.load(paramFile);
 
         MxSymbolBlock symbolBlock = (MxSymbolBlock) block;
 

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/MxModelZoo.java
Patch:
@@ -23,6 +23,7 @@
 import ai.djl.mxnet.zoo.cv.objectdetection.SingleShotDetectionModelLoader;
 import ai.djl.mxnet.zoo.cv.poseestimation.SimplePoseModelLoader;
 import ai.djl.mxnet.zoo.cv.segmentation.InstanceSegmentationModelLoader;
+import ai.djl.mxnet.zoo.nlp.embedding.GloveWordEmbeddingModelLoader;
 import ai.djl.mxnet.zoo.nlp.qa.BertQAModelLoader;
 import ai.djl.repository.Repository;
 import ai.djl.repository.zoo.ModelZoo;
@@ -53,6 +54,8 @@ public class MxModelZoo implements ModelZoo {
     public static final ActionRecognitionModelLoader ACTION_RECOGNITION =
             new ActionRecognitionModelLoader(REPOSITORY);
     public static final BertQAModelLoader BERT_QA = new BertQAModelLoader(REPOSITORY);
+    public static final GloveWordEmbeddingModelLoader GLOVE =
+            new GloveWordEmbeddingModelLoader(REPOSITORY);
 
     /** {@inheritDoc} */
     @Override

File: repository/src/main/java/ai/djl/repository/AbstractRepository.java
Patch:
@@ -54,7 +54,7 @@ public Path getFile(Artifact.Item item, String path) throws IOException {
         return Paths.get(resolvePath(item, path)).toAbsolutePath();
     }
 
-    private URI resolvePath(Artifact.Item item, String path) throws IOException {
+    protected URI resolvePath(Artifact.Item item, String path) throws IOException {
         Artifact artifact = item.getArtifact();
         URI artifactUri = artifact.getResourceUri();
 

File: repository/src/main/java/ai/djl/repository/Artifact.java
Patch:
@@ -200,6 +200,9 @@ public URI getResourceUri() {
                 uri = uri.resolve(values + '/');
             }
         }
+        if (version == null) {
+            return uri;
+        }
         return uri.resolve(version + '/');
     }
 

File: repository/src/main/java/ai/djl/repository/VersionRange.java
Patch:
@@ -206,7 +206,7 @@ public boolean contains(Version version) {
      * @return true if the artifact's version falls within this range
      */
     public boolean contains(Artifact artifact) {
-        return contains(artifact.getParsedVersion());
+        return artifact.getVersion() == null || contains(artifact.getParsedVersion());
     }
 
     /** {@inheritDoc} */

File: repository/src/main/java/ai/djl/repository/zoo/BaseModelLoader.java
Patch:
@@ -100,7 +100,7 @@ public <S, T> ZooModel<S, T> loadModel(Criteria<S, T> criteria)
             String relativePath = artifact.getResourceUri().getPath();
             Path modelPath = dir.resolve(relativePath);
 
-            Model model = createModel(criteria.getDevice(), arguments);
+            Model model = createModel(criteria.getDevice(), artifact, arguments);
             model.load(modelPath, artifact.getName());
 
             return new ZooModel<>(model, translator);
@@ -120,7 +120,8 @@ public List<Artifact> listModels() throws IOException, ModelNotFoundException {
                 .collect(Collectors.toList());
     }
 
-    protected Model createModel(Device device, Map<String, Object> arguments) {
+    protected Model createModel(Device device, Artifact artifact, Map<String, Object> arguments)
+            throws IOException {
         return Model.newInstance(device);
     }
 

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -121,6 +121,7 @@ public Translator<BufferedImage, Classifications> newInstance(
                     .optFlag(NDImageUtils.Flag.valueOf(flag))
                     .setPipeline(pipeline)
                     .setSynsetArtifactName("synset.txt")
+                    .optApplySoftmax(true)
                     .build();
         }
     }

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -127,6 +127,7 @@ public Translator<BufferedImage, Classifications> newInstance(
                     .optFlag(NDImageUtils.Flag.valueOf(flag))
                     .setPipeline(pipeline)
                     .setSynsetArtifactName("synset.txt")
+                    .optApplySoftmax(true)
                     .build();
         }
     }

File: api/src/main/java/ai/djl/modality/cv/translator/SingleShotDetectionTranslator.java
Patch:
@@ -53,7 +53,9 @@ public SingleShotDetectionTranslator(Builder builder) {
 
     @Override
     public void prepare(NDManager manager, Model model) throws IOException {
-        classes = model.getArtifact(synsetArtifactName, Utils::readLines);
+        if (classes == null) {
+            classes = model.getArtifact(synsetArtifactName, Utils::readLines);
+        }
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -714,9 +714,8 @@ public static ByteBuffer getByteBuffer(PtNDArray ndArray) {
         if (!ndArray.getDevice().equals(Device.cpu())) {
             ndArray = ndArray.toDevice(Device.cpu(), false);
         }
-        ByteBuffer bb = PyTorchLibrary.LIB.torchDataPtr(ndArray.getHandle());
-        bb.order(ByteOrder.nativeOrder());
-        return bb;
+        return ByteBuffer.wrap(PyTorchLibrary.LIB.torchDataPtr(ndArray.getHandle()))
+                .order(ByteOrder.nativeOrder());
     }
 
     public static void deleteNdArray(Pointer handle) {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -28,7 +28,7 @@ private PyTorchLibrary() {}
 
     native long[] torchSizes(Pointer handle);
 
-    native ByteBuffer torchDataPtr(Pointer handle);
+    native byte[] torchDataPtr(Pointer handle);
 
     native int torchDType(Pointer handle);
 

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/objectdetection/PtSSDTranslator.java
Patch:
@@ -98,8 +98,8 @@ public DetectedObjects processOutput(TranslatorContext ctx, NDList list) throws
                 }
                 String className = classes.get((int) classId);
                 double[] box = boundingBoxes.get(i).toDoubleArray();
-
-                Rectangle rect = new Rectangle(box[0], box[1], box[2], box[3]);
+                Rectangle rect =
+                        new Rectangle(box[0] - 0.5 * box[2], box[1] - 0.5 * box[3], box[2], box[3]);
                 retNames.add(className);
                 retProbs.add(probability);
                 retBB.add(rect);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -198,7 +198,7 @@ public void setScalar(NDIndex index, Number value) {
     public PtNDArray get(NDIndex index) {
         // TODO find a better way to improve the speed
         if (isScalar()) {
-            return this;
+            return (PtNDArray) duplicate();
         }
         // use booleanMask for NDIndexBooleans case
         List<NDIndexElement> indices = index.getIndices();

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -710,7 +710,7 @@ public static Shape getShape(PtNDArray ndArray) {
 
     public static ByteBuffer getByteBuffer(PtNDArray ndArray) {
         // Operation is CPU only
-        if (ndArray.getDevice() != Device.cpu()) {
+        if (!ndArray.getDevice().equals(Device.cpu())) {
             ndArray = ndArray.toDevice(Device.cpu(), false);
         }
         ByteBuffer bb = PyTorchLibrary.LIB.torchDataPtr(ndArray.getHandle());

File: integration/src/test/java/ai/djl/CoverageTest.java
Patch:
@@ -23,7 +23,7 @@
 public class CoverageTest {
 
     @Test
-    public void test() throws IOException, ClassNotFoundException, URISyntaxException {
+    public void test() throws IOException, ReflectiveOperationException, URISyntaxException {
         // API
         CoverageUtils.testGetterSetters(Device.class);
 

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/integration/MxCoverageTest.java
Patch:
@@ -22,7 +22,7 @@
 public class MxCoverageTest {
 
     @Test
-    public void test() throws IOException, ClassNotFoundException, URISyntaxException {
+    public void test() throws IOException, ReflectiveOperationException, URISyntaxException {
         // mxnet-engine
         CoverageUtils.testGetterSetters(MxEngine.class);
 

File: model-zoo/src/main/java/ai/djl/basicmodelzoo/BasicModelZoo.java
Patch:
@@ -44,7 +44,7 @@ public Set<String> getSupportedEngines() {
         Set<String> set = new HashSet<>();
         set.add("MXNet");
         set.add("PyTorch");
-        set.add("Tensorflow");
+        set.add("TensorFlow");
         return set;
     }
 }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/JniUtils.java
Patch:
@@ -13,7 +13,6 @@
 package ai.djl.pytorch.jni;
 
 import ai.djl.Device;
-import ai.djl.engine.StandardCapabilities;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.types.DataType;
@@ -48,8 +47,7 @@ private JniUtils() {}
 
     private static int layoutMapper(SparseFormat fmt) {
         if (fmt == SparseFormat.DENSE) {
-            // enable MKLDNN by default
-            return JniUtils.getFeatures().contains(StandardCapabilities.MKLDNN) ? 2 : 0;
+            return 0;
         } else if (fmt == SparseFormat.COO) {
             return 1;
         } else {

File: api/src/main/java/ai/djl/ndarray/types/SparseFormat.java
Patch:
@@ -16,15 +16,15 @@
  * An enum representing Sparse matrix storage formats.
  *
  * <ul>
- *   <li>DENSE: No sparse format
+ *   <li>DENSE: Stride format
  *   <li>ROW_SPARSE: Row Sparse
  *   <li>CSR: Compressed Sparse Row
  * </ul>
  *
  * @see <a href="https://software.intel.com/en-us/node/471374">Sparse Matrix Storage Formats</a>
  */
 public enum SparseFormat {
-    UNDEFINED("undefined", -1),
+    // the dense format is accelerated by MKLDNN by default
     DENSE("default", 0),
     ROW_SPARSE("row_sparse", 1),
     CSR("csr", 2),
@@ -50,7 +50,7 @@ public static SparseFormat fromValue(int value) {
                 return t;
             }
         }
-        throw new IllegalArgumentException("Unknown storage type: " + value);
+        throw new IllegalArgumentException("Unknown Sparse type: " + value);
     }
 
     /**

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -243,7 +243,7 @@ private void attachGradient(GradReq gradReq, SparseFormat format) {
     }
 
     private MxNDArray createGradient(SparseFormat format) {
-        if (format == null || format == SparseFormat.UNDEFINED) {
+        if (format == null) {
             return (MxNDArray) zerosLike();
         }
         return (MxNDArray) manager.zeros(getShape(), getDataType(), getDevice());

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtEngine.java
Patch:
@@ -61,7 +61,7 @@ public String getVersion() {
     /** {@inheritDoc} */
     @Override
     public boolean hasCapability(String capability) {
-        return JniUtils.hasCapability(capability);
+        return JniUtils.getFeatures().contains(capability);
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.pytorch.jni;
 
 import java.nio.ByteBuffer;
+import java.util.Set;
 
 /** A class containing utilities to interact with the PyTorch Engine's JNI layer. */
 @SuppressWarnings("MissingJavadocMethod")
@@ -24,7 +25,7 @@ private PyTorchLibrary() {}
 
     public native void torchManualSeed(long seed);
 
-    public native boolean torchCudaAvailable();
+    public native void torchShowConfig(Set<String> set);
 
     public native long[] torchSizes(Pointer handle);
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1644,7 +1644,7 @@ public String toString() {
         if (isReleased()) {
             return "This array is already closed";
         }
-        return toDebugString(this, MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
+        return toDebugString(MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
     }
 
     /** {@inheritDoc} */

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -1168,7 +1168,7 @@ public String toString() {
         if (isReleased()) {
             return "This array is already closed";
         }
-        return toDebugString(this, MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
+        return toDebugString(MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
     }
 
     /** {@inheritDoc} */

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -1393,7 +1393,7 @@ public String toString() {
             return "This array is already closed";
         }
 
-        return toDebugString(this, MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
+        return toDebugString(MAX_SIZE, MAX_DEPTH, MAX_ROWS, MAX_COLUMNS);
     }
 
     /** {@inheritDoc} */

File: tensorflow/tensorflow-engine/src/main/java/ai/djl/tensorflow/engine/LibUtils.java
Patch:
@@ -36,8 +36,8 @@ public static void loadLibrary() {
         String libName = getTensorFlowLib();
         logger.debug("Loading TensorFlow library from: {}", libName);
 
-        System.load(libName + '/' + System.mapLibraryName("libtensorflow_jni"));
-        System.load(libName + '/' + System.mapLibraryName("libtensorflow_framework"));
+        System.load(libName + '/' + System.mapLibraryName("tensorflow_jni"));
+        System.load(libName + '/' + System.mapLibraryName("tensorflow_framework"));
     }
 
     private static String getTensorFlowLib() {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtSymbolBlock.java
Patch:
@@ -78,6 +78,7 @@ public void removeLastBlock() {
     @Override
     public NDList forward(
             ParameterStore parameterStore, NDList inputs, PairList<String, Object> params) {
+        // TODO refactor the forward to not take ParameterStore
         return IValueUtils.forward(this, inputs);
     }
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -143,6 +143,8 @@ public native Pointer torchFromBlob(
 
     public native void torchDeleteModule(Pointer handle);
 
+    public native void torchDeleteIValue(Pointer handle);
+
     public native Pointer torchMax(Pointer handle);
 
     public native Pointer torchMax(Pointer self, Pointer other);

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -49,7 +49,7 @@ public void testTrainResNetSymbolicNightly()
             String[] args = {"-e", "10", "-g", "4", "-s", "-p"};
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
-            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.75f);
+            Assert.assertTrue(result.getEvaluation("Accuracy") >= 0.7f);
             Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1.1);
         }
     }
@@ -67,8 +67,8 @@ public void testTrainResNetImperativeNightly()
             String[] args = {"-e", "10", "-g", "4"};
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
-            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.7f);
-            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 0.9);
+            Assert.assertTrue(result.getEvaluation("Accuracy") >= 0.7f);
+            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1);
         }
     }
 }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -81,7 +81,7 @@ public class PtNDArray extends NativeResource implements NDArray {
      * @param manager the manager to attach the new array to
      * @param handle the pointer to the native PyTorch memory
      */
-    public PtNDArray(PtNDManager manager, Pointer handle) {
+    PtNDArray(PtNDManager manager, Pointer handle) {
         super(handle);
         this.manager = manager;
         this.ptNDArrayEx = new PtNDArrayEx(this);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/IValueUtils.java
Patch:
@@ -104,7 +104,7 @@ public static boolean isString(Pointer iValueHandle) {
      */
     public static PtNDArray toNDArray(Pointer iValueHandle, PtNDManager manager) {
         Pointer ndHandle = PyTorchLibrary.LIB.iValueToTensor(iValueHandle);
-        return new PtNDArray(manager, ndHandle);
+        return manager.create(ndHandle);
     }
 
     /**
@@ -118,7 +118,7 @@ public static NDList toNDList(Pointer iValueHandle, PtNDManager manager) {
         Pointer[] ndHandles = PyTorchLibrary.LIB.iValueToTensorList(iValueHandle);
         NDList list = new NDList();
         for (Pointer handle : ndHandles) {
-            list.add(new PtNDArray(manager, handle));
+            list.add(manager.create(handle));
         }
         return list;
     }

File: repository/src/main/java/ai/djl/repository/zoo/ModelZoo.java
Patch:
@@ -144,7 +144,8 @@ static <I, O> ZooModel<I, O> loadModel(Criteria<I, O> criteria)
                 }
             }
         }
-        throw new ModelNotFoundException("No matching model found.");
+        throw new ModelNotFoundException(
+                "No matching model with specified Input/Output type found.");
     }
 
     /**

File: integration/src/main/java/ai/djl/integration/tests/training/OptimizerTest.java
Patch:
@@ -177,7 +177,9 @@ public void testAdam() {
     private NDArray runOptimizer(NDManager manager, Trainer trainer, Block block, int batchSize) {
         NDArray data = manager.ones(new Shape(batchSize, CHANNELS)).mul(2);
         NDArray label = data.mul(2);
-        Batch batch = new Batch(manager, new NDList(data), new NDList(label), Batchifier.STACK);
+        Batch batch =
+                new Batch(
+                        manager, new NDList(data), new NDList(label), batchSize, Batchifier.STACK);
         trainer.trainBatch(batch);
         trainer.step();
         return NDArrays.stack(

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -124,6 +124,7 @@ public Translator<BufferedImage, DetectedObjects> newInstance(
             return SingleShotDetectionTranslator.builder()
                     .setPipeline(pipeline)
                     .setSynsetArtifactName("classes.txt")
+                    .optOutputFormat("mxssd")
                     .optThreshold((float) threshold)
                     .optRescaleSize(width, height)
                     .build();

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -61,8 +61,9 @@ public void load(Path modelPath, String modelName, Map<String, String> options)
                 throw new FileNotFoundException(".pt file not found in: " + modelPath);
             }
             block = JniUtils.loadModule((PtNDManager) manager, modelFile, manager.getDevice());
+        } else {
+            readParameters(options);
         }
-        readParameters(options);
     }
 
     @Override

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -49,8 +49,8 @@ public void testTrainResNetSymbolicNightly()
             String[] args = {"-e", "10", "-g", "4", "-s", "-p"};
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
-            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.7f);
-            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1.0);
+            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.75f);
+            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1.1);
         }
     }
 
@@ -67,7 +67,7 @@ public void testTrainResNetImperativeNightly()
             String[] args = {"-e", "10", "-g", "4"};
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
-            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.6f);
+            Assert.assertTrue(result.getEvaluation("Accuracy") > 0.7f);
             Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 0.9);
         }
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/LibUtils.java
Patch:
@@ -313,7 +313,7 @@ private static String downloadMxnet(Platform platform) throws IOException {
                     String fileName = line.substring(line.lastIndexOf('/') + 1, line.length() - 3);
                     if ("win".equals(os)) {
                         if ("libmxnet.dll".equals(fileName)) {
-                            continue;
+                            fileName = "mxnet.dll";
                         } else if ("libcumxnet.dll".equals(fileName)) {
                             fileName = "mxnet.dll";
                         } else if (fileName.startsWith("mxnet_")

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/nlp/qa/BertQATranslator.java
Patch:
@@ -77,8 +77,8 @@ public String processOutput(TranslatorContext ctx, NDList list) {
         // Get Probability distribution
         NDArray startProb = startLogits.softmax(-1);
         NDArray endProb = endLogits.softmax(-1);
-        int startIdx = (int) startProb.argMax(1).getFloat();
-        int endIdx = (int) endProb.argMax(1).getFloat();
+        int startIdx = (int) startProb.argMax(1).getLong();
+        int endIdx = (int) endProb.argMax(1).getLong();
         return tokens.subList(startIdx, endIdx + 1).toString();
     }
 }

File: examples/src/main/java/ai/djl/examples/inference/ActionRecognition.java
Patch:
@@ -55,8 +55,8 @@ public static Classifications predict() throws IOException, ModelException, Tran
                 Criteria.builder()
                         .optApplication(Application.CV.ACTION_RECOGNITION)
                         .setTypes(BufferedImage.class, Classifications.class)
-                        .optOption("backbone", "inceptionv3")
-                        .optOption("dataset", "ucf101")
+                        .optFilter("backbone", "inceptionv3")
+                        .optFilter("dataset", "ucf101")
                         .optProgress(new ProgressBar())
                         .build();
 

File: examples/src/main/java/ai/djl/examples/inference/BertQaInference.java
Patch:
@@ -65,8 +65,8 @@ public static String predict() throws IOException, TranslateException, ModelExce
                 Criteria.builder()
                         .optApplication(Application.NLP.QUESTION_ANSWER)
                         .setTypes(QAInput.class, String.class)
-                        .optOption("backbone", "bert")
-                        .optOption("dataset", "book_corpus_wiki_en_uncased")
+                        .optFilter("backbone", "bert")
+                        .optFilter("dataset", "book_corpus_wiki_en_uncased")
                         .optProgress(new ProgressBar())
                         .build();
 

File: examples/src/main/java/ai/djl/examples/inference/InstanceSegmentation.java
Patch:
@@ -59,9 +59,9 @@ public static DetectedObjects predict() throws IOException, ModelException, Tran
                 Criteria.builder()
                         .optApplication(Application.CV.INSTANCE_SEGMENTATION)
                         .setTypes(BufferedImage.class, DetectedObjects.class)
-                        .optOption("backbone", "resnet18")
-                        .optOption("flavor", "v1b")
-                        .optOption("dataset", "coco")
+                        .optFilter("backbone", "resnet18")
+                        .optFilter("flavor", "v1b")
+                        .optFilter("dataset", "coco")
                         .optProgress(new ProgressBar())
                         .build();
 

File: examples/src/main/java/ai/djl/examples/inference/benchmark/util/AbstractBenchmark.java
Patch:
@@ -192,7 +192,7 @@ protected ZooModel<I, O> loadModel(
                 Criteria.builder()
                         .optApplication(Application.CV.IMAGE_CLASSIFICATION)
                         .setTypes(input, output)
-                        .optOptions(arguments.getCriteria())
+                        .optFilters(arguments.getCriteria())
                         .optProgress(new ProgressBar());
 
         String modelName = arguments.getModelName();

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/ResnetTest.java
Patch:
@@ -137,8 +137,8 @@ private ZooModel<BufferedImage, Classifications> getModel()
                         .setTypes(BufferedImage.class, Classifications.class)
                         .optModelZooName(BasicModelZoo.NAME)
                         .optModelLoaderName("resnet")
-                        .optOption("layers", "50")
-                        .optOption("dataset", "cifar10")
+                        .optFilter("layers", "50")
+                        .optFilter("dataset", "cifar10")
                         .build();
 
         return ModelZoo.loadModel(criteria);

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/object_detection/SingleShotDetectionTest.java
Patch:
@@ -52,6 +52,7 @@
 import org.testng.annotations.Test;
 
 public class SingleShotDetectionTest {
+
     @Test
     public void testLoadPredict()
             throws IOException, ModelNotFoundException, TranslateException,
@@ -136,8 +137,8 @@ private ZooModel<BufferedImage, DetectedObjects> getModel()
                         .setTypes(BufferedImage.class, DetectedObjects.class)
                         .optModelZooName(BasicModelZoo.NAME)
                         .optModelLoaderName("ssd")
-                        .optOption("flavor", "tiny")
-                        .optOption("dataset", "pikachu")
+                        .optFilter("flavor", "tiny")
+                        .optFilter("dataset", "pikachu")
                         .build();
 
         return ModelZoo.loadModel(criteria);

File: examples/src/main/java/ai/djl/examples/inference/benchmark/Benchmark.java
Patch:
@@ -67,6 +67,8 @@ protected CompletableFuture<Classifications> predict(
     /** {@inheritDoc} */
     @Override
     protected void clean() {
-        predictor.close();
+        if (predictor != null) {
+            predictor.close();
+        }
     }
 }

File: examples/src/test/java/ai/djl/examples/inference/BenchmarkTest.java
Patch:
@@ -24,7 +24,7 @@ public void testBenchmark() {
             "-c",
             "2",
             "-i",
-            "/Volumes/Unix/projects/Joule/examples/src/test/resources/segmentation.jpg",
+            "src/test/resources/segmentation.jpg",
             "-r",
             "{'layers':'18','flavor':'v1'}"
         };
@@ -37,7 +37,7 @@ public void testMultithreadedBenchmark() {
             "-c",
             "2",
             "-i",
-            "/Volumes/Unix/projects/Joule/examples/src/test/resources/segmentation.jpg",
+            "src/test/resources/segmentation.jpg",
             "-r",
             "{'layers':'18','flavor':'v1'}",
             "-t",

File: api/src/main/java/ai/djl/util/cuda/CudaUtils.java
Patch:
@@ -93,7 +93,7 @@ public static String getCudaVersionString() {
         }
         int version = getCudaVersion();
         int major = version / 1000;
-        int minor = version % 1000;
+        int minor = (version / 10) % 10;
         return String.valueOf(major) + minor;
     }
 

File: api/src/main/java/ai/djl/Device.java
Patch:
@@ -52,7 +52,7 @@ public Device(String deviceType) {
      */
     public Device(String deviceType, int deviceId) {
         if (Type.CPU.equals(deviceType)) {
-            throw new UnsupportedOperationException(
+            throw new IllegalArgumentException(
                     "CPU doesn't have device id, please use new Device(\"cpu\") instead");
         }
         this.deviceType = deviceType;
@@ -75,7 +75,7 @@ public String getDeviceType() {
      */
     public int getDeviceId() {
         if (Type.CPU.equals(deviceType)) {
-            throw new UnsupportedOperationException("CPU doesn't have device id");
+            throw new IllegalStateException("CPU doesn't have device id");
         }
         return deviceId;
     }

File: api/src/test/java/ai/djl/DeviceTest.java
Patch:
@@ -18,7 +18,7 @@
 
 public class DeviceTest {
 
-    @Test(expectedExceptions = UnsupportedOperationException.class)
+    @Test(expectedExceptions = IllegalArgumentException.class)
     public void testDevice() {
         Assert.assertEquals(Device.cpu(), new Device("cpu", 0));
         if (Device.getGpuCount() > 0) {

File: examples/src/test/java/ai/djl/examples/training/TrainResNetTest.java
Patch:
@@ -50,7 +50,7 @@ public void testTrainResNetSymbolicNightly()
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
             Assert.assertTrue(result.getEvaluation("Accuracy") > 0.7f);
-            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 0.9);
+            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1.0);
         }
     }
 
@@ -68,7 +68,7 @@ public void testTrainResNetImperativeNightly()
 
             ExampleTrainingResult result = TrainResnetWithCifar10.runExample(args);
             Assert.assertTrue(result.getEvaluation("Accuracy") > 0.6f);
-            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 1.2);
+            Assert.assertTrue(result.getEvaluation("SoftmaxCrossEntropyLoss") < 0.9);
         }
     }
 }

File: api/src/test/java/ai/djl/test/mock/MockNDArray.java
Patch:
@@ -832,13 +832,13 @@ public NDArray sort(int axis) {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray softmax(int[] axes, double temperature) {
+    public NDArray softmax(int[] axes, float temperature) {
         return null;
     }
 
     /** {@inheritDoc} */
     @Override
-    public NDArray logSoftmax(int[] axes, double temperature) {
+    public NDArray logSoftmax(int[] axes, float temperature) {
         return null;
     }
 

File: basicdataset/src/test/java/ai/djl/basicdataset/PikachuTest.java
Patch:
@@ -41,7 +41,7 @@ public void testPikachuRemote() throws IOException {
         pikachu.prepare();
         TrainingConfig config =
                 new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
-                        .optInitializer(new NormalInitializer(0.01));
+                        .optInitializer(new NormalInitializer(0.01f));
         try (Model model = Model.newInstance()) {
             model.setBlock(Blocks.identityBlock());
             try (Trainer trainer = model.newTrainer(config)) {

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxPriorTest.java
Patch:
@@ -31,7 +31,8 @@ public void testMultiBoxPriors() {
                     MultiBoxPrior.builder().setSizes(sizes).setRatios(ratios).build();
             NDArray anchors =
                     multiBoxPriors.generateAnchorBoxes(
-                            manager.arange(3.0 * 512.0 * 512.0).reshape(new Shape(1, 3, 512, 512)));
+                            manager.arange(3.0f * 512.0f * 512.0f)
+                                    .reshape(new Shape(1, 3, 512, 512)));
             Assert.assertEquals(anchors.getShape(), new Shape(1, 1048576, 4));
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxTargetTest.java
Patch:
@@ -25,10 +25,10 @@ public class MultiBoxTargetTest {
     @Test
     public void testTargets() {
         try (NDManager manager = NDManager.newBaseManager()) {
-            NDArray anchorBoxes = manager.arange(22840.0 * 4.0).reshape(new Shape(1, 22840, 4));
-            NDArray label = manager.arange(160.0).reshape(new Shape(32, 1, 5));
+            NDArray anchorBoxes = manager.arange(22840.0f * 4.0f).reshape(new Shape(1, 22840, 4));
+            NDArray label = manager.arange(160.0f).reshape(new Shape(32, 1, 5));
             NDArray classPreds =
-                    manager.arange(32.0 * 22840.0 * 2.0).reshape(new Shape(32, 2, 22840));
+                    manager.arange(32.0f * 22840.0f * 2.0f).reshape(new Shape(32, 2, 22840));
 
             MultiBoxTarget multiBoxTarget = MultiBoxTarget.builder().build();
             NDList targets = multiBoxTarget.target(new NDList(anchorBoxes, label, classPreds));

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayElementArithmeticOpTest.java
Patch:
@@ -393,13 +393,13 @@ public void testDot() {
             Assert.assertEquals(NDArrays.dot(lhs, rhs), expected);
             // test 1D * ND
             lhs = manager.create(new float[] {1f, 2f});
-            rhs = manager.arange(1.0, 5.0).reshape(2, 2);
+            rhs = manager.arange(1.0f, 5.0f).reshape(2, 2);
             expected = manager.create(new float[] {7f, 10f});
             Assert.assertEquals(lhs.dot(rhs), expected);
             Assert.assertEquals(NDArrays.dot(lhs, rhs), expected);
             // test MD * ND
             lhs = manager.create(new float[] {1f, 2f}, new Shape(2, 1));
-            rhs = manager.arange(1.0, 5.0).reshape(2, 1, 2);
+            rhs = manager.arange(1.0f, 5.0f).reshape(2, 1, 2);
             expected =
                     manager.create(
                             new float[] {1f, 2f, 3f, 4f, 2f, 4f, 6f, 8f}, new Shape(2, 2, 2));

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayNumericOpTest.java
Patch:
@@ -596,7 +596,7 @@ public void testAsinh() {
             NDArray expected = manager.create(data);
             Assertions.assertAlmostEquals(array.asinh(), expected);
             // test multi-dim
-            array = manager.arange(10.0).reshape(5, 1, 2);
+            array = manager.arange(10.0f).reshape(5, 1, 2);
             expected =
                     manager.create(
                             new float[] {
@@ -624,7 +624,7 @@ public void testAcosh() {
             NDArray expected = manager.create(data);
             Assertions.assertAlmostEquals(array.acosh(), expected);
             // test multi-dim
-            array = manager.arange(10.0, 110.0, 10.0).reshape(2, 5);
+            array = manager.arange(10.0f, 110.0f, 10.0f).reshape(2, 5);
             expected =
                     manager.create(
                             new float[] {

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayReductionOpTest.java
Patch:
@@ -164,10 +164,10 @@ public void testMean() {
     @Test
     public void testTrace() {
         try (NDManager manager = NDManager.newBaseManager()) {
-            NDArray original = manager.arange(8.0).reshape(new Shape(2, 2, 2)).trace();
+            NDArray original = manager.arange(8.0f).reshape(new Shape(2, 2, 2)).trace();
             NDArray expect = manager.create(new float[] {6f, 8f});
             Assert.assertEquals(original, expect);
-            original = manager.arange(24.0).reshape(new Shape(2, 2, 2, 3)).trace();
+            original = manager.arange(24.0f).reshape(new Shape(2, 2, 2, 3)).trace();
             Assert.assertEquals(original.getShape(), new Shape(2, 3));
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/training/GradientCollectorIntegrationTest.java
Patch:
@@ -99,7 +99,7 @@ public void testTrain() {
             // add noise
             label.add(
                     manager.randomNormal(
-                            0, 0.01, label.getShape(), DataType.FLOAT32, manager.getDevice()));
+                            0f, 0.01f, label.getShape(), DataType.FLOAT32, manager.getDevice()));
 
             int sampling = config.getDevices().length * batchSize;
             ArrayDataset dataset =

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1243,13 +1243,13 @@ public NDArray sort() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray softmax(int[] axes, double temperature) {
+    public NDArray softmax(int[] axes, float temperature) {
         return softmaxHelper(axes, temperature, "_npx_softmax");
     }
 
     /** {@inheritDoc} */
     @Override
-    public NDArray logSoftmax(int[] axes, double temperature) {
+    public NDArray logSoftmax(int[] axes, float temperature) {
         return softmaxHelper(axes, temperature, "_npx_log_softmax");
     }
 

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/integration/MxSymbolBlockTest.java
Patch:
@@ -165,7 +165,7 @@ private Pair<NDArray, NDArray> train(NDManager manager, Trainer trainer, Block b
         trainer.initialize(inputShape);
 
         NDArray data = manager.ones(inputShape);
-        NDArray label = manager.arange(0, 10);
+        NDArray label = manager.arange(0f, 10f);
         NDArray pred;
         try (GradientCollector gradCol = trainer.newGradientCollector()) {
             pred = trainer.forward(new NDList(data)).singletonOrThrow();

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -943,7 +943,7 @@ public PtNDArray sort(int axis) {
 
     /** {@inheritDoc} */
     @Override
-    public PtNDArray softmax(int[] axes, double temperature) {
+    public PtNDArray softmax(int[] axes, float temperature) {
         if (temperature != 1.0) {
             throw new UnsupportedOperationException("PyTorch softmax didn't suuport temperature");
         }
@@ -952,7 +952,7 @@ public PtNDArray softmax(int[] axes, double temperature) {
 
     /** {@inheritDoc} */
     @Override
-    public PtNDArray logSoftmax(int[] axes, double temperature) {
+    public PtNDArray logSoftmax(int[] axes, float temperature) {
         throw new UnsupportedOperationException("Not implemented");
     }
 

File: tensorflow/engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -832,7 +832,7 @@ public NDArray sort() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray softmax(int[] axes, double temperature) {
+    public NDArray softmax(int[] axes, float temperature) {
         Operation op =
                 manager.getGraph()
                         .opBuilder("Softmax", "Softmax_" + TfNDManager.nextNameAssignment())
@@ -857,7 +857,7 @@ Output<?> getOutput() {
     }
 
     @Override
-    public NDArray logSoftmax(int[] axes, double temperature) {
+    public NDArray logSoftmax(int[] axes, float temperature) {
         return null;
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/LibUtils.java
Patch:
@@ -241,7 +241,7 @@ private static String downloadMxnet(String version, String os) throws IOExceptio
         String flavor;
         String cudaArch;
         if (CudaUtils.getGpuCount() > 0) {
-            flavor = "cu" + CudaUtils.getCudaVersion() + "mkl";
+            flavor = "cu" + CudaUtils.getCudaVersionString() + "mkl";
             cudaArch = CudaUtils.getComputeCapability(0);
         } else {
             flavor = "mkl";

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -60,7 +60,7 @@ public void load(Path modelPath, String modelName, Map<String, String> options)
             if (Files.notExists(modelFile)) {
                 throw new FileNotFoundException(".pt file not found in: " + modelPath);
             }
-            block = JniUtils.loadModule((PtNDManager) manager, modelFile);
+            block = JniUtils.loadModule((PtNDManager) manager, modelFile, manager.getDevice());
         }
         readParameters(options);
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -233,7 +233,7 @@ public native Pointer torchFromBlob(
 
     public native void torchNegi(Pointer self);
 
-    public native Pointer normalize(Pointer handle, float[] mean, float[] std);
+    public native Pointer normalize(Pointer handle, Pointer mean, Pointer std);
 
     public native Pointer atNormal(
             double mean,
@@ -261,7 +261,7 @@ public native Pointer torchEye(
     // TODO to be removed once we have div and swapAxes operator
     public native Pointer toTensor(Pointer handle);
 
-    public native Pointer moduleLoad(String path);
+    public native Pointer moduleLoad(String path, int[] device);
 
     public native void moduleEval(Pointer handle);
 

File: api/src/main/java/ai/djl/training/evaluator/AbstractAccuracy.java
Patch:
@@ -83,8 +83,8 @@ public void addAccumulator(String key) {
     @Override
     public void updateAccumulator(String key, NDList labels, NDList predictions) {
         Pair<Long, NDArray> update = accuracyHelper(labels, predictions);
-        totalInstances.compute(key, (k, v) -> update.getKey());
-        correctInstances.compute(key, (k, v) -> update.getValue().sum().getLong());
+        totalInstances.compute(key, (k, v) -> v + update.getKey());
+        correctInstances.compute(key, (k, v) -> v + update.getValue().sum().getLong());
     }
 
     @Override

File: api/src/main/java/ai/djl/modality/cv/ImageVisualization.java
Patch:
@@ -66,7 +66,7 @@ public static void drawBoundingBoxes(BufferedImage image, DetectedObjects detect
     /**
      * Draws alpha masks on segmented items in image.
      *
-     * @param image Buffered image to draw masks upon.
+     * @param image Buffered image to draw masks upon
      * @param mask Mask using which the parameters are added
      */
     private static void drawMask(BufferedImage image, Mask mask) {

File: api/src/main/java/ai/djl/modality/cv/Mask.java
Patch:
@@ -40,7 +40,7 @@ public Mask(double x, double y, double width, double height, float[][] dist) {
     /**
      * Returns the probability for each pixel.
      *
-     * @return the probability for each pixel.
+     * @return the probability for each pixel
      */
     public float[][] getProbDist() {
         return probDist;

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -1589,7 +1589,7 @@ default boolean allClose(NDArray other, double rtol, double atol, boolean equalN
      * </pre>
      *
      * @param n the number to be compared
-     * @return the maximum of this {@code NDArray} and a number element-wise.
+     * @return the maximum of this {@code NDArray} and a number element-wise
      */
     NDArray maximum(Number n);
 

File: api/src/main/java/ai/djl/ndarray/index/NDIndexFullSlice.java
Patch:
@@ -64,7 +64,7 @@ public long[] getMax() {
     /**
      * Returns the slice step for each axis.
      *
-     * @return the slice step for each axis.
+     * @return the slice step for each axis
      */
     public long[] getStep() {
         return step;

File: api/src/main/java/ai/djl/ndarray/internal/NDArrayEx.java
Patch:
@@ -253,7 +253,7 @@ void sgdUpdate(
      * @param dilate the convolution dilate: (w,), (h, w) or (d, h, w). Defaults to 1 for each
      *     dimension
      * @param numFilters the convolution filter(channel) number
-     * @param numGroups the number of group partitions. Defaults to 1.
+     * @param numGroups the number of group partitions. Defaults to 1
      * @param layout the layout for input, output and weight. Empty for default layout: NCW for 1d,
      *     NCHW for 2d and NCDHW for 3d. NHWC and NDHWC are only supported on GPU
      * @param noBias whether to disable bias parameter. Defaults to false

File: api/src/main/java/ai/djl/nn/Parameter.java
Patch:
@@ -118,7 +118,7 @@ public void setArray(NDArray array) {
     /**
      * Gets the values of this {@code Parameter} as an {@link NDArray}.
      *
-     * @return an {@link NDArray} that contains values of this {@code Parameter}.
+     * @return an {@link NDArray} that contains values of this {@code Parameter}
      */
     public NDArray getArray() {
         if (!isInitialized()) {

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -103,7 +103,7 @@ default Iterable<Batch> iterateDataset(Dataset dataset) {
     /**
      * Returns the Metrics param used for benchmarking.
      *
-     * @return the the Metrics param used for benchmarking.
+     * @return the the Metrics param used for benchmarking
      */
     Metrics getMetrics();
 

File: api/src/main/java/ai/djl/training/hyperparameter/param/HpBool.java
Patch:
@@ -20,7 +20,7 @@ public class HpBool extends HpCategorical<Boolean> {
     /**
      * Constructs a {@link HpBool}.
      *
-     * @param name the name of the hyperparameter.
+     * @param name the name of the hyperparameter
      */
     public HpBool(String name) {
         super(name, Arrays.asList(false, true));

File: api/src/main/java/ai/djl/training/hyperparameter/param/HpCategorical.java
Patch:
@@ -28,7 +28,7 @@ public class HpCategorical<T> extends Hyperparameter<T> {
      * Constructs a {@link HpCategorical}.
      *
      * @param name the name of the hyperparameters
-     * @param categories the valid values for the hyperparameter.
+     * @param categories the valid values for the hyperparameter
      */
     public HpCategorical(String name, List<T> categories) {
         super(name);

File: api/src/main/java/ai/djl/training/initializer/NormalInitializer.java
Patch:
@@ -35,7 +35,7 @@ public NormalInitializer() {
     /**
      * Creates a Normal initializer.
      *
-     * @param sigma the standard deviation of the normal distribution.
+     * @param sigma the standard deviation of the normal distribution
      */
     public NormalInitializer(double sigma) {
         this.sigma = sigma;

File: api/src/main/java/ai/djl/translate/StackBatchifier.java
Patch:
@@ -145,7 +145,7 @@ public NDList[] split(NDList list, int numOfSlices, boolean evenSplit) {
      * @param array a batch of {@code NDArray}
      * @param numOfSlices the number of desired slices
      * @param evenSplit whether to force all slices to have the same number of elements
-     * @return an NDList even if `numOfSlice` is 1.
+     * @return an NDList even if `numOfSlice` is 1
      */
     private NDList split(NDArray array, int numOfSlices, boolean evenSplit) {
         int batchSize = Math.toIntExact(array.size(0));

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxGradientCollector.java
Patch:
@@ -109,7 +109,7 @@ public void backward(NDArray array) {
     /**
      * Computes the gradients of the NDArray w.r.t variables.
      *
-     * @param array the target/head array to run backward on.
+     * @param array the target/head array to run backward on
      * @param retainGraph whether to retain the computation graph for another backward pass on the
      *     same graph. By default the computation history is cleared.
      */

File: repository/src/main/java/ai/djl/repository/MRL.java
Patch:
@@ -93,7 +93,7 @@ public String getGroupId() {
     /**
      * Sets the groupId.
      *
-     * @param groupId the new groupId.
+     * @param groupId the new groupId
      */
     public void setGroupId(String groupId) {
         this.groupId = groupId;

File: repository/src/main/java/ai/djl/repository/Repository.java
Patch:
@@ -166,7 +166,7 @@ static Repository newInstance(String name, String url) {
      * Returns an {@link InputStream} for an item in a repository.
      *
      * @param item the item to open
-     * @param path the path to a file if the item is a zipped directory. Otherwise, pass null.
+     * @param path the path to a file if the item is a zipped directory. Otherwise, pass null
      * @return the file stream
      * @throws IOException if it failed to open the stream
      */
@@ -176,7 +176,7 @@ static Repository newInstance(String name, String url) {
      * Returns the path to a file for the item.
      *
      * @param item the item to find the path for
-     * @param path the path to a file if the item is a zipped directory. Otherwise, pass null.
+     * @param path the path to a file if the item is a zipped directory. Otherwise, pass null
      * @return the file path
      * @throws IOException if it failed to find the path
      */

File: basicdataset/src/test/java/ai/djl/basicdataset/CaptchaTest.java
Patch:
@@ -36,15 +36,15 @@ public void testCaptcha() throws IOException {
         try (Model model = Model.newInstance()) {
             model.setBlock(Blocks.identityBlock());
 
-            CaptchaDataset mnist =
+            CaptchaDataset captchaDataset =
                     new CaptchaDataset.Builder()
                             .optUsage(Dataset.Usage.TEST)
                             .setSampling(32, true)
                             .build();
 
-            mnist.prepare();
+            captchaDataset.prepare();
             try (Trainer trainer = model.newTrainer(config)) {
-                for (Batch batch : trainer.iterateDataset(mnist)) {
+                for (Batch batch : trainer.iterateDataset(captchaDataset)) {
                     Assert.assertEquals(batch.getData().size(), 1);
                     Assert.assertEquals(batch.getLabels().size(), 6);
                     batch.close();

File: api/src/test/java/ai/djl/util/cuda/CudaUtilsTest.java
Patch:
@@ -44,7 +44,7 @@ public void testCudaUtils() {
 
         Assert.assertTrue(cudaVersion >= 9020, "cuda 9.2+ required.");
 
-        List<String> supportedSm = Arrays.asList("3.7", "5.2", "6.0", "6.1", "7.0", "7.5");
+        List<String> supportedSm = Arrays.asList("37", "52", "60", "61", "70", "75");
         Assert.assertTrue(supportedSm.contains(smVersion), "Unsupported cuda sm: " + smVersion);
     }
 }

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -66,7 +66,6 @@ private static synchronized String initEngine() {
         } else if (!ALL_ENGINES.containsKey(defaultEngine)) {
             throw new EngineException("Unknown default engine: " + defaultEngine);
         }
-
         logger.debug("Found default engine: {}", defaultEngine);
         return defaultEngine;
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -138,7 +138,8 @@ public NDArray arange(
     @Override
     public NDArray eye(int rows, int cols, int k, DataType dataType, Device device) {
         if (k != 0) {
-            throw new IllegalArgumentException("index of the diagonal is not supported in PyTorch");
+            throw new UnsupportedOperationException(
+                    "index of the diagonal is not supported in PyTorch");
         }
         return JniUtils.eye(this, rows, cols, dataType, device, SparseFormat.DENSE);
     }
@@ -147,7 +148,7 @@ public NDArray eye(int rows, int cols, int k, DataType dataType, Device device)
     @Override
     public NDArray linspace(double start, double stop, int num, boolean endpoint, Device device) {
         if (!endpoint) {
-            throw new IllegalArgumentException("endpoint only support true");
+            throw new UnsupportedOperationException("endpoint only support true");
         }
         return JniUtils.linspace(
                 this, start, stop, num, DataType.FLOAT32, device, SparseFormat.DENSE);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -26,6 +26,8 @@ public final class PyTorchLibrary {
 
     private PyTorchLibrary() {}
 
+    public native void torchManualSeed(long seed);
+
     public native long[] torchSizes(Pointer handle);
 
     public native ByteBuffer torchDataPtr(Pointer handle);

File: api/src/main/java/ai/djl/training/dataset/RandomAccessDataset.java
Patch:
@@ -124,7 +124,7 @@ public RandomAccessDataset[] randomSplit(int... ratio) {
         double sum = Arrays.stream(ratio).sum();
         int from = 0;
         for (int i = 0; i < ratio.length - 1; ++i) {
-            int to = from + (int) (indices[i] / sum * size);
+            int to = from + (int) (ratio[i] / sum * size);
             ret[i] = new SubDataset(this, indices, from, to);
             from += to;
         }

File: api/src/main/java/ai/djl/training/evaluator/Evaluator.java
Patch:
@@ -117,7 +117,7 @@ protected void checkLabelShapes(NDArray labels, NDArray predictions, boolean che
                             + ")");
         }
         if (!checkDimOnly) {
-            if (labels.getShape() != predictions.getShape()) {
+            if (!labels.getShape().equals(predictions.getShape())) {
                 throw new IllegalArgumentException(
                         "The shape of labels("
                                 + labels.getShape()

File: integration/src/main/java/ai/djl/integration/tests/training/EvaluatorTest.java
Patch:
@@ -17,6 +17,7 @@
 import ai.djl.ndarray.NDList;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
+import ai.djl.training.evaluator.AbstractAccuracy;
 import ai.djl.training.evaluator.Accuracy;
 import ai.djl.training.evaluator.TopKAccuracy;
 import org.testng.Assert;
@@ -32,7 +33,7 @@ public void testAccuracy() {
                     manager.create(new float[] {0.3f, 0.7f, 0, 1, 0.4f, 0.6f}, new Shape(3, 2));
             NDArray labels = manager.create(new int[] {0, 1, 1}, new Shape(3));
 
-            Accuracy acc = new Accuracy();
+            AbstractAccuracy acc = new Accuracy();
             acc.addAccumulator("");
             acc.updateAccumulator("", new NDList(labels), new NDList(predictions));
             float accuracy = acc.getAccumulator("");

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -105,13 +105,13 @@ public NDArray rdivi(NDArray b) {
     /** {@inheritDoc} */
     @Override
     public NDArray rsub(Number n) {
-        return array.sub(n).negi();
+        return array.sub(n).neg();
     }
 
     /** {@inheritDoc} */
     @Override
     public NDArray rsub(NDArray b) {
-        return array.sub(b).negi();
+        return array.sub(b).neg();
     }
 
     /** {@inheritDoc} */

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxPriorTest.java
Patch:
@@ -31,7 +31,7 @@ public void testMultiBoxPriors() {
                     new MultiBoxPrior.Builder().setSizes(sizes).setRatios(ratios).build();
             NDArray anchors =
                     multiBoxPriors.generateAnchorBoxes(
-                            manager.arange(3 * 512 * 512).reshape(new Shape(1, 3, 512, 512)));
+                            manager.arange(3.0 * 512.0 * 512.0).reshape(new Shape(1, 3, 512, 512)));
             Assert.assertEquals(anchors.getShape(), new Shape(1, 1048576, 4));
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayElementArithmeticOpTest.java
Patch:
@@ -393,13 +393,13 @@ public void testDot() {
             Assert.assertEquals(NDArrays.dot(lhs, rhs), expected);
             // test 1D * ND
             lhs = manager.create(new float[] {1f, 2f});
-            rhs = manager.arange(1, 5).reshape(2, 2);
+            rhs = manager.arange(1.0, 5.0).reshape(2, 2);
             expected = manager.create(new float[] {7f, 10f});
             Assert.assertEquals(lhs.dot(rhs), expected);
             Assert.assertEquals(NDArrays.dot(lhs, rhs), expected);
             // test MD * ND
             lhs = manager.create(new float[] {1f, 2f}, new Shape(2, 1));
-            rhs = manager.arange(1, 5).reshape(2, 1, 2);
+            rhs = manager.arange(1.0, 5.0).reshape(2, 1, 2);
             expected =
                     manager.create(
                             new float[] {1f, 2f, 3f, 4f, 2f, 4f, 6f, 8f}, new Shape(2, 2, 2));

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayNumericOpTest.java
Patch:
@@ -596,7 +596,7 @@ public void testAsinh() {
             NDArray expected = manager.create(data);
             Assertions.assertAlmostEquals(array.asinh(), expected);
             // test multi-dim
-            array = manager.arange(10).reshape(5, 1, 2);
+            array = manager.arange(10.0).reshape(5, 1, 2);
             expected =
                     manager.create(
                             new float[] {
@@ -624,7 +624,7 @@ public void testAcosh() {
             NDArray expected = manager.create(data);
             Assertions.assertAlmostEquals(array.acosh(), expected);
             // test multi-dim
-            array = manager.arange(10, 110, 10).reshape(2, 5);
+            array = manager.arange(10.0, 110.0, 10.0).reshape(2, 5);
             expected =
                     manager.create(
                             new float[] {

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayReductionOpTest.java
Patch:
@@ -164,10 +164,10 @@ public void testMean() {
     @Test
     public void testTrace() {
         try (NDManager manager = NDManager.newBaseManager()) {
-            NDArray original = manager.arange(8).reshape(new Shape(2, 2, 2)).trace();
+            NDArray original = manager.arange(8.0).reshape(new Shape(2, 2, 2)).trace();
             NDArray expect = manager.create(new float[] {6f, 8f});
             Assert.assertEquals(original, expect);
-            original = manager.arange(24).reshape(new Shape(2, 2, 2, 3)).trace();
+            original = manager.arange(24.0).reshape(new Shape(2, 2, 2, 3)).trace();
             Assert.assertEquals(original.getShape(), new Shape(2, 3));
         }
     }

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -102,7 +102,9 @@ public native Pointer torchFromBlob(
             int[] device,
             boolean requiredGrad);
 
-    public native Pointer torchGet(Pointer handle, long dim, long start);
+    public native Pointer torchIndexSelect(Pointer handle, long dim, Pointer indexHandle);
+
+    public native Pointer torchMaskedSelect(Pointer handle, Pointer maskHandle);
 
     public native void torchDeleteTensor(Pointer handle);
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayOtherOpTest.java
Patch:
@@ -606,6 +606,7 @@ public void testTranspose() {
             // scalar
             original = manager.create(5f);
             Assert.assertEquals(original.transpose(), original);
+            // throw exception
             original.transpose(0);
 
             // zero-dim

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -38,6 +38,8 @@ private PyTorchLibrary() {}
 
     public native Pointer torchTo(Pointer handle, int dType, int[] device, boolean copy);
 
+    public native Pointer tensorClone(Pointer handle);
+
     public native Pointer torchEmpty(
             long[] shape, int dType, int layout, int[] device, boolean requiredGrad);
 

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -4013,7 +4013,7 @@ default NDArray broadcast(long... shape) {
      * @param axis the axis along which to find maximum values
      * @return a {@code NDArray} containing indices
      */
-    NDArray argMax(long axis);
+    NDArray argMax(int axis);
 
     /**
      * Returns the indices of the minimum values into the flattened {@code NDArray}.
@@ -4059,7 +4059,7 @@ default NDArray broadcast(long... shape) {
      * @param axis the axis along which to find minimum values
      * @return a {@code NDArray} containing indices
      */
-    NDArray argMin(long axis);
+    NDArray argMin(int axis);
 
     /**
      * Returns percentile for this {@code NDArray}.

File: api/src/main/java/ai/djl/ndarray/NDManager.java
Patch:
@@ -784,7 +784,7 @@ default NDArray linspace(Number start, Number stop, int num) {
      * @return the drawn samples {@link NDArray}
      */
     default NDArray randomUniform(Number low, Number high, Shape shape) {
-        return randomUniform(low, high, shape, null, getDevice());
+        return randomUniform(low, high, shape, DataType.UNKNOWN, getDevice());
     }
 
     /**
@@ -816,7 +816,7 @@ default NDArray randomUniform(Number low, Number high, Shape shape) {
      * @return the drawn samples {@link NDArray}
      */
     default NDArray randomNormal(Shape shape) {
-        return randomNormal(0f, 1f, shape, null, getDevice());
+        return randomNormal(0f, 1f, shape, DataType.UNKNOWN, getDevice());
     }
 
     /**

File: api/src/test/java/ai/djl/test/mock/MockNDArray.java
Patch:
@@ -995,7 +995,7 @@ public NDArray argMax() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMax(long axis) {
+    public NDArray argMax(int axis) {
         return null;
     }
 
@@ -1007,7 +1007,7 @@ public NDArray argMin() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMin(long axis) {
+    public NDArray argMin(int axis) {
         return null;
     }
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayNumericOpTest.java
Patch:
@@ -29,7 +29,7 @@ public void testNegation() {
             NDArray array = manager.create(data);
             data = DoubleStream.of(data).map(x -> -x).toArray();
             NDArray expected = manager.create(data);
-            Assert.assertEquals(array.neg(), expected);
+            Assertions.assertAlmostEquals(array.neg(), expected);
             Assertions.assertInPlaceEquals(array.negi(), expected, array);
             // test multi-dim
             data = new double[] {-2.2, 2.2, 3, -0.2, 2.76, 0.0002};

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayReductionOpTest.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.integration.tests.ndarray;
 
-import ai.djl.engine.EngineException;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
@@ -21,7 +20,7 @@
 
 public class NDArrayReductionOpTest {
 
-    @Test(expectedExceptions = EngineException.class)
+    @Test
     public void testMax() {
         try (NDManager manager = NDManager.newBaseManager()) {
             NDArray array = manager.create(new float[] {1f, 2f, 5f, 1f});
@@ -50,7 +49,7 @@ public void testMax() {
         }
     }
 
-    @Test(expectedExceptions = EngineException.class)
+    @Test
     public void testMin() {
         try (NDManager manager = NDManager.newBaseManager()) {
             NDArray array = manager.create(new float[] {2f, 1f, 5f, 0f});

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxMatrix.java
Patch:
@@ -1163,7 +1163,7 @@ public NDArray argMax() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMax(long axis) {
+    public NDArray argMax(int axis) {
         return array.argMax(axis);
     }
 
@@ -1175,7 +1175,7 @@ public NDArray argMin() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMin(long axis) {
+    public NDArray argMin(int axis) {
         return array.argMin(axis);
     }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -211,7 +211,7 @@ public NDArray randomUniform(
         params.addParam("high", high);
         params.addParam("size", shape);
         params.setDevice(Device.defaultIfNull(dev, device));
-        if (dataType != null) {
+        if (dataType != DataType.UNKNOWN) {
             params.setDataType(dataType);
         }
         return invoke("_npi_uniform", params);
@@ -226,7 +226,7 @@ public NDArray randomNormal(
         params.addParam("scale", scale);
         params.addParam("size", shape);
         params.setDevice(Device.defaultIfNull(dev, device));
-        if (dataType != null) {
+        if (dataType != DataType.UNKNOWN) {
             params.setDataType(dataType);
         }
         return invoke("_npi_normal", params);

File: tensorflow/engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -1002,7 +1002,7 @@ public NDArray argMax() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMax(long axis) {
+    public NDArray argMax(int axis) {
         return null;
     }
 
@@ -1014,7 +1014,7 @@ public NDArray argMin() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray argMin(long axis) {
+    public NDArray argMin(int axis) {
         return null;
     }
 

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/MxModelZoo.java
Patch:
@@ -13,7 +13,7 @@
 package ai.djl.mxnet.zoo;
 
 import ai.djl.mxnet.zoo.cv.actionrecognition.ActionRecognitionModelLoader;
-import ai.djl.mxnet.zoo.cv.classification.Mlp;
+import ai.djl.mxnet.zoo.cv.classification.MlpModelLoader;
 import ai.djl.mxnet.zoo.cv.classification.Resnet;
 import ai.djl.mxnet.zoo.cv.classification.Resnext;
 import ai.djl.mxnet.zoo.cv.classification.SeResnext;
@@ -43,7 +43,7 @@ public class MxModelZoo implements ModelZoo {
     private static final Repository REPOSITORY = Repository.newInstance("MxNet", DJL_REPO_URL);
     public static final String GROUP_ID = "ai.djl.mxnet";
 
-    public static final Mlp MLP = new Mlp(REPOSITORY);
+    public static final MlpModelLoader MLP = new MlpModelLoader(REPOSITORY);
     public static final SingleShotDetectionModelLoader SSD =
             new SingleShotDetectionModelLoader(REPOSITORY);
     public static final Resnet RESNET = new Resnet(REPOSITORY);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/MlpModelLoader.java
Patch:
@@ -22,7 +22,7 @@
  *
  * @see ai.djl.mxnet.engine.MxSymbolBlock
  */
-public class Mlp extends ImageClassificationModelLoader {
+public class MlpModelLoader extends ImageClassificationModelLoader {
 
     private static final String ARTIFACT_ID = "mlp";
     private static final String VERSION = "0.0.1";
@@ -32,7 +32,7 @@ public class Mlp extends ImageClassificationModelLoader {
      *
      * @param repository the repository to load the model from
      */
-    public Mlp(Repository repository) {
+    public MlpModelLoader(Repository repository) {
         super(repository, ARTIFACT_ID, VERSION);
     }
 }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -168,7 +168,7 @@ public NDArray arange(Number start, Number stop, Number step, DataType dataType,
         params.addParam("start", start);
         params.addParam("stop", stop);
         params.addParam("step", step);
-        if (dataType != null) {
+        if (dataType != DataType.UNKNOWN) {
             params.setDataType(dataType);
         }
         params.setDevice(Device.defaultIfNull(dev, device));

File: api/src/main/java/ai/djl/translate/Translator.java
Patch:
@@ -45,7 +45,7 @@
  *     public Classification processOutput(TranslatorContext ctx, NDList list) throws TranslateException {
  *         Model model = ctx.getModel();
  *         NDArray array = list.get(0).at(0);
- *         NDArray sorted = array.argsort(-1, false);
+ *         NDArray sorted = array.argSort(-1, false);
  *         NDArray top = sorted.at(0);
  *
  *         float[] probabilities = array.toFloatArray();

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayShapesManipulationOpTest.java
Patch:
@@ -122,13 +122,13 @@ public void testSqueeze() {
             expected = manager.ones(new Shape(1, 2, 3, 1));
             Assert.assertEquals(array.squeeze(2), expected);
             expected = manager.ones(new Shape(2, 1, 3));
-            Assert.assertEquals(array.squeeze(new int[] {0, 4}), expected);
+            Assert.assertEquals(array.squeeze(new long[] {0, 4}), expected);
 
             // scalar
             array = manager.create(2f);
             Assert.assertEquals(array.squeeze(), array);
             Assert.assertEquals(array.squeeze(0), array);
-            Assert.assertEquals(array.squeeze(new int[] {0}), array);
+            Assert.assertEquals(array.squeeze(new long[] {0}), array);
 
             // zero-dim
             array = manager.create(new Shape(1, 0, 1, 3, 1));
@@ -137,7 +137,7 @@ public void testSqueeze() {
             expected = manager.create(new Shape(1, 0, 3, 1));
             Assert.assertEquals(array.squeeze(2), expected);
             expected = manager.create(new Shape(0, 1, 3));
-            Assert.assertEquals(array.squeeze(new int[] {0, 4}), expected);
+            Assert.assertEquals(array.squeeze(new long[] {0, 4}), expected);
         }
     }
 

File: api/src/main/java/ai/djl/training/evaluator/TopKAccuracy.java
Patch:
@@ -15,6 +15,7 @@
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDArrays;
 import ai.djl.ndarray.NDList;
+import ai.djl.ndarray.types.DataType;
 import ai.djl.util.Pair;
 import java.util.stream.IntStream;
 
@@ -73,7 +74,7 @@ protected Pair<Long, NDArray> accuracyHelper(NDList labels, NDList predictions)
         // number of labels and predictions should be the same
         checkLabelShapes(label, prediction);
         // ascending by default
-        NDArray topKPrediction = prediction.argSort(axis);
+        NDArray topKPrediction = prediction.argSort(axis).toType(DataType.INT32, false);
         int numDims = topKPrediction.getShape().dimension();
         NDArray numCorrect;
         if (numDims == 1) {

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtModel.java
Patch:
@@ -78,7 +78,8 @@ public Trainer newTrainer(TrainingConfig trainingConfig) {
 
     @Override
     public <I, O> Predictor<I, O> newPredictor(Translator<I, O> translator) {
-        throw new UnsupportedOperationException("Not implemented");
+        // TODO: modify copy
+        return new PtPredictor<>(this, translator, false);
     }
 
     @Override

File: pytorch/pytorch-model-zoo/src/main/java/ai/djl/pytorch/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -14,7 +14,6 @@
 
 import ai.djl.modality.Classifications;
 import ai.djl.modality.cv.ImageClassificationTranslator;
-import ai.djl.modality.cv.transform.CenterCrop;
 import ai.djl.modality.cv.transform.Normalize;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
@@ -58,8 +57,7 @@ public Translator<BufferedImage, Classifications> getTranslator(Artifact artifac
         String flag = (String) arguments.getOrDefault("flag", NDImageUtils.Flag.COLOR.name());
 
         Pipeline pipeline = new Pipeline();
-        pipeline.add(new CenterCrop())
-                .add(new Resize(width, height))
+        pipeline.add(new Resize(width, height))
                 .add(new ToTensor())
                 .add(
                         new Normalize(

File: api/src/main/java/ai/djl/ndarray/BaseNDManager.java
Patch:
@@ -22,9 +22,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-/**
- * {@code BaseNDManager} is the default implementation of {@link NDManager} for {@code PtNDManager}.
- */
+/** {@code BaseNDManager} is the default implementation of {@link NDManager}. */
 public abstract class BaseNDManager implements NDManager {
 
     private static final Logger logger = LoggerFactory.getLogger(BaseNDManager.class);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtDeviceType.java
Patch:
@@ -21,7 +21,7 @@ public final class PtDeviceType implements DeviceType {
     private PtDeviceType() {}
 
     /**
-     * Converts a {@link Device} to the corresponding MXNet device number.
+     * Converts a {@link Device} to the corresponding PyTorch device number.
      *
      * @param device the java {@link Device}
      * @return the PyTorch device number

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDArray.java
Patch:
@@ -56,8 +56,7 @@ public class PtNDArray extends NativeResource implements NDArray {
      * @param shape the shape of the new array
      * @param dataType the dataType of the new array
      */
-    public PtNDArray(
-            PtNDManager manager, Pointer handle, Device device, Shape shape, DataType dataType) {
+    PtNDArray(PtNDManager manager, Pointer handle, Device device, Shape shape, DataType dataType) {
         this(manager, handle);
         this.device = device;
         // shape check

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -36,7 +36,7 @@ public class PtNDManager extends BaseNDManager {
 
     private static final PtNDManager SYSTEM_MANAGER = new SystemManager();
 
-    protected PtNDManager(NDManager parent, Device device) {
+    private PtNDManager(NDManager parent, Device device) {
         super(parent, device);
     }
 

File: fasttext/fasttext-engine/src/main/java/ai/djl/fasttext/engine/FtEngine.java
Patch:
@@ -22,7 +22,7 @@
  * href="https://fasttext.cc//">Facebook fastText Framework</a>.
  *
  * <p>To get an instance of the {@code FtEngine} when it is not the default Engine, call {@link
- * Engine#getEngine(String)} with the Engine name "Fasttext".
+ * Engine#getEngine(String)} with the Engine name "fastText".
  */
 public class FtEngine extends Engine {
 

File: api/src/main/java/ai/djl/ndarray/BaseNDManager.java
Patch:
@@ -22,7 +22,9 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-/** {@code BaseNDManager} is the default implementation of {@link NDManager}. */
+/**
+ * {@code BaseNDManager} is the default implementation of {@link NDManager} for {@code PtNDManager}.
+ */
 public abstract class BaseNDManager implements NDManager {
 
     private static final Logger logger = LoggerFactory.getLogger(BaseNDManager.class);

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/engine/PtNDManager.java
Patch:
@@ -31,6 +31,7 @@
 import java.nio.IntBuffer;
 import java.nio.LongBuffer;
 
+/** {@code PtNDManager} is the PyTorch implementation of {@link NDManager}. */
 public class PtNDManager extends BaseNDManager {
 
     private static final PtNDManager SYSTEM_MANAGER = new SystemManager();

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -80,7 +80,7 @@ public native Pointer torchFromBlob(
 
     public native void moduleEval(Pointer handle);
 
-    public native Pointer moduleForward(Pointer moduleHandle, Pointer[] IValuePointers);
+    public native Pointer moduleForward(Pointer moduleHandle, Pointer[] iValuePointers);
 
     public native Pointer iValueCreateFromTensor(Pointer tensorHandle);
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/jni/PyTorchLibrary.java
Patch:
@@ -53,6 +53,8 @@ public native Pointer torchOnes(
 
     public native Pointer torchArgMax(Pointer handle, long dim, boolean keepDim);
 
+    public native boolean contentEqual(Pointer handle1, Pointer handle2);
+
     public native Pointer torchUpsampleBilinear2d(
             Pointer handle, long[] size, boolean alignCorners);
 

File: pytorch/pytorch-engine/src/main/java/ai/djl/pytorch/PytorchTest.java
Patch:
@@ -1,7 +1,6 @@
 package ai.djl.pytorch;
 
 import com.sun.jna.ptr.PointerByReference;
-
 import java.nio.IntBuffer;
 
 public class PytorchTest {

File: basicdataset/src/main/java/ai/djl/basicdataset/BasicDatasets.java
Patch:
@@ -17,9 +17,9 @@
 /** An interface which contains datasets that are hosted on https://mlrepo.djl.ai/. */
 public interface BasicDatasets {
 
-    String MXNET_REPO_URL = "https://mlrepo.djl.ai/";
+    String DJL_REPO_URL = "https://mlrepo.djl.ai/";
 
-    Repository REPOSITORY = Repository.newInstance("BasicDataset", MXNET_REPO_URL);
+    Repository REPOSITORY = Repository.newInstance("BasicDataset", DJL_REPO_URL);
 
     String GROUP_ID = "ai.djl.basicdataset";
 }

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/MxModelZoo.java
Patch:
@@ -39,8 +39,8 @@ public class MxModelZoo implements ModelZoo {
 
     public static final String NAME = "MXNet";
 
-    private static final String MXNET_REPO_URL = "https://mlrepo.djl.ai/";
-    private static final Repository REPOSITORY = Repository.newInstance("MxNet", MXNET_REPO_URL);
+    private static final String DJL_REPO_URL = "https://mlrepo.djl.ai/";
+    private static final Repository REPOSITORY = Repository.newInstance("MxNet", DJL_REPO_URL);
     public static final String GROUP_ID = "ai.djl.mxnet";
 
     public static final Mlp MLP = new Mlp(REPOSITORY);

File: examples/src/main/java/ai/djl/examples/training/TrainCaptcha.java
Patch:
@@ -62,6 +62,7 @@ public static ExampleTrainingResult runExample(String[] args)
             DefaultTrainingConfig config = setupTrainingConfig(arguments);
             config.addTrainingListeners(
                     TrainingListener.Defaults.logging(
+                            TrainCaptcha.class.getSimpleName(),
                             arguments.getBatchSize(),
                             (int) trainingSet.getNumIterations(),
                             (int) validateSet.getNumIterations(),

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -60,6 +60,7 @@ public static ExampleTrainingResult runExample(String[] args)
             DefaultTrainingConfig config = setupTrainingConfig(arguments);
             config.addTrainingListeners(
                     TrainingListener.Defaults.logging(
+                            TrainMnist.class.getSimpleName(),
                             arguments.getBatchSize(),
                             (int) trainingSet.getNumIterations(),
                             (int) validateSet.getNumIterations(),

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -76,6 +76,7 @@ public static ExampleTrainingResult runExample(String[] args)
             DefaultTrainingConfig config = setupTrainingConfig(arguments);
             config.addTrainingListeners(
                     TrainingListener.Defaults.logging(
+                            TrainPikachu.class.getSimpleName(),
                             arguments.getBatchSize(),
                             (int) pikachuDetectionTrain.getNumIterations(),
                             (int) pikachuDetectionTest.getNumIterations(),

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -82,6 +82,7 @@ public static ExampleTrainingResult runExample(String[] args)
             DefaultTrainingConfig config = setupTrainingConfig(arguments);
             config.addTrainingListeners(
                     TrainingListener.Defaults.logging(
+                            TrainWithOptimizers.class.getSimpleName(),
                             arguments.getBatchSize(),
                             (int) trainDataset.getNumIterations(),
                             (int) validationDataset.getNumIterations(),

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -70,6 +70,7 @@ public static ExampleTrainingResult runExample(String[] args)
             DefaultTrainingConfig config = setupTrainingConfig(arguments);
             config.addTrainingListeners(
                     TrainingListener.Defaults.logging(
+                            TrainResnetWithCifar10.class.getSimpleName(),
                             arguments.getBatchSize(),
                             (int) trainDataset.getNumIterations(),
                             (int) validationDataset.getNumIterations(),

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -159,7 +159,7 @@ public static Engine getEngine(String engineName) {
 
     /** Logs debug information about the environment for use when debugging environment issues. */
     public void debugEnvironment() {
-        logger.info("Engine name: " + getEngineName());
-        logger.info("Engine version: " + getVersion());
+        logger.info("Engine name: {}", getEngineName());
+        logger.info("Engine version: {}", getVersion());
     }
 }

File: api/src/main/java/ai/djl/training/listener/MemoryTrainingListener.java
Patch:
@@ -169,7 +169,7 @@ private static void getProcessInfo(Metrics metrics) {
                     String line = new String(readAll(is), StandardCharsets.UTF_8).trim();
                     String[] tokens = line.split("\\s+");
                     if (tokens.length != 2) {
-                        logger.error("Invalid ps output: " + line);
+                        logger.error("Invalid ps output: {}", line);
                         return;
                     }
                     float cpu = Float.parseFloat(tokens[0]);

File: examples/src/main/java/ai/djl/examples/inference/ObjectDetection.java
Patch:
@@ -21,7 +21,6 @@
 import ai.djl.repository.zoo.ZooModel;
 import ai.djl.training.util.ProgressBar;
 import ai.djl.translate.TranslateException;
-import ai.djl.util.cuda.CudaUtils;
 import java.awt.Graphics2D;
 import java.awt.image.BufferedImage;
 import java.io.IOException;
@@ -41,8 +40,6 @@ public final class ObjectDetection {
     private ObjectDetection() {}
 
     public static void main(String[] args) throws IOException, ModelException, TranslateException {
-        logger.info("GPU count: " + CudaUtils.getGpuCount());
-
         DetectedObjects detection = ObjectDetection.predict();
         logger.info("{}", detection);
     }

File: mxnet/jnarator/src/main/java/ai/djl/mxnet/jnarator/Main.java
Patch:
@@ -54,7 +54,7 @@ public static void main(String[] args) {
             if (mappingFile != null) {
                 Path file = Paths.get(mappingFile);
                 if (Files.notExists(file)) {
-                    logger.error("mapping file does not exists: " + mappingFile);
+                    logger.error("mapping file does not exists: {}", mappingFile);
                     System.exit(-1); // NOPMD
                 }
                 try (InputStream in = Files.newInputStream(file)) {

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxEngine.java
Patch:
@@ -96,8 +96,8 @@ public void setRandomSeed(int seed) {
     @Override
     public void debugEnvironment() {
         super.debugEnvironment();
-        logger.info("MXNet Library: " + LibUtils.getLibName());
-        logger.info("MXNet Features: " + String.join(", ", JnaUtils.getFeatures()));
+        logger.info("MXNet Library: {}", LibUtils.getLibName());
+        logger.info("MXNet Features: {}", String.join(", ", JnaUtils.getFeatures()));
     }
 
     /** {@inheritDoc} */

File: basicdataset/src/main/java/ai/djl/basicdataset/Mnist.java
Patch:
@@ -36,6 +36,9 @@
  */
 public final class Mnist extends ArrayDataset implements ZooDataset {
 
+    public static final int IMAGE_WIDTH = 28;
+    public static final int IMAGE_HEIGHT = 28;
+
     private static final String ARTIFACT_ID = "mnist";
 
     private NDManager manager;

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -73,7 +73,7 @@ public static ExampleTrainingResult runExample(String[] args)
                  * MNIST is 28x28 grayscale image and pre processed into 28 * 28 NDArray.
                  * 1st axis is batch axis, we can use 1 for initialization.
                  */
-                Shape inputShape = new Shape(1, 28 * 28);
+                Shape inputShape = new Shape(1, Mnist.IMAGE_HEIGHT * Mnist.IMAGE_WIDTH);
 
                 // initialize trainer with proper input shape
                 trainer.initialize(inputShape);

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -95,7 +95,7 @@ public static ExampleTrainingResult runExample(String[] args)
                  * CIFAR10 is 32x32 image and pre processed into NCHW NDArray.
                  * 1st axis is batch axis, we can use 1 for initialization.
                  */
-                Shape inputShape = new Shape(1, 3, 32, 32);
+                Shape inputShape = new Shape(1, 3, Cifar10.IMAGE_HEIGHT, Cifar10.IMAGE_WIDTH);
 
                 // initialize trainer with proper input shape
                 trainer.initialize(inputShape);
@@ -155,7 +155,7 @@ private static Model getModel(Arguments arguments)
             Model model = Model.newInstance();
             Block resNet50 =
                     new ResNetV1.Builder()
-                            .setImageShape(new Shape(3, 32, 32))
+                            .setImageShape(new Shape(3, Cifar10.IMAGE_HEIGHT, Cifar10.IMAGE_WIDTH))
                             .setNumLayers(50)
                             .setOutSize(10)
                             .build();

File: api/src/main/java/ai/djl/ndarray/internal/NDArrayEx.java
Patch:
@@ -299,6 +299,8 @@ NDList batchNorm(
             float epsilon,
             float momentum,
             int axis,
+            boolean center,
+            boolean scale,
             PairList<String, Object> additional);
 
     /**

File: api/src/main/java/ai/djl/nn/norm/BatchNorm.java
Patch:
@@ -72,7 +72,7 @@ public NDList forward(
             ParameterStore parameterStore, NDList inputs, PairList<String, Object> params) {
         inputs = opInputs(parameterStore, inputs);
         NDArrayEx ex = inputs.head().getNDArrayInternal();
-        return ex.batchNorm(inputs, epsilon, momentum, axis, params);
+        return ex.batchNorm(inputs, epsilon, momentum, axis, center, scale, params);
     }
 
     /** {@inheritDoc} */

File: api/src/main/java/ai/djl/training/loss/SoftmaxCrossEntropyLoss.java
Patch:
@@ -69,7 +69,7 @@ public NDArray evaluate(NDList label, NDList prediction) {
         NDArray pred = prediction.singletonOrThrow();
         if (!fromLogit) {
             // TODO: use numpy log softmax
-            pred = pred.softmax(classAxis).log();
+            pred = pred.logSoftmax(classAxis);
         }
         NDArray loss;
         NDArray lab = label.singletonOrThrow();

File: api/src/test/java/ai/djl/test/mock/MockNDArrayEx.java
Patch:
@@ -322,6 +322,8 @@ public NDList batchNorm(
             float epsilon,
             float momentum,
             int axis,
+            boolean center,
+            boolean scale,
             PairList<String, Object> additional) {
         return null;
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -546,11 +546,14 @@ public NDList batchNorm(
             float epsilon,
             float momentum,
             int axis,
+            boolean center,
+            boolean scale,
             PairList<String, Object> additional) {
         MxOpParams params = new MxOpParams();
         params.addParam("eps", epsilon);
         params.addParam("momentum", momentum);
         params.addParam("axis", axis);
+        params.addParam("fix_gamma", scale ? 0 : 1);
         params.addAll(additional);
 
         return getManager().invoke("BatchNorm", inputs, params);

File: api/src/main/java/ai/djl/metric/Metrics.java
Patch:
@@ -116,7 +116,7 @@ public List<Metric> getMetric(String name) {
      */
     public Metric latestMetric(String name) {
         List<Metric> list = metrics.get(name);
-        if (list == null) {
+        if (list == null || list.isEmpty()) {
             throw new IllegalArgumentException("Could not find metric: " + name);
         }
         return list.get(list.size() - 1);

File: api/src/main/java/ai/djl/util/cuda/CudaUtils.java
Patch:
@@ -111,7 +111,7 @@ public static String getComputeCapability(int device) {
      * @throws IllegalArgumentException if {@link Device} is not GPU device or does not exist
      */
     public static MemoryUsage getGpuMemory(Device device) {
-        if (!Device.gpu().getDeviceType().equals(device.getDeviceType())) {
+        if (!Device.Type.GPU.equals(device.getDeviceType())) {
             throw new IllegalArgumentException("Only GPU device is allowed.");
         }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/JnaUtils.java
Patch:
@@ -188,7 +188,7 @@ public static int getGpuCount() {
     }
 
     public static long[] getGpuMemory(Device device) {
-        if (!Device.gpu().getDeviceType().equals(device.getDeviceType())) {
+        if (!Device.Type.GPU.equals(device.getDeviceType())) {
             throw new IllegalArgumentException("Only GPU device is allowed.");
         }
 

File: api/src/main/java/ai/djl/modality/Classifications.java
Patch:
@@ -50,7 +50,7 @@ public Classifications(List<String> classNames, List<Double> probabilities) {
      */
     public Classifications(List<String> classNames, NDArray probabilities) {
         this.classNames = classNames;
-        NDArray array = probabilities.asType(DataType.FLOAT64, false);
+        NDArray array = probabilities.toType(DataType.FLOAT64, false);
         this.probabilities =
                 Arrays.stream(array.toDoubleArray()).boxed().collect(Collectors.toList());
         array.close();

File: api/src/main/java/ai/djl/modality/cv/SimplePoseTranslator.java
Patch:
@@ -58,9 +58,9 @@ public Joints processOutput(TranslatorContext ctx, NDList list) {
                         .gt(0.0)
                         // current boolean NDArray operator didn't support majority of ops
                         // need to cast to int
-                        .asType(DataType.UINT8, false)
+                        .toType(DataType.UINT8, false)
                         .tile(2, 2)
-                        .asType(DataType.BOOLEAN, false);
+                        .toType(DataType.BOOLEAN, false);
         float[] flattened = result.get(predMask).toFloatArray();
         float[] flattenedConfidence = maxValues.toFloatArray();
         List<Joint> joints = new ArrayList<>(numJoints);

File: api/src/main/java/ai/djl/ndarray/NDList.java
Patch:
@@ -162,7 +162,7 @@ public NDList asInDevice(Device device, boolean copy) {
             }
         }
         NDList newNDList = new NDList(size());
-        forEach(a -> newNDList.add(a.asInDevice(device, copy)));
+        forEach(a -> newNDList.add(a.toDevice(device, copy)));
         return newNDList;
     }
 

File: api/src/main/java/ai/djl/training/LocalParameterServer.java
Patch:
@@ -55,7 +55,7 @@ public void pull(String parameterId, NDArray[] weights, int priority) {
         Device firstDevice = grads[0].getDevice();
         // reduce gradient from all devices to first device
         for (int i = 1; i < grads.length; i++) {
-            try (NDArray gradCopy = grads[i].asInDevice(firstDevice, true)) {
+            try (NDArray gradCopy = grads[i].toDevice(firstDevice, true)) {
                 grads[0].addi(gradCopy);
             }
         }
@@ -64,7 +64,7 @@ public void pull(String parameterId, NDArray[] weights, int priority) {
             if (weight.getDevice().equals(firstDevice)) {
                 optimizer.update(parameterId, weight, grads[0]);
             } else {
-                try (NDArray gradSumCopy = grads[0].asInDevice(weight.getDevice(), true)) {
+                try (NDArray gradSumCopy = grads[0].toDevice(weight.getDevice(), true)) {
                     optimizer.update(parameterId, weight, gradSumCopy);
                 }
             }

File: api/src/main/java/ai/djl/training/ParameterStore.java
Patch:
@@ -119,15 +119,15 @@ public NDArray getValue(Parameter parameter, Device device) {
                     if (i == index && array.getDevice().equals(dev)) {
                         arrays[i] = array;
                     } else {
-                        arrays[i] = array.asInDevice(dev, true);
+                        arrays[i] = array.toDevice(dev, true);
                         arrays[i].attach(manager);
                         arrays[i].attachGradient();
                     }
                     data.add(arrays[i]);
                 }
             } else {
                 if (copy || !array.getDevice().equals(device)) {
-                    array = array.asInDevice(device, true);
+                    array = array.toDevice(device, true);
                     array.attach(manager);
                     array.attachGradient();
                 }

File: api/src/main/java/ai/djl/training/evaluator/Accuracy.java
Patch:
@@ -81,8 +81,8 @@ public void update(NDArray labels, NDArray predictions) {
         }
         // result of sum is int64 now
         long numCorrect =
-                labels.asType(DataType.INT64, false)
-                        .eq(predictionReduced.asType(DataType.INT64, false))
+                labels.toType(DataType.INT64, false)
+                        .eq(predictionReduced.toType(DataType.INT64, false))
                         .countNonzero()
                         .getLong();
         addCorrectInstances(numCorrect);

File: api/src/main/java/ai/djl/training/evaluator/SingleShotDetectionAccuracy.java
Patch:
@@ -48,8 +48,8 @@ public void update(NDList labels, NDList predictions) {
         NDArray predictionReduced = classPredictions.argMax(-1);
         long numCorrect =
                 classLabels
-                        .asType(DataType.INT64, false)
-                        .eq(predictionReduced.asType(DataType.INT64, false))
+                        .toType(DataType.INT64, false)
+                        .eq(predictionReduced.toType(DataType.INT64, false))
                         .countNonzero()
                         .getLong();
         addCorrectInstances(numCorrect);

File: api/src/main/java/ai/djl/training/optimizer/Optimizer.java
Patch:
@@ -122,7 +122,7 @@ protected NDArray withDefaultState(
                             return map;
                         });
         return arrayMap.computeIfAbsent(
-                device, k -> ((NDArray) arrayMap.values().toArray()[0]).asInDevice(device, true));
+                device, k -> ((NDArray) arrayMap.values().toArray()[0]).toDevice(device, true));
     }
 
     /** The Builder to construct an {@link Optimizer}. */

File: api/src/test/java/ai/djl/test/mock/MockNDArray.java
Patch:
@@ -115,19 +115,19 @@ public boolean isSparse() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray asInDevice(Device device, boolean copy) {
+    public NDArray toDevice(Device device, boolean copy) {
         return this;
     }
 
     /** {@inheritDoc} */
     @Override
-    public NDArray asType(DataType dtype, boolean copy) {
+    public NDArray toType(DataType dataType, boolean copy) {
         return this;
     }
 
     /** {@inheritDoc} */
     @Override
-    public Matrix asMatrix() {
+    public Matrix toMatrix() {
         return null;
     }
 

File: basicdataset/src/main/java/ai/djl/basicdataset/Cifar10.java
Patch:
@@ -144,7 +144,7 @@ private NDArray readData(Artifact.Item item) throws IOException {
             try (NDArray array =
                     manager.create(new Shape(length, DATA_AND_LABEL_SIZE), DataType.UINT8)) {
                 array.set(buf);
-                return array.asType(DataType.FLOAT32, true);
+                return array.toType(DataType.FLOAT32, false);
             }
         }
     }

File: basicdataset/src/main/java/ai/djl/basicdataset/Mnist.java
Patch:
@@ -135,7 +135,7 @@ private NDArray readData(Artifact.Item item, long length) throws IOException {
             byte[] buf = Utils.toByteArray(is);
             try (NDArray array = manager.create(new Shape(length, 28, 28, 1), DataType.UINT8)) {
                 array.set(buf);
-                return array.asType(DataType.FLOAT32, true);
+                return array.toType(DataType.FLOAT32, false);
             }
         }
     }
@@ -149,7 +149,7 @@ private NDArray readLabel(Artifact.Item item) throws IOException {
             byte[] buf = Utils.toByteArray(is);
             try (NDArray array = manager.create(new Shape(buf.length), DataType.UINT8)) {
                 array.set(buf);
-                return array.asType(DataType.FLOAT32, true);
+                return array.toType(DataType.FLOAT32, false);
             }
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayCreationOpTest.java
Patch:
@@ -54,8 +54,8 @@ public void testCreation() {
             // test boolean
             array = manager.create(new boolean[] {true, false, true, false}, new Shape(2, 2));
             expected = manager.create(new int[] {1, 0, 1, 0}, new Shape(2, 2));
-            Assert.assertEquals(array.asType(DataType.INT32, false), expected);
-            Assert.assertEquals(array, expected.asType(DataType.BOOLEAN, false));
+            Assert.assertEquals(array.toType(DataType.INT32, false), expected);
+            Assert.assertEquals(array, expected.toType(DataType.BOOLEAN, false));
         }
     }
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayElementComparisonOpTest.java
Patch:
@@ -65,7 +65,7 @@ public void testEqualsForScalar() {
             Assert.assertEquals(result, expected, "Incorrect comparison for equal NDArray");
             array1 = manager.ones(new Shape(4, 5, 2));
             result = NDArrays.eq(array1, 1);
-            expected = manager.ones(new Shape(4, 5, 2)).asType(DataType.BOOLEAN, false);
+            expected = manager.ones(new Shape(4, 5, 2)).toType(DataType.BOOLEAN, false);
             Assert.assertEquals(result, expected);
 
             array1 = manager.create(new float[] {1f, 2f, 3f, 4f});
@@ -102,7 +102,7 @@ public void testEqualsForEqualNDArray() {
                             new float[] {1f, 2f, 3f, 4f, 5f, 6f, 7f, 8f, 9f, 10f}, new Shape(2, 5));
             array2 = manager.arange(10).add(1).reshape(2, 5);
             result = NDArrays.eq(array1, array2);
-            expected = manager.ones(new Shape(2, 5)).asType(DataType.BOOLEAN, false);
+            expected = manager.ones(new Shape(2, 5)).toType(DataType.BOOLEAN, false);
             Assert.assertEquals(result, expected);
             // test scalar
             array1 = manager.ones(new Shape(4)).mul(5);

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayLogicalOpTest.java
Patch:
@@ -135,7 +135,7 @@ public void testLogicalXor() {
             Assert.assertEquals(NDArrays.logicalXor(array1, array2), expected);
             array1 = manager.arange(10);
             array2 = manager.arange(10);
-            expected = manager.zeros(new Shape(10)).asType(DataType.BOOLEAN, false);
+            expected = manager.zeros(new Shape(10)).toType(DataType.BOOLEAN, false);
             Assert.assertEquals(array1.logicalXor(array2), expected);
             Assert.assertEquals(NDArrays.logicalXor(array1, array2), expected);
 
@@ -147,7 +147,7 @@ public void testLogicalXor() {
             Assert.assertEquals(NDArrays.logicalXor(array1, array2), expected);
             array1 = manager.arange(-5, 5).reshape(2, 1, 5);
             array2 = manager.arange(5, -5, -1).reshape(2, 1, 5);
-            expected = manager.zeros(new Shape(2, 1, 5)).asType(DataType.BOOLEAN, false);
+            expected = manager.zeros(new Shape(2, 1, 5)).toType(DataType.BOOLEAN, false);
             Assert.assertEquals(array1.logicalXor(array2), expected);
             Assert.assertEquals(NDArrays.logicalXor(array1, array2), expected);
             // scalar
@@ -180,7 +180,7 @@ public void testLogicalNot() {
             Assert.assertEquals(array.logicalNot(), expected);
             // test zero-dim
             array = manager.create(new Shape(0, 0, 1));
-            Assert.assertEquals(array.logicalNot(), array.asType(DataType.BOOLEAN, false));
+            Assert.assertEquals(array.logicalNot(), array.toType(DataType.BOOLEAN, false));
         }
     }
 }

File: integration/src/main/java/ai/djl/integration/tests/training/ParameterStoreTest.java
Patch:
@@ -62,8 +62,8 @@ public void testParameterStore() {
                     } else {
                         device = Device.cpu(j);
                     }
-                    weights[i][j] = w.asInDevice(device, true);
-                    grads[i][j] = g.asInDevice(device, true);
+                    weights[i][j] = w.toDevice(device, true);
+                    grads[i][j] = g.toDevice(device, true);
                 }
             }
 

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -672,7 +672,7 @@ public NDArray where(NDArray condition, NDArray other) {
         NDArray array2;
         condition =
                 (condition.getDataType() == DataType.BOOLEAN)
-                        ? condition.asType(DataType.INT32, false)
+                        ? condition.toType(DataType.INT32, false)
                         : condition;
         if (!array.shapeEquals(other)) {
             Shape res = deriveBroadcastedShape(array.getShape(), other.getShape());

File: tensorflow/engine/src/main/java/ai/djl/tensorflow/engine/TfNDArray.java
Patch:
@@ -138,19 +138,19 @@ public boolean isSparse() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray asInDevice(Device device, boolean copy) {
+    public NDArray toDevice(Device device, boolean copy) {
         return null;
     }
 
     /** {@inheritDoc} */
     @Override
-    public NDArray asType(DataType dtype, boolean copy) {
+    public NDArray toType(DataType dataType, boolean copy) {
         return null;
     }
 
     /** {@inheritDoc} */
     @Override
-    public Matrix asMatrix() {
+    public Matrix toMatrix() {
         return null;
     }
 

File: mxnet/jnarator/src/main/java/ai/djl/mxnet/jnarator/JnaGenerator.java
Patch:
@@ -107,7 +107,7 @@ public void writeStructure(Map<String, List<TypeDefine>> structMap) throws IOExc
                     writer.write("\n");
                 }
                 for (Map.Entry<String, String> field : fieldNames.entrySet()) {
-                    writer.append("    private ").append(field.getValue()).append(' ');
+                    writer.append("    public ").append(field.getValue()).append(' ');
                     writer.append(field.getKey()).append(";\n");
                 }
 

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/test/MockMxnetLibrary.java
Patch:
@@ -12,7 +12,6 @@
  */
 package ai.djl.mxnet.test;
 
-import ai.djl.mxnet.jna.LibFeature;
 import ai.djl.mxnet.jna.MXCallbackList;
 import ai.djl.mxnet.jna.MxnetLibrary;
 import ai.djl.mxnet.jna.NativeSize;
@@ -58,7 +57,7 @@ public int MXLoadLib(String path) {
 
     /** {@inheritDoc} */
     @Override
-    public int MXLibInfoFeatures(LibFeature.ByReference[] libFeature, NativeSizeByReference size) {
+    public int MXLibInfoFeatures(PointerByReference libFeature, NativeSizeByReference size) {
         if (functions.containsKey("MXLibInfoFeatures")) {
             return functions.get("MXLibInfoFeatures").apply(new Object[] {libFeature, size});
         }

File: examples/src/test/java/ai/djl/examples/TrainPikachuTest.java
Patch:
@@ -42,8 +42,7 @@ public void testDetection() throws IOException, MalformedModelException, Transla
         } else {
             // test train 1 epoch and predict workflow works on CPU
             args = new String[] {"-e", "1", "-m", "1", "-b", "32"};
-            // only check loss after 5 batches
-            expectedLoss = 2.5e-2f;
+            expectedLoss = 0.7f;
         }
         // test train
         TrainPikachu trainPikachu = new TrainPikachu();

File: api/src/test/java/ai/djl/inference/InferenceTest.java
Patch:
@@ -63,7 +63,7 @@ public void testObjectDection() throws IOException, TranslateException, ModelExc
             DetectedObjects result = ssd.predict(image);
 
             DetectedObjects.DetectedObject object = result.item(0);
-            Assert.assertEquals("cat", object.getClassName());
+            Assert.assertEquals(object.getClassName(), "cat");
             Assert.assertEquals(
                     Double.compare(object.getBoundingBox().getBounds().getHeight(), 1d), 0);
         }

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/ResnetTest.java
Patch:
@@ -84,7 +84,7 @@ public void testTrain() {
                 Assert.assertEquals(parameters.get(0).getValue().getArray(), expectedAtIndex0);
                 Assertions.assertAlmostEquals(
                         parameters.get(1).getValue().getArray(), expectedAtIndex1);
-                Assert.assertEquals(expectedAtIndex87, parameters.get(87).getValue().getArray());
+                Assert.assertEquals(parameters.get(87).getValue().getArray(), expectedAtIndex87);
             }
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/nn/SymbolBlockTest.java
Patch:
@@ -57,7 +57,7 @@ public void testForward() throws IOException, ModelNotFoundException, MalformedM
             NDArray arr = manager.ones(new Shape(1, 28, 28));
             Shape shape =
                     block.forward(parameterStore, new NDList(arr)).singletonOrThrow().getShape();
-            Assert.assertEquals(new Shape(1, 10), shape);
+            Assert.assertEquals(shape, new Shape(1, 10));
         }
     }
 

File: integration/src/main/java/ai/djl/integration/tests/training/DatasetTest.java
Patch:
@@ -71,7 +71,7 @@ record ->
                                         original.add(
                                                 record.getData().singletonOrThrow().getLong()));
                 List<Long> expected = LongStream.range(0, 100).boxed().collect(Collectors.toList());
-                Assert.assertEquals(expected, original, "SequentialSampler test failed");
+                Assert.assertEquals(original, expected, "SequentialSampler test failed");
             }
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/training/LossTest.java
Patch:
@@ -49,8 +49,8 @@ public void softmaxCrossEntropyTest() {
             NDArray pred = manager.create(new float[] {1, 2, 3, 4, 5});
             NDArray label = manager.ones(new Shape(1));
             Assertions.assertAlmostEquals(
-                    manager.create(3.45191431f),
-                    Loss.softmaxCrossEntropyLoss().getLoss(new NDList(label), new NDList(pred)));
+                    Loss.softmaxCrossEntropyLoss().getLoss(new NDList(label), new NDList(pred)),
+                    manager.create(3.45191431f));
         }
     }
 

File: integration/src/main/java/ai/djl/integration/tests/training/TrainingMetricsTest.java
Patch:
@@ -36,8 +36,8 @@ public void testAccuracy() {
             float accuracy = acc.getValue();
             float expectedAccuracy = 2.f / 3;
             Assert.assertEquals(
-                    expectedAccuracy,
                     accuracy,
+                    expectedAccuracy,
                     "Wrong accuracy, expected: " + expectedAccuracy + ", actual: " + accuracy);
         }
     }
@@ -57,8 +57,8 @@ public void testTopKAccuracy() {
             float expectedAccuracy = 1.f / 3;
             float accuracy = topKAccuracy.getValue();
             Assert.assertEquals(
-                    expectedAccuracy,
                     accuracy,
+                    expectedAccuracy,
                     "Wrong accuracy, expected: " + expectedAccuracy + ", actual: " + accuracy);
         }
     }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDManager.java
Patch:
@@ -38,7 +38,7 @@
 /** {@code MxNDManager} is the MXNet implementation of {@link NDManager}. */
 public class MxNDManager implements NDManager {
 
-    private static final Logger logger = LoggerFactory.getLogger(MxTrainer.class);
+    private static final Logger logger = LoggerFactory.getLogger(MxNDManager.class);
 
     /**
      * A global {@link NDManager} singleton instance.

File: basicdataset/src/test/java/ai/djl/basicdataset/CocoTest.java
Patch:
@@ -37,7 +37,8 @@ public void testCocoRemote() throws IOException {
                         .build();
         coco.prepare();
         try (Model model = Model.newInstance()) {
-            TrainingConfig config = new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss());
+            TrainingConfig config =
+                    new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
             model.setBlock(Blocks.identityBlock());
             try (Trainer trainer = model.newTrainer(config)) {
                 for (Batch batch : trainer.iterateDataset(coco)) {

File: basicdataset/src/test/java/ai/djl/basicdataset/ImageFolderTest.java
Patch:
@@ -42,7 +42,8 @@ public class ImageFolderTest {
     public void testImageFolder() throws IOException {
         Repository repository = Repository.newInstance("test", "src/test/resources/imagefolder");
         TrainingConfig config =
-                new DefaultTrainingConfig(Initializer.ONES, Loss.softmaxCrossEntropyLoss());
+                new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
+                        .optInitializer(Initializer.ONES);
 
         try (Model model = Model.newInstance()) {
             model.setBlock(Blocks.identityBlock());

File: basicdataset/src/test/java/ai/djl/basicdataset/ImageNetTest.java
Patch:
@@ -43,7 +43,8 @@ public void testImageNetLocal() throws IOException {
 
         try (Model model = Model.newInstance()) {
             TrainingConfig config =
-                    new DefaultTrainingConfig(Initializer.ONES, Loss.softmaxCrossEntropyLoss());
+                    new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
+                            .optInitializer(Initializer.ONES);
             try (Trainer trainer = model.newTrainer(config)) {
                 for (Batch batch : trainer.iterateDataset(imagenet)) {
                     Assert.assertEquals(batch.getData().size(), 1);

File: basicdataset/src/test/java/ai/djl/basicdataset/PikachuTest.java
Patch:
@@ -39,8 +39,8 @@ public void testPikachuRemote() throws IOException {
                                 .setSampling(1, true));
         pikachu.prepare();
         TrainingConfig config =
-                new DefaultTrainingConfig(
-                        new NormalInitializer(0.01), Loss.softmaxCrossEntropyLoss());
+                new DefaultTrainingConfig(Loss.softmaxCrossEntropyLoss())
+                        .optInitializer(new NormalInitializer(0.01));
         try (Model model = Model.newInstance()) {
             model.setBlock(Blocks.identityBlock());
             try (Trainer trainer = model.newTrainer(config)) {

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -26,7 +26,6 @@
 import ai.djl.training.Trainer;
 import ai.djl.training.TrainingConfig;
 import ai.djl.training.dataset.Dataset;
-import ai.djl.training.initializer.XavierInitializer;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.metrics.Accuracy;
 import ai.djl.training.util.ProgressBar;
@@ -89,7 +88,7 @@ protected void train(Arguments arguments) throws IOException {
     private TrainingConfig setupTrainingConfig(Arguments arguments) {
         int batchSize = arguments.getBatchSize();
         loss = Loss.softmaxCrossEntropyLoss();
-        return new DefaultTrainingConfig(new XavierInitializer(), loss)
+        return new DefaultTrainingConfig(loss)
                 .addTrainingMetric(new Accuracy())
                 .setBatchSize(batchSize)
                 .optDevices(Device.getDevices(arguments.getMaxGpus()));

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -219,7 +219,8 @@ private TrainingConfig setupTrainingConfig(Arguments arguments) {
                 new XavierInitializer(
                         XavierInitializer.RandomType.UNIFORM, XavierInitializer.FactorType.AVG, 2);
         loss = new SingleShotDetectionLoss("ssd_loss");
-        return new DefaultTrainingConfig(initializer, loss)
+        return new DefaultTrainingConfig(loss)
+                .optInitializer(initializer)
                 .setBatchSize(batchSize)
                 .addTrainingMetric(new SingleShotDetectionAccuracy("classAccuracy"))
                 .addTrainingMetric(new BoundingBoxError("boundingBoxError"))

File: examples/src/main/java/ai/djl/examples/training/TrainWithOptimizers.java
Patch:
@@ -157,14 +157,16 @@ private TrainingConfig setupTrainingConfig(Arguments arguments) {
                 new XavierInitializer(
                         XavierInitializer.RandomType.UNIFORM, XavierInitializer.FactorType.AVG, 2);
         loss = Loss.softmaxCrossEntropyLoss();
-        return new DefaultTrainingConfig(initializer, loss)
+        return new DefaultTrainingConfig(loss)
+                .optInitializer(initializer)
                 .addTrainingMetric(new Accuracy())
                 .optOptimizer(setupOptimizer(arguments))
                 .setBatchSize(batchSize)
                 .optDevices(Device.getDevices(arguments.getMaxGpus()));
     }
 
     private Optimizer setupOptimizer(Arguments arguments) {
+        // TODO: Accept optimizerName as an argument
         String optimizerName = "adam";
         switch (optimizerName) {
             case "sgd":

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -152,7 +152,8 @@ private TrainingConfig setupTrainingConfig(Arguments arguments) {
                 new XavierInitializer(
                         XavierInitializer.RandomType.UNIFORM, XavierInitializer.FactorType.AVG, 2);
         loss = Loss.softmaxCrossEntropyLoss();
-        return new DefaultTrainingConfig(initializer, loss)
+        return new DefaultTrainingConfig(loss)
+                .optInitializer(initializer)
                 .addTrainingMetric(new Accuracy())
                 .setBatchSize(batchSize)
                 .optDevices(Device.getDevices(arguments.getMaxGpus()));

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/object_detection/SingleShotDetectionTest.java
Patch:
@@ -124,7 +124,8 @@ private TrainingConfig setupTrainingConfig() {
         Initializer initializer =
                 new XavierInitializer(
                         XavierInitializer.RandomType.UNIFORM, XavierInitializer.FactorType.AVG, 2);
-        return new DefaultTrainingConfig(initializer, new SingleShotDetectionLoss("ssd_loss"))
+        return new DefaultTrainingConfig(new SingleShotDetectionLoss("ssd_loss"))
+                .optInitializer(initializer)
                 .setBatchSize(32)
                 .addTrainingMetric(new SingleShotDetectionAccuracy("classAccuracy"))
                 .addTrainingMetric(new BoundingBoxError("boundingBoxError"))

File: integration/src/main/java/ai/djl/integration/tests/training/ActivationTest.java
Patch:
@@ -29,7 +29,8 @@
 
 public class ActivationTest {
 
-    private TrainingConfig config = new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss());
+    TrainingConfig config =
+            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
 
     @Test
     public void testRelu() {

File: integration/src/main/java/ai/djl/integration/tests/training/BlocksTest.java
Patch:
@@ -29,7 +29,8 @@
 
 public class BlocksTest {
 
-    private TrainingConfig config = new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss());
+    TrainingConfig config =
+            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
 
     @Test
     public void testFlattenBlock() {

File: integration/src/main/java/ai/djl/integration/tests/training/DatasetTest.java
Patch:
@@ -44,7 +44,8 @@
 
 public class DatasetTest {
 
-    private TrainingConfig config = new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss());
+    private TrainingConfig config =
+            new DefaultTrainingConfig(Loss.l2Loss()).optInitializer(Initializer.ONES);
 
     @Test
     public void testSequenceSampler() {

File: integration/src/main/java/ai/djl/integration/tests/training/GradientCollectorIntegrationTest.java
Patch:
@@ -71,7 +71,9 @@ public void testTrain() {
                         .build();
 
         TrainingConfig config =
-                new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss()).optOptimizer(optimizer);
+                new DefaultTrainingConfig(Loss.l2Loss())
+                        .optInitializer(Initializer.ONES)
+                        .optOptimizer(optimizer);
 
         try (Model model = Model.newInstance()) {
             Linear block = new Linear.Builder().setOutChannels(1).build();

File: integration/src/main/java/ai/djl/integration/tests/training/GradientCollectorIntegrationTest.java
Patch:
@@ -67,12 +67,11 @@ public void testTrain() {
 
         Optimizer optimizer =
                 new Sgd.Builder()
-                        .setRescaleGrad(1.0f / batchSize)
                         .setLearningRateTracker(LearningRateTracker.fixedLearningRate(.03f))
                         .build();
 
         TrainingConfig config =
-                new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss()).setOptimizer(optimizer);
+                new DefaultTrainingConfig(Initializer.ONES, Loss.l2Loss()).optOptimizer(optimizer);
 
         try (Model model = Model.newInstance()) {
             Linear block = new Linear.Builder().setOutChannels(1).build();

File: integration/src/main/java/ai/djl/integration/tests/training/ParameterStoreTest.java
Patch:
@@ -70,7 +70,6 @@ public void testParameterStore() {
 
             TestOptimizer optimizer =
                     new TestOptimizer.Builder()
-                            .setRescaleGrad(1.0f)
                             .setLearningRateTracker(LearningRateTracker.fixedLearningRate(lr))
                             .build();
 

File: basicdataset/src/test/java/ai/djl/basicdataset/Cifar10Test.java
Patch:
@@ -35,14 +35,15 @@ public void testCifar10Local() throws IOException {
 
         try (Model model = Model.newInstance()) {
             model.setBlock(Blocks.identityBlock());
+            int batchSize = config.getDevices().length * 32;
 
             Repository repository = Repository.newInstance("test", "src/test/resources/mlrepo");
             Cifar10 cifar10 =
                     new Cifar10.Builder()
                             .setManager(model.getNDManager())
                             .optUsage(Usage.TEST)
                             .optRepository(repository)
-                            .setSampling(32, true)
+                            .setSampling(batchSize, true)
                             .build();
 
             cifar10.prepare();

File: examples/src/main/java/ai/djl/examples/inference/util/AbstractBenchmark.java
Patch:
@@ -109,6 +109,9 @@ public final boolean runBenchmark(String[] args) {
                         getClass().getSimpleName(),
                         Device.defaultDevice(),
                         duration.toMinutes());
+            } else {
+                logger.info(
+                        "Running {} on: {}.", getClass().getSimpleName(), Device.defaultDevice());
             }
             int iteration = arguments.getIteration();
 

File: integration/src/main/java/ai/djl/integration/tests/training/GradientCollectorIntegrationTest.java
Patch:
@@ -90,15 +90,16 @@ public void testTrain() {
                     manager.randomNormal(
                             0, 0.01, label.getShape(), DataType.FLOAT32, manager.getDevice()));
 
+            int sampling = config.getDevices().length * batchSize;
             ArrayDataset dataset =
                     new ArrayDataset.Builder()
                             .setData(data)
                             .optLabels(label)
-                            .setSampling(batchSize, false)
+                            .setSampling(sampling, false)
                             .build();
             float lossValue;
             try (Trainer trainer = model.newTrainer(config)) {
-                Shape inputShape = new Shape(batchSize, weight.size(0));
+                Shape inputShape = new Shape(sampling, weight.size(0));
                 trainer.initialize(inputShape);
 
                 for (int epoch = 0; epoch < epochs; epoch++) {

File: basicdataset/src/test/java/ai/djl/basicdataset/DatasetUtilsTest.java
Patch:
@@ -83,7 +83,7 @@ public void testSplitUnevenData() {
     }
 
     @Test
-    public void testSplitSmailerBatchSize() {
+    public void testSplitSmallerBatchSize() {
         try (NDManager manager = NDManager.newBaseManager()) {
             Device[] devices = new Device[] {Device.cpu(0), Device.cpu(1), Device.cpu(2)};
 

File: integration/src/test/java/ai/djl/CoverageTest.java
Patch:
@@ -19,12 +19,13 @@
 import ai.djl.test.CoverageUtils;
 import ai.djl.zoo.cv.classification.ResNetV1;
 import java.io.IOException;
+import java.net.URISyntaxException;
 import org.testng.annotations.Test;
 
 public class CoverageTest {
 
     @Test
-    public void test() throws IOException, ClassNotFoundException {
+    public void test() throws IOException, ClassNotFoundException, URISyntaxException {
         // API
         CoverageUtils.testGetterSetters(Device.class);
 

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/MxModelZooTest.java
Patch:
@@ -181,7 +181,7 @@ public void downloadSsdModels() throws IOException, ModelException {
         criteria.put("size", "512");
         criteria.put("backbone", "vgg16");
         criteria.put("flavor", "atrous");
-        criteria.put("dataset", "voc");
+        criteria.put("dataset", "coco");
         model = MxModelZoo.SSD.loadModel(criteria);
         model.close();
     }

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/MxModelZooTest.java
Patch:
@@ -171,8 +171,8 @@ public void downloadSsdModels() throws IOException, ModelException {
 
         Map<String, String> criteria = new ConcurrentHashMap<>();
         criteria.put("size", "512");
-        criteria.put("backbone", "resnet50_v1");
-        criteria.put("flavor", "none");
+        criteria.put("backbone", "resnet50");
+        criteria.put("flavor", "v1");
         criteria.put("dataset", "voc");
         Model model = MxModelZoo.SSD.loadModel(criteria);
         model.close();

File: api/src/main/java/ai/djl/ndarray/NDArrays.java
Patch:
@@ -72,7 +72,7 @@ public static boolean contenEquals(NDArray a, Number n) {
      * @param b the {@link NDArray} to compare
      * @return the boolean result
      */
-    public static boolean contenEquals(NDArray a, NDArray b) {
+    public static boolean contentEquals(NDArray a, NDArray b) {
         return a.contentEquals(b);
     }
 

File: examples/src/test/java/ai/djl/examples/TrainPikachuTest.java
Patch:
@@ -26,7 +26,7 @@ public class TrainPikachuTest {
     @Test
     public void testDetection() throws IOException, MalformedModelException, TranslateException {
         // this is nightly test
-        if (Boolean.getBoolean("nightly")) {
+        if (!Boolean.getBoolean("nightly")) {
             return;
         }
         String[] args;

File: examples/src/test/java/ai/djl/examples/TrainResNetTest.java
Patch:
@@ -33,7 +33,7 @@ public void testTrainResNet() {
     @Test
     public void testTrainResNetSymbolicNightly() {
         // this is nightly test
-        if (Boolean.getBoolean("nightly")) {
+        if (!Boolean.getBoolean("nightly")) {
             return;
         }
         if (Engine.getInstance().getGpuCount() > 0) {
@@ -51,7 +51,7 @@ public void testTrainResNetSymbolicNightly() {
     @Test
     public void testTrainResNetImperativeNightly() {
         // this is nightly test
-        if (Boolean.getBoolean("nightly")) {
+        if (!Boolean.getBoolean("nightly")) {
             return;
         }
         if (Engine.getInstance().getGpuCount() > 0) {

File: examples/src/main/java/ai/djl/examples/training/util/AbstractTraining.java
Patch:
@@ -66,6 +66,7 @@ public boolean runExample(String[] args) {
             CommandLine cmd = parser.parse(options, args, null, false);
             Arguments arguments = new Arguments(cmd);
             int maxGpus = arguments.getMaxGpus();
+            batchSize = arguments.getBatchSize();
             String devices;
             if (maxGpus > 0) {
                 devices = maxGpus + " GPUs";

File: api/src/main/java/ai/djl/util/Utils.java
Patch:
@@ -34,8 +34,6 @@
 /** A class containing utility methods. */
 public final class Utils {
 
-    public static final boolean DEBUG = true;
-
     private Utils() {}
 
     /**

File: api/src/main/java/ai/djl/training/metrics/Accuracy.java
Patch:
@@ -84,7 +84,8 @@ public void update(NDArray labels, NDArray predictions) {
         long numCorrect =
                 labels.asType(DataType.INT64, false)
                         .eq(predictionReduced.asType(DataType.INT64, false))
-                        .countNonzero();
+                        .countNonzero()
+                        .getLong();
         addCorrectInstances(numCorrect);
         addTotalInstances(labels.size());
     }

File: api/src/main/java/ai/djl/training/metrics/SingleShotDetectionAccuracy.java
Patch:
@@ -50,7 +50,8 @@ public void update(NDList labels, NDList predictions) {
                 classLabels
                         .asType(DataType.INT64, false)
                         .eq(predictionReduced.asType(DataType.INT64, false))
-                        .countNonzero();
+                        .countNonzero()
+                        .getLong();
         addCorrectInstances(numCorrect);
         addTotalInstances(classLabels.size());
     }

File: integration/src/main/java/ai/djl/integration/tests/nn/BlockCoreTest.java
Patch:
@@ -186,7 +186,7 @@ public void testDropout() throws IOException, MalformedModelException {
                 NDManager manager = trainer.getManager();
                 NDArray data = manager.create(new float[] {1, 2, 3, 4}, inputShape);
                 NDArray result = trainer.forward(new NDList(data)).singletonOrThrow();
-                Assert.assertTrue(result.lte(result).all());
+                Assert.assertTrue(result.lte(result).all().getBoolean());
 
                 testEncode(manager, block);
             }

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -494,7 +494,7 @@ public boolean contentEquals(Number number) {
             return false;
         }
         try (NDArray result = eq(number)) {
-            return result.all();
+            return result.all().getBoolean();
         }
     }
 
@@ -508,7 +508,7 @@ public boolean contentEquals(NDArray other) {
             return false;
         }
         try (NDArray result = eq(other).asType(DataType.INT32, false)) {
-            return result.all();
+            return result.all().getBoolean();
         }
     }
 

File: api/src/main/java/ai/djl/Model.java
Patch:
@@ -167,7 +167,7 @@ void load(Path modelPath, String modelName, Map<String, String> options)
     void setProperty(String key, String value);
 
     /**
-     * Gets the NDArray Manager from the model.
+     * Gets the {@link NDManager} from the model.
      *
      * @return the {@link NDManager}
      */

File: api/src/main/java/ai/djl/engine/Engine.java
Patch:
@@ -107,7 +107,7 @@ public static Engine getEngine(String engineName) {
      * @param device the GPU {@link Device} to retrieve
      * @return the {@link MemoryUsage} of the specified GPU device
      * @throws EngineException if operation is not supported
-     * @throws IllegalArgumentException if Device is not GPU device
+     * @throws IllegalArgumentException if {@link Device} is not GPU device
      */
     public abstract MemoryUsage getGpuMemory(Device device);
 

File: api/src/main/java/ai/djl/modality/cv/transform/Normalize.java
Patch:
@@ -16,7 +16,7 @@
 import ai.djl.ndarray.NDArray;
 import ai.djl.translate.Transform;
 
-/** A {@link Transform} that normalizes an image NDArray of shape CHW or NCHW. */
+/** A {@link Transform} that normalizes an image {@link NDArray} of shape CHW or NCHW. */
 public class Normalize implements Transform {
     private float[] mean;
     private float[] std;

File: api/src/main/java/ai/djl/modality/cv/transform/ToTensor.java
Patch:
@@ -17,8 +17,8 @@
 import ai.djl.translate.Transform;
 
 /**
- * A {@link Transform} that converts an image NDArray from preprocessing format to Neural Network
- * format.
+ * A {@link Transform} that converts an image {@link NDArray} from preprocessing format to Neural
+ * Network format.
  *
  * @see NDImageUtils#toTensor(NDArray)
  */

File: api/src/main/java/ai/djl/training/initializer/Initializer.java
Patch:
@@ -31,10 +31,10 @@ public interface Initializer {
     /**
      * Initializes a single {@link NDArray}.
      *
-     * @param manager the {@link NDManager} to create the new NDArray in
+     * @param manager the {@link NDManager} to create the new {@link NDArray} in
      * @param shape the {@link Shape} for the new NDArray
      * @param dataType the {@link DataType} for the new NDArray
-     * @return the NDArray initialized with the manager and shape
+     * @return the {@link NDArray} initialized with the manager and shape
      */
     NDArray initialize(NDManager manager, Shape shape, DataType dataType);
 }

File: api/src/main/java/ai/djl/training/metrics/TopKAccuracy.java
Patch:
@@ -31,7 +31,7 @@ public class TopKAccuracy extends Accuracy {
      * Creates a {@code TopKAccuracy} instance.
      *
      * @param name the accuracy name, default "Top_K_Accuracy"
-     * @param index the index of the NDArray in labels to compute topK accuracy for
+     * @param index the index of the {@link NDArray} in labels to compute topK accuracy for
      * @param topK the value of K
      */
     public TopKAccuracy(String name, int index, int topK) {
@@ -47,7 +47,7 @@ public TopKAccuracy(String name, int index, int topK) {
      * Creates an instance of {@code TopKAccuracy} metric that computes topK accuracy across axis 1
      * along the given index.
      *
-     * @param index the index of the NDArray in labels to compute topK accuracy for
+     * @param index the index of the {@link NDArray} in labels to compute topK accuracy for
      * @param topK the value of K
      */
     public TopKAccuracy(int index, int topK) {

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -31,7 +31,7 @@ class MxNDArrayEx implements NDArrayEx {
     /**
      * Constructs an {@code MxNDArrayEx} given an NDArray.
      *
-     * @param parent the NDArray to extend
+     * @param parent the {@link NDArray} to extend
      */
     MxNDArrayEx(MxNDArray parent) {
         this.array = parent;

File: api/src/main/java/ai/djl/ndarray/internal/NDArrayEx.java
Patch:
@@ -22,6 +22,7 @@
 import java.util.List;
 
 /** An internal interface that encapsulates engine specific operator methods. */
+@SuppressWarnings("MissingJavadocMethod")
 public interface NDArrayEx {
 
     ////////////////////////////////////////

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/jna/JnaUtils.java
Patch:
@@ -47,6 +47,7 @@
 /**
  * A class containing utilities to interact with the MXNet Engine's Java Native Access (JNA) layer.
  */
+@SuppressWarnings("MissingJavadocMethod")
 public final class JnaUtils {
 
     public static final String[] EMPTY_ARRAY = new String[0];

File: mxnet/mxnet-engine/src/test/java/ai/djl/mxnet/engine/MxNDArrayTest.java
Patch:
@@ -12,7 +12,6 @@
  */
 
 package ai.djl.mxnet.engine;
-// CHECKSTYLE:OFF:AvoidStaticImport
 
 import static org.powermock.api.mockito.PowerMockito.mockStatic;
 
@@ -36,8 +35,6 @@
 import org.testng.annotations.ObjectFactory;
 import org.testng.annotations.Test;
 
-// CHECKSTYLE:ON:AvoidStaticImport
-
 @PrepareForTest(LibUtils.class)
 public class MxNDArrayTest extends PowerMockTestCase {
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayShapesManipulationOpTest.java
Patch:
@@ -95,6 +95,7 @@ public void testExpandDim() {
             NDArray array = manager.create(new float[] {1f, 2f});
             NDArray actual = manager.create(new float[] {1f, 2f}, new Shape(1, 2));
             Assert.assertEquals(actual, array.expandDims(0));
+
             // multi-dim
             array = manager.create(new float[] {1f, 2f, 3f, 4f}, new Shape(2, 2));
             actual = manager.create(new float[] {1f, 2f, 3f, 4f}, new Shape(2, 1, 2));

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1127,6 +1127,9 @@ public NDArray reshape(Shape shape) {
     /** {@inheritDoc} */
     @Override
     public NDArray expandDims(int axis) {
+        if (isScalar()) {
+            return reshape(1);
+        }
         MxOpParams params = new MxOpParams();
         params.addParam("axis", axis);
         return manager.invoke("_npi_expand_dims", this, params);

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -728,7 +728,7 @@ public NDArray concat(NDList list, int axis) {
         }
         MxOpParams params = new MxOpParams();
         // MXNet backend use dim as argument name
-        params.addParam("dim", axis);
+        params.addParam("axis", axis);
         NDArray[] srcArray = new NDArray[arrays.length + 1];
         srcArray[0] = array;
         System.arraycopy(arrays, 0, srcArray, 1, arrays.length);

File: examples/src/main/java/ai/djl/examples/training/TrainPikachu.java
Patch:
@@ -109,7 +109,7 @@ protected void train(Arguments arguments) throws IOException {
     public int predict(String outputDir, String imageFile)
             throws IOException, MalformedModelException, TranslateException {
         try (Model model = Model.newInstance()) {
-            float detectionThreshold = 0.75f;
+            float detectionThreshold = 0.6f;
             // load parameters back to original training block
             model.setBlock(getSsdTrainBlock());
             model.load(Paths.get(outputDir), "ssd");

File: integration/src/main/java/ai/djl/integration/tests/modality/cv/MultiBoxDetectionTest.java
Patch:
@@ -55,7 +55,9 @@ public void testDetections() {
                                             offsetPreds.expandDims(0),
                                             anchors.expandDims(0)))
                             .head();
-            Assertions.assertAlmostEquals(actual, expected);
+            // orders of detection results is not the same on CPU and GPU
+            // but does not affect detection correctness
+            Assertions.assertAlmostEquals(actual.sort(1), expected.sort(1));
         }
     }
 }

File: basicdataset/src/test/java/ai/djl/basicdataset/ImageFolderTest.java
Patch:
@@ -68,11 +68,11 @@ public void testImageFolder() throws IOException {
                     NDArray cat =
                             BufferedImageUtils.readFileToArray(
                                     manager,
-                                    Paths.get("src/test/resources/imagefolder/cat/cat2.jpeg"));
+                                    Paths.get("src/test/resources/imagefolder/cat/kitten.jpg"));
                     NDArray dog =
                             BufferedImageUtils.readFileToArray(
                                     manager,
-                                    Paths.get("src/test/resources/imagefolder/dog/puppy1.jpg"));
+                                    Paths.get("src/test/resources/imagefolder/dog/3dogs.jpg"));
 
                     NDArray pikachu =
                             BufferedImageUtils.readFileToArray(

File: basicdataset/src/test/java/ai/djl/basicdataset/ImageNetTest.java
Patch:
@@ -23,11 +23,12 @@
 import ai.djl.training.loss.Loss;
 import java.io.IOException;
 import org.testng.Assert;
+import org.testng.annotations.Test;
 
 public class ImageNetTest {
 
     // ImageNet requires running manual download so can't be automatically tested
-    // @Test
+    @Test(enabled = false)
     public void testImageNetLocal() throws IOException {
         Repository repository =
                 Repository.newInstance(

File: examples/src/main/java/ai/djl/examples/inference/util/AbstractBenchmark.java
Patch:
@@ -176,6 +176,7 @@ public final boolean runBenchmark(String[] args) {
             }
 
             MemoryUtils.dumpMemoryInfo(metrics, arguments.getOutputDir());
+            return true;
         } catch (ParseException e) {
             HelpFormatter formatter = new HelpFormatter();
             formatter.setLeftPadding(1);

File: api/src/main/java/ai/djl/modality/cv/util/BufferedImageUtils.java
Patch:
@@ -33,7 +33,7 @@ public final class BufferedImageUtils {
 
     static {
         if (System.getProperty("apple.awt.UIElement") == null) {
-            // disable annoying coffee cup show up on macos
+            // disables coffee cup image showing up on Mac OS
             System.setProperty("apple.awt.UIElement", "true");
         }
     }

File: api/src/main/java/ai/djl/nn/Activation.java
Patch:
@@ -84,7 +84,7 @@ public static NDArray tanh(NDArray array) {
     }
 
     /**
-     * Applies tanh activation on the input singleton {@link NDList}.
+     * Applies Tanh activation on the input singleton {@link NDList}.
      *
      * <p>Tanh is defined by: \( y = (e^x - e^{-x}) / (e^x + e^{-x}) \)
      *

File: api/src/main/java/ai/djl/nn/Block.java
Patch:
@@ -139,7 +139,7 @@ default NDList forward(ParameterStore parameterStore, NDList inputs) {
      *
      * @param manager the NDManager to initialize the parameters
      * @param dataType the datatype of the parameters
-     * @param inputShapes theshapes of the inputs to the block
+     * @param inputShapes the shapes of the inputs to the block
      * @return the shapes of the outputs of the block
      */
     Shape[] initialize(NDManager manager, DataType dataType, Shape... inputShapes);

File: api/src/main/java/ai/djl/nn/Parameter.java
Patch:
@@ -146,9 +146,9 @@ public void setMandatoryDataType(DataType mandatoryDataType) {
     }
 
     /**
-     * Checks if this {@code Parameter} is initialzed.
+     * Checks if this {@code Parameter} is initialized.
      *
-     * @return true if this {@code Parameter} is initialzed
+     * @return true if this {@code Parameter} is initialized
      */
     public boolean isInitialized() {
         return array != null;

File: api/src/main/java/ai/djl/nn/ParameterBlock.java
Patch:
@@ -45,7 +45,7 @@ public final BlockList getChildren() {
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        // FIXME: This is a quick hack for display in jupytor notebook.
+        // FIXME: This is a quick hack for display in jupyter notebook.
         StringBuilder sb = new StringBuilder(200);
         String className = getClass().getSimpleName();
         if (className.endsWith("Block")) {

File: api/src/main/java/ai/djl/nn/norm/Dropout.java
Patch:
@@ -32,7 +32,7 @@
  * <p>During training, each element of the input is set to zero with probability p. The whole array
  * is rescaled by 1/(1−p) to keep the expected sum of the input unchanged. During testing, this
  * operator does not change the input if mode is ‘training’. If mode is ‘always’, the same
- * computaion as during training will be applied.
+ * computation as during training will be applied.
  */
 public class Dropout extends ParameterBlock {
 

File: api/src/main/java/ai/djl/nn/recurrent/RNN.java
Patch:
@@ -42,7 +42,7 @@
  * <p>With ReLU activation function: \(h_t = relu(W_{ih} * x_t + b_{ih} + W_{hh} * h_{(t-1)} +
  * b_{hh})\)
  *
- * <p>With Tanh activtion function: \(h_t = \tanh(W_{ih} * x_t + b_{ih} + W_{hh} * h_{(t-1)} +
+ * <p>With Tanh activation function: \(h_t = \tanh(W_{ih} * x_t + b_{ih} + W_{hh} * h_{(t-1)} +
  * b_{hh})\)
  */
 public class RNN extends RecurrentCell {

File: api/src/main/java/ai/djl/training/TrainingConfig.java
Patch:
@@ -33,7 +33,7 @@ public interface TrainingConfig {
     /**
      * Gets the {@link Device} that are available for computation.
      *
-     * <p>This is necesary for a {@link Trainer} as it needs to know what kind of device it is
+     * <p>This is necessary for a {@link Trainer} as it needs to know what kind of device it is
      * running on, and how many devices it is running on.
      *
      * @return an array of {@link Device}

File: api/src/main/java/ai/djl/training/TrainingListener.java
Patch:
@@ -14,7 +14,7 @@
 
 /**
  * {@code TrainingListener} offers an interface that allows performing some actions when certain
- * events have occured in the {@link Trainer}.
+ * events have occurred in the {@link Trainer}.
  *
  * <p>The methods {@link #onEpoch() onEpoch}, {@link #onTrainingBatch() onTrainingBatch}, {@link
  * #onValidationBatch() onValidationBatch} are called during training. Adding an implementation of

File: api/src/main/java/ai/djl/translate/Batchifier.java
Patch:
@@ -47,7 +47,7 @@ public interface Batchifier {
     /**
      * Splits the given {@link NDList} into the given number of slices.
      *
-     * <p>This function un-batchifies the input {@link NDList}, redistributes them into the given
+     * <p>This function unbatchifies the input {@link NDList}, redistributes them into the given
      * number of slices, and then batchify each of the slices to form an array of {@link NDList}.
      *
      * @param list the {@link NDList} that needs to be split

File: api/src/main/java/ai/djl/translate/Pipeline.java
Patch:
@@ -139,7 +139,7 @@ public Pipeline insert(int position, String name, Transform transform) {
     /**
      * Applies the transforms configured in this object on the input {@link NDList}.
      *
-     * <p>If a key is specified with the transform, those tranforms will only be applied to the
+     * <p>If a key is specified with the transform, those transforms will only be applied to the
      * {@link NDArray} in the input {@link NDList}. If a key is not specified, it will be applied to
      * the first element in the input {@link NDList}.
      *

File: tensorflow/engine/src/main/java/ai/djl/tensorflow/engine/TfPredictor.java
Patch:
@@ -38,7 +38,7 @@ protected NDList forward(NDList ndList) {
         for (NDArray array : ndList) {
             runner.feed(array.getName(), ((TfNDArray) array).getTensor());
         }
-        // TODO We can extract input name from decribeInput in Model if NDList doesn't have names
+        // TODO We can extract input name from describeInput in Model if NDList doesn't have names
         PairList<String, Shape> dataDescs = model.describeOutput();
         for (Pair<String, Shape> pair : dataDescs) {
             runner.fetch(pair.getKey());

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -76,7 +76,8 @@ protected void train(Arguments arguments) throws IOException {
                         arguments.getEpoch(),
                         trainingSet,
                         validateSet,
-                        arguments.getOutputDir());
+                        arguments.getOutputDir(),
+                        "mlp");
             }
 
             // save model

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -87,7 +87,8 @@ protected void train(Arguments arguments) throws IOException, ModelNotFoundExcep
                         arguments.getEpoch(),
                         trainDataset,
                         validationDataset,
-                        arguments.getOutputDir());
+                        arguments.getOutputDir(),
+                        "resnetv1");
             }
 
             // save model

File: examples/src/main/java/ai/djl/examples/training/util/TrainingUtils.java
Patch:
@@ -39,7 +39,8 @@ public static void fit(
             int numEpoch,
             Dataset trainingDataset,
             Dataset validateDataset,
-            String outputDir)
+            String outputDir,
+            String modelName)
             throws IOException {
         for (int epoch = 0; epoch < numEpoch; epoch++) {
             for (Batch batch : trainer.iterateDataset(trainingDataset)) {
@@ -60,7 +61,7 @@ public static void fit(
             if (outputDir != null) {
                 Model model = trainer.getModel();
                 model.setProperty("Epoch", String.valueOf(epoch));
-                model.save(Paths.get(outputDir), "resnetv1");
+                model.save(Paths.get(outputDir), modelName);
             }
         }
     }

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -65,8 +65,9 @@ public Translator<BufferedImage, DetectedObjects> getTranslator(Artifact artifac
 
         return new SingleShotDetectionTranslator.Builder()
                 .setPipeline(pipeline)
-                .optThreshold((float) threshold)
                 .setSynsetArtifactName("classes.txt")
+                .optThreshold((float) threshold)
+                .optRescaleSize(width, height)
                 .build();
     }
 }

File: api/src/main/java/ai/djl/training/metrics/TopKAccuracy.java
Patch:
@@ -83,7 +83,7 @@ public void update(NDArray labels, NDArray predictions) {
             IntStream.range(0, topK)
                     .forEach(
                             j -> {
-                                // get from last index as argsort is ascending
+                                // get from last index as argSort is ascending
                                 NDArray jPrediction =
                                         topKPrediction.get(":, " + (numClasses - j - 1));
                                 // TODO replace nonzero with sum

File: mxnet/mxnet-engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1489,7 +1489,7 @@ public NDArray argMax(int axis) {
     public NDArray argMin() {
         // TODO switch to MXNet numpy argmin
         if (isEmpty()) {
-            throw new IllegalArgumentException("attempt to get argmin of an empty NDArray");
+            throw new IllegalArgumentException("attempt to get argMin of an empty NDArray");
         }
         NDArray array = (isScalar()) ? reshape(1) : this;
         try (NDArray temp = manager.invoke("argmin", array, null)) {

File: repository/src/main/java/ai/djl/repository/AbstractRepository.java
Patch:
@@ -172,9 +172,7 @@ private void download(Path tmp, URI baseUri, Artifact.Item item, Progress progre
                     zis.getNextEntry();
                     Files.copy(zis, file);
                 } else if ("gzip".equals(extension)) {
-                    try (GZIPInputStream zis = new GZIPInputStream(pis)) {
-                        Files.copy(zis, file);
-                    }
+                    Files.copy(new GZIPInputStream(pis), file);
                 } else if (extension.isEmpty()) {
                     Files.copy(pis, file);
                 } else {

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/segmentation/InstanceSegmentationTranslator.java
Patch:
@@ -59,7 +59,7 @@ public NDArray transform(NDArray array) {
     @Override
     public NDList processInput(TranslatorContext ctx, BufferedImage image) {
         Pipeline pipeline = getPipeline();
-        pipeline.add(0, null, this);
+        pipeline.insert(0, null, this);
         return super.processInput(ctx, image);
     }
 

File: api/src/main/java/ai/djl/nn/ParameterType.java
Patch:
@@ -24,7 +24,7 @@ public enum ParameterType {
     RUNNING_VAR(Initializer.ONES),
     OTHER(null);
 
-    private final Initializer initializer;
+    private final transient Initializer initializer;
 
     ParameterType(Initializer initializer) {
         this.initializer = initializer;

File: integration/src/main/java/ai/djl/integration/tests/training/ParameterStoreTest.java
Patch:
@@ -40,9 +40,9 @@ public void testParameterStore() {
             } else {
                 numDevices = 4;
             }
-            int numWeights = 10;
-            // TODO: this test is currently flaky with large numUpdates
-            int numUpdates = 100;
+            int numWeights = 2;
+            // TODO: this test is currently flaky with large numUpdates and large numWeights
+            int numUpdates = 10;
             NDArray[][] weights = new NDArray[numWeights][numDevices];
             NDArray[][] grads = new NDArray[numWeights][numDevices];
             NDArray[] expected = new NDArray[numWeights];

File: api/src/main/java/ai/djl/modality/cv/util/BufferedImageUtils.java
Patch:
@@ -48,7 +48,7 @@ private BufferedImageUtils() {}
      * @throws IOException file is not found
      */
     public static BufferedImage fromFile(Path path) throws IOException {
-        return ImageIO.read(path.toFile());
+        return ImageIO.read(path.toAbsolutePath().toFile());
     }
 
     public static Color randomColor() {

File: api/src/main/java/ai/djl/training/metrics/Accuracy.java
Patch:
@@ -20,8 +20,8 @@
 /**
  * {@code Accuracy} is a {@link TrainingMetric} that computes the accuracy score.
  *
- * <p>The accuracy score is defined as: $$ accuracy(y, \hat{y}) =
- * \frac{1}{n}\sum_{i=0}^{n-1}1(\hat{y_i} == y_i)$$
+ * <p>The accuracy score is defined as \(accuracy(y, \hat{y}) =
+ * \frac{1}{n}\sum_{i=0}^{n-1}1(\hat{y_i} == y_i)\)
  */
 public class Accuracy extends TrainingMetric {
 

File: api/src/main/java/ai/djl/training/optimizer/learningrate/LearningRateTracker.java
Patch:
@@ -12,6 +12,8 @@
  */
 package ai.djl.training.optimizer.learningrate;
 
+import ai.djl.TrainingDivergedException;
+
 public abstract class LearningRateTracker {
 
     float baseLearningRate;
@@ -51,7 +53,7 @@ float getWarmUpLearningRate(int numUpdate) {
 
     void checkLearningRate(float learningRate) {
         if (Float.isNaN(learningRate)) {
-            throw new IllegalStateException("Warm up learning rate is Nan.");
+            throw new TrainingDivergedException("Learning rate is Nan.");
         }
     }
 

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1341,7 +1341,7 @@ public NDArray isInfinite() {
     /** {@inheritDoc} */
     @Override
     public NDArray isNaN() {
-        return manager.invoke("_npi_equal", new NDArray[] {this, this}, null);
+        return manager.invoke("_npi_not_equal", new NDArray[] {this, this}, null);
     }
 
     /** {@inheritDoc} */

File: examples/src/main/java/ai/djl/examples/inference/PoseEstimationExample.java
Patch:
@@ -59,7 +59,8 @@ protected List<Joints> predict(Arguments arguments, Metrics metrics, int iterati
 
         Map<String, String> criteria = new ConcurrentHashMap<>();
         criteria.put("size", "512");
-        criteria.put("backbone", "resnet50_v1");
+        criteria.put("backbone", "resnet50");
+        criteria.put("flavor", "v1");
         criteria.put("dataset", "voc");
         ZooModel<BufferedImage, DetectedObjects> ssd = MxModelZoo.SSD.loadModel(criteria);
 

File: examples/src/main/java/ai/djl/examples/inference/SsdExample.java
Patch:
@@ -55,7 +55,8 @@ public DetectedObjects predict(Arguments arguments, Metrics metrics, int iterati
         if (criteria == null) {
             criteria = new ConcurrentHashMap<>();
             criteria.put("size", "512");
-            criteria.put("backbone", "resnet50_v1");
+            criteria.put("backbone", "resnet50");
+            criteria.put("flavor", "v1");
             criteria.put("dataset", "voc");
         }
         ZooModel<BufferedImage, DetectedObjects> model = MxModelZoo.SSD.loadModel(criteria, device);

File: api/src/main/java/ai/djl/ndarray/NDArray.java
Patch:
@@ -585,6 +585,7 @@ default NDArray slice() {
      */
     default NDArray duplicate() {
         NDArray array = getManager().create(getShape(), getDataType(), getDevice());
+        array.setName(getName());
         copyTo(array);
         return array;
     }

File: api/src/main/java/ai/djl/nn/Parameter.java
Patch:
@@ -67,6 +67,7 @@ public ParameterType getType() {
 
     public void setArray(NDArray array) {
         this.array = array;
+        array.setName(name);
     }
 
     public NDArray getArray() {
@@ -103,6 +104,7 @@ public void initialize(NDManager manager, DataType dataType, Shape[] inputShapes
                             manager,
                             shape,
                             mandatoryDataType == null ? dataType : mandatoryDataType);
+            array.setName(name);
         }
 
         if (requireGradient()) {

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -155,6 +155,7 @@ public NDArray asInDevice(Device dev, boolean copy) {
             return slice();
         }
         MxNDArray nd = manager.create(getShape(), getDataType(), dev);
+        nd.name = name;
         copyTo(nd);
         return nd;
     }
@@ -166,6 +167,7 @@ public NDArray asType(DataType dtype, boolean copy) {
             return slice();
         }
         MxNDArray nd = manager.create(getShape(), dtype, getDevice());
+        nd.name = name;
         copyTo(nd);
         return nd;
     }

File: api/src/main/java/ai/djl/training/loss/SoftmaxCrossEntropyLoss.java
Patch:
@@ -73,6 +73,7 @@ public SoftmaxCrossEntropyLoss() {
     @Override
     public NDArray getLoss(NDArray label, NDArray prediction) {
         if (!fromLogit) {
+            // TODO: use numpy log softmax
             prediction = prediction.softmax(classAxis).log();
         }
         NDArray loss;
@@ -86,6 +87,7 @@ public NDArray getLoss(NDArray label, NDArray prediction) {
             loss = loss.mul(weight);
         }
         // apply mean on all axes except the batchAxis
+        // TODO: alternative use numpy batch flatten and mean batch axis
         return loss.mean(excludeBatchAxis(loss, batchAxis));
     }
 }

File: api/src/main/java/ai/djl/training/metrics/Accuracy.java
Patch:
@@ -73,7 +73,7 @@ public void update(NDArray labels, NDArray predictions) {
                         .eq(predictionReduced.asType(DataType.INT64, false))
                         .countNonzero();
         addCorrectInstances(numCorrect);
-        addTotalInstances((int) labels.size());
+        addTotalInstances(labels.size());
     }
 
     /** {@inheritDoc} */

File: examples/src/main/java/ai/djl/examples/training/util/AbstractTraining.java
Patch:
@@ -45,6 +45,7 @@ public abstract class AbstractTraining implements TrainingListener {
     protected int validateProgress;
 
     private long epochTime;
+    private int numEpochs;
 
     private ProgressBar trainingProgressBar;
     private ProgressBar validateProgressBar;
@@ -155,10 +156,11 @@ public void onEpoch() {
         if (epochTime > 0L) {
             metrics.addMetric("epoch", System.nanoTime() - epochTime);
         }
+        logger.info("Epoch " + numEpochs + " finished.");
         printTrainingStatus(metrics);
 
         epochTime = System.nanoTime();
-
+        numEpochs++;
         trainingProgress = 0;
         validateProgress = 0;
     }

File: examples/src/test/java/ai/djl/examples/TrainMnistTest.java
Patch:
@@ -20,7 +20,7 @@ public class TrainMnistTest {
 
     @Test
     public void testTrainMnist() {
-        String[] args = new String[] {"-e", "2", "-o", "build/logs"};
+        String[] args = new String[] {"-e", "2", "-g", "1", "-o", "build/logs"};
 
         TrainMnist test = new TrainMnist();
         Assert.assertTrue(test.runExample(args));

File: api/src/main/java/ai/djl/ndarray/NDArrays.java
Patch:
@@ -790,7 +790,7 @@ public static NDArray dot(NDArray a, NDArray b) {
      */
     public static NDArray stack(NDList arrays, int axis) {
         NDArray array = arrays.head();
-        return array.stack(arrays.subList(1), axis);
+        return array.stack(arrays.subNDList(1), axis);
     }
 
     /**
@@ -812,7 +812,7 @@ public static NDArray stack(NDList arrays) {
      */
     public static NDArray concat(NDList arrays, int axis) {
         NDArray array = arrays.head();
-        return array.concat(arrays.subList(1), axis);
+        return array.concat(arrays.subNDList(1), axis);
     }
 
     /**

File: api/src/main/java/ai/djl/nn/convolutional/Convolution.java
Patch:
@@ -157,7 +157,9 @@ public void loadParameters(NDManager manager, DataInputStream is)
     private NDList opInputs(ParameterStore parameterStore, NDList inputs) {
         NDArray data = inputs.singletonOrThrow();
         Device device = data.getDevice();
-        NDList ret = new NDList(3).add(data).add(parameterStore.getValue(weight, device));
+        NDList ret = new NDList(3);
+        ret.add(data);
+        ret.add(parameterStore.getValue(weight, device));
         if (bias != null) {
             ret.add(parameterStore.getValue(bias, device));
         }

File: api/src/main/java/ai/djl/nn/core/Linear.java
Patch:
@@ -171,7 +171,8 @@ private NDList opInputs(ParameterStore parameterStore, NDList inputs) {
         }
         Device device = inputs.head().getDevice();
 
-        NDList result = new NDList().addAll(inputs).add(parameterStore.getValue(weight, device));
+        NDList result = new NDList(inputs);
+        result.add(parameterStore.getValue(weight, device));
         if (bias != null) {
             result.add(parameterStore.getValue(bias, device));
         }

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/CachedOp.java
Patch:
@@ -102,11 +102,11 @@ public NDList forward(ParameterStore parameterStore, NDList data) {
 
         // fill allInputsNDArray with data values
         int index = 0;
-        for (Pair<String, NDArray> pair : data) {
-            String inputName = pair.getKey();
+        for (NDArray array : data) {
+            String inputName = array.getName();
             // if inputName not provided, value will follow the default order
             int idx = indexOf(inputName, index++);
-            allInputsNDArray[idx] = (MxNDArray) pair.getValue();
+            allInputsNDArray[idx] = (MxNDArray) array;
         }
 
         // check the input, set as Shape(batchSize) by default

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxModel.java
Patch:
@@ -364,16 +364,16 @@ private void loadParameters(String modelName, Map<String, String> options)
         Map<String, Parameter> map = new LinkedHashMap<>();
         parameters.forEach(p -> map.put(p.getName(), p));
 
-        for (Pair<String, NDArray> pair : paramNDlist) {
-            String key = pair.getKey();
+        for (NDArray nd : paramNDlist) {
+            String key = nd.getName();
             if (key == null) {
                 throw new IllegalArgumentException("Array names must be present in parameter file");
             }
 
             String paramName = key.split(":", 2)[1];
             Parameter parameter = map.remove(paramName);
 
-            NDArray array = pair.getValue().asInDevice(device, false);
+            NDArray array = nd.asInDevice(device, false);
             parameter.setArray(array);
         }
         symbolBlock.setInputNames(new ArrayList<>(map.keySet()));

File: mxnet/engine/src/main/java/ai/djl/mxnet/jna/JnaUtils.java
Patch:
@@ -383,7 +383,9 @@ public static NDList loadNdArray(MxNDManager manager, Path path) {
         } else {
             String[] names = namesRef.getValue().getStringArray(0, nameCount);
             for (int i = 0; i < ndArrayCount; i++) {
-                ndList.add(names[i], manager.create(handles[i]));
+                NDArray array = manager.create(handles[i]);
+                array.setName(names[i]);
+                ndList.add(array);
             }
         }
         return ndList;

File: api/src/main/java/ai/djl/training/ParameterStore.java
Patch:
@@ -87,7 +87,7 @@ public NDArray getValue(Parameter parameter, Device device) {
                 for (Map.Entry<Device, Integer> entry : deviceMap.entrySet()) {
                     Device dev = entry.getKey();
                     int i = entry.getValue();
-                    if (i == index) {
+                    if (i == index && array.getDevice().equals(dev)) {
                         arrays[i] = array;
                     } else {
                         arrays[i] = array.asInDevice(dev, true);

File: api/src/main/java/ai/djl/training/metrics/TopKAccuracy.java
Patch:
@@ -61,7 +61,7 @@ public void update(NDArray labels, NDArray predictions) {
         NDArray topKPrediction = predictions.argsort(axis);
         int numDims = topKPrediction.getShape().dimension();
         if (numDims == 1) {
-            addCorrectInstances(topKPrediction.flatten().eq(labels.flatten()).sum().getInt());
+            addCorrectInstances(topKPrediction.flatten().eq(labels.flatten()).countNonzero());
         } else if (numDims == 2) {
             int numClasses = (int) topKPrediction.getShape().get(1);
             topK = Math.min(topK, numClasses);
@@ -73,7 +73,7 @@ public void update(NDArray labels, NDArray predictions) {
                                         topKPrediction.get(":, " + (numClasses - j - 1));
                                 // TODO replace nonzero with sum
                                 addCorrectInstances(
-                                        jPrediction.flatten().eq(labels.flatten()).sum().getInt());
+                                        jPrediction.flatten().eq(labels.flatten()).countNonzero());
                             });
         }
         addTotalInstances((int) labels.getShape().get(0));

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -139,8 +139,9 @@ private TrainingConfig setupTrainingConfig(Arguments arguments) {
                 Optimizer.sgd()
                         .setRescaleGrad(1.0f / batchSize)
                         .setLearningRateTracker(learningRateTracker)
-                        .optMomentum(0.9f)
-                        .optWeightDecays(0.001f)
+                        // TODO: fix states copy to multi-gpu
+                        // .optMomentum(0.9f)
+                        // .optWeightDecays(0.001f)
                         .optClipGrad(1f)
                         .build();
         return new DefaultTrainingConfig(initializer)

File: examples/src/main/java/ai/djl/examples/training/util/AbstractTraining.java
Patch:
@@ -64,7 +64,7 @@ public boolean runExample(String[] args) {
             int numGpus = arguments.getNumGpus();
             String devices;
             if (numGpus > 0) {
-                devices = numGpus + " GPUs";
+                devices = numGpus + " GPU";
             } else {
                 devices = Device.defaultDevice().toString();
             }
@@ -80,7 +80,7 @@ public boolean runExample(String[] args) {
             logger.info(
                     String.format(
                             "Load library %s in %.3f ms.", version, (loaded - init) / 1_000_000f));
-
+            epochTime = System.nanoTime();
             train(arguments);
 
             logger.info("Training: {} batches", trainDataSize);

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/Symbol.java
Patch:
@@ -134,10 +134,7 @@ public List<String> getLayerNames() {
      * @return Map of arguments with names and shapes
      */
     public Map<String, Shape> inferShape(PairList<String, Shape> pairs) {
-        // TODO: infershape on old model would cause problem
-        JnaUtils.setNumpyMode(false);
         List<List<Shape>> shapes = JnaUtils.inferShape(this, pairs);
-        JnaUtils.setNumpyMode(true);
         if (shapes == null) {
             throw new IllegalArgumentException("Cannot infer shape based on the data provided!");
         }

File: examples/src/main/java/ai/djl/examples/util/MemoryUtils.java
Patch:
@@ -46,7 +46,7 @@ private MemoryUtils() {}
      * @param metrics {@link Metrics} to store memory information
      */
     public static void collectMemoryInfo(Metrics metrics) {
-        if (metrics != null) {
+        if (metrics != null && Boolean.getBoolean("collect-memory")) {
             MemoryMXBean memBean = ManagementFactory.getMemoryMXBean();
             MemoryUsage heap = memBean.getHeapMemoryUsage();
             MemoryUsage nonHeap = memBean.getNonHeapMemoryUsage();
@@ -59,6 +59,8 @@ public static void collectMemoryInfo(Metrics metrics) {
             metrics.addMetric("NonHeap", nonHeapCommitted, "bytes");
             Engine engine = Engine.getInstance();
             int gpuCount = engine.getGpuCount();
+            // TODO: For some reason, MxEngine.getGpuMemory() is very slow and allocates memory on
+            // GPUs that are NOT in use.
             for (int i = 0; i < gpuCount; ++i) {
                 Device device = Device.gpu(i);
                 MemoryUsage mem = engine.getGpuMemory(device);

File: api/src/main/java/ai/djl/training/optimizer/Adam.java
Patch:
@@ -56,8 +56,8 @@ public void update(String parameterId, NDArray weight, NDArray grad) {
                 new NDList(
                         weight,
                         grad,
-                        means.computeIfAbsent(parameterId, k -> weight.zerosLike()),
-                        variances.computeIfAbsent(parameterId, k -> weight.zerosLike()));
+                        withDefaultState(means, parameterId, k -> weight.zerosLike()),
+                        withDefaultState(variances, parameterId, k -> weight.zerosLike()));
         NDList weights = new NDList(weight);
 
         NDArrayEx ex = weight.getNDArrayInternal();

File: api/src/main/java/ai/djl/training/optimizer/Nag.java
Patch:
@@ -46,7 +46,7 @@ public void update(String parameterId, NDArray weight, NDArray grad) {
                     new NDList(
                             weight,
                             grad,
-                            momentumStates.computeIfAbsent(parameterId, k -> weight.zerosLike()));
+                            withDefaultState(momentumStates, parameterId, k -> weight.zerosLike()));
         } else {
             inputs = new NDList(weight, grad);
         }

File: api/src/main/java/ai/djl/training/optimizer/Sgd.java
Patch:
@@ -47,7 +47,7 @@ public void update(String parameterId, NDArray weight, NDArray grad) {
                     new NDList(
                             weight,
                             grad,
-                            momentumStates.computeIfAbsent(parameterId, k -> weight.zerosLike()));
+                            withDefaultState(momentumStates, parameterId, k -> weight.zerosLike()));
         } else {
             inputs = new NDList(weight, grad);
         }

File: model-zoo/src/main/java/ai/djl/zoo/cv/classification/MlpModelLoader.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.zoo.cv.classification;
 
 import ai.djl.Device;
+import ai.djl.MalformedModelException;
 import ai.djl.Model;
 import ai.djl.modality.Classification;
 import ai.djl.modality.cv.ImageClassificationTranslator;
@@ -62,7 +63,8 @@ public Translator<BufferedImage, Classification> getTranslator(Artifact artifact
     }
 
     @Override
-    protected Model loadModel(Artifact artifact, Path modelPath, Device device) throws IOException {
+    protected Model loadModel(Artifact artifact, Path modelPath, Device device)
+            throws IOException, MalformedModelException {
         Map<String, Object> arguments = artifact.getArguments();
         int width = ((Double) arguments.getOrDefault("width", 28d)).intValue();
         int height = ((Double) arguments.getOrDefault("height", 28d)).intValue();

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/ImageClassificationModelLoader.java
Patch:
@@ -17,6 +17,7 @@
 import ai.djl.modality.cv.transform.CenterCrop;
 import ai.djl.modality.cv.transform.Resize;
 import ai.djl.modality.cv.transform.ToTensor;
+import ai.djl.modality.cv.util.NDImageUtils;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.Anchor;
 import ai.djl.repository.Artifact;
@@ -45,11 +46,13 @@ public Translator<BufferedImage, Classification> getTranslator(Artifact artifact
         Map<String, Object> arguments = artifact.getArguments();
         int width = ((Double) arguments.getOrDefault("width", 224d)).intValue();
         int height = ((Double) arguments.getOrDefault("height", 224d)).intValue();
+        String flag = (String) arguments.getOrDefault("flag", NDImageUtils.Flag.COLOR.name());
 
         Pipeline pipeline = new Pipeline();
         pipeline.add(new CenterCrop()).add(new Resize(height, width)).add(new ToTensor());
 
         return new ImageClassificationTranslator.Builder()
+                .optFlag(NDImageUtils.Flag.valueOf(flag))
                 .setPipeline(pipeline)
                 .setSynsetArtifactName("synset.txt")
                 .build();

File: api/src/main/java/ai/djl/modality/cv/ImageClassificationTranslator.java
Patch:
@@ -35,7 +35,7 @@ public ImageClassificationTranslator(Builder builder) {
     public Classification processOutput(TranslatorContext ctx, NDList list) throws IOException {
         Model model = ctx.getModel();
 
-        NDArray probabilitiesNd = list.singletonOrThrow().get(0).softmax(0);
+        NDArray probabilitiesNd = list.singletonOrThrow().softmax(0);
         List<String> synset = model.getArtifact(synsetArtifactName, Utils::readLines);
         return new Classification(synset, probabilitiesNd);
     }

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -157,7 +157,7 @@ private Batch fetch(List<Long> indices) throws IOException {
             batchData = batchData.asInDevice(device, false);
             batchLabels = batchLabels.asInDevice(device, false);
         }
-        return new Batch(subManager, batchData, batchLabels);
+        return new Batch(subManager, batchData, batchLabels, batchifier);
     }
 
     private void preFetch() {

File: integration/src/main/java/ai/djl/integration/tests/training/OptimizerTest.java
Patch:
@@ -32,6 +32,7 @@
 import ai.djl.training.optimizer.Optimizer;
 import ai.djl.training.optimizer.Sgd;
 import ai.djl.training.optimizer.learningrate.LearningRateTracker;
+import ai.djl.translate.Batchifier;
 import org.testng.annotations.Test;
 
 public class OptimizerTest {
@@ -169,7 +170,7 @@ public void testAdam() {
     private NDArray runOptimizer(NDManager manager, Trainer trainer, Block block) {
         NDArray data = manager.ones(new Shape(BATCH_SIZE, CHANNELS)).mul(2);
         NDArray label = data.mul(2);
-        Batch batch = new Batch(manager, new NDList(data), new NDList(label));
+        Batch batch = new Batch(manager, new NDList(data), new NDList(label), Batchifier.STACK);
         trainer.trainBatch(batch);
         trainer.step();
         return NDArrays.stack(

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/SingleShotDetectionTranslator.java
Patch:
@@ -57,7 +57,7 @@ public DetectedObjects processOutput(TranslatorContext ctx, NDList list) throws
                     throw new AssertionError("Unexpected index: " + classId);
                 }
                 String className = classes.get(classId);
-                float[] box = boundingBoxes.get(0, i).toFloatArray();
+                float[] box = boundingBoxes.get(i).toFloatArray();
                 double x = box[0] / 512;
                 double y = box[1] / 512;
                 double w = box[2] / 512 - x;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/poseestimation/SimplePoseTranslator.java
Patch:
@@ -33,9 +33,9 @@ public SimplePoseTranslator(BaseBuilder<?> builder) {
     @Override
     public Joints processOutput(TranslatorContext ctx, NDList list) {
         NDArray pred = list.singletonOrThrow();
-        int numJoints = (int) pred.getShape().get(1);
-        int height = (int) pred.getShape().get(2);
-        int width = (int) pred.getShape().get(3);
+        int numJoints = (int) pred.getShape().get(0);
+        int height = (int) pred.getShape().get(1);
+        int width = (int) pred.getShape().get(2);
         NDArray predReshaped = pred.reshape(new Shape(1, numJoints, -1));
         NDArray maxIndices = predReshaped.argmax(2).reshape(new Shape(1, numJoints, -1));
         NDArray maxValues = predReshaped.max(new int[] {2}, true);

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/segmentation/InstanceSegmentationTranslator.java
Patch:
@@ -83,15 +83,15 @@ public DetectedObjects processOutput(TranslatorContext ctx, NDList list) throws
                     throw new AssertionError("Unexpected index: " + classId);
                 }
                 String className = classes.get(classId);
-                float[] box = boundingBoxes.get(0, i).toFloatArray();
+                float[] box = boundingBoxes.get(i).toFloatArray();
                 double x = box[0] / rescaledWidth;
                 double y = box[1] / rescaledHeight;
                 double w = box[2] / rescaledWidth - x;
                 double h = box[3] / rescaledHeight - y;
 
-                Shape maskShape = masks.get(0, i).getShape();
+                Shape maskShape = masks.get(i).getShape();
                 float[][] maskVal = new float[(int) maskShape.get(0)][(int) maskShape.get(1)];
-                float[] flattened = masks.get(0, i).toFloatArray();
+                float[] flattened = masks.get(i).toFloatArray();
 
                 for (int j = 0; j < flattened.length; j++) {
                     maskVal[j / maskVal.length][j % maskVal.length] = flattened[j];

File: api/src/main/java/ai/djl/training/ParameterStore.java
Patch:
@@ -89,6 +89,7 @@ public synchronized NDArray getValue(Parameter parameter, Device device) {
                     } else {
                         arrays[i] = array.asInDevice(dev, true);
                         arrays[i].attach(manager);
+                        arrays[i].attachGradient();
                     }
                     parameterServer.init(parameterId, arrays);
                     data.add(arrays[i]);
@@ -97,6 +98,7 @@ public synchronized NDArray getValue(Parameter parameter, Device device) {
                 if (copy || !array.getDevice().equals(device)) {
                     array = array.asInDevice(device, true);
                     array.attach(manager);
+                    array.attachGradient();
                 }
                 data.add(array);
             }

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -32,11 +32,11 @@ default Iterable<Batch> iterateDataset(Dataset dataset) throws IOException {
 
     GradientCollector newGradientCollector();
 
-    void train(Batch batch);
+    void trainBatch(Batch batch);
 
     NDList forward(NDList input);
 
-    void validate(Batch batch);
+    void validateBatch(Batch batch);
 
     /** Makes one step of parameter update. */
     void step();

File: api/src/test/java/ai/djl/test/mock/MockTrainer.java
Patch:
@@ -45,15 +45,15 @@ public void close() {}
     public void step() {}
 
     @Override
-    public void train(Batch batch) {}
+    public void trainBatch(Batch batch) {}
 
     @Override
     public NDList forward(NDList input) {
         return null;
     }
 
     @Override
-    public void validate(Batch batch) {}
+    public void validateBatch(Batch batch) {}
 
     @Override
     public void setMetrics(Metrics metrics) {}

File: examples/src/test/java/ai/djl/examples/TrainMnistTest.java
Patch:
@@ -25,6 +25,8 @@ public void testTrainMnist() {
         TrainMnist test = new TrainMnist();
         Assert.assertTrue(test.runExample(args));
         Assert.assertTrue(test.getTrainingAccuracy() > 0.9f);
-        Assert.assertTrue(test.getTrainingLoss() < 0.2f);
+        Assert.assertTrue(test.getTrainingLoss() < 0.35f);
+        Assert.assertTrue(test.getValidationAccuracy() > 0.9f);
+        Assert.assertTrue(test.getValidationLoss() < 0.35f);
     }
 }

File: integration/src/main/java/ai/djl/integration/tests/model_zoo/classification/ResnetTest.java
Patch:
@@ -85,7 +85,7 @@ public void testTrain() {
                 NDArray label = manager.ones(new Shape(100, 1));
                 Batch batch = new Batch(manager, new NDList(input), new NDList(label));
                 PairList<String, Parameter> parameters = resNet50.getParameters();
-                trainer.train(batch);
+                trainer.trainBatch(batch);
                 trainer.step();
                 NDArray expectedAtIndex0 = manager.ones(new Shape(16, 1, 3, 3));
                 NDArray expectedAtIndex1 = manager.ones(new Shape(16)).muli(.8577);
@@ -126,7 +126,7 @@ public void testLoadTrain() throws IOException, ModelNotFoundException {
                 NDArray data = manager.ones(new Shape(16, 3, 32, 32));
                 NDArray label = manager.ones(outputShape[0]);
                 Batch batch = new Batch(manager, new NDList(data), new NDList(label));
-                trainer.train(batch);
+                trainer.trainBatch(batch);
             }
         }
     }

File: integration/src/main/java/ai/djl/integration/tests/training/OptimizerTest.java
Patch:
@@ -170,7 +170,7 @@ private NDArray runOptimizer(NDManager manager, Trainer trainer, Block block) {
         NDArray data = manager.ones(new Shape(BATCH_SIZE, CHANNELS)).mul(2);
         NDArray label = data.mul(2);
         Batch batch = new Batch(manager, new NDList(data), new NDList(label));
-        trainer.train(batch);
+        trainer.trainBatch(batch);
         trainer.step();
         return NDArrays.stack(
                 new NDList(

File: api/src/main/java/ai/djl/ndarray/types/DataType.java
Patch:
@@ -29,12 +29,14 @@ public enum DataType {
     INT32(Format.INT, 4),
     INT8(Format.INT, 1),
     INT64(Format.INT, 8),
+    BOOLEAN(Format.BOOLEAN, 1),
     UNKNOWN(Format.UNKNOWN, 0);
 
     public enum Format {
         FLOATING,
         UINT,
         INT,
+        BOOLEAN,
         UNKNOWN
     }
 

File: api/src/main/java/ai/djl/training/metrics/TopKAccuracy.java
Patch:
@@ -71,6 +71,7 @@ public void update(NDArray labels, NDArray predictions) {
                                 // get from last index as argsort is ascending
                                 NDArray jPrediction =
                                         topKPrediction.get(":, " + (numClasses - j - 1));
+                                // TODO replace nonzero with sum
                                 addCorrectInstances(
                                         jPrediction.flatten().eq(labels.flatten()).sum().getInt());
                             });

File: api/src/main/java/ai/djl/Device.java
Patch:
@@ -44,7 +44,7 @@ public Device(String deviceType, int deviceId) {
     /**
      * Returns device type of the Device.
      *
-     * @return device type of the Devicejk
+     * @return device type of the Device
      */
     public String getDeviceType() {
         return deviceType;

File: api/src/main/java/ai/djl/nn/core/Embedding.java
Patch:
@@ -217,8 +217,7 @@ public DataType getDataType() {
         /**
          * Sets the collection of items that should feature embeddings.
          *
-         * @param items A collection containing all the items that embedddings should be created
-         *     for.
+         * @param items A collection containing all the items that embeddings should be created for.
          * @return Returns this Builder
          */
         public Builder<T> setItems(Collection<T> items) {

File: api/src/main/java/ai/djl/nn/recurrent/RecurrentCell.java
Patch:
@@ -164,7 +164,7 @@ public T setSequenceLength(boolean useSequenceLength) {
          * @param useBidirectional Whether to use bidirectional recurrent layers
          * @return Returns this Builder
          */
-        public T setBirectional(boolean useBidirectional) {
+        public T setBidrectional(boolean useBidirectional) {
             this.useBidirectional = useBidirectional;
             return self();
         }

File: api/src/test/java/ai/djl/inference/InferenceTest.java
Patch:
@@ -48,7 +48,7 @@ public void setup() throws IOException {
     }
 
     @Test
-    public void testObjectDection() throws IOException, TranslateException {
+    public void testObjectDetection() throws IOException, TranslateException {
         Path modelDir = Paths.get("build/model");
         String modelName = "mockModel";
 
@@ -106,7 +106,7 @@ public Classification processOutput(TranslatorContext ctx, NDList list) {
     }
 
     @Test(expectedExceptions = TranslateException.class)
-    public void testTranslatException() throws TranslateException {
+    public void testTranslateException() throws TranslateException {
         EchoTranslator<String> translator = new EchoTranslator<>();
         translator.setInputException(new TranslateException("Some exception"));
         Model model = new MockModel();

File: examples/src/test/java/ai/djl/examples/TrainResNetTest.java
Patch:
@@ -21,7 +21,7 @@ public class TrainResNetTest {
 
     @Test
     public void testTrainResNet() {
-        // Limit max 4 gpu for cinfar10 training to make it converge faster.
+        // Limit max 4 gpu for cifar10 training to make it converge faster.
         // and only train 10 batch for unit test.
         String[] args = {"-e", "2", "-g", "4", "-m", "10", "-s", "-p"};
 

File: integration/src/main/java/ai/djl/integration/tests/ndarray/NDArrayReductionOpTest.java
Patch:
@@ -148,8 +148,8 @@ public void testMean() {
             Assert.assertEquals(meanAxesActual, meanAxes, "Incorrect mean axes");
 
             NDArray meanKeep = array.mean(new int[] {0}, true);
-            NDArray meanKeepActaul = manager.create(new float[] {4f, 6f}, new Shape(1, 2));
-            Assert.assertEquals(meanKeepActaul, meanKeep, "Incorrect mean keep");
+            NDArray meanKeepActual = manager.create(new float[] {4f, 6f}, new Shape(1, 2));
+            Assert.assertEquals(meanKeepActual, meanKeep, "Incorrect mean keep");
 
             // scalar
             array = manager.create(5f);

File: repository/src/main/java/ai/djl/repository/LocalRepository.java
Patch:
@@ -68,7 +68,7 @@ public Artifact resolve(MRL mrl, String version, Map<String, String> filter)
         if (artifacts.isEmpty()) {
             return null;
         }
-        // TODO: find hightest version.
+        // TODO: find highest version.
         return artifacts.get(0);
     }
 }

File: repository/src/main/java/ai/djl/repository/RemoteRepository.java
Patch:
@@ -89,7 +89,7 @@ public Artifact resolve(MRL mrl, String version, Map<String, String> filter)
         if (artifacts.isEmpty()) {
             return null;
         }
-        // TODO: find hightest version.
+        // TODO: find highest version.
         return artifacts.get(0);
     }
 }

File: examples/src/main/java/ai/djl/examples/inference/InstanceSegmentationExample.java
Patch:
@@ -33,10 +33,10 @@
 import java.util.concurrent.ConcurrentHashMap;
 import javax.imageio.ImageIO;
 
-public class InstanceSegementationExample extends AbstractInference<DetectedObjects> {
+public class InstanceSegmentationExample extends AbstractInference<DetectedObjects> {
 
     public static void main(String[] args) {
-        new InstanceSegementationExample().runExample(args);
+        new InstanceSegmentationExample().runExample(args);
     }
 
     @Override

File: examples/src/test/java/ai/djl/examples/InstanceSegmentationExampleTest.java
Patch:
@@ -12,7 +12,7 @@
  */
 package ai.djl.examples;
 
-import ai.djl.examples.inference.InstanceSegementationExample;
+import ai.djl.examples.inference.InstanceSegmentationExample;
 import ai.djl.modality.cv.DetectedObjects;
 import org.testng.Assert;
 import org.testng.annotations.Test;
@@ -25,7 +25,7 @@ public void testInstanceSegmentation() {
             "-i", "src/test/resources/segmentation.jpg", "-c", "1", "-l", "build/logs"
         };
 
-        InstanceSegementationExample test = new InstanceSegementationExample();
+        InstanceSegmentationExample test = new InstanceSegmentationExample();
         Assert.assertTrue(test.runExample(args));
         DetectedObjects result = test.getPredictResult();
         DetectedObjects.Item best = result.best();

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/segmentation/InstanceSegmentationModelLoader.java
Patch:
@@ -36,7 +36,7 @@ public InstanceSegmentationModelLoader(Repository repository) {
 
     @Override
     public Translator<BufferedImage, DetectedObjects> getTranslator() {
-        return new InstanceSegementationTranslator.Builder()
+        return new InstanceSegmentationTranslator.Builder()
                 .setSynsetArtifactName("classes.txt")
                 .optNormalize(
                         new float[] {0.485f, 0.456f, 0.406f}, new float[] {0.229f, 0.224f, 0.225f})

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/objectdetection/SingleShotDetectionModelLoader.java
Patch:
@@ -33,7 +33,7 @@ public class SingleShotDetectionModelLoader
     private static final Anchor BASE_ANCHOR = CV.OBJECT_DETECTION;
     private static final String GROUP_ID = MxModelZoo.GROUP_ID;
     private static final String ARTIFACT_ID = "ssd";
-    private static final String VERSION = "0.0.2";
+    private static final String VERSION = "0.0.1";
 
     public SingleShotDetectionModelLoader(Repository repository) {
         super(repository, new MRL(BASE_ANCHOR, GROUP_ID, ARTIFACT_ID), VERSION);

File: api/src/main/java/ai/djl/modality/cv/ImageClassificationTranslator.java
Patch:
@@ -11,11 +11,10 @@
  * and limitations under the License.
  */
 
-package ai.djl.zoo.cv.classification;
+package ai.djl.modality.cv;
 
 import ai.djl.Model;
 import ai.djl.modality.Classification;
-import ai.djl.modality.cv.ImageTranslator;
 import ai.djl.ndarray.NDArray;
 import ai.djl.ndarray.NDList;
 import ai.djl.translate.TranslatorContext;

File: model-zoo/src/main/java/ai/djl/zoo/cv/classification/ResNetModelLoader.java
Patch:
@@ -15,6 +15,7 @@
 import ai.djl.Device;
 import ai.djl.Model;
 import ai.djl.modality.Classification;
+import ai.djl.modality.cv.ImageClassificationTranslator;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.nn.Block;
 import ai.djl.repository.Anchor;

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/actionrecognition/ActionRecognitionModelLoader.java
Patch:
@@ -13,14 +13,14 @@
 package ai.djl.mxnet.zoo.cv.actionrecognition;
 
 import ai.djl.modality.Classification;
+import ai.djl.modality.cv.ImageClassificationTranslator;
 import ai.djl.mxnet.zoo.BaseSymbolModelLoader;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.Anchor;
 import ai.djl.repository.MRL;
 import ai.djl.repository.MRL.Model.CV;
 import ai.djl.repository.Repository;
 import ai.djl.translate.Translator;
-import ai.djl.zoo.cv.classification.ImageClassificationTranslator;
 import java.awt.image.BufferedImage;
 
 public class ActionRecognitionModelLoader

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/classification/ImageNetBaseModelLoader.java
Patch:
@@ -13,14 +13,14 @@
 package ai.djl.mxnet.zoo.cv.classification;
 
 import ai.djl.modality.Classification;
+import ai.djl.modality.cv.ImageClassificationTranslator;
 import ai.djl.mxnet.zoo.BaseSymbolModelLoader;
 import ai.djl.mxnet.zoo.MxModelZoo;
 import ai.djl.repository.Anchor;
 import ai.djl.repository.MRL;
 import ai.djl.repository.MRL.Model.CV;
 import ai.djl.repository.Repository;
 import ai.djl.translate.Translator;
-import ai.djl.zoo.cv.classification.ImageClassificationTranslator;
 import java.awt.image.BufferedImage;
 
 public abstract class ImageNetBaseModelLoader

File: api/src/main/java/ai/djl/training/metrics/TrainingMetrics.java
Patch:
@@ -10,7 +10,6 @@
  * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
  * and limitations under the License.
  */
-
 package ai.djl.training.metrics;
 
 import ai.djl.ndarray.NDArray;

File: api/src/main/java/ai/djl/training/DefaultTrainingConfig.java
Patch:
@@ -49,8 +49,8 @@ public DefaultTrainingConfig setLoss(Loss loss) {
         return this;
     }
 
-    public DefaultTrainingConfig addTrainingMetrics(List<TrainingMetrics> trainingMetrics) {
-        this.trainingMetrics = trainingMetrics;
+    public DefaultTrainingConfig addTrainingMetrics(TrainingMetrics trainingMetrics) {
+        this.trainingMetrics.add(trainingMetrics);
         return this;
     }
 

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -41,7 +41,6 @@
 import ai.djl.training.optimizer.learningrate.LearningRateTracker;
 import ai.djl.translate.Pipeline;
 import java.io.IOException;
-import java.util.Collections;
 import org.apache.commons.cli.DefaultParser;
 import org.apache.commons.cli.Options;
 import org.apache.commons.cli.ParseException;
@@ -100,7 +99,7 @@ public static void trainMnist(Arguments arguments) throws IOException {
                 new DefaultTrainingConfig(new XavierInitializer())
                         .setOptimizer(optimizer)
                         .setLoss(Loss.softmaxCrossEntropyLoss())
-                        .addTrainingMetrics(Collections.singletonList(new Accuracy()))
+                        .addTrainingMetrics(new Accuracy())
                         .setDevices(devices);
         try (Model model = Model.newInstance()) {
             Pipeline pipeline = new Pipeline(new ToTensor());

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -45,7 +45,6 @@
 import ai.djl.zoo.cv.classification.ResNetV1;
 import java.io.IOException;
 import java.nio.file.Paths;
-import java.util.Collections;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import org.apache.commons.cli.DefaultParser;
@@ -155,7 +154,7 @@ public static void trainResNetV1(Model model, Arguments arguments) throws IOExce
                         .setOptimizer(optimizer)
                         .setDevices(devices)
                         .setLoss(Loss.softmaxCrossEntropyLoss())
-                        .addTrainingMetrics(Collections.singletonList(acc));
+                        .addTrainingMetrics(acc);
 
         try (Trainer trainer = model.newTrainer(config)) {
             int numEpoch = arguments.getEpoch();

File: api/src/main/java/ai/djl/training/dataset/Batch.java
Patch:
@@ -22,8 +22,8 @@ public class Batch implements AutoCloseable {
     private NDList data;
     private NDList labels;
 
-    public Batch(NDManager baseManager, NDList data, NDList labels) {
-        manager = baseManager.newSubManager();
+    public Batch(NDManager manager, NDList data, NDList labels) {
+        this.manager = manager;
         data.attach(manager);
         labels.attach(manager);
         this.data = data;

File: api/src/main/java/ai/djl/training/dataset/DataIterable.java
Patch:
@@ -162,10 +162,11 @@ public Batch next() {
         }
 
         private Batch fetch(List<Long> indices) throws IOException {
+            NDManager subManager = manager.newSubManager();
             NDList[] data = new NDList[indices.size()];
             NDList[] labels = new NDList[indices.size()];
             for (int i = 0; i < indices.size(); i++) {
-                Record record = dataset.get(indices.get(i));
+                Record record = dataset.get(subManager, indices.get(i));
                 data[i] = record.getData();
                 labels[i] = record.getLabels();
             }
@@ -188,7 +189,7 @@ private Batch fetch(List<Long> indices) throws IOException {
                 batchData = batchData.asInDevice(device, false);
                 batchLabels = batchLabels.asInDevice(device, false);
             }
-            return new Batch(manager, batchData, batchLabels);
+            return new Batch(subManager, batchData, batchLabels);
         }
 
         private void preFetch() {

File: api/src/main/java/ai/djl/training/dataset/RandomAccessDataset.java
Patch:
@@ -45,7 +45,7 @@ public RandomAccessDataset(BaseBuilder<?> builder) {
         this.device = builder.getDevice();
     }
 
-    public abstract Record get(long index) throws IOException;
+    public abstract Record get(NDManager manager, long index) throws IOException;
 
     @Override
     public Iterable<Batch> getData(NDManager manager) {

File: mxnet/mxnet-dataset/src/main/java/ai/djl/mxnet/dataset/ImageNet.java
Patch:
@@ -14,6 +14,7 @@
 
 import ai.djl.modality.cv.util.BufferedImageUtils;
 import ai.djl.ndarray.NDList;
+import ai.djl.ndarray.NDManager;
 import ai.djl.repository.Repository;
 import ai.djl.repository.SimpleRepository;
 import ai.djl.util.PairList;
@@ -105,7 +106,7 @@ private void prepareItems() throws IOException {
     }
 
     @Override
-    protected NDList readImage(String image) throws IOException {
+    protected NDList readImage(NDManager manager, String image) throws IOException {
         Path imagePath = root.resolve(image);
         return new NDList(BufferedImageUtils.readFileToArray(manager, imagePath, flag));
     }

File: mxnet/mxnet-dataset/src/test/java/ai/djl/mxnet/dataset/CocoTest.java
Patch:
@@ -38,7 +38,6 @@ public void testCocoLocal() throws IOException {
             Repository repository = Repository.newInstance("test", "src/test/resources/repo");
             CocoDetection coco =
                     new CocoDetection.Builder()
-                            .setManager(model.getNDManager())
                             .setUsage(Dataset.Usage.TEST)
                             .optRepository(repository)
                             .setRandomSampling(1)

File: mxnet/mxnet-dataset/src/test/java/ai/djl/mxnet/dataset/ImageFolderTest.java
Patch:
@@ -40,7 +40,6 @@ public void testImageFolder() throws IOException {
 
             ImageFolder dataset =
                     new ImageFolder.Builder()
-                            .setManager(model.getNDManager())
                             .setRoot("src/test/resources/imagefolder")
                             .setResize(100, 100)
                             .setSequenceSampling(1, false)

File: mxnet/mxnet-dataset/src/test/java/ai/djl/mxnet/dataset/PikachuTest.java
Patch:
@@ -13,7 +13,6 @@
 package ai.djl.mxnet.dataset;
 
 import ai.djl.Model;
-import ai.djl.ndarray.NDManager;
 import ai.djl.ndarray.types.Shape;
 import ai.djl.repository.Repository;
 import ai.djl.training.Activation;
@@ -29,13 +28,13 @@
 import org.testng.annotations.Test;
 
 public class PikachuTest {
+
     @Test
     public void testPikachuLocal() throws IOException {
         Repository repository = Repository.newInstance("test", "src/test/resources/repo");
         PikachuDetection pikachu =
                 new PikachuDetection.Builder()
                         .setUsage(Dataset.Usage.TEST)
-                        .setManager(NDManager.newBaseManager())
                         .optRepository(repository)
                         .setRandomSampling(1)
                         .build();

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/actionrecognition/ActionRecognitionModelLoader.java
Patch:
@@ -38,9 +38,10 @@ public ActionRecognitionModelLoader(Repository repository) {
     @Override
     public Translator<BufferedImage, Classification> getTranslator() {
         return new ImageClassificationTranslator.Builder()
-                .optCenterCrop(299, 299) // 299 is the minimum length for inception, 224 for vgg
+                .optResize(299, 299) // 299 is the minimum length for inception, 224 for vgg
                 .optNormalize(
                         new float[] {0.485f, 0.456f, 0.406f}, new float[] {0.229f, 0.224f, 0.225f})
+                .setSynsetArtifactName("classes.txt")
                 .build();
     }
 }

File: examples/src/main/java/ai/djl/examples/inference/BertQaInferenceExample.java
Patch:
@@ -170,8 +170,8 @@ public String processOutput(TranslatorContext ctx, NDList list) {
             // Get Probability distribution
             NDArray startProb = startLogits.softmax(-1);
             NDArray endProb = endLogits.softmax(-1);
-            int startIdx = (int) startProb.argmax(1).reshape(startProb.getShape()).getFloat(0);
-            int endIdx = (int) endProb.argmax(1).reshape(endProb.getShape()).getFloat(0);
+            int startIdx = (int) startProb.argmax(1).getFloat();
+            int endIdx = (int) endProb.argmax(1).getFloat();
             return tokens.subList(startIdx, endIdx + 1).toString();
         }
     }

File: mxnet/mxnet-model-zoo/src/main/java/ai/djl/mxnet/zoo/cv/poseestimation/SimplePoseTranslator.java
Patch:
@@ -36,7 +36,7 @@ public Joints processOutput(TranslatorContext ctx, NDList list) {
         int height = (int) pred.getShape().get(2);
         int width = (int) pred.getShape().get(3);
         NDArray predReshaped = pred.reshape(new Shape(1, numJoints, -1));
-        NDArray maxIndices = predReshaped.argmax(2).reshape(predReshaped.getShape());
+        NDArray maxIndices = predReshaped.argmax(2).reshape(new Shape(1, numJoints, -1));
         NDArray maxValues = predReshaped.max(new int[] {2}, true);
 
         NDArray result = maxIndices.tile(2, 2);

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxTrainer.java
Patch:
@@ -81,7 +81,7 @@ public class MxTrainer implements Trainer {
     public void initialize(DataDesc[] inputDescriptor) {
         Shape[] shapes =
                 Arrays.stream(inputDescriptor).map(DataDesc::getShape).toArray(Shape[]::new);
-        model.getBlock().initialize(manager, model.getDataType(), devices, shapes);
+        model.getBlock().initialize(model.getNDManager(), model.getDataType(), devices, shapes);
     }
 
     @Override

File: api/src/main/java/ai/djl/training/Trainer.java
Patch:
@@ -28,7 +28,7 @@ public interface Trainer extends AutoCloseable {
     void initialize(DataDesc[] inputDescriptor);
 
     default Iterable<Batch> iterateDataset(Dataset dataset) throws IOException {
-        return dataset.getData();
+        return dataset.getData(getManager());
     }
 
     GradientCollector newGradientCollector();

File: api/src/main/java/ai/djl/training/dataset/Dataset.java
Patch:
@@ -12,12 +12,13 @@
  */
 package ai.djl.training.dataset;
 
+import ai.djl.ndarray.NDManager;
 import java.io.IOException;
 
 /** An interface to represent Dataset. All the datasets should implement this interface. */
 public interface Dataset {
 
-    Iterable<Batch> getData() throws IOException;
+    Iterable<Batch> getData(NDManager manager) throws IOException;
 
     enum Usage {
         TRAIN,

File: api/src/main/java/ai/djl/training/dataset/RandomAccessDataset.java
Patch:
@@ -13,6 +13,7 @@
 package ai.djl.training.dataset;
 
 import ai.djl.Device;
+import ai.djl.ndarray.NDManager;
 import ai.djl.translate.Batchifier;
 import ai.djl.translate.Pipeline;
 import java.io.IOException;
@@ -47,9 +48,10 @@ public RandomAccessDataset(BaseBuilder<?> builder) {
     public abstract Record get(long index) throws IOException;
 
     @Override
-    public Iterable<Batch> getData() {
+    public Iterable<Batch> getData(NDManager manager) {
         return new DataIterable(
                 this,
+                manager,
                 sampler,
                 batchifier,
                 pipeline,

File: examples/src/main/java/ai/djl/examples/training/TrainMnist.java
Patch:
@@ -137,6 +137,8 @@ public static void trainMnist(Arguments arguments) throws IOException {
                             }
                         }
                         trainer.step();
+
+                        batch.close();
                     }
                     // Validation
                     for (Batch batch : trainer.iterateDataset(validateSet)) {
@@ -147,6 +149,7 @@ public static void trainMnist(Arguments arguments) throws IOException {
                             data = data.reshape(inputShape);
                             trainer.validate(new NDList(data), labels);
                         }
+                        batch.close();
                     }
                     lossValue = trainer.getLoss();
                     trainAccuracy = trainer.getTrainingMetrics().get(0).getMetric().getValue();

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -181,9 +181,7 @@ public static void trainResNetV1(Model model, Arguments arguments) throws IOExce
                                     + lossValue
                                     + " accuracy: "
                                     + accuracy);
-                    for (Batch b : split) {
-                        b.close();
-                    }
+
                     batch.close();
                     if (batchNum == arguments.getMaxIterations()) {
                         break;

File: mxnet/mxnet-dataset/src/main/java/ai/djl/mxnet/dataset/Mnist.java
Patch:
@@ -147,7 +147,7 @@ protected Builder self() {
         }
 
         public Builder setManager(NDManager manager) {
-            this.manager = manager;
+            this.manager = manager.newSubManager();
             return this;
         }
 

File: mxnet/mxnet-dataset/src/test/java/ai/djl/mxnet/dataset/DatasetUtilsTest.java
Patch:
@@ -30,7 +30,7 @@ public void testSplitEven() {
 
             NDArray data = manager.randomUniform(0, 1, new Shape(6, 5, 5, 3));
             NDArray label = manager.zeros(new Shape(6, 1));
-            Batch record = new Batch(new NDList(data), new NDList(label));
+            Batch record = new Batch(manager, new NDList(data), new NDList(label));
 
             Batch[] split = DatasetUtils.split(record, devices, true);
 
@@ -56,7 +56,7 @@ public void testSplitUnevenData() {
 
             NDArray data = manager.randomUniform(0, 1, new Shape(7, 5, 5, 3));
             NDArray label = manager.zeros(new Shape(7, 1));
-            Batch record = new Batch(new NDList(data), new NDList(label));
+            Batch record = new Batch(manager, new NDList(data), new NDList(label));
 
             Batch[] split = DatasetUtils.split(record, devices, false);
 
@@ -88,7 +88,7 @@ public void testSplitSmailerBatchSize() {
 
             NDArray data = manager.randomUniform(0, 1, new Shape(2, 5, 5, 3));
             NDArray label = manager.zeros(new Shape(7, 1));
-            Batch record = new Batch(new NDList(data), new NDList(label));
+            Batch record = new Batch(manager, new NDList(data), new NDList(label));
 
             Batch[] split = DatasetUtils.split(record, devices, false);
 

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/CachedOp.java
Patch:
@@ -135,7 +135,9 @@ MxNDArray[] getInputNDArray() {
     public void close() {
         Pointer pointer = handle.getAndSet(null);
         if (pointer != null) {
+            manager.detach(getUid());
             JnaUtils.freeCachedOp(pointer);
+            manager = null;
         }
     }
 

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxNDArray.java
Patch:
@@ -1616,7 +1616,7 @@ public void close() {
             // TODO: remove after fixing multi-thread data loading issue
             // JnaUtils.waitToRead(pointer);
             JnaUtils.freeNdArray(pointer);
-            detach();
+            manager.detach(getUid());
             manager = null;
         }
     }

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/NativeResource.java
Patch:
@@ -22,10 +22,12 @@ public abstract class NativeResource implements AutoCloseable {
     private static final Logger logger = LoggerFactory.getLogger(NativeResource.class);
 
     protected final AtomicReference<Pointer> handle;
+    private String uid;
     private Exception exception;
 
     protected NativeResource(Pointer pointer) {
         this.handle = new AtomicReference<>(pointer);
+        uid = String.valueOf(Pointer.nativeValue(pointer));
         if (logger.isTraceEnabled()) {
             exception = new Exception();
         }
@@ -44,7 +46,7 @@ public Pointer getHandle() {
     }
 
     public final String getUid() {
-        return String.valueOf(Pointer.nativeValue(handle.get()));
+        return uid;
     }
 
     /** {@inheritDoc} */

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/Symbol.java
Patch:
@@ -209,7 +209,9 @@ public String toString() {
     public void close() {
         Pointer pointer = handle.getAndSet(null);
         if (pointer != null) {
+            manager.detach(getUid());
             JnaUtils.freeSymbol(pointer);
+            manager = null;
         }
     }
 }

File: examples/src/main/java/ai/djl/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -34,7 +34,7 @@
 import ai.djl.training.TrainingConfig;
 import ai.djl.training.dataset.Batch;
 import ai.djl.training.dataset.Dataset;
-import ai.djl.training.initializer.NormalInitializer;
+import ai.djl.training.initializer.XavierInitializer;
 import ai.djl.training.loss.Loss;
 import ai.djl.training.metrics.Accuracy;
 import ai.djl.training.metrics.LossMetric;
@@ -114,6 +114,7 @@ public static void trainResNetV1(Model model, Arguments arguments) throws IOExce
                 Optimizer.sgd()
                         .setRescaleGrad(1.0f / batchSize)
                         .setLearningRateTracker(LearningRateTracker.fixedLearningRate(0.01f))
+                        .optClipGrad(1f)
                         .build();
         Pipeline pipeline = new Pipeline(new ToTensor());
         Cifar10 cifar10 =
@@ -135,7 +136,7 @@ public static void trainResNetV1(Model model, Arguments arguments) throws IOExce
             devices = new Device[] {Device.defaultDevice()};
         }
         TrainingConfig config =
-                new DefaultTrainingConfig(new NormalInitializer(0.01), optimizer, devices);
+                new DefaultTrainingConfig(new XavierInitializer(), optimizer, devices);
 
         try (Trainer trainer = model.newTrainer(config)) {
             int numEpoch = arguments.getEpoch();

File: integration/src/main/java/ai/djl/integration/tests/NDArrayReductionOpTest.java
Patch:
@@ -95,9 +95,10 @@ public void testSum() {
             // scalar
             array = manager.create(2f);
             Assert.assertEquals(2f, array.sum().getFloat());
+            // TODO wait for MXNet numpy sum bug fix
             // zero-dim
-            array = manager.create(new Shape(1, 1, 0));
-            Assert.assertEquals(0f, array.sum().getFloat());
+            // array = manager.create(new Shape(1, 1, 0));
+            // Assert.assertEquals(0f, array.sum().getFloat());
         }
     }
 

File: mxnet/engine/src/main/java/ai/djl/mxnet/engine/MxTrainer.java
Patch:
@@ -148,6 +148,7 @@ private void checkGradients() {
                 NDArrays.stack(
                         new NDList(grads.stream().map(NDArray::sum).toArray(NDArray[]::new)));
         float[] sums = gradSum.sum().toFloatArray();
+        gradSum.close();
         float sum = 0f;
         for (float num : sums) {
             sum += num;

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayElementArithmeticOpTest.java
Patch:
@@ -36,7 +36,7 @@ private void testCornerCase(
         NDArray array1 = manager.create(x1);
         NDArray array2 = manager.create(x2);
         NDArray result = arrayArithmeticOp.apply(array1, array2);
-        Assertions.assertEquals(arithmeticOp.apply(x1, x2), result.getFloat());
+        Assertions.assertAlmostEquals(arithmeticOp.apply(x1, x2), result.getFloat());
         if (inplace) {
             Assertions.assertInPlace(array1, result);
         } else {
@@ -91,7 +91,7 @@ private void testScalarCornerCase(
         float x2 = 4f;
         NDArray ndArray = manager.create(x1);
         NDArray result = arrayArithmeticOp.apply(ndArray, x2);
-        Assertions.assertEquals(arithmeticOp.apply(x1, x2), result.getFloat());
+        Assertions.assertAlmostEquals(arithmeticOp.apply(x1, x2), result.getFloat());
         if (inplace) {
             Assertions.assertInPlace(ndArray, result);
         } else {

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayElementComparisonOpTest.java
Patch:
@@ -20,6 +20,7 @@
 import software.amazon.ai.ndarray.types.Shape;
 
 public class NDArrayElementComparisonOpTest {
+
     @Test
     public void testContentEquals() {
         try (NDManager manager = NDManager.newBaseManager()) {

File: api/src/main/java/software/amazon/ai/nn/norm/BatchNorm.java
Patch:
@@ -45,8 +45,8 @@ public class BatchNorm extends AbstractBlock {
         axis = builder.getAxis();
         epsilon = builder.getEpsilon();
         momentum = builder.getMomentum();
-        runningMean = new Parameter("runningMean", this, ParameterType.RUNNING_MEAN);
-        runningVar = new Parameter("runningVar", this, ParameterType.RUNNING_VAR);
+        runningMean = new Parameter("runningMean", this, ParameterType.RUNNING_MEAN, false);
+        runningVar = new Parameter("runningVar", this, ParameterType.RUNNING_VAR, false);
     }
 
     @Override

File: examples/src/main/java/software/amazon/ai/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -85,6 +85,7 @@ private static Model getModel(boolean isSymbolic, boolean preTrained)
             SequentialBlock newBlock = new SequentialBlock();
             Block modifiedBlock = ((SymbolBlock) model.getBlock()).removeLastBlock();
             newBlock.add(modifiedBlock);
+            newBlock.add(x -> new NDList(x.head().squeeze()));
             newBlock.add(new Linear.Builder().setOutChannels(10).build());
             model.setBlock(newBlock);
             if (!preTrained) {

File: api/src/main/java/software/amazon/ai/training/ParameterStore.java
Patch:
@@ -18,7 +18,6 @@
 import software.amazon.ai.Device;
 import software.amazon.ai.ndarray.NDArray;
 import software.amazon.ai.nn.Parameter;
-import software.amazon.ai.training.optimizer.Optimizer;
 import software.amazon.ai.util.Pair;
 import software.amazon.ai.util.PairList;
 
@@ -42,7 +41,7 @@ public void setParameterServer(ParameterServer parameterServer) {
         }
     }
 
-    public void updateAllParameters(Optimizer optimizer) {
+    public void updateAllParameters() {
         for (int i = 0; i < parameters.size(); i++) {
             NDArray[] grads = getAllGradients(parameters.get(i).getValue());
             parameterServer.push(i, grads, -i);

File: api/src/main/java/software/amazon/ai/training/metrics/TrainingMetrics.java
Patch:
@@ -54,6 +54,8 @@ public TrainingMetrics(String name) {
      */
     protected abstract void update(NDArray loss);
 
+    protected abstract void update(NDList loss);
+
     /** reset metric values. */
     public abstract void reset();
 

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxNDArrayEx.java
Patch:
@@ -459,7 +459,7 @@ public NDList fullyConnected(
             PairList<String, Object> additional) {
         MxOpParams params = new MxOpParams();
         params.addParam("num_hidden", outChannels);
-        params.addParam("flatten", false);
+        params.addParam("flatten", flatten);
         params.addParam("no_bias", noBias);
         params.addAll(additional);
 

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxTrainer.java
Patch:
@@ -101,7 +101,7 @@ public void step() {
             checkGradients();
         }
         if (parameterStore != null) {
-            parameterStore.updateAllParameters(optimizer);
+            parameterStore.updateAllParameters();
         } else {
             optimizer.updateAllParameters(parameters);
         }

File: api/src/main/java/software/amazon/ai/nn/convolutional/Conv1D.java
Patch:
@@ -19,7 +19,6 @@
 import software.amazon.ai.nn.Block;
 import software.amazon.ai.nn.Parameter;
 import software.amazon.ai.nn.ParameterType;
-import software.amazon.ai.training.initializer.Initializer;
 
 public class Conv1D extends Convolution {
 
@@ -42,7 +41,7 @@ public class Conv1D extends Convolution {
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
+            bias = new Parameter("bias", this, ParameterType.BIAS);
         }
     }
 

File: api/src/main/java/software/amazon/ai/nn/convolutional/Conv2D.java
Patch:
@@ -19,7 +19,6 @@
 import software.amazon.ai.nn.Block;
 import software.amazon.ai.nn.Parameter;
 import software.amazon.ai.nn.ParameterType;
-import software.amazon.ai.training.initializer.Initializer;
 
 public class Conv2D extends Convolution {
 
@@ -42,7 +41,7 @@ public class Conv2D extends Convolution {
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
+            bias = new Parameter("bias", this, ParameterType.BIAS);
         }
     }
 

File: api/src/main/java/software/amazon/ai/nn/convolutional/Conv3D.java
Patch:
@@ -19,7 +19,6 @@
 import software.amazon.ai.nn.Block;
 import software.amazon.ai.nn.Parameter;
 import software.amazon.ai.nn.ParameterType;
-import software.amazon.ai.training.initializer.Initializer;
 
 public class Conv3D extends Convolution {
 
@@ -42,7 +41,7 @@ public class Conv3D extends Convolution {
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
+            bias = new Parameter("bias", this, ParameterType.BIAS);
         }
     }
 

File: api/src/main/java/software/amazon/ai/nn/core/Linear.java
Patch:
@@ -29,7 +29,6 @@
 import software.amazon.ai.nn.Block;
 import software.amazon.ai.nn.Parameter;
 import software.amazon.ai.nn.ParameterType;
-import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.Pair;
 import software.amazon.ai.util.PairList;
 
@@ -63,7 +62,7 @@ public class Linear extends AbstractBlock {
         outChannels = builder.getOutChannels();
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (builder.isBias()) {
-            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
+            bias = new Parameter("bias", this, ParameterType.BIAS);
         }
     }
 

File: api/src/main/java/software/amazon/ai/nn/norm/BatchNorm.java
Patch:
@@ -27,7 +27,6 @@
 import software.amazon.ai.nn.Block;
 import software.amazon.ai.nn.Parameter;
 import software.amazon.ai.nn.ParameterType;
-import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.PairList;
 
 public class BatchNorm extends AbstractBlock {
@@ -46,8 +45,8 @@ public class BatchNorm extends AbstractBlock {
         axis = builder.getAxis();
         epsilon = builder.getEpsilon();
         momentum = builder.getMomentum();
-        runningMean = new Parameter("runningMean", this, ParameterType.OTHER, Initializer.ONES);
-        runningVar = new Parameter("runningVar", this, ParameterType.OTHER, Initializer.ONES);
+        runningMean = new Parameter("runningMean", this, ParameterType.RUNNING_MEAN);
+        runningVar = new Parameter("runningVar", this, ParameterType.RUNNING_VAR);
     }
 
     @Override

File: api/src/main/java/software/amazon/ai/ndarray/internal/NDFormat.java
Patch:
@@ -285,8 +285,8 @@ public IntFormat(NDArray array) {
                 exponential = true;
                 precision = Math.min(PRECISION, (int) Math.log10(max) + 1);
             } else {
-                int size = (int) Math.log10(max) + 1;
-                int negativeSize = (int) Math.log10(negativeMax) + 2;
+                int size = (max != 0) ? (int) Math.log10(max) + 1 : 1;
+                int negativeSize = (negativeMax != 0) ? (int) Math.log10(negativeMax) + 2 : 2;
                 totalLength = Math.max(size, negativeSize);
             }
         }

File: api/src/main/java/software/amazon/ai/Model.java
Patch:
@@ -219,6 +219,8 @@ default void load(Path modelPath, String modelName) throws IOException {
      */
     InputStream getArtifactAsStream(String name) throws IOException;
 
+    DataType getDataType();
+
     /**
      * Casts the model to support a different precision level.
      *

File: mxnet/dataset/src/test/java/org/apache/mxnet/dataset/ImageFolderTest.java
Patch:
@@ -55,12 +55,12 @@ public void testImageFolder() throws FailedTestException, IOException {
                 Iterator<Batch> ds = trainer.iterateDataset(dataset).iterator();
 
                 Batch catBatch = ds.next();
-                Assertions.assertAlmostEquals(cat, catBatch.getData().head());
+                Assertions.assertAlmostEquals(cat.expandDims(0), catBatch.getData().head());
                 Assertions.assertEquals(manager.create(new int[] {0}), catBatch.getLabels().head());
                 catBatch.close();
 
                 Batch dogBatch = ds.next();
-                Assertions.assertAlmostEquals(dog, dogBatch.getData().head());
+                Assertions.assertAlmostEquals(dog.expandDims(0), dogBatch.getData().head());
                 Assertions.assertEquals(manager.create(new int[] {1}), dogBatch.getLabels().head());
                 dogBatch.close();
             }

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxTrainer.java
Patch:
@@ -70,8 +70,8 @@ public void step() {
     }
 
     @Override
-    public NDList forward(NDList intput) {
-        return block.forward(intput);
+    public NDList forward(NDList input) {
+        return block.forward(input);
     }
 
     @Override

File: api/src/main/java/software/amazon/ai/modality/cv/Images.java
Patch:
@@ -16,6 +16,7 @@
 import java.awt.Color;
 import java.awt.FontMetrics;
 import java.awt.Graphics2D;
+import java.awt.RenderingHints;
 import java.awt.image.BufferedImage;
 import java.io.IOException;
 import java.nio.ByteBuffer;
@@ -139,6 +140,7 @@ public static void drawBoundingBox(BufferedImage image, List<DetectedObject> det
         Graphics2D g = (Graphics2D) image.getGraphics();
         int stroke = 2;
         g.setStroke(new BasicStroke(stroke));
+        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
 
         int imageWidth = image.getWidth();
         int imageHeight = image.getHeight();
@@ -147,6 +149,7 @@ public static void drawBoundingBox(BufferedImage image, List<DetectedObject> det
             String className = result.getClassName();
             BoundingBox box = result.getBoundingBox();
             g.setPaint(randomColor().darker());
+
             box.draw(g, imageWidth, imageHeight);
             Point p = box.getPoint();
             int x = (int) (p.getX() * imageWidth);

File: examples/src/main/java/software/amazon/ai/examples/inference/util/Arguments.java
Patch:
@@ -109,7 +109,7 @@ public String getModelName() {
 
     public Path getImageFile() throws FileNotFoundException {
         if (imageFile == null) {
-            Path path = Paths.get(modelDir, "kitten.jpg");
+            Path path = Paths.get("src/test/resources/kitten.jpg");
             if (Files.notExists(path)) {
                 throw new FileNotFoundException("Missing --image parameter.");
             }

File: api/src/test/java/software/amazon/ai/test/CoverageUtils.java
Patch:
@@ -118,7 +118,7 @@ private static List<Class<?>> getClasses(Class<?> clazz)
 
                 try {
                     classList.add(Class.forName(className));
-                } catch (ExceptionInInitializerError ignore) {
+                } catch (ExceptionInInitializerError | NoClassDefFoundError ignore) {
                     // ignore
                 }
             }

File: api/src/main/java/software/amazon/ai/ndarray/NDManager.java
Patch:
@@ -488,15 +488,15 @@ default NDArray createRowSparse(Buffer data, Shape dataShape, long[] indices, Sh
      * @param path path to load from
      * @return list of NDArray. Tags might be present or be null.
      */
-    public NDList load(Path path);
+    NDList load(Path path);
 
     /**
      * Save NDArray to file.
      *
      * @param path path save to
      * @param ndList list of NDArray to save
      */
-    public void save(Path path, NDList ndList);
+    void save(Path path, NDList ndList);
 
     /**
      * Creates an instance of {@link NDArray} with specified {@link Shape} filled with zeros.

File: api/src/main/java/software/amazon/ai/training/dataset/ImageRecord.java
Patch:
@@ -13,13 +13,12 @@
 package software.amazon.ai.training.dataset;
 
 import java.awt.image.BufferedImage;
-import java.io.IOException;
 import software.amazon.ai.training.Trainer;
 
 public class ImageRecord implements Dataset<BufferedImage, Long> {
 
     @Override
-    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) throws IOException {
+    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) {
         return null;
     }
 }

File: api/src/main/java/software/amazon/ai/training/metrics/TopKAccuracy.java
Patch:
@@ -41,7 +41,7 @@ public TopKAccuracy(String name, int topK) {
     }
 
     public TopKAccuracy(int topK) {
-        this(String.format("Top_%d_Accuracy", topK), topK);
+        this("Top_" + topK + "_Accuracy", topK);
     }
 
     /** {@inheritDoc} */
@@ -65,8 +65,7 @@ public void update(NDArray labels, NDArray predictions) {
                             j -> {
                                 // get from last index as argsort is ascending
                                 NDArray jPrediction =
-                                        topKPrediction.get(
-                                                String.format(":, %d", numClasses - j - 1));
+                                        topKPrediction.get(":, " + (numClasses - j - 1));
                                 addCorrectInstances(
                                         jPrediction.flatten().eq(labels.flatten()).sum().getInt());
                             });

File: api/src/main/java/software/amazon/ai/training/optimizer/learningrate/LrTracker.java
Patch:
@@ -49,7 +49,7 @@ float getWarmupLr(int numUpdate) {
 
     public abstract float getNewLearningRate(int numUpdate);
 
-    public static final LrTracker fixedLR(float lr) {
+    public static LrTracker fixedLR(float lr) {
         return new FixedLr(lr);
     }
 }

File: api/src/test/java/software/amazon/ai/ndarray/types/ShapeTest.java
Patch:
@@ -43,8 +43,8 @@ public void matrixTest() {
         shape = new Shape(100, 1);
         Assert.assertTrue(shape.isColumnVector());
         Shape shapeNotMatrix = new Shape(1, 1, 1);
-        Assert.assertThrows(IllegalStateException.class, () -> shapeNotMatrix.rows());
-        Assert.assertThrows(IllegalStateException.class, () -> shapeNotMatrix.columns());
+        Assert.assertThrows(IllegalStateException.class, shapeNotMatrix::rows);
+        Assert.assertThrows(IllegalStateException.class, shapeNotMatrix::columns);
         Assert.assertEquals(shape.rows(), 100);
         Assert.assertEquals(shape.columns(), 1);
         Assert.assertNotEquals(shape, null);

File: integration/src/main/java/software/amazon/ai/integration/util/Assertions.java
Patch:
@@ -108,9 +108,7 @@ public static void assertAlmostEquals(
             double a = expectedDoubleArray[i].doubleValue();
             double b = actualDoubleArray[i].doubleValue();
             if (Math.abs(a - b) > (atol + rtol * Math.abs(b))) {
-                throw new FailedTestException(
-                        String.format(
-                                "expect = %s, actual = %s", String.valueOf(a), String.valueOf(b)));
+                throw new FailedTestException("expect = " + a + ", actual =" + b);
             }
         }
     }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/Cifar100.java
Patch:
@@ -13,15 +13,14 @@
 package org.apache.mxnet.dataset;
 
 import java.awt.image.BufferedImage;
-import java.io.IOException;
 import software.amazon.ai.training.Trainer;
 import software.amazon.ai.training.dataset.Batch;
 import software.amazon.ai.training.dataset.Dataset;
 
 public class Cifar100 implements Dataset<BufferedImage, Long> {
 
     @Override
-    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) throws IOException {
+    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) {
         return null;
     }
 }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/ImageFolder.java
Patch:
@@ -61,8 +61,7 @@ public long size() {
     private void listImage(String root) {
         File[] dir = new File(root).listFiles();
         if (dir == null || dir.length == 0) {
-            throw new IllegalArgumentException(
-                    String.format("%s not found or didn't have any file in it", root));
+            throw new IllegalArgumentException(root + " not found or didn't have any file in it");
         }
         Arrays.sort(dir);
         for (File file : dir) {

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/ImageNet.java
Patch:
@@ -13,15 +13,14 @@
 package org.apache.mxnet.dataset;
 
 import java.awt.image.BufferedImage;
-import java.io.IOException;
 import software.amazon.ai.training.Trainer;
 import software.amazon.ai.training.dataset.Batch;
 import software.amazon.ai.training.dataset.Dataset;
 
 public class ImageNet implements Dataset<BufferedImage, Long> {
 
     @Override
-    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) throws IOException {
+    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) {
         return null;
     }
 }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/ImageNetLarge.java
Patch:
@@ -13,15 +13,14 @@
 package org.apache.mxnet.dataset;
 
 import java.awt.image.BufferedImage;
-import java.io.IOException;
 import software.amazon.ai.training.Trainer;
 import software.amazon.ai.training.dataset.Batch;
 import software.amazon.ai.training.dataset.Dataset;
 
 public class ImageNetLarge implements Dataset<BufferedImage, Long> {
 
     @Override
-    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) throws IOException {
+    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) {
         return null;
     }
 }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/MnistFashion.java
Patch:
@@ -13,15 +13,14 @@
 package org.apache.mxnet.dataset;
 
 import java.awt.image.BufferedImage;
-import java.io.IOException;
 import software.amazon.ai.training.Trainer;
 import software.amazon.ai.training.dataset.Batch;
 import software.amazon.ai.training.dataset.Dataset;
 
 public class MnistFashion implements Dataset<BufferedImage, Long> {
 
     @Override
-    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) throws IOException {
+    public Iterable<Batch> getData(Trainer<BufferedImage, Long, ?> trainer) {
         return null;
     }
 }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/ZooDataset.java
Patch:
@@ -41,7 +41,7 @@ default void prepare() throws IOException {
             if (getArtifact() == null) {
                 useDefaultArtifact();
                 if (getArtifact() == null) {
-                    throw new IOException(String.format("%s dataset not found.", getMrl()));
+                    throw new IOException(getMrl() + " dataset not found.");
                 }
             }
             getRepository().prepare(getArtifact());

File: mxnet/model-zoo/src/main/java/org/apache/mxnet/zoo/cv/actionrecognition/ActionRecognitionTranslator.java
Patch:
@@ -17,13 +17,14 @@
 import software.amazon.ai.translate.TranslatorContext;
 
 public class ActionRecognitionTranslator implements Translator<NDList, NDList> {
+
     @Override
-    public NDList processOutput(TranslatorContext ctx, NDList list) throws Exception {
+    public NDList processOutput(TranslatorContext ctx, NDList list) {
         return null;
     }
 
     @Override
-    public NDList processInput(TranslatorContext ctx, NDList input) throws Exception {
+    public NDList processInput(TranslatorContext ctx, NDList input) {
         return null;
     }
 }

File: mxnet/model-zoo/src/main/java/org/apache/mxnet/zoo/cv/segmentation/InstanceSegementationTranslator.java
Patch:
@@ -17,13 +17,14 @@
 import software.amazon.ai.translate.TranslatorContext;
 
 public class InstanceSegementationTranslator implements Translator<NDList, NDList> {
+
     @Override
-    public NDList processOutput(TranslatorContext ctx, NDList list) throws Exception {
+    public NDList processOutput(TranslatorContext ctx, NDList list) {
         return null;
     }
 
     @Override
-    public NDList processInput(TranslatorContext ctx, NDList input) throws Exception {
+    public NDList processInput(TranslatorContext ctx, NDList input) {
         return null;
     }
 }

File: tensorflow/engine/src/main/java/org/tensorflow/HelloWorld.java
Patch:
@@ -101,7 +101,7 @@ public NDList processInput(TranslatorContext ctx, BufferedImage img)
         }
 
         @Override
-        public NDList processOutput(TranslatorContext ctx, NDList list) throws TranslateException {
+        public NDList processOutput(TranslatorContext ctx, NDList list) {
             return list;
         }
     }

File: tensorflow/engine/src/main/java/org/tensorflow/engine/TFInput.java
Patch:
@@ -13,7 +13,8 @@
 package org.tensorflow.engine;
 
 public interface TFInput {
-    public String setOutputName();
 
-    public <I> I getInput();
+    String setOutputName();
+
+    <I> I getInput();
 }

File: integration/src/main/java/software/amazon/ai/integration/tests/DatasetTest.java
Patch:
@@ -251,13 +251,13 @@ public void testArrayDataset() throws FailedTestException, IOException {
             }
         }
     }
+
     // this is just to demonstrate how multithreading dataloader will look like
     // @RunAsTest
     public void testMultithreading() throws IOException, InterruptedException {
         try (Model model = Model.newInstance()) {
             BlockFactory factory = model.getBlockFactory();
             model.setBlock(factory.createIdentityBlock());
-
             NDManager manager = model.getNDManager();
 
             ExecutorService executor =

File: examples/src/main/java/software/amazon/ai/examples/inference/BertQaInferenceExample.java
Patch:
@@ -39,7 +39,7 @@
 
 public final class BertQaInferenceExample extends AbstractExample {
 
-    private static Logger logger = LogUtils.getLogger(BertQaInferenceExample.class);
+    private static final Logger logger = LogUtils.getLogger(BertQaInferenceExample.class);
 
     public static void main(String[] args) {
         new BertQaInferenceExample().runExample(args);

File: examples/src/main/java/software/amazon/ai/examples/training/TrainMnist.java
Patch:
@@ -43,7 +43,8 @@
 
 public final class TrainMnist {
 
-    private static Logger logger = LogUtils.getLogger(TrainMnist.class);
+    private static final Logger logger = LogUtils.getLogger(TrainMnist.class);
+
     private static float accuracy;
     private static float lossValue;
 

File: examples/src/main/java/software/amazon/ai/examples/training/transferlearning/TrainResnetWithCifar10.java
Patch:
@@ -47,7 +47,7 @@
 
 public final class TrainResnetWithCifar10 {
 
-    private static Logger logger = LogUtils.getLogger(TrainResnetWithCifar10.class);
+    private static final Logger logger = LogUtils.getLogger(TrainResnetWithCifar10.class);
 
     private TrainResnetWithCifar10() {}
 

File: examples/src/main/java/software/amazon/ai/examples/training/TrainMnist.java
Patch:
@@ -77,7 +77,7 @@ public static void trainMnist(Arguments arguments) throws IOException, Translate
             Optimizer optimizer =
                     new Sgd.Builder()
                             .setRescaleGrad(1.0f / batchSize)
-                            .setLrTracker(LrTracker.fixedLR(0.1f))
+                            .setLrTracker(LrTracker.fixedLR(0.01f))
                             .optMomentum(0.9f)
                             .build();
             TrainingController controller = new TrainingController(mlp.getParameters(), optimizer);

File: examples/src/test/java/software/amazon/ai/examples/TrainMnistTest.java
Patch:
@@ -22,9 +22,9 @@
 public class TrainMnistTest {
     @Test
     public void testTrainMnist() throws TranslateException, ParseException, IOException {
-        String[] args = {"-e", "1", "-b", "100"};
+        String[] args = {"-e", "2"};
         TrainMnist.main(args);
-        Assert.assertTrue(TrainMnist.getAccuracy() > 0.8f);
-        Assert.assertTrue(TrainMnist.getLossValue() < 0.6f);
+        Assert.assertTrue(TrainMnist.getAccuracy() > 0.9f);
+        Assert.assertTrue(TrainMnist.getLossValue() < 0.2f);
     }
 }

File: api/src/main/java/software/amazon/ai/nn/Parameter.java
Patch:
@@ -208,7 +208,7 @@ public void load(DataInputStream dis) throws IOException {
 
         // Data
         length = dis.readInt();
-        ByteBuffer data = ByteBuffer.allocateDirect(length);
+        ByteBuffer data = manager.allocateDirect(length);
 
         if (length > 0) {
             byte[] buf = new byte[BUFFER_SIZE];

File: api/src/main/java/software/amazon/ai/ndarray/NDArray.java
Patch:
@@ -160,7 +160,7 @@ default void detach() {
      * @return the gradient {@code NDArray}
      * @throws NullPointerException when gradient is not initialized
      */
-    NDArray getGradient() throws NullPointerException;
+    NDArray getGradient();
 
     /**
      * Returns the encoding format of the NDArray, or null.
@@ -408,7 +408,7 @@ default void set(byte[] data) {
      * @param value The value to replace with
      * @throws IllegalArgumentException Thrown if the index does not correspond to a single element
      */
-    void setScalar(NDIndex index, Number value) throws IllegalArgumentException;
+    void setScalar(NDIndex index, Number value);
 
     /**
      * Returns a partial {@code NDArray}.

File: api/src/main/java/software/amazon/ai/nn/norm/Dropout.java
Patch:
@@ -23,7 +23,7 @@ public interface Dropout extends Block {
     final class Builder {
 
         private float probability = 0.5f;
-        private int[] sharedAxes = new int[] {};
+        private int[] sharedAxes = {};
 
         public Builder setProbability(float probability) {
             this.probability = probability;

File: api/src/test/java/software/amazon/ai/test/mock/MockNDArray.java
Patch:
@@ -110,7 +110,7 @@ public Matrix asMatrix() {
     public void attachGradient() {}
 
     @Override
-    public NDArray getGradient() throws NullPointerException {
+    public NDArray getGradient() {
         return null;
     }
 

File: api/src/test/java/software/amazon/ai/util/UtilsTest.java
Patch:
@@ -39,7 +39,7 @@ public void postprocess() {
 
     @Test
     public void testContains() {
-        String[] words = new String[] {"Hello World", "2"};
+        String[] words = {"Hello World", "2"};
         Assert.assertTrue(Utils.contains(words, "2"));
         Assert.assertFalse(Utils.contains(words, "3"));
     }

File: examples/src/main/java/software/amazon/ai/examples/util/AbstractExample.java
Patch:
@@ -115,7 +115,7 @@ public final boolean runExample(String[] args) {
             long loaded = System.nanoTime();
             logger.info(
                     String.format(
-                            "Load library %s in %.3f ms.", version, (loaded - init) / 1000000f));
+                            "Load library %s in %.3f ms.", version, (loaded - init) / 1_000_000f));
 
             while (!duration.isNegative()) {
                 Metrics metrics = new Metrics(); // Reset Metrics for each test loop.
@@ -125,8 +125,8 @@ public final boolean runExample(String[] args) {
 
                 logger.info("Inference result: {}", lastResult);
 
-                float p50 = metrics.percentile("Inference", 50).getValue().longValue() / 1000000f;
-                float p90 = metrics.percentile("Inference", 90).getValue().longValue() / 1000000f;
+                float p50 = metrics.percentile("Inference", 50).getValue().longValue() / 1_000_000f;
+                float p90 = metrics.percentile("Inference", 90).getValue().longValue() / 1_000_000f;
 
                 logger.info(String.format("inference P50: %.3f ms, P90: %.3f ms", p50, p90));
 

File: integration/src/main/java/software/amazon/ai/integration/tests/ActivationTest.java
Patch:
@@ -27,7 +27,7 @@
 public class ActivationTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", ActivationTest.class.getName()};
+        String[] cmd = {"-c", ActivationTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/BlockCoreTest.java
Patch:
@@ -38,7 +38,7 @@
 public class BlockCoreTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", BlockCoreTest.class.getName()};
+        String[] cmd = {"-c", BlockCoreTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/DatasetTest.java
Patch:
@@ -35,7 +35,7 @@
 public class DatasetTest {
     public static void main(String[] args) {
         // TODO remove this once NumpyMode is defualt
-        String[] cmd = new String[] {"-c", DatasetTest.class.getName()};
+        String[] cmd = {"-c", DatasetTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/GradientCollectorIntegrationTest.java
Patch:
@@ -50,7 +50,7 @@
 public class GradientCollectorIntegrationTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", GradientCollectorIntegrationTest.class.getName()};
+        String[] cmd = {"-c", GradientCollectorIntegrationTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayElementComparisonOpTest.java
Patch:
@@ -26,7 +26,7 @@
 public class NDArrayElementComparisonOpTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayElementComparisonOpTest.class.getName()};
+        String[] cmd = {"-c", NDArrayElementComparisonOpTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayIOTest.java
Patch:
@@ -30,7 +30,7 @@
 @SuppressWarnings("PMD.UseProperClassLoader")
 public class NDArrayIOTest {
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayIOTest.class.getName()};
+        String[] cmd = {"-c", NDArrayIOTest.class.getName()};
         new IntegrationTest().runTests(cmd);
     }
 

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayLogicalOpTest.java
Patch:
@@ -26,7 +26,7 @@
 public class NDArrayLogicalOpTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayLogicalOpTest.class.getName()};
+        String[] cmd = {"-c", NDArrayLogicalOpTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayOtherOpTest.java
Patch:
@@ -29,7 +29,7 @@
 public class NDArrayOtherOpTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayOtherOpTest.class.getName()};
+        String[] cmd = {"-c", NDArrayOtherOpTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayReductionOpTest.java
Patch:
@@ -25,7 +25,7 @@
 public class NDArrayReductionOpTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayReductionOpTest.class.getName()};
+        String[] cmd = {"-c", NDArrayReductionOpTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayShapesManipulationOpTest.java
Patch:
@@ -27,7 +27,7 @@
 public class NDArrayShapesManipulationOpTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", NDArrayShapesManipulationOpTest.class.getName()};
+        String[] cmd = {"-c", NDArrayShapesManipulationOpTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/OptimizerTest.java
Patch:
@@ -40,7 +40,7 @@ public class OptimizerTest {
     private static final int CHANNELS = 10;
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", OptimizerTest.class.getName()};
+        String[] cmd = {"-c", OptimizerTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/PoolingOperatorsTest.java
Patch:
@@ -26,7 +26,7 @@
 public class PoolingOperatorsTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", PoolingOperatorsTest.class.getName()};
+        String[] cmd = {"-c", PoolingOperatorsTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/SymbolBlockTest.java
Patch:
@@ -43,7 +43,7 @@
 
 public class SymbolBlockTest {
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", SymbolBlockTest.class.getName()};
+        String[] cmd = {"-c", SymbolBlockTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/main/java/software/amazon/ai/integration/tests/TrainingMetricsTest.java
Patch:
@@ -28,7 +28,7 @@
 public class TrainingMetricsTest {
 
     public static void main(String[] args) {
-        String[] cmd = new String[] {"-c", TrainingMetricsTest.class.getName()};
+        String[] cmd = {"-c", TrainingMetricsTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))

File: integration/src/test/java/software/amazon/ai/integration/IntegrationTests.java
Patch:
@@ -19,7 +19,7 @@ public class IntegrationTests {
 
     @Test
     public void runIntegrationTests() {
-        String[] args = new String[] {};
+        String[] args = {};
         Assert.assertTrue(new IntegrationTest().runTests(args));
     }
 }

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/ImageFolder.java
Patch:
@@ -32,8 +32,7 @@
 
 /** A dataset for loading image files stored in a folder structure. */
 public final class ImageFolder extends RandomAccessDataset {
-    private static final String[] EXT =
-            new String[] {".jpg", ".jpeg", ".png", ".bmp", ".wbmp", ".gif"};
+    private static final String[] EXT = {".jpg", ".jpeg", ".png", ".bmp", ".wbmp", ".gif"};
     private static final Logger logger = LoggerFactory.getLogger(ImageFolder.class);
 
     private NDManager manager;

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxMatrix.java
Patch:
@@ -43,7 +43,7 @@ public void attachGradient() {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray getGradient() throws NullPointerException {
+    public NDArray getGradient() {
         return array.getGradient();
     }
 
@@ -372,7 +372,7 @@ public void set(NDIndex index, Number value) {
 
     /** {@inheritDoc} */
     @Override
-    public void setScalar(NDIndex index, Number value) throws IllegalArgumentException {
+    public void setScalar(NDIndex index, Number value) {
         array.setScalar(index, value);
     }
 

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxNDArray.java
Patch:
@@ -237,7 +237,7 @@ void attachGradient(GradReq gradReq, SparseFormat sparseFormat) {
 
     /** {@inheritDoc} */
     @Override
-    public NDArray getGradient() throws NullPointerException {
+    public NDArray getGradient() {
         Pointer pointer = JnaUtils.getGradient(getHandle());
         if (pointer == null) {
             throw new NullPointerException(
@@ -354,7 +354,7 @@ public void set(NDIndex index, Number value) {
 
     /** {@inheritDoc} */
     @Override
-    public void setScalar(NDIndex index, Number value) throws IllegalArgumentException {
+    public void setScalar(NDIndex index, Number value) {
         Optional<NDIndexFullSlice> hasFullSlice = index.getAsFullSlice(getShape());
         if (hasFullSlice.isPresent()) {
             if (hasFullSlice.get().getShape().size() != 1) {
@@ -1499,7 +1499,7 @@ public NDArrayEx getNDArrayInternal() {
         return mxNDArrayEx;
     }
 
-    private long[] repeatsToMatchShape(Shape desiredShape) throws IllegalArgumentException {
+    private long[] repeatsToMatchShape(Shape desiredShape) {
         Shape curShape = getShape();
         int dimension = curShape.dimension();
         if (desiredShape.dimension() > dimension) {

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/convolutional/MxConv1D.java
Patch:
@@ -27,8 +27,9 @@
 import software.amazon.ai.util.PairList;
 
 public class MxConv1D extends MxNNBlock implements Conv1D {
-    private static final LayoutType[] EXPECTED_LAYOUT =
-            new LayoutType[] {LayoutType.BATCH, LayoutType.CHANNEL, LayoutType.WIDTH};
+    private static final LayoutType[] EXPECTED_LAYOUT = {
+        LayoutType.BATCH, LayoutType.CHANNEL, LayoutType.WIDTH
+    };
     private static final String LAYOUT_STRING = "NCW";
     private Shape kernel;
     private Shape stride;

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/recurrent/MxGRU.java
Patch:
@@ -28,8 +28,9 @@
 import software.amazon.ai.util.PairList;
 
 public class MxGRU extends MxNNBlock implements GRU {
-    private static final LayoutType[] EXPECTED_LAYOUT =
-            new LayoutType[] {LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL};
+    private static final LayoutType[] EXPECTED_LAYOUT = {
+        LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL
+    };
     private long stateSize;
     private float dropRate;
     private int numStackedLayers;

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/recurrent/MxLSTM.java
Patch:
@@ -28,8 +28,9 @@
 import software.amazon.ai.util.PairList;
 
 public class MxLSTM extends MxNNBlock implements LSTM {
-    private static final LayoutType[] EXPECTED_LAYOUT =
-            new LayoutType[] {LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL};
+    private static final LayoutType[] EXPECTED_LAYOUT = {
+        LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL
+    };
     private long stateSize;
     private float dropRate;
     private double lstmStateClipMin;

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/recurrent/MxRNN.java
Patch:
@@ -26,8 +26,9 @@
 import software.amazon.ai.util.PairList;
 
 public class MxRNN extends MxNNBlock implements RNN {
-    private static final LayoutType[] EXPECTED_LAYOUT =
-            new LayoutType[] {LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL};
+    private static final LayoutType[] EXPECTED_LAYOUT = {
+        LayoutType.TIME, LayoutType.BATCH, LayoutType.CHANNEL
+    };
 
     private long stateSize;
     private float dropRate;

File: mxnet/engine/src/test/java/org/apache/mxnet/engine/MxNDArrayTest.java
Patch:
@@ -79,7 +79,7 @@ public void testSet() {
                 });
         try (MxNDManager manager = MxNDManager.getSystemManager().newSubManager();
                 NDArray nd = manager.create(new Shape(3))) {
-            float[] input = new float[] {1.0f, 2.0f, 3.0f};
+            float[] input = {1.0f, 2.0f, 3.0f};
             nd.set(input);
             float[] fArr = fa[0];
             Assert.assertEquals(input, fArr);

File: repository/src/main/java/software/amazon/ai/repository/VersionRange.java
Patch:
@@ -97,7 +97,7 @@ public static VersionRange parse(String spec) {
         return new VersionRange(version, restrictions);
     }
 
-    private static Restriction parseRestriction(String spec) throws IllegalArgumentException {
+    private static Restriction parseRestriction(String spec) {
         boolean lowerBoundInclusive = spec.startsWith("[");
         boolean upperBoundInclusive = spec.endsWith("]");
 

File: tensorflow/engine/src/main/java/org/tensorflow/HelloWorld.java
Patch:
@@ -93,7 +93,7 @@ public NDList processInput(TranslatorContext ctx, BufferedImage img)
             byte[] data = ((DataBufferByte) img.getData().getDataBuffer()).getData();
             // ImageIO.read seems to produce BGR-encoded images, but the model expects RGB.
             bgr2rgb(data);
-            long[] shape = new long[] {BATCH_SIZE, img.getHeight(), img.getWidth(), CHANNELS};
+            long[] shape = {BATCH_SIZE, img.getHeight(), img.getWidth(), CHANNELS};
             NDArray array = ctx.getNDManager().create(data, new Shape(shape));
             NDList ndList = new NDList();
             ndList.add("image_tensor", array);

File: tensorflow/engine/src/main/java/org/tensorflow/engine/TfNDArray.java
Patch:
@@ -149,7 +149,7 @@ public void attachGradient() {}
 
     /** {@inheritDoc} */
     @Override
-    public NDArray getGradient() throws NullPointerException {
+    public NDArray getGradient() {
         return null;
     }
 
@@ -175,7 +175,7 @@ public void set(NDIndex index, Number value) {}
 
     /** {@inheritDoc} */
     @Override
-    public void setScalar(NDIndex index, Number value) throws IllegalArgumentException {}
+    public void setScalar(NDIndex index, Number value) {}
 
     /** {@inheritDoc} */
     @Override
@@ -724,7 +724,7 @@ public NDList split(int[] indices, int axis) {
 
     /** {@inheritDoc} */
     @Override
-    public NDList split(int sections, int axis) throws IllegalArgumentException {
+    public NDList split(int sections, int axis) {
         if (axis < 0 || axis > getShape().dimension()) {
             throw new IllegalArgumentException("Invalid axis value");
         }

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -196,7 +196,7 @@ public NDManager newBaseManager(Context context) {
      *
      * @param numpy True to use numpy mode
      */
-    private void setNumpyMode(boolean numpy) {
+    public void setNumpyMode(boolean numpy) {
         // Helper to avoid race condition with MxEngine initialization
         JnaUtils.setNumpyMode(numpy);
     }

File: integration/src/main/java/software/amazon/ai/integration/tests/DatasetTest.java
Patch:
@@ -18,7 +18,6 @@
 import java.util.stream.Collectors;
 import java.util.stream.LongStream;
 import java.util.stream.Stream;
-import org.apache.mxnet.jna.JnaUtils;
 import software.amazon.ai.integration.IntegrationTest;
 import software.amazon.ai.integration.exceptions.FailedTestException;
 import software.amazon.ai.integration.util.Assertions;
@@ -35,13 +34,11 @@
 public class DatasetTest {
     public static void main(String[] args) {
         // TODO remove this once NumpyMode is defualt
-        JnaUtils.setNumpyMode(true);
         String[] cmd = new String[] {"-c", DatasetTest.class.getName()};
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))
                                 .toArray(String[]::new));
-        JnaUtils.setNumpyMode(true);
     }
 
     @RunAsTest

File: integration/src/main/java/software/amazon/ai/integration/tests/GradientCollectorIntegrationTest.java
Patch:
@@ -16,7 +16,6 @@
 import java.util.Arrays;
 import java.util.stream.Stream;
 import org.apache.mxnet.engine.MxGradient;
-import org.apache.mxnet.jna.JnaUtils;
 import software.amazon.ai.Block;
 import software.amazon.ai.Parameter;
 import software.amazon.ai.SequentialBlock;
@@ -50,12 +49,10 @@ public class GradientCollectorIntegrationTest {
 
     public static void main(String[] args) {
         String[] cmd = new String[] {"-c", GradientCollectorIntegrationTest.class.getName()};
-        JnaUtils.setNumpyMode(true);
         new IntegrationTest()
                 .runTests(
                         Stream.concat(Arrays.stream(cmd), Arrays.stream(args))
                                 .toArray(String[]::new));
-        JnaUtils.setNumpyMode(false);
     }
 
     @RunAsTest

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayOtherOpTest.java
Patch:
@@ -282,7 +282,7 @@ public void testArgmax() throws FailedTestException {
                             },
                             new Shape(4, 5));
             NDArray argMax = original.argmax();
-            NDArray expected = manager.create(new float[] {9});
+            NDArray expected = manager.create(9f);
             Assertions.assertEquals(argMax, expected, "Argmax: Incorrect value");
 
             argMax = original.argmax(0, true);

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/Mnist.java
Patch:
@@ -102,7 +102,7 @@ private NDArray readData(Artifact.Item item, long length) throws IOException {
             }
 
             byte[] buf = Utils.toByteArray(is);
-            try (NDArray array = manager.create(new Shape(length, 28, 28), DataType.UINT8)) {
+            try (NDArray array = manager.create(new Shape(length, 28, 28, 1), DataType.UINT8)) {
                 array.set(buf);
                 return array.asType(DataType.FLOAT32, true);
             }

File: mxnet/engine/src/main/java/org/apache/mxnet/engine/MxNDArray.java
Patch:
@@ -1544,6 +1544,9 @@ public void waitAll() {
     /** {@inheritDoc} */
     @Override
     public String toString() {
+        if (isReleased()) {
+            return "This array is already closed";
+        }
         if (Utils.DEBUG) {
             return NDFormat.format(this);
         }

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/convolutional/MxConv1D.java
Patch:
@@ -23,6 +23,7 @@
 import software.amazon.ai.ndarray.types.LayoutType;
 import software.amazon.ai.ndarray.types.Shape;
 import software.amazon.ai.nn.convolutional.Conv1D;
+import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.PairList;
 
 public class MxConv1D extends MxNNBlock implements Conv1D {
@@ -59,7 +60,7 @@ public MxConv1D(
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS);
+            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
         }
     }
 

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/convolutional/MxConv2D.java
Patch:
@@ -23,6 +23,7 @@
 import software.amazon.ai.ndarray.types.LayoutType;
 import software.amazon.ai.ndarray.types.Shape;
 import software.amazon.ai.nn.convolutional.Conv2D;
+import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.PairList;
 
 public class MxConv2D extends MxNNBlock implements Conv2D {
@@ -61,7 +62,7 @@ public MxConv2D(
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS);
+            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
         }
     }
 

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/convolutional/MxConv3D.java
Patch:
@@ -23,6 +23,7 @@
 import software.amazon.ai.ndarray.types.LayoutType;
 import software.amazon.ai.ndarray.types.Shape;
 import software.amazon.ai.nn.convolutional.Conv3D;
+import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.PairList;
 
 public class MxConv3D extends MxNNBlock implements Conv3D {
@@ -65,7 +66,7 @@ public MxConv3D(
 
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (includeBias) {
-            bias = new Parameter("bias", this, ParameterType.BIAS);
+            bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
         }
     }
 

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/core/MxLinear.java
Patch:
@@ -23,6 +23,7 @@
 import software.amazon.ai.ndarray.types.LayoutType;
 import software.amazon.ai.ndarray.types.Shape;
 import software.amazon.ai.nn.core.Linear;
+import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.Pair;
 import software.amazon.ai.util.PairList;
 
@@ -38,7 +39,7 @@ public MxLinear(long outChannels, boolean bias) {
         this.outChannels = outChannels;
         weight = new Parameter("weight", this, ParameterType.WEIGHT);
         if (bias) {
-            this.bias = new Parameter("bias", this, ParameterType.BIAS);
+            this.bias = new Parameter("bias", this, ParameterType.BIAS, Initializer.ZEROS);
         }
     }
 

File: mxnet/engine/src/main/java/org/apache/mxnet/nn/norm/MxBatchNorm.java
Patch:
@@ -22,6 +22,7 @@
 import software.amazon.ai.ndarray.NDList;
 import software.amazon.ai.ndarray.types.Shape;
 import software.amazon.ai.nn.norm.BatchNorm;
+import software.amazon.ai.training.initializer.Initializer;
 import software.amazon.ai.util.PairList;
 
 public class MxBatchNorm extends MxNNBlock implements BatchNorm {
@@ -39,8 +40,8 @@ public MxBatchNorm(int axis, float epsilon, float momentum) {
         this.axis = axis;
         this.epsilon = epsilon;
         this.momentum = momentum;
-        runningMean = new Parameter("runningMean", this, ParameterType.OTHER);
-        runningVar = new Parameter("runningVar", this, ParameterType.OTHER);
+        runningMean = new Parameter("runningMean", this, ParameterType.OTHER, Initializer.ONES);
+        runningVar = new Parameter("runningVar", this, ParameterType.OTHER, Initializer.ONES);
     }
 
     /** {@inheritDoc} */

File: mxnet/model-zoo/src/main/java/org/apache/mxnet/zoo/cv/image_classification/Resnet.java
Patch:
@@ -84,7 +84,7 @@ public ZooModel<BufferedImage, List<Classification>> loadModel(Map<String, Strin
 
                     @Override
                     public NDList processInput(TranslatorContext ctx, BufferedImage input) {
-                        BufferedImage image = Images.centerCorp(input);
+                        BufferedImage image = Images.centerCrop(input);
                         image = Images.resizeImage(image, imageWidth, imageHeight);
                         FloatBuffer buffer = Images.toFloatBuffer(image);
                         NDArray array = ctx.getNDManager().create(buffer, dataDesc);
@@ -105,7 +105,7 @@ public List<Classification> processOutput(TranslatorContext ctx, NDList list)
                         NDArray sorted = array.argsort(-1, false);
                         NDArray top = sorted.get(":" + topK);
 
-                        float[] probabilities = array.softmax().toFloatArray();
+                        float[] probabilities = array.softmax(-1).toFloatArray();
                         int[] indices = top.toIntArray();
 
                         List<String> synset = model.getArtifact("synset.txt", Utils::readLines);

File: tensorflow/engine/src/main/java/org/tensorflow/HelloWorld.java
Patch:
@@ -47,7 +47,7 @@ public static void main(String[] args) throws IOException, TranslateException {
             System.out.println(a.getShape());
 
             System.out.println("Softmax:");
-            System.out.println(Arrays.toString(a.softmax().toFloatArray()));
+            System.out.println(Arrays.toString(a.softmax(-1).toFloatArray()));
 
             System.out.println("ZerosLike:");
             System.out.println(Arrays.toString(a.zerosLike().toFloatArray()));

File: mxnet/dataset/src/main/java/org/apache/mxnet/dataset/Datasets.java
Patch:
@@ -16,7 +16,7 @@
 
 public interface Datasets {
 
-    String MXNET_REPO_URL = "https://joule.s3.amazonaws.com/mlrepo";
+    String MXNET_REPO_URL = "https://joule.s3.amazonaws.com/mlrepo/";
 
     Repository REPOSITORY = Repository.newInstance("MxNet", MXNET_REPO_URL);
 

File: repository/src/main/java/software/amazon/ai/repository/MRL.java
Patch:
@@ -33,7 +33,7 @@ public MRL(Anchor baseAnchor, String groupId, String artifactId) {
     public URI toURI() {
         String groupIdPath = groupId.replace('.', '/');
         Anchor anchor = baseAnchor.resolve(groupIdPath, artifactId);
-        return URI.create(anchor.getPath());
+        return URI.create(anchor.getPath() + '/');
     }
 
     public Anchor getBaseAnchor() {

File: repository/src/main/java/software/amazon/ai/repository/Repository.java
Patch:
@@ -44,7 +44,9 @@ static Repository newInstance(String name, String url) {
 
     URI getBaseUri();
 
-    Artifact resolve(MRL mrk, String version, Map<String, String> filter) throws IOException;
+    Metadata locate(MRL mrl) throws IOException;
+
+    Artifact resolve(MRL mrl, String version, Map<String, String> filter) throws IOException;
 
     default InputStream openStream(Artifact.Item item) throws IOException {
         Artifact artifact = item.getArtifact();

File: repository/src/main/java/software/amazon/ai/repository/VersionRange.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-final class VersionRange {
+public final class VersionRange {
 
     private static final VersionRange ANY = new VersionRange(null, Collections.emptyList());
 

File: api/src/main/java/software/amazon/ai/ndarray/internal/NDArrayEx.java
Patch:
@@ -254,6 +254,7 @@ default NDArray softmaxCrossEntropyLoss(
             label = label.reshape(pred.getShape());
             loss = pred.mul(label).sum(new int[] {classAxis}).mul(-weight);
         }
+        // apply mean on all axes except the batchAxis
         int[] axes =
                 IntStream.range(0, loss.getShape().dimension())
                         .filter(axis -> axis != batchAxis)

File: integration/src/main/java/software/amazon/ai/integration/exceptions/FailedTestException.java
Patch:
@@ -13,6 +13,7 @@
 package software.amazon.ai.integration.exceptions;
 
 public class FailedTestException extends Exception {
+
     private static final long serialVersionUID = 1L;
 
     /**

File: api/src/main/java/software/amazon/ai/util/PairList.java
Patch:
@@ -225,10 +225,10 @@ public Stream<Pair<K, V>> stream() {
     }
 
     /**
-     * Returns @{code true} if this list contains the specified key.
+     * Returns {@code true} if this list contains the specified key.
      *
      * @param key key whose presence in this list is to be tested
-     * @return @{code true} if this list contains the specified key
+     * @return {@code true} if this list contains the specified key
      */
     public boolean contains(K key) {
         return keys.contains(key);

File: api/src/main/java/software/amazon/ai/util/Utils.java
Patch:
@@ -53,12 +53,12 @@ public static <T> int indexOf(T[] array, T value) {
     }
 
     /**
-     * Returns @{code true} if the {@code array} contains the specified element.
+     * Returns {@code true} if the {@code array} contains the specified element.
      *
      * @param array input array
      * @param value element whose presence in {@code array} is to be tested
      * @param <T> array type
-     * @return @{code true} if this list contains the specified element
+     * @return {@code true} if this list contains the specified element
      */
     public static <T> boolean contains(T[] array, T value) {
         return indexOf(array, value) >= 0;

File: api/src/main/java/software/amazon/ai/modality/cv/Images.java
Patch:
@@ -23,8 +23,8 @@
 import java.nio.FloatBuffer;
 import java.nio.file.Path;
 import java.util.List;
-import java.util.Random;
 import javax.imageio.ImageIO;
+import software.amazon.ai.util.RandomUtils;
 
 /** {@code Images} is an image processing utility that can load, reshape and convert images. */
 public final class Images {
@@ -98,7 +98,7 @@ public static void drawBoundingBox(BufferedImage image, List<DetectedObject> det
     }
 
     private static Color randomColor() {
-        return new Color(new Random().nextInt(255));
+        return new Color(RandomUtils.nextInt(255));
     }
 
     /**

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayElementArithmeticOpTest.java
Patch:
@@ -36,7 +36,7 @@ public void testAddScalar() throws FailedTestException {
             NDArray result;
             try (MxAutograd autograd = new MxAutograd()) {
                 autograd.attachGradient(lhs);
-                autograd.setRecording(true);
+                MxAutograd.setRecording(true);
                 result = NDArrays.add(lhs, 2);
                 autograd.backward((MxNDArray) result);
             }

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayOtherOpTest.java
Patch:
@@ -81,7 +81,7 @@ public void testNonZero() throws FailedTestException {
     }
 
     @RunAsTest
-    public void testArgsort() throws FailedTestException {}
+    public void testArgsort() {}
 
     @RunAsTest
     public void testSort() throws FailedTestException {
@@ -93,7 +93,7 @@ public void testSort() throws FailedTestException {
     }
 
     @RunAsTest
-    public void testSoftmax() throws FailedTestException {}
+    public void testSoftmax() {}
 
     @RunAsTest
     public void testCumsum() throws FailedTestException {
@@ -269,7 +269,7 @@ public void testMatrixMultiplication() throws FailedTestException {
             NDArray result;
             try (MxAutograd autograd = new MxAutograd()) {
                 autograd.attachGradient(lhs);
-                autograd.setRecording(true);
+                MxAutograd.setRecording(true);
                 result = NDArrays.mmul(lhs, rhs);
                 autograd.backward((MxNDArray) result);
             }

File: api/src/main/java/software/amazon/ai/ndarray/types/DataType.java
Patch:
@@ -100,6 +100,6 @@ public static DataType fromBuffer(Buffer data) {
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return format.toString().toLowerCase() + (8 * getNumOfBytes());
+        return name().toLowerCase();
     }
 }

File: mxnet/src/main/java/org/apache/mxnet/engine/MxOpParams.java
Patch:
@@ -39,7 +39,7 @@ public void setContext(Context context) {
 
     public void setDataType(DataType dataType) {
         if (dataType != null) {
-            setParam("dtype", dataType.getType());
+            setParam("dtype", MxDataType.toMx(dataType));
         }
     }
 

File: mxnet/src/main/java/org/apache/mxnet/jna/JnaUtils.java
Patch:
@@ -96,6 +96,9 @@ public static Map<String, FunctionInfo> getNdArrayFunctions() {
     }
 
     public static FunctionInfo op(String opName) {
+        if (!OPS.containsKey(opName)) {
+            throw new IllegalArgumentException("Unknown operator: " + opName);
+        }
         return OPS.get(opName);
     }
 

File: tensorflow/src/main/java/org/tensorflow/engine/TfNDArray.java
Patch:
@@ -76,7 +76,7 @@ public NDManager getManager() {
     /** {@inheritDoc} */
     @Override
     public DataType getDataType() {
-        return DataTypeMapper.getJoule(getTfDataType());
+        return TfDataType.fromTf(getTfDataType());
     }
 
     /** {@inheritDoc} */

File: api/src/test/java/software/amazon/ai/test/mock/MockNDArray.java
Patch:
@@ -95,10 +95,10 @@ public void backward(boolean retainGraph, boolean isTraining) {}
     public void backward(NDArray outGrad, boolean retainGraph, boolean isTraining) {}
 
     @Override
-    public void attachGrad() {}
+    public void attachGradient() {}
 
     @Override
-    public void attachGrad(GradReq gradReq, SparseFormat sparseFormat) {}
+    public void attachGradient(GradReq gradReq, SparseFormat sparseFormat) {}
 
     @Override
     public NDArray getGradient() {

File: integration/src/main/java/software/amazon/ai/integration/tests/MxAutoGradIntegrationTest.java
Patch:
@@ -24,7 +24,7 @@
 import software.amazon.ai.ndarray.types.Shape;
 
 public class MxAutoGradIntegrationTest extends AbstractTest {
-    //TODO use API level integration test once moved Autograd to API package
+    // TODO use API level integration test once moved Autograd to API package
 
     public static void main(String[] args) {
         new MxAutoGradIntegrationTest().runTest(args);

File: tensorflow/src/main/java/org/tensorflow/engine/TfNDArray.java
Patch:
@@ -165,11 +165,11 @@ public void backward(NDArray outGrad, boolean retainGraph, boolean isTraining) {
 
     /** {@inheritDoc} */
     @Override
-    public void attachGrad() {}
+    public void attachGradient() {}
 
     /** {@inheritDoc} */
     @Override
-    public void attachGrad(GradReq gradReq, SparseFormat sparseFormat) {}
+    public void attachGradient(GradReq gradReq, SparseFormat sparseFormat) {}
 
     /** {@inheritDoc} */
     @Override

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayReductionOpTest.java
Patch:
@@ -116,6 +116,6 @@ public void testTrace() throws FailedTestException {
         NDArray expect = manager.create(new Shape(2), new float[] {6f, 8f});
         Assertions.assertEquals(original, expect);
         original = manager.arange(24).reshape(new Shape(2, 2, 2, 3)).trace();
-        Assertions.assertStatement(original.getShape().equals(new Shape(2, 3)));
+        Assertions.assertTrue(original.getShape().equals(new Shape(2, 3)));
     }
 }

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayElementComparisonOpTest.java
Patch:
@@ -103,8 +103,7 @@ public void testGreaterThanAndLessThanEquals() throws FailedTestException {
     public void testLesserThanOrEqualToScalar() throws FailedTestException {
         NDArray array = manager.create(new Shape(1, 5), new float[] {1f, 2f, 2f, 4f, 5f});
         NDArray greater = NDArrays.lte(array, 2);
-        Assertions.assertTrue(
-                greater.nonzero() == 3, "lesser_equals_scalar: Incorrect comparison");
+        Assertions.assertTrue(greater.nonzero() == 3, "lesser_equals_scalar: Incorrect comparison");
     }
 
     @RunAsTest

File: integration/src/main/java/software/amazon/ai/integration/tests/NDArrayShapesManipulationOpTest.java
Patch:
@@ -61,7 +61,7 @@ public void testReshape() throws FailedTestException {
     @RunAsTest
     public void testExpandDim() throws FailedTestException {
         NDArray original = manager.create(new Shape(2), new int[] {1, 2});
-        Assertions.assertStatement(
+        Assertions.assertTrue(
                 Arrays.equals(
                         original.expandDims(0).getShape().getShape(), new Shape(1, 2).getShape()));
     }

File: integration/src/main/java/software/amazon/ai/integration/tests/MxNDArrayCreationTest.java
Patch:
@@ -31,7 +31,7 @@ public static void main(String[] args) {
 
     @RunAsTest
     public void testCreateCSRMatrix() throws FailedTestException {
-        try (NDManager factory = MxNDManager.getSystemManager().newSubManager()) {
+        try (NDManager factory = MxNDManager.newBaseManager().newSubManager()) {
             float[] input = new float[] {7, 8, 9};
             FloatBuffer buf = FloatBuffer.wrap(input);
             long[] indptr = new long[] {0, 2, 2, 3};
@@ -47,7 +47,7 @@ public void testCreateCSRMatrix() throws FailedTestException {
 
     @RunAsTest
     public void testCreateRowSparseMatrix() throws FailedTestException {
-        try (NDManager factory = MxNDManager.getSystemManager().newSubManager()) {
+        try (NDManager factory = MxNDManager.newBaseManager().newSubManager()) {
             float[] input = new float[] {1, 2, 3, 4, 5, 6};
             FloatBuffer buf = FloatBuffer.wrap(input);
             long[] indices = new long[] {0, 1, 3};
@@ -65,7 +65,7 @@ public void testCreateRowSparseMatrix() throws FailedTestException {
 
     @RunAsTest
     public void testCreateNDArrayAndConvertToSparse() throws FailedTestException {
-        try (NDManager factory = MxNDManager.getSystemManager().newSubManager()) {
+        try (NDManager factory = MxNDManager.newBaseManager().newSubManager()) {
             NDArray nd = factory.ones(new Shape(3, 5));
             NDArray sparse = nd.toSparse(SparseFormat.CSR);
             Assertions.assertStatement(sparse.getSparseFormat() == SparseFormat.CSR);

File: example/src/main/java/software/amazon/ai/example/util/Arguments.java
Patch:
@@ -111,7 +111,7 @@ public Path getModelDir() throws IOException {
             if (modelUrl == null) {
                 modelInfo = ModelInfo.getModel(modelName);
                 if (modelInfo == null) {
-                    throw new IOException("Please specify --model-path or --model-url");
+                    throw new IOException("Please specify --model-dir or --model-url");
                 }
             } else {
                 modelInfo = new ModelInfo(modelName, modelUrl);

File: api/src/test/java/software/amazon/ai/test/mock/MockModel.java
Patch:
@@ -84,6 +84,9 @@ public Model cast(DataType dataType) {
         return null;
     }
 
+    @Override
+    public void close() {}
+
     public void setArtifacts(Map<String, Object> artifacts) {
         this.artifacts = artifacts;
     }

File: tensorflow/src/main/java/org/tensorflow/engine/TfModel.java
Patch:
@@ -139,4 +139,7 @@ public InputStream getArtifactAsStream(String name) throws IOException {
     public Model cast(DataType dataType) {
         return null;
     }
+
+    @Override
+    public void close() {}
 }

File: mxnet/src/main/java/org/apache/mxnet/engine/CachedOp.java
Patch:
@@ -61,6 +61,7 @@ public CachedOp(
         this.inputNames = inputNames;
         inputNameMap = inputNames.toMap();
         this.factory = factory;
+        factory.attach(this);
     }
 
     /**

File: api/src/main/java/software/amazon/ai/Translator.java
Patch:
@@ -66,6 +66,9 @@
  *     }
  * }
  * </pre>
+ *
+ * @param <I> input type
+ * @param <O> output type
  */
 public interface Translator<I, O> {
 

File: api/src/main/java/software/amazon/ai/inference/Predictor.java
Patch:
@@ -36,6 +36,8 @@
  * }
  * </pre>
  *
+ * @param <I> input type
+ * @param <O> output type
  * @see Model
  * @see Translator
  */

File: api/src/main/java/software/amazon/ai/metric/Metric.java
Patch:
@@ -21,7 +21,7 @@ public class Metric {
     private long timestamp;
 
     /**
-     * Constructs a {@code Metric} instance with specified <code>metricName</code> and <code>
+     * Constructs a {@code Metric} instance with specified {@code metricName} and <code>
      * value</code>.
      *
      * @param metricName metric name
@@ -32,7 +32,7 @@ public Metric(String metricName, Number value) {
     }
 
     /**
-     * Constructs a {@code Metric} instance with specified <code>metricName</code>, <code>value
+     * Constructs a {@code Metric} instance with specified {@code metricName}, <code>value
      * </code> and {@code unit}.
      *
      * @param metricName metric name

File: api/src/main/java/software/amazon/ai/metric/Metrics.java
Patch:
@@ -44,7 +44,7 @@ public void addMetric(Metric metric) {
     }
 
     /**
-     * Adds {@code Metric} by metric <code>name</code> and <code>value</code>.
+     * Adds {@code Metric} by metric {@code name} and <code>value</code>.
      *
      * @param name metric name
      * @param value metric value
@@ -54,7 +54,7 @@ public void addMetric(String name, Number value) {
     }
 
     /**
-     * Adds {@code Metric} by metric <code>name</code>, <code>value</code> and <code>unit
+     * Adds {@code Metric} by metric {@code name}, <code>value</code> and <code>unit
      * </code> .
      *
      * @param name metric name
@@ -113,6 +113,7 @@ public double mean(String metricName) {
         return metric.stream().collect(Collectors.averagingLong(m -> m.getValue().longValue()));
     }
 
+    /** Comparator based on {@code Metric}'s value field. */
     private static final class MetricValueComparator implements Comparator<Metric>, Serializable {
 
         private static final long serialVersionUID = 1L;

File: api/src/main/java/software/amazon/ai/modality/Classification.java
Patch:
@@ -19,7 +19,7 @@ public class Classification {
     private double probability;
 
     /**
-     * Constructs a {@code Classification} instance with <code>className</code> and <code>
+     * Constructs a {@code Classification} instance with {@code className} and <code>
      * probability</code>.
      *
      * @param className the class name

File: api/src/main/java/software/amazon/ai/modality/cv/BoundingBox.java
Patch:
@@ -16,9 +16,9 @@
 public interface BoundingBox {
 
     /**
-     * Returns the bounding {@code Rectangle} of this <code>BoundingBox</code>.
+     * Returns the bounding {@code Rectangle} of this {@code BoundingBox}.
      *
-     * @return a new {@code Rectangle} for this <code>BoundingBox</code>.
+     * @return a new {@code Rectangle} for this {@code BoundingBox}.
      */
     Rectangle getBounds();
 

File: api/src/main/java/software/amazon/ai/modality/cv/DetectedObject.java
Patch:
@@ -20,7 +20,7 @@ public class DetectedObject extends Classification {
     private BoundingBox boundingBox;
 
     /**
-     * Constructs a {@code DetectedObject} instance with <code>className</code>, <code>
+     * Constructs a {@code DetectedObject} instance with {@code className}, <code>
      * probability</code> and {@code boundingBox}.
      *
      * @param className the class name

File: api/src/main/java/software/amazon/ai/modality/cv/PathIterator.java
Patch:
@@ -25,7 +25,7 @@ public interface PathIterator {
     /**
      * Tests if the iteration is complete.
      *
-     * @return {@code true} if all the segments have been read; <code>false</code> otherwise.
+     * @return {@code true} if all the segments have been read; {@code false} otherwise.
      */
     boolean hasNext();
 

File: api/src/main/java/software/amazon/ai/modality/cv/Point.java
Patch:
@@ -33,7 +33,7 @@ public Point(int x, int y) {
     }
 
     /**
-     * Returns the X coordinate of this {@code Point} in <code>double</code> precision.
+     * Returns the X coordinate of this {@code Point} in {@code double} precision.
      *
      * @return the X coordinate of this {@code Point}.
      */
@@ -42,7 +42,7 @@ public int getX() {
     }
 
     /**
-     * Returns the Y coordinate of this {@code Point} in <code>double</code> precision.
+     * Returns the Y coordinate of this {@code Point} in {@code double} precision.
      *
      * @return the Y coordinate of this {@code Point}.
      */

File: api/src/main/java/software/amazon/ai/modality/cv/Rectangle.java
Patch:
@@ -13,9 +13,9 @@
 package software.amazon.ai.modality.cv;
 
 /**
- * A {@code Rectangle} specifies an area in a coordinate space that is enclosed by the <code>
- * Rectangle</code> object's upper-left point {@link Point} in the coordinate space, its width, and
- * its height.
+ * A {@code Rectangle} specifies an area in a coordinate space that is enclosed by the {@code
+ * Rectangle} object's upper-left point {@link Point} in the coordinate space, its width, and its
+ * height.
  */
 public class Rectangle implements BoundingBox {
 

File: api/src/main/java/software/amazon/ai/ndarray/SparseNDArray.java
Patch:
@@ -13,7 +13,7 @@
 package software.amazon.ai.ndarray;
 
 /**
- * A class implementing a Sparse NDArray.
+ * A interface representing a Sparse NDArray.
  *
  * @see software.amazon.ai.ndarray.types.SparseFormat
  * @see <a href="https://software.intel.com/en-us/node/471374">Sparse Matrix Storage Formats</a>

File: mxnet/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -63,7 +63,7 @@ public MemoryUsage getGpuMemory(Context context) {
     @Override
     public Context defaultContext() {
         if (getGpuCount() > 0) {
-            return Context.gpu(0);
+            return Context.gpu();
         }
         return Context.cpu();
     }

File: api/src/main/java/software/amazon/ai/Context.java
Patch:
@@ -16,7 +16,7 @@
 import software.amazon.ai.engine.Engine;
 
 /**
- * The <code>Context</code> class provides the specified assignment for CPU/GPU processing on the
+ * The {@code Context} class provides the specified assignment for CPU/GPU processing on the
  * NDArray.
  *
  * <p>Users can use this to specify whether to load/compute the NDArray on CPU/GPU with deviceType
@@ -94,7 +94,7 @@ public static Context gpu(int deviceId) {
     }
 
     /**
-     * Gets the default context used in Engine
+     * Returns the default context used in Engine
      *
      * <p>default type is defined by whether the Deep Learning framework is recognizing GPUs
      * available on your machine. If there is no GPU avaiable, CPU will be used

File: api/src/main/java/software/amazon/ai/Model.java
Patch:
@@ -92,7 +92,7 @@ static Model loadModel(Path modelPath, String modelName, Map<String, String> opt
         return Engine.getInstance().loadModel(modelPath, modelName, options);
     }
     /**
-     * Gets the input descriptor of the model.
+     * Returns the input descriptor of the model.
      *
      * <p>It contains the information that can be extracted from the model, usually name, shape,
      * layout and DataType.
@@ -102,7 +102,7 @@ static Model loadModel(Path modelPath, String modelName, Map<String, String> opt
     DataDesc[] describeInput();
 
     /**
-     * Gets the output descriptor of the model.
+     * Returns the output descriptor of the model.
      *
      * <p>It contains the output information that can be obtained from the model
      *

File: api/src/main/java/software/amazon/ai/Translator.java
Patch:
@@ -15,8 +15,7 @@
 import software.amazon.ai.ndarray.NDList;
 
 /**
- * The <code>Translator</code> interface provides model pre-processing and postprocessing
- * functionality.
+ * The {@code Translator} interface provides model pre-processing and postprocessing functionality.
  *
  * <p>Users can use this in {@link software.amazon.ai.inference.Predictor} with input and output
  * objects specified. The following is an example of processing an image and creating classification

File: api/src/main/java/software/amazon/ai/TranslatorContext.java
Patch:
@@ -16,8 +16,8 @@
 import software.amazon.ai.ndarray.NDFactory;
 
 /**
- * The <code>TranslatorContext</code> interface provides a toolkit for pre-processing and
- * postprocessing functionality.
+ * The {@code TranslatorContext} interface provides a toolkit for pre-processing and postprocessing
+ * functionality.
  *
  * <p>You can use this in {@link Translator} to get Model information and create an NDArray
  */

File: api/src/main/java/software/amazon/ai/modality/Classification.java
Patch:
@@ -12,14 +12,14 @@
  */
 package software.amazon.ai.modality;
 
-/** <code>Classification</code> is the container to store the classification result. */
+/** {@code Classification} is the container to store the classification result. */
 public class Classification {
 
     private String className;
     private double probability;
 
     /**
-     * Constructs a <code>Classification</code> instance with <code>className</code> and <code>
+     * Constructs a {@code Classification} instance with <code>className</code> and <code>
      * probability</code>.
      *
      * @param className the class name

File: api/src/main/java/software/amazon/ai/modality/cv/DetectedObject.java
Patch:
@@ -20,8 +20,8 @@ public class DetectedObject extends Classification {
     private BoundingBox boundingBox;
 
     /**
-     * Constructs a <code>DetectedObject</code> instance with <code>className</code>, <code>
-     * probability</code> and <code>boundingBox</code>.
+     * Constructs a {@code DetectedObject} instance with <code>className</code>, <code>
+     * probability</code> and {@code boundingBox}.
      *
      * @param className the class name
      * @param probability the probability

File: api/src/main/java/software/amazon/ai/modality/cv/ImageTranslator.java
Patch:
@@ -22,17 +22,17 @@
 import software.amazon.ai.ndarray.types.Shape;
 
 /**
- * Built-in <code>Translator</code> that provides default image pre-processing.
+ * Built-in {@code Translator} that provides default image pre-processing.
  *
  * @param <T> output object type
  */
 public abstract class ImageTranslator<T> implements Translator<BufferedImage, T> {
 
     /**
-     * Processes the <code>BufferedImage</code> input and converts it to NDList.
+     * Processes the {@code BufferedImage} input and converts it to NDList.
      *
      * @param ctx toolkit that helps create input NDArray
-     * @param input <code>BufferedImage</code> input
+     * @param input {@code BufferedImage} input
      * @return {@link NDList}
      */
     @Override

File: api/src/main/java/software/amazon/ai/modality/cv/Images.java
Patch:
@@ -21,7 +21,7 @@
 import java.nio.file.Path;
 import javax.imageio.ImageIO;
 
-/** <code>Images</code> is an image processing utility that can load, reshape and convert images. */
+/** {@code Images} is an image processing utility that can load, reshape and convert images. */
 public final class Images {
 
     private Images() {}

File: api/src/main/java/software/amazon/ai/ndarray/Matrix.java
Patch:
@@ -254,15 +254,15 @@ public interface Matrix extends NDArray {
     NDArray getRow(long i);
 
     /**
-     * Gets a new NDArray comprised of the specified columns only.
+     * Returns a new NDArray comprised of the specified columns only.
      *
      * @param columns Columns to extract out of the current array
      * @return Array with only the specified columns
      */
     NDArray getColumns(int... columns);
 
     /**
-     * Gets a new NDArray comprised of the specified rows only.
+     * Returns a new NDArray comprised of the specified rows only.
      *
      * @param rows rows to extract from this array
      * @return Array with only the specified rows

File: api/src/main/java/software/amazon/ai/ndarray/NDArrays.java
Patch:
@@ -30,7 +30,7 @@ public static NDArray eq(NDArray a, NDArray b) {
     }
 
     /**
-     * Returns the boolean 'true' iff all elements in both the NDArrays are equal.
+     * Returns the boolean {@code true} iff all elements in both the NDArrays are equal.
      *
      * @param a the ndarray to compare.
      * @param b the ndarray to compare.
@@ -41,7 +41,7 @@ public static boolean equals(NDArray a, NDArray b) {
     }
 
     /**
-     * Returns the boolean 'true' iff all elements in the NDArray is equal to the Number
+     * Returns the boolean {@code true} iff all elements in the NDArray is equal to the Number
      *
      * @param a the ndarray to compare.
      * @param b the number to compare.

File: api/src/main/java/software/amazon/ai/ndarray/NDFactory.java
Patch:
@@ -111,7 +111,7 @@ public interface NDFactory extends AutoCloseable {
      * Creates and initialize an instance of {@link NDArray} with specified {@link DataDesc}.
      *
      * @param dataDesc the {@link DataDesc} of the {@link software.amazon.ai.ndarray.NDArray}
-     * @param data data to initialize the <code>NDArray</code>
+     * @param data data to initialize the {@code NDArray}
      * @return new instance of {@link NDArray}
      */
     NDArray create(DataDesc dataDesc, Buffer data);

File: api/src/main/java/software/amazon/ai/ndarray/NDList.java
Patch:
@@ -17,7 +17,7 @@
 import software.amazon.ai.util.PairList;
 
 /**
- * An <code>NDList</code> represents a sequence of {@link NDArray}s with names.
+ * An {@code NDList} represents a sequence of {@link NDArray}s with names.
  *
  * <p>Each {@link NDArray} in this list can optionally have a name. You can use the name to look up
  * NDArray in the NDList.

File: api/src/main/java/software/amazon/ai/ndarray/types/DataType.java
Patch:
@@ -52,15 +52,15 @@ public String getType() {
     /**
      * Checks whether it is a real data type.
      *
-     * @return true if it is a real type
+     * @return {@code true} if it is a real type
      */
     public boolean isReal() {
         return type.startsWith("float");
     }
     /**
      * Checks whether it is an integer data type.
      *
-     * @return true if it is an integer type
+     * @return {@code true} if it is an integer type
      */
     public boolean isInteger() {
         return type.startsWith("int") || type.startsWith("uint");

File: api/src/main/java/software/amazon/ai/util/PairList.java
Patch:
@@ -24,14 +24,14 @@ public class PairList<K, V> implements Iterable<Pair<K, V>> {
     private List<K> keys;
     private List<V> values;
 
-    /** Constructs an empty <code>PairList</code> with an default initial capacity. */
+    /** Constructs an empty {@code PairList} with an default initial capacity. */
     public PairList() {
         keys = new ArrayList<>();
         values = new ArrayList<>();
     }
 
     /**
-     * Constructs an empty <code>PairList</code> with the specified initial capacity.
+     * Constructs an empty {@code PairList} with the specified initial capacity.
      *
      * @param initialCapacity the initial capacity of the list
      * @throws IllegalArgumentException if the specified initial capacity is negative
@@ -42,7 +42,7 @@ public PairList(int initialCapacity) {
     }
 
     /**
-     * Constructs a <code>PairList</code> containing the elements of the specified keys and values.
+     * Constructs a {@code PairList} containing the elements of the specified keys and values.
      *
      * @param keys the key list whose elements are to be placed into this PairList
      * @param values the value list whose elements are to be placed into this PairList

File: api/src/test/java/software/amazon/ai/ContextTest.java
Patch:
@@ -25,7 +25,7 @@ public void testContext() {
         Assert.assertEquals(Context.gpu(), new Context("gpu", 0));
         Assert.assertEquals(Context.gpu(3), new Context("gpu", 3));
         // Assert.assertTrue(Context.cpu().equals(new Context("cpu", 0)));
-        Assert.assertFalse(Context.gpu().equals(Context.cpu()));
-        Assert.assertFalse(Context.cpu().equals(new Context("cpu", 1)));
+        Assert.assertNotEquals(Context.cpu(), Context.gpu());
+        Assert.assertNotEquals(new Context("cpu", 1), Context.cpu());
     }
 }

File: example/src/main/java/software/amazon/ai/example/util/BertDataParser.java
Patch:
@@ -34,9 +34,9 @@ public class BertDataParser {
     /**
      * Parse the Vocabulary to JSON files [PAD], [CLS], [SEP], [MASK], [UNK] are reserved tokens.
      *
-     * @param is the <code>InputStream</code> for the vocab.json
-     * @return instance of <code>BertDataParser</code>
-     * @throws IllegalStateException if failed read from <code>InputStream</code>
+     * @param is the {@code InputStream} for the vocab.json
+     * @return instance of {@code BertDataParser}
+     * @throws IllegalStateException if failed read from {@code InputStream}
      */
     public static BertDataParser parse(InputStream is) {
         try (Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8)) {

File: example/src/main/java/software/amazon/ai/example/util/LogUtils.java
Patch:
@@ -33,7 +33,7 @@ private LogUtils() {}
      * Returns sl4fj Logger instance.
      *
      * @param cls class of the logger
-     * @return <code>Logger</code> instance
+     * @return {@code Logger} instance
      */
     public static Logger getLogger(Class<?> cls) {
         return LoggerFactory.getLogger(cls);

File: mxnet/src/main/java/org/apache/mxnet/engine/CachedOp.java
Patch:
@@ -25,7 +25,7 @@
 import software.amazon.ai.util.PairList;
 
 /**
- * The <code>CachedOp</code> class provides the core functionality to execute a graph with MXNet.
+ * The {@code CachedOp} class provides the core functionality to execute a graph with MXNet.
  *
  * <p>Users are not recommended to interact with this class directly, use {@link
  * software.amazon.ai.inference.Predictor} instead. CachedOp is an operator that simplify the input

File: mxnet/src/main/java/org/apache/mxnet/engine/MxAutograd.java
Patch:
@@ -42,7 +42,7 @@ public static boolean setRecording(boolean isRecording) {
      * example, Dropout will drop inputs randomly when isTraining=True while simply passing through
      * if isTraining=False.
      *
-     * @param isTraining true if for training
+     * @param isTraining {@code true} if for training
      * @return the previous status before this set
      */
     public static boolean setTraining(boolean isTraining) {

File: mxnet/src/main/java/org/apache/mxnet/engine/MxModel.java
Patch:
@@ -38,7 +38,7 @@
 import software.amazon.ai.util.Utils;
 
 /**
- * <code>MxModel</code> is MXNet implementation of {@link Model}.
+ * {@code MxModel} is MXNet implementation of {@link Model}.
  *
  * <p>MxModel contains all methods in Model to load and process model. In addition, it provides
  * MXNet Specific functionality, such as getSymbol to obtain the Symbolic graph and getParameters to

File: mxnet/src/main/java/org/apache/mxnet/engine/MxPredictor.java
Patch:
@@ -26,7 +26,7 @@
 import software.amazon.ai.util.Pair;
 
 /**
- * <code>MxPredictor</code> is the MXNet implementation of {@link Predictor}.
+ * {@code MxPredictor} is the MXNet implementation of {@link Predictor}.
  *
  * <p>MxPredictor contains all methods in the Predictor class and MXNet specific implementations.
  *

File: api/src/main/java/software/amazon/ai/ndarray/NDArrays.java
Patch:
@@ -404,7 +404,7 @@ public static NDArray muli(NDArray a, NDArray b) {
     }
 
     /**
-     * <<<<<<< HEAD Raises the power of each element in the ndarray
+     * HEAD Raises the power of each element in the ndarray.
      *
      * @param a ndarray to be operated on
      * @param n the number to raise the power to

File: example/src/main/java/software/amazon/ai/example/BertQaInferenceExample.java
Patch:
@@ -143,9 +143,9 @@ public NDList processInput(TranslatorContext ctx, QAInput input) {
 
             int seqLength = input.getSeqLength();
             NDFactory factory = ctx.getNDFactory();
-            NDArray data0 = factory.create(new DataDesc(new Shape(1, seqLength), DataType.INT32));
+            NDArray data0 = factory.create(new DataDesc(new Shape(1, seqLength)));
             NDArray data1 = factory.create(new DataDesc(new Shape(1, seqLength)));
-            NDArray data2 = factory.create(new DataDesc(new Shape(1), DataType.INT32));
+            NDArray data2 = factory.create(new DataDesc(new Shape(1)));
 
             data0.set(indexesFloat);
             data1.set(types);

File: mxnet/src/main/java/org/apache/mxnet/engine/MxNDArray.java
Patch:
@@ -1581,6 +1581,7 @@ private void dump(StringBuilder sb, int depth) {
             int limit = Math.min(getShape().head(), MAX_PRINT_ITEMS);
             ByteBuffer buf = toByteBuffer().slice();
             buf.limit(limit * getDataType().getNumOfBytes());
+            buf.order(ByteOrder.LITTLE_ENDIAN);
             sb.append(Utils.toCharSequence(buf, getDataType()));
             int remaining = getShape().head() - limit;
             if (remaining > 0) {

File: api/src/test/java/com/amazon/ai/ContextTest.java
Patch:
@@ -20,9 +20,9 @@ public class ContextTest {
 
     @Test
     public void testContext() {
-        Context ctx = new Context("GPU", 3);
+        Context ctx = new Context("gpu", 3);
         Assert.assertEquals(ctx, Context.gpu(3));
-        Assert.assertEquals(Context.cpu(), new Context("CPU", 0));
-        Assert.assertEquals(Context.gpu(), new Context("GPU", 0));
+        Assert.assertEquals(Context.cpu(), new Context("cpu", 0));
+        Assert.assertEquals(Context.gpu(), new Context("gpu", 0));
     }
 }

File: mxnet/src/main/java/org/apache/mxnet/engine/MxNDArray.java
Patch:
@@ -334,6 +334,7 @@ public NDArray argsort(int axis, boolean ascending) {
         MxOpParams params = new MxOpParams();
         params.addParam("axis", axis);
         params.addParam("is_ascend", ascending);
+        params.setDataType(DataType.INT32);
         return factory.invoke("argsort", this, params);
     }
 

File: example/src/main/java/com/amazon/ai/example/GenericInferenceExample.java
Patch:
@@ -111,7 +111,7 @@ public List<DetectedObject> processOutput(TranslatorContext ctx, NDList list)
             NDArray top = sorted.slice(0, topK);
 
             float[] probabilities = nd.toFloatArray();
-            float[] indices = top.toFloatArray();
+            int[] indices = top.toIntArray();
 
             String[] synset;
             try {
@@ -120,7 +120,7 @@ public List<DetectedObject> processOutput(TranslatorContext ctx, NDList list)
                 throw new TranslateException(e);
             }
             for (int i = 0; i < topK; ++i) {
-                int index = (int) indices[i];
+                int index = indices[i];
                 String className = synset[index];
                 DetectedObject output = new DetectedObject(className, probabilities[index], null);
                 ret.add(output);

File: mxnet/src/main/java/org/apache/mxnet/engine/MxAutograd.java
Patch:
@@ -42,8 +42,8 @@ public static boolean setRecording(boolean isRecording) {
      * example, Dropout will drop inputs randomly when isTraining=True while simply passing through
      * if isTraining=False.
      *
-     * @param isTraining
-     * @return
+     * @param isTraining true if for training
+     * @return the previous status before this set
      */
     public static boolean setTraining(boolean isTraining) {
         return JnaUtils.autogradSetTraining(isTraining);

File: mxnet/src/main/java/org/apache/mxnet/jna/JnaUtils.java
Patch:
@@ -17,7 +17,6 @@
 import com.amazon.ai.ndarray.types.DataType;
 import com.amazon.ai.ndarray.types.Shape;
 import com.amazon.ai.ndarray.types.SparseFormat;
-import com.amazon.ai.util.Pair;
 import com.amazon.ai.util.PairList;
 import com.sun.jna.Memory;
 import com.sun.jna.Native;

File: mxnet/src/main/java/org/apache/mxnet/engine/MxPredictor.java
Patch:
@@ -49,7 +49,6 @@ public class MxPredictor<I, O> implements Predictor<I, O> {
         this.translator = translator;
         this.context = context;
         cachedOp = JnaUtils.createCachedOp(model, factory);
-        metrics = new Metrics();
     }
 
     /** {@inheritDoc} */

File: mxnet/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -85,7 +85,7 @@ public Model loadModel(File modelPath, String modelName, int epoch) throws IOExc
         if (modelPath.isDirectory()) {
             modelDir = modelPath;
         } else {
-            modelDir = modelPath.getParentFile();
+            modelDir = modelPath.getCanonicalFile().getParentFile();
         }
         String modelPrefix = new File(modelDir, modelName).getAbsolutePath();
         if (epoch == -1) {

File: mxnet/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -103,6 +103,9 @@ public Model loadModel(File modelPath, String modelName, int epoch) throws IOExc
                             .filter(Objects::nonNull)
                             .sorted()
                             .collect(Collectors.toList());
+            if (checkpoints.isEmpty()) {
+                throw new IOException("Parameter files not found: " + modelPrefix + "-0001.params");
+            }
             epoch = checkpoints.get(checkpoints.size() - 1);
         }
 

File: api/src/main/java/com/amazon/ai/ndarray/NDArray.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.List;
 import java.util.concurrent.locks.Condition;
 
+/** An interface represents n-dimensional array. */
 public interface NDArray extends AutoCloseable {
 
     /**

File: api/src/main/java/com/amazon/ai/engine/Engine.java
Patch:
@@ -111,7 +111,7 @@ public static Engine getInstance() {
      * @param translator preprocessing and postprocessing helper class
      * @param context context to work on inference
      * @param <I> Input Object for the Predictor
-     * @param <O> Output Object for the Predicor
+     * @param <O> Output Object for the Predictor
      * @return Predictor
      */
     public abstract <I, O> Predictor<I, O> newPredictor(

File: example/src/main/java/com/amazon/ai/example/util/BertDataParser.java
Patch:
@@ -18,6 +18,7 @@
  * This is the Utility for pre-processing the data for Bert Model You can use this utility to parse
  * Vocabulary JSON into Java Array and Dictionary, clean and tokenize sentences and pad the text
  */
+@SuppressWarnings("unused")
 public class BertDataParser {
 
     private static final Gson GSON = new GsonBuilder().create();

File: mxnet/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.IOException;
 import java.nio.file.Files;
 import java.util.List;
+import java.util.Objects;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
@@ -90,7 +91,7 @@ public Model loadModel(File modelPath, String modelName, int epoch) throws IOExc
                                         }
                                         return null;
                                     })
-                            .filter(e -> e != null)
+                            .filter(Objects::nonNull)
                             .sorted()
                             .collect(Collectors.toList());
             epoch = checkpoints.get(checkpoints.size() - 1);

File: api/src/main/java/com/amazon/ai/ndarray/NDArray.java
Patch:
@@ -56,6 +56,8 @@ public interface NDArray extends AutoCloseable {
 
     NDArray asInContext(Context ctx, boolean copy);
 
+    NDArray asType(DataType dtype, boolean copy);
+
     void waitToRead();
 
     void waitToWrite();

File: mxnet/src/main/java/org/apache/mxnet/engine/CachedOp.java
Patch:
@@ -57,7 +57,8 @@ public NDList forward(NDList list) {
         // check the input, set as Shape(1) by default
         for (Pair<String, Integer> pair : inputNames) {
             if (inputNDArray[pair.getValue()] == null) {
-                logger.info(
+                // TODO: Do we need to set default to the input?
+                logger.warn(
                         "Input "
                                 + pair.getKey()
                                 + " not found, set NDArray to Shape(1) by default");

File: api/src/main/java/com/amazon/ai/TranslatorContext.java
Patch:
@@ -25,5 +25,6 @@ public interface TranslatorContext extends AutoCloseable {
 
     Metrics getMetrics();
 
+    @Override
     void close();
 }

File: api/src/main/java/com/amazon/ai/ndarray/NDFactory.java
Patch:
@@ -41,5 +41,6 @@ NDArray create(
 
     void detach(AutoCloseable resource);
 
+    @Override
     void close();
 }

File: example/src/main/java/com/amazon/ai/example/SsdExample.java
Patch:
@@ -45,6 +45,7 @@ public static void main(String[] args) {
         new SsdExample().runExample(args);
     }
 
+    @Override
     public void predict(File modelDir, String modelName, BufferedImage img, int iteration)
             throws IOException {
         Model model = Model.loadModel(modelDir, modelName);

File: example/src/main/java/com/amazon/ai/example/util/AbstractExample.java
Patch:
@@ -30,8 +30,6 @@ public abstract class AbstractExample {
 
     private static final Logger logger = LogUtils.getLogger(AbstractExample.class);
 
-    public AbstractExample() {}
-
     public void runExample(String[] args) {
         Options options = Arguments.getOptions();
         try {

File: jnarator/src/main/java/org/apache/mxnet/jnarator/JnaGenerator.java
Patch:
@@ -57,6 +57,7 @@ public void init(String output) throws IOException {
         className = AntlrUtils.toCamelCase(libName) + "Library";
     }
 
+    @SuppressWarnings("PMD.UseConcurrentHashMap")
     public void writeStructure(Map<String, List<TypeDefine>> structMap) throws IOException {
         for (Map.Entry<String, List<TypeDefine>> entry : structMap.entrySet()) {
             String name = entry.getKey();

File: jnarator/src/main/java/org/apache/mxnet/jnarator/Main.java
Patch:
@@ -13,8 +13,9 @@
 package org.apache.mxnet.jnarator;
 
 import java.io.File;
-import java.io.FileInputStream;
 import java.io.InputStream;
+import java.nio.file.Files;
+import java.nio.file.Paths;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
@@ -59,7 +60,7 @@ public static void main(String[] args) {
                     logger.error("mapping file does not exists: " + mappingFile);
                     System.exit(-1); // NOPMD
                 }
-                try (InputStream in = new FileInputStream(mappingFile)) {
+                try (InputStream in = Files.newInputStream(Paths.get(mappingFile))) {
                     mapping.load(in);
                 }
             }

File: jnarator/src/main/java/org/apache/mxnet/jnarator/TypeDefine.java
Patch:
@@ -23,8 +23,6 @@ public class TypeDefine {
     private String value;
     private List<Parameter> parameters = new ArrayList<>();
 
-    public TypeDefine() {}
-
     public DataType getDataType() {
         return dataType;
     }

File: mxnet/src/main/java/org/apache/mxnet/engine/MxModel.java
Patch:
@@ -23,10 +23,10 @@
 import java.io.File;
 import java.io.IOException;
 import java.nio.file.Files;
-import java.util.HashMap;
 import java.util.List;
 import java.util.ListIterator;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import org.apache.mxnet.jna.JnaUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -182,7 +182,7 @@ public String[] getSynset() {
     public DataDesc[] describeInput() {
         if (inputData == null) {
             String[] allNames = symbol.getAllNames();
-            Map<String, Integer> map = new HashMap<>(allNames.length * 3 / 2);
+            Map<String, Integer> map = new ConcurrentHashMap<>(allNames.length * 3 / 2);
             int index = 0;
             for (String name : allNames) {
                 map.put(name, index++);

File: mxnet/src/main/java/org/apache/mxnet/nn/MxNNIndex.java
Patch:
@@ -6,6 +6,9 @@
 import org.apache.mxnet.nn.core.MxLinear;
 
 public class MxNNIndex extends NNIndex {
+
+    /** {@inheritDoc} */
+    @Override
     public Linear linear(int units, int inUnits, NDFactory factory) {
         return new MxLinear(units, inUnits, factory);
     }

File: mxnet/src/main/java/org/apache/mxnet/jna/JnaUtils.java
Patch:
@@ -1370,9 +1370,9 @@ int MXNDArrayCreateFromSharedMem(int shared_pid, int shared_id, IntBuffer shape,
     //////////////////////////////////
 
     /**
-     * Method to create the cached op Flags:
-     * data_indices : [0, 2, 4] Used to label input location
+     * Method to create the cached op Flags: data_indices : [0, 2, 4] Used to label input location
      * param_indices : [1, 3] Used to label param location
+     *
      * @param model model that loaded in the backend
      * @param factory NDFactory to create NDArray
      * @return CachedOp for inference

File: mxnet/src/main/java/org/apache/mxnet/engine/CachedOp.java
Patch:
@@ -82,11 +82,11 @@ public static CachedOp loadModel(MxNDFactory factory, String prefix, int epoch)
             }
         }
         // Creating CachedOp
-        String[] keys = new String[] {"data_indices", "param_indices", "static_alloc", "static_shape"};
+        String[] keys =
+                new String[] {"data_indices", "param_indices", "static_alloc", "static_shape"};
         String[] values =
                 new String[] {
-                    Arrays.toString(dataIndices), Arrays.toString(paramIndices),
-                        "1", "1"
+                    Arrays.toString(dataIndices), Arrays.toString(paramIndices), "1", "1"
                 };
         if (logger.isDebugEnabled()) {
             logger.debug("keys: {}", Arrays.toString(keys));

File: mxnet/src/main/java/org/apache/mxnet/engine/MxEngine.java
Patch:
@@ -34,7 +34,7 @@ public class MxEngine extends Engine {
 
     @Override
     public int getGpuCount() {
-        return 0;
+        return JnaUtils.getGpuCount();
     }
 
     @Override

File: api/src/main/java/com/amazon/ai/TranslatorContext.java
Patch:
@@ -22,5 +22,5 @@ public interface TranslatorContext extends AutoCloseable {
 
     NDFactory getNDFactory();
 
-    public void close();
+    void close();
 }

File: mxnet/src/main/java/org/apache/mxnet/engine/MxModel.java
Patch:
@@ -95,8 +95,8 @@ public static MxModel loadModel(MxNDFactory factory, String prefix, int epoch)
                 throw new IllegalStateException("Unknown parameter: " + pair[0]);
             }
         }
-        PairList<String, MxNDArray> argParams = new PairList<>(argParamNames, argParamData);
-        PairList<String, MxNDArray> auxParams = new PairList<>(auxParamNames, auxParamData);
+        PairList<String, MxNDArray> argParams = PairList.fromList(argParamNames, argParamData);
+        PairList<String, MxNDArray> auxParams = PairList.fromList(auxParamNames, auxParamData);
 
         String[] synset = loadSynset(synsetFile);
         String[] stateNames = JnaUtils.readLines(new File(stateFile)).toArray(new String[0]);

File: mxnet/src/main/java/org/apache/mxnet/engine/MxNDArray.java
Patch:
@@ -156,7 +156,9 @@ public void set(Buffer data) {
     @Override
     public void set(List<Float> data) {
         int size = data.size();
-        FloatBuffer output = ByteBuffer.allocateDirect(size * 4).asFloatBuffer();
+        FloatBuffer output = ByteBuffer.allocateDirect(size * 4)
+                .order(ByteOrder.LITTLE_ENDIAN)
+                .asFloatBuffer();
         for (Float v : data) {
             output.put(v);
         }

File: mxnet/src/main/java/org/apache/mxnet/engine/Symbol.java
Patch:
@@ -296,16 +296,16 @@ public MxExecutor[] simpleBind(
             MxNDArray[] argArray = new MxNDArray[inArgSize];
             MxNDArray[] gradArray = new MxNDArray[inArgSize];
             MxNDArray[] dataArray = new MxNDArray[inputArgNames.length];
-            int dataIdx = 0;
             for (int j = 0; j < inArgSize; ++j) {
                 argArray[j] = new MxNDArray(alloc, inArgsPointers[j]);
 
                 String paramName = argParams[j];
 
                 MxNDArray param = argParamMap.get(paramName);
                 if (param == null) {
-                    if (Utils.contains(inputArgNames, paramName)) {
-                        dataArray[dataIdx++] = argArray[j];
+                    int dataIdx = Utils.indexOf(inputArgNames, paramName);
+                    if (dataIdx >= 0) {
+                        dataArray[dataIdx] = argArray[j];
                     }
                 } else {
                     param.copyTo(argArray[j]);

File: core/src/main/java/com/amazon/ai/util/PairList.java
Patch:
@@ -33,7 +33,7 @@ public PairList(K[] keys, V[] values) {
 
     @SuppressWarnings("unchecked")
     public PairList(List<K> keys, List<V> values) {
-        this((K[]) keys.toArray(), (V[]) values.toArray());
+        this((K[]) keys.toArray(), (V[]) values.toArray()); // NOPMD
     }
 
     public int size() {

File: core/src/main/java/org/apache/mxnet/ModuleApiTesting.java
Patch:
@@ -40,6 +40,7 @@
 import org.apache.mxnet.model.Shape;
 import org.apache.mxnet.types.DataType;
 
+@SuppressWarnings("PMD.SystemPrintln")
 public final class ModuleApiTesting {
 
     private ModuleApiTesting() {}
@@ -87,7 +88,7 @@ public static void main(String[] args) {
             FloatBuffer data = Image.toDirectBuffer(image);
 
             long init = System.nanoTime();
-            System.out.println("Loading native library: " + MxnetLibrary.JNA_LIBRARY_NAME);
+            System.out.println("Loading native library: " + MxnetLibrary.JNA_NATIVE_LIB.getName());
             long loaded = System.nanoTime();
             System.out.printf("loadlibrary = %.3f ms.%n", (loaded - init) / 1000000f);
 

File: core/src/main/java/org/apache/mxnet/PredictApiTesting.java
Patch:
@@ -37,6 +37,7 @@
 import org.apache.mxnet.model.Shape;
 import org.apache.mxnet.types.DataType;
 
+@SuppressWarnings("PMD.SystemPrintln")
 public final class PredictApiTesting {
 
     private PredictApiTesting() {}
@@ -96,7 +97,7 @@ public static void main(String[] args) {
             FloatBuffer data = Image.toDirectBuffer(image);
 
             long init = System.nanoTime();
-            System.out.println("Loading native library: " + MxnetLibrary.JNA_LIBRARY_NAME);
+            System.out.println("Loading native library: " + MxnetLibrary.JNA_NATIVE_LIB.getName());
             long loaded = System.nanoTime();
             System.out.printf("loadlibrary = %.3f ms.%n", (loaded - init) / 1000000f);
 

File: core/src/main/java/org/apache/mxnet/model/Module.java
Patch:
@@ -23,7 +23,7 @@
 
 public class Module implements AutoCloseable {
 
-    private static final Logger logger = LoggerFactory.getLogger(Module.class);
+    static final Logger logger = LoggerFactory.getLogger(Module.class);
 
     private MxExecutor[] executors;
     private boolean forTraining;

File: core/src/main/java/org/apache/mxnet/model/NdArray.java
Patch:
@@ -83,7 +83,7 @@ public NdArray(
                 null,
                 shape,
                 DataType.FLOAT32,
-                JnaUtils.createNdArray(context, shape, dataType, shape.dimension(), false));
+                JnaUtils.createNdArray(context, shape, dataType, shape.dimension(), delay));
     }
 
     public DataType getDataType() {
@@ -254,7 +254,7 @@ private void dump(StringBuilder sb, int depth) {
     }
 
     public String dump() {
-        StringBuilder sb = new StringBuilder();
+        StringBuilder sb = new StringBuilder(200);
         sb.append("ND: ")
                 .append(getShape())
                 .append(' ')

File: core/src/main/java/org/apache/mxnet/model/Symbol.java
Patch:
@@ -236,7 +236,7 @@ public MxExecutor[] simpleBind(
                 sharedArgNames.add(arg);
             }
         }
-        String[] sharedArgParams = sharedArgNames.toArray(new String[0]);
+        String[] sharedArgParams = sharedArgNames.toArray(new String[0]); // NOPMD
 
         IntBuffer sharedBufferLen = IntBuffer.allocate(1);
         sharedBufferLen.put(0, 0);

