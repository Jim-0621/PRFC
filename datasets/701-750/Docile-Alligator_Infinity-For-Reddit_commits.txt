File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -48,6 +48,7 @@
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.livefront.bridge.Bridge;
 
+import ml.docilealligator.infinityforreddit.readpost.ReadPostsUtils;
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 
@@ -1156,7 +1157,8 @@ public void onActivityResult(int requestCode, int resultCode, @Nullable Intent d
     private void tryMarkingPostAsRead() {
         if (mMarkPostsAsRead && mPost != null && !mPost.isRead()) {
             mPost.markAsRead();
-            InsertReadPost.insertReadPost(mRedditDataRoomDatabase, mExecutor, activity.accountName, mPost.getId());
+            int readPostsLimit = ReadPostsUtils.GetReadPostsLimit(activity.accountName, mPostHistorySharedPreferences);
+            InsertReadPost.insertReadPost(mRedditDataRoomDatabase, mExecutor, activity.accountName, mPost.getId(), readPostsLimit);
             EventBus.getDefault().post(new PostUpdateEventToPostList(mPost, postListPosition));
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/HistoryPostPagingSource.java
Patch:
@@ -20,6 +20,7 @@
 import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.postfilter.PostFilter;
+import ml.docilealligator.infinityforreddit.readpost.NullReadPostsList;
 import ml.docilealligator.infinityforreddit.readpost.ReadPost;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import retrofit2.Call;
@@ -92,7 +93,7 @@ public LoadResult<String, Post> transformData(List<ReadPost> readPosts) {
             Response<String> response = historyPosts.execute();
             if (response.isSuccessful()) {
                 String responseString = response.body();
-                LinkedHashSet<Post> newPosts = ParsePost.parsePostsSync(responseString, -1, postFilter, null);
+                LinkedHashSet<Post> newPosts = ParsePost.parsePostsSync(responseString, -1, postFilter, NullReadPostsList.getInstance());
                 if (newPosts == null) {
                     return new LoadResult.Error<>(new Exception("Error parsing posts"));
                 } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -386,6 +386,8 @@ public static boolean canShowEmote(int embeddedMediaType) {
 
     public static final String POST_HISTORY_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.post_history";
     public static final String MARK_POSTS_AS_READ_BASE = "_mark_posts_as_read";
+    public static final String READ_POSTS_LIMIT_ENABLED = "_read_posts_limit_enabled";
+    public static final String READ_POSTS_LIMIT = "_read_posts_limit";
     public static final String MARK_POSTS_AS_READ_AFTER_VOTING_BASE = "_mark_posts_as_read_after_voting";
     public static final String MARK_POSTS_AS_READ_ON_SCROLL_BASE = "_mark_posts_as_read_on_scroll";
     public static final String HIDE_READ_POSTS_AUTOMATICALLY_BASE = "_hide_read_posts_automatically";

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostPollActivity.java
Patch:
@@ -410,6 +410,7 @@ protected void applyCustomTheme() {
         binding.postTitleEditTextPostPollActivity.setHintTextColor(secondaryTextColor);
         binding.postContentEditTextPostPollActivity.setTextColor(primaryTextColor);
         binding.postContentEditTextPostPollActivity.setHintTextColor(secondaryTextColor);
+        binding.votingLengthTextViewPostPollActivity.setTextColor(secondaryTextColor);
         binding.option1TextInputLayoutPostPollActivity.setBoxStrokeColor(primaryTextColor);
         binding.option1TextInputLayoutPostPollActivity.setDefaultHintTextColor(ColorStateList.valueOf(primaryTextColor));
         binding.option1TextInputLayoutEditTextPostPollActivity.setTextColor(primaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -118,7 +118,7 @@ public class PostPagingSource extends ListenableFuturePagingSource<String, Post>
         this.sharedPreferences = sharedPreferences;
         this.postFeedScrolledPositionSharedPreferences = postFeedScrolledPositionSharedPreferences;
         if (path.endsWith("/")) {
-            multiRedditPath = path.substring(0, multiRedditPath.length() - 1);
+            multiRedditPath = path.substring(0, path.length() - 1);
         } else {
             multiRedditPath = path;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -476,6 +476,8 @@ public Fragment getItem(int position) {
                     bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, false);
                     bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, isThingSelectionMode);
                     bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_EXTRA_CLEAR_SELECTION, isThingSelectionMode);
+                    bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_PROFILE_IMAGE_URL,
+                            mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_IMAGE_URL, null));
                     fragment.setArguments(bundle);
                     return fragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -14,14 +14,12 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.media.MediaScannerConnection;
-import android.net.NetworkCapabilities;
 import android.net.NetworkRequest;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Environment;
 import android.os.PersistableBundle;
 import android.provider.MediaStore;
-import android.util.Log;
 
 import androidx.core.app.NotificationChannelCompat;
 import androidx.core.app.NotificationCompat;
@@ -89,7 +87,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadMediaService.class))
                     .setUserInitiated(true)
-                    .setRequiredNetwork(new NetworkRequest.Builder().addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET).build())
+                    .setRequiredNetwork(new NetworkRequest.Builder().clearCapabilities().build())
                     .setEstimatedNetworkBytes(0, contentEstimatedBytes + 500)
                     .setExtras(extras)
                     .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -18,7 +18,6 @@
 import android.media.MediaFormat;
 import android.media.MediaMuxer;
 import android.media.MediaScannerConnection;
-import android.net.NetworkCapabilities;
 import android.net.NetworkRequest;
 import android.net.Uri;
 import android.os.Build;
@@ -97,7 +96,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadRedditVideoService.class))
                     .setUserInitiated(true)
-                    .setRequiredNetwork(new NetworkRequest.Builder().addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET).build())
+                    .setRequiredNetwork(new NetworkRequest.Builder().clearCapabilities().build())
                     .setEstimatedNetworkBytes(0, contentEstimatedBytes + 500)
                     .setExtras(extras)
                     .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/EditProfileService.java
Patch:
@@ -8,7 +8,6 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.net.NetworkCapabilities;
 import android.net.NetworkRequest;
 import android.net.Uri;
 import android.os.Build;
@@ -77,7 +76,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, EditProfileService.class))
                     .setUserInitiated(true)
-                    .setRequiredNetwork(new NetworkRequest.Builder().addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET).build())
+                    .setRequiredNetwork(new NetworkRequest.Builder().clearCapabilities().build())
                     .setEstimatedNetworkBytes(0, contentEstimatedBytes + 500)
                     .setExtras(extras)
                     .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/SubmitPostService.java
Patch:
@@ -8,7 +8,6 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.graphics.Bitmap;
-import android.net.NetworkCapabilities;
 import android.net.NetworkRequest;
 import android.net.Uri;
 import android.os.Build;
@@ -123,9 +122,8 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, SubmitPostService.class))
                     .setUserInitiated(true)
-                    .setRequiredNetwork(new NetworkRequest.Builder().addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET).build())
+                    .setRequiredNetwork(new NetworkRequest.Builder().clearCapabilities().build())
                     .setEstimatedNetworkBytes(0, contentEstimatedBytes + 500)
-                    .setOverrideDeadline(0)
                     .setExtras(extras)
                     .build();
         } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -95,6 +95,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadMediaService.class))
+                    .setOverrideDeadline(0)
                     .setExtras(extras)
                     .build();
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -103,6 +103,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadRedditVideoService.class))
+                    .setOverrideDeadline(0)
                     .setExtras(extras)
                     .build();
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/EditProfileService.java
Patch:
@@ -83,6 +83,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, EditProfileService.class))
+                    .setOverrideDeadline(0)
                     .setExtras(extras)
                     .build();
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/SubmitPostService.java
Patch:
@@ -129,6 +129,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, SubmitPostService.class))
+                    .setOverrideDeadline(0)
                     .setExtras(extras)
                     .build();
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SearchActivityRecyclerViewAdapter.java
Patch:
@@ -58,12 +58,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         ((RecentSearchQueryViewHolder) holder).binding.recentSearchQueryWhereTextViewItemRecentSearchQuery
                                 .setTextColor(userTextColor);
                         ((RecentSearchQueryViewHolder) holder).binding.recentSearchQueryWhereTextViewItemRecentSearchQuery
-                                .setText("u/" + recentSearchQuery.getSearchQuery());
+                                .setText("u/" + recentSearchQuery.getSearchInSubredditOrUserName());
                     } else {
                         ((RecentSearchQueryViewHolder) holder).binding.recentSearchQueryWhereTextViewItemRecentSearchQuery
                                 .setTextColor(subredditTextColor);
                         ((RecentSearchQueryViewHolder) holder).binding.recentSearchQueryWhereTextViewItemRecentSearchQuery
-                                .setText("r/" + recentSearchQuery.getSearchQuery());
+                                .setText("r/" + recentSearchQuery.getSearchInSubredditOrUserName());
                     }
                 } else {
                     ((RecentSearchQueryViewHolder) holder).binding.recentSearchQueryWhereTextViewItemRecentSearchQuery

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/SetRedditGalleryItemCaptionAndUrlBottomSheetFragment.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.content.res.ColorStateList;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
@@ -55,11 +56,10 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         okButton = rootView.findViewById(R.id.ok_button_set_reddit_gallery_item_caption_and_url_bottom_sheet_fragment);
 
         int primaryTextColor = mActivity.getResources().getColor(R.color.primaryTextColor);
-        Drawable cursorDrawable = Utils.getTintedDrawable(mActivity, R.drawable.edit_text_cursor, primaryTextColor);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-            captionTextInputEditText.setTextCursorDrawable(cursorDrawable);
-            urlTextInputEditText.setTextCursorDrawable(cursorDrawable);
+            captionTextInputLayout.setCursorColor(ColorStateList.valueOf(primaryTextColor));
+            urlTextInputLayout.setCursorColor(ColorStateList.valueOf(primaryTextColor));
         } else {
             setCursorDrawableColor(captionTextInputEditText, primaryTextColor);
             setCursorDrawableColor(urlTextInputEditText, primaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -280,7 +280,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public void onDrawerClosed(View drawerView) {
                 if (adapter != null) {
-                    adapter.closeAccountSectionWithoutChangeIconResource(true);
+                    adapter.closeAccountManagement(true);
                 }
             }
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SearchActivityRecyclerViewAdapter.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.res.ColorStateList;
 import android.view.LayoutInflater;
-import android.view.View;
 import android.view.ViewGroup;
 
 import androidx.annotation.NonNull;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -223,6 +223,7 @@ mExecutor, new Handler(), mNewAccountName, newAccount -> {
                             mNewAccountName = null;
                             if (newAccount != null) {
                                 accessToken = newAccount.getAccessToken();
+                                accountName = newAccount.getAccountName();
                             }
 
                             bindView(savedInstanceState);

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -21,6 +21,7 @@
 import android.os.Environment;
 import android.os.PersistableBundle;
 import android.provider.MediaStore;
+import android.util.Log;
 
 import androidx.core.app.NotificationChannelCompat;
 import androidx.core.app.NotificationCompat;
@@ -94,6 +95,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadMediaService.class))
+                    .setExtras(extras)
                     .build();
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -103,6 +103,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, DownloadRedditVideoService.class))
+                    .setExtras(extras)
                     .build();
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/EditProfileService.java
Patch:
@@ -83,6 +83,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, EditProfileService.class))
+                    .setExtras(extras)
                     .build();
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/SubmitPostService.java
Patch:
@@ -129,6 +129,7 @@ public static JobInfo constructJobInfo(Context context, long contentEstimatedByt
                     .build();
         } else {
             return new JobInfo.Builder(JOB_ID++, new ComponentName(context, SubmitPostService.class))
+                    .setExtras(extras)
                     .build();
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/Comment.java
Patch:
@@ -313,7 +313,7 @@ public boolean isFilteredOut() {
     }
 
     public void setIsFilteredOut(boolean isFilteredOut) {
-        this.isExpanded = isFilteredOut;
+        this.isFilteredOut = isFilteredOut;
     }
 
     public int getVoteType() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/ParseComment.java
Patch:
@@ -210,9 +210,9 @@ private static void parseCommentRecursion(JSONArray comments, ArrayList<Comment>
                 singleComment.addChildren(children);
                 singleComment.setMoreChildrenIds(nextMoreChildrenIds);
                 singleComment.setChildCount(getChildCount(singleComment));
-                singleComment.setIsFilteredOut(isFilteredOut);
             }
 
+            singleComment.setIsFilteredOut(isFilteredOut);
             newCommentData.add(singleComment);
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -267,7 +267,7 @@ public static boolean canShowGif(int embeddedMediaType) {
         return embeddedMediaType == 15 || embeddedMediaType == 7 || embeddedMediaType == 5 || embeddedMediaType == 2;
     }
 
-    public static boolean canShowEmoji(int embeddedMediaType) {
+    public static boolean canShowEmote(int embeddedMediaType) {
         return embeddedMediaType == 15 || embeddedMediaType == 6 || embeddedMediaType == 5 || embeddedMediaType == 1;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -193,6 +193,7 @@ static ToroExo providesToroExo(Application application) {
         return ToroExo.with(application);
     }
 
+    @OptIn(markerClass = UnstableApi.class)
     @Provides
     @Singleton
     static ExoCreator provideExoCreator(Config config,

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/LoopAvailableExoCreator.java
Patch:
@@ -4,13 +4,15 @@
 
 import androidx.annotation.NonNull;
 import androidx.media3.common.Player;
+import androidx.media3.common.util.UnstableApi;
 import androidx.media3.exoplayer.ExoPlayer;
 
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import ml.docilealligator.infinityforreddit.videoautoplay.Config;
 import ml.docilealligator.infinityforreddit.videoautoplay.DefaultExoCreator;
 import ml.docilealligator.infinityforreddit.videoautoplay.ToroExo;
 
+@UnstableApi
 public class LoopAvailableExoCreator extends DefaultExoCreator {
     private final SharedPreferences sharedPreferences;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/videoautoplay/ExoPlayerViewHelper.java
Patch:
@@ -59,12 +59,14 @@ public ExoPlayerViewHelper(@NonNull ToroPlayer player, @NonNull Uri uri) {
     this(player, uri, null);
   }
 
+  @OptIn(markerClass = UnstableApi.class)
   public ExoPlayerViewHelper(@NonNull ToroPlayer player, @NonNull Uri uri,
       @Nullable String fileExt) {
     this(player, uri, fileExt, with(player.getPlayerView().getContext()).getDefaultCreator());
   }
 
   /** Config instance should be kept as global instance. */
+  @OptIn(markerClass = UnstableApi.class)
   public ExoPlayerViewHelper(@NonNull ToroPlayer player, @NonNull Uri uri, @Nullable String fileExt,
       @NonNull Config config) {
     this(player, uri, fileExt,

File: app/src/main/java/ml/docilealligator/infinityforreddit/videoautoplay/ToroExo.java
Patch:
@@ -60,6 +60,7 @@
  * @since 3.4.0
  */
 
+@UnstableApi
 public final class ToroExo {
 
     private static final String TAG = "ToroExo";

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SettingsActivity.java
Patch:
@@ -148,7 +148,7 @@ public boolean onSupportNavigateUp() {
     }
 
     @Override
-    public boolean onPreferenceStartFragment(PreferenceFragmentCompat caller, Preference pref) {
+    public boolean onPreferenceStartFragment(@NonNull PreferenceFragmentCompat caller, Preference pref) {
         // Instantiate the new Fragment
         final Bundle args = pref.getExtras();
         final Fragment fragment = getSupportFragmentManager().getFragmentFactory().instantiate(

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubredditListingFragment.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -157,7 +158,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
         }
 
         SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(mExecutor,
-                mOauthRetrofit, query, sortType, mActivity.accessToken, mActivity.accountName, nsfw);
+                new Handler(), mOauthRetrofit, query, sortType, mActivity.accessToken, mActivity.accountName, nsfw);
         mSubredditListingViewModel = new ViewModelProvider(this, factory).get(SubredditListingViewModel.class);
         mSubredditListingViewModel.getSubreddits().observe(getViewLifecycleOwner(), subredditData -> mAdapter.submitList(subredditData));
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditListingDataSource.java
Patch:
@@ -34,7 +34,7 @@ public class SubredditListingDataSource extends PageKeyedDataSource<String, Subr
     private LoadParams<String> params;
     private LoadCallback<String, SubredditData> callback;
 
-    SubredditListingDataSource(Executor executor, Retrofit retrofit, String query, SortType sortType,
+    SubredditListingDataSource(Executor executor, Handler handler, Retrofit retrofit, String query, SortType sortType,
                                @Nullable String accessToken, @NonNull String accountName, boolean nsfw) {
         this.executor = executor;
         this.retrofit = retrofit;
@@ -43,7 +43,7 @@ public class SubredditListingDataSource extends PageKeyedDataSource<String, Subr
         this.accessToken = accessToken;
         this.accountName = accountName;
         this.nsfw = nsfw;
-        handler = new Handler();
+        this.handler = handler;
         paginationNetworkStateLiveData = new MutableLiveData<>();
         initialLoadStateLiveData = new MutableLiveData<>();
         hasSubredditLiveData = new MutableLiveData<>();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubredditListingFragment.java
Patch:
@@ -156,7 +156,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
             });
         }
 
-        SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(
+        SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(mExecutor,
                 mOauthRetrofit, query, sortType, mActivity.accessToken, mActivity.accountName, nsfw);
         mSubredditListingViewModel = new ViewModelProvider(this, factory).get(SubredditListingViewModel.class);
         mSubredditListingViewModel.getSubreddits().observe(getViewLifecycleOwner(), subredditData -> mAdapter.submitList(subredditData));

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1413,7 +1413,9 @@ private void fetchCommentsRespectRecommendedSort(boolean changeRefreshState, Sor
                     e.printStackTrace();
                 }
             }
-            FetchSubredditData.fetchSubredditData(activity.accountName.equals(Account.ANONYMOUS_ACCOUNT) ? null : mOauthRetrofit, mRetrofit, mPost.getSubredditName(), activity.accessToken,
+            FetchSubredditData.fetchSubredditData(mExecutor, new Handler(),
+                    activity.accountName.equals(Account.ANONYMOUS_ACCOUNT) ? null : mOauthRetrofit,
+                    mRetrofit, mPost.getSubredditName(), activity.accessToken,
                     new FetchSubredditData.FetchSubredditDataListener() {
                         @Override
                         public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -257,8 +257,8 @@ private ListenableFuture<LoadResult<String, Post>> loadUserPosts(@NonNull LoadPa
             userPosts = api.getUserPostsListenableFuture(subredditOrUserName, loadParams.getKey(), sortType.getType(),
                     sortType.getTime());
         } else {
-            userPosts = api.getUserPostsOauthListenableFuture(subredditOrUserName, userWhere, loadParams.getKey(), sortType.getType(),
-                    sortType.getTime(), APIUtils.getOAuthHeader(accessToken));
+            userPosts = api.getUserPostsOauthListenableFuture(APIUtils.AUTHORIZATION_BASE + accessToken,
+                    subredditOrUserName, userWhere, loadParams.getKey(), sortType.getType(), sortType.getTime());
         }
 
         ListenableFuture<LoadResult<String, Post>> pageFuture = Futures.transform(userPosts, this::transformData, executor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -240,7 +240,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
             Markwon postBodyMarkwon = MarkdownUtils.createFullRedditMarkwon(this,
                     miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, parentTextColor,
                     parentSpoilerBackgroundColor, null);
-            CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
+            CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(this, imageAndGifEntry);
             markwonAdapter.setOnLongClickListener(view -> {
                 Utils.hideKeyboard(CommentActivity.this);
                 CopyTextBottomSheetFragment.show(getSupportFragmentManager(),

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -125,7 +125,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         Markwon markwon = MarkdownUtils.createContentPreviewRedditMarkwon(this, miscPlugin, markdownColor,
                 markdownColor | 0xFF000000);
 
-        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAdapter();
+        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAdapter(this);
         LinearLayoutManagerBugFixed linearLayoutManager = new SwipeLockLinearLayoutManager(this, new SwipeLockInterface() {
             @Override
             public void lockSwipe() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -189,7 +189,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         markwon = MarkdownUtils.createFullRedditMarkwon(this,
                 miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, markdownColor, spoilerBackgroundColor, onLinkLongClickListener);
 
-        markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
+        markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(this, imageAndGifEntry);
         LinearLayoutManagerBugFixed linearLayoutManager = new SwipeLockLinearLayoutManager(this, new SwipeLockInterface() {
             @Override
             public void lockSwipe() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -560,7 +560,7 @@ public void unlockSwipe() {
                 }
             });
             commentMarkdownView.setLayoutManager(linearLayoutManager);
-            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
+            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mActivity, mImageAndGifEntry);
             markwonAdapter.setOnClickListener(view -> {
                 if (view instanceof SpoilerOnClickTextView) {
                     if (((SpoilerOnClickTextView) view).isSpoilerOnClick()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -1361,7 +1361,7 @@ public void unlockSwipe() {
                 }
             });
             commentMarkdownView.setLayoutManager(linearLayoutManager);
-            mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
+            mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mActivity, mImageAndGifEntry);
             commentMarkdownView.setAdapter(mMarkwonAdapter);
 
             itemView.setBackgroundColor(mCommentBackgroundColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -421,7 +421,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         activity.startActivity(intent);
                     }
                 });
-        mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
+        mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mActivity, mImageAndGifEntry);
     }
 
     public void setCanStartActivity(boolean canStartActivity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -172,7 +172,7 @@ class RuleViewHolder extends RecyclerView.ViewHolder {
             if (activity.typeface != null) {
                 binding.shortNameTextViewItemRule.setTypeface(activity.typeface);
             }
-            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
+            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(activity, imageAndGifEntry);
             SwipeLockLinearLayoutManager swipeLockLinearLayoutManager = new SwipeLockLinearLayoutManager(activity,
                     new SwipeLockInterface() {
                 @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -177,7 +177,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
         Markwon markwon = MarkdownUtils.createFullRedditMarkwon(activity,
                 miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, markdownColor,
                 spoilerBackgroundColor, onLinkLongClickListener);
-        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
+        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(activity, imageAndGifEntry);
         markwonAdapter.setOnLongClickListener(view -> {
             if (sidebarDescription != null && !sidebarDescription.equals("")) {
                 Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -487,7 +487,7 @@ public void onVisibilityChanged(int visibility) {
             });
         }
 
-        MaterialButton playPauseButton = findViewById(R.id.exo_play_pause);
+        MaterialButton playPauseButton = findViewById(R.id.exo_play_pause_button_exo_playback_control_view);
         Drawable playDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_play_arrow_24dp, null);
         Drawable pauseDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_pause_24dp, null);
         playPauseButton.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurVideoFragment.java
Patch:
@@ -289,7 +289,7 @@ private void preparePlayer(Bundle savedInstanceState) {
             binding.getMuteButton().setIconResource(R.drawable.ic_unmute_24dp);
         }
 
-        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause);
+        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause_button_exo_playback_control_view);
         Drawable playDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_play_arrow_24dp, null);
         Drawable pauseDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_pause_24dp, null);
         playPauseButton.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -290,7 +290,7 @@ private void preparePlayer(Bundle savedInstanceState) {
             binding.getMuteButton().setImageResource(R.drawable.ic_unmute_24dp);
         }
 
-        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause);
+        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause_button_exo_playback_control_view);
         Drawable playDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_play_arrow_24dp, null);
         Drawable pauseDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_pause_24dp, null);
         playPauseButton.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivityBindingAdapter.java
Patch:
@@ -64,7 +64,7 @@ public ProgressBar getProgressBar() {
     }
 
     public MaterialButton getMuteButton() {
-        return binding.getRoot().findViewById(R.id.mute_exo_playback_control_view);
+        return getRoot().findViewById(R.id.mute_exo_playback_control_view);
     }
 
     public MaterialButton getHdButton() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurVideoFragment.java
Patch:
@@ -289,7 +289,7 @@ private void preparePlayer(Bundle savedInstanceState) {
             binding.getMuteButton().setIconResource(R.drawable.ic_unmute_24dp);
         }
 
-        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play);
+        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause);
         Drawable playDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_play_arrow_24dp, null);
         Drawable pauseDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_pause_24dp, null);
         playPauseButton.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -290,7 +290,7 @@ private void preparePlayer(Bundle savedInstanceState) {
             binding.getMuteButton().setImageResource(R.drawable.ic_unmute_24dp);
         }
 
-        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play);
+        MaterialButton playPauseButton = binding.getRoot().findViewById(R.id.exo_play_pause);
         Drawable playDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_play_arrow_24dp, null);
         Drawable pauseDrawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_pause_24dp, null);
         playPauseButton.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -57,6 +57,7 @@
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.TrackSelectionOverride;
 import com.google.android.exoplayer2.ui.PlayerControlView;
+import com.google.android.exoplayer2.ui.StyledPlayerControlView;
 import com.google.android.exoplayer2.ui.StyledPlayerView;
 import com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
 import com.google.android.exoplayer2.upstream.DataSource;
@@ -464,9 +465,9 @@ public void onIdle(@NonNull ZoomEngine zoomEngine) {
         } else {
             StyledPlayerView videoPlayerView = findViewById(R.id.player_view_view_video_activity);
             videoPlayerView.setPlayer(player);
-            videoPlayerView.setControllerVisibilityListener(new StyledPlayerView.ControllerVisibilityListener() {
+            videoPlayerView.setControllerVisibilityListener(new StyledPlayerControlView.VisibilityListener() {
                 @Override
-                public void onVisibilityChanged(int visibility) {
+                public void onVisibilityChange(int visibility) {
                     switch (visibility) {
                         case View.GONE:
                             getWindow().getDecorView().setSystemUiVisibility(

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomThemeListingActivity.java
Patch:
@@ -362,8 +362,7 @@ private class SectionsPagerAdapter extends FragmentStateAdapter {
         @Override
         public Fragment createFragment(int position) {
             if (position == 0) {
-                CustomThemeListingFragment fragment = new CustomThemeListingFragment();
-                return fragment;
+                return new CustomThemeListingFragment();
             }
             CustomThemeListingFragment fragment = new CustomThemeListingFragment();
             Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -929,7 +929,7 @@ public void addComments(@NonNull ArrayList<Comment> comments, boolean hasMoreCom
         if (mVisibleComments.isEmpty()) {
             isInitiallyLoading = false;
             isInitiallyLoadingFailed = false;
-            if (comments.isEmpty()) {
+            if (comments.isEmpty() || mIsSingleCommentThreadMode) {
                 notifyItemChanged(0);
             } else {
                 notifyItemRemoved(0);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1421,7 +1421,7 @@ public void onFailure(@NonNull Call<String> call, @NonNull Throwable t) {
 
     private void fetchCommentsRespectRecommendedSort(boolean changeRefreshState, SortType.Type sortType) {
         if (mRespectSubredditRecommendedSortType && mPost != null) {
-            if (mPost.getSuggestedSort() != null && !mPost.getSuggestedSort().equals("null") && !mPost.getSuggestedSort().equals("")) {
+            if (mPost.getSuggestedSort() != null && !mPost.getSuggestedSort().equals("null") && !mPost.getSuggestedSort().isEmpty()) {
                 try {
                     SortType.Type sortTypeType = SortType.Type.valueOf(mPost.getSuggestedSort().toUpperCase(Locale.US));
                     activity.setTitle(sortTypeType.fullName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -1280,7 +1280,8 @@ public void onChangeSwipeActionEvent(ChangeSwipeActionEvent changeSwipeActionEve
     public void onNeedForPostListFromPostRecyclerViewAdapterEvent(NeedForPostListFromPostFragmentEvent event) {
         if (historyPostFragmentId == event.postFragmentTimeId && mAdapter != null) {
             EventBus.getDefault().post(new ProvidePostListToViewPostDetailActivityEvent(historyPostFragmentId,
-                    new ArrayList<>(mAdapter.snapshot()), HistoryPostPagingSource.TYPE_READ_POSTS, null, null, null,
+                    new ArrayList<>(mAdapter.snapshot()), HistoryPostPagingSource.TYPE_READ_POSTS,
+                    null, null, null, null,
                     null, null, null, postFilter, null, null));
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -86,7 +86,7 @@ public class PostPagingSource extends ListenableFuturePagingSource<String, Post>
         this.accountName = accountName;
         this.sharedPreferences = sharedPreferences;
         this.postFeedScrolledPositionSharedPreferences = postFeedScrolledPositionSharedPreferences;
-        if (postType == TYPE_SUBREDDIT || postType == TYPE_ANONYMOUS_FRONT_PAGE) {
+        if (postType == TYPE_SUBREDDIT || postType == TYPE_ANONYMOUS_FRONT_PAGE || postType == TYPE_ANONYMOUS_MULTIREDDIT) {
             this.subredditOrUserName = path;
         } else {
             if (sortType != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostViewModel.java
Patch:
@@ -235,6 +235,7 @@ public PostPagingSource returnPagingSoruce() {
             case PostPagingSource.TYPE_SUBREDDIT:
             case PostPagingSource.TYPE_MULTI_REDDIT:
             case PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE:
+            case PostPagingSource.TYPE_ANONYMOUS_MULTIREDDIT:
                 paging3PagingSource = new PostPagingSource(executor, retrofit, accessToken, accountName,
                         sharedPreferences, postFeedScrolledPositionSharedPreferences, name, postType,
                         sortType, postFilter, readPostList);
@@ -386,7 +387,7 @@ public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {
                 return (T) new PostViewModel(executor, retrofit, accessToken, accountName, sharedPreferences,
                         postFeedScrolledPositionSharedPreferences, postHistorySharedPreferences, name,
                         postType, sortType, postFilter, readPostList);
-            } else if (postType == PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE) {
+            } else if (postType == PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE || postType == PostPagingSource.TYPE_ANONYMOUS_MULTIREDDIT) {
                 return (T) new PostViewModel(executor, retrofit, null, null, sharedPreferences,
                         null, null, name, postType, sortType,
                         postFilter, null);

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/UploadedImagesBottomSheetFragment.java
Patch:
@@ -33,6 +33,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         // Inflate the layout for this fragment
         FragmentUploadedImagesBottomSheetBinding binding = FragmentUploadedImagesBottomSheetBinding.inflate(inflater, container, false);
 
+        binding.getRoot().setNestedScrollingEnabled(true);
+
         binding.uploadButtonUploadedImagesBottomSheetFragment.setOnClickListener(view -> {
             activity.uploadImage();
             dismiss();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -240,7 +240,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
             Markwon postBodyMarkwon = MarkdownUtils.createFullRedditMarkwon(this,
                     miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, parentTextColor,
                     parentSpoilerBackgroundColor, null);
-            CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAdapter(imageAndGifEntry);
+            CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
             markwonAdapter.setOnLongClickListener(view -> {
                 Utils.hideKeyboard(CommentActivity.this);
                 CopyTextBottomSheetFragment.show(getSupportFragmentManager(),
@@ -403,7 +403,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
             return true;
         } else if (itemId == R.id.action_preview_comment_activity) {
             Intent intent = new Intent(this, FullMarkdownActivity.class);
-            intent.putExtra(FullMarkdownActivity.EXTRA_COMMENT_MARKDOWN, binding.commentCommentEditText.getText().toString());
+            intent.putExtra(FullMarkdownActivity.EXTRA_MARKDOWN, binding.commentCommentEditText.getText().toString());
             intent.putExtra(FullMarkdownActivity.EXTRA_SUBMIT_POST, true);
             startActivityForResult(intent, MARKDOWN_PREVIEW_REQUEST_CODE);
         } else if (itemId == R.id.action_send_comment_activity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -215,7 +215,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         if (item.getItemId() == R.id.action_preview_edit_comment_activity) {
             Intent intent = new Intent(this, FullMarkdownActivity.class);
-            intent.putExtra(FullMarkdownActivity.EXTRA_COMMENT_MARKDOWN, binding.commentEditTextEditCommentActivity.getText().toString());
+            intent.putExtra(FullMarkdownActivity.EXTRA_MARKDOWN, binding.commentEditTextEditCommentActivity.getText().toString());
             intent.putExtra(FullMarkdownActivity.EXTRA_SUBMIT_POST, true);
             startActivityForResult(intent, MARKDOWN_PREVIEW_REQUEST_CODE);
         } else if (item.getItemId() == R.id.action_send_edit_comment_activity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -200,7 +200,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         if (item.getItemId() == R.id.action_preview_edit_post_activity) {
             Intent intent = new Intent(this, FullMarkdownActivity.class);
-            intent.putExtra(FullMarkdownActivity.EXTRA_COMMENT_MARKDOWN, binding.postContentEditTextEditPostActivity.getText().toString());
+            intent.putExtra(FullMarkdownActivity.EXTRA_MARKDOWN, binding.postContentEditTextEditPostActivity.getText().toString());
             intent.putExtra(FullMarkdownActivity.EXTRA_SUBMIT_POST, true);
             startActivityForResult(intent, MARKDOWN_PREVIEW_REQUEST_CODE);
         } else if (item.getItemId() == R.id.action_send_edit_post_activity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -216,7 +216,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         markwon = MarkdownUtils.createFullRedditMarkwon(this,
                 miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, markdownColor, spoilerBackgroundColor, onLinkLongClickListener);
 
-        markwonAdapter = MarkdownUtils.createCustomTablesAdapter(imageAndGifEntry);
+        markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
         LinearLayoutManagerBugFixed linearLayoutManager = new SwipeLockLinearLayoutManager(this, new SwipeLockInterface() {
             @Override
             public void lockSwipe() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -562,7 +562,7 @@ public void unlockSwipe() {
                 }
             });
             commentMarkdownView.setLayoutManager(linearLayoutManager);
-            markwonAdapter = MarkdownUtils.createCustomTablesAdapter(mImageAndGifEntry);
+            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
             markwonAdapter.setOnClickListener(view -> {
                 if (view instanceof SpoilerOnClickTextView) {
                     if (((SpoilerOnClickTextView) view).isSpoilerOnClick()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -1339,7 +1339,7 @@ public void unlockSwipe() {
                 }
             });
             commentMarkdownView.setLayoutManager(linearLayoutManager);
-            mMarkwonAdapter = MarkdownUtils.createCustomTablesAdapter(mImageAndGifEntry);
+            mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
             commentMarkdownView.setAdapter(mMarkwonAdapter);
 
             itemView.setBackgroundColor(mCommentBackgroundColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -416,7 +416,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         activity.startActivity(intent);
                     }
                 });
-        mMarkwonAdapter = MarkdownUtils.createCustomTablesAdapter(mImageAndGifEntry);
+        mMarkwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(mImageAndGifEntry);
     }
 
     public void setCanStartActivity(boolean canStartActivity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -177,7 +177,7 @@ class RuleViewHolder extends RecyclerView.ViewHolder {
             if (activity.typeface != null) {
                 shortNameTextView.setTypeface(activity.typeface);
             }
-            markwonAdapter = MarkdownUtils.createCustomTablesAdapter(imageAndGifEntry);
+            markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
             SwipeLockLinearLayoutManager swipeLockLinearLayoutManager = new SwipeLockLinearLayoutManager(activity,
                     new SwipeLockInterface() {
                 @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -183,7 +183,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
         Markwon markwon = MarkdownUtils.createFullRedditMarkwon(activity,
                 miscPlugin, emoteCloseBracketInlineProcessor, emotePlugin, imageAndGifPlugin, markdownColor,
                 spoilerBackgroundColor, onLinkLongClickListener);
-        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAdapter(imageAndGifEntry);
+        CustomMarkwonAdapter markwonAdapter = MarkdownUtils.createCustomTablesAndImagesAdapter(imageAndGifEntry);
         markwonAdapter.setOnLongClickListener(view -> {
             if (sidebarDescription != null && !sidebarDescription.equals("")) {
                 Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/RichTextJSONConverter.java
Patch:
@@ -111,7 +111,7 @@ public String constructRichTextJSON(Context context, String markdown,
                                             List<UploadedImage> uploadedImages) throws JSONException {
         UploadedImagePlugin uploadedImagePlugin = new UploadedImagePlugin();
         uploadedImagePlugin.setUploadedImages(uploadedImages);
-        Markwon markwon = MarkdownUtils.createPostSubmissionRedditMarkwon(
+        Markwon markwon = MarkdownUtils.createContentSubmissionRedditMarkwon(
                 context, uploadedImagePlugin);
 
         List<Node> nodes = MarkwonReducer.directChildren().reduce(markwon.parse(markdown));

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -558,7 +558,7 @@ public void uploadImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            capturedImageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            capturedImageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("captured_image", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -371,7 +371,7 @@ public void uploadImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            capturedImageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            capturedImageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("captured_image", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -341,7 +341,7 @@ public void uploadImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            capturedImageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            capturedImageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("captured_image", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostGalleryActivity.java
Patch:
@@ -472,7 +472,7 @@ public void selectImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            imageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            imageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("temp_img", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostPollActivity.java
Patch:
@@ -734,7 +734,7 @@ public void uploadImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            capturedImageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            capturedImageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("captured_image", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostTextActivity.java
Patch:
@@ -711,7 +711,7 @@ public void uploadImage() {
     public void captureImage() {
         Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
         try {
-            capturedImageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+            capturedImageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                     File.createTempFile("captured_image", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
             pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);
             startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/ImageAndGifEntry.java
Patch:
@@ -146,8 +146,8 @@ public void bindHolder(@NonNull Markwon markwon, @NonNull Holder holder, @NonNul
             imageRequestBuilder
                     .apply(RequestOptions.bitmapTransform(
                             new MultiTransformation<>(
-                                    new BlurTransformation(50, 10),
-                                    new RoundedCornersTransformation(72, 0))))
+                                    new BlurTransformation(100, 4),
+                                    new RoundedCornersTransformation(8, 0))))
                     .into(holder.binding.imageViewMarkdownImageAndGifBlock);
         } else {
             imageRequestBuilder

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/Post.java
Patch:
@@ -43,6 +43,7 @@ public class Post implements Parcelable {
     private String url;
     private String videoUrl;
     private String videoDownloadUrl;
+    @Nullable
     private String videoFallBackDirectUrl;
     private String redgifsId;
     private String streamableShortCode;
@@ -330,11 +331,12 @@ public void setVideoDownloadUrl(String videoDownloadUrl) {
         this.videoDownloadUrl = videoDownloadUrl;
     }
 
+    @Nullable
     public String getVideoFallBackDirectUrl() {
         return videoFallBackDirectUrl;
     }
 
-    public void setVideoFallBackDirectUrl(String videoFallBackDirectUrl) {
+    public void setVideoFallBackDirectUrl(@Nullable String videoFallBackDirectUrl) {
         this.videoFallBackDirectUrl = videoFallBackDirectUrl;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -843,7 +843,7 @@ private void loadFallbackVideo(Bundle savedInstanceState) {
                 videoType = VIDEO_TYPE_DIRECT;
                 videoDownloadUrl = videoFallbackDirectUrl;
                 mVideoUri = Uri.parse(videoFallbackDirectUrl);
-                videoFileName = FilenameUtils.getName(videoDownloadUrl);
+                videoFileName = videoFileName == null ? FilenameUtils.getName(videoDownloadUrl) : videoFileName;
                 player.prepare();
                 player.setMediaSource(new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(mVideoUri)));
                 preparePlayer(savedInstanceState);

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -662,6 +662,9 @@ private void updateNotification(int contentStringResId, int progress, int random
                 deleteIntent.putExtra(DownloadedMediaDeleteActionBroadcastReceiver.EXTRA_NOTIFICATION_ID, NotificationUtils.DOWNLOAD_REDDIT_VIDEO_NOTIFICATION_ID + randomNotificationIdOffset);
                 PendingIntent deleteActionPendingIntent = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.getBroadcast(this, 2, deleteIntent, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_IMMUTABLE) : PendingIntent.getBroadcast(this, 2, deleteIntent, PendingIntent.FLAG_CANCEL_CURRENT);
                 builder.addAction(new NotificationCompat.Action(R.drawable.ic_notification, getString(R.string.delete), deleteActionPendingIntent));
+            } else {
+                builder.setContentIntent(null);
+                builder.clearActions();
             }
             notificationManager.notify(NotificationUtils.DOWNLOAD_REDDIT_VIDEO_NOTIFICATION_ID + randomNotificationIdOffset, builder.build());
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomThemeListingActivity.java
Patch:
@@ -161,6 +161,7 @@ public CustomThemeWrapper getCustomThemeWrapper() {
 
     @Override
     protected void applyCustomTheme() {
+        coordinatorLayout.setBackgroundColor(customThemeWrapper.getBackgroundColor());
         applyAppBarLayoutAndCollapsingToolbarLayoutAndToolbarTheme(appBarLayout, collapsingToolbarLayout, toolbar);
         applyFABTheme(fab);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubredditListingFragment.java
Patch:
@@ -180,7 +180,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
         }
 
         SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(
-                mOauthRetrofit, query, sortType, accessToken, nsfw);
+                mOauthRetrofit, query, sortType, accessToken, accountName, nsfw);
         mSubredditListingViewModel = new ViewModelProvider(this, factory).get(SubredditListingViewModel.class);
         mSubredditListingViewModel.getSubreddits().observe(getViewLifecycleOwner(), subredditData -> mAdapter.submitList(subredditData));
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredPostsActivity.java
Patch:
@@ -167,7 +167,6 @@ protected void onCreate(Bundle savedInstanceState) {
         PostFilter postFilter = getIntent().getParcelableExtra(EXTRA_CONSTRUCTED_POST_FILTER);
         if (postFilter == null) {
             postFilter = new PostFilter();
-            postFilter.allowNSFW = !mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_NSFW_FOREVER, false) && mNsfwAndSpoilerSharedPreferences.getBoolean((mAccountName.equals(Account.ANONYMOUS_ACCOUNT) ? "" : mAccountName) + SharedPreferencesUtils.NSFW_BASE, false);
             switch (filter) {
                 case Post.NSFW_TYPE:
                     postFilter.onlyNSFW = true;
@@ -227,6 +226,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 postFilter.containFlairs = flair;
             }
         }
+        postFilter.allowNSFW = !mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_NSFW_FOREVER, false) && mNsfwAndSpoilerSharedPreferences.getBoolean((mAccountName.equals(Account.ANONYMOUS_ACCOUNT) ? "" : mAccountName) + SharedPreferencesUtils.NSFW_BASE, false);
 
         if (postType == PostPagingSource.TYPE_USER) {
             userWhere = getIntent().getStringExtra(EXTRA_USER_WHERE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -1430,7 +1430,7 @@ public void afterTextChanged(Editable editable) {
                 }
                 subredditAutocompleteCall = mOauthRetrofit.create(RedditAPI.class).subredditAutocomplete(APIUtils.getOAuthHeader(mAccessToken),
                         editable.toString(), nsfw);
-                subredditAutocompleteCall.enqueue(new Callback<String>() {
+                subredditAutocompleteCall.enqueue(new Callback<>() {
                     @Override
                     public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                         if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -582,7 +582,7 @@ mExecutor, new Handler(), mNewAccountName, newAccount -> {
 
     private void fetchSubredditData() {
         if (!mFetchSubredditInfoSuccess) {
-            FetchSubredditData.fetchSubredditData(mOauthRetrofit, mRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
+            FetchSubredditData.fetchSubredditData(mAccountName.equals(Account.ANONYMOUS_ACCOUNT) ? null : mOauthRetrofit, mRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
                 @Override
                 public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {
                     mNCurrentOnlineSubscribers = nCurrentOnlineSubscribers;
@@ -1587,6 +1587,7 @@ public Fragment createFragment(int position) {
             SidebarFragment fragment = new SidebarFragment();
             Bundle bundle = new Bundle();
             bundle.putString(SidebarFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
+            bundle.putString(SidebarFragment.EXTRA_ACCOUNT_NAME, mAccountName);
             bundle.putString(SidebarFragment.EXTRA_SUBREDDIT_NAME, subredditName);
             fragment.setArguments(bundle);
             return fragment;

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/LoadSubredditIcon.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.concurrent.Executor;
 
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.subreddit.FetchSubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditDao;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditData;
@@ -26,7 +27,7 @@ public static void loadSubredditIcon(Executor executor, Handler handler, RedditD
                 String iconImageUrl = subredditDao.getSubredditData(subredditName).getIconUrl();
                 handler.post(() -> loadSubredditIconAsyncTaskListener.loadIconSuccess(iconImageUrl));
             } else {
-                handler.post(() -> FetchSubredditData.fetchSubredditData(oauthRetrofit, retrofit, subredditName, accessToken, new FetchSubredditData.FetchSubredditDataListener() {
+                handler.post(() -> FetchSubredditData.fetchSubredditData(accountName.equals(Account.ANONYMOUS_ACCOUNT) ? null : oauthRetrofit, retrofit, subredditName, accessToken, new FetchSubredditData.FetchSubredditDataListener() {
                     @Override
                     public void onFetchSubredditDataSuccess(SubredditData subredditData1, int nCurrentOnlineSubscribers) {
                         ArrayList<SubredditData> singleSubredditDataList = new ArrayList<>();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1434,7 +1434,7 @@ private void fetchCommentsRespectRecommendedSort(boolean changeRefreshState, Sor
                     e.printStackTrace();
                 }
             }
-            FetchSubredditData.fetchSubredditData(mOauthRetrofit, mRetrofit, mPost.getSubredditName(), mAccessToken,
+            FetchSubredditData.fetchSubredditData(mAccountName.equals(Account.ANONYMOUS_ACCOUNT) ? null : mOauthRetrofit, mRetrofit, mPost.getSubredditName(), mAccessToken,
                     new FetchSubredditData.FetchSubredditDataListener() {
                         @Override
                         public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/FetchSubredditData.java
Patch:
@@ -1,7 +1,5 @@
 package ml.docilealligator.infinityforreddit.subreddit;
 
-import android.text.TextUtils;
-
 import androidx.annotation.NonNull;
 
 import java.util.ArrayList;
@@ -20,7 +18,7 @@ public static void fetchSubredditData(Retrofit oauthRetrofit, Retrofit retrofit,
         RedditAPI api = retrofit.create(RedditAPI.class);
 
         Call<String> subredditData;
-        if (oauthRetrofit == null || TextUtils.isEmpty(accessToken)) {
+        if (oauthRetrofit == null) {
             subredditData = api.getSubredditData(subredditName);
         } else {
             RedditAPI oauthApi = oauthRetrofit.create(RedditAPI.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FetchRandomSubredditOrPostActivity.java
Patch:
@@ -28,8 +28,8 @@ public class FetchRandomSubredditOrPostActivity extends BaseActivity {
     @BindView(R.id.relative_layout_fetch_random_subreddit_or_post_activity)
     RelativeLayout relativeLayout;
     @Inject
-    @Named("application_only_oauth")
-    Retrofit mApplicationOnlyOauthRetrofit;
+    @Named("no_oauth")
+    Retrofit mRetrofit;
     @Inject
     @Named("default")
     SharedPreferences mSharedPreferences;
@@ -49,7 +49,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         int option = getIntent().getIntExtra(EXTRA_RANDOM_OPTION, RandomBottomSheetFragment.RANDOM_SUBREDDIT);
 
-        FetchPost.fetchRandomPost(mExecutor, new Handler(), mApplicationOnlyOauthRetrofit,
+        FetchPost.fetchRandomPost(mExecutor, new Handler(), mRetrofit,
                 option == RandomBottomSheetFragment.RANDOM_NSFW_SUBREDDIT
                 || option == RandomBottomSheetFragment.RANDOM_NSFW_POST, new FetchPost.FetchRandomPostListener() {
             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -92,8 +92,8 @@ public class WikiActivity extends BaseActivity {
     TextView mFetchWikiInfoTextView;
 
     @Inject
-    @Named("application_only_oauth")
-    Retrofit applicationOnlyOauthRetrofit;
+    @Named("no_oauth")
+    Retrofit mRetrofit;
     @Inject
     @Named("default")
     SharedPreferences mSharedPreferences;
@@ -256,7 +256,7 @@ private void loadWiki() {
         Glide.with(this).clear(mFetchWikiInfoImageView);
         mFetchWikiInfoLinearLayout.setVisibility(View.GONE);
 
-        applicationOnlyOauthRetrofit.create(RedditAPI.class).getWikiPage(mSubredditName, getIntent().getStringExtra(EXTRA_WIKI_PATH)).enqueue(new Callback<>() {
+        mRetrofit.create(RedditAPI.class).getWikiPage(mSubredditName, getIntent().getStringExtra(EXTRA_WIKI_PATH)).enqueue(new Callback<>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/LoadUserData.java
Patch:
@@ -13,14 +13,14 @@
 public class LoadUserData {
 
     public static void loadUserData(Executor executor, Handler handler, RedditDataRoomDatabase redditDataRoomDatabase, String userName,
-                                    Retrofit applicationOnlyOauthRetrofit, LoadUserDataAsyncTaskListener loadUserDataAsyncTaskListener) {
+                                    Retrofit retrofit, LoadUserDataAsyncTaskListener loadUserDataAsyncTaskListener) {
         executor.execute(() -> {
             UserDao userDao = redditDataRoomDatabase.userDao();
             if (userDao.getUserData(userName) != null) {
                 String iconImageUrl = userDao.getUserData(userName).getIconUrl();
                 handler.post(() -> loadUserDataAsyncTaskListener.loadUserDataSuccess(iconImageUrl));
             } else {
-                handler.post(() -> FetchUserData.fetchUserData(applicationOnlyOauthRetrofit, userName, new FetchUserData.FetchUserDataListener() {
+                handler.post(() -> FetchUserData.fetchUserData(retrofit, userName, new FetchUserData.FetchUserDataListener() {
                     @Override
                     public void onFetchUserDataSuccess(UserData userData, int inboxCount) {
                         InsertUserData.insertUserData(executor, handler, redditDataRoomDatabase, userData,

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/SwitchToAnonymousMode.java
Patch:
@@ -21,12 +21,9 @@ public static void switchToAnonymousMode(RedditDataRoomDatabase redditDataRoomDa
             accountDao.markAllAccountsNonCurrent();
 
             String redgifsAccessToken = currentAccountSharedPreferences.getString(SharedPreferencesUtils.REDGIFS_ACCESS_TOKEN, "");
-            String applicationOnlyAccessToken = currentAccountSharedPreferences.getString(SharedPreferencesUtils.APPLICATION_ONLY_ACCESS_TOKEN, null);
 
             currentAccountSharedPreferences.edit().clear().apply();
             currentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.REDGIFS_ACCESS_TOKEN, redgifsAccessToken).apply();
-            currentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.APPLICATION_ONLY_ACCESS_TOKEN, applicationOnlyAccessToken).apply();
-            currentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.ACCESS_TOKEN, applicationOnlyAccessToken).apply();
 
             handler.post(switchToAnonymousAccountAsyncTaskListener::logoutSuccess);
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -338,7 +338,6 @@ public class SharedPreferencesUtils {
     public static final String CURRENT_ACCOUNT_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.current_account";
     public static final String ACCOUNT_NAME = "account_name";
     public static final String ACCESS_TOKEN = "access_token";
-    public static final String APPLICATION_ONLY_ACCESS_TOKEN = "app_only_access_token";
     public static final String ACCOUNT_IMAGE_URL = "account_image_url";
     public static final String REDGIFS_ACCESS_TOKEN = "redgifs_access_token";
 
@@ -396,4 +395,7 @@ public class SharedPreferencesUtils {
     public static final String DO_NOT_SHOW_REDDIT_API_INFO_AGAIN_LEGACY = "do_not_show_reddit_api_info_again";
     public static final String HIDE_THE_NUMBER_OF_AWARDS_LEGACY = "hide_the_number_of_awards";
     public static final String HIDE_COMMENT_AWARDS_LEGACY = "hide_comment_awards";
+
+    //Current account
+    public static final String APPLICATION_ONLY_ACCESS_TOKEN_LEGACY = "app_only_access_token";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AccessTokenAuthenticator.java
Patch:
@@ -49,7 +49,7 @@ public Request authenticate(Route route, @NonNull Response response) {
                 Account account = mRedditDataRoomDatabase.accountDao().getCurrentAccount();
                 if (account == null) {
                     //Anonymous mode
-                    if (mRedditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
+                    if (!mRedditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
                         mRedditDataRoomDatabase.accountDao().insert(Account.getAnonymousAccount());
                     }
                     String accessTokenFromSharedPreference = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, "");

File: app/src/main/java/ml/docilealligator/infinityforreddit/ApplicationOnlyAccessTokenAuthenticator.java
Patch:
@@ -46,7 +46,7 @@ public Request authenticate(Route route, @NonNull Response response) {
 
             String accessToken = accessTokenHeader.substring(APIUtils.AUTHORIZATION_BASE.length());
             synchronized (this) {
-                if (mRedditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
+                if (!mRedditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
                     mRedditDataRoomDatabase.accountDao().insert(Account.getAnonymousAccount());
                 }
                 String accessTokenFromSharedPreference = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, "");

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostGalleryActivity.java
Patch:
@@ -530,7 +530,8 @@ private void displaySubredditIcon() {
     }
 
     private void loadSubredditIcon() {
-        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName, mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostImageActivity.java
Patch:
@@ -492,7 +492,8 @@ private void displaySubredditIcon() {
     }
 
     private void loadSubredditIcon() {
-        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName, mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostLinkActivity.java
Patch:
@@ -144,6 +144,7 @@ public class PostLinkActivity extends BaseActivity implements FlairBottomSheetFr
     Executor mExecutor;
     private Account selectedAccount;
     private String mAccessToken;
+    private String mAccountName;
     private String iconUrl;
     private String subredditName;
     private boolean subredditSelected = false;
@@ -196,6 +197,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             selectedAccount = savedInstanceState.getParcelable(SELECTED_ACCOUNT_STATE);
@@ -477,7 +479,7 @@ private void displaySubredditIcon() {
 
     private void loadSubredditIcon() {
         LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
-                mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostPollActivity.java
Patch:
@@ -528,7 +528,8 @@ private void displaySubredditIcon() {
     }
 
     private void loadSubredditIcon() {
-        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName, mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+        LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostTextActivity.java
Patch:
@@ -161,6 +161,7 @@ public class PostTextActivity extends BaseActivity implements FlairBottomSheetFr
     Executor mExecutor;
     private Account selectedAccount;
     private String mAccessToken;
+    private String mAccountName;
     private String iconUrl;
     private String subredditName;
     private boolean subredditSelected = false;
@@ -215,6 +216,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             selectedAccount = savedInstanceState.getParcelable(SELECTED_ACCOUNT_STATE);
@@ -484,7 +486,7 @@ private void displaySubredditIcon() {
 
     private void loadSubredditIcon() {
         LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
-                mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostVideoActivity.java
Patch:
@@ -512,7 +512,7 @@ private void displaySubredditIcon() {
 
     private void loadSubredditIcon() {
         LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
-                mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubmitCrosspostActivity.java
Patch:
@@ -155,6 +155,7 @@ public class SubmitCrosspostActivity extends BaseActivity implements FlairBottom
     Executor mExecutor;
     private Account selectedAccount;
     private String mAccessToken;
+    private String mAccountName;
     private Post post;
     private String iconUrl;
     private String subredditName;
@@ -209,6 +210,7 @@ protected void onCreate(Bundle savedInstanceState) {
         post = getIntent().getParcelableExtra(EXTRA_POST);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             selectedAccount = savedInstanceState.getParcelable(SELECTED_ACCOUNT_STATE);
@@ -499,7 +501,7 @@ private void displaySubredditIcon() {
 
     private void loadSubredditIcon() {
         LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase, subredditName,
-                mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+                mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
             iconUrl = iconImageUrl;
             displaySubredditIcon();
             loadSubredditIconSuccessful = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -582,7 +582,7 @@ mExecutor, new Handler(), mNewAccountName, newAccount -> {
 
     private void fetchSubredditData() {
         if (!mFetchSubredditInfoSuccess) {
-            FetchSubredditData.fetchSubredditData(mOauthRetrofit, mRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
+            FetchSubredditData.fetchSubredditData(mOauthRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
                 @Override
                 public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {
                     mNCurrentOnlineSubscribers = nCurrentOnlineSubscribers;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -561,7 +561,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 if (mPost.getSubredditIconUrl() == null) {
                     LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(),
                             mRedditDataRoomDatabase, mPost.getSubredditNamePrefixed().substring(2),
-                            mAccessToken, mOauthRetrofit, mRetrofit, iconImageUrl -> {
+                            mAccessToken, mAccountName, mOauthRetrofit, iconImageUrl -> {
                                 if (iconImageUrl == null || iconImageUrl.equals("")) {
                                     mGlide.load(R.drawable.subreddit_default_icon)
                                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(72, 0)))

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/InsertSubscribedThings.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.os.Handler;
 
-import androidx.annotation.Nullable;
+import androidx.annotation.NonNull;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -21,7 +21,7 @@
 public class InsertSubscribedThings {
 
     public static void insertSubscribedThings(Executor executor, Handler handler,
-                                              RedditDataRoomDatabase redditDataRoomDatabase, @Nullable String accountName,
+                                              RedditDataRoomDatabase redditDataRoomDatabase, @NonNull String accountName,
                                               List<SubscribedSubredditData> subscribedSubredditDataList,
                                               List<SubscribedUserData> subscribedUserDataList,
                                               List<SubredditData> subredditDataList,

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -73,7 +73,6 @@
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.adapters.HistoryPostRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.adapters.Paging3LoadingStateAdapter;
-import ml.docilealligator.infinityforreddit.adapters.PostRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.apis.StreamableAPI;
 import ml.docilealligator.infinityforreddit.asynctasks.LoadSubredditIcon;
 import ml.docilealligator.infinityforreddit.asynctasks.LoadUserData;
@@ -932,7 +931,7 @@ public void loadIcon(String subredditOrUserName, boolean isSubreddit, PostFragme
         } else {
             if (isSubreddit) {
                 LoadSubredditIcon.loadSubredditIcon(mExecutor, new Handler(), mRedditDataRoomDatabase,
-                        subredditOrUserName, accessToken, mOauthRetrofit, mRetrofit,
+                        subredditOrUserName, accessToken, accountName, mOauthRetrofit,
                         iconImageUrl -> {
                             subredditOrUserIcons.put(subredditOrUserName, iconImageUrl);
                             loadIconListener.loadIconSuccess(subredditOrUserName, iconImageUrl);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -246,7 +246,7 @@ public void onDestroy() {
 
     public void fetchSubredditData() {
         swipeRefreshLayout.setRefreshing(true);
-        FetchSubredditData.fetchSubredditData(mOauthRetrofit, mRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
+        FetchSubredditData.fetchSubredditData(mOauthRetrofit, subredditName, mAccessToken, new FetchSubredditData.FetchSubredditDataListener() {
             @Override
             public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {
                 swipeRefreshLayout.setRefreshing(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1443,7 +1443,7 @@ private void fetchCommentsRespectRecommendedSort(boolean changeRefreshState, Sor
                     e.printStackTrace();
                 }
             }
-            FetchSubredditData.fetchSubredditData(mOauthRetrofit, mRetrofit, mPost.getSubredditName(), mAccessToken,
+            FetchSubredditData.fetchSubredditData(mOauthRetrofit, mPost.getSubredditName(), mAccessToken,
                     new FetchSubredditData.FetchSubredditDataListener() {
                         @Override
                         public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostViewModel.java
Patch:
@@ -360,10 +360,11 @@ public Factory(Executor executor, Retrofit retrofit, String accessToken, String
         }
 
         //Anonymous Front Page
-        public Factory(Executor executor, Retrofit retrofit, SharedPreferences sharedPreferences,
+        public Factory(Executor executor, Retrofit retrofit, String accessToken, SharedPreferences sharedPreferences,
                        String concatenatedSubredditNames, int postType, SortType sortType, PostFilter postFilter) {
             this.executor = executor;
             this.retrofit = retrofit;
+            this.accessToken = accessToken;
             this.sharedPreferences = sharedPreferences;
             this.name = concatenatedSubredditNames;
             this.postType = postType;
@@ -387,7 +388,7 @@ public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {
                         postFeedScrolledPositionSharedPreferences, postHistorySharedPreferences, name,
                         postType, sortType, postFilter, readPostList);
             } else if (postType == PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE) {
-                return (T) new PostViewModel(executor, retrofit, null, null, sharedPreferences,
+                return (T) new PostViewModel(executor, retrofit, accessToken, null, sharedPreferences,
                         null, null, name, postType, sortType,
                         postFilter, null);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditSubscription.java
Patch:
@@ -30,7 +30,7 @@ public static void anonymousSubscribeToSubreddit(Executor executor, Handler hand
                                                      RedditDataRoomDatabase redditDataRoomDatabase,
                                                      String subredditName,
                                                      SubredditSubscriptionListener subredditSubscriptionListener) {
-        FetchSubredditData.fetchSubredditData(null, retrofit, subredditName, "", new FetchSubredditData.FetchSubredditDataListener() {
+        FetchSubredditData.fetchSubredditData(null, subredditName, "", new FetchSubredditData.FetchSubredditDataListener() {
             @Override
             public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {
                 insertSubscription(executor, handler, redditDataRoomDatabase,
@@ -76,7 +76,7 @@ private static void subredditSubscription(Executor executor, Handler handler, Re
             public void onResponse(@NonNull Call<String> call, @NonNull retrofit2.Response<String> response) {
                 if (response.isSuccessful()) {
                     if (action.equals("sub")) {
-                        FetchSubredditData.fetchSubredditData(oauthRetrofit, retrofit, subredditName, accessToken, new FetchSubredditData.FetchSubredditDataListener() {
+                        FetchSubredditData.fetchSubredditData(oauthRetrofit, subredditName, accessToken, new FetchSubredditData.FetchSubredditDataListener() {
                             @Override
                             public void onFetchSubredditDataSuccess(SubredditData subredditData, int nCurrentOnlineSubscribers) {
                                 insertSubscription(executor, handler, redditDataRoomDatabase,

File: app/src/main/java/ml/docilealligator/infinityforreddit/AccessTokenAuthenticator.java
Patch:
@@ -50,7 +50,7 @@ public Request authenticate(Route route, @NonNull Response response) {
                 if (account == null) {
                     //Anonymous mode
                     String accessTokenFromSharedPreference = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, "");
-                    if (accessToken.equals(accessTokenFromSharedPreference)) {
+                    if (accessToken.equals(accessTokenFromSharedPreference) || accessToken.equals("null")) {
                         String newAccessToken = getApplicationOnlyAccessToken();
                         if (!newAccessToken.equals("")) {
                             return response.request().newBuilder().headers(Headers.of(APIUtils.getOAuthHeader(newAccessToken))).build();
@@ -99,7 +99,7 @@ private String refreshAccessToken(Account account) {
                 } else {
                     mRedditDataRoomDatabase.accountDao().updateAccessTokenAndRefreshToken(account.getAccountName(), newAccessToken, newRefreshToken);
                 }
-                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, "").equals(account.getAccountName())) {
+                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(account.getAccountName())) {
                     mCurrentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.ACCESS_TOKEN, newAccessToken).apply();
                 }
 
@@ -127,7 +127,7 @@ private String getApplicationOnlyAccessToken() {
             if (response.isSuccessful() && response.body() != null) {
                 JSONObject jsonObject = new JSONObject(response.body());
                 String newAccessToken = jsonObject.getString(APIUtils.ACCESS_TOKEN_KEY);
-                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, "").equals(Account.ANONYMOUS_ACCOUNT)) {
+                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(Account.ANONYMOUS_ACCOUNT)) {
                     mCurrentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.ACCESS_TOKEN, newAccessToken).apply();
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AnyAccountAccessTokenAuthenticator.java
Patch:
@@ -90,7 +90,7 @@ private String refreshAccessToken(Account account) {
                     mRedditDataRoomDatabase.accountDao().updateAccessTokenAndRefreshToken(account.getAccountName(), newAccessToken, newRefreshToken);
                 }
                 Account currentAccount = mRedditDataRoomDatabase.accountDao().getCurrentAccount();
-                if (currentAccount != null && mAccount.getAccountName().equals(currentAccount.getAccountName()) && mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, "").equals(account.getAccountName())) {
+                if (currentAccount != null && mAccount.getAccountName().equals(currentAccount.getAccountName()) && mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(account.getAccountName())) {
                     mCurrentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.ACCESS_TOKEN, newAccessToken).apply();
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchRules.java
Patch:
@@ -28,7 +28,7 @@ public interface FetchRulesListener {
     }
 
     public static void fetchRules(Executor executor, Handler handler, Retrofit retrofit, @Nullable String accessToken,
-                                  String accountName, String subredditName,
+                                  String subredditName,
                                   FetchRulesListener fetchRulesListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
         Call<String> rulesCall = api.getRulesOauth(APIUtils.getOAuthHeader(accessToken), subredditName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchSubscribedThing.java
Patch:
@@ -1,6 +1,7 @@
 package ml.docilealligator.infinityforreddit;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import java.util.ArrayList;
 
@@ -15,7 +16,7 @@
 import retrofit2.Retrofit;
 
 public class FetchSubscribedThing {
-    public static void fetchSubscribedThing(final Retrofit oauthRetrofit, String accessToken, String accountName,
+    public static void fetchSubscribedThing(final Retrofit oauthRetrofit, @Nullable String accessToken, @NonNull String accountName,
                                             final String lastItem, final ArrayList<SubscribedSubredditData> subscribedSubredditData,
                                             final ArrayList<SubscribedUserData> subscribedUserData,
                                             final ArrayList<SubredditData> subredditData,

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -260,7 +260,7 @@ private String refreshAccessToken(Account account) {
                 } else {
                     mRedditDataRoomDatabase.accountDao().updateAccessTokenAndRefreshToken(account.getAccountName(), newAccessToken, newRefreshToken);
                 }
-                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, "").equals(account.getAccountName())) {
+                if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(account.getAccountName())) {
                     mCurrentAccountSharedPreferences.edit().putString(SharedPreferencesUtils.ACCESS_TOKEN, newAccessToken).apply();
                 }
                 return newAccessToken;

File: app/src/main/java/ml/docilealligator/infinityforreddit/SelectUserFlair.java
Patch:
@@ -27,7 +27,7 @@ public interface SelectUserFlairListener {
     }
 
     public static void selectUserFlair(Retrofit oauthRetrofit, String accessToken, @Nullable UserFlair userFlair,
-                                       String subredditName, String accountName, SelectUserFlairListener selectUserFlairListener) {
+                                       String subredditName, @NonNull String accountName, SelectUserFlairListener selectUserFlairListener) {
         Map<String, String> params = new HashMap<>();
         params.put(APIUtils.API_TYPE_KEY, APIUtils.API_TYPE_JSON);
         if (userFlair != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountPostsActivity.java
Patch:
@@ -24,6 +24,7 @@
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.SortTypeSelectionCallback;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
@@ -109,7 +110,7 @@ protected void onCreate(Bundle savedInstanceState) {
         postLayoutBottomSheetFragment = new PostLayoutBottomSheetFragment();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountSavedThingActivity.java
Patch:
@@ -32,6 +32,7 @@
 import ml.docilealligator.infinityforreddit.MarkPostAsReadInterface;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
@@ -119,7 +120,7 @@ protected void onCreate(Bundle savedInstanceState) {
         fragmentManager = getSupportFragmentManager();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         initializeViewPager();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -162,7 +162,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mGlide = Glide.with(this);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null) == null) {
+        if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(Account.ANONYMOUS_ACCOUNT)) {
             finish();
             return;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditProfileActivity.java
Patch:
@@ -127,7 +127,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         }
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         changeBanner.setOnClickListener(view -> {
             startPickImage(PICK_IMAGE_BANNER_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredPostsActivity.java
Patch:
@@ -158,7 +158,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setToolbarGoToTop(toolbar);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
         name = getIntent().getStringExtra(EXTRA_NAME);
         postType = getIntent().getIntExtra(EXTRA_POST_TYPE, PostPagingSource.TYPE_FRONT_PAGE);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/HistoryActivity.java
Patch:
@@ -35,6 +35,7 @@
 import ml.docilealligator.infinityforreddit.ActivityToolbarInterface;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
@@ -120,7 +121,7 @@ protected void onCreate(Bundle savedInstanceState) {
         fragmentManager = getSupportFragmentManager();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         initializeViewPager();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -158,7 +158,7 @@ protected void onCreate(Bundle savedInstanceState) {
         fragmentManager = getSupportFragmentManager();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             mNewAccountName = savedInstanceState.getString(NEW_ACCOUNT_NAME_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -858,7 +858,7 @@ public void onSubscribedSubredditClick(String subredditName) {
                     }
 
                     @Override
-                    public void onAccountClick(String accountName) {
+                    public void onAccountClick(@NonNull String accountName) {
                         SwitchAccount.switchAccount(mRedditDataRoomDatabase, mCurrentAccountSharedPreferences,
                                 mExecutor, new Handler(), accountName, newAccount -> {
                             Intent intent = new Intent(MainActivity.this, MainActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MultiredditSelectionActivity.java
Patch:
@@ -118,7 +118,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState == null) {
             bindView(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostGalleryActivity.java
Patch:
@@ -219,7 +219,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         adapter = new RedditGallerySubmissionRecyclerViewAdapter(this, mCustomThemeWrapper, () -> {
             if (!isUploading) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostImageActivity.java
Patch:
@@ -212,7 +212,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             selectedAccount = savedInstanceState.getParcelable(SELECTED_ACCOUNT_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostPollActivity.java
Patch:
@@ -225,7 +225,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         Resources resources = getResources();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostVideoActivity.java
Patch:
@@ -231,7 +231,7 @@ protected void onCreate(Bundle savedInstanceState) {
         resources = getResources();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             selectedAccount = savedInstanceState.getParcelable(SELECTED_ACCOUNT_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ReportActivity.java
Patch:
@@ -119,7 +119,7 @@ protected void onCreate(Bundle savedInstanceState) {
         recyclerView.setAdapter(mAdapter);
 
         if (rulesReasons == null) {
-            FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken, mAccountName, mSubredditName, new FetchRules.FetchRulesListener() {
+            FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken, mSubredditName, new FetchRules.FetchRulesListener() {
                 @Override
                 public void success(ArrayList<Rule> rules) {
                     mAdapter.setRules(ReportReason.convertRulesToReasons(rules));

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/RulesActivity.java
Patch:
@@ -134,7 +134,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mAdapter = new RulesRecyclerViewAdapter(this, mCustomThemeWrapper, sliderPanel, mSubredditName);
         recyclerView.setAdapter(mAdapter);
 
-        FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken, mAccountName,
+        FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken,
                 mSubredditName, new FetchRules.FetchRulesListener() {
                     @Override
                     public void success(ArrayList<Rule> rules) {
@@ -183,7 +183,7 @@ private void displayError() {
         errorTextView.setOnClickListener(view -> {
             progressBar.setVisibility(View.VISIBLE);
             errorTextView.setVisibility(View.GONE);
-            FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken, mAccountName, mSubredditName, new FetchRules.FetchRulesListener() {
+            FetchRules.fetchRules(mExecutor, new Handler(), mOauthRetrofit, mAccessToken, mSubredditName, new FetchRules.FetchRulesListener() {
                 @Override
                 public void success(ArrayList<Rule> rules) {
                     progressBar.setVisibility(View.GONE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchSubredditsResultActivity.java
Patch:
@@ -30,6 +30,7 @@
 import ml.docilealligator.infinityforreddit.ActivityToolbarInterface;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
@@ -106,7 +107,7 @@ protected void onCreate(Bundle savedInstanceState) {
         String query = getIntent().getExtras().getString(EXTRA_QUERY);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState == null) {
             mFragment = new SubredditListingFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchUsersResultActivity.java
Patch:
@@ -30,6 +30,7 @@
 import ml.docilealligator.infinityforreddit.ActivityToolbarInterface;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
@@ -105,7 +106,7 @@ protected void onCreate(Bundle savedInstanceState) {
         String query = getIntent().getExtras().getString(EXTRA_QUERY);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState == null) {
             mFragment = new UserListingFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SelectUserFlairActivity.java
Patch:
@@ -32,6 +32,7 @@
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SelectUserFlair;
 import ml.docilealligator.infinityforreddit.UserFlair;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.adapters.UserFlairRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
@@ -101,7 +102,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setTitle(mSubredditName);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             mUserFlairs = savedInstanceState.getParcelableArrayList(USER_FLAIRS_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubredditSelectionActivity.java
Patch:
@@ -150,12 +150,12 @@ protected void onCreate(Bundle savedInstanceState) {
                         .build();
             } else {
                 mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-                mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+                mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
                 mAccountProfileImageUrl = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_IMAGE_URL, null);
             }
         } else {
             mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-            mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+            mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
             mAccountProfileImageUrl = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_IMAGE_URL, null);
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPrivateMessagesActivity.java
Patch:
@@ -38,6 +38,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.adapters.PrivateMessagesDetailRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.asynctasks.LoadUserData;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
@@ -133,7 +134,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mProvideUserAvatarCallbacks = new ArrayList<>();
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
         if (savedInstanceState != null) {
             mUserAvatar = savedInstanceState.getString(USER_AVATAR_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -119,7 +119,7 @@ public boolean areContentsTheSame(@NonNull Comment comment, @NonNull Comment t1)
     public CommentsListingRecyclerViewAdapter(BaseActivity activity, Retrofit oauthRetrofit,
                                               CustomThemeWrapper customThemeWrapper, Locale locale,
                                               SharedPreferences sharedPreferences, String accessToken,
-                                              String accountName, String username,
+                                              @NonNull String accountName, String username,
                                               RetryLoadingMoreCallback retryLoadingMoreCallback) {
         super(DIFF_CALLBACK);
         mActivity = activity;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -165,7 +165,7 @@ public class CommentsRecyclerViewAdapter extends RecyclerView.Adapter<RecyclerVi
     public CommentsRecyclerViewAdapter(BaseActivity activity, ViewPostDetailFragment fragment,
                                        CustomThemeWrapper customThemeWrapper,
                                        Executor executor, Retrofit oauthRetrofit,
-                                       String accessToken, String accountName,
+                                       @Nullable String accessToken, @NonNull String accountName,
                                        Post post, Locale locale, String singleCommentId,
                                        boolean isSingleCommentThreadMode,
                                        SharedPreferences sharedPreferences,
@@ -175,6 +175,8 @@ public CommentsRecyclerViewAdapter(BaseActivity activity, ViewPostDetailFragment
         mFragment = fragment;
         mExecutor = executor;
         mOauthRetrofit = oauthRetrofit;
+        mAccessToken = accessToken;
+        mAccountName = accountName;
         mGlide = Glide.with(activity);
         mSecondaryTextColor = customThemeWrapper.getSecondaryTextColor();
         mCommentTextColor = customThemeWrapper.getCommentColor();
@@ -255,8 +257,6 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 });
         recycledViewPool = new RecyclerView.RecycledViewPool();
-        mAccessToken = accessToken;
-        mAccountName = accountName;
         mPost = post;
         mVisibleComments = new ArrayList<>();
         mLocale = locale;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/FollowedUsersRecyclerViewAdapter.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
@@ -54,7 +55,7 @@ public class FollowedUsersRecyclerViewAdapter extends RecyclerView.Adapter<Recyc
     public FollowedUsersRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit,
                                             RedditDataRoomDatabase redditDataRoomDatabase,
                                             CustomThemeWrapper customThemeWrapper,
-                                            String accessToken, String accountName) {
+                                            @Nullable String accessToken, @NonNull String accountName) {
         mActivity = activity;
         mExecutor = executor;
         mOauthRetrofit = oauthRetrofit;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/HistoryPostRecyclerViewAdapter.java
Patch:
@@ -244,7 +244,7 @@ public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
     public HistoryPostRecyclerViewAdapter(BaseActivity activity, HistoryPostFragment fragment, Executor executor, Retrofit oauthRetrofit,
                                           Retrofit gfycatRetrofit, Retrofit redgifsRetrofit, Provider<StreamableAPI> streambleApiProvider,
                                           CustomThemeWrapper customThemeWrapper, Locale locale,
-                                          String accessToken, String accountName, int postType, int postLayout, boolean displaySubredditName,
+                                          @Nullable String accessToken, @NonNull String accountName, int postType, int postLayout, boolean displaySubredditName,
                                           SharedPreferences sharedPreferences, SharedPreferences currentAccountSharedPreferences,
                                           SharedPreferences nsfwAndSpoilerSharedPreferences,
                                           ExoCreator exoCreator, Callback callback) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MultiRedditListingRecyclerViewAdapter.java
Patch:
@@ -9,6 +9,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
@@ -62,7 +63,7 @@ public interface OnItemClickListener {
     public MultiRedditListingRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit,
                                                  RedditDataRoomDatabase redditDataRoomDatabase,
                                                  CustomThemeWrapper customThemeWrapper,
-                                                 String accessToken, String accountName,
+                                                 @Nullable String accessToken, @NonNull String accountName,
                                                  OnItemClickListener onItemClickListener) {
         mActivity = activity;
         mExecutor = executor;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -227,8 +227,8 @@ public PostDetailRecyclerViewAdapter(@NonNull BaseActivity activity, ViewPostDet
                                          Retrofit retrofit, Retrofit oauthRetrofit, Retrofit gfycatRetrofit,
                                          Retrofit redgifsRetrofit, Provider<StreamableAPI> streamableApiProvider,
                                          RedditDataRoomDatabase redditDataRoomDatabase, RequestManager glide,
-                                         boolean separatePostAndComments, String accessToken,
-                                         String accountName, Post post, Locale locale,
+                                         boolean separatePostAndComments, @Nullable String accessToken,
+                                         @NonNull String accountName, Post post, Locale locale,
                                          SharedPreferences sharedPreferences,
                                          SharedPreferences currentAccountSharedPreferences,
                                          SharedPreferences nsfwAndSpoilerSharedPreferences,

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -257,7 +257,7 @@ public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
     public PostRecyclerViewAdapter(BaseActivity activity, PostFragment fragment, Executor executor, Retrofit oauthRetrofit,
                                    Retrofit gfycatRetrofit, Retrofit redgifsRetrofit, Provider<StreamableAPI> streamableApiProvider,
                                    CustomThemeWrapper customThemeWrapper, Locale locale,
-                                   String accessToken, String accountName, int postType, int postLayout, boolean displaySubredditName,
+                                   @Nullable String accessToken, @NonNull String accountName, int postType, int postLayout, boolean displaySubredditName,
                                    SharedPreferences sharedPreferences, SharedPreferences currentAccountSharedPreferences,
                                    SharedPreferences nsfwAndSpoilerSharedPreferences,
                                    SharedPreferences postHistorySharedPreferences,

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -70,7 +70,7 @@ public class PrivateMessagesDetailRecyclerViewAdapter extends RecyclerView.Adapt
 
     public PrivateMessagesDetailRecyclerViewAdapter(ViewPrivateMessagesActivity viewPrivateMessagesActivity,
                                                     SharedPreferences sharedPreferences, Locale locale,
-                                                    Message message, String accountName,
+                                                    Message message, @NonNull String accountName,
                                                     CustomThemeWrapper customThemeWrapper) {
         mMessage = message;
         mViewPrivateMessagesActivity = viewPrivateMessagesActivity;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SubredditListingRecyclerViewAdapter.java
Patch:
@@ -13,6 +13,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.paging.PagedListAdapter;
 import androidx.recyclerview.widget.DiffUtil;
@@ -76,7 +77,7 @@ public boolean areContentsTheSame(@NonNull SubredditData oldItem, @NonNull Subre
 
     public SubredditListingRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit, Retrofit retrofit,
                                                CustomThemeWrapper customThemeWrapper,
-                                               String accessToken, String accountName,
+                                               @Nullable String accessToken, @NonNull String accountName,
                                                RedditDataRoomDatabase redditDataRoomDatabase,
                                                boolean isMultiSelection, Callback callback) {
         super(DIFF_CALLBACK);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SubscribedSubredditsRecyclerViewAdapter.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
@@ -60,7 +61,7 @@ public class SubscribedSubredditsRecyclerViewAdapter extends RecyclerView.Adapte
     public SubscribedSubredditsRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit,
                                                    RedditDataRoomDatabase redditDataRoomDatabase,
                                                    CustomThemeWrapper customThemeWrapper,
-                                                   String accessToken, String accountName) {
+                                                   @Nullable String accessToken, @NonNull String accountName) {
         mActivity = activity;
         mExecutor = executor;
         glide = Glide.with(activity);
@@ -75,7 +76,7 @@ public SubscribedSubredditsRecyclerViewAdapter(BaseActivity activity, Executor e
     public SubscribedSubredditsRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit,
                                                    RedditDataRoomDatabase redditDataRoomDatabase,
                                                    CustomThemeWrapper customThemeWrapper,
-                                                   String accessToken, String accountName, boolean hasClearSelectionRow,
+                                                   @Nullable String accessToken, @NonNull String accountName, boolean hasClearSelectionRow,
                                                    ItemClickListener itemClickListener) {
         this(activity, executor, oauthRetrofit, redditDataRoomDatabase, customThemeWrapper, accessToken, accountName);
         this.hasClearSelectionRow = hasClearSelectionRow;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/UserListingRecyclerViewAdapter.java
Patch:
@@ -13,6 +13,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.paging.PagedListAdapter;
 import androidx.recyclerview.widget.DiffUtil;
@@ -74,8 +75,8 @@ public boolean areContentsTheSame(@NonNull UserData oldItem, @NonNull UserData n
     private final Callback callback;
 
     public UserListingRecyclerViewAdapter(BaseActivity activity, Executor executor, Retrofit oauthRetrofit, Retrofit retrofit,
-                                          CustomThemeWrapper customThemeWrapper, String accessToken,
-                                          String accountName, RedditDataRoomDatabase redditDataRoomDatabase,
+                                          CustomThemeWrapper customThemeWrapper, @Nullable String accessToken,
+                                          @NonNull String accountName, RedditDataRoomDatabase redditDataRoomDatabase,
                                           boolean isMultiSelection, Callback callback) {
         super(DIFF_CALLBACK);
         this.activity = activity;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/HeaderSectionRecyclerViewAdapter.java
Patch:
@@ -51,7 +51,7 @@ public class HeaderSectionRecyclerViewAdapter extends RecyclerView.Adapter<Recyc
     private boolean hideKarma;
 
     public HeaderSectionRecyclerViewAdapter(BaseActivity baseActivity, CustomThemeWrapper customThemeWrapper,
-                                            RequestManager glide, String accountName,
+                                            RequestManager glide, @NonNull String accountName,
                                             SharedPreferences sharedPreferences,
                                             SharedPreferences navigationDrawerSharedPreferences,
                                             SharedPreferences securitySharedPreferences,

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/NavigationDrawerRecyclerViewMergedAdapter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.SharedPreferences;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.ConcatAdapter;
 
 import com.bumptech.glide.Glide;
@@ -30,7 +31,7 @@ public NavigationDrawerRecyclerViewMergedAdapter(BaseActivity baseActivity, Shar
                                                      SharedPreferences navigationDrawerSharedPreferences,
                                                      SharedPreferences securitySharedPreferences,
                                                      CustomThemeWrapper customThemeWrapper,
-                                                     String accountName,
+                                                     @NonNull String accountName,
                                                      ItemClickListener itemClickListener) {
         RequestManager glide = Glide.with(baseActivity);
 
@@ -142,6 +143,6 @@ public void setHideKarma(boolean hideKarma) {
     public interface ItemClickListener {
         void onMenuClick(int stringId);
         void onSubscribedSubredditClick(String subredditName);
-        void onAccountClick(String accountName);
+        void onAccountClick(@NonNull String accountName);
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/PreferenceSectionRecyclerViewAdapter.java
Patch:
@@ -37,7 +37,7 @@ public class PreferenceSectionRecyclerViewAdapter extends RecyclerView.Adapter<R
     private NavigationDrawerRecyclerViewMergedAdapter.ItemClickListener itemClickListener;
 
     public PreferenceSectionRecyclerViewAdapter(BaseActivity baseActivity, CustomThemeWrapper customThemeWrapper,
-                                                String accountName, SharedPreferences nsfwAndSpoilerSharedPreferences,
+                                                @NonNull String accountName, SharedPreferences nsfwAndSpoilerSharedPreferences,
                                                 SharedPreferences navigationDrawerSharedPreferences,
                                                 NavigationDrawerRecyclerViewMergedAdapter.ItemClickListener itemClickListener) {
         this.baseActivity = baseActivity;

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/CheckIsFollowingUser.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.os.Handler;
 
+import androidx.annotation.NonNull;
+
 import java.util.concurrent.Executor;
 
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
@@ -11,7 +13,7 @@
 public class CheckIsFollowingUser {
     public static void checkIsFollowingUser(Executor executor, Handler handler,
                                             RedditDataRoomDatabase redditDataRoomDatabase, String username,
-                                            String accountName, CheckIsFollowingUserListener checkIsFollowingUserListener) {
+                                            @NonNull String accountName, CheckIsFollowingUserListener checkIsFollowingUserListener) {
         executor.execute(() -> {
             SubscribedUserData subscribedUserData = redditDataRoomDatabase.subscribedUserDao().getSubscribedUser(username, accountName.equals(Account.ANONYMOUS_ACCOUNT) ? Account.ANONYMOUS_ACCOUNT : accountName);
             handler.post(() -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/CheckIsSubscribedToSubreddit.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.os.Handler;
 
+import androidx.annotation.NonNull;
+
 import java.util.concurrent.Executor;
 
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
@@ -11,7 +13,7 @@
 public class CheckIsSubscribedToSubreddit {
 
     public static void checkIsSubscribedToSubreddit(Executor executor, Handler handler, RedditDataRoomDatabase redditDataRoomDatabase,
-                                                    String subredditName, String accountName,
+                                                    String subredditName, @NonNull String accountName,
                                                     CheckIsSubscribedToSubredditListener checkIsSubscribedToSubredditListener) {
         executor.execute(() -> {
             if (accountName.equals(Account.ANONYMOUS_ACCOUNT)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -162,7 +162,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mGlide = Glide.with(this);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        if (mAccessToken == null) {
+        if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null) == null) {
             finish();
             return;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CreateMultiRedditActivity.java
Patch:
@@ -117,7 +117,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
-        if (mAccessToken == null) {
+        if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
             visibilityLinearLayout.setVisibility(View.GONE);
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                 nameEditText.setImeOptions(nameEditText.getImeOptions() | EditorInfoCompat.IME_FLAG_NO_PERSONALIZED_LEARNING);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomizePostFilterActivity.java
Patch:
@@ -45,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.postfilter.PostFilter;
 import ml.docilealligator.infinityforreddit.postfilter.SavePostFilter;
@@ -259,9 +260,8 @@ protected void onCreate(Bundle savedInstanceState) {
             onlySpoilerSwitch.performClick();
         });
 
-        String accessToken = currentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         addSubredditsImageView.setOnClickListener(view -> {
-            if (accessToken == null) {
+            if (currentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(Account.ANONYMOUS_ACCOUNT)) {
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, true);
                 intent.putExtra(SearchActivity.EXTRA_IS_MULTI_SELECTION, true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditMultiRedditActivity.java
Patch:
@@ -126,7 +126,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
 
-        if (mAccessToken == null) {
+        if (mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT).equals(Account.ANONYMOUS_ACCOUNT)) {
             visibilityLinearLayout.setVisibility(View.GONE);
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                 nameEditText.setImeOptions(nameEditText.getImeOptions() | EditorInfoCompat.IME_FLAG_NO_PERSONALIZED_LEARNING);
@@ -146,7 +146,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     private void bindView() {
         if (multiReddit == null) {
-            if (mAccessToken == null) {
+            if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
                 FetchMultiRedditInfo.anonymousFetchMultiRedditInfo(mExecutor, new Handler(),
                         mRedditDataRoomDatabase, multipath, new FetchMultiRedditInfo.FetchMultiRedditInfoListener() {
                             @Override
@@ -217,7 +217,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             }
 
-            if (mAccessToken == null) {
+            if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
                 String name = nameEditText.getText().toString();
                 multiReddit.setDisplayName(name);
                 multiReddit.setName(name);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchActivity.java
Patch:
@@ -45,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.adapters.SearchActivityRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.adapters.SubredditAutocompleteRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
@@ -174,7 +175,7 @@ protected void onCreate(Bundle savedInstanceState) {
             searchEditText.setHint(getText(R.string.search_only_users_hint));
         }
 
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         boolean nsfw = mNsfwAndSpoilerSharedPreferences.getBoolean((mAccountName == null ? "" : mAccountName) + SharedPreferencesUtils.NSFW_BASE, false);
 
@@ -199,7 +200,7 @@ protected void onCreate(Bundle savedInstanceState) {
             finish();
         });
 
-        if (mAccessToken == null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+        if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             searchEditText.setImeOptions(searchEditText.getImeOptions() | EditorInfoCompat.IME_FLAG_NO_PERSONALIZED_LEARNING);
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -179,7 +179,7 @@ protected void onCreate(Bundle savedInstanceState) {
             showMultiReddits = getIntent().getBooleanExtra(EXTRA_SHOW_MULTIREDDITS, false);
         }
 
-        if (mAccessToken == null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+        if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             searchEditText.setImeOptions(searchEditText.getImeOptions() | EditorInfoCompat.IME_FLAG_NO_PERSONALIZED_LEARNING);
         }
 
@@ -402,7 +402,7 @@ public void deleteMultiReddit(MultiReddit multiReddit) {
                 .setMessage(R.string.delete_multi_reddit_dialog_message)
                 .setPositiveButton(R.string.delete, (dialogInterface, i)
                         -> {
-                    if (mAccessToken == null) {
+                    if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
                         DeleteMultiredditInDatabase.deleteMultiredditInDatabase(mExecutor, new Handler(), mRedditDataRoomDatabase, mAccountName, multiReddit.getPath(),
                                 () -> Toast.makeText(SubscribedThingListingActivity.this,
                                         R.string.delete_multi_reddit_success, Toast.LENGTH_SHORT).show());
@@ -490,7 +490,7 @@ public Fragment getItem(int position) {
                 case 1: {
                     FollowedUsersListingFragment fragment = new FollowedUsersListingFragment();
                     Bundle bundle = new Bundle();
-                    bundle.putString(FollowedUsersListingFragment.EXTRA_ACCOUNT_NAME, mAccountName == null ? Account.ANONYMOUS_ACCOUNT : mAccountName);
+                    bundle.putString(FollowedUsersListingFragment.EXTRA_ACCOUNT_NAME, mAccountName.equals(Account.ANONYMOUS_ACCOUNT) ? Account.ANONYMOUS_ACCOUNT : mAccountName);
                     bundle.putString(FollowedUsersListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                     fragment.setArguments(bundle);
                     return fragment;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -93,6 +93,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.StreamableVideo;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.apis.StreamableAPI;
 import ml.docilealligator.infinityforreddit.apis.VReddIt;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PlaybackSpeedBottomSheetFragment;
@@ -792,6 +793,7 @@ public void onResponse(@NonNull Call<String> call, @NonNull Response<String> res
                     int commentsIndex = segments.lastIndexOf("comments");
                     String postId = segments.get(commentsIndex + 1);
                     FetchPost.fetchPost(mExecutor, new Handler(), retrofit, postId, null,
+                            mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT),
                             new FetchPost.FetchPostListener() {
                                 @Override
                                 public void fetchPostSuccess(Post post) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -40,6 +40,7 @@
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
 import ml.docilealligator.infinityforreddit.VoteThing;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.activities.LinkResolverActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewImageOrGifActivity;
@@ -578,7 +579,7 @@ public void unlockSwipe() {
             commentMarkdownView.setAdapter(markwonAdapter);
 
             upvoteButton.setOnClickListener(view -> {
-                if (mAccessToken == null) {
+                if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
                     Toast.makeText(mActivity, R.string.login_first, Toast.LENGTH_SHORT).show();
                     return;
                 }
@@ -658,7 +659,7 @@ public void onVoteThingFail(int position) {
             });
 
             downvoteButton.setOnClickListener(view -> {
-                if (mAccessToken == null) {
+                if (mAccountName.equals(Account.ANONYMOUS_ACCOUNT)) {
                     Toast.makeText(mActivity, R.string.login_first, Toast.LENGTH_SHORT).show();
                     return;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -655,11 +655,11 @@ private int getNColumns(Resources resources) {
     private void initializeAndBindPostViewModel(String accessToken) {
         if (postType == HistoryPostPagingSource.TYPE_READ_POSTS) {
             mHistoryPostViewModel = new ViewModelProvider(HistoryPostFragment.this, new HistoryPostViewModel.Factory(mExecutor,
-                    accessToken == null ? mRetrofit : mOauthRetrofit, mRedditDataRoomDatabase, accessToken,
+                    mOauthRetrofit, mRedditDataRoomDatabase, accessToken,
                     accountName, mSharedPreferences, HistoryPostPagingSource.TYPE_READ_POSTS, postFilter)).get(HistoryPostViewModel.class);
         } else {
             mHistoryPostViewModel = new ViewModelProvider(HistoryPostFragment.this, new HistoryPostViewModel.Factory(mExecutor,
-                    accessToken == null ? mRetrofit : mOauthRetrofit, mRedditDataRoomDatabase, accessToken,
+                    mOauthRetrofit, mRedditDataRoomDatabase, accessToken,
                     accountName, mSharedPreferences, HistoryPostPagingSource.TYPE_READ_POSTS, postFilter)).get(HistoryPostViewModel.class);
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MultiRedditListingFragment.java
Patch:
@@ -112,7 +112,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         String accessToken = getArguments().getString(EXTRA_ACCESS_TOKEN);
         boolean isGettingMultiredditInfo = getArguments().getBoolean(EXTRA_IS_GETTING_MULTIREDDIT_INFO, false);
 
-        if (accessToken == null) {
+        if (accountName.equals(Account.ANONYMOUS_ACCOUNT)) {
             mSwipeRefreshLayout.setEnabled(false);
         }
 
@@ -122,7 +122,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         MultiRedditListingRecyclerViewAdapter adapter = new MultiRedditListingRecyclerViewAdapter(mActivity,
                 mExecutor, mOauthRetrofit, mRedditDataRoomDatabase, mCustomThemeWrapper, accessToken,
-                new MultiRedditListingRecyclerViewAdapter.OnItemClickListener() {
+                accountName, new MultiRedditListingRecyclerViewAdapter.OnItemClickListener() {
             @Override
             public void onClick(MultiReddit multiReddit) {
                 if (mActivity instanceof MultiredditSelectionActivity) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubredditListingFragment.java
Patch:
@@ -179,7 +179,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
         }
 
         SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(
-                accessToken == null ? mRetrofit : mOauthRetrofit, query, sortType, accessToken, nsfw);
+                mOauthRetrofit, query, sortType, accessToken, nsfw);
         mSubredditListingViewModel = new ViewModelProvider(this, factory).get(SubredditListingViewModel.class);
         mSubredditListingViewModel.getSubreddits().observe(getViewLifecycleOwner(), subredditData -> mAdapter.submitList(subredditData));
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubscribedSubredditsListingFragment.java
Patch:
@@ -113,7 +113,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME, Account.ANONYMOUS_ACCOUNT);
         String accessToken = getArguments().getString(EXTRA_ACCESS_TOKEN);
 
-        if (accessToken == null) {
+        if (accountName.equals(Account.ANONYMOUS_ACCOUNT)) {
             mSwipeRefreshLayout.setEnabled(false);
         }
 
@@ -125,11 +125,11 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         SubscribedSubredditsRecyclerViewAdapter adapter;
         if (getArguments().getBoolean(EXTRA_IS_SUBREDDIT_SELECTION)) {
             adapter = new SubscribedSubredditsRecyclerViewAdapter(mActivity, mExecutor, mOauthRetrofit, mRedditDataRoomDatabase,
-                    mCustomThemeWrapper, accessToken, getArguments().getBoolean(EXTRA_EXTRA_CLEAR_SELECTION),
+                    mCustomThemeWrapper, accessToken, accountName, getArguments().getBoolean(EXTRA_EXTRA_CLEAR_SELECTION),
                     (name, iconUrl, subredditIsUser) -> ((SubredditSelectionActivity) mActivity).getSelectedSubreddit(name, iconUrl, subredditIsUser));
         } else {
             adapter = new SubscribedSubredditsRecyclerViewAdapter(mActivity, mExecutor, mOauthRetrofit, mRedditDataRoomDatabase,
-                    mCustomThemeWrapper, accessToken);
+                    mCustomThemeWrapper, accessToken, accountName);
         }
 
         mRecyclerView.setAdapter(adapter);

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -271,8 +271,10 @@ private Uri writeResponseBodyToDisk(ResponseBody body, boolean isDefaultDestinat
                     switch (mediaType) {
                         case EXTRA_MEDIA_TYPE_VIDEO:
                             mimeType = "video/mpeg";
+                            break;
                         case EXTRA_MEDIA_TYPE_GIF:
                             mimeType = "image/gif";
+                            break;
                         default:
                             mimeType = "image/jpeg";
                     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -41,7 +41,6 @@
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.core.MarkwonTheme;
 import io.noties.markwon.recycler.MarkwonAdapter;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
@@ -53,6 +52,7 @@
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
 import ml.docilealligator.infinityforreddit.events.ChangeNetworkStatusEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
+import ml.docilealligator.infinityforreddit.markdown.EvenBetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.EmoteCloseBracketInlineProcessor;
 import ml.docilealligator.infinityforreddit.markdown.EmotePlugin;
 import ml.docilealligator.infinityforreddit.markdown.ImageAndGifEntry;
@@ -182,7 +182,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 builder.linkColor(linkColor);
             }
         };
-        BetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
+        EvenBetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
             UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = UrlMenuBottomSheetFragment.newInstance(url);
             urlMenuBottomSheetFragment.show(getSupportFragmentManager(), null);
             return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -36,7 +36,6 @@
 import io.noties.markwon.MarkwonConfiguration;
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.core.MarkwonTheme;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.NetworkState;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
@@ -56,6 +55,7 @@
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockInterface;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.databinding.ItemCommentBinding;
+import ml.docilealligator.infinityforreddit.markdown.EvenBetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.CustomMarkwonAdapter;
 import ml.docilealligator.infinityforreddit.markdown.EmoteCloseBracketInlineProcessor;
 import ml.docilealligator.infinityforreddit.markdown.EmotePlugin;
@@ -173,7 +173,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 builder.linkColor(linkColor);
             }
         };
-        BetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
+        EvenBetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
             if (!activity.isDestroyed() && !activity.isFinishing()) {
                 UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = UrlMenuBottomSheetFragment.newInstance(url);
                 urlMenuBottomSheetFragment.show(activity.getSupportFragmentManager(), urlMenuBottomSheetFragment.getTag());

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -44,7 +44,6 @@
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.core.MarkwonTheme;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
 import ml.docilealligator.infinityforreddit.SortType;
@@ -61,13 +60,14 @@
 import ml.docilealligator.infinityforreddit.comment.FetchComment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.CommentIndentationView;
-import ml.docilealligator.infinityforreddit.markdown.CustomMarkwonAdapter;
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockInterface;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.databinding.ItemCommentBinding;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
+import ml.docilealligator.infinityforreddit.markdown.EvenBetterLinkMovementMethod;
+import ml.docilealligator.infinityforreddit.markdown.CustomMarkwonAdapter;
 import ml.docilealligator.infinityforreddit.markdown.EmoteCloseBracketInlineProcessor;
 import ml.docilealligator.infinityforreddit.markdown.EmotePlugin;
 import ml.docilealligator.infinityforreddit.markdown.ImageAndGifEntry;
@@ -207,7 +207,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 builder.linkColor(linkColor);
             }
         };
-        BetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
+        EvenBetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
             if (!activity.isDestroyed() && !activity.isFinishing()) {
                 UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = UrlMenuBottomSheetFragment.newInstance(url);
                 urlMenuBottomSheetFragment.show(activity.getSupportFragmentManager(), null);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -28,7 +28,6 @@
 import io.noties.markwon.MarkwonConfiguration;
 import io.noties.markwon.core.MarkwonTheme;
 import io.noties.markwon.ext.strikethrough.StrikethroughPlugin;
-import io.noties.markwon.inlineparser.AutolinkInlineProcessor;
 import io.noties.markwon.inlineparser.BangInlineProcessor;
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -32,7 +32,6 @@
 import io.noties.markwon.MarkwonConfiguration;
 import io.noties.markwon.core.MarkwonTheme;
 import io.noties.markwon.ext.strikethrough.StrikethroughPlugin;
-import io.noties.markwon.inlineparser.AutolinkInlineProcessor;
 import io.noties.markwon.inlineparser.BangInlineProcessor;
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -24,7 +24,6 @@
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.core.MarkwonTheme;
 import io.noties.markwon.recycler.MarkwonAdapter;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.Rule;
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
@@ -35,6 +34,7 @@
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockInterface;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
+import ml.docilealligator.infinityforreddit.markdown.EvenBetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.EmoteCloseBracketInlineProcessor;
 import ml.docilealligator.infinityforreddit.markdown.EmotePlugin;
 import ml.docilealligator.infinityforreddit.markdown.ImageAndGifEntry;
@@ -87,8 +87,8 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 builder.linkColor(customThemeWrapper.getLinkColor());
             }
         };
-        BetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
-            if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
+        EvenBetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
+            if (!activity.isDestroyed() && !activity.isFinishing()) {
                 UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = UrlMenuBottomSheetFragment.newInstance(url);
                 urlMenuBottomSheetFragment.show(activity.getSupportFragmentManager(), null);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/SpoilerOnClickTextView.java
Patch:
@@ -24,7 +24,7 @@ public boolean isSpoilerOnClick() {
         return isSpoilerOnClick;
     }
 
-    public void setSpoilerOnClick(boolean spoilerOnClick) {
+    public void  setSpoilerOnClick(boolean spoilerOnClick) {
         isSpoilerOnClick = spoilerOnClick;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -35,7 +35,6 @@
 import io.noties.markwon.MarkwonConfiguration;
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.core.MarkwonTheme;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
@@ -46,9 +45,10 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.CopyTextBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UrlMenuBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.ChangeNetworkStatusEvent;
+import ml.docilealligator.infinityforreddit.markdown.EvenBetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.CustomMarkwonAdapter;
-import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.markdown.EmoteCloseBracketInlineProcessor;
 import ml.docilealligator.infinityforreddit.markdown.EmotePlugin;
 import ml.docilealligator.infinityforreddit.markdown.ImageAndGifEntry;
@@ -153,7 +153,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                 });
             }
         };
-        BetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
+        EvenBetterLinkMovementMethod.OnLinkLongClickListener onLinkLongClickListener = (textView, url) -> {
             UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = UrlMenuBottomSheetFragment.newInstance(url);
             urlMenuBottomSheetFragment.show(getChildFragmentManager(), null);
             return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/SpoilerSpan.java
Patch:
@@ -8,8 +8,6 @@
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.transition.AutoTransition;
-import androidx.transition.TransitionManager;
 
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MediaMetadata.java
Patch:
@@ -22,7 +22,7 @@ public MediaMetadata(String id, String e, MediaItem original, MediaItem downscal
         this.e = e;
         isGIF = !e.equalsIgnoreCase("image");
         String path = Uri.parse(original.url).getPath();
-        this.fileName = path == null ? (isGIF ? "Animated.gif" : "Image.jpg") : path.substring(1);
+        this.fileName = path == null ? (isGIF ? "Animated.gif" : "Image.jpg") : path.substring(path.lastIndexOf('/') + 1);
         this.original = original;
         this.downscaled = downscaled;
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -148,7 +148,7 @@ public static String parseRedditImagesBlock(String markdown, @Nullable Map<Strin
                 //Minus "](".length()
                 caption = markdownStringBuilder.substring(matcher.start() + 1, urlStartIndex - 2);
             } else {
-                id = markdownStringBuilder.substring(matcher.start() + iReddItLength, matcher.start() + markdownStringBuilder.indexOf(".", iReddItLength));
+                id = markdownStringBuilder.substring(matcher.start() + iReddItLength, markdownStringBuilder.indexOf(".", matcher.start() + iReddItLength));
             }
 
             MediaMetadata mediaMetadata = mediaMetadataMap.get(id);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -563,7 +563,7 @@ public void unlockSwipe() {
                 }
                 if (canStartActivity) {
                     canStartActivity = false;
-                    itemView.callOnClick();
+                    itemView.performClick();
                 }
             });
             commentMarkdownView.setAdapter(markwonAdapter);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountSavedThingActivity.java
Patch:
@@ -156,7 +156,6 @@ protected void applyCustomTheme() {
     private void initializeViewPager() {
         sectionsPagerAdapter = new SectionsPagerAdapter(this);
         binding.accountSavedThingViewPager2.setAdapter(sectionsPagerAdapter);
-        binding.accountSavedThingViewPager2.setOffscreenPageLimit(2);
         binding.accountSavedThingViewPager2.setUserInputEnabled(!mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false));
         new TabLayoutMediator(binding.accountSavedThingTabLayout, binding.accountSavedThingViewPager2, (tab, position) -> {
             switch (position) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -225,7 +225,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         }
     }
 
-    protected abstract SharedPreferences getDefaultSharedPreferences();
+    public abstract SharedPreferences getDefaultSharedPreferences();
 
     protected abstract CustomThemeWrapper getCustomThemeWrapper();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -213,7 +213,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
             ImageAndGifPlugin imageAndGifPlugin = new ImageAndGifPlugin();
             Markwon postBodyMarkwon = MarkdownUtils.createFullRedditMarkwon(this,
                     miscPlugin, imageAndGifPlugin, parentTextColor, parentSpoilerBackgroundColor, null);
-            MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this, mGlide, new ImageAndGifEntry.OnItemClickListener() {
+            MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this, mSharedPreferences, mGlide, new ImageAndGifEntry.OnItemClickListener() {
                 @Override
                 public void onItemClick(Post.MediaMetadata mediaMetadata) {
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentFilterPreferenceActivity.java
Patch:
@@ -138,7 +138,7 @@ public void showCommentFilterOptions(Comment comment, @Nullable CommentFilter co
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentFilterUsageListingActivity.java
Patch:
@@ -160,7 +160,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomThemeListingActivity.java
Patch:
@@ -9,7 +9,6 @@
 import android.text.TextUtils;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.inputmethod.InputMethodManager;
 import android.widget.EditText;
 import android.widget.Toast;
 
@@ -143,7 +142,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomizePostFilterActivity.java
Patch:
@@ -370,7 +370,7 @@ private void bindView() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomizeThemeActivity.java
Patch:
@@ -245,7 +245,7 @@ public void onBackPressed() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditProfileActivity.java
Patch:
@@ -44,8 +44,6 @@
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.model.SlidrInterface;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.SubmitChangeAvatarEvent;
 import ml.docilealligator.infinityforreddit.events.SubmitChangeBannerEvent;
 import ml.docilealligator.infinityforreddit.events.SubmitSaveProfileEvent;
@@ -333,7 +331,7 @@ public void onSubmitSaveProfile(SubmitSaveProfileEvent event) {
 
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FetchRandomSubredditOrPostActivity.java
Patch:
@@ -89,7 +89,7 @@ public void onBackPressed() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -146,8 +146,8 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         Markwon markwon = MarkdownUtils.createFullRedditMarkwon(this,
                 miscPlugin, imageAndGifPlugin, markdownColor, spoilerBackgroundColor, null);
 
-        MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this, Glide.with(this),
-                new ImageAndGifEntry.OnItemClickListener() {
+        MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this,
+                mSharedPreferences, Glide.with(this), new ImageAndGifEntry.OnItemClickListener() {
                     @Override
                     public void onItemClick(Post.MediaMetadata mediaMetadata) {
 
@@ -200,7 +200,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LockScreenActivity.java
Patch:
@@ -84,7 +84,7 @@ public void onAuthenticationSucceeded(
 
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -92,7 +92,6 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostTypeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.RandomBottomSheetFragment;
-import ml.docilealligator.infinityforreddit.bottomsheetfragments.ImportantInfoBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.SortTimeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.SortTypeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MultiredditSelectionActivity.java
Patch:
@@ -130,7 +130,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostFilterPreferenceActivity.java
Patch:
@@ -208,7 +208,7 @@ public void deletePostFilter(PostFilter postFilter) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostFilterUsageListingActivity.java
Patch:
@@ -194,7 +194,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostGalleryActivity.java
Patch:
@@ -419,7 +419,7 @@ private void loadCurrentAccount() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostPollActivity.java
Patch:
@@ -33,7 +33,6 @@
 import com.google.android.material.materialswitch.MaterialSwitch;
 import com.google.android.material.slider.Slider;
 import com.google.android.material.snackbar.Snackbar;
-import com.google.android.material.switchmaterial.SwitchMaterial;
 import com.google.android.material.textfield.TextInputEditText;
 import com.google.android.material.textfield.TextInputLayout;
 import com.google.gson.Gson;
@@ -401,7 +400,7 @@ private void loadCurrentAccount() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostTextActivity.java
Patch:
@@ -36,7 +36,6 @@
 import com.google.android.material.divider.MaterialDivider;
 import com.google.android.material.materialswitch.MaterialSwitch;
 import com.google.android.material.snackbar.Snackbar;
-import com.google.android.material.switchmaterial.SwitchMaterial;
 import com.libRG.CustomTextView;
 
 import org.greenrobot.eventbus.EventBus;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ReportActivity.java
Patch:
@@ -184,7 +184,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/RulesActivity.java
Patch:
@@ -38,7 +38,6 @@
 import ml.docilealligator.infinityforreddit.adapters.RulesRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.model.SlidrInterface;
 import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchUsersResultActivity.java
Patch:
@@ -125,7 +125,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SelectUserFlairActivity.java
Patch:
@@ -219,7 +219,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SelectedSubredditsAndUsersActivity.java
Patch:
@@ -181,7 +181,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SendPrivateMessageActivity.java
Patch:
@@ -162,7 +162,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubmitCrosspostActivity.java
Patch:
@@ -429,7 +429,7 @@ private Post.Preview getPreview(Post post) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SuicidePreventionActivity.java
Patch:
@@ -68,7 +68,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/TrendingActivity.java
Patch:
@@ -314,7 +314,7 @@ protected void onDestroy() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPrivateMessagesActivity.java
Patch:
@@ -297,7 +297,7 @@ protected void onDestroy() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -95,8 +95,6 @@
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.NavigationWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.model.SlidrInterface;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.ChangeNSFWEvent;
 import ml.docilealligator.infinityforreddit.events.GoBackToMainPageEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WebViewActivity.java
Patch:
@@ -110,7 +110,7 @@ public void onPageFinished(WebView view, String url) {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -183,8 +183,8 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         markwon = MarkdownUtils.createFullRedditMarkwon(this,
                 miscPlugin, imageAndGifPlugin, markdownColor, spoilerBackgroundColor, onLinkLongClickListener);
 
-        markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this, mGlide,
-                new ImageAndGifEntry.OnItemClickListener() {
+        markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(this, mSharedPreferences,
+                mGlide, new ImageAndGifEntry.OnItemClickListener() {
                     @Override
                     public void onItemClick(Post.MediaMetadata mediaMetadata) {
 
@@ -296,7 +296,7 @@ protected void onDestroy() {
     }
 
     @Override
-    protected SharedPreferences getDefaultSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -293,7 +293,8 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         mImageAndGifPlugin = new ImageAndGifPlugin();
         mPostDetailMarkwon = MarkdownUtils.createFullRedditMarkwon(mActivity,
                 miscPlugin, mImageAndGifPlugin, markdownColor, postSpoilerBackgroundColor, onLinkLongClickListener);
-        mMarkwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity, mGlide, new ImageAndGifEntry.OnItemClickListener() {
+        mMarkwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity, sharedPreferences,
+                mGlide, new ImageAndGifEntry.OnItemClickListener() {
             @Override
             public void onItemClick(Post.MediaMetadata mediaMetadata) {
                 Intent intent = new Intent(activity, ViewImageOrGifActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -143,7 +143,8 @@ class RuleViewHolder extends RecyclerView.ViewHolder {
             if (activity.typeface != null) {
                 shortNameTextView.setTypeface(activity.typeface);
             }
-            markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity, Glide.with(activity),
+            markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity,
+                    activity.getDefaultSharedPreferences(), Glide.with(activity),
                     new ImageAndGifEntry.OnItemClickListener() {
                         @Override
                         public void onItemClick(Post.MediaMetadata mediaMetadata) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -150,7 +150,8 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
         ImageAndGifPlugin imageAndGifPlugin = new ImageAndGifPlugin();
         Markwon markwon = MarkdownUtils.createFullRedditMarkwon(activity,
                 miscPlugin, imageAndGifPlugin, markdownColor, spoilerBackgroundColor, onLinkLongClickListener);
-        MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity, Glide.with(this),
+        MarkwonAdapter markwonAdapter = MarkdownUtils.createTablesAdapter(new ImageAndGifEntry(activity,
+                activity.getDefaultSharedPreferences(),Glide.with(this),
                 new ImageAndGifEntry.OnItemClickListener() {
                     @Override
                     public void onItemClick(Post.MediaMetadata mediaMetadata) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/Post.java
Patch:
@@ -788,6 +788,7 @@ public MediaMetadata(String id, String e, MediaItem original, MediaItem downscal
         protected MediaMetadata(Parcel in) {
             id = in.readString();
             e = in.readString();
+            fileName = in.readString();
             original = in.readParcelable(MediaItem.class.getClassLoader());
             downscaled = in.readParcelable(MediaItem.class.getClassLoader());
         }
@@ -813,6 +814,7 @@ public int describeContents() {
         public void writeToParcel(@NonNull Parcel dest, int flags) {
             dest.writeString(id);
             dest.writeString(e);
+            dest.writeString(fileName);
             dest.writeParcelable(original, flags);
             dest.writeParcelable(downscaled, flags);
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -267,7 +267,7 @@ private Uri writeResponseBodyToDisk(ResponseBody body, boolean isDefaultDestinat
                 } else {
                     ContentValues contentValues = new ContentValues();
                     contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, destinationFileName);
-                    contentValues.put(MediaStore.MediaColumns.MIME_TYPE, mediaType == EXTRA_MEDIA_TYPE_VIDEO ? "video/*" : "image/*");
+                    contentValues.put(MediaStore.MediaColumns.MIME_TYPE, mediaType == EXTRA_MEDIA_TYPE_VIDEO ? "video/mpeg" : "image/jpeg");
                     contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, destinationFileUriString);
                     contentValues.put(MediaStore.MediaColumns.IS_PENDING, 1);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -150,8 +150,7 @@ public static String parseInlineEmotes(String markdown, JSONObject mediaMetadata
     }
 
     public static String parseInlineRedditImages(String markdown) {
-        return markdown;
-        /*StringBuilder markdownStringBuilder = new StringBuilder(markdown);
+        StringBuilder markdownStringBuilder = new StringBuilder(markdown);
         Pattern inlineRedditImagePattern = REGEX_PATTERNS[6];
         Matcher matcher = inlineRedditImagePattern.matcher(markdownStringBuilder);
         int start = 0;
@@ -162,7 +161,7 @@ public static String parseInlineRedditImages(String markdown) {
             matcher = inlineRedditImagePattern.matcher(markdownStringBuilder);
         }
 
-        return markdownStringBuilder.toString();*/
+        return markdownStringBuilder.toString();
     }
 
     public static String trimTrailingWhitespace(String source) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -1682,8 +1682,7 @@ private Fragment generatePostFragment(int postType, String name) {
             } else if (postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_UPVOTED
                     || postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_DOWNVOTED
                     || postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_HIDDEN
-                    || postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_SAVED
-                    || postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_GILDED) {
+                    || postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_SAVED) {
                 PostFragment fragment = new PostFragment();
                 Bundle bundle = new Bundle();
                 bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostPagingSource.TYPE_USER);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostGalleryActivity.java
Patch:
@@ -567,6 +567,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 promptAlertDialog(R.string.exit_when_submit, R.string.exit_when_submit_post_detail);
                 return true;
             } else {
+                redditGalleryImageInfoList = adapter.getRedditGalleryImageInfoList();
                 if (!titleEditText.getText().toString().equals("") || redditGalleryImageInfoList != null) {
                     promptAlertDialog(R.string.discard, R.string.discard_detail);
                     return true;
@@ -585,6 +586,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             }
 
+            redditGalleryImageInfoList = adapter.getRedditGalleryImageInfoList();
             if (redditGalleryImageInfoList == null || redditGalleryImageInfoList.isEmpty()) {
                 Snackbar.make(coordinatorLayout, R.string.select_an_image, Snackbar.LENGTH_SHORT).show();
                 return true;
@@ -635,6 +637,7 @@ public void onBackPressed() {
         if (isPosting) {
             promptAlertDialog(R.string.exit_when_submit, R.string.exit_when_submit_post_detail);
         } else {
+            redditGalleryImageInfoList = adapter.getRedditGalleryImageInfoList();
             if (!titleEditText.getText().toString().equals("") || redditGalleryImageInfoList != null) {
                 promptAlertDialog(R.string.discard, R.string.discard_detail);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/ImageAndGifBlockParser.java
Patch:
@@ -33,7 +33,7 @@ public BlockContinue tryContinue(ParserState parserState) {
     }
 
     public static class Factory extends AbstractBlockParserFactory {
-        private Pattern redditPreviewPattern =  Pattern.compile("!\\[img]\\(https://preview.redd.it/\\w+.(jpg|png)((\\?+[-a-zA-Z0-9()@:%_+.~#?&/=]*)|)\\)");
+        private final Pattern redditPreviewPattern =  Pattern.compile("!\\[img]\\(https://preview.redd.it/\\w+.(jpg|png)((\\?+[-a-zA-Z0-9()@:%_+.~#?&/=]*)|)\\)");
         private Map<String, Post.MediaMetadata> mediaMetadataMap;
         private final int fromIndex = "![img](https://preview.redd.it/".length();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditDataRoomDatabase.java
Patch:
@@ -405,7 +405,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
         @Override
         public void migrate(@NonNull SupportSQLiteDatabase database) {
             database.execSQL("CREATE TABLE comment_filter " +
-                    "(name TEXT NOT NULL PRIMARY KEY, max_vote INTEGER NOT NULL, min_vote INTEGER NOT NULL, exclude_strings TEXT)");
+                    "(name TEXT NOT NULL PRIMARY KEY, max_vote INTEGER NOT NULL, min_vote INTEGER NOT NULL, exclude_strings TEXT, exclude_users TEXT)");
             database.execSQL("CREATE TABLE comment_filter_usage (name TEXT NOT NULL, usage INTEGER NOT NULL, " +
                     "name_of_usage TEXT NOT NULL, PRIMARY KEY(name, usage, name_of_usage), FOREIGN KEY(name) REFERENCES comment_filter(name) ON DELETE CASCADE)");
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentFilterUsageEmbeddedRecyclerViewAdapter.java
Patch:
@@ -41,9 +41,6 @@ public void onBindViewHolder(@NonNull EntryViewHolder holder, int position) {
                 case CommentFilterUsage.SUBREDDIT_TYPE:
                     holder.textView.setText("r/" + commentFilterUsage.nameOfUsage);
                     break;
-                case CommentFilterUsage.USER_TYPE:
-                    holder.textView.setText("u/" + commentFilterUsage.nameOfUsage);
-                    break;
             }
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentFilterUsageRecyclerViewAdapter.java
Patch:
@@ -45,9 +45,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             case CommentFilterUsage.SUBREDDIT_TYPE:
                 ((CommentFilterUsageRecyclerViewAdapter.CommentFilterUsageViewHolder) holder).usageTextView.setText(activity.getString(R.string.post_filter_usage_subreddit, commentFilterUsage.nameOfUsage));
                 break;
-            case CommentFilterUsage.USER_TYPE:
-                ((CommentFilterUsageRecyclerViewAdapter.CommentFilterUsageViewHolder) holder).usageTextView.setText(activity.getString(R.string.post_filter_usage_user, commentFilterUsage.nameOfUsage));
-                break;
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/commentfilter/CommentFilterUsage.java
Patch:
@@ -13,7 +13,6 @@
                 childColumns = "name", onDelete = ForeignKey.CASCADE))
 public class CommentFilterUsage implements Parcelable {
     public static final int SUBREDDIT_TYPE = 1;
-    public static final int USER_TYPE = 2;
 
     @NonNull
     @ColumnInfo(name = "name")

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -50,7 +50,6 @@
 import ml.docilealligator.infinityforreddit.asynctasks.SwitchAccount;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.ChangeInboxCountEvent;
 import ml.docilealligator.infinityforreddit.events.PassPrivateMessageEvent;
 import ml.docilealligator.infinityforreddit.events.PassPrivateMessageIndexEvent;
@@ -267,7 +266,7 @@ public void onPageSelected(int position) {
             }
         });
         viewPager2.setAdapter(sectionsPagerAdapter);
-        viewPager2.setOffscreenPageLimit(2);
+        viewPager2.setOffscreenPageLimit(ViewPager2.OFFSCREEN_PAGE_LIMIT_DEFAULT);
         new TabLayoutMediator(tabLayout, viewPager2, (tab, position) -> {
             switch (position) {
                 case 0:

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -890,7 +890,7 @@ mExecutor, new Handler(), accountName, newAccount -> {
         sectionsPagerAdapter = new SectionsPagerAdapter(this, tabCount, mShowFavoriteMultiReddits,
                 mShowMultiReddits, mShowFavoriteSubscribedSubreddits, mShowSubscribedSubreddits);
         viewPager2.setAdapter(sectionsPagerAdapter);
-        viewPager2.setOffscreenPageLimit(1);
+        viewPager2.setOffscreenPageLimit(ViewPager2.OFFSCREEN_PAGE_LIMIT_DEFAULT);
         viewPager2.setUserInputEnabled(!mDisableSwipingBetweenTabs);
         if (mMainActivityTabsSharedPreferences.getBoolean((mAccountName == null ? "" : mAccountName) + SharedPreferencesUtils.MAIN_PAGE_SHOW_TAB_NAMES, true)) {
             if (mShowFavoriteMultiReddits || mShowMultiReddits || mShowFavoriteSubscribedSubreddits || mShowSubscribedSubreddits) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchResultActivity.java
Patch:
@@ -241,7 +241,7 @@ protected void applyCustomTheme() {
     private void bindView(Bundle savedInstanceState) {
         sectionsPagerAdapter = new SectionsPagerAdapter(this);
         viewPager2.setAdapter(sectionsPagerAdapter);
-        viewPager2.setOffscreenPageLimit(3);
+        viewPager2.setOffscreenPageLimit(ViewPager2.OFFSCREEN_PAGE_LIMIT_DEFAULT);
         viewPager2.setUserInputEnabled(!mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false));
         viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -1096,7 +1096,7 @@ public void onPageSelected(int position) {
             }
         });
         viewPager2.setAdapter(sectionsPagerAdapter);
-        viewPager2.setOffscreenPageLimit(2);
+        viewPager2.setOffscreenPageLimit(ViewPager2.OFFSCREEN_PAGE_LIMIT_DEFAULT);
         viewPager2.setUserInputEnabled(!mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false));
         new TabLayoutMediator(tabLayout, viewPager2, (tab, position) -> {
             switch (position) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -665,7 +665,7 @@ mExecutor, new Handler(), mNewAccountName, newAccount -> {
     private void initializeViewPager() {
         sectionsPagerAdapter = new SectionsPagerAdapter(this);
         viewPager2.setAdapter(sectionsPagerAdapter);
-        viewPager2.setOffscreenPageLimit(2);
+        viewPager2.setOffscreenPageLimit(ViewPager2.OFFSCREEN_PAGE_LIMIT_DEFAULT);
         viewPager2.setUserInputEnabled(!mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false));
         new TabLayoutMediator(tabLayout, viewPager2, (tab, position) -> {
             switch (position) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -169,7 +169,7 @@ public class ViewVideoActivity extends AppCompatActivity implements CustomFontRe
     @BindView(R.id.back_button_exo_playback_control_view)
     MaterialButton backButton;
     @BindView(R.id.download_image_view_exo_playback_control_view)
-    MaterialButton downloadImageView;
+    MaterialButton downloadButton;
     @BindView(R.id.playback_speed_image_view_exo_playback_control_view)
     MaterialButton playbackSpeedImageView;
     @BindView(R.id.lockable_nested_scroll_view_view_video_activity)
@@ -321,7 +321,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 finish();
             });
 
-            downloadImageView.setOnClickListener(view -> {
+            downloadButton.setOnClickListener(view -> {
                 if (isDownloading) {
                     return;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -16,7 +16,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageButton;
-import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -39,6 +38,7 @@
 import com.google.android.exoplayer2.upstream.cache.CacheDataSource;
 import com.google.android.exoplayer2.upstream.cache.SimpleCache;
 import com.google.android.material.bottomappbar.BottomAppBar;
+import com.google.android.material.button.MaterialButton;
 import com.google.common.collect.ImmutableList;
 
 import javax.inject.Inject;
@@ -78,7 +78,7 @@ public class ViewRedditGalleryVideoFragment extends Fragment {
     @BindView(R.id.back_button_exo_playback_control_view)
     MaterialButton backButton;
     @BindView(R.id.download_image_view_exo_playback_control_view)
-    ImageView downloadImageView;
+    MaterialButton downloadButton;
     private ViewRedditGalleryActivity activity;
     private Post.Gallery galleryVideo;
     private String subredditName;
@@ -178,7 +178,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             backButton.setOnClickListener(view -> {
                 activity.finish();
             });
-            downloadImageView.setOnClickListener(view -> {
+            downloadButton.setOnClickListener(view -> {
                 if (isDownloading) {
                     return;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LoginActivity.java
Patch:
@@ -271,7 +271,7 @@ public void onPageFinished(WebView view, String url) {
             TextView messageTextView = new TextView(this);
             int padding = (int) Utils.convertDpToPixel(24, this);
             messageTextView.setPaddingRelative(padding, padding, padding, padding);
-            SpannableString message = new SpannableString(getString(R.string.user_agreement_message, "https://www.redditinc.com/policies/user-agreement-september-12-2021", "https://docile-alligator.github.io"));
+            SpannableString message = new SpannableString(getString(R.string.user_agreement_message, "https://www.redditinc.com/policies/user-agreement", "https://docile-alligator.github.io"));
             Linkify.addLinks(message, Linkify.WEB_URLS);
             messageTextView.setMovementMethod(BetterLinkMovementMethod.newInstance().setOnLinkClickListener(new BetterLinkMovementMethod.OnLinkClickListener() {
                 @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/MainPreferenceFragment.java
Patch:
@@ -68,7 +68,7 @@ public boolean onPreferenceClick(Preference preference) {
         if (redditUserAgreementPreference != null) {
             redditUserAgreementPreference.setOnPreferenceClickListener(preference -> {
                 Intent intent = new Intent(activity, LinkResolverActivity.class);
-                intent.setData(Uri.parse("https://www.redditinc.com/policies/user-agreement-september-12-2021"));
+                intent.setData(Uri.parse("https://www.redditinc.com/policies/user-agreement"));
                 activity.startActivity(intent);
                 return true;
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/slidr/widget/SliderPanel.java
Patch:
@@ -389,7 +389,7 @@ public void onViewDragStateChanged(int state) {
 
 
     /**
-     * The drag helper callbacks for dragging the slidr attachment from the bottom of hte screen
+     * The drag helper callbacks for dragging the slidr attachment from the bottom of the screen
      */
     private final ViewDragHelper.Callback bottomCallback = new ViewDragHelper.Callback() {
         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/RedditAPIInfoBottomSheetFragment.java
Patch:
@@ -38,6 +38,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Utils.setFontToAllTextViews(binding.getRoot(), mainActivity.typeface);
         }
 
+        binding.getRoot().setNestedScrollingEnabled(true);
+
         SpannableString message = new SpannableString(getString(R.string.reddit_api_info, "https://www.reddit.com/r/reddit/comments/145bram/addressing_the_community_about_changes_to_our_api", "https://www.reddit.com/r/Infinity_For_Reddit/comments/147bhsg/the_future_of_infinity"));
         Linkify.addLinks(message, Linkify.WEB_URLS);
         binding.messageTextViewRedditApiInfoBottomSheetFragment.setText(message);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -1269,6 +1269,7 @@ public class CommentViewHolder extends RecyclerView.ViewHolder {
                 commentTimeTextView.setTypeface(mActivity.typeface);
                 authorFlairTextView.setTypeface(mActivity.typeface);
                 topScoreTextView.setTypeface(mActivity.typeface);
+                editedTextView.setTypeface(mActivity.typeface);
                 awardsTextView.setTypeface(mActivity.typeface);
                 scoreTextView.setTypeface(mActivity.typeface);
                 expandButton.setTypeface(mActivity.typeface);
@@ -1302,6 +1303,7 @@ public void unlockSwipe() {
             commentTimeTextView.setTextColor(mSecondaryTextColor);
             authorFlairTextView.setTextColor(mAuthorFlairTextColor);
             topScoreTextView.setTextColor(mSecondaryTextColor);
+            editedTextView.setTextColor(mSecondaryTextColor);
             awardsTextView.setTextColor(mSecondaryTextColor);
             commentDivider.setBackgroundColor(mDividerColor);
             upvoteButton.setColorFilter(mCommentIconAndInfoColor, PorterDuff.Mode.SRC_IN);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -354,10 +354,10 @@ protected void onCreate(Bundle savedInstanceState) {
                 @NonNull
                 @Override
                 public WindowInsetsCompat onApplyWindowInsets(@NonNull View v, @NonNull WindowInsetsCompat insets) {
-                    Insets systemBar = insets.getInsets(WindowInsetsCompat.Type.systemBars());
+                    Insets navigationBars = insets.getInsets(WindowInsetsCompat.Type.navigationBars());
                     ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) controllerLinearLayout.getLayoutParams();
-                    params.bottomMargin = systemBar.bottom;
-                    params.rightMargin = systemBar.right;
+                    params.bottomMargin = navigationBars.bottom;
+                    params.rightMargin = navigationBars.right;
                     return WindowInsetsCompat.CONSUMED;
                 }
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1723,6 +1723,8 @@ public void filterPosts() {
     public boolean getIsNsfwSubreddit() {
         if (activity instanceof ViewSubredditDetailActivity) {
             return ((ViewSubredditDetailActivity) activity).isNsfwSubreddit();
+        } else if (activity instanceof FilteredPostsActivity) {
+            return ((FilteredPostsActivity) activity).isNsfwSubreddit();
         } else {
             return false;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -51,7 +51,6 @@
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockInterface;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.markdown.MarkdownUtils;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
@@ -150,6 +149,9 @@ protected void onCreate(Bundle savedInstanceState) {
         MarkwonPlugin miscPlugin = new AbstractMarkwonPlugin() {
             @Override
             public void beforeSetText(@NonNull TextView textView, @NonNull Spanned markdown) {
+                if (contentTypeface != null) {
+                    textView.setTypeface(contentTypeface);
+                }
                 textView.setTextColor(markdownColor);
             }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountSavedThingActivity.java
Patch:
@@ -91,6 +91,8 @@ protected void onCreate(Bundle savedInstanceState) {
             mSliderPanel = Slidr.attach(this);
         }
 
+        mViewPager2 = binding.accountSavedThingViewPager2;
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             Window window = getWindow();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -73,6 +73,8 @@ public abstract class BaseActivity extends AppCompatActivity implements CustomFo
     public Typeface contentTypeface;
     @Nullable
     public SliderPanel mSliderPanel;
+    @Nullable
+    public ViewPager2 mViewPager2;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/HistoryActivity.java
Patch:
@@ -94,6 +94,8 @@ protected void onCreate(Bundle savedInstanceState) {
             mSliderPanel = Slidr.attach(this);
         }
 
+        //mViewPager2 = viewPager2;
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             Window window = getWindow();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -316,6 +316,8 @@ public void onDrawerClosed(View drawerView) {
         });
         toggle.syncState();
 
+        mViewPager2 = viewPager2;
+
         mBackButtonAction = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_BACK_BUTTON_ACTION, "0"));
         mLockBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_BOTTOM_APP_BAR, false);
         mDisableSwipingBetweenTabs = mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchResultActivity.java
Patch:
@@ -63,7 +63,6 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.SortTimeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.ChangeNSFWEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.fragments.PostFragment;
@@ -158,6 +157,8 @@ protected void onCreate(Bundle savedInstanceState) {
             mSliderPanel = Slidr.attach(this);
         }
 
+        mViewPager2 = viewPager2;
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             Window window = getWindow();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -252,6 +252,8 @@ protected void onCreate(Bundle savedInstanceState) {
             mSliderPanel = Slidr.attach(this);
         }
 
+        mViewPager2 = viewPager2;
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             Window window = getWindow();
             if (isImmersiveInterface()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -256,6 +256,8 @@ protected void onCreate(Bundle savedInstanceState) {
             mSliderPanel = Slidr.attach(this);
         }
 
+        mViewPager2 = viewPager2;
+
         username = getIntent().getStringExtra(EXTRA_USER_NAME_KEY);
 
         fragmentManager = getSupportFragmentManager();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountPostsActivity.java
Patch:
@@ -27,7 +27,6 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.databinding.ActivityAccountPostsBinding;
 import ml.docilealligator.infinityforreddit.events.ChangeNSFWEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
@@ -53,7 +52,6 @@ public class AccountPostsActivity extends BaseActivity implements SortTypeSelect
     SharedPreferences mCurrentAccountSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    private SliderPanel mSliderPanel;
     private String mAccessToken;
     private String mAccountName;
     private String mUserWhere;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/AccountSavedThingActivity.java
Patch:
@@ -35,7 +35,6 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.databinding.ActivityAccountSavedThingBinding;
 import ml.docilealligator.infinityforreddit.events.ChangeNSFWEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
@@ -71,7 +70,6 @@ public class AccountSavedThingActivity extends BaseActivity implements ActivityT
     Executor mExecutor;
     private FragmentManager fragmentManager;
     private SectionsPagerAdapter sectionsPagerAdapter;
-    private SliderPanel mSliderPanel;
     private String mAccessToken;
     private String mAccountName;
     private PostLayoutBottomSheetFragment postLayoutBottomSheetFragment;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -71,7 +71,8 @@ public abstract class BaseActivity extends AppCompatActivity implements CustomFo
     public Typeface typeface;
     public Typeface titleTypeface;
     public Typeface contentTypeface;
-    public SliderPanel sliderPanel;
+    @Nullable
+    public SliderPanel mSliderPanel;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditProfileActivity.java
Patch:
@@ -124,8 +124,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         setSupportActionBar(toolbar);
 
         if (mSharedPreferences.getBoolean(SharedPreferencesUtils.SWIPE_RIGHT_TO_GO_BACK, true)) {
-            SliderPanel sliderPanel = Slidr.attach(this);
-            sliderPanel.unlock();
+            Slidr.attach(this);
         }
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredPostsActivity.java
Patch:
@@ -121,7 +121,7 @@ protected void onCreate(Bundle savedInstanceState) {
         applyCustomTheme();
 
         if (mSharedPreferences.getBoolean(SharedPreferencesUtils.SWIPE_RIGHT_TO_GO_BACK, true)) {
-            sliderPanel = Slidr.attach(this);
+            mSliderPanel = Slidr.attach(this);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -42,7 +42,6 @@
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockInterface;
 import ml.docilealligator.infinityforreddit.customviews.SwipeLockLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.markdown.MarkdownUtils;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -68,7 +67,6 @@ public class FullMarkdownActivity extends BaseActivity {
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    private SliderPanel mSliderPanel;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/HistoryActivity.java
Patch:
@@ -38,7 +38,6 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.slidr.Slidr;
-import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.events.ChangeNSFWEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.fragments.CommentsListingFragment;
@@ -74,7 +73,6 @@ public class HistoryActivity extends BaseActivity implements ActivityToolbarInte
     CustomThemeWrapper mCustomThemeWrapper;
     private FragmentManager fragmentManager;
     private SectionsPagerAdapter sectionsPagerAdapter;
-    private SliderPanel mSliderPanel;
     private String mAccessToken;
     private String mAccountName;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -103,7 +103,6 @@ public class InboxActivity extends BaseActivity implements ActivityToolbarInterf
     CustomThemeWrapper mCustomThemeWrapper;
     @Inject
     Executor mExecutor;
-    private SliderPanel mSliderPanel;
     private SectionsPagerAdapter sectionsPagerAdapter;
     private FragmentManager fragmentManager;
     private String mAccessToken;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchResultActivity.java
Patch:
@@ -138,7 +138,6 @@ public class SearchResultActivity extends BaseActivity implements SortTypeSelect
     private boolean mInsertSearchQuerySuccess;
     private FragmentManager fragmentManager;
     private SectionsPagerAdapter sectionsPagerAdapter;
-    private SliderPanel mSliderPanel;
     private int fabOption;
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -112,7 +112,6 @@ public class SubscribedThingListingActivity extends BaseActivity implements Acti
     CustomThemeWrapper mCustomThemeWrapper;
     @Inject
     Executor mExecutor;
-    private SliderPanel mSliderPanel;
     private String mAccessToken;
     private String mAccountName;
     private boolean mInsertSuccess = false;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -170,7 +170,7 @@ protected void onCreate(Bundle savedInstanceState) {
         applyCustomTheme();
 
         if (mSharedPreferences.getBoolean(SharedPreferencesUtils.SWIPE_RIGHT_TO_GO_BACK, true)) {
-            Slidr.attach(this);
+            mSliderPanel = Slidr.attach(this);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -177,7 +177,6 @@ public class ViewPostDetailActivity extends BaseActivity implements SortTypeSele
     int loadingMorePostsStatus = LoadingMorePostsStatus.NOT_LOADING;
     public Map<String, String> authorIcons = new HashMap<>();
     private FragmentManager fragmentManager;
-    private SliderPanel mSliderPanel;
     private SectionsPagerAdapter sectionsPagerAdapter;
     private String mAccessToken;
     private String mAccountName;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -224,7 +224,6 @@ public class ViewSubredditDetailActivity extends BaseActivity implements SortTyp
     private int unsubscribedColor;
     private int subscribedColor;
     private int fabOption;
-    private SliderPanel mSliderPanel;
     private MaterialAlertDialogBuilder nsfwWarningBuilder;
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -226,7 +226,6 @@ public class ViewUserDetailActivity extends BaseActivity implements SortTypeSele
     private boolean lockBottomAppBar;
     private String mMessageFullname;
     private String mNewAccountName;
-    private SliderPanel mSliderPanel;
     //private MaterialAlertDialogBuilder nsfwWarningBuilder;
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -95,7 +95,6 @@ public class WikiActivity extends BaseActivity {
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    private SliderPanel mSliderPanel;
     private String wikiMarkdown;
     private Markwon markwon;
     private MarkwonAdapter markwonAdapter;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -48,6 +48,7 @@
 import ml.docilealligator.infinityforreddit.CustomFontReceiver;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.slidr.widget.SliderPanel;
 import ml.docilealligator.infinityforreddit.font.ContentFontFamily;
 import ml.docilealligator.infinityforreddit.font.ContentFontStyle;
 import ml.docilealligator.infinityforreddit.font.FontFamily;
@@ -70,6 +71,7 @@ public abstract class BaseActivity extends AppCompatActivity implements CustomFo
     public Typeface typeface;
     public Typeface titleTypeface;
     public Typeface contentTypeface;
+    public SliderPanel sliderPanel;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredPostsActivity.java
Patch:
@@ -121,7 +121,7 @@ protected void onCreate(Bundle savedInstanceState) {
         applyCustomTheme();
 
         if (mSharedPreferences.getBoolean(SharedPreferencesUtils.SWIPE_RIGHT_TO_GO_BACK, true)) {
-            Slidr.attach(this);
+            sliderPanel = Slidr.attach(this);
         }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomThemePreviewActivity.java
Patch:
@@ -435,7 +435,7 @@ protected void applyTabLayoutTheme(TabLayout tabLayout) {
     }
 
     protected void applyFABTheme(FloatingActionButton fab) {
-        fab.setBackgroundTintList(ColorStateList.valueOf(customTheme.colorPrimaryLightTheme));
+        fab.setBackgroundTintList(ColorStateList.valueOf(customTheme.colorAccent));
         fab.setImageTintList(ColorStateList.valueOf(customTheme.fabIconColor));
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RedditGallerySubmissionRecyclerViewAdapter.java
Patch:
@@ -193,7 +193,7 @@ public AddImageViewHolder(@NonNull View itemView) {
             super(itemView);
 
             FloatingActionButton fab = itemView.findViewById(R.id.fab_item_gallery_submission_add_image);
-            fab.setBackgroundTintList(ColorStateList.valueOf(customThemeWrapper.getColorPrimaryLightTheme()));
+            fab.setBackgroundTintList(ColorStateList.valueOf(customThemeWrapper.getColorAccent()));
             fab.setImageTintList(ColorStateList.valueOf(customThemeWrapper.getFABIconColor()));
 
             itemView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -22,7 +22,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.appcompat.content.res.AppCompatResources;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.constraintlayout.widget.ConstraintSet;
 import androidx.recyclerview.widget.ItemTouchHelper;
@@ -1908,7 +1907,7 @@ class ViewAllCommentsViewHolder extends RecyclerView.ViewHolder {
                     mIsSingleCommentThreadMode = false;
                     mSingleCommentId = null;
                     notifyItemRemoved(0);
-                    mFragment.changeToNomalThreadMode();
+                    mFragment.changeToNormalThreadMode();
                 }
             });
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -180,4 +180,5 @@ public class JSONUtils {
     public static final String STATUS_KEY = "status";
     public static final String URLS_KEY = "urls";
     public static final String HD_KEY = "hd";
+    public static final String SUGGESTED_SORT_KEY = "suggested_sort";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1216,12 +1216,10 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
         comments = mCommentsAdapter == null ? null : mCommentsAdapter.getVisibleComments();
         if (mCommentsRecyclerView != null) {
-            //scrollpositionn = mcommentsadapter.getPosition()
             LinearLayoutManager myLayoutManager = (LinearLayoutManager) mCommentsRecyclerView.getLayoutManager();
             scrollPosition = myLayoutManager != null ? myLayoutManager.findFirstVisibleItemPosition() : 0;
             
         } else {
-            //scrollposition = mrecyclerviewadapter.getposition()
             LinearLayoutManager myLayoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();
             scrollPosition = myLayoutManager != null ? myLayoutManager.findFirstVisibleItemPosition() : 0;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostGalleryTypeImageRecyclerViewAdapter.java
Patch:
@@ -115,6 +115,8 @@ public void onViewRecycled(@NonNull ImageViewHolder holder) {
         holder.binding.captionConstraintLayoutItemGalleryImageInPostFeed.setVisibility(View.GONE);
         holder.binding.captionTextViewItemGalleryImageInPostFeed.setText("");
         holder.binding.captionUrlTextViewItemGalleryImageInPostFeed.setText("");
+        holder.binding.progressBarItemGalleryImageInPostFeed.setVisibility(View.GONE);
+        glide.clear(holder.binding.imageViewItemGalleryImageInPostFeed);
     }
 
     private void loadImage(ImageViewHolder holder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/HistoryPostRecyclerViewAdapter.java
Patch:
@@ -2919,7 +2919,7 @@ public void release() {
 
         @Override
         public boolean wantsToPlay() {
-            return canPlayVideo && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
+            return canPlayVideo && mediaUri != null && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
         }
 
         @Override
@@ -4628,7 +4628,7 @@ public void release() {
 
         @Override
         public boolean wantsToPlay() {
-            return canPlayVideo && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
+            return canPlayVideo && mediaUri != null && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
         }
 
         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -1820,7 +1820,7 @@ public void release() {
 
         @Override
         public boolean wantsToPlay() {
-            return canPlayVideo && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
+            return canPlayVideo && mediaUri != null && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
         }
 
         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -3054,7 +3054,7 @@ public void release() {
 
         @Override
         public boolean wantsToPlay() {
-            return canPlayVideo && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
+            return canPlayVideo && mediaUri != null && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
         }
 
         @Override
@@ -4830,7 +4830,7 @@ public void release() {
 
         @Override
         public boolean wantsToPlay() {
-            return canPlayVideo && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
+            return canPlayVideo && mediaUri != null && ToroUtil.visibleAreaOffset(this, itemView.getParent()) >= mStartAutoplayVisibleAreaOffset;
         }
 
         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostImageActivity.java
Patch:
@@ -374,7 +374,7 @@ protected void onCreate(Bundle savedInstanceState) {
         captureFab.setOnClickListener(view -> {
             Intent pictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
             try {
-                imageUri = FileProvider.getUriForFile(this, "ml.docilealligator.infinityforreddit.provider",
+                imageUri = FileProvider.getUriForFile(this, getPackageName() + ".provider",
                         File.createTempFile("temp_img", ".jpg", getExternalFilesDir(Environment.DIRECTORY_PICTURES)));
                 pictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
                 startActivityForResult(pictureIntent, CAPTURE_IMAGE_REQUEST_CODE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/FetchRemovedComment.java
Patch:
@@ -54,8 +54,8 @@ public static void searchRemovedComment(Executor executor, Handler handler, Retr
             try {
                 Response<String> response = retrofit.create(PushshiftAPI.class).searchComments(
                         comment.getLinkId(),
-                        3000,
-                        "asc",
+                        1000,
+                        "id",
                         "id,author,body,is_submitter",
                         after,
                         after + 43200, // 12 Hours later

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -1811,7 +1811,7 @@ public void deleteFailed() {
 
     public void showRemovedComment(Comment comment, int position) {
         Toast.makeText(activity, R.string.fetching_removed_comment, Toast.LENGTH_SHORT).show();
-        FetchRemovedComment.searchRemovedComment(
+        FetchRemovedComment.fetchRemovedComment(
                 mExecutor, new Handler(), pushshiftRetrofit, comment,
                 new FetchRemovedComment.FetchRemovedCommentListener() {
                     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostGalleryTypeImageRecyclerViewAdapter.java
Patch:
@@ -5,6 +5,7 @@
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -83,6 +84,7 @@ public ImageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewTyp
     public void onBindViewHolder(@NonNull ImageViewHolder holder, int position) {
         if (ratio < 0) {
             int height = (int) (400 * mScale);
+            Log.i("asdfasdf", "asdfadsf");
             holder.binding.imageViewItemGalleryImageInPostFeed.setScaleType(ImageView.ScaleType.CENTER_CROP);
             holder.binding.imageViewItemGalleryImageInPostFeed.getLayoutParams().height = height;
         } else {
@@ -91,8 +93,6 @@ public void onBindViewHolder(@NonNull ImageViewHolder holder, int position) {
         holder.binding.errorTextViewItemGalleryImageInPostFeed.setVisibility(View.GONE);
         holder.binding.progressBarItemGalleryImageInPostFeed.setVisibility(View.VISIBLE);
 
-        holder.binding.imageViewItemGalleryImageInPostFeed.setRatio(ratio);
-
         holder.binding.imageViewItemGalleryImageInPostFeed.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {
             @Override
             public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/HistoryPostRecyclerViewAdapter.java
Patch:
@@ -1834,6 +1834,7 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
             } else if (holder instanceof PostBaseGalleryTypeViewHolder) {
                 ((PostBaseGalleryTypeViewHolder) holder).frameLayout.setVisibility(View.GONE);
                 ((PostBaseGalleryTypeViewHolder) holder).noPreviewImageView.setVisibility(View.GONE);
+                ((PostBaseGalleryTypeViewHolder) holder).adapter.setGalleryImages(null);
             } else if (holder instanceof PostTextTypeViewHolder) {
                 ((PostTextTypeViewHolder) holder).contentTextView.setText("");
                 ((PostTextTypeViewHolder) holder).contentTextView.setTextColor(mPostContentColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -1913,6 +1913,7 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
             } else if (holder instanceof PostBaseGalleryTypeViewHolder) {
                 ((PostBaseGalleryTypeViewHolder) holder).frameLayout.setVisibility(View.GONE);
                 ((PostBaseGalleryTypeViewHolder) holder).noPreviewImageView.setVisibility(View.GONE);
+                ((PostBaseGalleryTypeViewHolder) holder).adapter.setGalleryImages(null);
             } else if (holder instanceof PostTextTypeViewHolder) {
                 ((PostTextTypeViewHolder) holder).contentTextView.setText("");
                 ((PostTextTypeViewHolder) holder).contentTextView.setTextColor(mPostContentColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/MarkdownUtils.java
Patch:
@@ -11,7 +11,6 @@
 import io.noties.markwon.Markwon;
 import io.noties.markwon.MarkwonPlugin;
 import io.noties.markwon.ext.strikethrough.StrikethroughPlugin;
-import io.noties.markwon.inlineparser.AutolinkInlineProcessor;
 import io.noties.markwon.inlineparser.BangInlineProcessor;
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/CommentsListingFragment.java
Patch:
@@ -180,9 +180,6 @@ public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)
                     exceedThreshold = false;
                     touchHelper.attachToRecyclerView(null);
                     touchHelper.attachToRecyclerView(mCommentRecyclerView);
-                    if (mAdapter != null) {
-                        mAdapter.onItemSwipe(viewHolder, direction, swipeLeftAction, swipeRightAction);
-                    }
                 }
             }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -496,9 +496,6 @@ public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)
                     exceedThreshold = false;
                     touchHelper.attachToRecyclerView(null);
                     touchHelper.attachToRecyclerView(mPostRecyclerView);
-                    if (mAdapter != null) {
-                        mAdapter.onItemSwipe(viewHolder, direction, swipeLeftAction, swipeRightAction);
-                    }
                 }
             }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -459,9 +459,6 @@ public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction)
                     exceedThreshold = false;
                     touchHelper.attachToRecyclerView(null);
                     touchHelper.attachToRecyclerView((mCommentsRecyclerView == null ? mRecyclerView : mCommentsRecyclerView));
-                    if (mCommentsAdapter != null) {
-                        mCommentsAdapter.onItemSwipe(viewHolder, direction, swipeLeftAction, swipeRightAction);
-                    }
                 }
             }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -219,6 +219,9 @@ public void readFailed() {
                 });
 
                 ((DataViewHolder) holder).authorTextView.setOnClickListener(view -> {
+                    if (message.isAuthorDeleted()) {
+                        return;
+                    }
                     Intent intent = new Intent(mActivity, ViewUserDetailActivity.class);
                     intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, message.getAuthor());
                     mActivity.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -182,6 +182,9 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 });
 
                 ((ReceivedMessageViewHolder) holder).userAvatarImageView.setOnClickListener(view -> {
+                    if (message.isAuthorDeleted()) {
+                        return;
+                    }
                     Intent intent = new Intent(mViewPrivateMessagesActivity, ViewUserDetailActivity.class);
                     intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, message.getAuthor());
                     mViewPrivateMessagesActivity.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -584,6 +584,8 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                             Utils.getNVotes(mShowAbsoluteNumberOfVotes, comment.getScore() + comment.getVoteType())));
                 } else if (mHideTheNumberOfVotes) {
                     ((CommentFullyCollapsedViewHolder) holder).scoreTextView.setText(mActivity.getString(R.string.vote));
+                } else {
+                    ((CommentFullyCollapsedViewHolder) holder).scoreTextView.setText(mActivity.getString(R.string.hidden));
                 }
                 ((CommentFullyCollapsedViewHolder) holder).commentIndentationView.setShowOnlyOneDivider(mShowOnlyOneCommentLevelIndicator);
                 ((CommentFullyCollapsedViewHolder) holder).commentIndentationView.setLevelAndColors(comment.getDepth(), verticalBlockColors);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -312,10 +312,9 @@ public interface AppComponent {
     void inject(HistoryActivity historyActivity);
 
     void inject(MorePostsInfoFragment morePostsInfoFragment);
-    
+
     @Component.Factory
     interface Factory {
-        
         AppComponent create(@BindsInstance Application application);
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -4423,7 +4423,7 @@ boolean onLongClick() {
 
         void markPostRead(Post post, boolean changePostItemColor) {
             if (mAccessToken != null && !post.isRead() && mMarkPostsAsRead) {
-                post.markAsRead(true);
+                post.markAsRead();
                 if (changePostItemColor) {
                     itemView.setBackgroundTintList(ColorStateList.valueOf(mReadPostCardViewBackgroundColor));
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -48,6 +48,7 @@
 import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
+import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.VoteThing;
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.activities.CommentActivity;
@@ -626,7 +627,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         ((LoadMoreChildCommentsViewHolder) holder).placeholderTextView.setText(R.string.loading);
 
                         Retrofit retrofit = mAccessToken == null ? mRetrofit : mOauthRetrofit;
-                        String sortType = mCommentRecyclerViewAdapterCallback.getSortType();
+                        SortType.Type sortType = mCommentRecyclerViewAdapterCallback.getSortType();
                         FetchComment.fetchMoreComment(mExecutor, new Handler(), retrofit, mAccessToken,
                                 parentComment.getMoreChildrenIds(),
                                 mExpandChildren, mPost.getFullName(), sortType, new FetchComment.FetchMoreCommentListener() {
@@ -1180,7 +1181,7 @@ public interface CommentRecyclerViewAdapterCallback {
 
         void retryFetchingMoreComments();
 
-        String getSortType();
+        SortType.Type getSortType();
     }
 
     public class CommentViewHolder extends RecyclerView.ViewHolder {

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/FetchComment.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.Locale;
 import java.util.concurrent.Executor;
 
+import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import retrofit2.Call;
@@ -19,7 +20,7 @@
 public class FetchComment {
     public static void fetchComments(Executor executor, Handler handler, Retrofit retrofit,
                                      @Nullable String accessToken, String article,
-                                     String commentId, String sortType, String contextNumber, boolean expandChildren,
+                                     String commentId, SortType.Type sortType, String contextNumber, boolean expandChildren,
                                      Locale locale, FetchCommentListener fetchCommentListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
         Call<String> comments;
@@ -73,7 +74,7 @@ public static void fetchMoreComment(Executor executor, Handler handler, Retrofit
                                         @Nullable String accessToken,
                                         ArrayList<String> allChildren,
                                         boolean expandChildren, String postFullName,
-                                        String sortType,
+                                        SortType.Type sortType,
                                         FetchMoreCommentListener fetchMoreCommentListener) {
         if (allChildren == null) {
             return;

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/FetchSubredditData.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import retrofit2.Call;
@@ -54,7 +55,7 @@ public void onFailure(@NonNull Call<String> call, @NonNull Throwable t) {
         });
     }
 
-    static void fetchSubredditListingData(Retrofit retrofit, String query, String after, String sortType, String accessToken,
+    static void fetchSubredditListingData(Retrofit retrofit, String query, String after, SortType.Type sortType, String accessToken,
                                           boolean nsfw, final FetchSubredditListingDataListener fetchSubredditListingDataListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditListingDataSource.java
Patch:
@@ -52,7 +52,7 @@ MutableLiveData<Boolean> hasSubredditLiveData() {
     public void loadInitial(@NonNull LoadInitialParams<String> params, @NonNull LoadInitialCallback<String, SubredditData> callback) {
         initialLoadStateLiveData.postValue(NetworkState.LOADING);
 
-        FetchSubredditData.fetchSubredditListingData(retrofit, query, null, sortType.getType().value, accessToken, nsfw,
+        FetchSubredditData.fetchSubredditListingData(retrofit, query, null, sortType.getType(), accessToken, nsfw,
                 new FetchSubredditData.FetchSubredditListingDataListener() {
                     @Override
                     public void onFetchSubredditListingDataSuccess(ArrayList<SubredditData> subredditData, String after) {
@@ -87,7 +87,7 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull LoadCallback<
             return;
         }
 
-        FetchSubredditData.fetchSubredditListingData(retrofit, query, params.key, sortType.getType().value, accessToken, nsfw,
+        FetchSubredditData.fetchSubredditListingData(retrofit, query, params.key, sortType.getType(), accessToken, nsfw,
                 new FetchSubredditData.FetchSubredditListingDataListener() {
                     @Override
                     public void onFetchSubredditListingDataSuccess(ArrayList<SubredditData> subredditData, String after) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/user/FetchUserData.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.ArrayList;
 
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import retrofit2.Call;
@@ -53,7 +54,7 @@ public void onFailure(@NonNull Call<String> call, @NonNull Throwable t) {
         });
     }
 
-    public static void fetchUserListingData(Retrofit retrofit, String query, String after, String sortType, boolean nsfw,
+    public static void fetchUserListingData(Retrofit retrofit, String query, String after, SortType.Type sortType, boolean nsfw,
                                             FetchUserListingDataListener fetchUserListingDataListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/user/UserListingDataSource.java
Patch:
@@ -50,7 +50,7 @@ MutableLiveData<Boolean> hasUserLiveData() {
     public void loadInitial(@NonNull PageKeyedDataSource.LoadInitialParams<String> params, @NonNull PageKeyedDataSource.LoadInitialCallback<String, UserData> callback) {
         initialLoadStateLiveData.postValue(NetworkState.LOADING);
 
-        FetchUserData.fetchUserListingData(retrofit, query, null, sortType.getType().value, nsfw,
+        FetchUserData.fetchUserListingData(retrofit, query, null, sortType.getType(), nsfw,
                 new FetchUserData.FetchUserListingDataListener() {
                     @Override
                     public void onFetchUserListingDataSuccess(ArrayList<UserData> UserData, String after) {
@@ -81,7 +81,7 @@ public void loadAfter(@NonNull PageKeyedDataSource.LoadParams<String> params, @N
             return;
         }
 
-        FetchUserData.fetchUserListingData(retrofit, query, params.key, sortType.getType().value, nsfw,
+        FetchUserData.fetchUserListingData(retrofit, query, params.key, sortType.getType(), nsfw,
                 new FetchUserData.FetchUserListingDataListener() {
                     @Override
                     public void onFetchUserListingDataSuccess(ArrayList<UserData> UserData, String after) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ActivityToolbarInterface.java
Patch:
@@ -2,5 +2,5 @@
 
 public interface ActivityToolbarInterface {
     void onLongPress();
-    default void displaySortType() {};
+    default void displaySortType() {}
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -234,7 +234,7 @@ OkHttpClient provideRPANOkHttpClient() {
     @Provides
     @Singleton
     RedditDataRoomDatabase provideRedditDataRoomDatabase() {
-        return RedditDataRoomDatabase.getDatabase(mApplication);
+        return RedditDataRoomDatabase.create(mApplication);
     }
 
     @Provides

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -230,10 +230,8 @@ private Response<String> fetchMessages(Account account, int retryCount) throws I
                     return fetchMessages(account, retryCount - 1);
                 }
 
-                return null;
-            } else {
-                return null;
             }
+            return null;
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -106,7 +106,6 @@ protected void onCreate(Bundle savedInstanceState) {
     private void handleUri(Uri uri) {
         if (uri == null) {
             Toast.makeText(this, R.string.no_link_available, Toast.LENGTH_SHORT).show();
-            finish();
         } else {
             String path = uri.getPath();
             if (path == null) {
@@ -339,8 +338,8 @@ private void handleUri(Uri uri) {
                 }
             }
 
-            finish();
         }
+        finish();
     }
 
     private void deepLinkError(Uri uri) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/apis/RedditAPI.java
Patch:
@@ -277,7 +277,7 @@ Call<String> subredditAutocomplete(@HeaderMap Map<String, String> headers, @Quer
 
     default Call<String> getWiki(@Path("subredditName") String subredditName) {
         return getWikiPage(subredditName, "index");
-    };
+    }
 
     @GET("/r/{subredditName}/wiki/{wikiPage}.json?raw_json=1")
     Call<String> getWikiPage(@Path("subredditName") String subredditName, @Path("wikiPage") String wikiPage);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -876,7 +876,6 @@ public void searchComment(String query, boolean searchNextComment) {
                         }
                     }
 
-                    return;
                 } else {
                     for (int i = currentSearchIndex - 1; i >= 0; i--) {
                         if (visibleComments.get(i).getCommentRawText() != null &&
@@ -894,8 +893,8 @@ public void searchComment(String query, boolean searchNextComment) {
                         }
                     }
 
-                    return;
                 }
+                return;
             }
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -269,7 +269,7 @@ private Uri writeResponseBodyToDisk(ResponseBody body, boolean isDefaultDestinat
                     contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, destinationFileName);
                     contentValues.put(MediaStore.MediaColumns.MIME_TYPE, mediaType == EXTRA_MEDIA_TYPE_VIDEO ? "video/*" : "image/*");
                     contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, destinationFileUriString);
-                    contentValues.put(mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.IS_PENDING : MediaStore.Images.Media.IS_PENDING, 1);
+                    contentValues.put(MediaStore.MediaColumns.IS_PENDING, 1);
 
                     final Uri contentUri = mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.getContentUri(MediaStore.VOLUME_EXTERNAL_PRIMARY) : MediaStore.Images.Media.getContentUri(MediaStore.VOLUME_EXTERNAL_PRIMARY);
                     Uri uri = contentResolver.insert(contentUri, contentValues);
@@ -291,7 +291,7 @@ private Uri writeResponseBodyToDisk(ResponseBody body, boolean isDefaultDestinat
                         stream.write(buf, 0, len);
                     }
                     contentValues.clear();
-                    contentValues.put(mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.IS_PENDING : MediaStore.Images.Media.IS_PENDING, 0);
+                    contentValues.put(MediaStore.MediaColumns.IS_PENDING, 0);
                     contentResolver.update(uri, contentValues, null, null);
                     destinationFileUriString = uri.toString();
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -132,7 +132,7 @@ public class JSONUtils {
     public static final String TOTAL_KARMA_KEY = "total_karma";
     public static final String AWARDER_KARMA_KEY = "awarder_karma";
     public static final String AWARDEE_KARMA_KEY = "awardee_karma";
-    public static final String CONTENT_URLS_KEY = "content_urls";;
+    public static final String CONTENT_URLS_KEY = "content_urls";
     public static final String WEBM_KEY = "webm";
     public static final String WEBM_URL_KEY = "webmUrl";
     public static final String UPVOTE_RATIO_KEY = "upvote_ratio";

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/MaterialYouUtils.java
Patch:
@@ -129,7 +129,7 @@ private static boolean changeTheme(Context context,
             darkTheme.navBarColor = darkTheme.colorPrimary;
             darkTheme.primaryTextColor = context.getColor(android.R.color.system_neutral1_10);
             darkTheme.secondaryTextColor = context.getColor(android.R.color.system_neutral1_10);
-            darkTheme.bottomAppBarIconColor = context.getColor(android.R.color.system_accent1_100);;
+            darkTheme.bottomAppBarIconColor = context.getColor(android.R.color.system_accent1_100);
             darkTheme.primaryIconColor = context.getColor(android.R.color.system_accent1_100);
             darkTheme.fabIconColor = context.getColor(android.R.color.system_neutral1_900);
             darkTheme.toolbarPrimaryTextAndIconColor = context.getColor(android.R.color.system_accent2_100);

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -252,7 +252,6 @@ public static int getConnectedNetwork(Context context) {
                     }
                 } catch (SecurityException ignore) {
                 }
-                return NETWORK_TYPE_OTHER;
             } else {
                 boolean isWifi = false;
                 boolean isCellular = false;
@@ -274,8 +273,8 @@ public static int getConnectedNetwork(Context context) {
                     return NETWORK_TYPE_CELLULAR;
                 }
 
-                return NETWORK_TYPE_OTHER;
             }
+            return NETWORK_TYPE_OTHER;
         }
 
         return NETWORK_TYPE_OTHER;

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -215,6 +215,7 @@ public class SharedPreferencesUtils {
     public static final String REDDIT_VIDEO_DEFAULT_RESOLUTION = "reddit_video_default_resolution";
     public static final String EASIER_TO_WATCH_IN_FULL_SCREEN = "easier_to_watch_in_full_screen";
     public static final String HIDE_THE_NUMBER_OF_VOTES_IN_COMMENTS = "hide_the_number_of_votes_in_comments";
+    public static final String COMMENT_DIVIDER_TYPE = "comment_divider_type";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/SwipeLockFrameLayout.java
Patch:
@@ -38,7 +38,7 @@ public void setSwipeLockInterface(@Nullable SwipeLockInterface swipeLockInterfac
     @Override
     public boolean onInterceptTouchEvent(MotionEvent ev) {
         updateSwipeLock(ev);
-        return false;
+        return locked;
     }
 
     @SuppressLint("ClickableViewAccessibility") // we are just listening to touch events

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -16,6 +16,7 @@
 import android.os.Bundle;
 import android.os.CountDownTimer;
 import android.os.Handler;
+import android.util.Log;
 import android.view.HapticFeedbackConstants;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -780,7 +780,7 @@ public void onFetchMoreCommentFailed() {
                 });
             } else {
                 ((LoadMoreChildCommentsViewHolder) holder).placeholderTextView.setOnClickListener(view -> {
-                    Comment comment = getCurrentComment(position);
+                    Comment comment = getCurrentComment(holder);
                     if (comment != null) {
                         Intent intent = new Intent(mActivity, ViewPostDetailActivity.class);
                         intent.putExtra(ViewPostDetailActivity.EXTRA_POST_DATA, mPost);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MorePostsInfoFragment.java
Patch:
@@ -46,7 +46,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         binding.getRoot().setOnClickListener(view -> {
             if (status == LoadingMorePostsStatus.FAILED) {
-                mActivity.fetchMorePosts();
+                mActivity.fetchMorePosts(true);
             }
         });
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -814,11 +814,11 @@ public void changeSortType(SortType sortType) {
 
     @NonNull
     private SortType.Type loadSortType() {
-        String sortTypeName = mSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, SortType.Type.CONFIDENCE.name());
+        String sortTypeName = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, SortType.Type.CONFIDENCE.name());
         if (SortType.Type.BEST.name().equals(sortTypeName)) {
             // migrate from BEST to CONFIDENCE
             // key guaranteed to exist because got non-default value
-            mSharedPreferences.edit()
+            mSortTypeSharedPreferences.edit()
                     .putString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, SortType.Type.CONFIDENCE.name())
                     .apply();
             return SortType.Type.CONFIDENCE;

File: app/src/main/java/ml/docilealligator/infinityforreddit/readpost/ReadPostDao.java
Patch:
@@ -23,6 +23,9 @@ public interface ReadPostDao {
     @Query("SELECT * FROM read_posts WHERE username = :username")
     List<ReadPost> getAllReadPosts(String username);
 
+    @Query("SELECT * FROM read_posts WHERE id = :id LIMIT 1")
+    ReadPost getReadPost(String id);
+
     @Query("SELECT COUNT(id) FROM read_posts")
     int getReadPostsCount();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -373,7 +373,7 @@ private void bindView(Bundle savedInstanceState) {
         viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override
             public void onPageSelected(int position) {
-                if (position > posts.size() - 5) {
+                if (posts != null && position > posts.size() - 5) {
                     fetchMorePosts();
                 }
             }
@@ -663,7 +663,7 @@ public void fetchMorePosts() {
             });
         } else {
             mExecutor.execute((Runnable) () -> {
-                long lastItem = posts.isEmpty() ? System.currentTimeMillis() : posts.get(posts.size() - 1).getPostTimeMillis();
+                long lastItem = posts.isEmpty() ? 0 : posts.get(posts.size() - 1).getPostTimeMillis();
                 List<ReadPost> readPosts = mRedditDataRoomDatabase.readPostDao().getAllReadPosts(username, lastItem);
                 StringBuilder ids = new StringBuilder();
                 for (ReadPost readPost : readPosts) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/HistoryPostPagingSource.java
Patch:
@@ -111,8 +111,8 @@ public LoadResult<String, Post> transformData(List<ReadPost> readPosts) {
     }
 
     private ListenableFuture<LoadResult<String, Post>> loadHomePosts(@NonNull LoadParams<String> loadParams, RedditDataRoomDatabase redditDataRoomDatabase) {
-        String before = loadParams.getKey();
-        ListenableFuture<List<ReadPost>> readPosts = redditDataRoomDatabase.readPostDao().getAllReadPostsListenableFuture(username, Long.parseLong(before == null ? Long.toString(System.currentTimeMillis()) : before));
+        String after = loadParams.getKey();
+        ListenableFuture<List<ReadPost>> readPosts = redditDataRoomDatabase.readPostDao().getAllReadPostsListenableFuture(username, Long.parseLong(after == null ? "0" : after));
 
         ListenableFuture<LoadResult<String, Post>> pageFuture = Futures.transform(readPosts, this::transformData, executor);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -1265,7 +1265,7 @@ public void onChangeSwipeActionEvent(ChangeSwipeActionEvent changeSwipeActionEve
     public void onNeedForPostListFromPostRecyclerViewAdapterEvent(NeedForPostListFromPostFragmentEvent event) {
         if (historyPostFragmentId == event.postFragmentTimeId && mAdapter != null) {
             EventBus.getDefault().post(new ProvidePostListToViewPostDetailActivityEvent(historyPostFragmentId,
-                    new ArrayList<>(mAdapter.snapshot()), postType, null, null, null,
+                    new ArrayList<>(mAdapter.snapshot()), HistoryPostPagingSource.TYPE_READ_POSTS, null, null, null,
                     null, null, null, postFilter, null, null));
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -17,7 +17,6 @@
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.os.Handler;
-import android.util.Log;
 import android.view.HapticFeedbackConstants;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -287,7 +286,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (!((mPostDetailsSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_POST_AND_COMMENTS_IN_LANDSCAPE_MODE, true)
                 && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE)
                 || (mPostDetailsSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_POST_AND_COMMENTS_IN_PORTRAIT_MODE, false)
-                && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE))) {
+                && getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT))) {
             if (mCommentsRecyclerView != null) {
                 mCommentsRecyclerView.setVisibility(View.GONE);
                 mCommentsRecyclerView = null;

File: app/src/main/java/ml/docilealligator/infinityforreddit/SortType.java
Patch:
@@ -33,7 +33,7 @@ public enum Type {
         RELEVANCE("relevance", "Relevance"),
         COMMENTS("comments", "Comments"),
         ACTIVITY("activity", "Activity"),
-        CONFIDENCE("confidence", "Confidence"),
+        CONFIDENCE("confidence", "Best"),
         OLD("old", "Old"),
         QA("qa", "QA"),
         LIVE("live", "Live");

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/FetchRemovedComment.java
Patch:
@@ -29,7 +29,7 @@ public static void fetchRemovedComment(Executor executor, Handler handler, Retro
                     Comment removedComment = parseComment(response.body(), comment);
                     handler.post(() -> {
                         if (removedComment != null) {
-                            listener.fetchSuccess(removedComment);
+                            listener.fetchSuccess(removedComment, comment);
                         } else {
                             listener.fetchFailed();
                         }
@@ -64,7 +64,7 @@ public static void searchRemovedComment(Executor executor, Handler handler, Retr
                     Comment removedComment = parseComment(response.body(), comment);
                     handler.post(() -> {
                         if (removedComment != null) {
-                            listener.fetchSuccess(removedComment);
+                            listener.fetchSuccess(removedComment, comment);
                         } else {
                             listener.fetchFailed();
                         }
@@ -124,7 +124,7 @@ private static Comment parseRemovedComment(@NonNull JSONObject result, Comment c
     }
 
     public interface FetchRemovedCommentListener {
-        void fetchSuccess(Comment comment);
+        void fetchSuccess(Comment fetchedComment, Comment originalComment);
 
         void fetchFailed();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/FetchRemovedCommentReveddit.java
Patch:
@@ -36,7 +36,7 @@ public static void fetchRemovedComment(Executor executor, Handler handler, Retro
                     Comment removedComment = parseRemovedComment(new JSONObject(response.body()).getJSONObject(comment.getId()), comment);
                     handler.post(() -> {
                         if (removedComment != null) {
-                            listener.fetchSuccess(removedComment);
+                            listener.fetchSuccess(removedComment, comment);
                         } else {
                             listener.fetchFailed();
                         }
@@ -69,7 +69,7 @@ private static Comment parseRemovedComment(JSONObject result, Comment comment) t
     }
 
     public interface FetchRemovedCommentListener {
-        void fetchSuccess(Comment comment);
+        void fetchSuccess(Comment fetchedComment, Comment originalComment);
 
         void fetchFailed();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/AdvancedPreferenceFragment.java
Patch:
@@ -276,7 +276,6 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         if (backupSettingsPreference != null) {
             backupSettingsPreference.setOnPreferenceClickListener(preference -> {
                 Intent intent = new Intent(ACTION_OPEN_DOCUMENT_TREE);
-                intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                 startActivityForResult(intent, SELECT_BACKUP_SETTINGS_DIRECTORY_REQUEST_CODE);
                 return true;
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -105,6 +105,8 @@ public MessageRecyclerViewAdapter(BaseActivity activity, Retrofit oauthRetrofit,
         mColorPrimaryLightTheme = customThemeWrapper.getColorPrimaryLightTheme();
         mButtonTextColor = customThemeWrapper.getButtonTextColor();
 
+        // todo:https://github.com/Docile-Alligator/Infinity-For-Reddit/issues/1027
+        //  add tables support and replace with MarkdownUtils#commonPostMarkwonBuilder
         mMarkwon = Markwon.builder(mActivity)
                 .usePlugin(MarkwonInlineParserPlugin.create(plugin -> {
                     plugin.excludeInlineProcessor(AutolinkInlineProcessor.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -81,6 +81,8 @@ public PrivateMessagesDetailRecyclerViewAdapter(ViewPrivateMessagesActivity view
         mLocale = locale;
         mAccountName = accountName;
         int commentColor = customThemeWrapper.getCommentColor();
+        // todo:https://github.com/Docile-Alligator/Infinity-For-Reddit/issues/1027
+        //  add tables support and replace with MarkdownUtils#commonPostMarkwonBuilder
         mMarkwon = Markwon.builder(viewPrivateMessagesActivity)
                 .usePlugin(MarkwonInlineParserPlugin.create(plugin -> {
                     plugin.excludeInlineProcessor(AutolinkInlineProcessor.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -56,6 +56,7 @@
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;
 import io.noties.markwon.linkify.LinkifyPlugin;
+import io.noties.markwon.movement.MovementMethodPlugin;
 import io.noties.markwon.recycler.MarkwonAdapter;
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
@@ -78,6 +79,7 @@
 import ml.docilealligator.infinityforreddit.databinding.ActivityCommentBinding;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -239,6 +241,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     .usePlugin(SpoilerParserPlugin.create(parentTextColor, parentSpoilerBackgroundColor))
                     .usePlugin(RedditHeadingPlugin.create())
                     .usePlugin(StrikethroughPlugin.create())
+                    .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod()))
                     .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                     .usePlugin(TableEntryPlugin.create(this))
                     .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -45,6 +45,7 @@
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;
 import io.noties.markwon.linkify.LinkifyPlugin;
+import io.noties.markwon.movement.MovementMethodPlugin;
 import io.noties.markwon.recycler.MarkwonAdapter;
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
@@ -55,6 +56,7 @@
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -172,6 +174,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, spoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod()))
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .usePlugin(TableEntryPlugin.create(this))
                 .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -55,7 +55,6 @@
 import io.noties.markwon.recycler.MarkwonAdapter;
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
@@ -65,6 +64,7 @@
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
@@ -201,7 +201,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, spoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod().setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -48,7 +48,6 @@
 import io.noties.markwon.movement.MovementMethodPlugin;
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.NetworkState;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
@@ -69,6 +68,7 @@
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
@@ -195,7 +195,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(mCommentColor, commentSpoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod().setOnLinkLongClickListener((textView, url) -> {
                     if (!activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -58,7 +58,6 @@
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
 import ml.docilealligator.infinityforreddit.VoteThing;
@@ -79,6 +78,7 @@
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.post.Post;
@@ -227,7 +227,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(mCommentTextColor, commentSpoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod().setOnLinkLongClickListener((textView, url) -> {
                     if (!activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -35,6 +35,7 @@
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;
 import io.noties.markwon.linkify.LinkifyPlugin;
+import io.noties.markwon.movement.MovementMethodPlugin;
 import ml.docilealligator.infinityforreddit.NetworkState;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
@@ -44,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.events.ChangeInboxCountEvent;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.message.FetchMessage;
@@ -138,6 +140,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(mSecondaryTextColor, spoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod()))
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .build();
         mAccessToken = accessToken;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -72,7 +72,6 @@
 import io.noties.markwon.recycler.table.TableEntryPlugin;
 import jp.wasabeef.glide.transformations.BlurTransformation;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.FetchGfycatOrRedgifsVideoLinks;
 import ml.docilealligator.infinityforreddit.FetchStreamableVideo;
 import ml.docilealligator.infinityforreddit.R;
@@ -104,6 +103,7 @@
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.post.Post;
@@ -297,7 +297,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, postSpoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod().setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -39,13 +39,15 @@
 import io.noties.markwon.inlineparser.HtmlInlineProcessor;
 import io.noties.markwon.inlineparser.MarkwonInlineParserPlugin;
 import io.noties.markwon.linkify.LinkifyPlugin;
+import io.noties.markwon.movement.MovementMethodPlugin;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.activities.LinkResolverActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewPrivateMessagesActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewUserDetailActivity;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.message.Message;
@@ -121,6 +123,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(SpoilerParserPlugin.create(commentColor, commentColor | 0xFF000000))
                 .usePlugin(RedditHeadingPlugin.create())
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod()))
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .build();
         mShowElapsedTime = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_ELAPSED_TIME_KEY, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -38,7 +38,6 @@
 import io.noties.markwon.recycler.MarkwonAdapter;
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
-import me.saket.bettermovementmethod.BetterLinkMovementMethod;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.Rule;
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
@@ -48,6 +47,7 @@
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
+import ml.docilealligator.infinityforreddit.markdown.SpoilerAwareMovementMethod;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.Utils;
@@ -108,7 +108,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(customThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod().setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();
@@ -122,6 +122,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 .usePlugin(SpoilerParserPlugin.create(mPrimaryTextColor, spoilerBackgroundColor))
                 .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
+                .usePlugin(MovementMethodPlugin.create(new SpoilerAwareMovementMethod()))
                 .usePlugin(TableEntryPlugin.create(activity))
                 .build();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostLinkActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
+import android.webkit.URLUtil;
 import android.widget.EditText;
 import android.widget.LinearLayout;
 import android.widget.TextView;
@@ -351,10 +352,10 @@ protected void onCreate(Bundle savedInstanceState) {
         suggestTitleButton.setOnClickListener(view -> {
             Toast.makeText(this, R.string.please_wait, Toast.LENGTH_SHORT).show();
             String url = linkEditText.getText().toString().trim();
-            if (!url.startsWith("https://") || !url.startsWith("http://")) {
+            if (!URLUtil.isHttpsUrl(url) && !URLUtil.isHttpUrl(url)) {
                 url = "https://" + url;
             }
-            new Retrofit.Builder()
+            mRetrofit.newBuilder()
                     .baseUrl("http://localhost/")
                     .addConverterFactory(ScalarsConverterFactory.create())
                     .build().create(TitleSuggestion.class).getHtml(url).enqueue(new Callback<String>() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -1346,8 +1346,8 @@ public void onScrolledRight() {
                 if (comment != null) {
                     Intent intent = new Intent(mActivity, CommentActivity.class);
                     intent.putExtra(CommentActivity.EXTRA_PARENT_DEPTH_KEY, comment.getDepth() + 1);
-                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_MARKDOWN_KEY, comment.getCommentMarkdown());
-                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_KEY, comment.getCommentRawText());
+                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_MARKDOWN_KEY, comment.getCommentMarkdown());
+                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_KEY, comment.getCommentRawText());
                     intent.putExtra(CommentActivity.EXTRA_PARENT_FULLNAME_KEY, comment.getFullName());
                     intent.putExtra(CommentActivity.EXTRA_IS_REPLYING_KEY, true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -1417,7 +1417,7 @@ public void onVoteThingFail() {
 
                     Intent intent = new Intent(mActivity, CommentActivity.class);
                     intent.putExtra(CommentActivity.EXTRA_PARENT_FULLNAME_KEY, mPost.getFullName());
-                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_MARKDOWN_KEY, mPost.getTitle());
+                    intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TITLE_KEY, mPost.getTitle());
                     intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_MARKDOWN_KEY, mPost.getSelfText());
                     intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_KEY, mPost.getSelfTextPlain());
                     intent.putExtra(CommentActivity.EXTRA_IS_REPLYING_KEY, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/CommentMoreBottomSheetFragment.java
Patch:
@@ -148,8 +148,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             replyTextView.setOnClickListener(view -> {
                 Intent intent = new Intent(activity, CommentActivity.class);
                 intent.putExtra(CommentActivity.EXTRA_PARENT_DEPTH_KEY, comment.getDepth() + 1);
-                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_MARKDOWN_KEY, comment.getCommentMarkdown());
-                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_KEY, comment.getCommentRawText());
+                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_MARKDOWN_KEY, comment.getCommentMarkdown());
+                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_KEY, comment.getCommentRawText());
                 intent.putExtra(CommentActivity.EXTRA_PARENT_FULLNAME_KEY, comment.getFullName());
                 intent.putExtra(CommentActivity.EXTRA_IS_REPLYING_KEY, true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -895,7 +895,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 }
 
                 Intent intent = new Intent(activity, CommentActivity.class);
-                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TEXT_MARKDOWN_KEY, mPost.getTitle());
+                intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_TITLE_KEY, mPost.getTitle());
                 intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_MARKDOWN_KEY, mPost.getSelfText());
                 intent.putExtra(CommentActivity.EXTRA_COMMENT_PARENT_BODY_KEY, mPost.getSelfTextPlain());
                 intent.putExtra(CommentActivity.EXTRA_PARENT_FULLNAME_KEY, mPost.getFullName());

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -279,7 +279,7 @@ public static void setHTMLWithImageToTextView(TextView textView, String content,
     }
 
     public static int getConnectedNetwork(Context context) {
-        ConnectivityManager connMgr = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        ConnectivityManager connMgr = (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
         if (connMgr != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 Network nw = connMgr.getActiveNetwork();
@@ -326,7 +326,7 @@ public static int getConnectedNetwork(Context context) {
     }
 
     public static boolean isConnectedToWifi(Context context) {
-        ConnectivityManager connMgr = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        ConnectivityManager connMgr = (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
         if (connMgr != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 Network nw = connMgr.getActiveNetwork();
@@ -347,7 +347,7 @@ public static boolean isConnectedToWifi(Context context) {
     }
 
     public static boolean isConnectedToCellularData(Context context) {
-        ConnectivityManager connMgr = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        ConnectivityManager connMgr = (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
         if (connMgr != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 Network nw = connMgr.getActiveNetwork();

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -125,7 +125,7 @@ Retrofit provideRedgifsRetrofit(@Named("current_account") SharedPreferences curr
                 .addInterceptor(chain -> chain.proceed(
                         chain.request()
                                 .newBuilder()
-                                .header("User-Agent", APIUtils.getRedgifsUserAgent(mApplication))
+                                .header("User-Agent", APIUtils.USER_AGENT)
                                 .build()
                 ))
                 .addInterceptor(new RedgifsAccessTokenAuthenticator(currentAccountSharedPreferences))

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchGfycatOrRedgifsVideoLinks.java
Patch:
@@ -51,7 +51,7 @@ public static void fetchRedgifsVideoLinks(Context context, Executor executor, Ha
         executor.execute(() -> {
             try {
                 Response<String> response = redgifsRetrofit.create(RedgifsAPI.class).getRedgifsData(APIUtils.getRedgifsOAuthHeader(currentAccountSharedPreferences.getString(SharedPreferencesUtils.REDGIFS_ACCESS_TOKEN, "")),
-                         gfycatId, APIUtils.getRedgifsUserAgent(context)).execute();
+                         gfycatId, APIUtils.USER_AGENT).execute();
                 if (response.isSuccessful()) {
                     parseRedgifsVideoLinks(handler, response.body(), fetchGfycatOrRedgifsVideoLinksListener);
                 } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -681,7 +681,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 if (mPost.isGfycat() || mPost.isRedgifs() && !mPost.isLoadGfycatOrStreamableVideoSuccess()) {
                     ((PostDetailVideoAutoplayViewHolder) holder).fetchGfycatOrStreamableVideoCall =
                             mPost.isGfycat() ? mGfycatRetrofit.create(GfycatAPI.class).getGfycatData(mPost.getGfycatId()) :
-                                    mRedgifsRetrofit.create(RedgifsAPI.class).getRedgifsData(APIUtils.getRedgifsOAuthHeader(mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.REDGIFS_ACCESS_TOKEN, "")), mPost.getGfycatId(), APIUtils.getRedgifsUserAgent(mActivity));
+                                    mRedgifsRetrofit.create(RedgifsAPI.class).getRedgifsData(APIUtils.getRedgifsOAuthHeader(mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.REDGIFS_ACCESS_TOKEN, "")), mPost.getGfycatId(), APIUtils.USER_AGENT);
                     FetchGfycatOrRedgifsVideoLinks.fetchGfycatOrRedgifsVideoLinksInRecyclerViewAdapter(mExecutor, new Handler(),
                             ((PostDetailVideoAutoplayViewHolder) holder).fetchGfycatOrStreamableVideoCall,
                             mPost.isGfycat(), mAutomaticallyTryRedgifs,

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurVideoFragment.java
Patch:
@@ -148,7 +148,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         player = new ExoPlayer.Builder(activity).setTrackSelector(trackSelector).build();
         videoPlayerView.setPlayer(player);
         dataSourceFactory = new CacheDataSource.Factory().setCache(mSimpleCache)
-                .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.getRedgifsUserAgent(activity)));
+                .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.USER_AGENT));
         player.prepare();
         player.setMediaSource(new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(imgurMedia.getLink())));
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRPANBroadcastFragment.java
Patch:
@@ -354,7 +354,7 @@ public void onResume() {
         super.onResume();
         if (dataSourceFactory == null) {
             dataSourceFactory = new CacheDataSource.Factory().setCache(mSimpleCache)
-                    .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.getRedgifsUserAgent(mActivity)));
+                    .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.USER_AGENT));
             // Prepare the player with the source.
             player.prepare();
             player.setMediaSource(new HlsMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(rpanBroadcast.rpanStream.hlsUrl)));

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -158,7 +158,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         player = new ExoPlayer.Builder(activity).setTrackSelector(trackSelector).build();
         videoPlayerView.setPlayer(player);
         dataSourceFactory = new CacheDataSource.Factory().setCache(mSimpleCache)
-                .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.getRedgifsUserAgent(activity)));
+                .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.USER_AGENT));
         player.prepare();
         player.setMediaSource(new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(galleryVideo.url)));
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/videoautoplay/DefaultExoCreator.java
Patch:
@@ -79,7 +79,7 @@ public DefaultExoCreator(@NonNull ToroExo toro, @NonNull Config config) {
 
         DataSource.Factory baseFactory = config.dataSourceFactory;
         if (baseFactory == null) {
-            baseFactory = new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.getRedgifsUserAgent(getContext()));
+            baseFactory = new DefaultHttpDataSource.Factory().setUserAgent(APIUtils.USER_AGENT);
         }
         DataSource.Factory factory = new DefaultDataSource.Factory(this.toro.context, baseFactory);
         if (config.cache != null)

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewImageOrGifActivity.java
Patch:
@@ -146,7 +146,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getTheme().applyStyle(ContentFontFamily.valueOf(mSharedPreferences
                 .getString(SharedPreferencesUtils.CONTENT_FONT_FAMILY_KEY, ContentFontFamily.Default.name())).getResId(), true);
 
-        BigImageViewer.initialize(GlideImageLoader.with(this));
+        BigImageViewer.initialize(GlideImageLoader.with(this.getApplicationContext()));
 
         setContentView(R.layout.activity_view_image_or_gif);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -150,7 +150,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         super.onCreate(savedInstanceState);
 
-        BigImageViewer.initialize(GlideImageLoader.with(this));
+        BigImageViewer.initialize(GlideImageLoader.with(this.getApplicationContext()));
 
         setContentView(R.layout.activity_view_post_detail);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryImageOrGifFragment.java
Patch:
@@ -122,7 +122,7 @@ public ViewRedditGalleryImageOrGifFragment() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        BigImageViewer.initialize(GlideImageLoader.with(activity));
+        BigImageViewer.initialize(GlideImageLoader.with(activity.getApplicationContext()));
 
         View rootView = inflater.inflate(R.layout.fragment_view_reddit_gallery_image_or_gif, container, false);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/CustomToroContainer.java
Patch:
@@ -5,7 +5,7 @@
 
 import androidx.annotation.Nullable;
 
-import im.ene.toro.widget.Container;
+import ml.docilealligator.infinityforreddit.videoautoplay.widget.Container;
 
 public class CustomToroContainer extends Container {
     private OnWindowFocusChangedListener listener;

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/LoopAvailableExoCreator.java
Patch:
@@ -7,10 +7,10 @@
 import com.google.android.exoplayer2.Player;
 import com.google.android.exoplayer2.SimpleExoPlayer;
 
-import im.ene.toro.exoplayer.Config;
-import im.ene.toro.exoplayer.DefaultExoCreator;
-import im.ene.toro.exoplayer.ToroExo;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
+import ml.docilealligator.infinityforreddit.videoautoplay.Config;
+import ml.docilealligator.infinityforreddit.videoautoplay.DefaultExoCreator;
+import ml.docilealligator.infinityforreddit.videoautoplay.ToroExo;
 
 public class LoopAvailableExoCreator extends DefaultExoCreator {
     private final SharedPreferences sharedPreferences;

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -337,6 +337,7 @@ public class SharedPreferencesUtils {
     public static final String ACCOUNT_NAME = "account_name";
     public static final String ACCESS_TOKEN = "access_token";
     public static final String ACCOUNT_IMAGE_URL = "account_image_url";
+    public static final String REDGIFS_ACCESS_TOKEN = "redgifs_access_token";
 
     public static final String NAVIGATION_DRAWER_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.navigation_drawer";
     public static final String COLLAPSE_ACCOUNT_SECTION = "collapse_account_section";

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -1067,7 +1067,7 @@ private void changeSortType() {
         int currentPostType = sectionsPagerAdapter.getCurrentPostType();
         PostFragment postFragment = sectionsPagerAdapter.getCurrentFragment();
         if (postFragment != null) {
-            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(currentPostType != PostPagingSource.TYPE_FRONT_PAGE, postFragment.getSortType().getType().fullName);
+            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(currentPostType != PostPagingSource.TYPE_FRONT_PAGE, postFragment.getSortType());
             sortTypeBottomSheetFragment.show(getSupportFragmentManager(), sortTypeBottomSheetFragment.getTag());
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -576,7 +576,7 @@ private int getBottomAppBarOptionDrawableResource(int option) {
 
     private void showSortTypeBottomSheetFragment() {
         if (mFragment instanceof PostFragment) {
-            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(true, ((PostFragment) mFragment).getSortType().getType().fullName);
+            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(true, ((PostFragment) mFragment).getSortType());
             sortTypeBottomSheetFragment.show(getSupportFragmentManager(), sortTypeBottomSheetFragment.getTag());
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -1093,7 +1093,7 @@ public void onPageSelected(int position) {
     private void displaySortTypeBottomSheetFragment() {
         Fragment fragment = fragmentManager.findFragmentByTag("f0");
         if (fragment instanceof PostFragment) {
-            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(true, ((PostFragment) fragment).getSortType().getType().fullName);
+            SortTypeBottomSheetFragment sortTypeBottomSheetFragment = SortTypeBottomSheetFragment.getNewInstance(true, ((PostFragment) fragment).getSortType());
             sortTypeBottomSheetFragment.show(fragmentManager, sortTypeBottomSheetFragment.getTag());
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/SortTypeBottomSheetFragment.java
Patch:
@@ -49,11 +49,11 @@ public SortTypeBottomSheetFragment() {
         // Required empty public constructor
     }
 
-    public static SortTypeBottomSheetFragment getNewInstance(boolean isNoBestType, String currentSortType) {
+    public static SortTypeBottomSheetFragment getNewInstance(boolean isNoBestType, SortType currentSortType) {
         SortTypeBottomSheetFragment fragment = new SortTypeBottomSheetFragment();
         Bundle bundle = new Bundle();
         bundle.putBoolean(EXTRA_NO_BEST_TYPE, isNoBestType);
-        bundle.putString(EXTRA_CURRENT_SORT_TYPE, currentSortType);
+        bundle.putString(EXTRA_CURRENT_SORT_TYPE, currentSortType.getType().fullName);
         fragment.setArguments(bundle);
         return fragment;
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -958,7 +958,7 @@ public void failed() {
             return true;
         } else if (itemId == R.id.action_sort_view_post_detail_fragment) {
             if (mPost != null) {
-                PostCommentSortTypeBottomSheetFragment postCommentSortTypeBottomSheetFragment = new PostCommentSortTypeBottomSheetFragment();
+                PostCommentSortTypeBottomSheetFragment postCommentSortTypeBottomSheetFragment = PostCommentSortTypeBottomSheetFragment.getNewInstance(sortType);
                 postCommentSortTypeBottomSheetFragment.show(activity.getSupportFragmentManager(), postCommentSortTypeBottomSheetFragment.getTag());
             }
             return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -339,7 +339,6 @@ private String writeResponseBodyToDisk(ResponseBody body, String filePath) {
         }
 
         private boolean muxVideoAndAudio(String videoFilePath, String audioFilePath, String outputFilePath) {
-            Log.i("asdfasdf", "sasdfasdf");
             try {
                 File file = new File(outputFilePath);
                 file.createNewFile();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -54,6 +54,7 @@
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -169,6 +170,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, spoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .usePlugin(TableEntryPlugin.create(this))

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -64,6 +64,7 @@
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
@@ -198,6 +199,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, spoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -68,6 +68,7 @@
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
@@ -192,6 +193,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(mCommentColor, commentSpoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (!activity.isDestroyed() && !activity.isFinishing()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -78,6 +78,7 @@
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.customviews.SpoilerOnClickTextView;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.post.Post;
@@ -224,6 +225,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(mCommentTextColor, commentSpoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (!activity.isDestroyed() && !activity.isFinishing()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -43,6 +43,7 @@
 import ml.docilealligator.infinityforreddit.activities.ViewUserDetailActivity;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.events.ChangeInboxCountEvent;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.message.FetchMessage;
@@ -135,6 +136,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(mSecondaryTextColor, spoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .build();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -110,6 +110,7 @@
 import ml.docilealligator.infinityforreddit.customviews.AspectRatioGifImageView;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.post.Post;
@@ -292,6 +293,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                     }
                 })
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, postSpoilerBackgroundColor))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -45,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.activities.ViewPrivateMessagesActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewUserDetailActivity;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.markdown.RedditHeadingPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SpoilerParserPlugin;
 import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.message.Message;
@@ -119,6 +120,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 })
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(SpoilerParserPlugin.create(commentColor, commentColor | 0xFF000000))
+                .usePlugin(RedditHeadingPlugin.create())
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .build();
         mShowElapsedTime = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_ELAPSED_TIME_KEY, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -486,8 +486,7 @@ private void bottomAppBarOptionAction(int option) {
                 break;
             }
             case SharedPreferencesUtils.MAIN_ACTIVITY_BOTTOM_APP_BAR_OPTION_SAVED: {
-                Intent intent = new Intent(this, AccountPostsActivity.class);
-                intent.putExtra(AccountPostsActivity.EXTRA_USER_WHERE, PostPagingSource.USER_WHERE_SAVED);
+                Intent intent = new Intent(MainActivity.this, AccountSavedThingActivity.class);
                 startActivity(intent);
                 break;
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -504,8 +504,7 @@ private void bottomAppBarOptionAction(int option) {
                 break;
             }
             case SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SAVED: {
-                Intent intent = new Intent(this, AccountPostsActivity.class);
-                intent.putExtra(AccountPostsActivity.EXTRA_USER_WHERE, PostPagingSource.USER_WHERE_SAVED);
+                Intent intent = new Intent(ViewMultiRedditDetailActivity.this, AccountSavedThingActivity.class);
                 startActivity(intent);
                 break;
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -682,8 +682,7 @@ private void bottomAppBarOptionAction(int option) {
                 break;
             }
             case SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SAVED: {
-                Intent intent = new Intent(this, AccountPostsActivity.class);
-                intent.putExtra(AccountPostsActivity.EXTRA_USER_WHERE, PostPagingSource.USER_WHERE_SAVED);
+                Intent intent = new Intent(ViewSubredditDetailActivity.this, AccountSavedThingActivity.class);
                 startActivity(intent);
                 break;
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -995,8 +995,7 @@ private void bottomAppBarOptionAction(int option) {
                 break;
             }
             case SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SAVED: {
-                Intent intent = new Intent(this, AccountPostsActivity.class);
-                intent.putExtra(AccountPostsActivity.EXTRA_USER_WHERE, PostPagingSource.USER_WHERE_SAVED);
+                Intent intent = new Intent(ViewUserDetailActivity.this, AccountSavedThingActivity.class);
                 startActivity(intent);
                 break;
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/AspectRatioGifImageView.java
Patch:
@@ -25,7 +25,7 @@ public final float getRatio() {
     }
 
     public final void setRatio(float var1) {
-        if (this.ratio != var1) {
+        if (Math.abs(this.ratio - var1) > 0.0001) {
             this.ratio = var1;
 
             requestLayout();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchActivity.java
Patch:
@@ -395,6 +395,7 @@ protected void onStart() {
 
         if (query != null) {
             searchEditText.setText(query);
+            searchEditText.setSelection(query.length());
             query = null;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -812,6 +812,7 @@ public void failed() {
                             Post.Preview preview = getSuitablePreview(post.getPreviews());
                             ((PostWithPreviewTypeViewHolder) holder).preview = preview;
                             if (preview != null) {
+                                ((PostWithPreviewTypeViewHolder) holder).imageView.setVisibility(View.VISIBLE);
                                 ((PostWithPreviewTypeViewHolder) holder).imageWrapperRelativeLayout.setVisibility(View.VISIBLE);
                                 if (mFixedHeightPreviewInCard || (preview.getPreviewWidth() <= 0 || preview.getPreviewHeight() <= 0)) {
                                     int height = (int) (400 * mScale);
@@ -1847,6 +1848,7 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
                 ((PostVideoAutoplayViewHolder) holder).previewImageView.setVisibility(View.GONE);
             } else if (holder instanceof PostWithPreviewTypeViewHolder) {
                 mGlide.clear(((PostWithPreviewTypeViewHolder) holder).imageView);
+                ((PostWithPreviewTypeViewHolder) holder).imageView.setVisibility(View.GONE);
                 ((PostWithPreviewTypeViewHolder) holder).imageWrapperRelativeLayout.setVisibility(View.GONE);
                 ((PostWithPreviewTypeViewHolder) holder).errorTextView.setVisibility(View.GONE);
                 ((PostWithPreviewTypeViewHolder) holder).noPreviewLinkImageView.setVisibility(View.GONE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/HistoryActivity.java
Patch:
@@ -242,7 +242,7 @@ public void unlockSwipeRightToGoBack() {
     @Override
     public void postLayoutSelected(int postLayout) {
         if (sectionsPagerAdapter != null) {
-            mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.POST_LAYOUT_USER_POST_BASE + mAccountName, postLayout).apply();
+            mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.HISTORY_POST_LAYOUT_READ_POST, postLayout).apply();
             sectionsPagerAdapter.changePostLayout(postLayout);
         }
     }
@@ -311,8 +311,8 @@ public void changeNSFW(boolean nsfw) {
 
         public void changePostLayout(int postLayout) {
             Fragment fragment = getCurrentFragment();
-            if (fragment instanceof PostFragment) {
-                ((PostFragment) fragment).changePostLayout(postLayout);
+            if (fragment instanceof HistoryPostFragment) {
+                ((HistoryPostFragment) fragment).changePostLayout(postLayout);
             }
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/HistoryPostFragment.java
Patch:
@@ -336,7 +336,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
         Locale locale = getResources().getConfiguration().locale;
 
         if (historyType == HISTORY_TYPE_READ_POSTS) {
-            postLayout = mPostLayoutSharedPreferences.getInt(SharedPreferencesUtils.HISTORY_POST_LAYOUT_FRONT_PAGE_POST, defaultPostLayout);
+            postLayout = mPostLayoutSharedPreferences.getInt(SharedPreferencesUtils.HISTORY_POST_LAYOUT_READ_POST, defaultPostLayout);
 
             mAdapter = new HistoryPostRecyclerViewAdapter(activity, this, mExecutor, mOauthRetrofit, mGfycatRetrofit,
                     mRedgifsRetrofit, mStreamableRetrofit, mCustomThemeWrapper, locale,
@@ -813,7 +813,7 @@ public void changePostLayout(int postLayout, boolean temporary) {
         if (!temporary) {
             switch (postType) {
                 case HistoryPostPagingSource.TYPE_READ_POSTS:
-                    mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.HISTORY_POST_LAYOUT_FRONT_PAGE_POST, postLayout).apply();
+                    mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.HISTORY_POST_LAYOUT_READ_POST, postLayout).apply();
             }
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -68,7 +68,7 @@ public class SharedPreferencesUtils {
     public static final String POST_LAYOUT_MULTI_REDDIT_POST_BASE = "post_layout_multi_reddit_post_";
     public static final String POST_LAYOUT_USER_POST_BASE = "post_layout_user_post_";
     public static final String POST_LAYOUT_SEARCH_POST = "post_layout_search_post";
-    public static final String HISTORY_POST_LAYOUT_FRONT_PAGE_POST = "history_post_layout_read_post";
+    public static final String HISTORY_POST_LAYOUT_READ_POST = "history_post_layout_read_post";
     public static final int POST_LAYOUT_CARD = 0;
     public static final int POST_LAYOUT_COMPACT = 1;
     public static final int POST_LAYOUT_GALLERY = 2;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -145,7 +145,7 @@ public class ViewMultiRedditDetailActivity extends BaseActivity implements SortT
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
         if (mFragment instanceof PostFragment)
-            return ((PostFragment) mFragment).handleKeyDown(keyCode);
+            return ((PostFragment) mFragment).handleKeyDown(keyCode) || super.onKeyDown(keyCode, event);
         return super.onKeyDown(keyCode, event);
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -281,7 +281,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         }
         if (!((mPostDetailsSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_POST_AND_COMMENTS_IN_LANDSCAPE_MODE, true)
                 && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE)
-                || (mPostDetailsSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_POST_AND_COMMENTS_IN_PORTRAIT_MODE, false)))) {
+                || (mPostDetailsSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_POST_AND_COMMENTS_IN_PORTRAIT_MODE, false)
+                && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE))) {
             if (mCommentsRecyclerView != null) {
                 mCommentsRecyclerView.setVisibility(View.GONE);
                 mCommentsRecyclerView = null;

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/CheckIsFollowingUser.java
Patch:
@@ -12,7 +12,7 @@ public static void checkIsFollowingUser(Executor executor, Handler handler,
                                             RedditDataRoomDatabase redditDataRoomDatabase, String username,
                                             String accountName, CheckIsFollowingUserListener checkIsFollowingUserListener) {
         executor.execute(() -> {
-            SubscribedUserData subscribedUserData = redditDataRoomDatabase.subscribedUserDao().getSubscribedUser(username, accountName);
+            SubscribedUserData subscribedUserData = redditDataRoomDatabase.subscribedUserDao().getSubscribedUser(username, accountName == null ? "-" : accountName);
             handler.post(() -> {
                 if (subscribedUserData != null) {
                     checkIsFollowingUserListener.isSubscribed();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -11,7 +11,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -4129,7 +4128,7 @@ class PostCard2VideoAutoplayViewHolder extends PostBaseViewHolder implements Tor
             previewImageView.setOnClickListener(view -> fullscreenButton.performClick());
 
             videoPlayer.setOnClickListener(view -> {
-                if (videoPlayer.isControllerVisible()) {
+                if (mEasierToWatchInFullScreen && videoPlayer.isControllerVisible()) {
                     fullscreenButton.performClick();
                 }
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -787,7 +787,7 @@ public void delayTransition() {
                 sortType = new SortType(SortType.Type.valueOf(sort));
             }
 
-            postLayout = mPostLayoutSharedPreferences.getInt(SharedPreferencesUtils.POST_LAYOUT_FRONT_PAGE_POST, defaultPostLayout);
+            postLayout = mPostLayoutSharedPreferences.getInt(SharedPreferencesUtils.POST_LAYOUT_MULTI_REDDIT_POST_BASE + multiRedditPath, defaultPostLayout);
 
             mAdapter = new PostRecyclerViewAdapter(activity, this, mExecutor, mOauthRetrofit, mGfycatRetrofit,
                     mRedgifsRetrofit, mStreamableRetrofit, mCustomThemeWrapper, locale,
@@ -1573,6 +1573,7 @@ public void changePostLayout(int postLayout, boolean temporary) {
         if (!temporary) {
             switch (postType) {
                 case PostPagingSource.TYPE_FRONT_PAGE:
+                case PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE:
                     mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.POST_LAYOUT_FRONT_PAGE_POST, postLayout).apply();
                     break;
                 case PostPagingSource.TYPE_SUBREDDIT:
@@ -1585,6 +1586,7 @@ public void changePostLayout(int postLayout, boolean temporary) {
                     mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.POST_LAYOUT_SEARCH_POST, postLayout).apply();
                     break;
                 case PostPagingSource.TYPE_MULTI_REDDIT:
+                case PostPagingSource.TYPE_ANONYMOUS_MULTIREDDIT:
                     mPostLayoutSharedPreferences.edit().putInt(SharedPreferencesUtils.POST_LAYOUT_MULTI_REDDIT_POST_BASE + multiRedditPath, postLayout).apply();
                     break;
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -81,7 +81,6 @@
 import ml.docilealligator.infinityforreddit.services.DownloadMediaService;
 import ml.docilealligator.infinityforreddit.services.DownloadRedditVideoService;
 import ml.docilealligator.infinityforreddit.services.EditProfileService;
-import ml.docilealligator.infinityforreddit.services.MaterialYouService;
 import ml.docilealligator.infinityforreddit.services.SubmitPostService;
 import ml.docilealligator.infinityforreddit.settings.AdvancedPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.CommentPreferenceFragment;
@@ -276,8 +275,6 @@ public interface AppComponent {
 
     void inject(LockScreenActivity lockScreenActivity);
 
-    void inject(MaterialYouService materialYouService);
-
     void inject(RPANActivity rpanActivity);
 
     void inject(ViewRPANBroadcastFragment viewRPANBroadcastFragment);
@@ -301,4 +298,6 @@ public interface AppComponent {
     void inject(PostPollActivity postPollActivity);
 
     void inject(AccountChooserBottomSheetFragment accountChooserBottomSheetFragment);
+
+    void inject(MaterialYouWorker materialYouWorker);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -61,6 +61,7 @@
 
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
+import org.greenrobot.eventbus.ThreadMode;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -1210,7 +1211,7 @@ public void onChangeNSFWEvent(ChangeNSFWEvent changeNSFWEvent) {
         }
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onRecreateActivityEvent(RecreateActivityEvent recreateActivityEvent) {
         ActivityCompat.recreate(this);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SettingsActivity.java
Patch:
@@ -17,6 +17,7 @@
 
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
+import org.greenrobot.eventbus.ThreadMode;
 
 import javax.inject.Inject;
 import javax.inject.Named;
@@ -189,7 +190,7 @@ protected void onDestroy() {
         EventBus.getDefault().unregister(this);
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onRecreateActivityEvent(RecreateActivityEvent recreateActivityEvent) {
         ActivityCompat.recreate(this);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/FollowedUsersListingFragment.java
Patch:
@@ -117,7 +117,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         FollowedUsersRecyclerViewAdapter adapter = new FollowedUsersRecyclerViewAdapter(mActivity,
                 mExecutor, mOauthRetrofit, mRedditDataRoomDatabase, mCustomThemeWrapper, accessToken);
         mRecyclerView.setAdapter(adapter);
-        new FastScrollerBuilder(mRecyclerView).build();
+        new FastScrollerBuilder(mRecyclerView).useMd2Style().build();
 
         mSubscribedUserViewModel = new ViewModelProvider(this,
                 new SubscribedUserViewModel.Factory(mActivity.getApplication(), mRedditDataRoomDatabase, getArguments().getString(EXTRA_ACCOUNT_NAME)))

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MultiRedditListingFragment.java
Patch:
@@ -154,7 +154,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                 }
             });
         }
-        new FastScrollerBuilder(mRecyclerView).build();
+        new FastScrollerBuilder(mRecyclerView).useMd2Style().build();
 
         mMultiRedditViewModel = new ViewModelProvider(this,
                 new MultiRedditViewModel.Factory(mActivity.getApplication(), mRedditDataRoomDatabase, accountName))

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubscribedSubredditsListingFragment.java
Patch:
@@ -132,7 +132,7 @@ mCustomThemeWrapper, accessToken, getArguments().getBoolean(EXTRA_EXTRA_CLEAR_SE
         }
 
         mRecyclerView.setAdapter(adapter);
-        new FastScrollerBuilder(mRecyclerView).build();
+        new FastScrollerBuilder(mRecyclerView).useMd2Style().build();
 
         mSubscribedSubredditViewModel = new ViewModelProvider(this,
                 new SubscribedSubredditViewModel.Factory(mActivity.getApplication(), mRedditDataRoomDatabase, accountName))

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/ThemePreferenceFragment.java
Patch:
@@ -179,7 +179,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
 
             enableMaterialYouSwitchPreference.setOnPreferenceChangeListener((preference, newValue) -> {
                 if ((Boolean) newValue) {
-                    MaterialYouUtils.changeTheme(activity, executor, new Handler(),
+                    MaterialYouUtils.changeThemeASync(activity, executor, new Handler(),
                             redditDataRoomDatabase, customThemeWrapper,
                             lightThemeSharedPreferences, darkThemeSharedPreferences,
                             amoledThemeSharedPreferences, null);
@@ -191,7 +191,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             });
 
             applyMaterialYouPreference.setOnPreferenceClickListener(preference -> {
-                MaterialYouUtils.changeTheme(activity, executor, new Handler(),
+                MaterialYouUtils.changeThemeASync(activity, executor, new Handler(),
                         redditDataRoomDatabase, customThemeWrapper,
                         lightThemeSharedPreferences, darkThemeSharedPreferences,
                         amoledThemeSharedPreferences, null);

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -1,5 +1,7 @@
 package ml.docilealligator.infinityforreddit.services;
 
+import static android.os.Environment.getExternalStoragePublicDirectory;
+
 import android.app.Notification;
 import android.app.PendingIntent;
 import android.app.Service;
@@ -50,8 +52,6 @@
 import retrofit2.Response;
 import retrofit2.Retrofit;
 
-import static android.os.Environment.getExternalStoragePublicDirectory;
-
 public class DownloadMediaService extends Service {
     public static final String EXTRA_URL = "EU";
     public static final String EXTRA_FILE_NAME = "EFN";
@@ -336,7 +336,7 @@ private void downloadFinished(int mediaType, int randomNotificationIdOffset, Str
                             intent.setAction(android.content.Intent.ACTION_VIEW);
                             intent.setDataAndType(destinationFileUri, mimeType);
                             intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-                            PendingIntent pendingIntent = PendingIntent.getActivity(DownloadMediaService.this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
+                            PendingIntent pendingIntent = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.getActivity(DownloadMediaService.this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_IMMUTABLE) : PendingIntent.getActivity(DownloadMediaService.this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
                             updateNotification(mediaType, R.string.downloading_media_finished, -1,
                                     randomNotificationIdOffset, pendingIntent);
                             EventBus.getDefault().post(new DownloadMediaEvent(true));

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -571,7 +571,7 @@ private void downloadFinished(Uri destinationFileUri, int errorCode, int randomN
                         intent.setAction(android.content.Intent.ACTION_VIEW);
                         intent.setDataAndType(destinationFileUri, "video/*");
                         intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-                        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
+                        PendingIntent pendingIntent = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_IMMUTABLE) : PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
                         updateNotification(R.string.downloading_reddit_video_finished, -1, randomNotificationIdOffset, pendingIntent);
                         EventBus.getDefault().post(new DownloadRedditVideoEvent(true));
                     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -288,7 +288,6 @@ public void updateMessageReply(Message newReply, int position) {
         if (position >= 0 && position < super.getItemCount()) {
             Message message = getItem(position);
             if (message != null) {
-                message.addReply(newReply);
                 notifyItemChanged(position);
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -55,7 +55,7 @@ public class MessageRecyclerViewAdapter extends PagedListAdapter<Message, Recycl
     private static final int VIEW_TYPE_DATA = 0;
     private static final int VIEW_TYPE_ERROR = 1;
     private static final int VIEW_TYPE_LOADING = 2;
-    private static final DiffUtil.ItemCallback<Message> DIFF_CALLBACK = new DiffUtil.ItemCallback<Message>() {
+    private static final DiffUtil.ItemCallback<Message> DIFF_CALLBACK = new DiffUtil.ItemCallback<>() {
         @Override
         public boolean areItemsTheSame(@NonNull Message message, @NonNull Message t1) {
             return message.getId().equals(t1.getId());
@@ -199,7 +199,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         mActivity.startActivity(intent);
                     } else if (mMessageType == FetchMessage.MESSAGE_TYPE_PRIVATE_MESSAGE) {
                         Intent intent = new Intent(mActivity, ViewPrivateMessagesActivity.class);
-                        intent.putExtra(ViewPrivateMessagesActivity.EXTRA_PRIVATE_MESSAGE, message);
+                        intent.putExtra(ViewPrivateMessagesActivity.EXTRA_PRIVATE_MESSAGE_INDEX, holder.getBindingAdapterPosition());
                         intent.putExtra(ViewPrivateMessagesActivity.EXTRA_MESSAGE_POSITION, holder.getBindingAdapterPosition());
                         mActivity.startActivity(intent);
                     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/HeaderSectionRecyclerViewAdapter.java
Patch:
@@ -49,14 +49,15 @@ public class HeaderSectionRecyclerViewAdapter extends RecyclerView.Adapter<Recyc
     public HeaderSectionRecyclerViewAdapter(BaseActivity baseActivity, RequestManager glide, String accountName,
                                             SharedPreferences sharedPreferences,
                                             SharedPreferences navigationDrawerSharedPreferences,
+                                            SharedPreferences securitySharedPreferences,
                                             PageToggle pageToggle) {
         this.baseActivity = baseActivity;
         resources = baseActivity.getResources();
         this.glide = glide;
         this.accountName = accountName;
         isLoggedIn = accountName != null;
         this.pageToggle = pageToggle;
-        requireAuthToAccountSection = sharedPreferences.getBoolean(SharedPreferencesUtils.REQUIRE_AUTHENTICATION_TO_GO_TO_ACCOUNT_SECTION_IN_NAVIGATION_DRAWER, false);
+        requireAuthToAccountSection = securitySharedPreferences.getBoolean(SharedPreferencesUtils.REQUIRE_AUTHENTICATION_TO_GO_TO_ACCOUNT_SECTION_IN_NAVIGATION_DRAWER, false);
         showAvatarOnTheRightInTheNavigationDrawer = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_AVATAR_ON_THE_RIGHT, false);
         showAvatarOnTheRightInTheNavigationDrawer = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_AVATAR_ON_THE_RIGHT, false);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -796,6 +796,7 @@ public void delayTransition() {
                 @Override
                 public void typeChipClicked(int filter) {
                     Intent intent = new Intent(activity, FilteredPostsActivity.class);
+                    intent.putExtra(FilteredPostsActivity.EXTRA_NAME, multiRedditPath);
                     intent.putExtra(FilteredPostsActivity.EXTRA_POST_TYPE, postType);
                     intent.putExtra(FilteredPostsActivity.EXTRA_FILTER, filter);
                     startActivity(intent);
@@ -804,6 +805,7 @@ public void typeChipClicked(int filter) {
                 @Override
                 public void flairChipClicked(String flair) {
                     Intent intent = new Intent(activity, FilteredPostsActivity.class);
+                    intent.putExtra(FilteredPostsActivity.EXTRA_NAME, multiRedditPath);
                     intent.putExtra(FilteredPostsActivity.EXTRA_POST_TYPE, postType);
                     intent.putExtra(FilteredPostsActivity.EXTRA_CONTAIN_FLAIR, flair);
                     startActivity(intent);
@@ -812,6 +814,7 @@ public void flairChipClicked(String flair) {
                 @Override
                 public void nsfwChipClicked() {
                     Intent intent = new Intent(activity, FilteredPostsActivity.class);
+                    intent.putExtra(FilteredPostsActivity.EXTRA_NAME, multiRedditPath);
                     intent.putExtra(FilteredPostsActivity.EXTRA_POST_TYPE, postType);
                     intent.putExtra(FilteredPostsActivity.EXTRA_FILTER, Post.NSFW_TYPE);
                     startActivity(intent);
@@ -1001,7 +1004,6 @@ public void delayTransition() {
                         FetchPostFilterReadPostsAndConcatenatedSubredditNames.fetchPostFilterAndConcatenatedSubredditNames(mRedditDataRoomDatabase, mExecutor, new Handler(), usage, nameOfUsage,
                                 (postFilter, concatenatedSubredditNames) -> {
                                     if (activity != null && !activity.isFinishing() && !activity.isDestroyed() && !isDetached()) {
-                                        this.postFilter = postFilter;
                                         postFilter.allowNSFW = !mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_NSFW_FOREVER, false) && mNsfwAndSpoilerSharedPreferences.getBoolean(SharedPreferencesUtils.NSFW_BASE, false);
                                         this.concatenatedSubredditNames = concatenatedSubredditNames;
                                         if (concatenatedSubredditNames == null) {
@@ -1019,7 +1021,6 @@ public void delayTransition() {
                         FetchPostFilterReadPostsAndConcatenatedSubredditNames.fetchPostFilterAndConcatenatedSubredditNames(mRedditDataRoomDatabase, mExecutor, new Handler(), multiRedditPath, usage, nameOfUsage,
                                 (postFilter, concatenatedSubredditNames) -> {
                                     if (activity != null && !activity.isFinishing() && !activity.isDestroyed() && !isDetached()) {
-                                        this.postFilter = postFilter;
                                         postFilter.allowNSFW = !mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_NSFW_FOREVER, false) && mNsfwAndSpoilerSharedPreferences.getBoolean(SharedPreferencesUtils.NSFW_BASE, false);
                                         this.concatenatedSubredditNames = concatenatedSubredditNames;
                                         if (concatenatedSubredditNames == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -222,7 +222,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setToolbarGoToTop(toolbar);
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, "-");
+        mAccountName = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCOUNT_NAME, null);
         showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, false);
         lockBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_BOTTOM_APP_BAR, false);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -156,7 +156,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 int navBarHeight = getNavBarHeight();
                 if (navBarHeight > 0) {
                     CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) fab.getLayoutParams();
-                    params.bottomMargin = navBarHeight;
+                    params.bottomMargin += navBarHeight;
                     fab.setLayoutParams(params);
                 }
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -227,6 +227,7 @@ private Response<String> fetchMessages(Account account, int retryCount) throws I
             if (response.code() == 401) {
                 String accessToken = refreshAccessToken(account);
                 if (!accessToken.equals("")) {
+                    account.setAccessToken(accessToken);
                     return fetchMessages(account, retryCount - 1);
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -209,6 +209,7 @@ public class SharedPreferencesUtils {
     public static final String ALWAYS_SHOW_CHILD_COMMENT_COUNT = "always_show_child_comment_count";
     public static final String HIDE_UPVOTE_RATIO = "hide_upvote_ratio";
     public static final String POST_FEED_MAX_RESOLUTION = "post_feed_max_resolution";
+    public static final String REDDIT_VIDEO_DEFAULT_RESOLUTION = "reddit_video_default_resolution";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -208,10 +208,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
         if (getIntent().getBooleanExtra(EXTRA_SUBMIT_POST, false)) {
             getMenuInflater().inflate(R.menu.full_markdown_activity, menu);
             applyMenuItemTheme(menu);
-            return true;
         }
-
-        return false;
+        return true;
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/PostSectionRecyclerViewAdapter.java
Patch:
@@ -119,7 +119,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
     @Override
     public int getItemCount() {
-        return isLoggedIn ? POST_SECTION_ITEMS + 1 : 0;
+        return isLoggedIn ? (collapsePostSection ? 1: POST_SECTION_ITEMS + 1) : 0;
     }
 
     class MenuGroupTitleViewHolder extends RecyclerView.ViewHolder {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/PreferenceSectionRecyclerViewAdapter.java
Patch:
@@ -143,7 +143,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
     @Override
     public int getItemCount() {
-        return PREFERENCES_SECTION_ITEMS + 1;
+        return collapsePreferencesSection ? 1 : PREFERENCES_SECTION_ITEMS + 1;
     }
 
     public void setNSFWEnabled(boolean isNSFWEnabled) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/navigationdrawer/RedditSectionRecyclerViewAdapter.java
Patch:
@@ -103,7 +103,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
     @Override
     public int getItemCount() {
-        return REDDIT_SECTION_ITEMS + 1;
+        return collapseRedditSection ? 1 : REDDIT_SECTION_ITEMS + 1;
     }
 
     class MenuGroupTitleViewHolder extends RecyclerView.ViewHolder {

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/AspectRatioGifImageView.java
Patch:
@@ -37,6 +37,7 @@ private void init(Context context, AttributeSet attrs) {
 
     }
 
+    @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
         int width = this.getMeasuredWidth();

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -208,6 +208,7 @@ public class SharedPreferencesUtils {
     public static final String SHOW_AUTHOR_AVATAR = "show_author_avatar";
     public static final String ALWAYS_SHOW_CHILD_COMMENT_COUNT = "always_show_child_comment_count";
     public static final String HIDE_UPVOTE_RATIO = "hide_upvote_ratio";
+    public static final String POST_FEED_MAX_RESOLUTION = "post_feed_max_resolution";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -148,7 +148,7 @@ public class CommentsRecyclerViewAdapter extends RecyclerView.Adapter<RecyclerVi
     private int mCommentIconAndInfoColor;
     private int mFullyCollapsedCommentBackgroundColor;
     private int mAwardedCommentBackgroundColor;
-    private Integer[] verticalBlockColors;
+    private int[] verticalBlockColors;
 
     private Drawable mCommentIcon;
 
@@ -273,7 +273,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         mFullyCollapsedCommentBackgroundColor = customThemeWrapper.getFullyCollapsedCommentBackgroundColor();
         mAwardedCommentBackgroundColor = customThemeWrapper.getAwardedCommentBackgroundColor();
 
-        verticalBlockColors = new Integer[] {
+        verticalBlockColors = new int[] {
                 customThemeWrapper.getCommentVerticalBarColor1(),
                 customThemeWrapper.getCommentVerticalBarColor2(),
                 customThemeWrapper.getCommentVerticalBarColor3(),

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1629,7 +1629,6 @@ public void hideReadPosts() {
     @Override
     public void changePostFilter(PostFilter postFilter) {
         this.postFilter = postFilter;
-        postFilter.allowNSFW = !mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_NSFW_FOREVER, false) && mNsfwAndSpoilerSharedPreferences.getBoolean((accountName == null || accountName.equals("-") ? "" : accountName) + SharedPreferencesUtils.NSFW_BASE, false);
         if (mPostViewModel != null) {
             mPostViewModel.changePostFilter(postFilter);
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/SpoilerParserPlugin.java
Patch:
@@ -96,8 +96,8 @@ public void afterSetText(@NonNull TextView textView) {
             CodeBlockSpan[] codeBlockSpans = markdownStringBuilder.getSpans(spoilerStart, spoilerEnd, CodeBlockSpan.class);
 
             if (codeSpans.length == 0 && codeBlockSpans.length == 0) {
-                markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                 markdownStringBuilder.delete(spoilerEnd, spoilerEnd + 2);
+                markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                 SpoilerSpan spoilerSpan = new SpoilerSpan(textColor, backgroundColor);
                 markdownStringBuilder.setSpan(spoilerSpan, spoilerStart, spoilerEnd, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                 offset += 4;
@@ -108,8 +108,8 @@ public void afterSetText(@NonNull TextView textView) {
                 int spanBeginning = markdownStringBuilder.getSpanStart(codeSpan);
                 int spanEnd = markdownStringBuilder.getSpanEnd(codeSpan);
                 if (spoilerStart + 2 <= spanBeginning && spanEnd <= spoilerEnd + 2) {
-                    markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                     markdownStringBuilder.delete(spoilerEnd, spoilerEnd + 2);
+                    markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                     SpoilerSpan spoilerSpan = new SpoilerSpan(textColor, backgroundColor);
                     markdownStringBuilder.setSpan(spoilerSpan, spoilerStart, spoilerEnd, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                     offset += 4;
@@ -122,8 +122,8 @@ public void afterSetText(@NonNull TextView textView) {
                 int spanBeginning = markdownStringBuilder.getSpanStart(codeBlockSpan);
                 int spanEnd = markdownStringBuilder.getSpanEnd(codeBlockSpan);
                 if (spoilerStart + 2 <= spanBeginning && spanEnd <= spoilerEnd + 2) {
-                    markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                     markdownStringBuilder.delete(spoilerEnd, spoilerEnd + 2);
+                    markdownStringBuilder.delete(spoilerStart, spoilerStart + 2);
                     SpoilerSpan spoilerSpan = new SpoilerSpan(textColor, backgroundColor);
                     markdownStringBuilder.setSpan(spoilerSpan, spoilerStart, spoilerEnd, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                     offset += 4;

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -206,6 +206,7 @@ public class SharedPreferencesUtils {
     public static final String HIDE_COMMENT_AWARDS = "hide_comment_awards";
     public static final String SHOW_FEWER_TOOLBAR_OPTIONS_THRESHOLD = "show_fewer_toolbar_options_threshold";
     public static final String SHOW_AUTHOR_AVATAR = "show_author_avatar";
+    public static final String ALWAYS_SHOW_CHILD_COMMENT_COUNT = "always_show_child_comment_count";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/multireddit/MultiReddit.java
Patch:
@@ -253,6 +253,6 @@ public void writeToParcel(Parcel parcel, int i) {
         parcel.writeByte((byte) (over18 ? 1 : 0));
         parcel.writeByte((byte) (isSubscriber ? 1 : 0));
         parcel.writeByte((byte) (isFavorite ? 1 : 0));
-        parcel.writeStringList(subreddits);
+        parcel.writeList(subreddits);
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditWithSelection.java
Patch:
@@ -22,7 +22,6 @@ public SubredditWithSelection(String name, String iconUrl) {
     }
 
     protected SubredditWithSelection(Parcel in) {
-        super();
         name = in.readString();
         iconUrl = in.readString();
         selected = in.readByte() != 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -204,6 +204,7 @@ public class SharedPreferencesUtils {
     public static final String HIDE_TEXT_POST_CONTENT = "hide_text_post_content";
     public static final String HIDE_COMMENT_AWARDS = "hide_comment_awards";
     public static final String SHOW_FEWER_TOOLBAR_OPTIONS_THRESHOLD = "show_fewer_toolbar_options_threshold";
+    public static final String SHOW_AUTHOR_AVATAR = "show_author_avatar";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -200,6 +200,7 @@ public class SharedPreferencesUtils {
     public static final String DEFAULT_PLAYBACK_SPEED = "default_playback_speed";
     public static final String LEGACY_AUTOPLAY_VIDEO_CONTROLLER_UI = "legacy_autoplay_video_controller_ui";
     public static final String PINCH_TO_ZOOM_VIDEO = "pinch_to_zoom_video";
+    public static final String FIXED_HEIGHT_PREVIEW_IN_CARD = "fixed_height_preview_in_card";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1371,6 +1371,7 @@ public void changeSortType(SortType sortType) {
             }
             this.sortType = sortType;
             mPostViewModel.changeSortType(sortType);
+            goBackToTop();
         }
     }
 
@@ -1446,6 +1447,7 @@ public void refresh() {
         }
         saveCache();
         mAdapter.refresh();
+        goBackToTop();
     }
 
     private void showErrorView(int stringResId) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -465,7 +465,7 @@ private int getNotificationId(int mediaType, int randomNotificationIdOffset) {
     }
 
     private String getDownloadLocation(int mediaType, boolean isNsfw) {
-        if (isNsfw && mSharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_NSFW_FOLDER, false)) {
+        if (isNsfw && mSharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_NSFW_MEDIA_IN_DIFFERENT_FOLDER, false)) {
             return mSharedPreferences.getString(SharedPreferencesUtils.NSFW_DOWNLOAD_LOCATION, "");
         }
         switch (mediaType) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -144,7 +144,7 @@ public void handleMessage(Message msg) {
                     if (videoResponse.isSuccessful() && videoResponse.body() != null) {
                         String externalCacheDirectoryPath = externalCacheDirectory.getAbsolutePath() + "/";
                         String destinationFileDirectory;
-                        if (isNsfw && sharedPreferences.getBoolean(SharedPreferencesUtils.SEPARATE_NSFW_FOLDER, false)) {
+                        if (isNsfw && sharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_NSFW_MEDIA_IN_DIFFERENT_FOLDER, false)) {
                             destinationFileDirectory = sharedPreferences.getString(SharedPreferencesUtils.NSFW_DOWNLOAD_LOCATION, "");
                         } else {
                             destinationFileDirectory = sharedPreferences.getString(SharedPreferencesUtils.VIDEO_DOWNLOAD_LOCATION, "");

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -130,9 +130,9 @@ public class SharedPreferencesUtils {
     public static final String IMAGE_DOWNLOAD_LOCATION = "image_download_location";
     public static final String GIF_DOWNLOAD_LOCATION = "gif_download_location";
     public static final String VIDEO_DOWNLOAD_LOCATION = "video_download_location";
-    public static final String NSFW_DOWNLOAD_LOCATION = "nsfw_download_location";
-    public static final String SEPARATE_NSFW_FOLDER = "separate_nsfw_folder";
     public static final String SEPARATE_FOLDER_FOR_EACH_SUBREDDIT = "separate_folder_for_each_subreddit";
+    public static final String SAVE_NSFW_MEDIA_IN_DIFFERENT_FOLDER = "save_nsfw_media_in_different_folder";
+    public static final String NSFW_DOWNLOAD_LOCATION = "nsfw_download_location";
     public static final String VIBRATE_WHEN_ACTION_TRIGGERED = "vibrate_when_action_triggered";
     public static final String DISABLE_SWIPING_BETWEEN_TABS = "disable_swiping_between_tabs";
     public static final String ENABLE_SWIPE_ACTION = "enable_swipe_action";

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchGfycatOrRedgifsVideoLinks.java
Patch:
@@ -60,7 +60,7 @@ public static void fetchGfycatOrRedgifsVideoLinksInRecyclerViewAdapter(Executor
                 }
             } catch (IOException e) {
                 e.printStackTrace();
-                fetchGfycatOrRedgifsVideoLinksListener.failed(-1);
+                handler.post(() -> fetchGfycatOrRedgifsVideoLinksListener.failed(-1));
             }
         });
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchStreamableVideo.java
Patch:
@@ -39,6 +39,7 @@ public static void fetchStreamableVideo(Executor executor, Handler handler, Retr
                 }
             } catch (IOException | JSONException e) {
                 e.printStackTrace();
+                handler.post(fetchStreamableVideoListener::failed);
             }
         });
     }
@@ -64,6 +65,7 @@ public static void fetchStreamableVideoInRecyclerViewAdapter(Executor executor,
                 }
             } catch (IOException | JSONException e) {
                 e.printStackTrace();
+                handler.post(fetchStreamableVideoListener::failed);
             }
         });
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubscribedThing.java
Patch:
@@ -12,6 +12,7 @@
 import ml.docilealligator.infinityforreddit.subscribedsubreddit.SubscribedSubredditData;
 import ml.docilealligator.infinityforreddit.subscribeduser.SubscribedUserData;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
+import ml.docilealligator.infinityforreddit.utils.Utils;
 
 class ParseSubscribedThing {
     static void parseSubscribedSubreddits(String response, String accountName,
@@ -97,7 +98,7 @@ protected Void doInBackground(Void... voids) {
                     } else {
                         String subredditFullName = data.getString(JSONUtils.DISPLAY_NAME_KEY);
                         String description = data.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
-                        String sidebarDescription = data.getString(JSONUtils.DESCRIPTION_KEY);
+                        String sidebarDescription = Utils.modifyMarkdown(data.getString(JSONUtils.DESCRIPTION_KEY).trim());
                         int nSubscribers = data.getInt(JSONUtils.SUBSCRIBERS_KEY);
                         long createdUTC = data.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
                         String suggestedCommentSort = data.getString(JSONUtils.SUGGESTED_COMMENT_SORT_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/SuperscriptParser.java
Patch:
@@ -106,7 +106,6 @@ private Superscript parseSuperscript(int level) {
                     Superscript node = new Superscript();
                     node.setLiteral(input.substring(caret_pos + 1, i));
                     node.setLevel(level);
-                    node.setLevel(level);
                     return node;
                 }
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -124,14 +124,14 @@ public static String parseInlineGifInComments(String markdown) {
         Pattern inlineGifPattern = Pattern.compile("!\\[gif]\\(giphy\\|\\w+\\)");
         Matcher matcher = inlineGifPattern.matcher(markdownStringBuilder);
         while (matcher.find()) {
-            markdownStringBuilder.replace(matcher.start(), matcher.end(), "[gif](https://media3.giphy.com/media/" + markdownStringBuilder.substring(matcher.start() + "![gif](giphy|".length(), matcher.end() - 1) + "/giphy.mp4)");
+            markdownStringBuilder.replace(matcher.start(), matcher.end(), "[gif](https://i.giphy.com/media/" + markdownStringBuilder.substring(matcher.start() + "![gif](giphy|".length(), matcher.end() - 1) + "/giphy.mp4)");
             matcher = inlineGifPattern.matcher(markdownStringBuilder);
         }
 
         Pattern inlineGifPattern2 = Pattern.compile("!\\[gif]\\(giphy\\|\\w+\\|downsized\\)");
         Matcher matcher2 = inlineGifPattern2.matcher(markdownStringBuilder);
         while (matcher2.find()) {
-            markdownStringBuilder.replace(matcher2.start(), matcher2.end(), "[gif](https://media3.giphy.com/media/" + markdownStringBuilder.substring(matcher2.start() + "![gif](giphy|".length(), matcher2.end() - "|downsized\\)".length()) + "/giphy.mp4)");
+            markdownStringBuilder.replace(matcher2.start(), matcher2.end(), "[gif](https://i.giphy.com/media/" + markdownStringBuilder.substring(matcher2.start() + "![gif](giphy|".length(), matcher2.end() - "|downsized\\)".length() + 1) + "/giphy.mp4)");
             matcher2 = inlineGifPattern2.matcher(markdownStringBuilder);
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -269,7 +269,7 @@ private void handleUri(Uri uri) {
                             } else {
                                 deepLinkError(uri);
                             }
-                        } else if (authority.contains("google.com") ){
+                        } else if (authority.contains("google.com")) {
                             if ( path.matches(GOOGLE_AMP_PATTERN) ) {
                                 String url = path.substring(11, path.length()); // skipping past amp straight to reddit
                                 handleUri(Uri.parse("https://" + url));

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -1175,7 +1175,7 @@ public void failed() {
                     .setNegativeButton(R.string.no, null)
                     .show();
             return true;
-        } else if(itemId == R.id.action_edit_profile_view_user_detail_activity){
+        } else if (itemId == R.id.action_edit_profile_view_user_detail_activity) {
             startActivity(new Intent(this, EditProfileActivity.class));
             return true;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -1908,7 +1908,7 @@ private void openMedia(Post post) {
                 intent.putExtra(ViewImageOrGifActivity.EXTRA_POST_TITLE_KEY, post.getTitle());
                 intent.putExtra(ViewImageOrGifActivity.EXTRA_SUBREDDIT_OR_USERNAME_KEY, post.getSubredditName());
                 mActivity.startActivity(intent);
-            } else if (post.getPostType() == Post.GIF_TYPE){
+            } else if (post.getPostType() == Post.GIF_TYPE) {
                 Intent intent = new Intent(mActivity, ViewImageOrGifActivity.class);
                 intent.putExtra(ViewImageOrGifActivity.EXTRA_FILE_NAME_KEY, post.getSubredditName()
                         + "-" + post.getId() + ".gif");

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/DeleteAllPostLayouts.java
Patch:
@@ -17,7 +17,7 @@ public static void deleteAllPostLayouts(Executor executor, Handler handler, Shar
             Map<String,?> keys = defaultSharedPreferences.getAll();
             SharedPreferences.Editor editor = defaultSharedPreferences.edit();
 
-            for(Map.Entry<String,?> entry : keys.entrySet()){
+            for (Map.Entry<String,?> entry : keys.entrySet()) {
                 String key = entry.getKey();
                 if (key.startsWith(SharedPreferencesUtils.POST_LAYOUT_SHARED_PREFERENCES_FILE)
                         || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_FRONT_PAGE_POST)

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/DeleteAllSortTypes.java
Patch:
@@ -17,7 +17,7 @@ public static void deleteAllSortTypes(Executor executor, Handler handler, Shared
             Map<String,?> keys = defaultSharedPreferences.getAll();
             SharedPreferences.Editor editor = defaultSharedPreferences.edit();
 
-            for(Map.Entry<String,?> entry : keys.entrySet()){
+            for (Map.Entry<String,?> entry : keys.entrySet()) {
                 String key = entry.getKey();
                 if (key.contains(SharedPreferencesUtils.SORT_TYPE_BEST_POST) || key.contains(SharedPreferencesUtils.SORT_TIME_BEST_POST)
                         || key.contains(SharedPreferencesUtils.SORT_TYPE_ALL_POST_LEGACY) || key.contains(SharedPreferencesUtils.SORT_TIME_ALL_POST_LEGACY)

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/SortTimeBottomSheetFragment.java
Patch:
@@ -59,7 +59,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         }
 
         String sortType = getArguments() != null ? getArguments().getString(EXTRA_SORT_TYPE) : null;
-        if(sortType == null) {
+        if (sortType == null) {
             dismiss();
             return rootView;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/CommentsListingFragment.java
Patch:
@@ -265,7 +265,7 @@ private void bindView(Resources resources) {
 
             String username = getArguments().getString(EXTRA_USERNAME);
             String sort = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_USER_COMMENT, SortType.Type.NEW.name());
-            if(sort.equals(SortType.Type.CONTROVERSIAL.name()) || sort.equals(SortType.Type.TOP.name())) {
+            if (sort.equals(SortType.Type.CONTROVERSIAL.name()) || sort.equals(SortType.Type.TOP.name())) {
                 String sortTime = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TIME_USER_COMMENT, SortType.Time.ALL.name());
                 sortType = new SortType(SortType.Type.valueOf(sort.toUpperCase()), SortType.Time.valueOf(sortTime.toUpperCase()));
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1260,8 +1260,7 @@ private void bindPostViewModel() {
                 mFetchPostInfoLinearLayout.setOnClickListener(view -> refresh());
                 showErrorView(R.string.load_posts_error);
             }
-            if (!(refreshLoadState instanceof LoadState.Loading) // #563
-                    && appendLoadState instanceof LoadState.NotLoading) {
+            if (!(refreshLoadState instanceof LoadState.Loading) && appendLoadState instanceof LoadState.NotLoading) {
                 if (appendLoadState.getEndOfPaginationReached() && mAdapter.getItemCount() < 1) {
                     noPostFound();
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryImageOrGifFragment.java
Patch:
@@ -292,7 +292,7 @@ public void onFail(Exception error) {
             if (!captionUrlIsEmpty) {
                 String scheme = Uri.parse(captionUrl).getScheme();
                 String urlWithoutScheme = "";
-                if(!TextUtils.isEmpty(scheme)){
+                if (!TextUtils.isEmpty(scheme)) {
                     urlWithoutScheme = captionUrl.substring(scheme.length() + 3);
                 }
 
@@ -330,7 +330,7 @@ private void hideAppBar() {
     }
 
     private void loadImage() {
-        if(isFallback) {
+        if (isFallback) {
             imageView.showImage(Uri.parse(media.fallbackUrl));
         }
         else{

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -214,7 +214,7 @@ private ListenableFuture<LoadResult<String, Post>> loadHomePosts(@NonNull LoadPa
         } else {
             afterKey = loadParams.getKey();
         }
-        if(sortType.getTime() != null) {
+        if (sortType.getTime() != null) {
             bestPost = api.getBestPostsListenableFuture(sortType.getType().value, sortType.getTime().value, afterKey,
                     APIUtils.getOAuthHeader(accessToken));
         } else {
@@ -299,7 +299,7 @@ private ListenableFuture<LoadResult<String, Post>> loadSearchPosts(@NonNull Load
                     searchPosts = api.searchPostsListenableFuture(query, loadParams.getKey(), sortType.getType().value, trendingSource);
                 }
             } else {
-                if(sortType.getTime() != null) {
+                if (sortType.getTime() != null) {
                     searchPosts = api.searchPostsOauthListenableFuture(query, loadParams.getKey(), sortType.getType().value,
                             sortType.getTime().value, trendingSource, APIUtils.getOAuthHeader(accessToken));
                 } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/ThemePreferenceFragment.java
Patch:
@@ -114,7 +114,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
                             AppCompatDelegate.setDefaultNightMode(MODE_NIGHT_AUTO_BATTERY);
                         }
 
-                        if((getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_NO) {
+                        if ((getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_NO) {
                             customThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.LIGHT);
                         } else {
                             if (amoledDarkSwitch.isChecked()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/user/ParseUserData.java
Patch:
@@ -22,7 +22,7 @@ static void parseUserListingData(String response, ParseUserListingDataListener p
     }
 
     private static UserData parseUserDataBase(JSONObject userDataJson, boolean parseFullKarma) throws JSONException {
-        if(userDataJson == null) {
+        if (userDataJson == null) {
             return null;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/GlideImageGetter.java
Patch:
@@ -99,7 +99,7 @@ private void setDrawable(Drawable drawable) {
 
         @Override
         public void onLoadStarted(@Nullable Drawable placeholderDrawable) {
-            if(placeholderDrawable != null) {
+            if (placeholderDrawable != null) {
                 setDrawable(placeholderDrawable);
             }
         }
@@ -126,7 +126,7 @@ public void onResourceReady(@NonNull Bitmap bitmap, @Nullable Transition<? super
 
         @Override
         public void onLoadCleared(@Nullable Drawable placeholderDrawable) {
-            if(placeholderDrawable != null) {
+            if (placeholderDrawable != null) {
                 setDrawable(placeholderDrawable);
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1260,7 +1260,8 @@ private void bindPostViewModel() {
                 mFetchPostInfoLinearLayout.setOnClickListener(view -> refresh());
                 showErrorView(R.string.load_posts_error);
             }
-            if (appendLoadState instanceof LoadState.NotLoading) {
+            if (!(refreshLoadState instanceof LoadState.Loading) // #563
+                    && appendLoadState instanceof LoadState.NotLoading) {
                 if (appendLoadState.getEndOfPaginationReached() && mAdapter.getItemCount() < 1) {
                     noPostFound();
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -777,7 +777,7 @@ public void readFailed() {
         }
 
         if (showBottomAppBar) {
-            int optionCount = mBottomAppBarSharedPreference.getInt(SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_COUNT, 4);
+            int optionCount = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_COUNT, 4);
             int option1 = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_1, SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_HOME);
             int option2 = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_2, SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SUBSCRIPTIONS);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -728,7 +728,7 @@ public void readFailed() {
         }
 
         if (showBottomAppBar) {
-            int optionCount = mBottomAppBarSharedPreference.getInt(SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_COUNT, 4);
+            int optionCount = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_COUNT, 4);
             int option1 = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_1, SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_HOME);
             int option2 = mBottomAppBarSharedPreference.getInt((mAccessToken == null ? "-" : "") + SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_2, SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SUBSCRIPTIONS);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -404,7 +404,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(mCustomThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, descriptionTextView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -400,7 +400,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(mCustomThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, descriptionTextView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -282,7 +282,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 })
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, postSpoilerBackgroundColor))
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, activity).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -76,7 +76,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(customThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, activity).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -157,7 +157,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                 })
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, recyclerView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -404,7 +404,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(mCustomThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, descriptionTextView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -400,7 +400,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(mCustomThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, descriptionTextView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -282,7 +282,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                 })
                 .usePlugin(SpoilerParserPlugin.create(markdownColor, postSpoilerBackgroundColor))
                 .usePlugin(StrikethroughPlugin.create())
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, activity).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -76,7 +76,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(customThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, activity).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     if (activity != null && !activity.isDestroyed() && !activity.isFinishing()) {
                         UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                         Bundle bundle = new Bundle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -157,7 +157,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                 })
                 .usePlugin(StrikethroughPlugin.create())
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, recyclerView).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -131,7 +131,6 @@ public class PostDetailRecyclerViewAdapter extends RecyclerView.Adapter<Recycler
     private static final int VIEW_TYPE_POST_DETAIL_NO_PREVIEW_LINK = 6;
     private static final int VIEW_TYPE_POST_DETAIL_GALLERY = 7;
     private static final int VIEW_TYPE_POST_DETAIL_TEXT_TYPE = 8;
-    private final MarkwonAdapter mMarkwonAdapter;
     private AppCompatActivity mActivity;
     private ViewPostDetailFragment mFragment;
     private Executor mExecutor;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryImageOrGifFragment.java
Patch:
@@ -427,7 +427,7 @@ public void onResume() {
     @Override
     public void onDestroyView() {
         super.onDestroyView();
-        BigImageViewer.imageLoader().cancelAll();
+        imageView.cancel();
         SubsamplingScaleImageView subsamplingScaleImageView = imageView.getSSIV();
         if (subsamplingScaleImageView != null) {
             subsamplingScaleImageView.recycle();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CommentActivity.java
Patch:
@@ -72,7 +72,7 @@
 import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
-import ml.docilealligator.infinityforreddit.utils.SuperscriptInlineProcessor;
+import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.Utils;
 import retrofit2.Retrofit;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -132,7 +132,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");
+        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT);
         contentEditText.setText(mCommentContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -141,7 +141,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         titleTextView.setText(getIntent().getStringExtra(EXTRA_TITLE));
-        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");;
+        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT);
         contentEditText.setText(mPostContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -41,7 +41,7 @@
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.message.Message;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
-import ml.docilealligator.infinityforreddit.utils.SuperscriptInlineProcessor;
+import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.Utils;
 
 public class PrivateMessagesDetailRecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -35,7 +35,7 @@
 import ml.docilealligator.infinityforreddit.activities.LinkResolverActivity;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UrlMenuBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
-import ml.docilealligator.infinityforreddit.utils.SuperscriptInlineProcessor;
+import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.Utils;
 
 public class RulesRecyclerViewAdapter extends RecyclerView.Adapter<RulesRecyclerViewAdapter.RuleViewHolder> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/CopyTextBottomSheetFragment.java
Patch:
@@ -74,7 +74,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         if (markdownText != null) {
             //markdownText = markdownText.replaceAll("<sup>", "^").replaceAll("</sup>", "");
-            markdownText = markdownText.replaceAll("&gt;", ">");
             copyMarkdownTextView.setOnClickListener(view -> {
                 showCopyDialog(markdownText);
                 dismiss();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -58,7 +58,7 @@
 import ml.docilealligator.infinityforreddit.subreddit.FetchSubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditViewModel;
-import ml.docilealligator.infinityforreddit.utils.SuperscriptInlineProcessor;
+import ml.docilealligator.infinityforreddit.markdown.SuperscriptInlineProcessor;
 import ml.docilealligator.infinityforreddit.utils.Utils;
 import retrofit2.Retrofit;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/SuperscriptInlineProcessor.java
Patch:
@@ -1,4 +1,4 @@
-package ml.docilealligator.infinityforreddit.utils;
+package ml.docilealligator.infinityforreddit.markdown;
 
 import androidx.annotation.Nullable;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -65,7 +65,6 @@ public static String modifyMarkdown(String markdown) {
                 .replaceAll("((?<=[\\s])|^)/[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com$0)")
                 .replaceAll("((?<=[\\s])|^)[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)")
                 .replaceAll("\\^{2,}", "^")
-                .replaceAll(">!(\\n?(?:[\\S\\h]+?(?:\\n?[\\S\\h]+?)?)\\n?)!<", "&gt;!$1!<") // html entity remains escaped inside an inline block
                 .replaceAll("(^|^ *|\\n *)#(?!($|\\s|#))", "$0 ")
                 .replaceAll("(^|^ *|\\n *)##(?!($|\\s|#))", "$0 ")
                 .replaceAll("(^|^ *|\\n *)###(?!($|\\s|#))", "$0 ")

File: app/src/main/java/ml/docilealligator/infinityforreddit/markdown/SpoilerParserPlugin.java
Patch:
@@ -69,7 +69,7 @@ public void afterSetText(@NonNull TextView textView) {
                 markdownStringBuilder.setSpan(spoilerSpan, spoilerStart, spoilerEnd, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                 offset += 4;
             }
-            s
+            
             for (CodeSpan codeSpan : codeSpans) {
                 int spanBeginning = markdownStringBuilder.getSpanStart(codeSpan);
                 int spanEnd = markdownStringBuilder.getSpanEnd(codeSpan);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -129,10 +129,10 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
                 }
         }
 
-        boolean userDefinedChangeSatusBarIconColorInImmersiveInterface =
+        boolean userDefinedChangeStatusBarIconColorInImmersiveInterface =
                 customThemeWrapper.isChangeStatusBarIconColorAfterToolbarCollapsedInImmersiveInterface();
         if (immersiveInterface && isImmersiveInterfaceApplicable) {
-            changeStatusBarIconColor = userDefinedChangeSatusBarIconColorInImmersiveInterface;
+            changeStatusBarIconColor = userDefinedChangeStatusBarIconColorInImmersiveInterface;
         } else {
             changeStatusBarIconColor = false;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/BaseActivity.java
Patch:
@@ -129,10 +129,10 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
                 }
         }
 
-        boolean userDefinedChangeSatusBarIconColorInImmersiveInterface =
+        boolean userDefinedChangeStatusBarIconColorInImmersiveInterface =
                 customThemeWrapper.isChangeStatusBarIconColorAfterToolbarCollapsedInImmersiveInterface();
         if (immersiveInterface && isImmersiveInterfaceApplicable) {
-            changeStatusBarIconColor = userDefinedChangeSatusBarIconColorInImmersiveInterface;
+            changeStatusBarIconColor = userDefinedChangeStatusBarIconColorInImmersiveInterface;
         } else {
             changeStatusBarIconColor = false;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -270,9 +270,6 @@ protected void onCreate(Bundle savedInstanceState) {
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
                     drawer.setFitsSystemWindows(false);
                     getWindow().setDecorFitsSystemWindows(false);
-                    /*drawer.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
-                            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |
-                            View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);*/
                 } else {
                     window.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -65,7 +65,7 @@ public static String modifyMarkdown(String markdown) {
                 .replaceAll("((?<=[\\s])|^)/[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com$0)")
                 .replaceAll("((?<=[\\s])|^)[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)")
                 .replaceAll("\\^{2,}", "^")
-                .replaceAll("(?:>!)(\\n?[\\S\\h]+?\\n?[\\S\\h]+\\n?!<)", "&gt;!$1") // html entity remains escaped inside an inline block
+                .replaceAll(">!(\\n?(?:[\\S\\h]+?(?:\\n?[\\S\\h]+?)?)\\n?)!<", "&gt;!$1!<") // html entity remains escaped inside an inline block
                 .replaceAll("(^|^ *|\\n *)#(?!($|\\s|#))", "$0 ")
                 .replaceAll("(^|^ *|\\n *)##(?!($|\\s|#))", "$0 ")
                 .replaceAll("(^|^ *|\\n *)###(?!($|\\s|#))", "$0 ")

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -132,7 +132,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT);
+        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");
         contentEditText.setText(mCommentContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -141,7 +141,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         titleTextView.setText(getIntent().getStringExtra(EXTRA_TITLE));
-        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT);
+        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");;
         contentEditText.setText(mPostContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/CopyTextBottomSheetFragment.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.ClipboardManager;
 import android.content.Context;
 import android.os.Bundle;
+import android.text.Html;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -72,7 +73,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         }
 
         if (markdownText != null) {
-            markdownText = markdownText.replaceAll("<sup>", "^").replaceAll("</sup>", "");
+            //markdownText = markdownText.replaceAll("<sup>", "^").replaceAll("</sup>", "");
+            markdownText = markdownText.replaceAll("&gt;", ">");
             copyMarkdownTextView.setOnClickListener(view -> {
                 showCopyDialog(markdownText);
                 dismiss();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -132,7 +132,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
-        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT);
+        mCommentContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");
         contentEditText.setText(mCommentContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -141,7 +141,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mFullName = getIntent().getStringExtra(EXTRA_FULLNAME);
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
         titleTextView.setText(getIntent().getStringExtra(EXTRA_TITLE));
-        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT);
+        mPostContent = getIntent().getStringExtra(EXTRA_CONTENT).replaceAll("&gt;",">");;
         contentEditText.setText(mPostContent);
 
         if (savedInstanceState != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -137,7 +137,7 @@ public String processMarkdown(@NonNull String markdown) {
                     @Override
                     public void afterSetText(@NonNull TextView textView) {
                         textView.setHighlightColor(Color.TRANSPARENT);
-                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText().toString());
+                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText());
                         Pattern spoilerPattern = Pattern.compile(">![\\S\\s]+?!<");
                         Matcher matcher = spoilerPattern.matcher(markdownStringBuilder);
                         int start = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -180,7 +180,7 @@ public String processMarkdown(@NonNull String markdown) {
 
                     @Override
                     public void afterSetText(@NonNull TextView textView) {
-                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText().toString());
+                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText());
                         Pattern spoilerPattern = Pattern.compile(">![\\S\\s]+?!<");
                         Matcher matcher = spoilerPattern.matcher(markdownStringBuilder);
                         int start = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -180,7 +180,7 @@ public String processMarkdown(@NonNull String markdown) {
 
                     @Override
                     public void afterSetText(@NonNull TextView textView) {
-                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText().toString());
+                        SpannableStringBuilder markdownStringBuilder = new SpannableStringBuilder(textView.getText());
                         Pattern spoilerPattern = Pattern.compile(">![\\S\\s]+?!<");
                         Matcher matcher = spoilerPattern.matcher(markdownStringBuilder);
                         int start = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewRedditGalleryActivity.java
Patch:
@@ -48,6 +48,7 @@ public class ViewRedditGalleryActivity extends AppCompatActivity implements SetA
 
     public static final String EXTRA_REDDIT_GALLERY = "ERG";
     public static final String EXTRA_SUBREDDIT_NAME = "ESN";
+    public static final String EXTRA_APPLIED_THEME = "EAS";
 
     @BindView(R.id.hauler_view_view_reddit_gallery_activity)
     HaulerView haulerView;
@@ -69,7 +70,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
-        getTheme().applyStyle(R.style.Theme_Normal, true);
+        int theme = getIntent().getIntExtra(EXTRA_APPLIED_THEME, R.style.Theme_Normal);
+        getTheme().applyStyle(theme <= 0 ? R.style.Theme_Normal : theme, true);
 
         getTheme().applyStyle(FontStyle.valueOf(sharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -87,6 +87,7 @@
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.SaveThing;
 import ml.docilealligator.infinityforreddit.VoteThing;
+import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.activities.CommentActivity;
 import ml.docilealligator.infinityforreddit.activities.FilteredPostsActivity;
 import ml.docilealligator.infinityforreddit.activities.LinkResolverActivity;
@@ -2268,6 +2269,7 @@ class PostDetailNoPreviewViewHolder extends PostDetailBaseViewHolder {
                         Intent intent = new Intent(mActivity, ViewRedditGalleryActivity.class);
                         intent.putParcelableArrayListExtra(ViewRedditGalleryActivity.EXTRA_REDDIT_GALLERY, mPost.getGallery());
                         intent.putExtra(ViewRedditGalleryActivity.EXTRA_SUBREDDIT_NAME, mPost.getSubredditName());
+                        intent.putExtra(ViewRedditGalleryActivity.EXTRA_APPLIED_THEME, ((BaseActivity)mActivity).getAppliedTheme());
                         mActivity.startActivity(intent);
                     }
                 }
@@ -2378,6 +2380,7 @@ class PostDetailGalleryViewHolder extends PostDetailBaseViewHolder {
                 Intent intent = new Intent(mActivity, ViewRedditGalleryActivity.class);
                 intent.putParcelableArrayListExtra(ViewRedditGalleryActivity.EXTRA_REDDIT_GALLERY, mPost.getGallery());
                 intent.putExtra(ViewRedditGalleryActivity.EXTRA_SUBREDDIT_NAME, mPost.getSubredditName());
+                intent.putExtra(ViewRedditGalleryActivity.EXTRA_APPLIED_THEME, ((BaseActivity)mActivity).getAppliedTheme());
                 mActivity.startActivity(intent);
             });
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -72,8 +72,10 @@
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SaveThing;
 import ml.docilealligator.infinityforreddit.VoteThing;
+import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.activities.FilteredPostsActivity;
 import ml.docilealligator.infinityforreddit.activities.LinkResolverActivity;
+import ml.docilealligator.infinityforreddit.activities.SearchResultActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewImageOrGifActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewPostDetailActivity;
 import ml.docilealligator.infinityforreddit.activities.ViewRedditGalleryActivity;
@@ -1970,6 +1972,7 @@ private void openMedia(Post post) {
                 Intent intent = new Intent(mActivity, ViewRedditGalleryActivity.class);
                 intent.putParcelableArrayListExtra(ViewRedditGalleryActivity.EXTRA_REDDIT_GALLERY, post.getGallery());
                 intent.putExtra(ViewRedditGalleryActivity.EXTRA_SUBREDDIT_NAME, post.getSubredditName());
+                intent.putExtra(ViewRedditGalleryActivity.EXTRA_APPLIED_THEME, ((BaseActivity)mActivity).getAppliedTheme());
                 mActivity.startActivity(intent);
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -396,7 +396,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         builder.linkColor(mCustomThemeWrapper.getLinkColor());
                     }
                 })
-                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, this).setOnLinkLongClickListener((textView, url) -> {
+                .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, descriptionTextView).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
                     bundle.putString(UrlMenuBottomSheetFragment.EXTRA_URL, url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/CommentsListingFragment.java
Patch:
@@ -307,9 +307,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                 if (hasComment) {
                     mFetchCommentInfoLinearLayout.setVisibility(View.GONE);
                 } else {
-                    mFetchCommentInfoLinearLayout.setOnClickListener(view -> {
-                        //Do nothing
-                    });
+                    mFetchCommentInfoLinearLayout.setOnClickListener(null);
                     showErrorView(R.string.no_comments);
                 }
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -137,6 +137,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                     }
                 })
                 .usePlugin(StrikethroughPlugin.create())
+                .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .usePlugin(MovementMethodPlugin.create(BetterLinkMovementMethod.linkify(Linkify.WEB_URLS, recyclerView).setOnLinkLongClickListener((textView, url) -> {
                     UrlMenuBottomSheetFragment urlMenuBottomSheetFragment = new UrlMenuBottomSheetFragment();
                     Bundle bundle = new Bundle();
@@ -145,7 +146,6 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                     urlMenuBottomSheetFragment.show(getChildFragmentManager(), urlMenuBottomSheetFragment.getTag());
                     return true;
                 })))
-                .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .usePlugin(TableEntryPlugin.create(activity))
                 .build();
         MarkwonAdapter markwonAdapter = MarkwonAdapter.builder(R.layout.adapter_default_entry, R.id.text)

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPrivateMessagesActivity.java
Patch:
@@ -137,14 +137,14 @@ protected void onCreate(Bundle savedInstanceState) {
     private void bindView() {
         if (privateMessage != null) {
             if (privateMessage.getAuthor().equals(mAccountName)) {
-                mToolbar.setTitle(privateMessage.getDestination());
+                setTitle(privateMessage.getDestination());
                 mToolbar.setOnClickListener(view -> {
                     Intent intent = new Intent(this, ViewUserDetailActivity.class);
                     intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, privateMessage.getDestination());
                     startActivity(intent);
                 });
             } else {
-                mToolbar.setTitle(privateMessage.getAuthor());
+                setTitle(privateMessage.getAuthor());
                 mToolbar.setOnClickListener(view -> {
                     Intent intent = new Intent(this, ViewUserDetailActivity.class);
                     intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, privateMessage.getAuthor());

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -1022,11 +1022,11 @@ public void deleteFailed() {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.view_user_detail_activity, menu);
-        if(mAccountName.equals(username)){ // Hide some menus
+        if (username.equals(mAccountName)) {
             menu.findItem(R.id.action_send_private_message_view_user_detail_activity).setVisible(false);
             menu.findItem(R.id.action_report_view_user_detail_activity).setVisible(false);
             menu.findItem(R.id.action_block_user_view_user_detail_activity).setVisible(false);
-        }else { // Hide Edit Profile menu
+        } else {
             menu.findItem(R.id.action_edit_profile_view_user_detail_activity).setVisible(false);
         }
         applyMenuItemTheme(menu);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -1494,7 +1494,7 @@ private void loadImage(final RecyclerView.ViewHolder holder) {
                     imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10)))
                             .into(((PostWithPreviewTypeViewHolder) holder).imageView);
                 } else {
-                    imageRequestBuilder.override(preview.getPreviewWidth(), preview.getPreviewHeight()).into(((PostWithPreviewTypeViewHolder) holder).imageView);
+                    imageRequestBuilder.override(preview.getPreviewWidth(), preview.getPreviewHeight()).centerInside().into(((PostWithPreviewTypeViewHolder) holder).imageView);
                 }
             }
         } else if (holder instanceof PostCompactBaseViewHolder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1704,6 +1704,9 @@ public void loadIcon(String subredditOrUserName, boolean isSubreddit, LoadIconLi
     }
 
     public void markPostAsRead(Post post) {
+        if (readPosts == null) {
+            readPosts = new ArrayList<>();
+        }
         readPosts.add(post.getId());
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewImageOrGifActivity.java
Patch:
@@ -163,7 +163,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         boolean useBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.USE_BOTTOM_TOOLBAR_IN_MEDIA_VIEWER, false);
         if (postTitle != null) {
-            Spanned title = Html.fromHtml(String.format("<small>%s</small>", postTitle));
+            Spanned title = Html.fromHtml(String.format("<font color=\"#FFFFFF\"><small>%s</small></font>", postTitle));
             if (useBottomAppBar) {
                 titleTextView.setText(title);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -324,9 +324,9 @@ private boolean epsilonCheck(int a, int b, int epsilon) {
 
         if (postTitle != null) {
             if (useBottomAppBar) {
-                titleTextView.setText(Html.fromHtml(String.format("<small>%s</small>", postTitle)));
+                titleTextView.setText(Html.fromHtml(String.format("<font color=\"#FFFFFF\"><small>%s</small></font>", postTitle)));
             } else {
-                setTitle(Html.fromHtml(String.format("<small>%s</small>", postTitle)));
+                setTitle(Html.fromHtml(String.format("<font color=\"#FFFFFF\"><small>%s</small></font>", postTitle)));
             }
         } else {
             if (!useBottomAppBar) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditDataRoomDatabase.java
Patch:
@@ -349,8 +349,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
         public void migrate(@NonNull SupportSQLiteDatabase database) {
             database.execSQL("CREATE TABLE anonymous_multireddit_subreddits (path TEXT NOT NULL, " +
                     "username TEXT NOT NULL, subreddit_name TEXT NOT NULL, " +
-                    "PRIMARY KEY(path, username, subreddit_name), FOREIGN KEY(path) REFERENCES multi_reddits(path) ON DELETE CASCADE ON UPDATE CASCADE, " +
-                    "FOREIGN KEY(username) REFERENCES multi_reddits(username) ON DELETE CASCADE ON UPDATE CASCADE)");
+                    "PRIMARY KEY(path, username, subreddit_name), FOREIGN KEY(path, username) REFERENCES multi_reddits(path, username) ON DELETE CASCADE ON UPDATE CASCADE)");
             database.execSQL("ALTER TABLE recent_search_queries ADD COLUMN time INTEGER DEFAULT 0 NOT NULL");
             database.execSQL("ALTER TABLE custom_themes ADD COLUMN media_indicator_icon_color INTEGER DEFAULT " + Color.parseColor("#FFFFFF") + " NOT NULL");
             database.execSQL("ALTER TABLE custom_themes ADD COLUMN media_indicator_background_color INTEGER DEFAULT " + Color.parseColor("#000000") + " NOT NULL");

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -1612,7 +1612,7 @@ private Fragment generatePostFragment(int postType, String name) {
             if (postType == SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_HOME) {
                 PostFragment fragment = new PostFragment();
                 Bundle bundle = new Bundle();
-                bundle.putInt(PostFragment.EXTRA_POST_TYPE, mAccountName == null ? PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE : PostPagingSource.TYPE_FRONT_PAGE);
+                bundle.putInt(PostFragment.EXTRA_POST_TYPE, mAccessToken == null ? PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE : PostPagingSource.TYPE_FRONT_PAGE);
                 bundle.putString(PostFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                 bundle.putString(PostFragment.EXTRA_ACCOUNT_NAME, mAccountName);
                 fragment.setArguments(bundle);
@@ -1639,7 +1639,7 @@ private Fragment generatePostFragment(int postType, String name) {
                 PostFragment fragment = new PostFragment();
                 Bundle bundle = new Bundle();
                 bundle.putString(PostFragment.EXTRA_NAME, name);
-                bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostPagingSource.TYPE_MULTI_REDDIT);
+                bundle.putInt(PostFragment.EXTRA_POST_TYPE, mAccessToken == null ? PostPagingSource.TYPE_ANONYMOUS_MULTIREDDIT : PostPagingSource.TYPE_MULTI_REDDIT);
                 bundle.putString(PostFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                 bundle.putString(PostFragment.EXTRA_ACCOUNT_NAME, mAccountName);
                 fragment.setArguments(bundle);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubscribedSubredditsListingFragment.java
Patch:
@@ -110,7 +110,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             }
         }
 
-        String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME);
+        String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME, "-");
         String accessToken = getArguments().getString(EXTRA_ACCESS_TOKEN);
 
         if (accessToken == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/AcknowledgementFragment.java
Patch:
@@ -119,6 +119,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         acknowledgements.add(new Acknowledgement("BetterLinkMovementMethod",
                 "Attempts to improve how clickable links are detected, highlighted and handled in TextView.",
                 Uri.parse("https://github.com/saket/Better-Link-Movement-Method")));
+        acknowledgements.add(new Acknowledgement("ZoomLayout",
+                "2D zoom and pan behavior for View hierarchies, images, video streams, and much more, written in Kotlin for Android.",
+                Uri.parse("https://github.com/natario1/ZoomLayout")));
 
         AcknowledgementRecyclerViewAdapter adapter = new AcknowledgementRecyclerViewAdapter(activity, acknowledgements);
         recyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(activity));

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MultiredditSelectionActivity.java
Patch:
@@ -150,7 +150,9 @@ private void bindView(boolean initializeFragment) {
             return;
         }
 
-        loadMultiReddits();
+        if (mAccessToken != null) {
+            loadMultiReddits();
+        }
 
         if (initializeFragment) {
             mFragment = new MultiRedditListingFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -398,7 +398,7 @@ public Fragment getItem(int position) {
                     SubscribedSubredditsListingFragment fragment = new SubscribedSubredditsListingFragment();
                     Bundle bundle = new Bundle();
                     bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, false);
-                    bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_NAME, mAccountName == null ? "-" : mAccountName);
+                    bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_NAME, mAccountName);
                     bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                     fragment.setArguments(bundle);
                     return fragment;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MultiRedditListingFragment.java
Patch:
@@ -108,7 +108,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             }
         }
 
-        String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME);
+        String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME, "-");
         String accessToken = getArguments().getString(EXTRA_ACCESS_TOKEN);
         boolean isGettingMultiredditInfo = getArguments().getBoolean(EXTRA_IS_GETTING_MULTIREDDIT_INFO, false);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -771,8 +771,8 @@ public void delayTransition() {
                 postFragmentId += multiRedditPath.hashCode();
             }
 
-            usage = PostFilterUsage.HOME_TYPE;
-            nameOfUsage = PostFilterUsage.NO_USAGE;
+            usage = PostFilterUsage.MULTIREDDIT_TYPE;
+            nameOfUsage = multiRedditPath;
 
             String sort = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_MULTI_REDDIT_POST_BASE + multiRedditPath, SortType.Type.BEST.name());
             if (sort.equals(SortType.Type.CONTROVERSIAL.name()) || sort.equals(SortType.Type.TOP.name())) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredPostsActivity.java
Patch:
@@ -263,6 +263,7 @@ protected void applyCustomTheme() {
     private void bindView(PostFilter postFilter, boolean initializeFragment) {
         switch (postType) {
             case PostPagingSource.TYPE_FRONT_PAGE:
+            case PostPagingSource.TYPE_ANONYMOUS_FRONT_PAGE:
                 getSupportActionBar().setTitle(R.string.home);
                 break;
             case PostPagingSource.TYPE_SEARCH:

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/PostFragment.java
Patch:
@@ -1644,7 +1644,7 @@ public void filterPosts() {
             intent.putExtra(FilteredPostsActivity.EXTRA_NAME, subredditName);
             intent.putExtra(FilteredPostsActivity.EXTRA_POST_TYPE, postType);
             startActivity(intent);
-        } else if (postType == PostPagingSource.TYPE_MULTI_REDDIT) {
+        } else if (postType == PostPagingSource.TYPE_MULTI_REDDIT || postType == PostPagingSource.TYPE_ANONYMOUS_MULTIREDDIT) {
             Intent intent = new Intent(activity, FilteredPostsActivity.class);
             intent.putExtra(FilteredPostsActivity.EXTRA_NAME, multiRedditPath);
             intent.putExtra(FilteredPostsActivity.EXTRA_POST_TYPE, postType);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -780,7 +780,7 @@ public void failed(int errorCode) {
                             if (!mHidePostType) {
                                 ((PostDetailNoPreviewViewHolder) holder).mTypeTextView.setText(R.string.gallery);
                             }
-                            ((PostDetailNoPreviewViewHolder) holder).mNoPreviewPostTypeImageView.setImageResource(R.drawable.ic_gallery_reverse_color_24dp);
+                            ((PostDetailNoPreviewViewHolder) holder).mNoPreviewPostTypeImageView.setImageResource(R.drawable.ic_gallery_24dp);
                             break;
                     }
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewImageOrGifActivity.java
Patch:
@@ -470,6 +470,7 @@ public void failed() {
 
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == PERMISSION_REQUEST_WRITE_EXTERNAL_STORAGE && grantResults.length > 0) {
             if (grantResults[0] == PackageManager.PERMISSION_DENIED) {
                 Toast.makeText(this, R.string.no_storage_permission, Toast.LENGTH_SHORT).show();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -361,7 +361,7 @@ private boolean epsilonCheck(int a, int b, int epsilon) {
             id = savedInstanceState.getString(ID_STATE);
             playbackSpeed = savedInstanceState.getInt(PLAYBACK_SPEED_STATE);
         }
-        setPlaybackSpeed(playbackSpeed);
+        setPlaybackSpeed(Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.DEFAULT_PLAYBACK_SPEED, "100")));
 
         if (videoType == VIDEO_TYPE_V_REDD_IT) {
             loadVReddItVideo(savedInstanceState);
@@ -701,6 +701,7 @@ protected void onStop() {
 
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == PERMISSION_REQUEST_WRITE_EXTERNAL_STORAGE && grantResults.length > 0) {
             if (grantResults[0] == PackageManager.PERMISSION_DENIED) {
                 Toast.makeText(this, R.string.no_storage_permission, Toast.LENGTH_SHORT).show();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurVideoFragment.java
Patch:
@@ -153,7 +153,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (savedInstanceState != null) {
             playbackSpeed = savedInstanceState.getInt(PLAYBACK_SPEED_STATE);
         }
-        setPlaybackSpeed(playbackSpeed);
+        setPlaybackSpeed(Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.DEFAULT_PLAYBACK_SPEED, "100")));
         preparePlayer(savedInstanceState);
 
         if (activity.isUseBottomAppBar()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -156,7 +156,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (savedInstanceState != null) {
             playbackSpeed = savedInstanceState.getInt(PLAYBACK_SPEED_STATE);
         }
-        setPlaybackSpeed(playbackSpeed);
+        Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.DEFAULT_PLAYBACK_SPEED, "100"));
         preparePlayer(savedInstanceState);
 
         if (activity.isUseBottomAppBar()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -192,6 +192,7 @@ public class SharedPreferencesUtils {
     public static final String LOCK_SCREEN_ANIMATION = "lock_screen_animation";
     public static final String ENABLE_FOLD_SUPPORT = "enable_fold_support";
     public static final String LOOP_VIDEO = "loop_video";
+    public static final String DEFAULT_PLAYBACK_SPEED = "default_playback_speed";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MultiredditSelectionActivity.java
Patch:
@@ -168,7 +168,7 @@ private void loadMultiReddits() {
             FetchMyMultiReddits.fetchMyMultiReddits(mOauthRetrofit, mAccessToken, new FetchMyMultiReddits.FetchMyMultiRedditsListener() {
                 @Override
                 public void success(ArrayList<MultiReddit> multiReddits) {
-                    InsertMultireddit.insertMultireddit(mExecutor, new Handler(), mRedditDataRoomDatabase,
+                    InsertMultireddit.insertMultireddits(mExecutor, new Handler(), mRedditDataRoomDatabase,
                             multiReddits, mAccountName, () -> {
                         mInsertSuccess = true;
                         ((MultiRedditListingFragment) mFragment).stopRefreshProgressbar();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -298,7 +298,7 @@ private void loadMultiReddits() {
             FetchMyMultiReddits.fetchMyMultiReddits(mOauthRetrofit, mAccessToken, new FetchMyMultiReddits.FetchMyMultiRedditsListener() {
                 @Override
                 public void success(ArrayList<MultiReddit> multiReddits) {
-                    InsertMultireddit.insertMultireddit(mExecutor, new Handler(), mRedditDataRoomDatabase, multiReddits, mAccountName, () -> {
+                    InsertMultireddit.insertMultireddits(mExecutor, new Handler(), mRedditDataRoomDatabase, multiReddits, mAccountName, () -> {
                         mInsertMultiredditSuccess = true;
                         sectionsPagerAdapter.stopMultiRedditRefreshProgressbar();
                     });

File: app/src/main/java/ml/docilealligator/infinityforreddit/multireddit/CreateMultiReddit.java
Patch:
@@ -70,7 +70,7 @@ public static void anonymousCreateMultiReddit(Executor executor, Handler handler
                 redditDataRoomDatabase.accountDao().insert(Account.getAnonymousAccount());
             }
             redditDataRoomDatabase.multiRedditDao().insert(new MultiReddit(multipath, name, name, description,
-                    null, null, null, "-", 0, System.currentTimeMillis(), true, false, false));
+                    null, null, "private", "-", 0, System.currentTimeMillis(), true, false, false));
             List<AnonymousMultiredditSubreddit> anonymousMultiredditSubreddits = new ArrayList<>();
             for (String s : subreddits) {
                 anonymousMultiredditSubreddits.add(new AnonymousMultiredditSubreddit(multipath, s));

File: app/src/main/java/ml/docilealligator/infinityforreddit/multireddit/EditMultiReddit.java
Patch:
@@ -51,9 +51,10 @@ public static void anonymousEditMultiReddit(Executor executor, Handler handler,
                                                 MultiReddit multiReddit,
                                                 EditMultiRedditListener editMultiRedditListener) {
         executor.execute(() -> {
-            redditDataRoomDatabase.multiRedditDao().insert(multiReddit);
             ArrayList<AnonymousMultiredditSubreddit> anonymousMultiredditSubreddits = new ArrayList<>();
-            for (String s : multiReddit.getSubreddits()) {
+            ArrayList<String> subreddits = multiReddit.getSubreddits();
+            redditDataRoomDatabase.multiRedditDao().insert(multiReddit);
+            for (String s : subreddits) {
                 anonymousMultiredditSubreddits.add(new AnonymousMultiredditSubreddit(multiReddit.getPath(), s));
             }
             redditDataRoomDatabase.anonymousMultiredditSubredditDao().insertAll(anonymousMultiredditSubreddits);

File: app/src/main/java/ml/docilealligator/infinityforreddit/multireddit/FavoriteMultiReddit.java
Patch:
@@ -32,7 +32,7 @@ public static void favoriteMultiReddit(Executor executor, Handler handler, Retro
         params.put(APIUtils.MAKE_FAVORITE_KEY, String.valueOf(makeFavorite));
         params.put(APIUtils.API_TYPE_KEY, APIUtils.API_TYPE_JSON);
         oauthRetrofit.create(RedditAPI.class).favoriteMultiReddit(APIUtils.getOAuthHeader(accessToken),
-                params).enqueue(new Callback<String>() {
+                params).enqueue(new Callback<>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CreateMultiRedditActivity.java
Patch:
@@ -168,7 +168,7 @@ public void failed(int errorCode) {
                         });
             } else {
                 CreateMultiReddit.anonymousCreateMultiReddit(mExecutor, new Handler(), mRedditDataRoomDatabase,
-                        "/user/" + mAccountName + "/m/" + nameEditText.getText().toString(),
+                        "/user/-/m/" + nameEditText.getText().toString(),
                         nameEditText.getText().toString(), descriptionEditText.getText().toString(),
                         mSubreddits, new CreateMultiReddit.CreateMultiRedditListener() {
                             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -403,8 +403,8 @@ public Fragment getItem(int position) {
                 default: {
                     MultiRedditListingFragment fragment = new MultiRedditListingFragment();
                     Bundle bundle = new Bundle();
-                    bundle.putString(MultiRedditListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken == null ? "-" : mAccountName);
-                    bundle.putString(MultiRedditListingFragment.EXTRA_ACCOUNT_NAME, mAccountName);
+                    bundle.putString(MultiRedditListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
+                    bundle.putString(MultiRedditListingFragment.EXTRA_ACCOUNT_NAME, mAccountName == null ? "-" : mAccountName);
                     fragment.setArguments(bundle);
                     return fragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/AcknowledgementRecyclerViewAdapter.java
Patch:
@@ -35,7 +35,7 @@ public AcknowledgementViewHolder onCreateViewHolder(@NonNull ViewGroup parent, i
 
     @Override
     public void onBindViewHolder(@NonNull AcknowledgementViewHolder holder, int position) {
-        Acknowledgement acknowledgement = acknowledgements.get(holder.getAdapterPosition());
+        Acknowledgement acknowledgement = acknowledgements.get(holder.getBindingAdapterPosition());
         if (acknowledgement != null) {
             holder.nameTextView.setText(acknowledgement.getName());
             holder.introductionTextView.setText(acknowledgement.getIntroduction());

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/AwardRecyclerViewAdapter.java
Patch:
@@ -91,7 +91,7 @@ public AwardViewHolder(@NonNull View itemView) {
             coinTextView.setTextColor(primaryTextColor);
 
             itemView.setOnClickListener(view -> {
-                itemOnClickListener.onClick(awards.get(getAdapterPosition()));
+                itemOnClickListener.onClick(awards.get(getBindingAdapterPosition()));
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/MessageRecyclerViewAdapter.java
Patch:
@@ -201,7 +201,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
     @Override
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         if (holder instanceof DataViewHolder) {
-            Message message = getItem(holder.getAdapterPosition());
+            Message message = getItem(holder.getBindingAdapterPosition());
             if (message != null) {
                 ArrayList<Message> replies = message.getReplies();
                 Message displayedMessage;
@@ -240,7 +240,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     } else if (mMessageType == FetchMessage.MESSAGE_TYPE_PRIVATE_MESSAGE) {
                         Intent intent = new Intent(mContext, ViewPrivateMessagesActivity.class);
                         intent.putExtra(ViewPrivateMessagesActivity.EXTRA_PRIVATE_MESSAGE, message);
-                        intent.putExtra(ViewPrivateMessagesActivity.EXTRA_MESSAGE_POSITION, holder.getAdapterPosition());
+                        intent.putExtra(ViewPrivateMessagesActivity.EXTRA_MESSAGE_POSITION, holder.getBindingAdapterPosition());
                         mContext.startActivity(intent);
                     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostFilterUsageRecyclerViewAdapter.java
Patch:
@@ -86,7 +86,7 @@ public PostFilterUsageViewHolder(@NonNull View itemView) {
             usageTextView = (TextView) itemView;
 
             usageTextView.setOnClickListener(view -> {
-                onItemClickListener.onClick(postFilterUsages.get(getAdapterPosition()));
+                onItemClickListener.onClick(postFilterUsages.get(getBindingAdapterPosition()));
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -117,10 +117,10 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
     @Override
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         Message message;
-        if (holder.getAdapterPosition() == 0) {
+        if (holder.getBindingAdapterPosition() == 0) {
             message = mMessage;
         } else {
-            message = mMessage.getReplies().get(holder.getAdapterPosition() - 1);
+            message = mMessage.getReplies().get(holder.getBindingAdapterPosition() - 1);
         }
         if (message != null) {
             if (holder instanceof MessageViewHolder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/RulesRecyclerViewAdapter.java
Patch:
@@ -82,11 +82,11 @@ public RuleViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType
 
     @Override
     public void onBindViewHolder(@NonNull RuleViewHolder holder, int position) {
-        holder.shortNameTextView.setText(rules.get(holder.getAdapterPosition()).getShortName());
-        if (rules.get(holder.getAdapterPosition()).getDescriptionHtml() == null) {
+        holder.shortNameTextView.setText(rules.get(holder.getBindingAdapterPosition()).getShortName());
+        if (rules.get(holder.getBindingAdapterPosition()).getDescriptionHtml() == null) {
             holder.descriptionMarkwonView.setVisibility(View.GONE);
         } else {
-            markwon.setMarkdown(holder.descriptionMarkwonView, rules.get(holder.getAdapterPosition()).getDescriptionHtml());
+            markwon.setMarkdown(holder.descriptionMarkwonView, rules.get(holder.getBindingAdapterPosition()).getDescriptionHtml());
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SearchActivityRecyclerViewAdapter.java
Patch:
@@ -82,12 +82,12 @@ public RecentSearchQueryViewHolder(@NonNull View itemView) {
 
             itemView.setOnClickListener(view -> {
                 if (recentSearchQueries != null && !recentSearchQueries.isEmpty()) {
-                    itemOnClickListener.onClick(recentSearchQueries.get(getAdapterPosition()).getSearchQuery());
+                    itemOnClickListener.onClick(recentSearchQueries.get(getBindingAdapterPosition()).getSearchQuery());
                 }
             });
 
             deleteImageView.setOnClickListener(view -> {
-                itemOnClickListener.onDelete(recentSearchQueries.get(getAdapterPosition()));
+                itemOnClickListener.onDelete(recentSearchQueries.get(getBindingAdapterPosition()));
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/SelectedSubredditsRecyclerViewAdapter.java
Patch:
@@ -39,10 +39,10 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
     @Override
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         if (holder instanceof SubredditViewHolder) {
-            ((SubredditViewHolder) holder).subredditNameTextView.setText(subreddits.get(holder.getAdapterPosition()));
+            ((SubredditViewHolder) holder).subredditNameTextView.setText(subreddits.get(holder.getBindingAdapterPosition()));
             ((SubredditViewHolder) holder).deleteButton.setOnClickListener(view -> {
-                subreddits.remove(holder.getAdapterPosition());
-                notifyItemRemoved(holder.getAdapterPosition());
+                subreddits.remove(holder.getBindingAdapterPosition());
+                notifyItemRemoved(holder.getBindingAdapterPosition());
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/UserFlairRecyclerViewAdapter.java
Patch:
@@ -43,7 +43,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
     @Override
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         if (holder instanceof UserFlairViewHolder) {
-            UserFlair userFlair = userFlairs.get(holder.getAdapterPosition());
+            UserFlair userFlair = userFlairs.get(holder.getBindingAdapterPosition());
             if (userFlair.getHtmlText() == null || userFlair.getHtmlText().equals("")) {
                 ((UserFlairViewHolder) holder).userFlairHtmlTextView.setText(userFlair.getText());
             } else {
@@ -77,11 +77,11 @@ public UserFlairViewHolder(@NonNull View itemView) {
             editUserFlairImageView.setColorFilter(customThemeWrapper.getPrimaryTextColor(), android.graphics.PorterDuff.Mode.SRC_IN);
 
             itemView.setOnClickListener(view -> {
-                itemClickListener.onClick(userFlairs.get(getAdapterPosition()), false);
+                itemClickListener.onClick(userFlairs.get(getBindingAdapterPosition()), false);
             });
 
             editUserFlairImageView.setOnClickListener(view -> {
-                itemClickListener.onClick(userFlairs.get(getAdapterPosition()), true);
+                itemClickListener.onClick(userFlairs.get(getBindingAdapterPosition()), true);
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/APIUtils.java
Patch:
@@ -120,6 +120,6 @@ public static Map<String, String> getOAuthHeader(String accessToken) {
     }
 
     public static RequestBody getRequestBody(String s) {
-        return RequestBody.create(MediaType.parse("text/plain"), s);
+        return RequestBody.create(s, MediaType.parse("text/plain"));
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/UploadImageUtils.java
Patch:
@@ -50,7 +50,7 @@ public static String uploadImage(Retrofit oauthRetrofit, Retrofit uploadMediaRet
             image.compress(Bitmap.CompressFormat.JPEG, 100, stream);
             byte[] byteArray = stream.toByteArray();
 
-            RequestBody fileBody = RequestBody.create(MediaType.parse("application/octet-stream"), byteArray);
+            RequestBody fileBody = RequestBody.create(byteArray, MediaType.parse("application/octet-stream"));
             MultipartBody.Part fileToUpload = MultipartBody.Part.createFormData("file", "post_image.jpg", fileBody);
 
             RedditAPI uploadMediaToAWSApi = uploadMediaRetrofit.create(RedditAPI.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -49,7 +49,7 @@ public class LinkResolverActivity extends AppCompatActivity {
     private static final String IMGUR_ALBUM_PATTERN = "/(album|a)/\\w+/?";
     private static final String IMGUR_IMAGE_PATTERN = "/\\w+/?";
     private static final String RPAN_BROADCAST_PATTERN = "/rpan/r/[\\w-]+/\\w+/?\\w+/?";
-    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)/?\\w+";
+    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)?(?:/\\w+)+";
     private static final String GOOGLE_AMP_PATTERN = "/amp/s/amp.reddit.com/.*";
 
     @Inject
@@ -174,8 +174,10 @@ private void handleUri(Uri uri) {
                                     deepLinkError(uri);
                                 }
                             } else if (path.matches(WIKI_PATTERN)) {
+                                final String wikiPage = path.substring(path.lastIndexOf("/wiki/") + 6);
                                 Intent intent = new Intent(this, WikiActivity.class);
                                 intent.putExtra(WikiActivity.EXTRA_SUBREDDIT_NAME, segments.get(1));
+                                intent.putExtra(WikiActivity.EXTRA_WIKI_PATH, wikiPage);
                                 startActivity(intent);
                             } else if (path.matches(SUBREDDIT_PATTERN)) {
                                 Intent intent = new Intent(this, ViewSubredditDetailActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -71,6 +71,7 @@
 public class WikiActivity extends BaseActivity {
 
     public static final String EXTRA_SUBREDDIT_NAME = "ESN";
+    public static final String EXTRA_WIKI_PATH = "EWP";
     private static final String WIKI_MARKDOWN_STATE = "WMS";
 
     @BindView(R.id.coordinator_layout_comment_wiki_activity)
@@ -281,7 +282,7 @@ private void loadWiki() {
         Glide.with(this).clear(mFetchWikiInfoImageView);
         mFetchWikiInfoLinearLayout.setVisibility(View.GONE);
 
-        retrofit.create(RedditAPI.class).getWiki(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME)).enqueue(new Callback<String>() {
+        retrofit.create(RedditAPI.class).getWikiPage(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME), getIntent().getStringExtra(EXTRA_WIKI_PATH)).enqueue(new Callback<String>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -2574,6 +2574,7 @@ void markPostRead(Post post, boolean changePostItemColor) {
                 }
                 if (mActivity != null && mActivity instanceof MarkPostAsReadInterface) {
                     ((MarkPostAsReadInterface) mActivity).markPostAsRead(post);
+                    mFragment.markPostAsRead(post);
                 }
             }
         }
@@ -3560,6 +3561,7 @@ void markPostRead(Post post, boolean changePostItemColor) {
                 }
                 if (mActivity != null && mActivity instanceof MarkPostAsReadInterface) {
                     ((MarkPostAsReadInterface) mActivity).markPostAsRead(post);
+                    mFragment.markPostAsRead(post);
                 }
             }
         }
@@ -3796,6 +3798,7 @@ void markPostRead(Post post, boolean changePostItemColor) {
                 }
                 if (mActivity != null && mActivity instanceof MarkPostAsReadInterface) {
                     ((MarkPostAsReadInterface) mActivity).markPostAsRead(post);
+                    mFragment.markPostAsRead(post);
                 }
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -49,7 +49,7 @@ public class LinkResolverActivity extends AppCompatActivity {
     private static final String IMGUR_ALBUM_PATTERN = "/(album|a)/\\w+/?";
     private static final String IMGUR_IMAGE_PATTERN = "/\\w+/?";
     private static final String RPAN_BROADCAST_PATTERN = "/rpan/r/[\\w-]+/\\w+/?\\w+/?";
-    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)/?\\w+";
+    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)?(?:/\\w+)+";
 
     @Inject
     @Named("default")
@@ -173,8 +173,10 @@ private void handleUri(Uri uri) {
                                     deepLinkError(uri);
                                 }
                             } else if (path.matches(WIKI_PATTERN)) {
+                                final String wikiPage = path.substring(path.lastIndexOf("/wiki/") + 6);
                                 Intent intent = new Intent(this, WikiActivity.class);
                                 intent.putExtra(WikiActivity.EXTRA_SUBREDDIT_NAME, segments.get(1));
+                                intent.putExtra(WikiActivity.EXTRA_WIKI_PATH, wikiPage);
                                 startActivity(intent);
                             } else if (path.matches(SUBREDDIT_PATTERN)) {
                                 Intent intent = new Intent(this, ViewSubredditDetailActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -71,6 +71,7 @@
 public class WikiActivity extends BaseActivity {
 
     public static final String EXTRA_SUBREDDIT_NAME = "ESN";
+    public static final String EXTRA_WIKI_PATH = "EWP";
     private static final String WIKI_MARKDOWN_STATE = "WMS";
 
     @BindView(R.id.coordinator_layout_comment_wiki_activity)
@@ -281,7 +282,7 @@ private void loadWiki() {
         Glide.with(this).clear(mFetchWikiInfoImageView);
         mFetchWikiInfoLinearLayout.setVisibility(View.GONE);
 
-        retrofit.create(RedditAPI.class).getWiki(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME)).enqueue(new Callback<String>() {
+        retrofit.create(RedditAPI.class).getWikiPage(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME), getIntent().getStringExtra(EXTRA_WIKI_PATH)).enqueue(new Callback<String>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -49,7 +49,7 @@ public class LinkResolverActivity extends AppCompatActivity {
     private static final String IMGUR_ALBUM_PATTERN = "/(album|a)/\\w+/?";
     private static final String IMGUR_IMAGE_PATTERN = "/\\w+/?";
     private static final String RPAN_BROADCAST_PATTERN = "/rpan/r/[\\w-]+/\\w+/?\\w+/?";
-    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)/?\\w+";
+    private static final String WIKI_PATTERN = "/[rR]/[\\w-]+/(wiki|w)?(?:/\\w+)+";
 
     @Inject
     @Named("default")
@@ -173,8 +173,10 @@ private void handleUri(Uri uri) {
                                     deepLinkError(uri);
                                 }
                             } else if (path.matches(WIKI_PATTERN)) {
+                                final String wikiPage = path.substring(path.lastIndexOf("/wiki/") + 6);
                                 Intent intent = new Intent(this, WikiActivity.class);
                                 intent.putExtra(WikiActivity.EXTRA_SUBREDDIT_NAME, segments.get(1));
+                                intent.putExtra(WikiActivity.EXTRA_WIKI_PATH, wikiPage);
                                 startActivity(intent);
                             } else if (path.matches(SUBREDDIT_PATTERN)) {
                                 Intent intent = new Intent(this, ViewSubredditDetailActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -71,7 +71,7 @@
 public class WikiActivity extends BaseActivity {
 
     public static final String EXTRA_SUBREDDIT_NAME = "ESN";
-    public static final String WIKI_PATH = "WP";
+    public static final String EXTRA_WIKI_PATH = "EWP";
     private static final String WIKI_MARKDOWN_STATE = "WMS";
 
     @BindView(R.id.coordinator_layout_comment_wiki_activity)
@@ -282,7 +282,7 @@ private void loadWiki() {
         Glide.with(this).clear(mFetchWikiInfoImageView);
         mFetchWikiInfoLinearLayout.setVisibility(View.GONE);
 
-        retrofit.create(RedditAPI.class).getWiki(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME)).enqueue(new Callback<String>() {
+        retrofit.create(RedditAPI.class).getWikiPage(getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME), getIntent().getStringExtra(EXTRA_WIKI_PATH)).enqueue(new Callback<String>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -194,7 +194,6 @@ public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
     private boolean mMarkPostsAsRead;
     private boolean mMarkPostsAsReadAfterVoting;
     private boolean mMarkPostsAsReadOnScroll;
-    private boolean mHideReadPostsAutomatically;
     private boolean mHidePostType;
     private boolean mHidePostFlair;
     private boolean mHideTheNumberOfAwards;
@@ -268,7 +267,6 @@ public PostRecyclerViewAdapter(AppCompatActivity activity, PostFragment fragment
             mMarkPostsAsRead = postHistorySharedPreferences.getBoolean((accountName == null ? "" : accountName) + SharedPreferencesUtils.MARK_POSTS_AS_READ_BASE, false);
             mMarkPostsAsReadAfterVoting = postHistorySharedPreferences.getBoolean((accountName == null ? "" : accountName) + SharedPreferencesUtils.MARK_POSTS_AS_READ_AFTER_VOTING_BASE, false);
             mMarkPostsAsReadOnScroll = postHistorySharedPreferences.getBoolean((accountName == null ? "" : accountName) + SharedPreferencesUtils.MARK_POSTS_AS_READ_ON_SCROLL_BASE, false);
-            mHideReadPostsAutomatically = postHistorySharedPreferences.getBoolean((accountName == null ? "" : accountName) + SharedPreferencesUtils.HIDE_READ_POSTS_AUTOMATICALLY_BASE, false);
 
             mHidePostType = sharedPreferences.getBoolean(SharedPreferencesUtils.HIDE_POST_TYPE, false);
             mHidePostFlair = sharedPreferences.getBoolean(SharedPreferencesUtils.HIDE_POST_FLAIR, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/ParsePost.java
Patch:
@@ -117,7 +117,8 @@ public static LinkedHashSet<Post> parsePostsSync(String response, int nPosts, Po
 
     public static String getLastItem(String response) {
         try {
-            return new JSONObject(response).getJSONObject(JSONUtils.DATA_KEY).getString(JSONUtils.AFTER_KEY);
+            JSONObject object = new JSONObject(response).getJSONObject(JSONUtils.DATA_KEY);
+            return object.isNull(JSONUtils.AFTER_KEY) ? null : object.getString(JSONUtils.AFTER_KEY);
         } catch (JSONException e) {
             e.printStackTrace();
             return null;

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -190,7 +190,7 @@ public LoadResult<String, Post> transformData(Response<String> response) {
                 int currentPostsSize = postLinkedHashSet.size();
                 postLinkedHashSet.addAll(newPosts);
                 if (currentPostsSize == postLinkedHashSet.size()) {
-                    return new LoadResult.Page<>(new ArrayList<>(), null, null);
+                    return new LoadResult.Page<>(new ArrayList<>(), null, lastItem);
                 } else {
                     return new LoadResult.Page<>(new ArrayList<>(postLinkedHashSet).subList(currentPostsSize, postLinkedHashSet.size()), null, lastItem);
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostPagingSource.java
Patch:
@@ -1,7 +1,6 @@
 package ml.docilealligator.infinityforreddit.post;
 
 import android.content.SharedPreferences;
-import android.util.Log;
 
 import androidx.annotation.NonNull;
 import androidx.paging.ListenableFuturePagingSource;
@@ -157,7 +156,6 @@ public class PostPagingSource extends ListenableFuturePagingSource<String, Post>
     @Nullable
     @Override
     public String getRefreshKey(@NonNull PagingState<String, Post> pagingState) {
-        Log.i("asdfad", "asdf " + sortType.getType().value);
         return null;
     }
 
@@ -192,7 +190,7 @@ public LoadResult<String, Post> transformData(Response<String> response) {
                 int currentPostsSize = postLinkedHashSet.size();
                 postLinkedHashSet.addAll(newPosts);
                 if (currentPostsSize == postLinkedHashSet.size()) {
-                    return new LoadResult.Page<>(new ArrayList<>(), null, lastItem);
+                    return new LoadResult.Page<>(new ArrayList<>(), null, null);
                 } else {
                     return new LoadResult.Page<>(new ArrayList<>(postLinkedHashSet).subList(currentPostsSize, postLinkedHashSet.size()), null, lastItem);
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -354,6 +354,8 @@ private boolean epsilonCheck(int a, int b, int epsilon) {
         } else if (videoType == VIDEO_TYPE_GFYCAT || videoType == VIDEO_TYPE_REDGIFS) {
             if (savedInstanceState != null) {
                 videoDownloadUrl = savedInstanceState.getString(VIDEO_DOWNLOAD_URL_STATE);
+            } else {
+                videoDownloadUrl = intent.getStringExtra(EXTRA_VIDEO_DOWNLOAD_URL);
             }
 
             String gfycatId = intent.getStringExtra(EXTRA_GFYCAT_ID);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CustomizeThemeActivity.java
Patch:
@@ -12,7 +12,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -104,8 +103,6 @@ protected void onCreate(Bundle savedInstanceState) {
             setTitle(R.string.customize_theme_activity_create_theme_label);
         }
 
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
-
         if (savedInstanceState != null) {
             customThemeSettingsItems = savedInstanceState.getParcelableArrayList(CUSTOM_THEME_SETTINGS_ITEMS_STATE);
             themeName = savedInstanceState.getString(THEME_NAME_STATE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditCommentActivity.java
Patch:
@@ -50,6 +50,7 @@
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UploadedImagesBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -158,7 +159,7 @@ public void onUploadImage() {
             }
         });
 
-        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManager(this,
+        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(this,
                 LinearLayoutManager.HORIZONTAL, false));
         markdownBottomBarRecyclerView.setAdapter(adapter);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/EditPostActivity.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.content.FileProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -53,6 +52,7 @@
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UploadedImagesBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -168,8 +168,8 @@ public void onUploadImage() {
             }
         });
 
-        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManager(this,
-                LinearLayoutManager.HORIZONTAL, false));
+        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(this,
+                LinearLayoutManagerBugFixed.HORIZONTAL, false));
         markdownBottomBarRecyclerView.setAdapter(adapter);
 
         contentEditText.requestFocus();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FullMarkdownActivity.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -54,6 +53,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -217,7 +217,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         .tableLayout(R.layout.adapter_table_block, R.id.table_layout)
                         .textLayoutIsRoot(R.layout.view_table_entry_cell)))
                 .build();
-        LinearLayoutManager linearLayoutManager = new MarkwonLinearLayoutManager(this, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
+        LinearLayoutManagerBugFixed linearLayoutManager = new MarkwonLinearLayoutManager(this, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
             @Override
             public void onScrolledLeft() {
                 if (mSlidrInterface != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/GiveAwardActivity.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
@@ -39,6 +38,7 @@
 import ml.docilealligator.infinityforreddit.adapters.AwardRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.award.GiveAward;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import retrofit2.Retrofit;
 
@@ -162,7 +162,7 @@ public void failed(int code, String message) {
                     .setNegativeButton(R.string.no, null)
                     .show();
         });
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        recyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(this));
         recyclerView.setAdapter(adapter);
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostTextActivity.java
Patch:
@@ -62,6 +62,7 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.FlairBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UploadedImagesBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.SubmitTextOrLinkPostEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.services.SubmitPostService;
@@ -367,7 +368,7 @@ public void onUploadImage() {
             }
         });
 
-        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManager(this,
+        markdownBottomBarRecyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(this,
                 LinearLayoutManager.HORIZONTAL, false));
         markdownBottomBarRecyclerView.setAdapter(adapter);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ReportActivity.java
Patch:
@@ -11,7 +11,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -117,7 +116,6 @@ protected void onCreate(Bundle savedInstanceState) {
         } else {
             mAdapter = new ReportReasonRecyclerViewAdapter(mCustomThemeWrapper, ReportReason.getGeneralReasons(this));
         }
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
         recyclerView.setAdapter(mAdapter);
 
         if (rulesReasons == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/RulesActivity.java
Patch:
@@ -15,7 +15,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -119,7 +118,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mSubredditName = getIntent().getExtras().getString(EXTRA_SUBREDDIT_NAME);
 
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
         mAdapter = new RulesRecyclerViewAdapter(this, mCustomThemeWrapper);
         recyclerView.setAdapter(mAdapter);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchActivity.java
Patch:
@@ -18,7 +18,6 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.ferfalk.simplesearchview.SimpleSearchView;
@@ -42,6 +41,7 @@
 import ml.docilealligator.infinityforreddit.adapters.SubredditAutocompleteRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.recentsearchquery.DeleteRecentSearchQuery;
 import ml.docilealligator.infinityforreddit.recentsearchquery.RecentSearchQuery;
@@ -287,7 +287,7 @@ public void onDelete(RecentSearchQuery recentSearchQuery) {
             });
             recyclerView.setVisibility(View.VISIBLE);
             recyclerView.setNestedScrollingEnabled(false);
-            recyclerView.setLayoutManager(new LinearLayoutManager(this));
+            recyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(this));
             recyclerView.setAdapter(adapter);
 
             if (mSharedPreferences.getBoolean(SharedPreferencesUtils.ENABLE_SEARCH_HISTORY, true)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SelectUserFlairActivity.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -36,6 +35,7 @@
 import ml.docilealligator.infinityforreddit.UserFlair;
 import ml.docilealligator.infinityforreddit.adapters.UserFlairRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import retrofit2.Retrofit;
 
@@ -63,7 +63,7 @@ public class SelectUserFlairActivity extends BaseActivity implements ActivityToo
     SharedPreferences mCurrentAccountSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private boolean mNullAccessToken = false;
     private String mAccessToken;
     private String mAccountName;
@@ -170,7 +170,7 @@ private void instantiateRecyclerView() {
                         .show();
             }
         });
-        mLinearLayoutManager = new LinearLayoutManager(SelectUserFlairActivity.this);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(SelectUserFlairActivity.this);
         recyclerView.setLayoutManager(mLinearLayoutManager);
         recyclerView.setAdapter(mAdapter);
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SelectedSubredditsAndUsersActivity.java
Patch:
@@ -11,7 +11,6 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -31,6 +30,7 @@
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 
 public class SelectedSubredditsAndUsersActivity extends BaseActivity implements ActivityToolbarInterface {
@@ -56,7 +56,7 @@ public class SelectedSubredditsAndUsersActivity extends BaseActivity implements
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    private LinearLayoutManager linearLayoutManager;
+    private LinearLayoutManagerBugFixed linearLayoutManager;
     private SelectedSubredditsRecyclerViewAdapter adapter;
     private ArrayList<String> subreddits;
 
@@ -88,7 +88,7 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         adapter = new SelectedSubredditsRecyclerViewAdapter(mCustomThemeWrapper, subreddits);
-        linearLayoutManager = new LinearLayoutManager(this);
+        linearLayoutManager = new LinearLayoutManagerBugFixed(this);
         recyclerView.setLayoutManager(linearLayoutManager);
         recyclerView.setAdapter(adapter);
         recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubredditMultiselectionActivity.java
Patch:
@@ -19,7 +19,6 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -41,6 +40,7 @@
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.adapters.SubredditMultiselectionRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.subscribedsubreddit.SubscribedSubredditViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import retrofit2.Retrofit;
@@ -83,7 +83,7 @@ public class SubredditMultiselectionActivity extends BaseActivity implements Act
     public SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     private String mAccessToken;
     private String mAccountName;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private SubredditMultiselectionRecyclerViewAdapter mAdapter;
     private RequestManager mGlide;
 
@@ -142,7 +142,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private void bindView() {
-        mLinearLayoutManager = new LinearLayoutManager(this);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(this);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         mAdapter = new SubredditMultiselectionRecyclerViewAdapter(this, mCustomThemeWrapper);
         mRecyclerView.setAdapter(mAdapter);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/TrendingActivity.java
Patch:
@@ -18,7 +18,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -174,7 +173,6 @@ public void onClick(TrendingSearch trendingSearch) {
                 startActivity(intent);
             }
         });
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
         recyclerView.setAdapter(adapter);
 
         swipeRefreshLayout.setEnabled(mSharedPreferences.getBoolean(SharedPreferencesUtils.PULL_TO_REFRESH, true));

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPrivateMessagesActivity.java
Patch:
@@ -14,7 +14,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.transition.AutoTransition;
 import androidx.transition.TransitionManager;
@@ -39,6 +38,7 @@
 import ml.docilealligator.infinityforreddit.adapters.PrivateMessagesDetailRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.asynctasks.LoadUserData;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.RepliedToPrivateMessageEvent;
 import ml.docilealligator.infinityforreddit.message.Message;
 import ml.docilealligator.infinityforreddit.message.ReadMessage;
@@ -87,7 +87,7 @@ public class ViewPrivateMessagesActivity extends BaseActivity implements Activit
     CustomThemeWrapper mCustomThemeWrapper;
     @Inject
     Executor mExecutor;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private PrivateMessagesDetailRecyclerViewAdapter mAdapter;
     private Message privateMessage;
     private String mAccessToken;
@@ -154,7 +154,7 @@ private void bindView() {
         }
         mAdapter = new PrivateMessagesDetailRecyclerViewAdapter(this, mSharedPreferences,
                 getResources().getConfiguration().locale, privateMessage, mAccountName, mCustomThemeWrapper);
-        mLinearLayoutManager = new LinearLayoutManager(this);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(this);
         mLinearLayoutManager.setStackFromEnd(true);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         mRecyclerView.setAdapter(mAdapter);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/WikiActivity.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -59,6 +58,7 @@
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
@@ -240,7 +240,7 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
                         .tableLayout(R.layout.adapter_table_block, R.id.table_layout)
                         .textLayoutIsRoot(R.layout.view_table_entry_cell)))
                 .build();
-        LinearLayoutManager linearLayoutManager = new MarkwonLinearLayoutManager(this, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
+        LinearLayoutManagerBugFixed linearLayoutManager = new MarkwonLinearLayoutManager(this, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
             @Override
             public void onScrolledLeft() {
                 if (mSlidrInterface != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -35,7 +35,6 @@
 import androidx.constraintlayout.widget.ConstraintSet;
 import androidx.core.graphics.drawable.DrawableCompat;
 import androidx.recyclerview.widget.ItemTouchHelper;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.RequestBuilder;
@@ -107,6 +106,7 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UrlMenuBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.customviews.AspectRatioGifImageView;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.customviews.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
 import ml.docilealligator.infinityforreddit.post.Post;
@@ -784,7 +784,7 @@ public void failed(int errorCode) {
 
                 if (mPost.getSelfText() != null && !mPost.getSelfText().equals("")) {
                     ((PostDetailNoPreviewViewHolder) holder).mContentMarkdownView.setVisibility(View.VISIBLE);
-                    LinearLayoutManager linearLayoutManager = new MarkwonLinearLayoutManager(mActivity, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
+                    LinearLayoutManagerBugFixed linearLayoutManager = new MarkwonLinearLayoutManager(mActivity, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
                         @Override
                         public void onScrolledLeft() {
                             ((ViewPostDetailActivity) mActivity).lockSwipeRightToGoBack();
@@ -814,7 +814,7 @@ public void onScrolledRight() {
             } else if (holder instanceof PostDetailTextViewHolder) {
                 if (mPost.getSelfText() != null && !mPost.getSelfText().equals("")) {
                     ((PostDetailTextViewHolder) holder).mContentMarkdownView.setVisibility(View.VISIBLE);
-                    LinearLayoutManager linearLayoutManager = new MarkwonLinearLayoutManager(mActivity, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
+                    LinearLayoutManagerBugFixed linearLayoutManager = new MarkwonLinearLayoutManager(mActivity, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
                         @Override
                         public void onScrolledLeft() {
                             ((ViewPostDetailActivity) mActivity).lockSwipeRightToGoBack();

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/FlairBottomSheetFragment.java
Patch:
@@ -12,7 +12,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
@@ -87,7 +86,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             dismiss();
         });
 
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
         recyclerView.setAdapter(mAdapter);
 
         mAccessToken = getArguments().getString(EXTRA_ACCESS_TOKEN);

File: app/src/main/java/ml/docilealligator/infinityforreddit/customviews/MarkwonLinearLayoutManager.java
Patch:
@@ -5,9 +5,7 @@
 import android.view.ViewTreeObserver;
 import android.widget.HorizontalScrollView;
 
-import androidx.recyclerview.widget.LinearLayoutManager;
-
-public class MarkwonLinearLayoutManager extends LinearLayoutManager {
+public class MarkwonLinearLayoutManager extends LinearLayoutManagerBugFixed {
     public interface HorizontalScrollViewScrolledListener {
         void onScrolledLeft();
         void onScrolledRight();

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/CommentsListingFragment.java
Patch:
@@ -25,7 +25,6 @@
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.ItemTouchHelper;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -50,6 +49,7 @@
 import ml.docilealligator.infinityforreddit.adapters.CommentsListingRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.comment.CommentViewModel;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import ml.docilealligator.infinityforreddit.utils.Utils;
 import retrofit2.Retrofit;
@@ -105,7 +105,7 @@ public class CommentsListingFragment extends Fragment implements FragmentCommuni
     private String mAccessToken;
     private RequestManager mGlide;
     private AppCompatActivity mActivity;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private CommentsListingRecyclerViewAdapter mAdapter;
     private SortType sortType;
     private ColorDrawable backgroundSwipeRight;
@@ -255,7 +255,7 @@ public float getSwipeThreshold(@NonNull RecyclerView.ViewHolder viewHolder) {
 
     private void bindView(Resources resources) {
         if (mActivity != null && !mActivity.isFinishing() && !mActivity.isDestroyed()) {
-            mLinearLayoutManager = new LinearLayoutManager(mActivity);
+            mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
             mCommentRecyclerView.setLayoutManager(mLinearLayoutManager);
 
             mAdapter = new CommentsListingRecyclerViewAdapter(mActivity, mOauthRetrofit, customThemeWrapper,

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/FollowedUsersListingFragment.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -40,6 +39,7 @@
 import ml.docilealligator.infinityforreddit.activities.SubscribedThingListingActivity;
 import ml.docilealligator.infinityforreddit.adapters.FollowedUsersRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.subscribeduser.SubscribedUserViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import retrofit2.Retrofit;
@@ -78,7 +78,7 @@ public class FollowedUsersListingFragment extends Fragment implements FragmentCo
     SubscribedUserViewModel mSubscribedUserViewModel;
     private Activity mActivity;
     private RequestManager mGlide;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
 
     public FollowedUsersListingFragment() {
         // Required empty public constructor
@@ -109,7 +109,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         mGlide = Glide.with(this);
 
-        mLinearLayoutManager = new LinearLayoutManager(mActivity);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         FollowedUsersRecyclerViewAdapter adapter = new FollowedUsersRecyclerViewAdapter(mActivity,
                 mExecutor, mOauthRetrofit, mRedditDataRoomDatabase, mCustomThemeWrapper,

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/InboxFragment.java
Patch:
@@ -14,7 +14,6 @@
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.DividerItemDecoration;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -38,6 +37,7 @@
 import ml.docilealligator.infinityforreddit.activities.BaseActivity;
 import ml.docilealligator.infinityforreddit.adapters.MessageRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.RepliedToPrivateMessageEvent;
 import ml.docilealligator.infinityforreddit.message.FetchMessage;
 import ml.docilealligator.infinityforreddit.message.MessageViewModel;
@@ -72,7 +72,7 @@ public class InboxFragment extends Fragment implements FragmentCommunicator {
     private String mWhere;
     private MessageRecyclerViewAdapter mAdapter;
     private RequestManager mGlide;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private BaseActivity mActivity;
 
     public InboxFragment() {
@@ -106,7 +106,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mWhere = arguments.getString(EXTRA_MESSAGE_WHERE, FetchMessage.WHERE_INBOX);
         mAdapter = new MessageRecyclerViewAdapter(mActivity, mOauthRetrofit, mCustomThemeWrapper,
                 mAccessToken, mWhere, () -> mMessageViewModel.retryLoadingMore());
-        mLinearLayoutManager = new LinearLayoutManager(mActivity);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         mRecyclerView.setAdapter(mAdapter);
         DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(mActivity, mLinearLayoutManager.getOrientation());

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MultiRedditListingFragment.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -43,6 +42,7 @@
 import ml.docilealligator.infinityforreddit.adapters.MultiRedditListingRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.MultiRedditOptionsBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.multireddit.MultiReddit;
 import ml.docilealligator.infinityforreddit.multireddit.MultiRedditViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -80,7 +80,7 @@ public class MultiRedditListingFragment extends Fragment implements FragmentComm
     public MultiRedditViewModel mMultiRedditViewModel;
     private AppCompatActivity mActivity;
     private RequestManager mGlide;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
 
     public MultiRedditListingFragment() {
         // Required empty public constructor
@@ -114,7 +114,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         mGlide = Glide.with(this);
 
-        mLinearLayoutManager = new LinearLayoutManager(mActivity);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
         MultiRedditListingRecyclerViewAdapter adapter = new MultiRedditListingRecyclerViewAdapter(mActivity,
                 mExecutor, mOauthRetrofit, mRedditDataRoomDatabase, mCustomThemeWrapper, accessToken,

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SidebarFragment.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -51,6 +50,7 @@
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.CopyTextBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.bottomsheetfragments.UrlMenuBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.subreddit.FetchSubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditViewModel;
@@ -66,7 +66,7 @@ public class SidebarFragment extends Fragment {
     private Activity activity;
     private String subredditName;
     public SubredditViewModel mSubredditViewModel;
-    private LinearLayoutManager linearLayoutManager;
+    private LinearLayoutManagerBugFixed linearLayoutManager;
     private int markdownColor;
     @Inject
     @Named("no_oauth")
@@ -154,7 +154,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                         .textLayoutIsRoot(R.layout.view_table_entry_cell)))
                 .build();
 
-        linearLayoutManager = new LinearLayoutManager(activity);
+        linearLayoutManager = new LinearLayoutManagerBugFixed(activity);
         recyclerView.setLayoutManager(linearLayoutManager);
         recyclerView.setAdapter(markwonAdapter);
         recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubredditListingFragment.java
Patch:
@@ -19,7 +19,6 @@
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -46,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.activities.ViewSubredditDetailActivity;
 import ml.docilealligator.infinityforreddit.adapters.SubredditListingRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditData;
 import ml.docilealligator.infinityforreddit.subreddit.SubredditListingViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -97,7 +97,7 @@ public class SubredditListingFragment extends Fragment implements FragmentCommun
     CustomThemeWrapper mCustomThemeWrapper;
     @Inject
     Executor mExecutor;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private SubredditListingRecyclerViewAdapter mAdapter;
     private Activity mActivity;
     private SortType sortType;
@@ -131,7 +131,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             }
         }
 
-        mLinearLayoutManager = new LinearLayoutManager(getActivity());
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(getActivity());
         mSubredditListingRecyclerView.setLayoutManager(mLinearLayoutManager);
 
         String query = getArguments().getString(EXTRA_QUERY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/SubscribedSubredditsListingFragment.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -41,6 +40,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.subscribedsubreddit.SubscribedSubredditViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import retrofit2.Retrofit;
@@ -82,7 +82,7 @@ public class SubscribedSubredditsListingFragment extends Fragment implements Fra
     public SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     private Activity mActivity;
     private RequestManager mGlide;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
 
     public SubscribedSubredditsListingFragment() {
         // Required empty public constructor
@@ -115,7 +115,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
 
         mGlide = Glide.with(this);
 
-        mLinearLayoutManager = new LinearLayoutManager(mActivity);
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
         mRecyclerView.setLayoutManager(mLinearLayoutManager);
 
         SubscribedSubredditsRecyclerViewAdapter adapter;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/UserListingFragment.java
Patch:
@@ -19,7 +19,6 @@
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -46,6 +45,7 @@
 import ml.docilealligator.infinityforreddit.activities.ViewUserDetailActivity;
 import ml.docilealligator.infinityforreddit.adapters.UserListingRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.user.UserData;
 import ml.docilealligator.infinityforreddit.user.UserListingViewModel;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -97,7 +97,7 @@ public class UserListingFragment extends Fragment implements FragmentCommunicato
     CustomThemeWrapper mCustomThemeWrapper;
     @Inject
     Executor mExecutor;
-    private LinearLayoutManager mLinearLayoutManager;
+    private LinearLayoutManagerBugFixed mLinearLayoutManager;
     private String mQuery;
     private UserListingRecyclerViewAdapter mAdapter;
     private Activity mActivity;
@@ -132,7 +132,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             }
         }
 
-        mLinearLayoutManager = new LinearLayoutManager(getActivity());
+        mLinearLayoutManager = new LinearLayoutManagerBugFixed(mActivity);
         mUserListingRecyclerView.setLayoutManager(mLinearLayoutManager);
 
         mQuery = getArguments().getString(EXTRA_QUERY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRPANBroadcastFragment.java
Patch:
@@ -18,7 +18,6 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
@@ -57,6 +56,7 @@
 import ml.docilealligator.infinityforreddit.RPANComment;
 import ml.docilealligator.infinityforreddit.adapters.RPANCommentStreamRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 import ml.docilealligator.infinityforreddit.utils.JSONUtils;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
 import okhttp3.OkHttpClient;
@@ -309,7 +309,7 @@ private void parseComment(String commentJson) {
                             payload.getLong(JSONUtils.CREATED_UTC_KEY));
 
                     handler.post(() -> {
-                        LinearLayoutManager manager = ((LinearLayoutManager) recyclerView.getLayoutManager());
+                        LinearLayoutManagerBugFixed manager = ((LinearLayoutManagerBugFixed) recyclerView.getLayoutManager());
                         boolean shouldScrollToBottom = false;
                         if (manager != null) {
                             int lastPosition = manager.findLastCompletelyVisibleItemPosition();

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/AcknowledgementFragment.java
Patch:
@@ -11,7 +11,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import java.util.ArrayList;
@@ -20,6 +19,7 @@
 import butterknife.ButterKnife;
 import ml.docilealligator.infinityforreddit.adapters.AcknowledgementRecyclerViewAdapter;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.customviews.LinearLayoutManagerBugFixed;
 
 /**
  * A simple {@link Fragment} subclass.
@@ -127,7 +127,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 Uri.parse("https://github.com/saket/Better-Link-Movement-Method")));
 
         AcknowledgementRecyclerViewAdapter adapter = new AcknowledgementRecyclerViewAdapter(activity, acknowledgements);
-        recyclerView.setLayoutManager(new LinearLayoutManager(activity));
+        recyclerView.setLayoutManager(new LinearLayoutManagerBugFixed(activity));
         recyclerView.setAdapter(adapter);
 
         return rootView;

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/CrashReportsFragment.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.appcompat.view.menu.MenuItemImpl;
 import androidx.core.graphics.drawable.DrawableCompat;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.crazylegend.crashyreporter.CrashyReporter;
@@ -49,7 +48,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         setHasOptionsMenu(true);
 
-        recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(new CrashReportsRecyclerViewAdapter(CrashyReporter.INSTANCE.getLogsAsStrings()));
 
         return recyclerView;

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/TranslationFragment.java
Patch:
@@ -9,7 +9,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import javax.inject.Inject;
@@ -44,7 +43,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         ButterKnife.bind(this, rootView);
 
         TranslationFragmentRecyclerViewAdapter adapter = new TranslationFragmentRecyclerViewAdapter(activity, customThemeWrapper);
-        recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
 
         return rootView;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -47,6 +47,7 @@
 import ml.docilealligator.infinityforreddit.asynctasks.InsertMultireddit;
 import ml.docilealligator.infinityforreddit.asynctasks.InsertSubscribedThings;
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.customviews.ViewPagerBugFixed;
 import ml.docilealligator.infinityforreddit.events.GoBackToMainPageEvent;
 import ml.docilealligator.infinityforreddit.events.RefreshMultiRedditsEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
@@ -77,7 +78,7 @@ public class SubscribedThingListingActivity extends BaseActivity implements Acti
     @BindView(R.id.tab_layout_subscribed_thing_listing_activity)
     TabLayout tabLayout;
     @BindView(R.id.view_pager_subscribed_thing_listing_activity)
-    ViewPager viewPager;
+    ViewPagerBugFixed viewPager;
     @BindView(R.id.fab_subscribed_thing_listing_activity)
     FloatingActionButton fab;
     @Inject

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewRedditGalleryActivity.java
Patch:
@@ -28,6 +28,7 @@
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
+import ml.docilealligator.infinityforreddit.customviews.ViewPagerBugFixed;
 import ml.docilealligator.infinityforreddit.font.ContentFontFamily;
 import ml.docilealligator.infinityforreddit.font.ContentFontStyle;
 import ml.docilealligator.infinityforreddit.font.FontFamily;
@@ -51,7 +52,7 @@ public class ViewRedditGalleryActivity extends AppCompatActivity implements SetA
     @BindView(R.id.hauler_view_view_reddit_gallery_activity)
     HaulerView haulerView;
     @BindView(R.id.view_pager_view_reddit_gallery_activity)
-    ViewPager viewPager;
+    ViewPagerBugFixed viewPager;
     private SectionsPagerAdapter sectionsPagerAdapter;
     private ArrayList<Post.Gallery> gallery;
     private String subredditName;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRPANBroadcastFragment.java
Patch:
@@ -6,7 +6,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;

File: app/src/main/java/ml/docilealligator/infinityforreddit/apis/RedditAPI.java
Patch:
@@ -348,12 +348,12 @@ Call<String> selectUserFlair(@HeaderMap Map<String, String> headers, @FieldMap M
 
 
     @FormUrlEncoded
-    @PUT("/api/multi{multipath}r/{subredditName}")
+    @PUT("/api/multi{multipath}/r/{subredditName}")
     Call<String> addSubredditToMultiReddit(@HeaderMap Map<String, String> headers, @FieldMap Map<String, String> params,
                                            @Path(value = "multipath", encoded = true) String multipath, @Path("subredditName") String subredditName);
 
     @FormUrlEncoded
-    @POST("/api/quarantine_optin?raw_json=1")
+    @POST("/api/quarantine_option?raw_json=1")
     Call<String> optInQuarantinedSubreddit(@HeaderMap Map<String, String> headers, @FieldMap Map<String, String> params);
 
     @GET("/api/subreddit_autocomplete_v2?typeahead_active=true&include_profiles=false&raw_json=1")

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -1145,7 +1145,9 @@ public class CommentViewHolder extends RecyclerView.ViewHolder {
                 constraintSet.applyTo(bottomConstraintLayout);
             }
 
-            linearLayout.getLayoutTransition().setAnimateParentHierarchy(false);
+            if (linearLayout.getLayoutTransition() != null) {
+                linearLayout.getLayoutTransition().setAnimateParentHierarchy(false);
+            }
 
             if (mShowCommentDivider) {
                 commentDivider.setBackgroundColor(mDividerColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -3265,7 +3265,9 @@ void setBaseView(AspectRatioGifImageView iconGifImageView,
                 constraintSet.applyTo(bottomConstraintLayout);
             }
 
-            ((ViewGroup) itemView).getLayoutTransition().setAnimateParentHierarchy(false);
+            if (((ViewGroup) itemView).getLayoutTransition() != null) {
+                ((ViewGroup) itemView).getLayoutTransition().setAnimateParentHierarchy(false);
+            }
 
             itemView.setBackgroundColor(mCardViewBackgroundColor);
             postTimeTextView.setTextColor(mSecondaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -227,7 +227,6 @@ void setBaseView(TextView messageTextView, TextView timeTextView) {
             this.messageTextView = messageTextView;
             this.timeTextView = timeTextView;
 
-            ((ViewGroup) itemView).getLayoutTransition().setAnimateParentHierarchy(false);
             messageTextView.setTextColor(Color.WHITE);
             timeTextView.setTextColor(mSecondaryTextColor);
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Infinity.java
Patch:
@@ -33,7 +33,7 @@
 public class Infinity extends Application implements LifecycleObserver {
     private AppComponent mAppComponent;
     private NetworkWifiStatusReceiver mNetworkWifiStatusReceiver;
-    private boolean lock = false;
+    //private boolean lock = false;
     private boolean isSecureMode;
     @Inject
     @Named("default")

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -291,7 +291,7 @@ public void onPageSelected(int position) {
             }
         }).attach();
         if (savedInstanceState == null && getIntent().getBooleanExtra(EXTRA_VIEW_MESSAGE, false)) {
-            viewPager2.setCurrentItem(1);
+            viewPager2.setCurrentItem(1, false);
         }
 
         fixViewPager2Sensitivity(viewPager2);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -211,7 +211,7 @@ public void onPageSelected(int position) {
         tabLayout.setupWithViewPager(viewPager);
 
         if (showMultiReddits) {
-            viewPager.setCurrentItem(2);
+            viewPager.setCurrentItem(2, false);
         }
 
         loadSubscriptions(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -3265,6 +3265,8 @@ void setBaseView(AspectRatioGifImageView iconGifImageView,
                 constraintSet.applyTo(bottomConstraintLayout);
             }
 
+            ((ViewGroup) itemView).getLayoutTransition().setAnimateParentHierarchy(false);
+
             itemView.setBackgroundColor(mCardViewBackgroundColor);
             postTimeTextView.setTextColor(mSecondaryTextColor);
             titleTextView.setTextColor(mPostTitleColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PrivateMessagesDetailRecyclerViewAdapter.java
Patch:
@@ -227,6 +227,7 @@ void setBaseView(TextView messageTextView, TextView timeTextView) {
             this.messageTextView = messageTextView;
             this.timeTextView = timeTextView;
 
+            ((ViewGroup) itemView).getLayoutTransition().setAnimateParentHierarchy(false);
             messageTextView.setTextColor(Color.WHITE);
             timeTextView.setTextColor(mSecondaryTextColor);
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -384,6 +384,7 @@ public int getItemViewType(int position) {
                                 case SharedPreferencesUtils.POST_LAYOUT_COMPACT:
                                     return VIEW_TYPE_POST_COMPACT;
                             }
+                            return VIEW_TYPE_POST_CARD_WITH_PREVIEW_TYPE;
                         default:
                             return VIEW_TYPE_POST_CARD_TEXT_TYPE;
                     }
@@ -432,6 +433,7 @@ public int getItemViewType(int position) {
                                 case SharedPreferencesUtils.POST_LAYOUT_COMPACT:
                                     return VIEW_TYPE_POST_COMPACT;
                             }
+                            return VIEW_TYPE_POST_CARD_2_WITH_PREVIEW_TYPE;
                         default:
                             return VIEW_TYPE_POST_CARD_2_TEXT_TYPE;
                     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -867,7 +867,8 @@ private Post.Preview getSuitablePreview(ArrayList<Post.Preview> previews) {
 
     private void loadImage(PostDetailBaseViewHolder holder, @NonNull Post.Preview preview) {
         if (holder instanceof PostDetailImageAndGifAutoplayViewHolder) {
-            String url = mPost.getPostType() == Post.IMAGE_TYPE ? preview.getPreviewUrl() : mPost.getUrl();
+            boolean blurImage = (mPost.isNSFW() && mNeedBlurNsfw && !(mDoNotBlurNsfwInNsfwSubreddits && mFragment != null && mFragment.getIsNsfwSubreddit()) && !(mPost.getPostType() == Post.GIF_TYPE && mAutoplayNsfwVideos)) || (mPost.isSpoiler() && mNeedBlurSpoiler);
+            String url = mPost.getPostType() == Post.IMAGE_TYPE || blurImage ? preview.getPreviewUrl() : mPost.getUrl();
             RequestBuilder<Drawable> imageRequestBuilder = mGlide.load(url)
                     .listener(new RequestListener<Drawable>() {
                         @Override
@@ -889,7 +890,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                         }
                     });
 
-            if ((mPost.isNSFW() && mNeedBlurNsfw && !(mDoNotBlurNsfwInNsfwSubreddits && mFragment != null && mFragment.getIsNsfwSubreddit()) && !(mPost.getPostType() == Post.GIF_TYPE && mAutoplayNsfwVideos)) || (mPost.isSpoiler() && mNeedBlurSpoiler)) {
+            if (blurImage) {
                 imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10))).into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);
             } else {
                 if (mImageViewWidth > preview.getPreviewWidth()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -184,6 +184,7 @@ public class SharedPreferencesUtils {
     public static final String APPLY_MATERIAL_YOU = "apply_material_you";
     public static final String VIDEO_PLAYER_AUTOMATIC_LANDSCAPE_ORIENTATION = "video_player_automatic_landscape_orientation";
     public static final String REMEMBER_MUTING_OPTION_IN_POST_FEED = "remember_muting_option_in_post_feed";
+    public static final String DEFAULT_LINK_POST_LAYOUT_KEY = "default_link_post_layout";
 
     public static final String DEFAULT_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit_preferences";
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/NavigationDrawerRecyclerViewAdapter.java
Patch:
@@ -439,6 +439,8 @@ public void onAuthenticationSucceeded(
                     } else if (collapseAccountSection && collapsePostSection) {
                         if (position > REDDIT_SECTION_ITEMS + 2) {
                             pseudoPosition += ACCOUNT_SECTION_ITEMS + POST_SECTION_ITEMS;
+                        } else {
+                            pseudoPosition += ACCOUNT_SECTION_ITEMS;
                         }
                     } else if (collapseRedditSection && collapsePostSection) {
                         if (position > ACCOUNT_SECTION_ITEMS + 1) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
 import android.os.Bundle;
+import android.util.Log;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
@@ -189,6 +190,7 @@ private void handleUri(Uri uri) {
                                 startActivity(intent);
                             } else if (path.matches(RPAN_BROADCAST_PATTERN)) {
                                 Intent intent = new Intent(this, RPANActivity.class);
+                                Log.i("asdfasdf", "sd " + path);
                                 intent.putExtra(RPANActivity.EXTRA_RPAN_BROADCAST_FULLNAME_OR_ID, path.substring(path.lastIndexOf('/') + 1));
                                 startActivity(intent);
                             } else if (authority.equals("redd.it") && path.matches(REDD_IT_POST_PATTERN)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -12,7 +12,6 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.util.DisplayMetrics;
-import android.util.Log;
 import android.view.HapticFeedbackConstants;
 import android.view.LayoutInflater;
 import android.view.Menu;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -12,7 +12,6 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.util.DisplayMetrics;
-import android.util.Log;
 import android.view.HapticFeedbackConstants;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -1665,7 +1664,7 @@ public void scrollToNextParentComment() {
                 if (nextParentPosition < 0) {
                     return;
                 }
-                mSmoothScroller.setTargetPosition(nextParentPosition);
+                mSmoothScroller.setTargetPosition(mCommentsRecyclerView == null ? nextParentPosition + 1 : nextParentPosition);
                 if (mLinearLayoutManager != null) {
                     mIsSmoothScrolling = true;
                     mLinearLayoutManager.startSmoothScroll(mSmoothScroller);
@@ -1682,7 +1681,7 @@ public void scrollToPreviousParentComment() {
                 if (nextParentPosition < 0) {
                     return;
                 }
-                mSmoothScroller.setTargetPosition(nextParentPosition);
+                mSmoothScroller.setTargetPosition(mCommentsRecyclerView == null ? nextParentPosition + 1 : nextParentPosition);
                 if (mLinearLayoutManager != null) {
                     mIsSmoothScrolling = true;
                     mLinearLayoutManager.startSmoothScroll(mSmoothScroller);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentsRecyclerViewAdapter.java
Patch:
@@ -845,9 +845,9 @@ public void addComment(Comment comment) {
         mVisibleComments.add(0, comment);
 
         if (isInitiallyLoading) {
-            notifyItemInserted(2);
-        } else {
             notifyItemInserted(1);
+        } else {
+            notifyItemInserted(0);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -570,7 +570,6 @@ public void retryFetchingMoreComments() {
                 mRecyclerView.setAdapter(mConcatAdapter);
             }
 
-
             if (comments == null) {
                 fetchCommentsRespectRecommendedSort(false);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostDetailRecyclerViewAdapter.java
Patch:
@@ -1643,6 +1643,7 @@ public PostDetailVideoAutoplayViewHolder(@NonNull View itemView) {
                         intent.putExtra(ViewVideoActivity.EXTRA_VIDEO_DOWNLOAD_URL, mPost.getVideoDownloadUrl());
                     }
                 } else {
+                    intent.setData(Uri.parse(mPost.getVideoUrl()));
                     intent.putExtra(ViewVideoActivity.EXTRA_VIDEO_DOWNLOAD_URL, mPost.getVideoDownloadUrl());
                     intent.putExtra(ViewVideoActivity.EXTRA_SUBREDDIT, mPost.getSubredditName());
                     intent.putExtra(ViewVideoActivity.EXTRA_ID, mPost.getId());

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/MaterialYouUtils.java
Patch:
@@ -46,6 +46,7 @@ public static void changeTheme(Context context, Executor executor, Handler handl
                             .putInt(CustomThemeSharedPreferencesUtils.BACKGROUND_COLOR, backgroundColor)
                             .putInt(CustomThemeSharedPreferencesUtils.CARD_VIEW_BACKGROUND_COLOR, cardViewBackgroundColor)
                             .putInt(CustomThemeSharedPreferencesUtils.COMMENT_BACKGROUND_COLOR, cardViewBackgroundColor)
+                            .putInt(CustomThemeSharedPreferencesUtils.AWARDED_COMMENT_BACKGROUND_COLOR, cardViewBackgroundColor)
                             .putInt(CustomThemeSharedPreferencesUtils.BOTTOM_APP_BAR_BACKGROUND_COLOR, colorPrimaryInt)
                             .putInt(CustomThemeSharedPreferencesUtils.NAV_BAR_COLOR, colorPrimaryInt)
                             .putInt(CustomThemeSharedPreferencesUtils.PRIMARY_TEXT_COLOR, backgroundColorAppropriateTextColor)

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/MaterialYouUtils.java
Patch:
@@ -45,6 +45,7 @@ public static void changeTheme(Context context, Executor executor, Handler handl
                             .putInt(CustomThemeSharedPreferencesUtils.COLOR_PRIMARY_LIGHT_THEME, colorPrimaryInt)
                             .putInt(CustomThemeSharedPreferencesUtils.BACKGROUND_COLOR, backgroundColor)
                             .putInt(CustomThemeSharedPreferencesUtils.CARD_VIEW_BACKGROUND_COLOR, cardViewBackgroundColor)
+                            .putInt(CustomThemeSharedPreferencesUtils.COMMENT_BACKGROUND_COLOR, cardViewBackgroundColor)
                             .putInt(CustomThemeSharedPreferencesUtils.BOTTOM_APP_BAR_BACKGROUND_COLOR, colorPrimaryInt)
                             .putInt(CustomThemeSharedPreferencesUtils.NAV_BAR_COLOR, colorPrimaryInt)
                             .putInt(CustomThemeSharedPreferencesUtils.PRIMARY_TEXT_COLOR, backgroundColorAppropriateTextColor)

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/MainActivity.java
Patch:
@@ -306,7 +306,7 @@ public void onDrawerClosed(View drawerView) {
 
         params = (AppBarLayout.LayoutParams) collapsingToolbarLayout.getLayoutParams();
 
-        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, false);
+        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, true);
         mConfirmToExit = mSharedPreferences.getBoolean(SharedPreferencesUtils.CONFIRM_TO_EXIT, false);
         mLockBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_BOTTOM_APP_BAR, false);
         mDisableSwipingBetweenTabs = mSharedPreferences.getBoolean(SharedPreferencesUtils.DISABLE_SWIPING_BETWEEN_TABS, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -317,7 +317,7 @@ public void onStateChanged(AppBarLayout appBarLayout, State state) {
             });
         }
 
-        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, false);
+        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, true);
         lockBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_BOTTOM_APP_BAR, false);
         boolean hideSubredditDescription = mSharedPreferences.getBoolean(SharedPreferencesUtils.HIDE_SUBREDDIT_DESCRIPTION, false);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -353,7 +353,7 @@ public void onStateChanged(AppBarLayout appBarLayout, State state) {
             });
         }
 
-        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, false);
+        showBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, true);
         lockBottomAppBar = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_BOTTOM_APP_BAR, false);
 
         glide = Glide.with(this);

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/GesturesAndButtonsPreferenceFragment.java
Patch:
@@ -56,7 +56,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
                 return true;
             });
 
-            if (sharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, false)) {
+            if (sharedPreferences.getBoolean(SharedPreferencesUtils.BOTTOM_APP_BAR_KEY, true)) {
                 lockBottomAppBarSwitch.setVisible(true);
                 lockBottomAppBarSwitch.setOnPreferenceChangeListener((preference, newValue) -> {
                     EventBus.getDefault().post(new ChangeLockBottomAppBarEvent((Boolean) newValue));

File: app/src/main/java/ml/docilealligator/infinityforreddit/account/AccountDao.java
Patch:
@@ -16,9 +16,6 @@ public interface AccountDao {
     @Query("SELECT EXISTS (SELECT 1 FROM accounts WHERE username = '-')")
     boolean isAnonymousAccountInserted();
 
-    @Query("INSERT INTO accounts(username, karma, is_current_user) VALUES('-', 0, 0)")
-    void insertAnonymousAccount();
-
     @Query("SELECT * FROM accounts WHERE username != '-'")
     List<Account> getAllAccounts();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditSubscription.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.concurrent.Executor;
 
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
+import ml.docilealligator.infinityforreddit.account.Account;
 import ml.docilealligator.infinityforreddit.apis.RedditAPI;
 import ml.docilealligator.infinityforreddit.subscribedsubreddit.SubscribedSubredditData;
 import ml.docilealligator.infinityforreddit.utils.APIUtils;
@@ -129,7 +130,7 @@ private static void insertSubscription(Executor executor, Handler handler,
                     subredditData.getIconUrl(), accountName, false);
             if (accountName.equals("-")) {
                 if (!redditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
-                    redditDataRoomDatabase.accountDao().insertAnonymousAccount();
+                    redditDataRoomDatabase.accountDao().insert(Account.getAnonymousAccount());
                 }
             }
             redditDataRoomDatabase.subscribedSubredditDao().insert(subscribedSubredditData);
@@ -144,7 +145,7 @@ private static void removeSubscription(Executor executor, Handler handler,
         executor.execute(() -> {
             if (accountName.equals("-")) {
                 if (!redditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
-                    redditDataRoomDatabase.accountDao().insertAnonymousAccount();
+                    redditDataRoomDatabase.accountDao().insert(Account.getAnonymousAccount());
                 }
             }
             redditDataRoomDatabase.subscribedSubredditDao().deleteSubscribedSubreddit(subredditName, accountName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/NavigationDrawerRecyclerViewAdapter.java
Patch:
@@ -111,6 +111,7 @@ public NavigationDrawerRecyclerViewAdapter(AppCompatActivity appCompatActivity,
         collapseSubscribedSubredditsSection = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.COLLAPSE_SUBSCRIBED_SUBREDDITS_SECTION, false);
         hideFavoriteSubredditsSection = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.HIDE_FAVORITE_SUBREDDITS_SECTION, false);
         hideSubscribedSubredditsSection = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.HIDE_SUBSCRIBED_SUBREDDITS_SECTIONS, false);
+        showAvatarOnTheRightInTheNavigationDrawer = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_AVATAR_ON_THE_RIGHT, false);
 
         this.itemClickListener = itemClickListener;
         primaryTextColor = customThemeWrapper.getPrimaryTextColor();

File: app/src/main/java/ml/docilealligator/infinityforreddit/comment/Comment.java
Patch:
@@ -97,6 +97,7 @@ public Comment(String parentFullName, int depth, int placeholderType) {
         if (placeholderType == PLACEHOLDER_LOAD_MORE_COMMENTS) {
             this.fullName = parentFullName;
         } else {
+            this.fullName = parentFullName;
             this.parentId = parentFullName.substring(3);
         }
         this.depth = depth;

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1171,7 +1171,7 @@ public void onScrolledRight() {
                 }
                 ((CommentFullyCollapsedViewHolder) holder).scoreTextView.setText(mActivity.getString(R.string.top_score,
                         Utils.getNVotes(mShowAbsoluteNumberOfVotes, comment.getScore() + comment.getVoteType())));
-                ((CommentViewHolder) holder).commentIndentationView.setShowOnlyOneDivider(mShowOnlyOneCommentLevelIndicator);
+                ((CommentFullyCollapsedViewHolder) holder).commentIndentationView.setShowOnlyOneDivider(mShowOnlyOneCommentLevelIndicator);
                 ((CommentFullyCollapsedViewHolder) holder).commentIndentationView.setLevelAndColors(comment.getDepth(), verticalBlockColors);
             }
         } else if (holder instanceof LoadMoreChildCommentsViewHolder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -10,7 +10,6 @@
 import android.os.Build;
 import android.text.Spannable;
 import android.util.DisplayMetrics;
-import android.util.Log;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.TextView;
 
@@ -97,18 +96,19 @@ private static String fixSuperScript(StringBuilder regexed) {
     }
 
     public static String parseInlineGifInComments(String markdown) {
-        Log.i("asdfsdf", "s " + markdown);
         StringBuilder markdownStringBuilder = new StringBuilder(markdown);
         Pattern inlineGifPattern = Pattern.compile("!\\[gif]\\(giphy\\|\\w+\\)");
         Matcher matcher = inlineGifPattern.matcher(markdownStringBuilder);
         while (matcher.find()) {
             markdownStringBuilder.replace(matcher.start(), matcher.end(), "[gif](https://media3.giphy.com/media/" + markdownStringBuilder.substring(matcher.start() + "![gif](giphy|".length(), matcher.end() - 1) + "/giphy.mp4)");
+            matcher = inlineGifPattern.matcher(markdownStringBuilder);
         }
 
         Pattern inlineGifPattern2 = Pattern.compile("!\\[gif]\\(giphy\\|\\w+\\|downsized\\)");
         Matcher matcher2 = inlineGifPattern2.matcher(markdownStringBuilder);
         while (matcher2.find()) {
             markdownStringBuilder.replace(matcher2.start(), matcher2.end(), "[gif](https://media3.giphy.com/media/" + markdownStringBuilder.substring(matcher2.start() + "![gif](giphy|".length(), matcher2.end() - "|downsized\\)".length()) + "/giphy.mp4)");
+            matcher2 = inlineGifPattern2.matcher(markdownStringBuilder);
         }
 
         Pattern inlineGifPattern3 = Pattern.compile("!\\[gif]\\(emote\\|\\w+\\|\\w+\\)");
@@ -118,6 +118,7 @@ public static String parseInlineGifInComments(String markdown) {
                     "[gif](https://reddit-meta-production.s3.amazonaws.com/public/fortnitebr/emotes/snoomoji_emotes/"
                             + markdownStringBuilder.substring(
                                     matcher3.start() + "![gif](emote|".length(), matcher3.end() - 1).replace('|', '/') + ".gif)");
+            matcher3 = inlineGifPattern3.matcher(markdownStringBuilder);
         }
 
         return markdownStringBuilder.toString();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubredditSelectionActivity.java
Patch:
@@ -167,6 +167,7 @@ private void bindView(boolean initializeFragment) {
             mFragment = new SubscribedSubredditsListingFragment();
             Bundle bundle = new Bundle();
             bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_NAME, mAccountName);
+            bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
             bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_PROFILE_IMAGE_URL, mAccountProfileImageUrl);
             bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, true);
             if (getIntent().hasExtra(EXTRA_EXTRA_CLEAR_SELECTION)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubscribedThingListingActivity.java
Patch:
@@ -387,6 +387,7 @@ public Fragment getItem(int position) {
                     Bundle bundle = new Bundle();
                     bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, false);
                     bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCOUNT_NAME, mAccountName);
+                    bundle.putString(SubscribedSubredditsListingFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                     fragment.setArguments(bundle);
                     return fragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/MultiRedditListingFragment.java
Patch:
@@ -144,9 +144,9 @@ public void onLongClick(MultiReddit multiReddit) {
                 public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                     super.onScrolled(recyclerView, dx, dy);
                     if (dy > 0) {
-                        ((SubscribedThingListingActivity) mActivity).fab.hide();
+                        ((SubscribedThingListingActivity) mActivity).hideFabInMultiredditTab();
                     } else {
-                        ((SubscribedThingListingActivity) mActivity).fab.show();
+                        ((SubscribedThingListingActivity) mActivity).showFabInMultiredditTab();
                     }
                 }
             });

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -113,7 +113,7 @@ public class ViewPostDetailActivity extends BaseActivity implements SortTypeSele
     private String mAccessToken;
     private String mAccountName;
     private long postFragmentId;
-    private int postListPosition = -1;
+    private int postListPosition;
     private int orientation;
     private boolean mVolumeKeysNavigateComments;
     private boolean isNsfwSubreddit;
@@ -172,6 +172,7 @@ protected void onCreate(Bundle savedInstanceState) {
             EventBus.getDefault().post(new NeedForPostListFromPostFragmentEvent(postFragmentId));
         }
 
+        postListPosition = getIntent().getIntExtra(EXTRA_POST_LIST_POSITION, -1);
         isNsfwSubreddit = getIntent().getBooleanExtra(EXTRA_IS_NSFW_SUBREDDIT, false);
 
         fragmentManager = getSupportFragmentManager();
@@ -519,7 +520,7 @@ public Fragment createFragment(int position) {
                     bundle.putString(ViewPostDetailFragment.EXTRA_POST_ID, getIntent().getStringExtra(EXTRA_POST_ID));
                 } else {
                     bundle.putParcelable(ViewPostDetailFragment.EXTRA_POST_DATA, post);
-                    bundle.putInt(ViewPostDetailFragment.EXTRA_POST_LIST_POSITION, position);
+                    bundle.putInt(ViewPostDetailFragment.EXTRA_POST_LIST_POSITION, postListPosition);
                 }
                 bundle.putString(ViewPostDetailFragment.EXTRA_SINGLE_COMMENT_ID, getIntent().getStringExtra(EXTRA_SINGLE_COMMENT_ID));
                 bundle.putString(ViewPostDetailFragment.EXTRA_MESSAGE_FULLNAME, getIntent().getStringExtra(EXTRA_MESSAGE_FULLNAME));

File: app/src/main/java/ml/docilealligator/infinityforreddit/events/PostUpdateEventToPostDetailFragment.java
Patch:
@@ -2,10 +2,10 @@
 
 import ml.docilealligator.infinityforreddit.post.Post;
 
-public class PostUpdateEventToDetailActivity {
+public class PostUpdateEventToPostDetailFragment {
     public final Post post;
 
-    public PostUpdateEventToDetailActivity(Post post) {
+    public PostUpdateEventToPostDetailFragment(Post post) {
         this.post = post;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -89,7 +89,7 @@
 import ml.docilealligator.infinityforreddit.events.ChangeNetworkStatusEvent;
 import ml.docilealligator.infinityforreddit.events.ChangeSpoilerBlurEvent;
 import ml.docilealligator.infinityforreddit.events.FlairSelectedEvent;
-import ml.docilealligator.infinityforreddit.events.PostUpdateEventToDetailActivity;
+import ml.docilealligator.infinityforreddit.events.PostUpdateEventToPostDetailFragment;
 import ml.docilealligator.infinityforreddit.events.PostUpdateEventToPostList;
 import ml.docilealligator.infinityforreddit.message.ReadMessage;
 import ml.docilealligator.infinityforreddit.post.FetchPost;
@@ -1682,7 +1682,7 @@ public boolean getIsNsfwSubreddit() {
     }
 
     @Subscribe
-    public void onPostUpdateEvent(PostUpdateEventToDetailActivity event) {
+    public void onPostUpdateEvent(PostUpdateEventToPostDetailFragment event) {
         if (mPost.getId().equals(event.post.getId())) {
             mPost.setVoteType(event.post.getVoteType());
             mPost.setSaved(event.post.isSaved());

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -480,7 +480,6 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         mTimeFormatPattern = sharedPreferences.getString(SharedPreferencesUtils.TIME_FORMAT_KEY, SharedPreferencesUtils.TIME_FORMAT_DEFAULT_VALUE);
         mExpandChildren = !sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_TOP_LEVEL_COMMENTS_FIRST, false);
         mCommentToolbarHidden = sharedPreferences.getBoolean(SharedPreferencesUtils.COMMENT_TOOLBAR_HIDDEN, false);
-        //mCommentToolbarHidden = true;
         mCommentToolbarHideOnClick = sharedPreferences.getBoolean(SharedPreferencesUtils.COMMENT_TOOLBAR_HIDE_ON_CLICK, true);
         mSwapTapAndLong = sharedPreferences.getBoolean(SharedPreferencesUtils.SWAP_TAP_AND_LONG_COMMENTS, false);
         mShowCommentDivider = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_COMMENT_DIVIDER, false);
@@ -1889,6 +1888,7 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
             ((CommentViewHolder) holder).authorTextView.setTextColor(mUsernameColor);
             ((CommentViewHolder) holder).authorFlairTextView.setVisibility(View.GONE);
             ((CommentViewHolder) holder).authorTextView.setCompoundDrawablesWithIntrinsicBounds(null, null, null, null);
+            ((CommentViewHolder) holder).topScoreTextView.setTextColor(mSecondaryTextColor);
             ((CommentViewHolder) holder).awardsTextView.setText("");
             ((CommentViewHolder) holder).awardsTextView.setVisibility(View.GONE);
             ((CommentViewHolder) holder).expandButton.setVisibility(View.GONE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditDataRoomDatabase.java
Patch:
@@ -329,7 +329,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
     private static final Migration MIGRATION_18_19 = new Migration(18, 19) {
         @Override
         public void migrate(@NonNull SupportSQLiteDatabase database) {
-            database.execSQL("INSERT INTO accounts(username, karma, is_current_user) VALUES (\"-\", 0, false)");
+            database.execSQL("INSERT INTO accounts(username, karma, is_current_user) VALUES (\"-\", 0, 0)");
         }
     };
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1896,11 +1896,8 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
             ((CommentViewHolder) holder).downvoteButton.setColorFilter(mCommentIconAndInfoColor, android.graphics.PorterDuff.Mode.SRC_IN);
             ((CommentViewHolder) holder).replyButton.setColorFilter(mCommentIconAndInfoColor, android.graphics.PorterDuff.Mode.SRC_IN);
             ((CommentViewHolder) holder).itemView.setBackgroundColor(mCommentBackgroundColor);
-            ((CommentViewHolder) holder).commentIndentationView.setLevelAndColors(0, verticalBlockColors);
         } else if (holder instanceof CommentFullyCollapsedViewHolder) {
-            ((CommentFullyCollapsedViewHolder) holder).commentIndentationView.setLevelAndColors(0, verticalBlockColors);
         } else if (holder instanceof LoadMoreChildCommentsViewHolder) {
-            ((LoadMoreChildCommentsViewHolder) holder).commentIndentationView.setLevelAndColors(0, verticalBlockColors);
         } else if (holder instanceof PostDetailBaseViewHolder) {
             ((PostDetailBaseViewHolder) holder).mUpvoteButton.setColorFilter(mPostIconAndInfoColor, android.graphics.PorterDuff.Mode.SRC_IN);
             ((PostDetailBaseViewHolder) holder).mScoreTextView.setTextColor(mPostIconAndInfoColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SettingsActivity.java
Patch:
@@ -27,6 +27,7 @@
 import ml.docilealligator.infinityforreddit.customtheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.events.RecreateActivityEvent;
 import ml.docilealligator.infinityforreddit.settings.AboutPreferenceFragment;
+import ml.docilealligator.infinityforreddit.settings.AdvancedPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.CustomizeBottomAppBarFragment;
 import ml.docilealligator.infinityforreddit.settings.CustomizeMainPageTabsFragment;
 import ml.docilealligator.infinityforreddit.settings.FontPreferenceFragment;
@@ -107,6 +108,8 @@ protected void onCreate(Bundle savedInstanceState) {
                 setTitle(R.string.settings_gestures_and_buttons_title);
             } else if (fragment instanceof PostPreferenceFragment) {
                 setTitle(R.string.settings_category_post_title);
+            } else if (fragment instanceof AdvancedPreferenceFragment) {
+                setTitle(R.string.settings_advanced_master_title);
             }
         });
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/asynctasks/CheckIsSubscribedToSubreddit.java
Patch:
@@ -16,7 +16,7 @@ public static void checkIsSubscribedToSubreddit(Executor executor, Handler handl
             if (!redditDataRoomDatabase.accountDao().isAnonymousAccountInserted()) {
                 redditDataRoomDatabase.accountDao().insertAnonymousAccount();
             }
-            SubscribedSubredditData subscribedSubredditData = redditDataRoomDatabase.subscribedSubredditDao().getSubscribedSubreddit(subredditName, accountName);
+            SubscribedSubredditData subscribedSubredditData = redditDataRoomDatabase.subscribedSubredditDao().getSubscribedSubreddit(subredditName, accountName == null ? "-" : accountName);
             handler.post(() -> {
                 if (subscribedSubredditData != null) {
                     checkIsSubscribedToSubredditListener.isSubscribed();

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -485,7 +485,8 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         mShowElapsedTime = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_ELAPSED_TIME_KEY, false);
         mTimeFormatPattern = sharedPreferences.getString(SharedPreferencesUtils.TIME_FORMAT_KEY, SharedPreferencesUtils.TIME_FORMAT_DEFAULT_VALUE);
         mExpandChildren = !sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_TOP_LEVEL_COMMENTS_FIRST, false);
-        mCommentToolbarHidden = sharedPreferences.getBoolean(SharedPreferencesUtils.COMMENT_TOOLBAR_HIDDEN, false);
+        //mCommentToolbarHidden = sharedPreferences.getBoolean(SharedPreferencesUtils.COMMENT_TOOLBAR_HIDDEN, false);
+        mCommentToolbarHidden = true;
         mCommentToolbarHideOnClick = sharedPreferences.getBoolean(SharedPreferencesUtils.COMMENT_TOOLBAR_HIDE_ON_CLICK, true);
         mSwapTapAndLong = sharedPreferences.getBoolean(SharedPreferencesUtils.SWAP_TAP_AND_LONG_COMMENTS, false);
         mShowCommentDivider = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_COMMENT_DIVIDER, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -48,6 +48,8 @@
 import com.thefuntasty.hauler.DragDirection;
 import com.thefuntasty.hauler.HaulerView;
 
+import org.apache.commons.io.FilenameUtils;
+
 import java.util.List;
 
 import javax.inject.Inject;
@@ -289,7 +291,7 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         } else if (videoType == VIDEO_TYPE_DIRECT) {
             videoDownloadUrl = mVideoUri.toString();
-            videoFileName = videoDownloadUrl.substring(videoDownloadUrl.lastIndexOf('/') + 1);
+            videoFileName = FilenameUtils.getName(videoDownloadUrl);
             // Produces DataSource instances through which media data is loaded.
             dataSourceFactory = new DefaultHttpDataSourceFactory(Util.getUserAgent(this, "Infinity"));
             // Prepare the player with the source.

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/ParsePost.java
Patch:
@@ -133,6 +133,7 @@ private static Post parseBasicData(JSONObject data) throws JSONException {
         }
         if (data.has(JSONUtils.CROSSPOST_PARENT_LIST)) {
             //Cross post
+            //data.getJSONArray(JSONUtils.CROSSPOST_PARENT_LIST).getJSONObject(0) out of bounds????????????
             data = data.getJSONArray(JSONUtils.CROSSPOST_PARENT_LIST).getJSONObject(0);
             Post crosspostParent = parseBasicData(data);
             Post post = parseData(data, permalink, id, fullName, subredditName, subredditNamePrefixed,
@@ -227,7 +228,7 @@ private static Post parseData(JSONObject data, String permalink, String id, Stri
 
                     JSONArray thumbnailPreviews = images.getJSONArray(JSONUtils.RESOLUTIONS_KEY);
                     for (int i = 0; i < thumbnailPreviews.length(); i++) {
-                        JSONObject thumbnailPreview = images.getJSONArray(JSONUtils.RESOLUTIONS_KEY).getJSONObject(2);
+                        JSONObject thumbnailPreview = images.getJSONArray(JSONUtils.RESOLUTIONS_KEY).getJSONObject(i);
                         String thumbnailPreviewUrl = thumbnailPreview.getString(JSONUtils.URL_KEY);
                         int thumbnailPreviewWidth = thumbnailPreview.getInt(JSONUtils.WIDTH_KEY);
                         int thumbnailPreviewHeight = thumbnailPreview.getInt(JSONUtils.HEIGHT_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/postfilter/PostFilterUsageDao.java
Patch:
@@ -14,6 +14,9 @@ public interface PostFilterUsageDao {
     @Query("SELECT * FROM post_filter_usage WHERE name = :name")
     LiveData<List<PostFilterUsage>> getAllPostFilterUsageLiveData(String name);
 
+    @Query("SELECT * FROM post_filter_usage WHERE name = :name")
+    List<PostFilterUsage> getAllPostFilterUsage(String name);
+
     @Insert(onConflict = OnConflictStrategy.REPLACE)
     void insertPostFilterUsage(PostFilterUsage postFilterUsage);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/LinkResolverActivity.java
Patch:
@@ -33,7 +33,7 @@ public class LinkResolverActivity extends AppCompatActivity {
 
     private static final String POST_PATTERN = "/r/[\\w-]+/comments/\\w+/?\\w+/?";
     private static final String POST_PATTERN_2 = "/(u|U|user)/[\\w-]+/comments/\\w+/?\\w+/?";
-    private static final String COMMENT_PATTERN = "/(r|u|U|user)/[\\w-]+/comments/\\w+/?\\w+/\\w+/?";
+    private static final String COMMENT_PATTERN = "/(r|u|U|user)/[\\w-]+/comments/\\w+/?[\\w-]+/\\w+/?";
     private static final String SUBREDDIT_PATTERN = "/[rR]/[\\w-]+/?";
     private static final String USER_PATTERN = "/(u|U|user)/[\\w-]+/?";
     private static final String SIDEBAR_PATTERN = "/[rR]/[\\w-]+/about/sidebar";

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostFilterRecyclerViewAdapter.java
Patch:
@@ -71,7 +71,7 @@ public PostFilterViewHolder(@NonNull View itemView) {
             super(itemView);
             textView = (TextView) itemView;
             itemView.setOnClickListener(view -> {
-                onItemClickListener.onItemClick(postFilterList.get(getAdapterPosition() - 1));
+                onItemClickListener.onItemClick(postFilterList.get(getBindingAdapterPosition() - 1));
             });
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubscribedThing.java
Patch:
@@ -99,7 +99,7 @@ protected Void doInBackground(Void... voids) {
                         String description = data.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
                         String sidebarDescription = data.getString(JSONUtils.DESCRIPTION_KEY);
                         int nSubscribers = data.getInt(JSONUtils.SUBSCRIBERS_KEY);
-                        long createdUTC = data.getLong(JSONUtils.CREATED_UTC_KEY);
+                        long createdUTC = data.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
                         String suggestedCommentSort = data.getString(JSONUtils.SUGGESTED_COMMENT_SORT_KEY);
                         boolean isNSFW = data.getBoolean(JSONUtils.OVER18_KEY);
                         newSubscribedSubredditData.add(new SubscribedSubredditData(id, name, iconUrl, accountName, isFavorite));

File: app/src/main/java/ml/docilealligator/infinityforreddit/postfilter/PostFilter.java
Patch:
@@ -202,10 +202,11 @@ public static boolean isPostAllowed(Post post, PostFilter postFilter) {
                 }
             }
         }
-        if (postFilter.excludeDomains != null && !postFilter.excludeDomains.equals("")) {
+        if (post.getUrl() != null && postFilter.excludeDomains != null && !postFilter.excludeDomains.equals("")) {
             String[] domains = postFilter.excludeDomains.split(",", 0);
+            String url = post.getUrl().toLowerCase();
             for (String f : domains) {
-                if (!f.trim().equals("") && post.getUrl().toLowerCase().contains(f.trim().toLowerCase())) {
+                if (!f.trim().equals("") && url.contains(f.trim().toLowerCase())) {
                     return false;
                 }
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/NavigationDrawerRecyclerViewAdapter.java
Patch:
@@ -99,7 +99,7 @@ public NavigationDrawerRecyclerViewAdapter(AppCompatActivity appCompatActivity,
         this.accountName = accountName;
         isNSFWEnabled = nsfwAndSpoilerSharedPreferences.getBoolean((accountName == null ? "" : accountName) + SharedPreferencesUtils.NSFW_BASE, false);
         requireAuthToAccountSection = sharedPreferences.getBoolean(SharedPreferencesUtils.REQUIRE_AUTHENTICATION_TO_GO_TO_ACCOUNT_SECTION_IN_NAVIGATION_DRAWER, false);
-        showAvatarOnTheRightInTheNavigationDrawer = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_AVATAR_ON_THE_RIGHT_IN_THE_NAVIGATION_DRAWER, false);
+        showAvatarOnTheRightInTheNavigationDrawer = sharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_AVATAR_ON_THE_RIGHT, false);
         isLoggedIn = accountName != null;
         collapseAccountSection = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.COLLAPSE_ACCOUNT_SECTION, false);
         collapsePostSection = navigationDrawerSharedPreferences.getBoolean(SharedPreferencesUtils.COLLAPSE_POST_SECTION, false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -38,7 +38,8 @@ public class SharedPreferencesUtils {
     public static final String DISABLE_IMMERSIVE_INTERFACE_IN_LANDSCAPE_MODE = "disable_immersive_interface_in_landscape_mode";
     public static final String BOTTOM_APP_BAR_KEY = "bottom_app_bar";
     public static final String VOTE_BUTTONS_ON_THE_RIGHT_KEY = "vote_buttons_on_the_right";
-    public static final String SHOW_AVATAR_ON_THE_RIGHT_IN_THE_NAVIGATION_DRAWER = "show_avatar_on_the_right_in_the_navigation_drawer";
+    public static final String SHOW_AVATAR_ON_THE_RIGHT = "show_avatar_on_the_right";
+    public static final String DEFAULT_SEARCH_RESULT_TAB = "default_search_result_tab";
 
     public static final String SORT_TYPE_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.sort_type";
     public static final String SORT_TYPE_BEST_POST = "sort_type_best_post";
@@ -145,7 +146,6 @@ public class SharedPreferencesUtils {
     public static final String DATA_SAVING_MODE_ALWAYS = "2";
     public static final String NATIONAL_FLAGS = "national_flags";
     public static final String RESPECT_SUBREDDIT_RECOMMENDED_COMMENT_SORT_TYPE = "respect_subreddit_recommended_comment_sort_type";
-    public static final String SUBREDDIT_FILTER_POPULAR_AND_ALL = "subreddit_filter_popular_and_all";
     public static final String UFO_CAPTURING_ANIMATION = "ufo_capturing_animation";
     public static final String HIDE_SUBREDDIT_DESCRIPTION = "hide_subreddit_description";
     public static final String DISABLE_IMAGE_PREVIEW = "disable_image_preview";

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchPostFilterReadPostsAndConcatenatedSubredditNames.java
Patch:
@@ -44,7 +44,7 @@ public static void fetchPostFilterAndConcatenatedSubredditNames(RedditDataRoomDa
             if (anonymousSubscribedSubreddits != null && !anonymousSubscribedSubreddits.isEmpty()) {
                 StringBuilder stringBuilder = new StringBuilder();
                 for (SubscribedSubredditData s : anonymousSubscribedSubreddits) {
-                    stringBuilder.append(s).append("+");
+                    stringBuilder.append(s.getName()).append("+");
                 }
                 if (stringBuilder.length() > 0) {
                     stringBuilder.deleteCharAt(stringBuilder.length() - 1);

File: app/src/main/java/ml/docilealligator/infinityforreddit/post/PostDataSource.java
Patch:
@@ -198,6 +198,7 @@ public void loadInitial(@NonNull LoadInitialParams<String> params, @NonNull fina
                 loadMultiRedditPostsInitial(callback, null);
                 break;
             case TYPE_ANONYMOUS_FRONT_PAGE:
+                loadAnonymousFrontPagePostsInitial(callback, null);
                 break;
         }
     }
@@ -235,6 +236,7 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull final LoadCal
                 loadMultiRedditPostsAfter(params, callback, null);
                 break;
             case TYPE_ANONYMOUS_FRONT_PAGE:
+                loadAnonymousFrontPagePostsAfter(params, callback, null);
                 break;
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/account/AccountDao.java
Patch:
@@ -13,6 +13,9 @@ public interface AccountDao {
     @Insert(onConflict = OnConflictStrategy.REPLACE)
     void insert(Account account);
 
+    @Query("SELECT EXISTS (SELECT 1 FROM accounts WHERE username = '-')")
+    boolean isAnonymousAccountInserted();
+
     @Query("SELECT * FROM accounts WHERE username != '-'")
     List<Account> getAllAccounts();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewPostDetailFragment.java
Patch:
@@ -717,7 +717,8 @@ public void changeSortType(SortType sortType) {
             children.clear();
         }
         this.sortType = sortType.getType().value;
-        if (!mSharedPreferences.getBoolean(SharedPreferencesUtils.RESPECT_SUBREDDIT_RECOMMENDED_COMMENT_SORT_TYPE, false)) {
+        if (!mSharedPreferences.getBoolean(SharedPreferencesUtils.RESPECT_SUBREDDIT_RECOMMENDED_COMMENT_SORT_TYPE, false)
+                && mSharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_SORT_TYPE, true)) {
             mSortTypeSharedPreferences.edit().putString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, sortType.getType().name()).apply();
         }
         fetchCommentsRespectRecommendedSort(false, false, sortType.getType().value);

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -397,14 +397,14 @@ public int getItemViewType(int position) {
                 if (post != null) {
                     switch (post.getPostType()) {
                         case Post.VIDEO_TYPE:
-                        case Post.GIF_TYPE:
                             if (mAutoplay) {
                                 if (!mAutoplayNsfwVideos && post.isNSFW()) {
                                     return VIEW_TYPE_POST_CARD_2_WITH_PREVIEW;
                                 }
                                 return VIEW_TYPE_POST_CARD_2_VIDEO_AUTOPLAY_TYPE;
                             }
                             return VIEW_TYPE_POST_CARD_2_WITH_PREVIEW;
+                        case Post.GIF_TYPE:
                         case Post.IMAGE_TYPE:
                         case Post.LINK_TYPE:
                         case Post.NO_PREVIEW_LINK_TYPE:

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/PostLayoutBottomSheetFragment.java
Patch:
@@ -26,12 +26,12 @@ public class PostLayoutBottomSheetFragment extends RoundedBottomSheetDialogFragm
 
     @BindView(R.id.card_layout_text_view_post_layout_bottom_sheet_fragment)
     TextView cardLayoutTextView;
+    @BindView(R.id.card_layout_2_text_view_post_layout_bottom_sheet_fragment)
+    TextView cardLayout2TextView;
     @BindView(R.id.compact_layout_text_view_post_layout_bottom_sheet_fragment)
     TextView compactLayoutTextView;
     @BindView(R.id.gallery_layout_text_view_post_layout_bottom_sheet_fragment)
     TextView galleryLayoutTextView;
-    @BindView(R.id.card_layout_2_text_view_post_layout_bottom_sheet_fragment)
-    TextView cardLayout2TextView;
     private Activity activity;
     public PostLayoutBottomSheetFragment() {
         // Required empty public constructor

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -165,6 +165,8 @@ public class SharedPreferencesUtils {
     public static final String CLICK_TO_SHOW_MEDIA_IN_GALLERY_LAYOUT = "click_to_show_media_in_gallery_layout";
     public static final String HIDE_POST_TYPE = "hide_post_type";
     public static final String HIDE_THE_NUMBER_OF_AWARDS = "hide_the_number_of_awards";
+    public static final String HIDE_SUBREDDIT_AND_USER_PREFIX = "hide_subreddit_and_user_prefix";
+    public static final String HIDE_THE_NUMBER_OF_VOTES = "hide_the_number_of_votes";
 
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";
     public static final String MAIN_PAGE_TAB_COUNT = "_main_page_tab_count";

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -163,6 +163,8 @@ public class SharedPreferencesUtils {
     public static final String USER_DEFAULT_SORT_TYPE = "user_default_sort_type";
     public static final String USER_DEFAULT_SORT_TIME = "user_default_sort_time";
     public static final String CLICK_TO_SHOW_MEDIA_IN_GALLERY_LAYOUT = "click_to_show_media_in_gallery_layout";
+    public static final String HIDE_POST_TYPE = "hide_post_type";
+    public static final String HIDE_THE_NUMBER_OF_AWARDS = "hide_the_number_of_awards";
 
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";
     public static final String MAIN_PAGE_TAB_COUNT = "_main_page_tab_count";

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/PostRecyclerViewAdapter.java
Patch:
@@ -1316,7 +1316,7 @@ public void failed(int errorCode) {
                         ((PostGalleryViewHolder) holder).imageView.setVisibility(View.VISIBLE);
                         ((PostGalleryViewHolder) holder).progressBar.setVisibility(View.VISIBLE);
                         ((PostGalleryViewHolder) holder).videoOrGifIndicatorImageView.setVisibility(View.VISIBLE);
-                        ((PostGalleryViewHolder) holder).videoOrGifIndicatorImageView.setImageDrawable(mActivity.getDrawable(R.drawable.ic_link));
+                        ((PostGalleryViewHolder) holder).videoOrGifIndicatorImageView.setImageDrawable(mActivity.getDrawable(R.drawable.ic_link_post_type_indicator));
 
                         Post.Preview preview = getSuitablePreview(post.getPreviews());
                         if (preview != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -55,7 +55,6 @@
 import ml.docilealligator.infinityforreddit.events.NeedForPostListFromPostFragmentEvent;
 import ml.docilealligator.infinityforreddit.events.ProvidePostListToViewPostDetailActivityEvent;
 import ml.docilealligator.infinityforreddit.events.SwitchAccountEvent;
-import ml.docilealligator.infinityforreddit.fragments.PostFragment;
 import ml.docilealligator.infinityforreddit.fragments.ViewPostDetailFragment;
 import ml.docilealligator.infinityforreddit.post.Post;
 import ml.docilealligator.infinityforreddit.utils.SharedPreferencesUtils;
@@ -454,7 +453,7 @@ ViewPostDetailFragment getCurrentFragment() {
                 return null;
             }
             Fragment fragment = fragmentManager.findFragmentByTag("f" + viewPager2.getCurrentItem());
-            if (fragment instanceof PostFragment) {
+            if (fragment instanceof ViewPostDetailFragment) {
                 return (ViewPostDetailFragment) fragment;
             }
             return null;

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/CommentsListingFragment.java
Patch:
@@ -9,6 +9,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.view.HapticFeedbackConstants;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -247,7 +248,7 @@ public float getSwipeThreshold(@NonNull RecyclerView.ViewHolder viewHolder) {
 
         mAccessToken = mCurrentAccountSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN, null);
 
-        bindView(resources);
+        new Handler().postDelayed(() -> bindView(resources), 0);
 
         return rootView;
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -131,4 +131,5 @@ public class JSONUtils {
     public static final String AWARDEE_KARMA_KEY = "awardee_karma";
     public static final String CONTENT_URLS_KEY = "content_urls";;
     public static final String WEBM_KEY = "webm";
+    public static final String WEBM_URL_KEY = "webmUrl";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/CreateMultiRedditActivity.java
Patch:
@@ -23,7 +23,6 @@
 import com.r0adkll.slidr.Slidr;
 
 import java.util.ArrayList;
-import java.util.concurrent.Executor;
 
 import javax.inject.Inject;
 import javax.inject.Named;
@@ -78,8 +77,6 @@ public class CreateMultiRedditActivity extends BaseActivity {
     SharedPreferences mCurrentAccountSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
-    @Inject
-    Executor mExecutor;
     private String mAccessToken;
     private String mAccountName;
     private ArrayList<String> mSubreddits;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/GiveAwardActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
@@ -122,8 +123,8 @@ private void bindView() {
                     .setPositiveButton(R.string.yes, (dialogInterface, i) -> {
                         boolean isAnonymous = switchMaterial.isChecked();
 
-                        GiveAward.giveAwardV2(mOauthRetrofit, mAccessToken, thingFullname, award.getId(),
-                                isAnonymous, new GiveAward.GiveAwardListener() {
+                        GiveAward.giveAwardV2(mExecutor, new Handler(), mOauthRetrofit, mAccessToken,
+                                thingFullname, award.getId(), isAnonymous, new GiveAward.GiveAwardListener() {
                                     @Override
                                     public void success(String awardsHTML, int awardCount) {
                                         Intent data = new Intent();

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -1612,7 +1612,6 @@ public void failed() {
                 return true;
             case R.id.action_edit_view_post_detail_activity:
                 Intent editPostIntent = new Intent(this, EditPostActivity.class);
-                editPostIntent.putExtra(EditPostActivity.EXTRA_ACCESS_TOKEN, mAccessToken);
                 editPostIntent.putExtra(EditPostActivity.EXTRA_FULLNAME, mPost.getFullName());
                 editPostIntent.putExtra(EditPostActivity.EXTRA_TITLE, mPost.getTitle());
                 editPostIntent.putExtra(EditPostActivity.EXTRA_CONTENT, mPost.getSelfText());

File: app/src/main/java/ml/docilealligator/infinityforreddit/bottomsheetfragments/CommentMoreBottomSheetFragment.java
Patch:
@@ -108,7 +108,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
                 editTextView.setOnClickListener(view -> {
                     Intent intent = new Intent(activity, EditCommentActivity.class);
-                    intent.putExtra(EditCommentActivity.EXTRA_ACCESS_TOKEN, accessToken);
                     intent.putExtra(EditCommentActivity.EXTRA_FULLNAME, comment.getFullName());
                     intent.putExtra(EditCommentActivity.EXTRA_CONTENT, comment.getCommentMarkdown());
                     intent.putExtra(EditCommentActivity.EXTRA_POSITION, bundle.getInt(EXTRA_POSITION));

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchGfycatOrRedgifsVideoLinks.java
Patch:
@@ -101,9 +101,9 @@ protected Void doInBackground(Void... voids) {
             try {
                 JSONObject jsonObject = new JSONObject(response);
 				webm = jsonObject.getJSONObject(JSONUtils.GFY_ITEM_KEY)
-                            .getJSONObject(JSONUtils.GFY_CONTENT_KEY)
+                            .getJSONObject(JSONUtils.CONTENT_URLS_KEY)
                             .getJSONObject(JSONUtils.WEBM_KEY)
-                            .getString(JSONUtils.GFY_URL_KEY);
+                            .getString(JSONUtils.URL_KEY);
                 mp4 = jsonObject.getJSONObject(JSONUtils.GFY_ITEM_KEY).getString(JSONUtils.MP4_URL_KEY);
             } catch (JSONException e) {
                 e.printStackTrace();

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -109,7 +109,6 @@ public class JSONUtils {
     public static final String RESIZED_ICONS_KEY = "resized_icons";
     public static final String GFY_ITEM_KEY = "gfyItem";
     public static final String MP4_URL_KEY = "mp4Url";
-    public static final String WEBM_URL_KEY = "webmUrl";
     public static final String TYPE_KEY = "type";
     public static final String MP4_KEY = "mp4";
     public static final String THINGS_KEY = "things";
@@ -130,7 +129,6 @@ public class JSONUtils {
     public static final String TOTAL_KARMA_KEY = "total_karma";
     public static final String AWARDER_KARMA_KEY = "awarder_karma";
     public static final String AWARDEE_KARMA_KEY = "awardee_karma";
-    public static final String GFY_CONTENT_KEY = "content_urls";
-    public static final String GFY_URL_KEY = "url";
+    public static final String CONTENT_URLS_KEY = "content_urls";;
     public static final String WEBM_KEY = "webm";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -130,4 +130,7 @@ public class JSONUtils {
     public static final String TOTAL_KARMA_KEY = "total_karma";
     public static final String AWARDER_KARMA_KEY = "awarder_karma";
     public static final String AWARDEE_KARMA_KEY = "awardee_karma";
+    public static final String GFY_CONTENT_KEY = "content_urls";
+    public static final String GFY_URL_KEY = "url";
+    public static final String WEBM_KEY = "webm";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/JSONUtils.java
Patch:
@@ -130,4 +130,7 @@ public class JSONUtils {
     public static final String TOTAL_KARMA_KEY = "total_karma";
     public static final String AWARDER_KARMA_KEY = "awarder_karma";
     public static final String AWARDEE_KARMA_KEY = "awardee_karma";
+    public static final String GFY_CONTENT_KEY = "content_urls";
+    public static final String GFY_URL_KEY = "url";
+    public static final String WEBM_KEY = "webm";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -390,9 +390,7 @@ public void onStateChanged(AppBarLayout appBarLayout, State state) {
                     glide.load(getDrawable(R.drawable.subreddit_default_icon))
                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0)))
                             .into(iconGifImageView);
-                    iconGifImageView.setOnClickListener(view -> {
-                        //Do nothing as it is a default icon
-                    });
+                    iconGifImageView.setOnClickListener(null);
                 } else {
                     glide.load(subredditData.getIconUrl())
                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0)))

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewSubredditDetailActivity.java
Patch:
@@ -779,7 +779,7 @@ public void readFailed() {
 
             if (subscriptionReady) {
                 subscriptionReady = false;
-                if (subscribeSubredditChip.getText().equals(getResources().getString(R.string.subscribe))) {
+                if (getResources().getString(R.string.subscribe).contentEquals(subscribeSubredditChip.getText())) {
                     SubredditSubscription.subscribeToSubreddit(mOauthRetrofit, mRetrofit, mAccessToken,
                             subredditName, mAccountName, mRedditDataRoomDatabase,
                             new SubredditSubscription.SubredditSubscriptionListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewUserDetailActivity.java
Patch:
@@ -69,8 +69,8 @@
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.MarkPostAsReadInterface;
-import ml.docilealligator.infinityforreddit.RecyclerViewContentScrollingInterface;
 import ml.docilealligator.infinityforreddit.R;
+import ml.docilealligator.infinityforreddit.RecyclerViewContentScrollingInterface;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.SortType;
 import ml.docilealligator.infinityforreddit.SortTypeSelectionCallback;
@@ -416,7 +416,7 @@ public void onStateChanged(AppBarLayout appBarLayout, State state) {
 
                         if (subscriptionReady) {
                             subscriptionReady = false;
-                            if (subscribeUserChip.getText().equals(resources.getString(R.string.follow))) {
+                            if (resources.getString(R.string.follow).contentEquals(subscribeUserChip.getText())) {
                                 UserFollowing.followUser(mOauthRetrofit, mRetrofit, mAccessToken,
                                         username, mAccountName, subscribedUserDao, new UserFollowing.UserFollowingListener() {
                                             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/Utils.java
Patch:
@@ -40,7 +40,8 @@ public static String modifyMarkdown(String markdown) {
         StringBuilder regexed = new StringBuilder(markdown
                 .replaceAll("((?<=[\\s])|^)/[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com$0)")
                 .replaceAll("((?<=[\\s])|^)[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)")
-                .replaceAll("\\^{2,}", "^").replaceAll("#(?![# ])", "# "));
+                .replaceAll("\\^{2,}", "^")
+                .replaceAll("(?<![\\[\\(])#(?![# ])(?![\\w\\s]*[\\]\\)])", "# "));
 
         //Fix superscript
         int startIndex = regexed.indexOf("^");

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewImageOrGifActivity.java
Patch:
@@ -223,6 +223,7 @@ public void onImageLoaded() {
                             view.setDoubleTapZoomDpi(240);
                             view.setDoubleTapZoomStyle(SubsamplingScaleImageView.ZOOM_FOCUS_FIXED);
                             view.setQuickScaleEnabled(true);
+                            view.resetScaleAndCenter();
                         }
 
                         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurImageFragment.java
Patch:
@@ -104,6 +104,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         });
         imageView.setMinimumDpi(80);
         imageView.setDoubleTapZoomDpi(240);
+        imageView.resetScaleAndCenter();
 
         errorLinearLayout.setOnClickListener(view -> {
             progressBar.setVisibility(View.VISIBLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryImageOrGifFragment.java
Patch:
@@ -141,6 +141,7 @@ public void onImageLoaded() {
                             view.setDoubleTapZoomDpi(240);
                             view.setDoubleTapZoomStyle(SubsamplingScaleImageView.ZOOM_FOCUS_FIXED);
                             view.setQuickScaleEnabled(true);
+                            view.resetScaleAndCenter();
                         }
 
                         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -1774,6 +1774,7 @@ protected void onDestroy() {
         EventBus.getDefault().unregister(this);
         super.onDestroy();
         Bridge.clear(this);
+        BigImageViewer.imageLoader().cancelAll();
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/InboxActivity.java
Patch:
@@ -166,7 +166,7 @@ protected void onCreate(Bundle savedInstanceState) {
             mNewAccountName = getIntent().getStringExtra(EXTRA_NEW_ACCOUNT_NAME);
             getCurrentAccountAndFetchMessage(savedInstanceState);
         }
-        
+
         viewPager.addOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
             @Override
             public void onPageSelected(int position) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/NavigationDrawerRecyclerViewAdapter.java
Patch:
@@ -293,7 +293,7 @@ public void onAuthenticationSucceeded(
                             drawableId = R.drawable.ic_outline_lock_24dp;
                             break;
                         case 10:
-                            stringId = R.string.saved;
+                            stringId = R.string.account_saved_thing_activity_label;
                             drawableId = R.drawable.ic_outline_bookmarks_24dp;
                             break;
                         case 11:

File: app/src/main/java/ml/docilealligator/infinityforreddit/settings/PostHistoryFragment.java
Patch:
@@ -71,6 +71,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             infoTextView.setText(R.string.only_for_logged_in_user);
             markPostsAsReadLinearLayout.setVisibility(View.GONE);
             markPostsAsReadAfterVotingLinearLayout.setVisibility(View.GONE);
+            markPostsAsReadOnScrollLinearLayout.setVisibility(View.GONE);
+            hideReadPostsAutomaticallyLinearLayout.setVisibility(View.GONE);
             return rootView;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostFilterPreferenceActivity.java
Patch:
@@ -59,6 +59,8 @@ public class PostFilterPreferenceActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_post_filter_preference);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostFilterUsageListingActivity.java
Patch:
@@ -70,6 +70,8 @@ public class PostFilterUsageListingActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_post_filter_application);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -281,7 +281,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 int navBarHeight = getNavBarHeight();
                 if (navBarHeight > 0) {
                     CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) fab.getLayoutParams();
-                    params.bottomMargin = navBarHeight;
+                    params.bottomMargin += navBarHeight;
                     fab.setLayoutParams(params);
                     mRecyclerView.setPadding(0, 0, 0, navBarHeight + mRecyclerView.getPaddingBottom());
                     showToast = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostVideoActivity.java
Patch:
@@ -27,7 +27,7 @@
 import com.google.android.exoplayer2.ExoPlayerFactory;
 import com.google.android.exoplayer2.Player;
 import com.google.android.exoplayer2.SimpleExoPlayer;
-import com.google.android.exoplayer2.source.ExtractorMediaSource;
+import com.google.android.exoplayer2.source.ProgressiveMediaSource;
 import com.google.android.exoplayer2.ui.PlayerView;
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
@@ -424,7 +424,7 @@ private void loadVideo() {
         constraintLayout.setVisibility(View.GONE);
         selectAgainTextView.setVisibility(View.VISIBLE);
         videoPlayerView.setVisibility(View.VISIBLE);
-        player.prepare(new ExtractorMediaSource.Factory(dataSourceFactory).createMediaSource(videoUri));
+        player.prepare(new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(videoUri));
         player.setPlayWhenReady(true);
         wasPlaying = true;
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -73,6 +73,7 @@
 import ml.docilealligator.infinityforreddit.settings.MiscellaneousPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.NotificationPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.NsfwAndBlurringFragment;
+import ml.docilealligator.infinityforreddit.settings.PostHistoryFragment;
 import ml.docilealligator.infinityforreddit.settings.SecurityPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.ThemePreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.TranslationFragment;
@@ -230,4 +231,6 @@ public interface AppComponent {
     void inject(SubredditFilterPopularAndAllActivity subredditFilterPopularAndAllActivity);
 
     void inject(CustomizePostFilterActivity customizePostFilterActivity);
+
+    void inject(PostHistoryFragment postHistoryFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SettingsActivity.java
Patch:
@@ -35,6 +35,7 @@
 import ml.docilealligator.infinityforreddit.settings.InterfacePreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.MainPreferenceFragment;
 import ml.docilealligator.infinityforreddit.settings.NsfwAndBlurringFragment;
+import ml.docilealligator.infinityforreddit.settings.PostHistoryFragment;
 
 public class SettingsActivity extends BaseActivity implements
         PreferenceFragmentCompat.OnPreferenceStartFragmentCallback {
@@ -168,6 +169,8 @@ public boolean onPreferenceStartFragment(PreferenceFragmentCompat caller, Prefer
             args.putString(NsfwAndBlurringFragment.EXTRA_ACCOUNT_NAME, mAccountName);
         } else if (fragment instanceof CustomizeBottomAppBarFragment) {
             args.putString(CustomizeBottomAppBarFragment.EXTRA_ACCOUNT_NAME, mAccountName);
+        } else if (fragment instanceof PostHistoryFragment) {
+            args.putString(PostHistoryFragment.EXTRA_ACCOUNT_NAME, mAccountName);
         }
         fragment.setArguments(args);
         fragment.setTargetFragment(caller, 0);

File: app/src/main/java/ml/docilealligator/infinityforreddit/readpost/InsertReadPost.java
Patch:
@@ -27,7 +27,9 @@ protected Void doInBackground(Void... voids) {
             if (readPostDao.getReadPostsCount() > 500) {
                 readPostDao.deleteOldestReadPosts(username);
             }
-            readPostDao.insert(new ReadPost(username, postId));
+            if (username != null && !username.equals("")) {
+                readPostDao.insert(new ReadPost(username, postId));
+            }
             return null;
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredThingActivity.java
Patch:
@@ -187,6 +187,8 @@ protected void onCreate(Bundle savedInstanceState) {
         }
         PostFilter postFilter = new PostFilter();
         switch (filter) {
+            case Post.NSFW_TYPE:
+                postFilter.onlyNSFW = true;
             case Post.TEXT_TYPE:
                 postFilter.containsTextType = true;
                 break;

File: app/src/main/java/ml/docilealligator/infinityforreddit/FragmentCommunicator.java
Patch:
@@ -35,4 +35,7 @@ default void stopRefreshProgressbar() {
     }
 
     void applyTheme();
+
+    default void hideReadPosts() {
+    }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/SharedPreferencesUtils.java
Patch:
@@ -194,6 +194,7 @@ public class SharedPreferencesUtils {
     public static final int MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_GO_TO_SUBREDDIT = 5;
     public static final int MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_GO_TO_USER = 6;
     public static final int MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_RANDOM = 7;
+    public static final int MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_HIDE_READ_POSTS = 8;
     public static final int OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_HOME = 0;
     public static final int OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_SUBSCRIPTIONS = 1;
     public static final int OTHER_ACTIVITIES_BOTTOM_APP_BAR_OPTION_INBOX = 2;

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/PostVideoActivity.java
Patch:
@@ -635,6 +635,8 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
     protected void onDestroy() {
         EventBus.getDefault().unregister(this);
         super.onDestroy();
+        player.seekToDefaultPosition();
+        player.stop(true);
         player.release();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewVideoActivity.java
Patch:
@@ -397,6 +397,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
+        player.seekToDefaultPosition();
+        player.stop(true);
         player.release();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewImgurVideoFragment.java
Patch:
@@ -278,6 +278,8 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
     @Override
     public void onDestroy() {
         super.onDestroy();
+        player.seekToDefaultPosition();
+        player.stop(true);
         player.release();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/fragments/ViewRedditGalleryVideoFragment.java
Patch:
@@ -282,6 +282,8 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
     @Override
     public void onDestroy() {
         super.onDestroy();
+        player.seekToDefaultPosition();
+        player.stop(true);
         player.release();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/subreddit/SubredditListingDataSource.java
Patch:
@@ -83,7 +83,7 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull LoadCallback<
         this.params = params;
         this.callback = callback;
 
-        if (params.key.equals("") || params.key.equals("null")) {
+        if (params.key == null || params.key.equals("") || params.key.equals("null")) {
             return;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/FilteredThingActivity.java
Patch:
@@ -159,12 +159,11 @@ protected void onCreate(Bundle savedInstanceState) {
             mAccessToken = savedInstanceState.getString(ACCESS_TOKEN_STATE);
             mAccountName = savedInstanceState.getString(ACCOUNT_NAME_STATE);
 
-            mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
-            getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_filtered_posts_activity, mFragment).commit();
-
             if (!mNullAccessToken && mAccessToken == null) {
                 getCurrentAccountAndBindView(filter);
             } else {
+                mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
+                getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_filtered_posts_activity, mFragment).commit();
                 bindView(filter, false);
             }
         } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SearchSubredditsResultActivity.java
Patch:
@@ -114,6 +114,7 @@ protected void onCreate(Bundle savedInstanceState) {
             mNullAccessToken = savedInstanceState.getBoolean(NULL_ACCESS_TOKEN_STATE);
             mAccessToken = savedInstanceState.getString(ACCESS_TOKEN_STATE);
             mAccountName = savedInstanceState.getString(ACCOUNT_NAME_STATE);
+
             if (!mNullAccessToken && mAccessToken == null) {
                 getCurrentAccountAndInitializeFragment(query);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/SubredditSelectionActivity.java
Patch:
@@ -133,12 +133,11 @@ protected void onCreate(Bundle savedInstanceState) {
             mAccountName = savedInstanceState.getString(ACCOUNT_NAME_STATE);
             mAccountProfileImageUrl = savedInstanceState.getString(ACCOUNT_PROFILE_IMAGE_URL);
 
-            mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
-            getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_subreddit_selection_activity, mFragment).commit();
-
             if (!mNullAccessToken && mAccountName == null) {
                 getCurrentAccountAndBindView();
             } else {
+                mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
+                getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_subreddit_selection_activity, mFragment).commit();
                 bindView(false);
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewMultiRedditDetailActivity.java
Patch:
@@ -158,11 +158,11 @@ protected void onCreate(Bundle savedInstanceState) {
             mAccountName = savedInstanceState.getString(ACCOUNT_NAME_STATE);
             isInLazyMode = savedInstanceState.getBoolean(IS_IN_LAZY_MODE_STATE);
 
-            mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE_KEY);
-            getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_view_multi_reddit_detail_activity, mFragment).commit();
-
             if (!mNullAccessToken && mAccessToken == null) {
                 getCurrentAccountAndInitializeFragment();
+            } else {
+                mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE_KEY);
+                getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_view_multi_reddit_detail_activity, mFragment).commit();
             }
         } else {
             getCurrentAccountAndInitializeFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadMediaService.java
Patch:
@@ -424,7 +424,7 @@ private void writeResponseBodyToDisk(ResponseBody body) throws IOException {
                     contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, destinationFileUriString);
                     contentValues.put(mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.IS_PENDING : MediaStore.Images.Media.IS_PENDING, 1);
 
-                    final Uri contentUri = mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.EXTERNAL_CONTENT_URI : MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
+                    final Uri contentUri = mediaType == EXTRA_MEDIA_TYPE_VIDEO ? MediaStore.Video.Media.getContentUri(MediaStore.VOLUME_EXTERNAL) : MediaStore.Images.Media.getContentUri(MediaStore.VOLUME_EXTERNAL);
                     Uri uri = contentResolver.insert(contentUri, contentValues);
 
                     if (uri == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -599,7 +599,7 @@ private void copyToDestination(String srcPath) throws IOException {
                     Uri uri = null;
 
                     try {
-                        final Uri contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;
+                        final Uri contentUri = MediaStore.Video.Media.getContentUri(MediaStore.VOLUME_EXTERNAL);
                         uri = contentResolver.insert(contentUri, contentValues);
 
                         if (uri == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/services/DownloadRedditVideoService.java
Patch:
@@ -567,7 +567,7 @@ private boolean muxVideoAndAudio(String videoFilePath, String audioFilePath, Str
 
                 muxer.stop();
                 muxer.release();
-            } catch (IllegalArgumentException ignore) {
+            } catch (IllegalArgumentException | IllegalStateException ignore) {
             } catch (IOException e) {
                 e.printStackTrace();
                 return false;

File: app/src/main/java/ml/docilealligator/infinityforreddit/utils/APIUtils.java
Patch:
@@ -41,7 +41,7 @@ public class APIUtils {
     public static final String AUTHORIZATION_KEY = "Authorization";
     public static final String AUTHORIZATION_BASE = "bearer ";
     public static final String USER_AGENT_KEY = "User-Agent";
-    public static final String USER_AGENT = "android:ml.docilealligator.infinityforreddit:v4.1.0-beta5 (by /u/Hostilenemy)";
+    public static final String USER_AGENT = "android:ml.docilealligator.infinityforreddit:v4.1.0-beta6 (by /u/Hostilenemy)";
 
     public static final String GRANT_TYPE_KEY = "grant_type";
     public static final String GRANT_TYPE_REFRESH_TOKEN = "refresh_token";

File: app/src/main/java/ml/docilealligator/infinityforreddit/adapters/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -862,7 +862,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 ((PostDetailVideoAutoplayViewHolder) holder).setVolume(mMuteAutoplayingVideos || (mPost.isNSFW() && mMuteNSFWVideo) ? 0f : 1f);
 
                 if (mPost.isGfycat() || mPost.isRedgifs() && !mPost.isLoadGfyOrRedgifsVideoSuccess()) {
-                    ((PostDetailVideoAutoplayViewHolder) holder).mTypeTextView.setText("GFYCAT");
                     ((PostDetailVideoAutoplayViewHolder) holder).fetchGfycatOrRedgifsVideoLinks = new FetchGfycatOrRedgifsVideoLinks(new FetchGfycatOrRedgifsVideoLinks.FetchGfycatOrRedgifsVideoLinksListener() {
                         @Override
                         public void success(String webm, String mp4) {
@@ -881,7 +880,6 @@ public void failed(int errorCode) {
                             .fetchGfycatOrRedgifsVideoLinksInRecyclerViewAdapter(mGfycatRetrofit, mRedgifsRetrofit,
                                     mPost.getGfycatId(), mPost.isGfycat(), mAutomaticallyTryRedgifs);
                 } else {
-                    ((PostDetailVideoAutoplayViewHolder) holder).mTypeTextView.setText("VIDEO");
                     ((PostDetailVideoAutoplayViewHolder) holder).bindVideoUri(Uri.parse(mPost.getVideoUrl()));
                 }
             } else if (holder instanceof PostDetailVideoAndGifPreviewHolder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/activities/ViewPostDetailActivity.java
Patch:
@@ -1839,6 +1839,9 @@ public void lockSwipeRightToGoBack() {
         if (mSlidrInterface != null) {
             mSlidrInterface.lock();
         }
+        if (touchHelper != null) {
+            touchHelper.attachToRecyclerView(null);
+        }
     }
 
     public void unlockSwipeRightToGoBack() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Settings/AboutPreferenceFragment.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import android.app.Activity;
+import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
@@ -74,9 +75,9 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             emailPreference.setOnPreferenceClickListener(preference -> {
                 Intent intent = new Intent(Intent.ACTION_SENDTO);
                 intent.setData(Uri.parse("mailto:docilealligator.app@gmail.com"));
-                if (intent.resolveActivity(activity.getPackageManager()) != null) {
+                try {
                     startActivity(intent);
-                } else {
+                } catch (ActivityNotFoundException e) {
                     Toast.makeText(activity, R.string.no_email_client, Toast.LENGTH_SHORT).show();
                 }
                 return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/BaseActivity.java
Patch:
@@ -239,7 +239,7 @@ public void onStateChanged(AppBarLayout appBarLayout, AppBarStateChangeListener.
     }
 
     public int getNavBarHeight() {
-        if (getDefaultSharedPreferences().getBoolean(SharedPreferencesUtils.IMMERSIVE_INTERFACE_IGNORE_NAV_BAR_KEY, false)) {
+        if (isImmersiveInterfaceApplicable && immersiveInterface && getDefaultSharedPreferences().getBoolean(SharedPreferencesUtils.IMMERSIVE_INTERFACE_IGNORE_NAV_BAR_KEY, false)) {
             return 0;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -3351,6 +3351,7 @@ public class CommentViewHolder extends RecyclerView.ViewHolder {
                 constraintSet.clear(expandButton.getId(), ConstraintSet.END);
                 constraintSet.clear(saveButton.getId(), ConstraintSet.END);
                 constraintSet.clear(replyButton.getId(), ConstraintSet.END);
+                constraintSet.clear(moreButton.getId(), ConstraintSet.END);
                 constraintSet.connect(upvoteButton.getId(), ConstraintSet.END, scoreTextView.getId(), ConstraintSet.START);
                 constraintSet.connect(scoreTextView.getId(), ConstraintSet.END, downvoteButton.getId(), ConstraintSet.START);
                 constraintSet.connect(downvoteButton.getId(), ConstraintSet.END, ConstraintSet.PARENT_ID, ConstraintSet.END);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ThemePreviewPostsFragment.java
Patch:
@@ -129,7 +129,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         crosspostImageView.setColorFilter(customTheme.crosspostIconTint, PorterDuff.Mode.SRC_IN);
         linkTextView.setTextColor(customTheme.secondaryTextColor);
         progressBar.setIndeterminateTintList(ColorStateList.valueOf(customTheme.colorAccent));
-        noPreviewLinkImageView.setBackgroundColor(customTheme.noPreviewLinkBackgroundColor);
+        noPreviewLinkImageView.setBackgroundColor(customTheme.noPreviewPostTypeBackgroundColor);
         upvoteButton.setColorFilter(customTheme.postIconAndInfoColor, android.graphics.PorterDuff.Mode.SRC_IN);
         scoreTextView.setTextColor(customTheme.postIconAndInfoColor);
         downvoteButton.setColorFilter(customTheme.postIconAndInfoColor, android.graphics.PorterDuff.Mode.SRC_IN);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadMediaService.java
Patch:
@@ -284,7 +284,8 @@ public void onFailure(@NonNull Call<ResponseBody> call, @NonNull Throwable t) {
                 downloadFinished(null, ERROR_FILE_CANNOT_DOWNLOAD);
             }
         });
-        return super.onStartCommand(intent, flags, startId);
+
+        return START_NOT_STICKY;
     }
 
     private Notification createNotification(String fileName) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadRedditVideoService.java
Patch:
@@ -568,7 +568,7 @@ private boolean muxVideoAndAudio(String videoFilePath, String audioFilePath, Str
 
                 muxer.stop();
                 muxer.release();
-            } catch (IllegalStateException ignore) {
+            } catch (IllegalArgumentException ignore) {
             } catch (IOException e) {
                 e.printStackTrace();
                 return false;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountSavedThingActivity.java
Patch:
@@ -221,6 +221,8 @@ public void onPageSelected(int position) {
                 }
             }
         });
+
+        fixViewPager2Sensitivity(viewPager2);
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchResultActivity.java
Patch:
@@ -249,6 +249,8 @@ public void onPageSelected(int position) {
                     break;
             }
         }).attach();
+        fixViewPager2Sensitivity(viewPager2);
+
         if (mAccountName != null && !mInsertSearchQuerySuccess && mQuery != null) {
             InsertRecentSearchQuery.insertRecentSearchQueryListener(mRedditDataRoomDatabase, mAccountName,
                     mQuery, () -> mInsertSearchQuerySuccess = true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -838,6 +838,7 @@ public void onPageSelected(int position) {
                     tab.setText(R.string.sidebar);
             }
         }).attach();
+        fixViewPager2Sensitivity(viewPager2);
 
         boolean viewSidebar = getIntent().getBooleanExtra(EXTRA_VIEW_SIDEBAR, false);
         if (viewSidebar) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -562,6 +562,8 @@ public void onPageSelected(int position) {
             }
         });
 
+        fixViewPager2Sensitivity(viewPager2);
+
         if (mAccessToken != null && mMessageFullname != null) {
             ReadMessage.readMessage(mOauthRetrofit, mAccessToken, mMessageFullname, new ReadMessage.ReadMessageListener() {
                 @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/ParsePost.java
Patch:
@@ -3,7 +3,6 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.text.Html;
-import android.util.Log;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -563,7 +562,6 @@ protected Void doInBackground(Void... voids) {
                             boolean availablePost = true;
                             if (subredditFilterList != null) {
                                 for (SubredditFilter subredditFilter : subredditFilterList) {
-                                    Log.i("sasdfasdf", subredditFilter.getSubredditName() + " " + post.getSubredditName());
                                     if (subredditFilter.getSubredditName().equals(post.getSubredditName())) {
                                         availablePost = false;
                                         break;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/GiveAwardActivity.java
Patch:
@@ -139,7 +139,7 @@ private void bindView() {
                                     @Override
                                     public void success(String awardsHTML, int awardCount) {
                                         Intent data = new Intent();
-                                        data.putExtra(EXTRA_ITEM_POSITION, itemPosition);
+                                        data.putExtra(EXTRA_RETURN_ITEM_POSITION, itemPosition);
                                         data.putExtra(EXTRA_RETURN_NEW_AWARDS, awardsHTML);
                                         data.putExtra(EXTRA_RETURN_NEW_AWARDS_COUNT, awardCount);
                                         setResult(RESULT_OK, data);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -1228,7 +1228,7 @@ private void goToSubreddit() {
             imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
         }
         new MaterialAlertDialogBuilder(this, R.style.MaterialAlertDialogTheme)
-                .setTitle(R.string.go_to_user)
+                .setTitle(R.string.go_to_subreddit)
                 .setView(thingEditText)
                 .setPositiveButton(R.string.ok, (dialogInterface, i)
                         -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -124,8 +124,8 @@ public class ViewPostDetailActivity extends BaseActivity implements FlairBottomS
     public static final String EXTRA_MESSAGE_FULLNAME = "ENI";
     public static final String EXTRA_NEW_ACCOUNT_NAME = "ENAN";
     public static final int EDIT_COMMENT_REQUEST_CODE = 3;
+    public static final int GIVE_AWARD_REQUEST_CODE = 100;
     private static final int EDIT_POST_REQUEST_CODE = 2;
-    private static final int GIVE_AWARD_REQUEST_CODE = 100;
     @State
     boolean mNullAccessToken = false;
     @State

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -1112,7 +1112,7 @@ private void goToSubreddit() {
             imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
         }
         new MaterialAlertDialogBuilder(this, R.style.MaterialAlertDialogTheme)
-                .setTitle(R.string.go_to_user)
+                .setTitle(R.string.go_to_subreddit)
                 .setView(thingEditText)
                 .setPositiveButton(R.string.ok, (dialogInterface, i)
                         -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1878,6 +1878,7 @@ public void giveAward(String awardsHTML, int awardCount, int position) {
                 notifyItemChanged(0);
             }
         } else {
+            position = mIsSingleCommentThreadMode ? position + 2 : position + 1;
             Comment comment = getCurrentComment(position);
             if (comment != null) {
                 comment.addAwards(awardsHTML);
@@ -3300,8 +3301,9 @@ public class CommentViewHolder extends RecyclerView.ViewHolder {
                 if (comment != null) {
                     Bundle bundle = new Bundle();
                     if (!mPost.isArchived() && !mPost.isLocked() && comment.getAuthor().equals(mAccountName)) {
-                        bundle.putString(CommentMoreBottomSheetFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
+                        bundle.putBoolean(CommentMoreBottomSheetFragment.EXTRA_EDIT_AND_DELETE_AVAILABLE, true);
                     }
+                    bundle.putString(CommentMoreBottomSheetFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                     bundle.putParcelable(CommentMoreBottomSheetFragment.EXTRA_COMMENT, comment);
                     if (mIsSingleCommentThreadMode) {
                         bundle.putInt(CommentMoreBottomSheetFragment.EXTRA_POSITION, getAdapterPosition() - 2);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/FetchPost.java
Patch:
@@ -1,7 +1,5 @@
 package ml.docilealligator.infinityforreddit.Post;
 
-import android.util.Log;
-
 import androidx.annotation.NonNull;
 
 import java.util.Locale;
@@ -60,7 +58,6 @@ public static void fetchRandomPost(Retrofit retrofit, boolean isNSFW, FetchRando
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {
                 if (response.isSuccessful()) {
-                    Log.i("asdasdf", "s " + response.body());
                     new ParsePost.ParseRandomPostAsyncTask(response.body(), isNSFW, new ParsePost.ParseRandomPostListener() {
 
                         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -572,7 +572,7 @@ private void bindView() {
                     fab.setImageResource(R.drawable.ic_refresh_24dp);
                     break;
                 case SharedPreferencesUtils.MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_CHANGE_SORT_TYPE:
-                    fab.setImageResource(R.drawable.ic_sort_24dp);
+                    fab.setImageResource(R.drawable.ic_sort_toolbar_24dp);
                     break;
                 case SharedPreferencesUtils.MAIN_ACTIVITY_BOTTOM_APP_BAR_FAB_CHANGE_POST_LAYOUT:
                     fab.setImageResource(R.drawable.ic_post_layout_24dp);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -673,7 +673,7 @@ public void readFailed() {
                     fab.setImageResource(R.drawable.ic_refresh_24dp);
                     break;
                 case SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_FAB_CHANGE_SORT_TYPE:
-                    fab.setImageResource(R.drawable.ic_sort_24dp);
+                    fab.setImageResource(R.drawable.ic_sort_toolbar_24dp);
                     break;
                 case SharedPreferencesUtils.OTHER_ACTIVITIES_BOTTOM_APP_BAR_FAB_CHANGE_POST_LAYOUT:
                     fab.setImageResource(R.drawable.ic_post_layout_24dp);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -216,6 +216,7 @@ public class ViewPostDetailActivity extends BaseActivity implements FlairBottomS
     private boolean mLockFab;
     private boolean mSwipeUpToHideFab;
     private boolean mExpandChildren;
+    private boolean mRespectSubredditRecommendedSortType;
     private int mWindowWidth;
     private LinearLayoutManager mLinearLayoutManager;
     private CommentAndPostRecyclerViewAdapter mAdapter;
@@ -296,6 +297,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mLockFab = mSharedPreferences.getBoolean(SharedPreferencesUtils.LOCK_JUMP_TO_NEXT_TOP_LEVEL_COMMENT_BUTTON, false);
         mSwipeUpToHideFab = mSharedPreferences.getBoolean(SharedPreferencesUtils.SWIPE_UP_TO_HIDE_JUMP_TO_NEXT_TOP_LEVEL_COMMENT_BUTTON, false);
         mExpandChildren = !mSharedPreferences.getBoolean(SharedPreferencesUtils.SHOW_TOP_LEVEL_COMMENTS_FIRST, false);
+        mRespectSubredditRecommendedSortType = mSharedPreferences.getBoolean(SharedPreferencesUtils.RESPECT_SUBREDDIT_RECOMMENDED_COMMENT_SORT_TYPE, false);
 
         mGlide = Glide.with(this);
         Resources resources = getResources();

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -68,6 +68,7 @@
 import ml.docilealligator.infinityforreddit.Settings.DownloadLocationPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.GesturesAndButtonsPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.MainPreferenceFragment;
+import ml.docilealligator.infinityforreddit.Settings.MiscellaneousPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.NotificationPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.NsfwAndBlurringFragment;
 import ml.docilealligator.infinityforreddit.Settings.SecurityPreferenceFragment;
@@ -221,4 +222,6 @@ public interface AppComponent {
     void inject(TranslationFragment translationFragment);
 
     void inject(FetchRandomSubredditOrPostActivity fetchRandomSubredditOrPostActivity);
+
+    void inject(MiscellaneousPreferenceFragment miscellaneousPreferenceFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -135,6 +135,7 @@ public class SharedPreferencesUtils {
     public static final String DATA_SAVING_MODE_ONLY_ON_CELLULAR_DATA = "1";
     public static final String DATA_SAVING_MODE_ALWAYS = "2";
     public static final String NATIONAL_FLAGS = "national_flags";
+    public static final String RESPECT_SUBREDDIT_RECOMMENDED_COMMENT_SORT_TYPE = "respect_subreddit_recommended_comment_sort_type";
 
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";
     public static final String MAIN_PAGE_TAB_COUNT = "_main_page_tab_count";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemeListingActivity.java
Patch:
@@ -87,6 +87,8 @@ public class CustomThemeListingActivity extends BaseActivity implements
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_custom_theme_listing);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemePreviewActivity.java
Patch:
@@ -59,7 +59,7 @@
 import static androidx.appcompat.app.AppCompatDelegate.MODE_NIGHT_NO;
 import static androidx.appcompat.app.AppCompatDelegate.MODE_NIGHT_YES;
 
-public class ThemePreviewActivity extends AppCompatActivity {
+public class CustomThemePreviewActivity extends AppCompatActivity {
 
     public static final String EXTRA_CUSTOM_THEME_SETTINGS_ITEMS = "ECTSI";
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LoginActivity.java
Patch:
@@ -80,7 +80,10 @@ public class LoginActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
+
         try {
             setContentView(R.layout.activity_login);
         } catch (InflateException ie) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -435,7 +435,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);
@@ -460,7 +460,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -9,6 +9,7 @@
 import ml.docilealligator.infinityforreddit.Activity.CommentFullMarkdownActivity;
 import ml.docilealligator.infinityforreddit.Activity.CreateMultiRedditActivity;
 import ml.docilealligator.infinityforreddit.Activity.CustomThemeListingActivity;
+import ml.docilealligator.infinityforreddit.Activity.CustomThemePreviewActivity;
 import ml.docilealligator.infinityforreddit.Activity.CustomizeThemeActivity;
 import ml.docilealligator.infinityforreddit.Activity.EditCommentActivity;
 import ml.docilealligator.infinityforreddit.Activity.EditMultiRedditActivity;
@@ -37,7 +38,6 @@
 import ml.docilealligator.infinityforreddit.Activity.SubredditMultiselectionActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubredditSelectionActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubscribedThingListingActivity;
-import ml.docilealligator.infinityforreddit.Activity.ThemePreviewActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewImageOrGifActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewImgurMediaActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewMultiRedditDetailActivity;
@@ -170,7 +170,7 @@ public interface AppComponent {
 
     void inject(AdvancedPreferenceFragment advancedPreferenceFragment);
 
-    void inject(ThemePreviewActivity themePreviewActivity);
+    void inject(CustomThemePreviewActivity customThemePreviewActivity);
 
     void inject(EditMultiRedditActivity editMultiRedditActivity);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/CommentsListingFragment.java
Patch:
@@ -194,7 +194,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);
@@ -219,7 +219,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/PostFragment.java
Patch:
@@ -295,7 +295,7 @@ protected int getVerticalSnapPreference() {
         if (resources.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
             nColumns = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.NUMBER_OF_COLUMNS_IN_POST_FEED_PORTRAIT, "1"));
         } else {
-            nColumns = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.NUMBER_OF_COLUMNS_IN_POST_FEED_LANDSCAPE, "1"));
+            nColumns = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.NUMBER_OF_COLUMNS_IN_POST_FEED_LANDSCAPE, "2"));
         }
 
         if (nColumns == 1) {
@@ -714,7 +714,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);
@@ -739,7 +739,7 @@ public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @
                             exceedThreshold = true;
                             if (vibrateWhenActionTriggered && v != null) {
                                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                                    v.vibrate(VibrationEffect.createOneShot(10, 175));
+                                    v.vibrate(VibrationEffect.createOneShot(10, 255));
                                 } else {
                                     //deprecated in API 26
                                     v.vibrate(10);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ThemePreviewCommentsFragment.java
Patch:
@@ -14,7 +14,7 @@
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
-import ml.docilealligator.infinityforreddit.Activity.ThemePreviewActivity;
+import ml.docilealligator.infinityforreddit.Activity.CustomThemePreviewActivity;
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomTheme;
 import ml.docilealligator.infinityforreddit.R;
 
@@ -95,7 +95,7 @@ public class ThemePreviewCommentsFragment extends Fragment {
     TextView scoreTextViewFullyCollapsed;
     @BindView(R.id.time_text_view_fully_collapsed_theme_preview_comments_fragment)
     TextView timeTextViewFullyCollapsed;
-    private ThemePreviewActivity activity;
+    private CustomThemePreviewActivity activity;
 
     public ThemePreviewCommentsFragment() {
         // Required empty public constructor
@@ -149,6 +149,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
     @Override
     public void onAttach(@NonNull Context context) {
         super.onAttach(context);
-        activity = (ThemePreviewActivity) context;
+        activity = (CustomThemePreviewActivity) context;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ThemePreviewPostsFragment.java
Patch:
@@ -24,7 +24,7 @@
 import butterknife.BindView;
 import butterknife.ButterKnife;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
-import ml.docilealligator.infinityforreddit.Activity.ThemePreviewActivity;
+import ml.docilealligator.infinityforreddit.Activity.CustomThemePreviewActivity;
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomTheme;
 import ml.docilealligator.infinityforreddit.CustomView.AspectRatioGifImageView;
 import ml.docilealligator.infinityforreddit.R;
@@ -84,7 +84,7 @@ public class ThemePreviewPostsFragment extends Fragment {
     ImageView saveButton;
     @BindView(R.id.share_button_theme_preview_posts_fragment)
     ImageView shareButton;
-    private ThemePreviewActivity activity;
+    private CustomThemePreviewActivity activity;
 
     public ThemePreviewPostsFragment() {
         // Required empty public constructor
@@ -148,6 +148,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
     @Override
     public void onAttach(@NonNull Context context) {
         super.onAttach(context);
-        activity = (ThemePreviewActivity) context;
+        activity = (CustomThemePreviewActivity) context;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadMediaService.java
Patch:
@@ -302,6 +302,7 @@ private void downloadFinished(Uri destinationFileUri, String fileName, int error
                         Intent intent = new Intent();
                         intent.setAction(android.content.Intent.ACTION_VIEW);
                         intent.setDataAndType(destinationFileUri, mimeType);
+                        intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                         PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
                         updateNotification(R.string.downloading_media_finished, fileName, pendingIntent);
                         EventBus.getDefault().post(new DownloadMediaEvent(true));

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadRedditVideoService.java
Patch:
@@ -306,6 +306,7 @@ private void downloadFinished(Uri destinationFileUri, String fileName, int error
                         Intent intent = new Intent();
                         intent.setAction(android.content.Intent.ACTION_VIEW);
                         intent.setDataAndType(destinationFileUri, "video/*");
+                        intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                         PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
                         updateNotification(R.string.downloading_reddit_video_finished, fileName, pendingIntent);
                         EventBus.getDefault().post(new DownloadRedditVideoEvent(true));

File: app/src/main/java/ml/docilealligator/infinityforreddit/Subreddit/ParseSubredditData.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.os.AsyncTask;
 
+import androidx.annotation.Nullable;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -20,6 +22,7 @@ static void parseSubredditListingData(String response, boolean nsfw, ParseSubred
         new ParseSubredditListingDataAsyncTask(response, nsfw, parseSubredditListingDataListener).execute();
     }
 
+    @Nullable
     private static SubredditData parseSubredditData(JSONObject subredditDataJsonObject, boolean nsfw) throws JSONException {
         boolean isNSFW = !subredditDataJsonObject.isNull(JSONUtils.OVER18_KEY) && subredditDataJsonObject.getBoolean(JSONUtils.OVER18_KEY);
         if (!nsfw && isNSFW) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchResultActivity.java
Patch:
@@ -382,6 +382,7 @@ public Fragment createFragment(int position) {
                     bundle.putString(PostFragment.EXTRA_QUERY, mQuery);
                     bundle.putInt(PostFragment.EXTRA_FILTER, PostFragment.EXTRA_NO_FILTER);
                     bundle.putString(PostFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
+                    bundle.putString(PostFragment.EXTRA_ACCOUNT_NAME, mAccountName);
                     mFragment.setArguments(bundle);
                     return mFragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -833,6 +833,7 @@ public void onPageSelected(int position) {
             switch (position) {
                 case 0:
                     tab.setText(R.string.posts);
+                    break;
                 case 1:
                     tab.setText(R.string.sidebar);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadRedditVideoService.java
Patch:
@@ -524,7 +524,6 @@ private boolean muxVideoAndAudio(String videoFilePath, String audioFilePath, Str
                         audioBufferInfo.flags = audioExtractor.getSampleFlags();
                         muxer.writeSampleData(audioTrack, audioBuf, audioBufferInfo);
                         audioExtractor.advance();
-
                     }
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/MarkdownBottomBarRecyclerViewAdapter.java
Patch:
@@ -65,7 +65,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     ((MarkdownBottomBarItemViewHolder) holder).imageView.setImageResource(R.drawable.ic_strikethrough_black_24dp);
                     break;
                 case HEADER:
-                    ((MarkdownBottomBarItemViewHolder) holder).imageView.setImageResource(R.drawable.ic_header_hashtag_black_24dp);
+                    ((MarkdownBottomBarItemViewHolder) holder).imageView.setImageResource(R.drawable.ic_title_24dp);
                     break;
                 case ORDERED_LIST:
                     ((MarkdownBottomBarItemViewHolder) holder).imageView.setImageResource(R.drawable.ic_ordered_list_black_24dp);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/ParsePost.java
Patch:
@@ -118,7 +118,7 @@ private static Post parseBasicData(JSONObject data) throws JSONException {
 
             JSONArray thumbnailPreviews = images.getJSONArray(JSONUtils.RESOLUTIONS_KEY);
             for (int i = 0; i < thumbnailPreviews.length(); i++) {
-                JSONObject thumbnailPreview = images.getJSONArray(JSONUtils.RESOLUTIONS_KEY).getJSONObject(2);
+                JSONObject thumbnailPreview = thumbnailPreviews.getJSONObject(i);
                 String thumbnailPreviewUrl = thumbnailPreview.getString(JSONUtils.URL_KEY);
                 int thumbnailPreviewWidth = thumbnailPreview.getInt(JSONUtils.WIDTH_KEY);
                 int thumbnailPreviewHeight = thumbnailPreview.getInt(JSONUtils.HEIGHT_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Subreddit/ParseSubredditData.java
Patch:
@@ -8,7 +8,6 @@
 
 import java.util.ArrayList;
 
-import ml.docilealligator.infinityforreddit.Subreddit.SubredditData;
 import ml.docilealligator.infinityforreddit.Utils.JSONUtils;
 import ml.docilealligator.infinityforreddit.Utils.Utils;
 
@@ -27,6 +26,8 @@ private static SubredditData parseSubredditData(JSONObject subredditDataJsonObje
         String description = subredditDataJsonObject.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
         String sidebarDescription = Utils.modifyMarkdown(subredditDataJsonObject.getString(JSONUtils.DESCRIPTION_KEY).trim());
         long createdUTC = subredditDataJsonObject.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
+        String suggestedCommentSort = subredditDataJsonObject.getString(JSONUtils.SUGGESTED_COMMENT_SORT_KEY);
+        boolean isNSFW = subredditDataJsonObject.getBoolean(JSONUtils.OVER18_KEY);
 
         String bannerImageUrl;
         if (subredditDataJsonObject.isNull(JSONUtils.BANNER_BACKGROUND_IMAGE_KEY)) {
@@ -54,7 +55,7 @@ private static SubredditData parseSubredditData(JSONObject subredditDataJsonObje
         }
 
         return new SubredditData(id, subredditFullName, iconUrl, bannerImageUrl, description,
-                sidebarDescription, nSubscribers, createdUTC);
+                sidebarDescription, nSubscribers, createdUTC, suggestedCommentSort, isNSFW);
     }
 
     interface ParseSubredditDataListener {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/JSONUtils.java
Patch:
@@ -125,4 +125,6 @@ public class JSONUtils {
     public static final String GIF_KEY = "gif";
     public static final String MAX_EMOJIS_KEY = "max_emojis";
     public static final String RICHTEXT_KEY = "richtext";
+    public static final String SUGGESTED_COMMENT_SORT_KEY = "suggested_comment_sort";
+    public static final String OVER18_KEY = "over18";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/ParsePost.java
Patch:
@@ -422,6 +422,7 @@ private static Post parseData(JSONObject data, String permalink, String id, Stri
                 if (!gallery.isEmpty()) {
                     post.setPostType(Post.GALLERY_TYPE);
                     post.setGallery(gallery);
+                    post.setPreviews(previews);
                 }
             } else if (post.getPostType() == Post.LINK_TYPE) {
                 Uri uri = Uri.parse(url);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -783,15 +783,13 @@ public void failed(int errorCode) {
                 }
 
                 if (mCompactLayoutToolbarHiddenByDefault) {
-                    mCallback.delayTransition();
                     ViewGroup.LayoutParams params = (LinearLayout.LayoutParams) ((PostCompactBaseViewHolder) holder).bottomConstraintLayout.getLayoutParams();
                     params.height = 0;
                     ((PostCompactBaseViewHolder) holder).bottomConstraintLayout.setLayoutParams(params);
                 } else {
                     ViewGroup.LayoutParams params = (LinearLayout.LayoutParams) ((PostCompactBaseViewHolder) holder).bottomConstraintLayout.getLayoutParams();
                     params.height = LinearLayout.LayoutParams.WRAP_CONTENT;
                     ((PostCompactBaseViewHolder) holder).bottomConstraintLayout.setLayoutParams(params);
-                    mCallback.delayTransition();
                 }
 
                 if (mShowDividerInCompactLayout) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostImageActivity.java
Patch:
@@ -254,6 +254,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 subredditSelected = true;
                 subredditNameTextView.setTextColor(primaryTextColor);
                 subredditNameTextView.setText(subredditName);
+                flairTextView.setVisibility(View.VISIBLE);
                 loadSubredditIcon();
             } else {
                 mGlide.load(R.drawable.subreddit_default_icon)

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostVideoActivity.java
Patch:
@@ -266,6 +266,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 subredditSelected = true;
                 subredditNameTextView.setTextColor(primaryTextColor);
                 subredditNameTextView.setText(subredditName);
+                flairTextView.setVisibility(View.VISIBLE);
                 loadSubredditIcon();
             } else {
                 mGlide.load(R.drawable.subreddit_default_icon)

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchActivity.java
Patch:
@@ -78,6 +78,8 @@ public class SearchActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.activity_search);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/GlideImageGetter.java
Patch:
@@ -87,10 +87,10 @@ private void setDrawable(Drawable drawable) {
             int drawableWidth = (int) (drawable.getIntrinsicWidth() * density);
             int drawableHeight = (int) (drawable.getIntrinsicHeight() * density);
             float ratio = (float) drawableWidth / (float) drawableHeight;
-            drawableHeight = (int) textSize;
+            drawableHeight = (int) (textSize * 1.5);
             drawableWidth = (int) (drawableHeight * ratio);
             int maxWidth = container.get().getMeasuredWidth();
-            if ((drawableWidth > maxWidth) || matchParentWidth) {
+            if ((maxWidth > 0 && (drawableWidth > maxWidth)) || matchParentWidth) {
                 int calculatedHeight = maxWidth * drawableHeight / drawableWidth;
                 drawable.setBounds(0, 0, maxWidth, calculatedHeight);
                 setBounds(0, 0, maxWidth, calculatedHeight);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -124,6 +124,8 @@ public class SharedPreferencesUtils {
     public static final String ENABLE_SWIPE_ACTION = "enable_swipe_action";
     public static final String PULL_TO_REFRESH = "pull_to_refresh";
     public static final String REQUIRE_AUTHENTICATION_TO_GO_TO_ACCOUNT_SECTION_IN_NAVIGATION_DRAWER = "require_auth_to_account_section";
+    public static final String LONG_PRESS_TO_HIDE_TOOLBAR_IN_COMPACT_LAYOUT = "long_press_to_hide_toolbar_in_compact_layout";
+    public static final String POST_COMPACT_LAYOUT_TOOLBAR_HIDDEN_BY_DEFAULT = "post_compact_layout_toolbar_hidden_by_default";
 
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";
     public static final String MAIN_PAGE_TAB_1_TITLE = "_main_page_tab_1_title";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/FlairBottomSheetRecyclerViewAdapter.java
Patch:
@@ -26,13 +26,13 @@
 public class FlairBottomSheetRecyclerViewAdapter extends RecyclerView.Adapter<FlairBottomSheetRecyclerViewAdapter.FlairViewHolder> {
     private Context context;
     private ArrayList<Flair> flairs;
-    private int flairColor;
+    private int flairTextColor;
     private ItemClickListener itemClickListener;
 
     public FlairBottomSheetRecyclerViewAdapter(Context context, CustomThemeWrapper customThemeWrapper,
                                                ItemClickListener itemClickListener) {
         this.context = context;
-        flairColor = customThemeWrapper.getFlairBackgroundColor();
+        flairTextColor = customThemeWrapper.getPrimaryTextColor();
         this.itemClickListener = itemClickListener;
     }
 
@@ -108,7 +108,7 @@ class FlairViewHolder extends RecyclerView.ViewHolder {
             super(itemView);
             ButterKnife.bind(this, itemView);
             this.itemView = itemView;
-            flairTextView.setTextColor(flairColor);
+            flairTextView.setTextColor(flairTextColor);
         }
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -121,6 +121,7 @@ public class SharedPreferencesUtils {
     public static final String SEPARATE_FOLDER_FOR_EACH_SUBREDDIT = "separate_folder_for_each_subreddit";
     public static final String VIBRATE_WHEN_ACTION_TRIGGERED = "vibrate_when_action_triggered";
     public static final String DISABLE_SWIPING_BETWEEN_TABS = "disable_swiping_between_tabs";
+    public static final String ENABLE_SWIPE_ACTION = "enable_swipe_action";
 
     public static final String MAIN_PAGE_TABS_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.main_page_tabs";
     public static final String MAIN_PAGE_TAB_1_TITLE = "_main_page_tab_1_title";

File: app/src/main/java/ml/docilealligator/infinityforreddit/AsyncTask/DeleteAllPostLayoutsAsyncTask.java
Patch:
@@ -34,8 +34,8 @@ protected Void doInBackground(Void... voids) {
             String key = entry.getKey();
             if (key.startsWith(SharedPreferencesUtils.POST_LAYOUT_SHARED_PREFERENCES_FILE)
                     || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_FRONT_PAGE_POST)
-                    || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_POPULAR_POST)
-                    || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_ALL_POST)
+                    || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_POPULAR_POST_LEGACY)
+                    || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_ALL_POST_LEGACY)
                     || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_SUBREDDIT_POST_BASE)
                     || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_MULTI_REDDIT_POST_BASE)
                     || key.startsWith(SharedPreferencesUtils.POST_LAYOUT_USER_POST_BASE)

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -60,8 +60,6 @@ public class SharedPreferencesUtils {
 
     public static final String POST_LAYOUT_SHARED_PREFERENCES_FILE = "ml.docilealligator.infinityforreddit.post_layout";
     public static final String POST_LAYOUT_FRONT_PAGE_POST = "post_layout_best_post";
-    public static final String POST_LAYOUT_POPULAR_POST = "post_layout_popular_post";
-    public static final String POST_LAYOUT_ALL_POST = "post_layout_all_post";
     public static final String POST_LAYOUT_SUBREDDIT_POST_BASE = "post_layout_subreddit_post_";
     public static final String POST_LAYOUT_MULTI_REDDIT_POST_BASE = "post_layout_multi_reddit_post_";
     public static final String POST_LAYOUT_USER_POST_BASE = "post_layout_user_post_";
@@ -161,4 +159,7 @@ public class SharedPreferencesUtils {
     public static final String SORT_TIME_ALL_POST_LEGACY = "sort_time_all_post";
     public static final String SORT_TYPE_POPULAR_POST_LEGACY = "sort_type_popular_post";
     public static final String SORT_TIME_POPULAR_POST_LEGACY = "sort_time_popular_post";
+
+    public static final String POST_LAYOUT_POPULAR_POST_LEGACY = "post_layout_popular_post";
+    public static final String POST_LAYOUT_ALL_POST_LEGACY = "post_layout_all_post";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CommentFullMarkdownActivity.java
Patch:
@@ -114,6 +114,7 @@ protected void onCreate(Bundle savedInstanceState) {
         String commentMarkdown = getIntent().getStringExtra(EXTRA_COMMENT_MARKDOWN);
         boolean isNsfw = getIntent().getBooleanExtra(EXTRA_IS_NSFW, false);
         int markdownColor = mCustomThemeWrapper.getCommentColor();
+        int spoilerBackgroundColor = markdownColor | 0xFF000000;
         int linkColor = mCustomThemeWrapper.getLinkColor();
         Markwon markwon = Markwon.builder(this)
                 .usePlugin(new AbstractMarkwonPlugin() {
@@ -149,7 +150,7 @@ public void updateDrawState(@NonNull TextPaint ds) {
                                         super.updateDrawState(ds);
                                         ds.setColor(markdownColor);
                                     } else {
-                                        ds.bgColor = markdownColor;
+                                        ds.bgColor = spoilerBackgroundColor;
                                         ds.setColor(markdownColor);
                                     }
                                     ds.setUnderlineText(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -111,6 +111,7 @@ public CommentsListingRecyclerViewAdapter(Context context, Retrofit oauthRetrofi
         mContext = context;
         mOauthRetrofit = oauthRetrofit;
         mCommentColor = customThemeWrapper.getCommentColor();
+        int commentSpoilerBackgroundColor = mCommentColor | 0xFF000000;
         mMarkwon = Markwon.builder(mContext)
                 .usePlugin(new AbstractMarkwonPlugin() {
                     @NonNull
@@ -147,7 +148,7 @@ public void updateDrawState(@NonNull TextPaint ds) {
                                         super.updateDrawState(ds);
                                         ds.setColor(mCommentColor);
                                     } else {
-                                        ds.bgColor = mCommentColor;
+                                        ds.bgColor = commentSpoilerBackgroundColor;
                                         ds.setColor(mCommentColor);
                                     }
                                     ds.setUnderlineText(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewVideoActivity.java
Patch:
@@ -33,7 +33,6 @@
 import com.google.android.exoplayer2.SimpleExoPlayer;
 import com.google.android.exoplayer2.source.ProgressiveMediaSource;
 import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.source.dash.DashMediaSource;
 import com.google.android.exoplayer2.source.hls.HlsMediaSource;
 import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
@@ -217,6 +216,8 @@ protected void onCreate(Bundle savedInstanceState) {
                     mVideoUri = Uri.parse(videoUrl);
                     videoDownloadUrl = savedInstanceState.getString(VIDEO_DOWNLOAD_URL_STATE);
                 }
+            } else {
+                mVideoUri = intent.getData();
             }
 
             if (mVideoUri == null) {
@@ -234,7 +235,7 @@ protected void onCreate(Bundle savedInstanceState) {
             } else {
                 dataSourceFactory = new DefaultDataSourceFactory(ViewVideoActivity.this,
                         Util.getUserAgent(ViewVideoActivity.this, "Infinity"));
-                player.prepare(new DashMediaSource.Factory(dataSourceFactory).createMediaSource(mVideoUri));
+                player.prepare(new ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(mVideoUri));
                 preparePlayer(savedInstanceState);
             }
         } else if (videoType == VIDEO_TYPE_DIRECT) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CommentActivity.java
Patch:
@@ -112,6 +112,8 @@ public class CommentActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        setImmersiveModeNotApplicable();
+
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.activity_comment);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -195,7 +195,7 @@ private void handleUri(Uri uri) {
                         } else if (authority.contains("redgifs.com")) {
                             if (path.matches(REDGIFS_PATTERN)) {
                                 Intent intent = new Intent(this, ViewVideoActivity.class);
-                                intent.putExtra(ViewVideoActivity.EXTRA_GFYCAT_ID, path.substring(7));
+                                intent.putExtra(ViewVideoActivity.EXTRA_GFYCAT_ID, path.substring(path.lastIndexOf("/") + 1));
                                 intent.putExtra(ViewVideoActivity.EXTRA_VIDEO_TYPE, ViewVideoActivity.VIDEO_TYPE_REDGIFS);
                                 intent.putExtra(ViewVideoActivity.EXTRA_IS_NSFW, true);
                                 startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -197,6 +197,4 @@ public interface AppComponent {
     void inject(DownloadLocationPreferenceFragment downloadLocationPreferenceFragment);
 
     void inject(SubmitCrosspostActivity submitCrosspostActivity);
-
-    void inject(PullNotificationAlarmReceiver pullNotificationAlarmReceiver);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -197,4 +197,6 @@ public interface AppComponent {
     void inject(DownloadLocationPreferenceFragment downloadLocationPreferenceFragment);
 
     void inject(SubmitCrosspostActivity submitCrosspostActivity);
+
+    void inject(PullNotificationAlarmReceiver pullNotificationAlarmReceiver);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadMediaService.java
Patch:
@@ -38,7 +38,7 @@
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.Event.DownloadMediaEvent;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.NotificationUtils;
+import ml.docilealligator.infinityforreddit.Utils.NotificationUtils;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;
 import okhttp3.ResponseBody;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadRedditVideoService.java
Patch:
@@ -44,7 +44,7 @@
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomThemeWrapper;
 import ml.docilealligator.infinityforreddit.Event.DownloadRedditVideoEvent;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.NotificationUtils;
+import ml.docilealligator.infinityforreddit.Utils.NotificationUtils;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;
 import okhttp3.ResponseBody;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/SubmitPostService.java
Patch:
@@ -40,7 +40,7 @@
 import ml.docilealligator.infinityforreddit.Event.SubmitVideoOrGifPostEvent;
 import ml.docilealligator.infinityforreddit.Flair;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.NotificationUtils;
+import ml.docilealligator.infinityforreddit.Utils.NotificationUtils;
 import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.Post.SubmitPost;
 import ml.docilealligator.infinityforreddit.R;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -279,7 +279,7 @@ public void updateDrawState(@NonNull TextPaint ds) {
                                         super.updateDrawState(ds);
                                         ds.setColor(markdownColor);
                                     } else {
-                                        ds.bgColor = Color.BLACK;
+                                        ds.bgColor = markdownColor;
                                         ds.setColor(markdownColor);
                                     }
                                     ds.setUnderlineText(false);
@@ -375,7 +375,7 @@ public void updateDrawState(@NonNull TextPaint ds) {
                                         super.updateDrawState(ds);
                                         ds.setColor(mCommentTextColor);
                                     } else {
-                                        ds.bgColor = Color.BLACK;
+                                        ds.bgColor = mCommentTextColor;
                                         ds.setColor(mCommentTextColor);
                                     }
                                     ds.setUnderlineText(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -147,7 +147,7 @@ public void updateDrawState(@NonNull TextPaint ds) {
                                         super.updateDrawState(ds);
                                         ds.setColor(mCommentColor);
                                     } else {
-                                        ds.bgColor = Color.BLACK;
+                                        ds.bgColor = mCommentColor;
                                         ds.setColor(mCommentColor);
                                     }
                                     ds.setUnderlineText(false);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/EditMultiRedditActivity.java
Patch:
@@ -226,7 +226,7 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
         if (requestCode == SUBREDDIT_SELECTION_REQUEST_CODE && resultCode == RESULT_OK) {
             if (data != null) {
                 multiReddit.setSubreddits(data.getStringArrayListExtra(
-                        SubredditMultiselectionActivity.EXTRA_RETURN_SELECTED_SUBREDDITS));
+                        SelectedSubredditsActivity.EXTRA_RETURN_SELECTED_SUBREDDITS));
             }
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/Utils.java
Patch:
@@ -34,7 +34,7 @@ public class Utils {
     private static final long YEAR_MILLIS = 12 * MONTH_MILLIS;
 
     public static String modifyMarkdown(String markdown) {
-        StringBuilder regexed = new StringBuilder(markdown.replaceAll("((?<=[\\s])|^)/{0,1}[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)"));
+        StringBuilder regexed = new StringBuilder(markdown.replaceAll("((?<=[\\s])|^)/[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com$0)").replaceAll("((?<=[\\s])|^)[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)"));
 
         int startIndex = 0;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AsyncTask/DeleteAllSortTypesAsyncTask.java
Patch:
@@ -32,8 +32,8 @@ protected Void doInBackground(Void... voids) {
         for(Map.Entry<String,?> entry : keys.entrySet()){
             String key = entry.getKey();
             if (key.contains(SharedPreferencesUtils.SORT_TYPE_BEST_POST) || key.contains(SharedPreferencesUtils.SORT_TIME_BEST_POST)
-                    || key.contains(SharedPreferencesUtils.SORT_TYPE_ALL_POST) || key.contains(SharedPreferencesUtils.SORT_TIME_ALL_POST)
-                    || key.contains(SharedPreferencesUtils.SORT_TYPE_POPULAR_POST) || key.contains(SharedPreferencesUtils.SORT_TIME_POPULAR_POST)
+                    || key.contains(SharedPreferencesUtils.SORT_TYPE_ALL_POST_LEGACY) || key.contains(SharedPreferencesUtils.SORT_TIME_ALL_POST_LEGACY)
+                    || key.contains(SharedPreferencesUtils.SORT_TYPE_POPULAR_POST_LEGACY) || key.contains(SharedPreferencesUtils.SORT_TIME_POPULAR_POST_LEGACY)
                     || key.contains(SharedPreferencesUtils.SORT_TYPE_SEARCH_POST) || key.contains(SharedPreferencesUtils.SORT_TIME_SEARCH_POST)
                     || key.contains(SharedPreferencesUtils.SORT_TYPE_SUBREDDIT_POST_BASE) || key.contains(SharedPreferencesUtils.SORT_TIME_SUBREDDIT_POST_BASE)
                     || key.contains(SharedPreferencesUtils.SORT_TYPE_MULTI_REDDIT_POST_BASE) || key.contains(SharedPreferencesUtils.SORT_TIME_MULTI_REDDIT_POST_BASE)

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/FilteredThingActivity.java
Patch:
@@ -252,7 +252,6 @@ private void bindView(int filter, boolean initializeFragment) {
                 multiRedditSortTypeBottomSheetFragment = new SortTypeBottomSheetFragment();
                 Bundle multiRedditBundle = new Bundle();
                 multiRedditBundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_BEST_TYPE, true);
-                multiRedditBundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_RANDOM_TYPE, true);
                 multiRedditSortTypeBottomSheetFragment.setArguments(multiRedditBundle);
                 break;
             case PostDataSource.TYPE_USER:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -723,7 +723,6 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 } else {
                     bundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_BEST_TYPE, false);
                 }
-                bundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_RANDOM_TYPE, true);
                 sortTypeBottomSheetFragment.setArguments(bundle);
                 sortTypeBottomSheetFragment.show(getSupportFragmentManager(), sortTypeBottomSheetFragment.getTag());
                 return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewMultiRedditDetailActivity.java
Patch:
@@ -164,7 +164,6 @@ protected void onCreate(Bundle savedInstanceState) {
         sortTypeBottomSheetFragment = new SortTypeBottomSheetFragment();
         Bundle bottomSheetBundle = new Bundle();
         bottomSheetBundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_BEST_TYPE, true);
-        bottomSheetBundle.putBoolean(SortTypeBottomSheetFragment.EXTRA_NO_RANDOM_TYPE, true);
         sortTypeBottomSheetFragment.setArguments(bottomSheetBundle);
 
         sortTimeBottomSheetFragment = new SortTimeBottomSheetFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -242,6 +242,7 @@ public CommentAndPostRecyclerViewAdapter(AppCompatActivity activity, CustomTheme
         mRedditDataRoomDatabase = redditDataRoomDatabase;
         mGlide = glide;
         mSecondaryTextColor = customThemeWrapper.getSecondaryTextColor();
+        mCommentTextColor = customThemeWrapper.getCommentColor();
         int markdownColor = customThemeWrapper.getPostContentColor();
         int linkColor = customThemeWrapper.getLinkColor();
         mPostDetailMarkwon = Markwon.builder(mActivity)
@@ -372,10 +373,10 @@ public void afterSetText(@NonNull TextView textView) {
                                 public void updateDrawState(@NonNull TextPaint ds) {
                                     if (isShowing) {
                                         super.updateDrawState(ds);
-                                        ds.setColor(markdownColor);
+                                        ds.setColor(mCommentTextColor);
                                     } else {
                                         ds.bgColor = Color.BLACK;
-                                        ds.setColor(markdownColor);
+                                        ds.setColor(mCommentTextColor);
                                     }
                                     ds.setUnderlineText(false);
                                 }
@@ -480,7 +481,6 @@ public void configureTheme(@NonNull MarkwonTheme.Builder builder) {
         mCardViewColor = customThemeWrapper.getCardViewBackgroundColor();
         mPostTitleColor = customThemeWrapper.getPostTitleColor();
         mPrimaryTextColor = customThemeWrapper.getPrimaryTextColor();
-        mCommentTextColor = customThemeWrapper.getCommentColor();
         mDividerColor = customThemeWrapper.getDividerColor();
         mCommentBackgroundColor = customThemeWrapper.getCommentBackgroundColor();
         mPostTypeBackgroundColor = customThemeWrapper.getPostTypeBackgroundColor();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CommentActivity.java
Patch:
@@ -48,7 +48,6 @@
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
 import io.noties.markwon.simple.ext.SimpleExtPlugin;
-import io.noties.markwon.urlprocessor.UrlProcessorRelativeToAbsolute;
 import ml.docilealligator.infinityforreddit.AsyncTask.GetCurrentAccountAsyncTask;
 import ml.docilealligator.infinityforreddit.BottomSheetFragment.CopyTextBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.Comment.Comment;
@@ -226,7 +225,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                                     intent.setData(uri);
                                 }
                                 startActivity(intent);
-                            }).urlProcessor(new UrlProcessorRelativeToAbsolute("https://www.reddit.com"));
+                            });
                         }
 
                         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -77,7 +77,6 @@
 import io.noties.markwon.recycler.table.TableEntry;
 import io.noties.markwon.recycler.table.TableEntryPlugin;
 import io.noties.markwon.simple.ext.SimpleExtPlugin;
-import io.noties.markwon.urlprocessor.UrlProcessorRelativeToAbsolute;
 import jp.wasabeef.glide.transformations.BlurTransformation;
 import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
 import ml.docilealligator.infinityforreddit.Activity.CommentActivity;
@@ -265,7 +264,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                             }
                             intent.putExtra(LinkResolverActivity.EXTRA_IS_NSFW, mPost.isNSFW());
                             mActivity.startActivity(intent);
-                        }).urlProcessor(new UrlProcessorRelativeToAbsolute("https://www.reddit.com"));
+                        });
                     }
 
                     @Override
@@ -297,7 +296,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                             }
                             intent.putExtra(LinkResolverActivity.EXTRA_IS_NSFW, mPost.isNSFW());
                             mActivity.startActivity(intent);
-                        }).urlProcessor(new UrlProcessorRelativeToAbsolute("https://www.reddit.com"));
+                        });
                     }
 
                     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/Utils.java
Patch:
@@ -34,7 +34,7 @@ public class Utils {
     private static final long YEAR_MILLIS = 12 * MONTH_MILLIS;
 
     public static String modifyMarkdown(String markdown) {
-        StringBuilder regexed = new StringBuilder(markdown.replaceAll("((?<=[\\s])|^)/{0,1}[rRuU]/[\\w-]+/{0,1}", "[$0]($0)"));
+        StringBuilder regexed = new StringBuilder(markdown.replaceAll("((?<=[\\s])|^)/{0,1}[rRuU]/[\\w-]+/{0,1}", "[$0](https://www.reddit.com/$0)"));
 
         int startIndex = 0;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -33,8 +33,8 @@ public class LinkResolverActivity extends AppCompatActivity {
 
     private static final String POST_PATTERN = "/r/\\w+/comments/\\w+/?\\w+/?";
     private static final String COMMENT_PATTERN = "/(r|u|U|user)/\\w+/comments/\\w+/?\\w+/\\w+/?";
-    private static final String SUBREDDIT_PATTERN = "/[rR]/\\w+/?";
-    private static final String USER_PATTERN = "/(u|U|user)/\\w+/?";
+    private static final String SUBREDDIT_PATTERN = "/[rR]/[\\w-]+/?";
+    private static final String USER_PATTERN = "/(u|U|user)/[\\w-]+/?";
     private static final String SIDEBAR_PATTERN = "/[rR]/\\w+/about/sidebar";
     private static final String MULTIREDDIT_PATTERN = "/user/\\w+/m/\\w+/?";
     private static final String MULTIREDDIT_PATTERN_2 = "/[rR]/(\\w+\\+?)+/?";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/DownloadVideoService.java
Patch:
@@ -92,7 +92,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
         isRedditVideo = intent.getBooleanExtra(EXTRA_IS_REDDIT_VIDEO, false);
         String videoUrl = intent.getStringExtra(EXTRA_VIDEO_URL);
-        String audioUrl = isRedditVideo ? videoUrl.substring(0, videoUrl.lastIndexOf('/')) + "/audio" : "";
+        String audioUrl = isRedditVideo ? videoUrl.substring(0, videoUrl.lastIndexOf('/')) + "/DASH_audio.mp4" : "";
         String fileName;
         if (isRedditVideo) {
             fileName = intent.getStringExtra(EXTRA_SUBREDDIT) + "-" + intent.getStringExtra(EXTRA_POST_ID);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/PostFragment.java
Patch:
@@ -369,7 +369,7 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
         accountName = getArguments().getString(EXTRA_ACCOUNT_NAME);
         boolean nsfw = mSharedPreferences.getBoolean(SharedPreferencesUtils.NSFW_KEY, false);
         int defaultPostLayout = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.DEFAULT_POST_LAYOUT_KEY, "0"));
-        savePostFeedScrolledPosition = mSharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_FRONT_PAGE_SCROLLED_POSITION, true);
+        savePostFeedScrolledPosition = mSharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_FRONT_PAGE_SCROLLED_POSITION, false);
         Locale locale = getResources().getConfiguration().locale;
 
         if (postType == PostDataSource.TYPE_SEARCH) {
@@ -717,7 +717,7 @@ public void onStop() {
     }
 
     private void saveCache() {
-        if (savePostFeedScrolledPosition && postType == PostDataSource.TYPE_FRONT_PAGE && mAdapter != null) {
+        if (savePostFeedScrolledPosition && postType == PostDataSource.TYPE_FRONT_PAGE && sortType != null && sortType.getType() == SortType.Type.BEST && mAdapter != null) {
             Post currentPost = mAdapter.getItemByPosition(maxPosition);
             if (currentPost != null) {
                 String accountNameForCache = accountName == null ? SharedPreferencesUtils.FRONT_PAGE_SCROLLED_POSITION_ANONYMOUS : accountName;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/PostDataSource.java
Patch:
@@ -176,7 +176,7 @@ public void loadInitial(@NonNull LoadInitialParams<String> params, @NonNull fina
         initialLoadStateLiveData.postValue(NetworkState.LOADING);
         switch (postType) {
             case TYPE_FRONT_PAGE:
-                boolean savePostFeedScrolledPosition = sharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_FRONT_PAGE_SCROLLED_POSITION, true);
+                boolean savePostFeedScrolledPosition = sortType != null && sortType.getType() == SortType.Type.BEST && sharedPreferences.getBoolean(SharedPreferencesUtils.SAVE_FRONT_PAGE_SCROLLED_POSITION, false);
                 String accountNameForCache = accountName == null ? SharedPreferencesUtils.FRONT_PAGE_SCROLLED_POSITION_ANONYMOUS : accountName;
                 if (savePostFeedScrolledPosition) {
                     loadBestPostsInitial(callback, postFeedScrolledPositionSharedPreferences.getString(accountNameForCache + SharedPreferencesUtils.FRONT_PAGE_SCROLLED_POSITION_FRONT_PAGE_BASE, null));

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/EditMultiRedditActivity.java
Patch:
@@ -42,7 +42,6 @@
 import retrofit2.Retrofit;
 
 public class EditMultiRedditActivity extends BaseActivity {
-    public static final String EXTRA_MULTI_REDDIT = "EMR";
     public static final String EXTRA_MULTI_PATH = "EMP";
     private static final int SUBREDDIT_SELECTION_REQUEST_CODE = 1;
     private static final String NULL_ACCESS_TOKEN_STATE = "NATS";
@@ -126,7 +125,6 @@ protected void onCreate(Bundle savedInstanceState) {
                 bindView();
             }
         } else {
-            multiReddit = getIntent().getParcelableExtra(EXTRA_MULTI_REDDIT);
             multipath = getIntent().getStringExtra(EXTRA_MULTI_PATH);
             getCurrentAccountAndBindView();
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -39,7 +39,7 @@ public class LinkResolverActivity extends AppCompatActivity {
     private static final String MULTIREDDIT_PATTERN = "/user/\\w+/m/\\w+/?";
     private static final String MULTIREDDIT_PATTERN_2 = "/[rR]/(\\w+\\+?)+/?";
     private static final String REDD_IT_POST_PATTERN = "/\\w+/?";
-    private static final String GFYCAT_PATTERN = "/[\\w-]+$";
+    private static final String GFYCAT_PATTERN = "(/ifr)?/[\\w-]+$";
     private static final String REDGIFS_PATTERN = "/watch/[\\w-]+$";
     private static final String IMGUR_GALLERY_PATTERN = "/gallery/\\w+/?";
     private static final String IMGUR_ALBUM_PATTERN = "/(album|a)/\\w+/?";
@@ -185,7 +185,7 @@ private void handleUri(Uri uri) {
                         } else if (authority.contains("gfycat.com")) {
                             if (path.matches(GFYCAT_PATTERN)) {
                                 Intent intent = new Intent(this, ViewVideoActivity.class);
-                                intent.putExtra(ViewVideoActivity.EXTRA_GFYCAT_ID, path.substring(1));
+                                intent.putExtra(ViewVideoActivity.EXTRA_GFYCAT_ID, path.substring(path.lastIndexOf("/") + 1));
                                 intent.putExtra(ViewVideoActivity.EXTRA_VIDEO_TYPE, ViewVideoActivity.VIDEO_TYPE_GFYCAT);
                                 intent.putExtra(ViewVideoActivity.EXTRA_IS_NSFW, getIntent().getBooleanExtra(EXTRA_IS_NSFW, false));
                                 startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/JSONUtils.java
Patch:
@@ -122,4 +122,5 @@ public class JSONUtils {
     public static final String X_KEY = "x";
     public static final String Y_KEY = "y";
     public static final String DEST_KEY = "dest";
+    public static final String GIF_KEY = "gif";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -1354,7 +1354,7 @@ void setBaseView(MaterialCardView cardView,
 
             cardView.setOnClickListener(view -> {
                 int position = getAdapterPosition();
-                if (position > 0 && canStartActivity) {
+                if (position >= 0 && canStartActivity) {
                     canStartActivity = false;
 
                     Intent intent = new Intent(mActivity, ViewPostDetailActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/FilteredThingActivity.java
Patch:
@@ -280,6 +280,9 @@ private void bindView(int filter, boolean initializeFragment) {
                 break;
             case Post.GIF_TYPE:
                 toolbar.setSubtitle(R.string.gif);
+                break;
+            case Post.GALLERY_TYPE:
+                toolbar.setSubtitle(R.string.gallery);
         }
 
         if (initializeFragment) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1248,7 +1248,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
             if ((mPost.isNSFW() && mNeedBlurNsfw  && !(mPost.getPostType() == Post.GIF_TYPE && mAutoplayNsfwVideos)) || (mPost.isSpoiler() && mNeedBlurSpoiler)) {
                 imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10))).into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);
             } else {
-                if (mImageViewWidth > mPost.getPreviewWidth() && mPost.getPostType() == Post.IMAGE_TYPE) {
+                if (mImageViewWidth > mPost.getPreviewWidth()) {
                     imageRequestBuilder.override(Target.SIZE_ORIGINAL).into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);
                 } else {
                     imageRequestBuilder.into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -875,7 +875,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                 imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10)))
                         .into(((PostImageAndGifAutoplayViewHolder) holder).imageView);
             } else {
-                if (mImageViewWidth > post.getPreviewWidth() && post.getPostType() == Post.IMAGE_TYPE) {
+                if (mImageViewWidth > post.getPreviewWidth()) {
                     imageRequestBuilder.override(Target.SIZE_ORIGINAL).into(((PostImageAndGifAutoplayViewHolder) holder).imageView);
                 } else {
                     imageRequestBuilder.into(((PostImageAndGifAutoplayViewHolder) holder).imageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -35,6 +35,7 @@ public class SharedPreferencesUtils {
     public static final String TITLE_FONT_FAMILY_KEY = "title_font_family";
     public static final String CONTENT_FONT_FAMILY_KEY = "content_font_family";
     public static final String AMOLED_DARK_KEY = "amoled_dark";
+    public static final String IMMERSIVE_INTERFACE_ENTRY_KEY = "immersive_interface_entry";
     public static final String IMMERSIVE_INTERFACE_KEY = "immersive_interface";
     public static final String IMMERSIVE_INTERFACE_IGNORE_NAV_BAR_KEY = "immersive_interface_ignore_nav_bar";
     public static final String BOTTOM_APP_BAR_KEY = "bottom_app_bar";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1248,7 +1248,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
             if ((mPost.isNSFW() && mNeedBlurNsfw  && !(mPost.getPostType() == Post.GIF_TYPE && mAutoplayNsfwVideos)) || (mPost.isSpoiler() && mNeedBlurSpoiler)) {
                 imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10))).into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);
             } else {
-                if (mImageViewWidth > mPost.getPreviewWidth()) {
+                if (mImageViewWidth > mPost.getPreviewWidth() && mPost.getPostType() == Post.IMAGE_TYPE) {
                     imageRequestBuilder.override(Target.SIZE_ORIGINAL).into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);
                 } else {
                     imageRequestBuilder.into(((PostDetailImageAndGifAutoplayViewHolder) holder).mImageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -875,7 +875,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                 imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10)))
                         .into(((PostImageAndGifAutoplayViewHolder) holder).imageView);
             } else {
-                if (mImageViewWidth > post.getPreviewWidth()) {
+                if (mImageViewWidth > post.getPreviewWidth() && post.getPostType() == Post.IMAGE_TYPE) {
                     imageRequestBuilder.override(Target.SIZE_ORIGINAL).into(((PostImageAndGifAutoplayViewHolder) holder).imageView);
                 } else {
                     imageRequestBuilder.into(((PostImageAndGifAutoplayViewHolder) holder).imageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1268,7 +1268,7 @@ public boolean onResourceReady(Bitmap resource, Object model, Target<Bitmap> tar
             CustomTarget<Bitmap> customTarget = new CustomTarget<Bitmap>() {
                 @Override
                 public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {
-                    ((PostDetailImageViewHolder) holder).mImageView.setImage(ImageSource.bitmap(resource));
+                    ((PostDetailImageViewHolder) holder).mImageView.setImage(ImageSource.cachedBitmap(resource));
                 }
 
                 @Override
@@ -1907,6 +1907,7 @@ public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
                 mGlide.clear(((PostDetailGifAutoplayViewHolder) holder).mImageView);
             } else if (holder instanceof PostDetailImageViewHolder) {
                 mGlide.clear(((PostDetailImageViewHolder) holder).mImageView);
+                ((PostDetailImageViewHolder) holder).mImageView.recycle();
             } else if (holder instanceof PostDetailLinkViewHolder) {
                 mGlide.clear(((PostDetailLinkViewHolder) holder).mImageView);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Settings/InterfacePreferenceFragment.java
Patch:
@@ -28,7 +28,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         SwitchPreference voteButtonsOnTheRightSwitch = findPreference(SharedPreferencesUtils.VOTE_BUTTONS_ON_THE_RIGHT_KEY);
         ListPreference defaultPostLayoutSwitch = findPreference(SharedPreferencesUtils.DEFAULT_POST_LAYOUT_KEY);
         SwitchPreference showDividerInCompactLayout = findPreference(SharedPreferencesUtils.SHOW_DIVIDER_IN_COMPACT_LAYOUT);
-        SwitchPreference showThumbnailOnTheRightInCompactLayout = findPreference(SharedPreferencesUtils.SHOW_THUMBNAIL_ON_THE_RIGHT_IN_COMPACT_LAYOUT);
+        SwitchPreference showThumbnailOnTheRightInCompactLayout = findPreference(SharedPreferencesUtils.SHOW_THUMBNAIL_ON_THE_LEFT_IN_COMPACT_LAYOUT);
         SwitchPreference showAbsoluteNumberOfVotes = findPreference(SharedPreferencesUtils.SHOW_ABSOLUTE_NUMBER_OF_VOTES);
 
         if (bottomAppBarSwitch != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -78,7 +78,7 @@ public class SharedPreferencesUtils {
     public static final String TIME_FORMAT_DEFAULT_VALUE = "MMM d, yyyy, HH:mm";
     public static final String DEFAULT_POST_LAYOUT_KEY = "default_post_layout";
     public static final String SHOW_DIVIDER_IN_COMPACT_LAYOUT = "show_divider_in_compact_layout";
-    public static final String SHOW_THUMBNAIL_ON_THE_RIGHT_IN_COMPACT_LAYOUT = "show_thumbnail_on_the_right_in_compact_layout";
+    public static final String SHOW_THUMBNAIL_ON_THE_LEFT_IN_COMPACT_LAYOUT = "show_thumbnail_on_the_left_in_compact_layout";
     public static final String SWIPE_RIGHT_TO_GO_BACK_FROM_POST_DETAIL = "swipe_to_go_back_from_post_detail";
     public static final String VOLUME_KEYS_NAVIGATE_COMMENTS = "volume_keys_navigate_comments";
     public static final String VOLUME_KEYS_NAVIGATE_POSTS = "volume_keys_navigate_posts";

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditDataRoomDatabase.java
Patch:
@@ -203,9 +203,9 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
             database.execSQL("ALTER TABLE custom_themes"
                     + " ADD COLUMN send_message_icon_color INTEGER DEFAULT " + Color.parseColor("#4185F4") + " NOT NULL");
             database.execSQL("ALTER TABLE custom_themes"
-                    + " ADD COLUMN fully_collapsed_comment_background_color INTEGER DEFAULT " + Color.parseColor("#4185F4") + " NOT NULL");
+                    + " ADD COLUMN fully_collapsed_comment_background_color INTEGER DEFAULT " + Color.parseColor("#8EDFBA") + " NOT NULL");
             database.execSQL("ALTER TABLE custom_themes"
-                    + " ADD COLUMN awarded_comment_background_color INTEGER DEFAULT " + Color.parseColor("#EEAB02") + " NOT NULL");
+                    + " ADD COLUMN awarded_comment_background_color INTEGER DEFAULT " + Color.parseColor("#FFF162") + " NOT NULL");
 
         }
     };

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -42,7 +42,7 @@
 import retrofit2.Retrofit;
 
 public class PullNotificationWorker extends Worker {
-    public static final String WORKER_TAG = "PNWT";
+    public static final String UNIQUE_WORKER_NAME = "PNWT";
     @Inject
     @Named("oauth_without_authenticator")
     Retrofit mOauthWithoutAuthenticatorRetrofit;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountPostsActivity.java
Patch:
@@ -156,7 +156,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountSavedThingActivity.java
Patch:
@@ -147,7 +147,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/BaseActivity.java
Patch:
@@ -58,7 +58,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         customThemeWrapper = getCustomThemeWrapper();
 
-        SharedPreferences mSharedPreferences = getSharedPreferences();
+        SharedPreferences mSharedPreferences = getDefaultSharedPreferences();
         boolean systemDefault = Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q;
         int systemThemeType = Integer.parseInt(mSharedPreferences.getString(SharedPreferencesUtils.THEME_KEY, "2"));
         immersiveInterface = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O &&
@@ -174,7 +174,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         }
     }
 
-    protected abstract SharedPreferences getSharedPreferences();
+    protected abstract SharedPreferences getDefaultSharedPreferences();
 
     protected abstract CustomThemeWrapper getCustomThemeWrapper();
 
@@ -229,7 +229,7 @@ public void onStateChanged(AppBarLayout appBarLayout, AppBarStateChangeListener.
     }
 
     public int getNavBarHeight() {
-        if (getSharedPreferences().getBoolean(SharedPreferencesUtils.IMMERSIVE_INTERFACE_IGNORE_NAV_BAR_KEY, false)) {
+        if (getDefaultSharedPreferences().getBoolean(SharedPreferencesUtils.IMMERSIVE_INTERFACE_IGNORE_NAV_BAR_KEY, false)) {
             return 0;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CommentActivity.java
Patch:
@@ -259,7 +259,7 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CreateMultiRedditActivity.java
Patch:
@@ -210,7 +210,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemeListingActivity.java
Patch:
@@ -135,7 +135,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
     }
 
     @Override
-    protected SharedPreferences getSharedPreferences() {
+    protected SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomizeThemeActivity.java
Patch:
@@ -229,7 +229,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getSharedPreferences() {
+    protected SharedPreferences getDefaultSharedPreferences() {
         return sharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/EditCommentActivity.java
Patch:
@@ -113,7 +113,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/EditMultiRedditActivity.java
Patch:
@@ -244,7 +244,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/EditPostActivity.java
Patch:
@@ -116,7 +116,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/FilteredThingActivity.java
Patch:
@@ -174,7 +174,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LoginActivity.java
Patch:
@@ -218,7 +218,7 @@ public void onPageFinished(WebView view, String url) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -292,7 +292,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 
@@ -444,7 +444,7 @@ private void bindView() {
                 });
 
                 messageBottomAppBar.setOnClickListener(view -> {
-                    Intent intent = new Intent(this, ViewMessageActivity.class);
+                    Intent intent = new Intent(this, InboxActivity.class);
                     startActivity(intent);
                 });
 
@@ -483,7 +483,7 @@ public void onMenuClick(int stringId) {
                         intent = new Intent(MainActivity.this, MultiRedditListingActivity.class);
                         break;
                     case R.string.inbox:
-                        intent = new Intent(MainActivity.this, ViewMessageActivity.class);
+                        intent = new Intent(MainActivity.this, InboxActivity.class);
                         break;
                     case R.string.upvoted:
                         intent = new Intent(MainActivity.this, AccountPostsActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MultiRedditListingActivity.java
Patch:
@@ -252,7 +252,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostImageActivity.java
Patch:
@@ -371,7 +371,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostLinkActivity.java
Patch:
@@ -310,7 +310,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostTextActivity.java
Patch:
@@ -314,7 +314,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostVideoActivity.java
Patch:
@@ -376,7 +376,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ReportActivity.java
Patch:
@@ -202,7 +202,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getSharedPreferences() {
+    protected SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/RulesActivity.java
Patch:
@@ -136,7 +136,7 @@ public void failed() {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchActivity.java
Patch:
@@ -184,7 +184,7 @@ public boolean onQueryTextCleared() {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchResultActivity.java
Patch:
@@ -176,7 +176,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchSubredditsResultActivity.java
Patch:
@@ -117,7 +117,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SelectedSubredditsActivity.java
Patch:
@@ -150,7 +150,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    protected SharedPreferences getSharedPreferences() {
+    protected SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SettingsActivity.java
Patch:
@@ -91,7 +91,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SubredditMultiselectionActivity.java
Patch:
@@ -235,7 +235,7 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SubredditSelectionActivity.java
Patch:
@@ -138,7 +138,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SubscribedThingListingActivity.java
Patch:
@@ -149,7 +149,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewMultiRedditDetailActivity.java
Patch:
@@ -332,7 +332,7 @@ public void postLayoutSelected(int postLayout) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -377,7 +377,7 @@ protected int getVerticalSnapPreference() {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -413,7 +413,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 
@@ -542,7 +542,7 @@ public void readFailed() {
                 goBackToMainPageBottomAppBar.setOnClickListener(view -> EventBus.getDefault().post(new GoBackToMainPageEvent()));
 
                 messageBottomAppBar.setOnClickListener(view -> {
-                    Intent intent = new Intent(this, ViewMessageActivity.class);
+                    Intent intent = new Intent(this, InboxActivity.class);
                     startActivity(intent);
                 });
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -430,7 +430,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
     }
 
     @Override
-    public SharedPreferences getSharedPreferences() {
+    public SharedPreferences getDefaultSharedPreferences() {
         return mSharedPreferences;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostLinkActivity.java
Patch:
@@ -547,7 +547,7 @@ public void onSubmitLinkPostEvent(SubmitTextOrLinkPostEvent submitTextOrLinkPost
         } else {
             mMemu.findItem(R.id.action_send_post_link_activity).setEnabled(true);
             mMemu.findItem(R.id.action_send_post_link_activity).getIcon().setAlpha(255);
-            if (submitTextOrLinkPostEvent.errorMessage == null) {
+            if (submitTextOrLinkPostEvent.errorMessage == null || submitTextOrLinkPostEvent.errorMessage.equals("")) {
                 Snackbar.make(coordinatorLayout, R.string.post_failed, Snackbar.LENGTH_SHORT).show();
             } else {
                 Snackbar.make(coordinatorLayout, submitTextOrLinkPostEvent.errorMessage.substring(0, 1).toUpperCase()

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostTextActivity.java
Patch:
@@ -547,7 +547,7 @@ public void onSubmitTextPostEvent(SubmitTextOrLinkPostEvent submitTextOrLinkPost
         } else {
             mMemu.findItem(R.id.action_send_post_text_activity).setEnabled(true);
             mMemu.findItem(R.id.action_send_post_text_activity).getIcon().setAlpha(255);
-            if (submitTextOrLinkPostEvent.errorMessage == null) {
+            if (submitTextOrLinkPostEvent.errorMessage == null || submitTextOrLinkPostEvent.errorMessage.equals("")) {
                 Snackbar.make(coordinatorLayout, R.string.post_failed, Snackbar.LENGTH_SHORT).show();
             } else {
                 Snackbar.make(coordinatorLayout, submitTextOrLinkPostEvent.errorMessage.substring(0, 1).toUpperCase()

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/FollowedUsersRecyclerViewAdapter.java
Patch:
@@ -294,7 +294,7 @@ public void setFavoriteSubscribedUsers(List<SubscribedUserData> favoriteSubscrib
     @Override
     public String getPopupText(int position) {
         switch (getItemViewType(position)) {
-            case VIEW_TYPE_USER_DIVIDER:
+            case VIEW_TYPE_USER:
                 int offset = (mFavoriteSubscribedUserData != null && mFavoriteSubscribedUserData.size() > 0) ?
                         mFavoriteSubscribedUserData.size() + 2 : 0;
                 return mSubscribedUserData.get(position - offset).getName().substring(0, 1).toUpperCase();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/APIUtils.java
Patch:
@@ -83,6 +83,7 @@ public class APIUtils {
 
     public static final String LINK_KEY = "link";
     public static final String FLAIR_TEMPLATE_ID_KEY = "flair_template_id";
+    public static final String FLAIR_ID_KEY = "flair_id";
 
     public static final String MAKE_FAVORITE_KEY = "make_favorite";
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageOrGifActivity.java
Patch:
@@ -99,6 +99,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        getTheme().applyStyle(R.style.Theme_Normal, true);
+
         getTheme().applyStyle(FontStyle.valueOf(mSharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImgurMediaActivity.java
Patch:
@@ -89,6 +89,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        getTheme().applyStyle(R.style.Theme_Normal, true);
+
         getTheme().applyStyle(FontStyle.valueOf(sharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewVideoActivity.java
Patch:
@@ -167,8 +167,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mediaDownloader = new MediaDownloaderImpl();
 
-        mediaDownloader = new MediaDownloaderImpl();
-
         Intent intent = getIntent();
         mVideoUri = intent.getData();
         postTitle = intent.getStringExtra(EXTRA_POST_TITLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageOrGifActivity.java
Patch:
@@ -99,8 +99,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
-        getTheme().applyStyle(R.style.Theme_Normal, true);
-
         getTheme().applyStyle(FontStyle.valueOf(mSharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImgurMediaActivity.java
Patch:
@@ -89,8 +89,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
-        getTheme().applyStyle(R.style.Theme_Normal, true);
-
         getTheme().applyStyle(FontStyle.valueOf(sharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchRemovedComment.java
Patch:
@@ -80,6 +80,7 @@ protected Void doInBackground(Void... voids) {
                 comment = parseRemovedComment(commentJSON, comment);
             } catch (JSONException e) {
                 e.printStackTrace();
+                comment = null;
             }
             return null;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -566,7 +566,7 @@ private void setupMenu() {
 
             mMenu.findItem(R.id.action_view_crosspost_parent_view_post_detail_activity).setVisible(mPost.getCrosspostParentId() != null);
 
-            if (mPost.getSelfText().equals("[deleted]")) {
+            if ("[deleted]".equals(mPost.getAuthor()) || "[deleted]".equals(mPost.getSelfText())) {
                 mMenu.findItem(R.id.action_see_removed_view_post_detail_activity).setVisible(true);
             }
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/BottomSheetFragment/CommentMoreBottomSheetFragment.java
Patch:
@@ -134,7 +134,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             dismiss();
         });
 
-        if (commentData.getCommentRawText().equals("[removed]")) {
+        if ("[removed]".equals(commentData.getCommentRawText())) {
             seeRemovedTextView.setVisibility(View.VISIBLE);
 
             seeRemovedTextView.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageOrGifActivity.java
Patch:
@@ -142,7 +142,7 @@ protected void onCreate(Bundle savedInstanceState) {
             mImageUrl = intent.getStringExtra(IMAGE_URL_KEY);
         }
         mImageFileName = intent.getStringExtra(FILE_NAME_KEY);
-        postTitle = intent.getStringExtra(POST_TITLE_KEY);
+        String postTitle = intent.getStringExtra(POST_TITLE_KEY);
 
         if (postTitle != null) {
             setTitle(Html.fromHtml(String.format("<small>%s</small>", postTitle)));

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageActivity.java
Patch:
@@ -89,7 +89,6 @@ public class ViewImageActivity extends AppCompatActivity implements SetAsWallpap
     private String mImageUrl;
     private String mImageFileName;
     private RequestManager glide;
-    private String postTitle;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -131,7 +130,7 @@ protected void onCreate(Bundle savedInstanceState) {
         Intent intent = getIntent();
         mImageUrl = intent.getStringExtra(IMAGE_URL_KEY);
         mImageFileName = intent.getStringExtra(FILE_NAME_KEY);
-        postTitle = intent.getStringExtra(POST_TITLE_KEY);
+        String postTitle = intent.getStringExtra(POST_TITLE_KEY);
 
         if (postTitle != null) {
             setTitle(Html.fromHtml(String.format("<small>%s</small>", postTitle)));
@@ -185,7 +184,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                 mProgressBar.setVisibility(View.GONE);
                 return false;
             }
-        }).into(mImageView);
+        }).override(Target.SIZE_ORIGINAL).into(mImageView);
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentData.java
Patch:
@@ -279,7 +279,7 @@ public void addChildren(ArrayList<CommentData> moreChildren) {
         if (children == null || children.size() == 0) {
             setChildren(moreChildren);
         } else {
-            if (children.get(children.size() - 1).isPlaceHolder) {
+            if (children.size() > 1 && children.get(children.size() - 1).isPlaceHolder) {
                 children.addAll(children.size() - 2, moreChildren);
             } else {
                 children.addAll(moreChildren);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ViewImgurImageFragment.java
Patch:
@@ -100,7 +100,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                 progressBar.setVisibility(View.GONE);
                 return false;
             }
-        }).into(imageView);
+        }).override(Target.SIZE_ORIGINAL).into(imageView);
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubredditData.java
Patch:
@@ -10,6 +10,7 @@
 
 import ml.docilealligator.infinityforreddit.SubredditDatabase.SubredditData;
 import ml.docilealligator.infinityforreddit.Utils.JSONUtils;
+import ml.docilealligator.infinityforreddit.Utils.Utils;
 
 class ParseSubredditData {
     static void parseSubredditData(String response, ParseSubredditDataListener parseSubredditDataListener) {
@@ -24,7 +25,7 @@ private static SubredditData parseSubredditData(JSONObject subredditDataJsonObje
         String id = subredditDataJsonObject.getString(JSONUtils.NAME_KEY);
         String subredditFullName = subredditDataJsonObject.getString(JSONUtils.DISPLAY_NAME_KEY);
         String description = subredditDataJsonObject.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
-        String sidebarDescription = subredditDataJsonObject.getString(JSONUtils.DESCRIPTION_KEY).trim();
+        String sidebarDescription = Utils.modifyMarkdown(subredditDataJsonObject.getString(JSONUtils.DESCRIPTION_KEY).trim());
         long createdUTC = subredditDataJsonObject.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
 
         String bannerImageUrl;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Font/ContentFontFamily.java
Patch:
@@ -9,7 +9,9 @@ public enum ContentFontFamily {
     RobotoCondensed(R.style.ContentFontFamily_RobotoCondensed, "RobotoCondensed"),
     HarmoniaSans(R.style.ContentFontFamily_HarmoniaSans, "HarmoniaSans"),
     Selawk(R.style.ContentFontFamily_Selawk, "Selawk"),
-    Inter(R.style.ContentFontFamily_Inter, "Inter");
+    Inter(R.style.ContentFontFamily_Inter, "Inter"),
+    Manrope(R.style.ContentFontFamily_Manrope, "Manrope"),
+    Rubik(R.style.ContentFontFamily_Rubik, "Rubik");
 
     private int resId;
     private String title;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Font/FontFamily.java
Patch:
@@ -9,7 +9,9 @@ public enum FontFamily {
     RobotoCondensed(R.style.FontFamily_RobotoCondensed, "RobotoCondensed"),
     HarmoniaSans(R.style.FontFamily_HarmoniaSans, "HarmoniaSans"),
     Selawk(R.style.FontFamily_Selawk, "Selawk"),
-    Inter(R.style.FontFamily_Inter, "Inter");
+    Inter(R.style.FontFamily_Inter, "Inter"),
+    Manrope(R.style.FontFamily_Manrope, "Manrope"),
+    Rubik(R.style.FontFamily_Rubik, "Rubik");
 
     private int resId;
     private String title;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Font/TitleFontFamily.java
Patch:
@@ -9,7 +9,9 @@ public enum TitleFontFamily {
     RobotoCondensed(R.style.TitleFontFamily_RobotoCondensed, "RobotoCondensed"),
     HarmoniaSans(R.style.TitleFontFamily_HarmoniaSans, "HarmoniaSans"),
     Selawk(R.style.TitleFontFamily_Selawk, "Selawk"),
-    Inter(R.style.TitleFontFamily_Inter, "Inter");
+    Inter(R.style.TitleFontFamily_Inter, "Inter"),
+    Manrope(R.style.TitleFontFamily_Manrope, "Manrope"),
+    Rubik(R.style.TitleFontFamily_Rubik, "Rubik");
 
     private int resId;
     private String title;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/MultiRedditListingFragment.java
Patch:
@@ -49,7 +49,6 @@ public class MultiRedditListingFragment extends Fragment implements FragmentComm
 
     public static final String EXTRA_ACCOUNT_NAME = "EAN";
     public static final String EXTRA_ACCESS_TOKEN = "EAT";
-    private static final String INSERT_MULTI_REDDIT_STATE = "ISSS";
 
     @BindView(R.id.swipe_refresh_layout_multi_reddit_listing_fragment)
     SwipeRefreshLayout mSwipeRefreshLayout;
@@ -78,7 +77,6 @@ public class MultiRedditListingFragment extends Fragment implements FragmentComm
     private AppCompatActivity mActivity;
     private RequestManager mGlide;
     private LinearLayoutManager mLinearLayoutManager;
-    private boolean mInsertSuccess = false;
 
     public MultiRedditListingFragment() {
         // Required empty public constructor

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ThemePreviewActivity.java
Patch:
@@ -337,6 +337,7 @@ private void applyCustomTheme() {
     protected void applyAppBarLayoutAndToolbarTheme(AppBarLayout appBarLayout, Toolbar toolbar) {
         appBarLayout.setBackgroundColor(customTheme.colorPrimary);
         toolbar.setTitleTextColor(customTheme.toolbarPrimaryTextAndIconColor);
+        toolbar.setSubtitleTextColor(customTheme.toolbarSecondaryTextColor);
         if (toolbar.getNavigationIcon() != null) {
             toolbar.getNavigationIcon().setColorFilter(customTheme.toolbarPrimaryTextAndIconColor, android.graphics.PorterDuff.Mode.SRC_IN);
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/JSONUtils.java
Patch:
@@ -23,6 +23,7 @@ public class JSONUtils {
     public static final String U_KEY = "u";
     public static final String LINK_KEY = "link";
     public static final String LINK_AUTHOR_KEY = "link_author";
+    public static final String LINK_FLAIR_TEXT_KEY = "link_flair_text";
     public static final String LINK_FLAIR_RICHTEXT_KEY = "link_flair_richtext";
     public static final String SCORE_KEY = "score";
     public static final String LIKES_KEY = "likes";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -345,7 +345,7 @@ protected int getVerticalSnapPreference() {
         };
 
         mSingleCommentId = getIntent().getStringExtra(EXTRA_SINGLE_COMMENT_ID);
-        sortType = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, SortType.Type.BEST.value);
+        sortType = mSortTypeSharedPreferences.getString(SharedPreferencesUtils.SORT_TYPE_POST_COMMENT, SortType.Type.BEST.value.toUpperCase());
         mToolbar.setTitle(new SortType(SortType.Type.valueOf(sortType)).getType().fullName);
         sortType = sortType.toLowerCase();
         if (savedInstanceState == null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/Utils.java
Patch:
@@ -111,7 +111,7 @@ public static boolean isConnectedToWifi(Context context) {
     public static void displaySortTypeInToolbar(SortType sortType, Toolbar toolbar) {
         if (sortType != null) {
             if (sortType.getTime() != null) {
-                toolbar.setSubtitle(sortType.getType().fullName + " " + sortType.getTime().fullName);
+                toolbar.setSubtitle(sortType.getType().fullName + ": " + sortType.getTime().fullName);
             } else {
                 toolbar.setSubtitle(sortType.getType().fullName);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ActivityToolbarInterface.java
Patch:
@@ -2,4 +2,5 @@
 
 public interface ActivityToolbarInterface {
     void onLongPress();
+    default void displaySortType() {};
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -456,6 +456,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                 }
 
                 if (flair != null && !flair.equals("")) {
+                    ((PostBaseViewHolder) holder).flairTextView.setVisibility(View.VISIBLE);
                     Utils.setHTMLWithImageToTextView(((PostBaseViewHolder) holder).flairTextView, flair);
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ViewImgurImageFragment.java
Patch:
@@ -63,7 +63,6 @@ public class ViewImgurImageFragment extends Fragment {
     private Activity activity;
     private RequestManager glide;
     private ImgurMedia imgurMedia;
-    private boolean isActionBarHidden = false;
     private boolean isDownloading = false;
 
     public ViewImgurImageFragment() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -960,11 +960,11 @@ public Fragment getItem(int position) {
                 String name = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_1_NAME, "");
                 return generatePostFragment(postType, name);
             } else if (position == 1) {
-                String postType = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_2_POST_TYPE, SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_HOME);
+                String postType = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_2_POST_TYPE, SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_POPULAR);
                 String name = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_2_NAME, "");
                 return generatePostFragment(postType, name);
             } else {
-                String postType = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_3_POST_TYPE, SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_HOME);
+                String postType = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_3_POST_TYPE, SharedPreferencesUtils.MAIN_PAGE_TAB_POST_TYPE_ALL);
                 String name = mSharedPreferences.getString(SharedPreferencesUtils.MAIN_PAGE_TAB_3_NAME, "");
                 return generatePostFragment(postType, name);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseUserData.java
Patch:
@@ -41,7 +41,7 @@ private static UserData parseUserDataBase(JSONObject userDataJson) throws JSONEx
         long cakeday = userDataJson.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
         boolean isGold = userDataJson.getBoolean(JSONUtils.IS_GOLD_KEY);
         boolean isFriend = userDataJson.getBoolean(JSONUtils.IS_FRIEND_KEY);
-        String description = userDataJson.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY);
+        String description = userDataJson.getJSONObject(JSONUtils.SUBREDDIT_KEY).getString(JSONUtils.PUBLIC_DESCRIPTION_KEY);
 
         return new UserData(userName, iconImageUrl, bannerImageUrl, linkKarma, commentKarma, cakeday,
                 isGold, isFriend, canBeFollowed, description);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubredditData.java
Patch:
@@ -25,6 +25,7 @@ private static SubredditData parseSubredditData(JSONObject subredditDataJsonObje
         String subredditFullName = subredditDataJsonObject.getString(JSONUtils.DISPLAY_NAME_KEY);
         String description = subredditDataJsonObject.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
         String sidebarDescription = subredditDataJsonObject.getString(JSONUtils.DESCRIPTION_KEY).trim();
+        long createdUTC = subredditDataJsonObject.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
 
         String bannerImageUrl;
         if (subredditDataJsonObject.isNull(JSONUtils.BANNER_BACKGROUND_IMAGE_KEY)) {
@@ -52,7 +53,7 @@ private static SubredditData parseSubredditData(JSONObject subredditDataJsonObje
         }
 
         return new SubredditData(id, subredditFullName, iconUrl, bannerImageUrl, description,
-                sidebarDescription, nSubscribers);
+                sidebarDescription, nSubscribers, createdUTC);
     }
 
     interface ParseSubredditDataListener {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubscribedThing.java
Patch:
@@ -99,9 +99,10 @@ protected Void doInBackground(Void... voids) {
                         String description = data.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
                         String sidebarDescription = data.getString(JSONUtils.DESCRIPTION_KEY);
                         int nSubscribers = data.getInt(JSONUtils.SUBSCRIBERS_KEY);
+                        long createdUTC = data.getLong(JSONUtils.CREATED_UTC_KEY);
                         newSubscribedSubredditData.add(new SubscribedSubredditData(id, name, iconUrl, accountName, isFavorite));
                         newSubredditData.add(new SubredditData(id, subredditFullName, iconUrl,
-                                bannerImageUrl, description, sidebarDescription, nSubscribers));
+                                bannerImageUrl, description, sidebarDescription, nSubscribers, createdUTC));
                     }
                 }
                 lastItem = jsonResponse.getJSONObject(JSONUtils.DATA_KEY).getString(JSONUtils.AFTER_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -64,14 +64,14 @@
 import ml.docilealligator.infinityforreddit.Event.PostUpdateEventToPostList;
 import ml.docilealligator.infinityforreddit.Event.SwitchAccountEvent;
 import ml.docilealligator.infinityforreddit.FetchComment;
-import ml.docilealligator.infinityforreddit.FetchPost;
+import ml.docilealligator.infinityforreddit.Post.FetchPost;
 import ml.docilealligator.infinityforreddit.Flair;
 import ml.docilealligator.infinityforreddit.Fragment.FlairBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.Fragment.PostCommentSortTypeBottomSheetFragment;
-import ml.docilealligator.infinityforreddit.HidePost;
+import ml.docilealligator.infinityforreddit.Post.HidePost;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.ParseComment;
-import ml.docilealligator.infinityforreddit.ParsePost;
+import ml.docilealligator.infinityforreddit.Post.ParsePost;
 import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.ReadMessage;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/FetchPost.java
Patch:
@@ -1,10 +1,10 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import androidx.annotation.NonNull;
 
 import java.util.Locale;
 
-import ml.docilealligator.infinityforreddit.Post.Post;
+import ml.docilealligator.infinityforreddit.RedditAPI;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import retrofit2.Call;
 import retrofit2.Callback;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/HidePost.java
Patch:
@@ -1,10 +1,11 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import androidx.annotation.NonNull;
 
 import java.util.HashMap;
 import java.util.Map;
 
+import ml.docilealligator.infinityforreddit.RedditAPI;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import retrofit2.Call;
 import retrofit2.Callback;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/SubmitPost.java
Patch:
@@ -1,4 +1,4 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import android.graphics.Bitmap;
 import android.os.AsyncTask;
@@ -20,7 +20,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import ml.docilealligator.infinityforreddit.Post.Post;
+import ml.docilealligator.infinityforreddit.RedditAPI;
 import ml.docilealligator.infinityforreddit.Utils.JSONUtils;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import okhttp3.MediaType;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/SubmitPostService.java
Patch:
@@ -39,7 +39,7 @@
 import ml.docilealligator.infinityforreddit.NotificationUtils;
 import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.R;
-import ml.docilealligator.infinityforreddit.SubmitPost;
+import ml.docilealligator.infinityforreddit.Post.SubmitPost;
 import retrofit2.Retrofit;
 
 public class SubmitPostService extends Service {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -2111,7 +2111,7 @@ public void onVoteThingFail() {
             mArchivedImageView.setColorFilter(mArchivedTintColor, PorterDuff.Mode.SRC_IN);
             mLockedImageView.setColorFilter(mLockedTintColor, PorterDuff.Mode.SRC_IN);
             mCrosspostImageView.setColorFilter(mCrosspostTintColor, PorterDuff.Mode.SRC_IN);
-            mAwardsTextView.setTextColor(mPostTitleColor);
+            mAwardsTextView.setTextColor(mSecondaryTextColor);
             mLinkTextView.setTextColor(mSecondaryTextColor);
             mLoadImageProgressBar.setIndeterminateTintList(ColorStateList.valueOf(mColorAccent));
             mNoPreviewLinkImageView.setBackgroundColor(mNoPreviewLinkBackgroundColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CustomTheme/CustomThemeWrapper.java
Patch:
@@ -655,7 +655,7 @@ private static CustomTheme getWhite(Context context) {
         customTheme.postTitleColor = Color.parseColor("#000000");
         customTheme.postContentColor = Color.parseColor("#8A000000");
         customTheme.commentColor = Color.parseColor("#000000");
-        customTheme.buttonTextColor = Color.parseColor("#FFFFFF");
+        customTheme.buttonTextColor = Color.parseColor("#000000");
         customTheme.backgroundColor = Color.parseColor("#FFFFFF");
         customTheme.cardViewBackgroundColor = Color.parseColor("#FFFFFF");
         customTheme.commentBackgroundColor = Color.parseColor("#FFFFFF");

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -133,7 +133,7 @@ protected void onCreate(Bundle savedInstanceState) {
                         Intent intent = new Intent(this, ViewMultiRedditDetailActivity.class);
                         intent.putExtra(ViewMultiRedditDetailActivity.EXTRA_MULTIREDDIT_PATH, path);
                         startActivity(intent);
-                    } else if (path.matches(REDD_IT_POST_PATTERN)) {
+                    } else if (authority.equals("redd.it") && path.matches(REDD_IT_POST_PATTERN)) {
                         Intent intent = new Intent(this, ViewPostDetailActivity.class);
                         intent.putExtra(ViewPostDetailActivity.EXTRA_POST_ID, path.substring(1));
                         startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostImageActivity.java
Patch:
@@ -393,9 +393,9 @@ protected void applyCustomTheme() {
         spoilerTextColor = mCustomThemeWrapper.getSpoilerTextColor();
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
-        flairTextView.setTextColor(flairTextColor);
-        spoilerTextView.setTextColor(spoilerTextColor);
-        nsfwTextView.setTextColor(nsfwTextColor);
+        flairTextView.setTextColor(primaryTextColor);
+        spoilerTextView.setTextColor(primaryTextColor);
+        nsfwTextView.setTextColor(primaryTextColor);
         titleEditText.setTextColor(primaryTextColor);
         titleEditText.setHintTextColor(secondaryTextColor);
         applyFABTheme(captureFab);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostLinkActivity.java
Patch:
@@ -332,9 +332,9 @@ protected void applyCustomTheme() {
         spoilerTextColor = mCustomThemeWrapper.getSpoilerTextColor();
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
-        flairTextView.setTextColor(flairTextColor);
-        spoilerTextView.setTextColor(spoilerTextColor);
-        nsfwTextView.setTextColor(nsfwTextColor);
+        flairTextView.setTextColor(primaryTextColor);
+        spoilerTextView.setTextColor(primaryTextColor);
+        nsfwTextView.setTextColor(primaryTextColor);
         titleEditText.setTextColor(primaryTextColor);
         titleEditText.setHintTextColor(secondaryTextColor);
         linkEditText.setTextColor(primaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostTextActivity.java
Patch:
@@ -336,9 +336,9 @@ protected void applyCustomTheme() {
         spoilerTextColor = mCustomThemeWrapper.getSpoilerTextColor();
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
-        flairTextView.setTextColor(flairTextColor);
-        spoilerTextView.setTextColor(spoilerTextColor);
-        nsfwTextView.setTextColor(nsfwTextColor);
+        flairTextView.setTextColor(primaryTextColor);
+        spoilerTextView.setTextColor(primaryTextColor);
+        nsfwTextView.setTextColor(primaryTextColor);
         titleEditText.setTextColor(primaryTextColor);
         titleEditText.setHintTextColor(secondaryTextColor);
         contentEditText.setTextColor(primaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostVideoActivity.java
Patch:
@@ -398,9 +398,9 @@ protected void applyCustomTheme() {
         spoilerTextColor = mCustomThemeWrapper.getSpoilerTextColor();
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
-        flairTextView.setTextColor(flairTextColor);
-        spoilerTextView.setTextColor(spoilerTextColor);
-        nsfwTextView.setTextColor(nsfwTextColor);
+        flairTextView.setTextColor(primaryTextColor);
+        spoilerTextView.setTextColor(primaryTextColor);
+        nsfwTextView.setTextColor(primaryTextColor);
         titleEditText.setTextColor(primaryTextColor);
         titleEditText.setHintTextColor(secondaryTextColor);
         applyFABTheme(captureFab);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -850,7 +850,7 @@ private void fetchComments(boolean changeRefreshState) {
     }
 
     void fetchMoreComments() {
-        if (isLoadingMoreChildren || !loadMoreChildrenSuccess) {
+        if (isFetchingComments || isLoadingMoreChildren || !loadMoreChildrenSuccess) {
             return;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1524,7 +1524,7 @@ private void collapseChildren(int position) {
         }
     }
 
-    public void addComments(ArrayList<CommentData> comments, boolean hasMoreComments) {
+    public void addComments(@NonNull ArrayList<CommentData> comments, boolean hasMoreComments) {
         if (mVisibleComments.size() == 0) {
             isInitiallyLoading = false;
             isInitiallyLoadingFailed = false;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -701,7 +701,7 @@ public void onScrolledRight() {
                 case Post.TEXT_TYPE:
                     ((PostDetailViewHolder) holder).mTypeTextView.setText("TEXT");
 
-                    if (!mPost.getSelfText().equals("")) {
+                    if (mPost.getSelfText() != null && !mPost.getSelfText().equals("")) {
                         ((PostDetailViewHolder) holder).mContentMarkdownView.setVisibility(View.VISIBLE);
                         LinearLayoutManager linearLayoutManager = new MarkwonLinearLayoutManager(mActivity, new MarkwonLinearLayoutManager.HorizontalScrollViewScrolledListener() {
                             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CommentActivity.java
Patch:
@@ -237,7 +237,9 @@ protected void applyCustomTheme() {
         commentParentMarkwonView.setTextColor(mCustomThemeWrapper.getCommentColor());
         divider.setBackgroundColor(mCustomThemeWrapper.getDividerColor());
         commentEditText.setTextColor(mCustomThemeWrapper.getCommentColor());
-        markdownColor = mCustomThemeWrapper.getSecondaryTextColor();
+        int secondaryTextColor = mCustomThemeWrapper.getSecondaryTextColor();
+        commentEditText.setHintTextColor(secondaryTextColor);
+        markdownColor = secondaryTextColor;
     }
 
     private void getCurrentAccount() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/SubscribedSubredditsRecyclerViewAdapter.java
Patch:
@@ -154,6 +154,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder viewHolder,
                 ((SubredditViewHolder) viewHolder).favoriteImageView.setVisibility(View.GONE);
                 name = username;
                 iconUrl = userIconUrl;
+                viewHolder.itemView.setOnClickListener(view -> itemClickListener.onClick(name, iconUrl, true));
             } else if (hasClearSelectionRow && viewHolder.getAdapterPosition() == 1) {
                 ((SubredditViewHolder) viewHolder).favoriteImageView.setVisibility(View.GONE);
                 name = username;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/FollowedUsersRecyclerViewAdapter.java
Patch:
@@ -54,7 +54,7 @@ public FollowedUsersRecyclerViewAdapter(Context context, Retrofit oauthRetrofit,
         mOauthRetrofit = oauthRetrofit;
         mRedditDataRoomDatabase = redditDataRoomDatabase;
         mAccessToken = accessToken;
-        glide = Glide.with(context.getApplicationContext());
+        glide = Glide.with(context);
         mPrimaryTextColor = customThemeWrapper.getPrimaryTextColor();
         mSecondaryTextColor = customThemeWrapper.getSecondaryTextColor();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -198,7 +198,7 @@ public PostRecyclerViewAdapter(AppCompatActivity activity, Retrofit oauthRetrofi
                 DrawableCompat.setTint(mCommentIcon, mPostIconAndInfoColor);
             }
             mScale = activity.getResources().getDisplayMetrics().density;
-            mGlide = Glide.with(mActivity.getApplicationContext());
+            mGlide = Glide.with(mActivity);
             mRedditDataRoomDatabase = redditDataRoomDatabase;
             mUserDao = redditDataRoomDatabase.userDao();
             mCallback = callback;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/SubredditListingRecyclerViewAdapter.java
Patch:
@@ -80,7 +80,7 @@ public SubredditListingRecyclerViewAdapter(Context context, Retrofit oauthRetrof
         this.accountName = accountName;
         this.redditDataRoomDatabase = redditDataRoomDatabase;
         this.callback = callback;
-        glide = Glide.with(context.getApplicationContext());
+        glide = Glide.with(context);
         colorPrimaryLightTheme = customThemeWrapper.getColorPrimaryLightTheme();
         primaryTextColor = customThemeWrapper.getPrimaryTextColor();
         secondaryTextColor = customThemeWrapper.getSecondaryTextColor();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/SubscribedSubredditsRecyclerViewAdapter.java
Patch:
@@ -57,7 +57,7 @@ public SubscribedSubredditsRecyclerViewAdapter(Context context, Retrofit oauthRe
                                                    CustomThemeWrapper customThemeWrapper,
                                                    String accessToken) {
         mContext = context;
-        glide = Glide.with(context.getApplicationContext());
+        glide = Glide.with(context);
         mOauthRetrofit = oauthRetrofit;
         mRedditDataRoomDatabase = redditDataRoomDatabase;
         this.accessToken = accessToken;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/UserListingRecyclerViewAdapter.java
Patch:
@@ -81,7 +81,7 @@ public UserListingRecyclerViewAdapter(Context context, Retrofit oauthRetrofit, R
         this.accountName = accountName;
         this.subscribedUserDao = subscribedUserDao;
         this.retryLoadingMoreCallback = retryLoadingMoreCallback;
-        glide = Glide.with(context.getApplicationContext());
+        glide = Glide.with(context);
         primaryTextColor = customThemeWrapper.getPrimaryTextColor();
         buttonTextColor = customThemeWrapper.getButtonTextColor();
         colorPrimaryLightTheme = customThemeWrapper.getColorPrimaryLightTheme();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -311,7 +311,7 @@ protected void applyCustomTheme() {
         applyAppBarLayoutAndToolbarTheme(appBarLayout, toolbar);
         applyTabLayoutTheme(tabLayout);
         bottomNavigationView.setBackgroundTint(ColorStateList.valueOf(mCustomThemeWrapper.getBottomAppBarBackgroundColor()));
-        applyFABTheme(fab, R.drawable.ic_add_day_night_24dp);
+        applyFABTheme(fab);
     }
 
     private void getCurrentAccountAndBindView() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MultiRedditListingActivity.java
Patch:
@@ -258,6 +258,6 @@ protected void applyCustomTheme() {
         mSwipeRefreshLayout.setProgressBackgroundColorSchemeColor(mCustomThemeWrapper.getCircularProgressBarBackground());
         mSwipeRefreshLayout.setColorSchemeColors(mCustomThemeWrapper.getColorAccent());
         mErrorTextView.setTextColor(mCustomThemeWrapper.getSecondaryTextColor());
-        applyFABTheme(fab, R.drawable.ic_add_day_night_24dp);
+        applyFABTheme(fab);
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostImageActivity.java
Patch:
@@ -392,8 +392,8 @@ protected void applyCustomTheme() {
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
         titleEditText.setTextColor(primaryTextColor);
-        applyFABTheme(captureFab, R.drawable.ic_outline_add_a_photo_24dp);
-        applyFABTheme(selectFromLibraryFab, R.drawable.ic_outline_select_photo_24dp);
+        applyFABTheme(captureFab);
+        applyFABTheme(selectFromLibraryFab);
         selectAgainTextView.setTextColor(mCustomThemeWrapper.getColorAccent());
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/PostVideoActivity.java
Patch:
@@ -397,8 +397,8 @@ protected void applyCustomTheme() {
         nsfwBackgroundColor = mCustomThemeWrapper.getNsfwBackgroundColor();
         nsfwTextColor = mCustomThemeWrapper.getNsfwTextColor();
         titleEditText.setTextColor(primaryTextColor);
-        applyFABTheme(captureFab, R.drawable.ic_outline_add_a_photo_24dp);
-        applyFABTheme(selectFromLibraryFab, R.drawable.ic_outline_select_photo_24dp);
+        applyFABTheme(captureFab);
+        applyFABTheme(selectFromLibraryFab);
         selectAgainTextView.setTextColor(mCustomThemeWrapper.getColorAccent());
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SelectedSubredditsActivity.java
Patch:
@@ -141,6 +141,6 @@ protected CustomThemeWrapper getCustomThemeWrapper() {
     protected void applyCustomTheme() {
         coordinatorLayout.setBackgroundColor(mCustomThemeWrapper.getBackgroundColor());
         applyAppBarLayoutAndToolbarTheme(appBarLayout, toolbar);
-        applyFABTheme(fab, R.drawable.ic_add_24dp);
+        applyFABTheme(fab);
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -389,7 +389,7 @@ protected void applyCustomTheme() {
         mSwipeRefreshLayout.setProgressBackgroundColorSchemeColor(mCustomThemeWrapper.getCircularProgressBarBackground());
         mSwipeRefreshLayout.setColorSchemeColors(mCustomThemeWrapper.getColorAccent());
         mFetchPostInfoTextView.setTextColor(mCustomThemeWrapper.getSecondaryTextColor());
-        applyFABTheme(fab, R.drawable.ic_keyboard_arrow_down_24dp);
+        applyFABTheme(fab);
     }
 
     private void getCurrentAccountAndBindView() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -424,7 +424,7 @@ protected void applyCustomTheme() {
         messageBottomAppBar.setColorFilter(primaryIconColor, android.graphics.PorterDuff.Mode.SRC_IN);
         profileBottomAppBar.setColorFilter(primaryIconColor, android.graphics.PorterDuff.Mode.SRC_IN);
         applyTabLayoutTheme(tabLayout);
-        applyFABTheme(fab, R.drawable.ic_add_day_night_24dp);
+        applyFABTheme(fab);
         unsubscribedColor = mCustomThemeWrapper.getUnsubscribed();
         subscribedColor = mCustomThemeWrapper.getSubscribed();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/MessageRecyclerViewAdapter.java
Patch:
@@ -252,6 +252,7 @@ class DataViewHolder extends RecyclerView.ViewHolder {
         DataViewHolder(View itemView) {
             super(itemView);
             ButterKnife.bind(this, itemView);
+            itemView.setBackgroundColor(mMessageBackgroundColor);
             authorTextView.setTextColor(mUsernameColor);
             subjectTextView.setTextColor(mPrimaryTextColor);
             titleTextView.setTextColor(mPrimaryTextColor);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CustomView/ColorPickerDialog.java
Patch:
@@ -64,6 +64,7 @@ public void afterTextChanged(Editable editable) {
                     try {
                         changeColorValueEditText = false;
                         colorValue = Color.parseColor("#" + s);
+                        colorView.setBackgroundColor(colorValue);
                         seekBarA.setProgress(255);
                         seekBarR.setProgress(Integer.parseInt(s.substring(0, 2), 16));
                         seekBarG.setProgress(Integer.parseInt(s.substring(2, 4), 16));
@@ -76,6 +77,7 @@ public void afterTextChanged(Editable editable) {
                     try {
                         changeColorValueEditText = false;
                         colorValue = Color.parseColor("#" + s);
+                        colorView.setBackgroundColor(colorValue);
                         seekBarA.setProgress(Integer.parseInt(s.substring(0, 2), 16));
                         seekBarR.setProgress(Integer.parseInt(s.substring(2, 4), 16));
                         seekBarG.setProgress(Integer.parseInt(s.substring(4, 6), 16));

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditDataRoomDatabase.java
Patch:
@@ -143,8 +143,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
                     "crosspost_icon_tint INTEGER NOT NULL, stickied_post_icon_tint INTEGER NOT NULL, subscribed INTEGER NOT NULL," +
                     "unsubscribed INTEGER NOT NULL, username INTEGER NOT NULL, subreddit INTEGER NOT NULL," +
                     "author_flair_text_color INTEGER NOT NULL, submitter INTEGER NOT NULL," +
-                    "moderator INTEGER NOT NULL, notification_icon_color INTEGER NOT NULL," +
-                    "single_comment_thread_background_color INTEGER NOT NULL," +
+                    "moderator INTEGER NOT NULL, single_comment_thread_background_color INTEGER NOT NULL," +
                     "unread_message_background_color INTEGER NOT NULL, divider_color INTEGER NOT NULL," +
                     "no_preview_link_background_color INTEGER NOT NULL," +
                     "vote_and_reply_unavailable_button_color INTEGER NOT NULL," +

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -1004,7 +1004,7 @@ public CharSequence getPageTitle(int position) {
             } else {
                 switch (position) {
                     case 0:
-                        return "Best";
+                        return "Home";
                     case 1:
                         return "Popular";
                     case 2:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/PostFragment.java
Patch:
@@ -309,9 +309,9 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                 @Override
                 public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
                     if (dy > 0) {
-                        ((ViewSubredditDetailActivity) activity).postScrollDown();
+                        ((ViewSubredditDetailActivity) activity).contentScrollDown();
                     } else if (dy < 0) {
-                        ((ViewSubredditDetailActivity) activity).postScrollUp();
+                        ((ViewSubredditDetailActivity) activity).contentScrollUp();
                     }
 
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -745,7 +745,6 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             case R.id.action_search_main_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
-                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_main_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchActivity.java
Patch:
@@ -171,9 +171,9 @@ public boolean onQueryTextCleared() {
 
         Intent intent = getIntent();
         if (intent.hasExtra(EXTRA_SUBREDDIT_NAME)) {
-            subredditName = intent.getExtras().getString(EXTRA_SUBREDDIT_NAME);
+            subredditName = intent.getStringExtra(EXTRA_SUBREDDIT_NAME);
             subredditNameTextView.setText(subredditName);
-            subredditIsUser = intent.getExtras().getBoolean(EXTRA_SUBREDDIT_IS_USER);
+            subredditIsUser = intent.getBooleanExtra(EXTRA_SUBREDDIT_IS_USER, false);
         }
     }
 
@@ -196,7 +196,7 @@ protected void applyCustomTheme() {
         simpleSearchView.setIconsColor(toolbarPrimaryTextAndIconColorColor);
         simpleSearchView.setTextColor(toolbarPrimaryTextAndIconColorColor);
         simpleSearchView.setBackIconColor(toolbarPrimaryTextAndIconColorColor);
-        simpleSearchView.setHintTextColor(mCustomThemeWrapper.getSecondaryTextColor());
+        simpleSearchView.setHintTextColor(mCustomThemeWrapper.getToolbarPrimaryTextAndIconColor());
         searchInTextView.setTextColor(mCustomThemeWrapper.getColorAccent());
         subredditNameTextView.setTextColor(mCustomThemeWrapper.getPrimaryTextColor());
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchResultActivity.java
Patch:
@@ -231,7 +231,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             case R.id.action_search_search_result_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
-                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
+                if (mSubredditName != null && !mSubredditName.equals("")) {
+                    intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_NAME, mSubredditName);
+                }
                 intent.putExtra(SearchActivity.EXTRA_QUERY, mQuery);
                 finish();
                 startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewMultiRedditDetailActivity.java
Patch:
@@ -215,7 +215,6 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             case R.id.action_search_view_multi_reddit_detail_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
-                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_view_multi_reddit_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -662,8 +662,6 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
             case R.id.action_search_view_subreddit_detail_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_NAME, subredditName);
-                intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_IS_USER, false);
-                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_view_subreddit_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -583,7 +583,6 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_NAME, username);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_IS_USER, true);
-                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_view_user_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemeListingActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.view.View;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.EditText;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
@@ -268,7 +269,8 @@ private void checkDuplicateAndImportTheme(CustomTheme customTheme, boolean check
                 new InsertCustomThemeAsyncTask.InsertCustomThemeAsyncTaskListener() {
                     @Override
                     public void success() {
-                        Snackbar.make(coordinatorLayout, R.string.import_theme_success, Snackbar.LENGTH_SHORT).show();
+                        Toast.makeText(CustomThemeListingActivity.this, R.string.import_theme_success, Toast.LENGTH_SHORT).show();
+                        EventBus.getDefault().post(new RecreateActivityEvent());
                     }
 
                     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -811,9 +811,9 @@ void pauseLazyMode() {
         public void changeSortType(SortType sortType) {
             if (viewPager.getCurrentItem() == 0) {
                 if (postFragment != null) {
-                    mSharedPreferences.edit().putString(SharedPreferencesUtils.SORT_TYPE_USER_POST, sortType.getType().name()).apply();
+                    mSharedPreferences.edit().putString(SharedPreferencesUtils.SORT_TYPE_USER_POST_BASE + username, sortType.getType().name()).apply();
                     if(sortType.getTime() != null) {
-                        mSharedPreferences.edit().putString(SharedPreferencesUtils.SORT_TIME_USER_POST, sortType.getTime().name()).apply();
+                        mSharedPreferences.edit().putString(SharedPreferencesUtils.SORT_TIME_USER_POST_BASE + username, sortType.getTime().name()).apply();
                     }
 
                     postFragment.changeSortType(sortType);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SubredditMultiselectionActivity.java
Patch:
@@ -85,12 +85,12 @@ public class SubredditMultiselectionActivity extends BaseActivity {
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
+    public SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     private boolean mNullAccessToken = false;
     private String mAccessToken;
     private String mAccountName;
     private SubredditMultiselectionRecyclerViewAdapter mAdapter;
     private RequestManager mGlide;
-    private SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         ((Infinity) getApplication()).getAppComponent().inject(this);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSidebarActivity.java
Patch:
@@ -76,8 +76,8 @@ public class ViewSidebarActivity extends BaseActivity {
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
+    public SubredditViewModel mSubredditViewModel;
     private String subredditName;
-    private SubredditViewModel mSubredditViewModel;
     private int markdownColor;
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -126,10 +126,10 @@ public class ViewUserDetailActivity extends BaseActivity implements SortTypeSele
     SharedPreferences mSharedPreferences;
     @Inject
     CustomThemeWrapper mCustomThemeWrapper;
+    public UserViewModel userViewModel;
     private SectionsPagerAdapter sectionsPagerAdapter;
     private SubscribedUserDao subscribedUserDao;
     private RequestManager glide;
-    private UserViewModel userViewModel;
     private Menu mMenu;
     private AppBarLayout.LayoutParams params;
     private UserThingSortTypeBottomSheetFragment userThingSortTypeBottomSheetFragment;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CustomThemeListingRecyclerViewAdapter.java
Patch:
@@ -78,6 +78,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 Intent intent = new Intent(activity, CustomizeThemeActivity.class);
                 intent.putExtra(CustomizeThemeActivity.EXTRA_THEME_NAME, customTheme.name);
                 intent.putExtra(CustomizeThemeActivity.EXTRA_IS_PREDEFIINED_THEME, true);
+                intent.putExtra(CustomizeThemeActivity.EXTRA_CREATE_THEME, true);
                 activity.startActivity(intent);
             });
         } else if (holder instanceof UserCustomThemeViewHolder) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -41,6 +41,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.FlairBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.Fragment.FollowedUsersListingFragment;
 import ml.docilealligator.infinityforreddit.Fragment.PostFragment;
+import ml.docilealligator.infinityforreddit.Fragment.SidebarFragment;
 import ml.docilealligator.infinityforreddit.Fragment.SubredditListingFragment;
 import ml.docilealligator.infinityforreddit.Fragment.SubscribedSubredditsListingFragment;
 import ml.docilealligator.infinityforreddit.Fragment.UserListingFragment;
@@ -146,4 +147,6 @@ public interface AppComponent {
     void inject(CustomizeThemeActivity customizeThemeActivity);
 
     void inject(CustomThemeListingActivity customThemeListingActivity);
+
+    void inject(SidebarFragment sidebarFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/SubscribedSubredditsListingFragment.java
Patch:
@@ -74,9 +74,9 @@ public class SubscribedSubredditsListingFragment extends Fragment implements Fra
     RedditDataRoomDatabase mRedditDataRoomDatabase;
     @Inject
     CustomThemeWrapper customThemeWrapper;
+    public SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     private Activity mActivity;
     private RequestManager mGlide;
-    private SubscribedSubredditViewModel mSubscribedSubredditViewModel;
 
     public SubscribedSubredditsListingFragment() {
         // Required empty public constructor

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/RulesActivity.java
Patch:
@@ -1,6 +1,7 @@
 package ml.docilealligator.infinityforreddit.Activity;
 
 import android.content.SharedPreferences;
+import android.content.res.ColorStateList;
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
@@ -105,6 +106,7 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
+        appBarLayout.setBackgroundColor(mCustomThemeWrapper.getColorPrimary());
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
@@ -131,6 +133,7 @@ protected CustomThemeWrapper getCustomThemeWrapper() {
     protected void applyCustomTheme() {
         coordinatorLayout.setBackgroundColor(mCustomThemeWrapper.getBackgroundColor());
         applyAppBarLayoutAndToolbarTheme(appBarLayout, toolbar);
+        progressBar.setIndeterminateTintList(ColorStateList.valueOf(mCustomThemeWrapper.getColorAccent()));
         errorTextView.setTextColor(mCustomThemeWrapper.getSecondaryTextColor());
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomizeThemeActivity.java
Patch:
@@ -198,7 +198,8 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                     }
                     CustomTheme customTheme = CustomTheme.convertSettingsItemsToCustomTheme(customThemeSettingsItems, themeName);
                     new InsertCustomThemeAsyncTask(redditDataRoomDatabase, lightThemeSharedPreferences,
-                            darkThemeSharedPreferences, amoledThemeSharedPreferences, customTheme, () -> {
+                            darkThemeSharedPreferences, amoledThemeSharedPreferences, customTheme,
+                            false, () -> {
                         Toast.makeText(CustomizeThemeActivity.this, R.string.saved, Toast.LENGTH_SHORT).show();
                         EventBus.getDefault().post(new RecreateActivityEvent());
                         finish();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CustomThemeListingRecyclerViewAdapter.java
Patch:
@@ -18,6 +18,7 @@
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
+import ml.docilealligator.infinityforreddit.Activity.CustomThemeListingActivity;
 import ml.docilealligator.infinityforreddit.Activity.CustomizeThemeActivity;
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomTheme;
 import ml.docilealligator.infinityforreddit.Fragment.CustomThemeOptionsBottomSheetFragment;
@@ -90,7 +91,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 activity.startActivity(intent);
             });
             ((UserCustomThemeViewHolder) holder).shareImageView.setOnClickListener(view -> {
-
+                ((CustomThemeListingActivity) activity).shareTheme(customTheme);
             });
             ((UserCustomThemeViewHolder) holder).itemView.setOnClickListener(view -> {
                 CustomThemeOptionsBottomSheetFragment customThemeOptionsBottomSheetFragment = new CustomThemeOptionsBottomSheetFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/CopyTextBottomSheetFragment.java
Patch:
@@ -98,7 +98,7 @@ private void copyText(String text) {
             clipboard.setPrimaryClip(clip);
             Toast.makeText(activity, R.string.copy_success, Toast.LENGTH_SHORT).show();
         } else {
-            Toast.makeText(activity, R.string.copy_failed, Toast.LENGTH_SHORT).show();
+            Toast.makeText(activity, R.string.copy_link_failed, Toast.LENGTH_SHORT).show();
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Fragment/ShareLinkBottomSheetFragment.java
Patch:
@@ -130,7 +130,7 @@ private void copyLink(String link) {
             clipboard.setPrimaryClip(clip);
             Toast.makeText(activity, R.string.copy_success, Toast.LENGTH_SHORT).show();
         } else {
-            Toast.makeText(activity, R.string.copy_failed, Toast.LENGTH_SHORT).show();
+            Toast.makeText(activity, R.string.copy_link_failed, Toast.LENGTH_SHORT).show();
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemeListingActivity.java
Patch:
@@ -169,11 +169,11 @@ public void delete(String name) {
                             }
                             if (isDarkTheme) {
                                 CustomThemeSharedPreferencesUtils.insertThemeToSharedPreferences(
-                                        CustomThemeWrapper.getIndigo(CustomThemeListingActivity.this), darkThemeSharedPreferences);
+                                        CustomThemeWrapper.getIndigoDark(CustomThemeListingActivity.this), darkThemeSharedPreferences);
                             }
                             if (isAmoledTheme) {
                                 CustomThemeSharedPreferencesUtils.insertThemeToSharedPreferences(
-                                        CustomThemeWrapper.getIndigo(CustomThemeListingActivity.this), amoledThemeSharedPreferences);
+                                        CustomThemeWrapper.getIndigoAmoled(CustomThemeListingActivity.this), amoledThemeSharedPreferences);
                             }
                             EventBus.getDefault().post(new RecreateActivityEvent());
                         }).execute())

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -410,6 +410,7 @@ protected CustomThemeWrapper getCustomThemeWrapper() {
     @Override
     protected void applyCustomTheme() {
         coordinatorLayout.setBackgroundColor(mCustomThemeWrapper.getBackgroundColor());
+        collapsingToolbarLayout.setContentScrimColor(mCustomThemeWrapper.getColorPrimary());
         applyAppBarLayoutAndToolbarTheme(appBarLayout, toolbar);
         expandedTabTextColor = mCustomThemeWrapper.getTabLayoutWithExpandedCollapsingToolbarTextColor();
         expandedTabIndicatorColor = mCustomThemeWrapper.getTabLayoutWithExpandedCollapsingToolbarTabIndicator();
@@ -546,7 +547,7 @@ public void deleteFailed() {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.view_user_detail_activity, menu);
-        applyAppBarLayoutAndToolbarTheme(appBarLayout, toolbar);
+        applyMenuItemTheme(menu);
         mMenu = menu;
         MenuItem lazyModeItem = mMenu.findItem(R.id.action_lazy_mode_view_user_detail_activity);
         if (isInLazyMode) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CustomThemeListingActivity.java
Patch:
@@ -56,14 +56,14 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         CustomThemeListingRecyclerViewAdapter adapter = new CustomThemeListingRecyclerViewAdapter(this,
-                CustomThemeWrapper.getPredifinedThemes(this));
+                CustomThemeWrapper.getPredefinedThemes(this));
         recyclerView.setAdapter(adapter);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
 
         customThemeViewModel = new ViewModelProvider(this,
                 new CustomThemeViewModel.Factory(redditDataRoomDatabase))
                 .get(CustomThemeViewModel.class);
-        customThemeViewModel.getAllCustomThemes().observe(this, customThemes -> adapter.setUserThemes(customThemes));
+        customThemeViewModel.getAllCustomThemes().observe(this, adapter::setUserThemes);
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/Settings/ThemePreferenceFragment.java
Patch:
@@ -53,7 +53,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         Preference customizeLightThemePreference = findPreference(SharedPreferencesUtils.CUSTOMIZE_LIGHT_THEME);
         Preference customizeDarkThemePreference = findPreference(SharedPreferencesUtils.CUSTOMIZE_DARK_THEME);
         Preference customizeAmoledThemePreference = findPreference(SharedPreferencesUtils.CUSTOMIZE_AMOLED_THEME);
-        Preference selectAndCustomizeThemePreference = findPreference(SharedPreferencesUtils.SELECT_AND_CUSTOMIZE_THEME);
+        Preference selectAndCustomizeThemePreference = findPreference(SharedPreferencesUtils.MANAGE_THEMES);
 
         boolean systemDefault = Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q;
         if (themePreference != null && amoledDarkSwitch != null) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -80,5 +80,5 @@ public class SharedPreferencesUtils {
     public static final String CUSTOMIZE_LIGHT_THEME = "customize_light_theme";
     public static final String CUSTOMIZE_DARK_THEME = "customize_dark_theme";
     public static final String CUSTOMIZE_AMOLED_THEME = "customize_amoled_theme";
-    public static final String SELECT_AND_CUSTOMIZE_THEME = "select_and_customize_theme";
+    public static final String MANAGE_THEMES = "manage_themes";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -495,13 +495,13 @@ public void onMenuClick(int stringId) {
                     case R.string.light_theme:
                         mSharedPreferences.edit().putString(SharedPreferencesUtils.THEME_KEY, "0").apply();
                         AppCompatDelegate.setDefaultNightMode(MODE_NIGHT_NO);
-                        mCustomThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.NORMAL);
+                        mCustomThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.LIGHT);
                         break;
                     case R.string.dark_theme:
                         mSharedPreferences.edit().putString(SharedPreferencesUtils.THEME_KEY, "1").apply();
                         AppCompatDelegate.setDefaultNightMode(MODE_NIGHT_YES);
                         if (mSharedPreferences.getBoolean(SharedPreferencesUtils.AMOLED_DARK_KEY, false)) {
-                            mCustomThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.AMOLED_DARK);
+                            mCustomThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.AMOLED);
                         } else {
                             mCustomThemeWrapper.setThemeType(CustomThemeSharedPreferencesUtils.DARK);
                         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -23,8 +23,8 @@
 import ml.docilealligator.infinityforreddit.Activity.SearchResultActivity;
 import ml.docilealligator.infinityforreddit.Activity.SearchSubredditsResultActivity;
 import ml.docilealligator.infinityforreddit.Activity.SettingsActivity;
-import ml.docilealligator.infinityforreddit.Activity.SubredditSelectionActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubredditMultiselectionActivity;
+import ml.docilealligator.infinityforreddit.Activity.SubredditSelectionActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubscribedThingListingActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewGIFActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewImageActivity;
@@ -44,9 +44,9 @@
 import ml.docilealligator.infinityforreddit.Fragment.UserListingFragment;
 import ml.docilealligator.infinityforreddit.Service.SubmitPostService;
 import ml.docilealligator.infinityforreddit.Settings.GesturesAndButtonsPreferenceFragment;
-import ml.docilealligator.infinityforreddit.Settings.InterfacePreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.MainPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.NotificationPreferenceFragment;
+import ml.docilealligator.infinityforreddit.Settings.ThemePreferenceFragment;
 
 @Singleton
 @Component(modules = AppModule.class)
@@ -139,5 +139,5 @@ public interface AppComponent {
 
     void inject(SubredditMultiselectionActivity subredditMultiselectionActivity);
 
-    void inject(InterfacePreferenceFragment interfacePreferenceFragment);
+    void inject(ThemePreferenceFragment themePreferenceFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/Utils.java
Patch:
@@ -44,7 +44,7 @@ public static String getElapsedTime(Context context,  long time) {
             return context.getString(R.string.elapsed_time_a_minute_ago);
         } else if (diff < 50 * MINUTE_MILLIS) {
             return context.getString(R.string.elapsed_time_minutes_ago, diff / MINUTE_MILLIS);
-        } else if (diff < 90 * MINUTE_MILLIS) {
+        } else if (diff < 120 * MINUTE_MILLIS) {
             return context.getString(R.string.elapsed_time_an_hour_ago);
         } else if (diff < 24 * HOUR_MILLIS) {
             return context.getString(R.string.elapsed_time_hours_ago, diff / HOUR_MILLIS);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MainActivity.java
Patch:
@@ -193,6 +193,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setTheme(R.style.AppTheme_NoActionBarWithTransparentStatusBar);
 
+        setHasDrawerLayout();
+
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.activity_main);
@@ -292,6 +294,7 @@ protected CustomThemeWrapper getCustomThemeWrapper() {
     protected void applyCustomTheme() {
         int backgroundColor = mCustomThemeWrapper.getBackgroundColor();
         drawer.setBackgroundColor(backgroundColor);
+        drawer.setStatusBarBackgroundColor(mCustomThemeWrapper.getColorPrimaryDark());
         navigationView.setBackgroundColor(backgroundColor);
         appBarLayout.setBackgroundColor(mCustomThemeWrapper.getToolbarAndTabBackgroundColor());
         applyTabLayoutTheme(tabLayout);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -14,8 +14,8 @@
 import dagger.Module;
 import dagger.Provides;
 import ml.docilealligator.infinityforreddit.CustomTheme.CustomThemeWrapper;
+import ml.docilealligator.infinityforreddit.Utils.CustomThemeSharedPreferencesUtils;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
-import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;
 import okhttp3.ConnectionPool;
 import okhttp3.OkHttpClient;
 import retrofit2.Retrofit;
@@ -110,7 +110,7 @@ SharedPreferences provideSharedPreferences() {
     @Named("theme")
     @Singleton
     SharedPreferences provideThemeSharedPreferences() {
-        return mApplication.getSharedPreferences(SharedPreferencesUtils.THEME_SHARED_PREFERENCES_FILE, Context.MODE_PRIVATE);
+        return mApplication.getSharedPreferences(CustomThemeSharedPreferencesUtils.THEME_SHARED_PREFERENCES_FILE, Context.MODE_PRIVATE);
     }
 
     @Provides

File: app/src/main/java/ml/docilealligator/infinityforreddit/FragmentCommunicator.java
Patch:
@@ -33,4 +33,6 @@ default void changePostLayout(int postLayout) {
 
     default void stopRefreshProgressbar() {
     }
+
+    void applyTheme();
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/Utils.java
Patch:
@@ -1,7 +1,6 @@
 package ml.docilealligator.infinityforreddit.Utils;
 
 import android.content.Context;
-import android.util.TypedValue;
 
 import java.util.Locale;
 
@@ -75,9 +74,9 @@ public static String getNVotes(boolean showAbsoluteNumberOfVotes, int votes) {
         }
     }
 
-    public static int getAttributeColor(Context context, int attrId) {
+    /*public static int getAttributeColor(Context context, int attrId) {
         TypedValue typedValue = new TypedValue();
         context.getTheme().resolveAttribute(attrId, typedValue, true);
         return typedValue.data;
-    }
+    }*/
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/CreateMultiRedditActivity.java
Patch:
@@ -93,6 +93,8 @@ protected void onCreate(Bundle savedInstanceState) {
                 bindView();
             }
         } else {
+            mSelectedSubscribedSubreddits = new ArrayList<>();
+            mSelectedOtherSubreddits = new ArrayList<>();
             getCurrentAccountAndBindView();
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/MultiReddit/MultiRedditDao.java
Patch:
@@ -25,8 +25,8 @@ public interface MultiRedditDao {
     @Query("SELECT * FROM multi_reddits WHERE name = :name AND username = :username COLLATE NOCASE LIMIT 1")
     MultiReddit getMultiReddit(String name, String username);
 
-    @Query("DELETE FROM multi_reddits WHERE path = :multipath AND username = :username")
-    void deleteMultiReddit(String multipath, String username);
+    @Query("DELETE FROM multi_reddits WHERE name = :name AND username = :username")
+    void deleteMultiReddit(String name, String username);
 
     @Query("DELETE FROM multi_reddits WHERE username = :username")
     void deleteAllUserMultiReddits(String username);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -234,7 +234,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     ((DataViewHolder) holder).scoreTextView.setText(Utils.getNVotes(mShowAbsoluteNumberOfVotes,
                             comment.getScore() + comment.getVoteType()));
 
-                    VoteThing.voteThing(mOauthRetrofit, mAccessToken, new VoteThing.VoteThingListener() {
+                    VoteThing.voteThing(mContext, mOauthRetrofit, mAccessToken, new VoteThing.VoteThingListener() {
                         @Override
                         public void onVoteThingSuccess(int position) {
                             if (newVoteType.equals(RedditUtils.DIR_UPVOTE)) {
@@ -286,7 +286,7 @@ public void onVoteThingFail(int position) {
                     ((DataViewHolder) holder).scoreTextView.setText(Utils.getNVotes(mShowAbsoluteNumberOfVotes,
                             comment.getScore() + comment.getVoteType()));
 
-                    VoteThing.voteThing(mOauthRetrofit, mAccessToken, new VoteThing.VoteThingListener() {
+                    VoteThing.voteThing(mContext, mOauthRetrofit, mAccessToken, new VoteThing.VoteThingListener() {
                         @Override
                         public void onVoteThingSuccess(int position1) {
                             if (newVoteType.equals(RedditUtils.DIR_DOWNVOTE)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -8,7 +8,6 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
-import android.util.Log;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
@@ -132,8 +131,6 @@ protected void onCreate(Bundle savedInstanceState) {
                     }
                 } else if (path.matches(USER_PATTERN_1)) {
                     Intent intent = new Intent(this, ViewUserDetailActivity.class);
-                    Log.i("afasfasfsda", "s " + path);
-                    Log.i("afasfasfsda", "s " + path.substring(6));
                     intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, path.substring(6));
                     intent.putExtra(ViewUserDetailActivity.EXTRA_MESSAGE_FULLNAME, messageFullname);
                     intent.putExtra(ViewUserDetailActivity.EXTRA_NEW_ACCOUNT_NAME, newAccountName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -1323,7 +1323,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
             });
             if ((post.isNSFW() && mNeedBlurNSFW) || post.isSpoiler() && mNeedBlurSpoiler) {
                 imageRequestBuilder
-                        .transform(new BlurTransformation(50, 10))
+                        .transform(new BlurTransformation(50, 2))
                         .into(((PostCompactViewHolder) holder).imageView);
             } else {
                 imageRequestBuilder.into(((PostCompactViewHolder) holder).imageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -79,6 +79,7 @@ Retrofit provideUploadVideoRetrofit() {
     OkHttpClient provideOkHttpClient(@Named("no_oauth") Retrofit retrofit, RedditDataRoomDatabase accountRoomDatabase) {
         OkHttpClient.Builder okHttpClientBuilder = new OkHttpClient.Builder();
         okHttpClientBuilder.authenticator(new AccessTokenAuthenticator(retrofit, accountRoomDatabase));
+                //.addInterceptor(new Okhttp3DebugInterceptor(mApplication));
         return okHttpClientBuilder.build();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1305,7 +1305,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                 });
 
         if ((mPost.isNSFW() && mNeedBlurNSFW) || (mPost.isSpoiler() && mNeedBlurSpoiler)) {
-            imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 2)))
+            imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10)))
                     .into(holder.mImageView);
         } else {
             imageRequestBuilder.into(holder.mImageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -1297,7 +1297,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
             });
 
             if ((post.isNSFW() && mNeedBlurNSFW) || post.isSpoiler() && mNeedBlurSpoiler) {
-                imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 2)))
+                imageRequestBuilder.apply(RequestOptions.bitmapTransform(new BlurTransformation(50, 10)))
                         .into(((PostViewHolder) holder).imageView);
             } else {
                 imageRequestBuilder.into(((PostViewHolder) holder).imageView);
@@ -1320,7 +1320,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
             });
             if ((post.isNSFW() && mNeedBlurNSFW) || post.isSpoiler() && mNeedBlurSpoiler) {
                 imageRequestBuilder
-                        .transform(new BlurTransformation(50, 2))
+                        .transform(new BlurTransformation(50, 10))
                         .into(((PostCompactViewHolder) holder).imageView);
             } else {
                 imageRequestBuilder.into(((PostCompactViewHolder) holder).imageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Settings/InterfacePreferenceFragment.java
Patch:
@@ -11,7 +11,7 @@
 
 import org.greenrobot.eventbus.EventBus;
 
-import ml.docilealligator.infinityforreddit.Event.ChangePostLayoutEvent;
+import ml.docilealligator.infinityforreddit.Event.ChangeDefaultPostLayoutEvent;
 import ml.docilealligator.infinityforreddit.Event.ChangeShowElapsedTimeEvent;
 import ml.docilealligator.infinityforreddit.Event.ChangeVoteButtonsPositionEvent;
 import ml.docilealligator.infinityforreddit.Event.RecreateActivityEvent;
@@ -70,7 +70,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
 
         if (defaultPostLayoutSwitch != null) {
             defaultPostLayoutSwitch.setOnPreferenceChangeListener((preference, newValue) -> {
-                EventBus.getDefault().post(new ChangePostLayoutEvent(Integer.parseInt((String) newValue)));
+                EventBus.getDefault().post(new ChangeDefaultPostLayoutEvent(Integer.parseInt((String) newValue)));
                 return true;
             });
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -41,6 +41,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.SubscribedSubredditsListingFragment;
 import ml.docilealligator.infinityforreddit.Fragment.UserListingFragment;
 import ml.docilealligator.infinityforreddit.Service.SubmitPostService;
+import ml.docilealligator.infinityforreddit.Settings.GesturesAndButtonsPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.MainPreferenceFragment;
 import ml.docilealligator.infinityforreddit.Settings.NotificationPreferenceFragment;
 
@@ -128,4 +129,6 @@ public interface AppComponent {
     void inject(ViewSidebarActivity viewSidebarActivity);
 
     void inject(ViewVideoActivity viewVideoActivity);
+
+    void inject(GesturesAndButtonsPreferenceFragment gesturesAndButtonsPreferenceFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -69,4 +69,6 @@ public class SharedPreferencesUtils {
     public static final String VOLUME_KEYS_NAVIGATE_POSTS = "volume_keys_navigate_posts";
     public static final String MUTE_VIDEO = "mute_video";
     public static final String OPEN_LINK_IN_APP = "open_link_in_app";
+    public static final String LOCK_JUMP_TO_NEXT_TOP_LEVEL_COMMENT_BUTTON = "lock_jump_to_next_top_level_comment_button";
+    public static final String SWIPE_UP_TO_HIDE_JUMP_TO_NEXT_TOP_LEVEL_COMMENT_BUTTON = "swipe_up_to_hide_jump_to_next_top_level_comments_button";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/MultiRedditListingActivity.java
Patch:
@@ -183,7 +183,7 @@ private void bindView() {
 
         mRecyclerView.setLayoutManager(new LinearLayoutManager(this));
         MultiRedditListingRecyclerViewAdapter adapter = new MultiRedditListingRecyclerViewAdapter(this,
-                mOauthRetrofit, mRedditDataRoomDatabase, mAccessToken);
+                mOauthRetrofit, mRedditDataRoomDatabase, mAccessToken, mAccountName);
         mRecyclerView.setAdapter(adapter);
 
         mMultiRedditViewModel = new ViewModelProvider(this,
@@ -218,7 +218,7 @@ private void loadMultiReddits() {
         GetMultiReddit.getMyMultiReddits(mOauthRetrofit, mAccessToken, new GetMultiReddit.GetMultiRedditListener() {
             @Override
             public void success(ArrayList<MultiReddit> multiReddits) {
-                new InsertMultiRedditAsyncTask(mRedditDataRoomDatabase, multiReddits, () -> {
+                new InsertMultiRedditAsyncTask(mRedditDataRoomDatabase, multiReddits, mAccountName, () -> {
                     mInsertSuccess = true;
                     mSwipeRefreshLayout.setRefreshing(false);
                 }).execute();

File: app/src/main/java/ml/docilealligator/infinityforreddit/MultiReddit/FavoriteMultiReddit.java
Patch:
@@ -22,8 +22,8 @@ public interface FavoriteMultiRedditListener {
     }
 
     public static void favoriteMultiReddit(Retrofit oauthRetrofit, RedditDataRoomDatabase redditDataRoomDatabase,
-                                           String accessToken, boolean makeFavorite, MultiReddit multiReddit,
-                                           FavoriteMultiRedditListener favoriteMultiRedditListener) {
+                                           String accessToken, String accountName, boolean makeFavorite,
+                                           MultiReddit multiReddit, FavoriteMultiRedditListener favoriteMultiRedditListener) {
         Map<String, String> params = new HashMap<>();
         params.put(RedditUtils.MULTIPATH_KEY, multiReddit.getPath());
         params.put(RedditUtils.MAKE_FAVORITE_KEY, String.valueOf(makeFavorite));
@@ -36,7 +36,7 @@ public void onResponse(@NonNull Call<String> call, @NonNull Response<String> res
                     multiReddit.setFavorite(true);
                     ArrayList<MultiReddit> singleMultiRedditList = new ArrayList<>();
                     singleMultiRedditList.add(multiReddit);
-                    new InsertMultiRedditAsyncTask(redditDataRoomDatabase, singleMultiRedditList,
+                    new InsertMultiRedditAsyncTask(redditDataRoomDatabase, singleMultiRedditList, accountName,
                             favoriteMultiRedditListener::success).execute();
                 } else {
                     favoriteMultiRedditListener.failed();

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditDatabase/SubscribedSubredditDao.java
Patch:
@@ -19,6 +19,9 @@ public interface SubscribedSubredditDao {
     @Query("SELECT * from subscribed_subreddits WHERE username = :accountName ORDER BY name COLLATE NOCASE ASC")
     LiveData<List<SubscribedSubredditData>> getAllSubscribedSubreddits(String accountName);
 
+    @Query("SELECT * from subscribed_subreddits WHERE username = :accountName ORDER BY name COLLATE NOCASE ASC")
+    List<SubscribedSubredditData> getAllSubscribedSubredditsList(String accountName);
+
     @Query("SELECT * from subscribed_subreddits WHERE username = :accountName AND is_favorite = 1 ORDER BY name COLLATE NOCASE ASC")
     LiveData<List<SubscribedSubredditData>> getAllFavoriteSubscribedSubreddits(String accountName);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedUserDatabase/SubscribedUserDao.java
Patch:
@@ -16,6 +16,9 @@ public interface SubscribedUserDao {
     @Query("SELECT * FROM subscribed_users WHERE username = :accountName ORDER BY name COLLATE NOCASE ASC")
     LiveData<List<SubscribedUserData>> getAllSubscribedUsers(String accountName);
 
+    @Query("SELECT * FROM subscribed_users WHERE username = :accountName ORDER BY name COLLATE NOCASE ASC")
+    List<SubscribedUserData> getAllSubscribedUsersList(String accountName);
+
     @Query("SELECT * FROM subscribed_users WHERE username = :accountName AND is_favorite = 1 ORDER BY name COLLATE NOCASE ASC")
     LiveData<List<SubscribedUserData>> getAllFavoriteSubscribedUsers(String accountName);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -62,6 +62,8 @@ public class SharedPreferencesUtils {
     public static final int POST_LAYOUT_COMPACT = 1;
     public static final String PULL_NOTIFICATION_TIME = "pull_notification_time";
     public static final String SHOW_ELAPSED_TIME_KEY = "show_elapsed_time";
+    public static final String DEFAULT_POST_LAYOUT_KEY = "default_post_layout";
+    public static final String SHOW_DIVIDER_IN_COMPACT_LAYOUT = "show_divider_in_compact_layout";
     public static final String SWIPE_RIGHT_TO_GO_BACK_FROM_POST_DETAIL = "swipe_to_go_back_from_post_detail";
     public static final String VOLUME_KEYS_NAVIGATE_COMMENTS = "volume_keys_navigate_comments";
     public static final String VOLUME_KEYS_NAVIGATE_POSTS = "volume_keys_navigate_posts";

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -32,6 +32,7 @@
 import ml.docilealligator.infinityforreddit.Activity.ViewSidebarActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewSubredditDetailActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewUserDetailActivity;
+import ml.docilealligator.infinityforreddit.Activity.ViewVideoActivity;
 import ml.docilealligator.infinityforreddit.Fragment.CommentsListingFragment;
 import ml.docilealligator.infinityforreddit.Fragment.FlairBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.Fragment.FollowedUsersListingFragment;
@@ -125,4 +126,6 @@ public interface AppComponent {
     void inject(ViewMultiRedditDetailActivity viewMultiRedditDetailActivity);
 
     void inject(ViewSidebarActivity viewSidebarActivity);
+
+    void inject(ViewVideoActivity viewVideoActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -65,4 +65,5 @@ public class SharedPreferencesUtils {
     public static final String SWIPE_RIGHT_TO_GO_BACK_FROM_POST_DETAIL = "swipe_to_go_back_from_post_detail";
     public static final String VOLUME_KEYS_NAVIGATE_COMMENTS = "volume_keys_navigate_comments";
     public static final String VOLUME_KEYS_NAVIGATE_POSTS = "volume_keys_navigate_posts";
+    public static final String MUTE_VIDEO = "mute_video";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountPostsActivity.java
Patch:
@@ -35,7 +35,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.PostLayoutBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountSavedThingActivity.java
Patch:
@@ -40,7 +40,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.PostFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/FilteredThingActivity.java
Patch:
@@ -38,8 +38,8 @@
 import ml.docilealligator.infinityforreddit.Fragment.UserThingSortTypeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.Post;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.Post;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/SearchResultActivity.java
Patch:
@@ -44,7 +44,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.UserListingFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewMultiRedditDetailActivity.java
Patch:
@@ -35,7 +35,7 @@
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.MultiReddit.MultiReddit;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.SortType;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -72,7 +72,7 @@
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.ParseComment;
 import ml.docilealligator.infinityforreddit.ParsePost;
-import ml.docilealligator.infinityforreddit.Post;
+import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.ReadMessage;
 import ml.docilealligator.infinityforreddit.RedditAPI;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewSubredditDetailActivity.java
Patch:
@@ -55,7 +55,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.SortTypeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.ReadMessage;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -61,7 +61,7 @@
 import ml.docilealligator.infinityforreddit.Fragment.UserThingSortTypeBottomSheetFragment;
 import ml.docilealligator.infinityforreddit.FragmentCommunicator;
 import ml.docilealligator.infinityforreddit.Infinity;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.ReadMessage;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -76,8 +76,8 @@
 import ml.docilealligator.infinityforreddit.CustomView.MarkwonLinearLayoutManager;
 import ml.docilealligator.infinityforreddit.FetchComment;
 import ml.docilealligator.infinityforreddit.Fragment.ModifyCommentBottomSheetFragment;
-import ml.docilealligator.infinityforreddit.Post;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.Post;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.SaveThing;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -55,8 +55,8 @@
 import ml.docilealligator.infinityforreddit.CustomView.AspectRatioGifImageView;
 import ml.docilealligator.infinityforreddit.Event.PostUpdateEventToDetailActivity;
 import ml.docilealligator.infinityforreddit.NetworkState;
-import ml.docilealligator.infinityforreddit.Post;
-import ml.docilealligator.infinityforreddit.PostDataSource;
+import ml.docilealligator.infinityforreddit.Post.Post;
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.RedditDataRoomDatabase;
 import ml.docilealligator.infinityforreddit.SaveThing;

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentDataSource.java
Patch:
@@ -14,6 +14,7 @@
 import java.util.ArrayList;
 import java.util.Locale;
 
+import ml.docilealligator.infinityforreddit.Post.PostDataSource;
 import ml.docilealligator.infinityforreddit.Utils.JSONUtils;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import retrofit2.Call;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Event/PostUpdateEventToDetailActivity.java
Patch:
@@ -1,6 +1,6 @@
 package ml.docilealligator.infinityforreddit.Event;
 
-import ml.docilealligator.infinityforreddit.Post;
+import ml.docilealligator.infinityforreddit.Post.Post;
 
 public class PostUpdateEventToDetailActivity {
     public final Post post;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Event/PostUpdateEventToPostList.java
Patch:
@@ -1,6 +1,6 @@
 package ml.docilealligator.infinityforreddit.Event;
 
-import ml.docilealligator.infinityforreddit.Post;
+import ml.docilealligator.infinityforreddit.Post.Post;
 
 public class PostUpdateEventToPostList {
     public final Post post;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Event/SubmitTextOrLinkPostEvent.java
Patch:
@@ -1,6 +1,6 @@
 package ml.docilealligator.infinityforreddit.Event;
 
-import ml.docilealligator.infinityforreddit.Post;
+import ml.docilealligator.infinityforreddit.Post.Post;
 
 public class SubmitTextOrLinkPostEvent {
     public boolean postSuccess;

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchPost.java
Patch:
@@ -4,6 +4,7 @@
 
 import java.util.Locale;
 
+import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import retrofit2.Call;
 import retrofit2.Callback;

File: app/src/main/java/ml/docilealligator/infinityforreddit/NetworkState.java
Patch:
@@ -1,8 +1,8 @@
 package ml.docilealligator.infinityforreddit;
 
 public class NetworkState {
-    static final NetworkState LOADED;
-    static final NetworkState LOADING;
+    public static final NetworkState LOADED;
+    public static final NetworkState LOADING;
 
     static {
         LOADED = new NetworkState(Status.SUCCESS, "Success");
@@ -12,7 +12,7 @@ public class NetworkState {
     private final Status status;
     private final String msg;
 
-    NetworkState(Status status, String msg) {
+    public NetworkState(Status status, String msg) {
         this.status = status;
         this.msg = msg;
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/Post.java
Patch:
@@ -1,4 +1,4 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import android.os.Parcel;
 import android.os.Parcelable;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/PostDataSourceFactory.java
Patch:
@@ -1,11 +1,12 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import androidx.annotation.NonNull;
 import androidx.lifecycle.MutableLiveData;
 import androidx.paging.DataSource;
 
 import java.util.Locale;
 
+import ml.docilealligator.infinityforreddit.SortType;
 import retrofit2.Retrofit;
 
 class PostDataSourceFactory extends DataSource.Factory {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post/PostViewModel.java
Patch:
@@ -1,4 +1,4 @@
-package ml.docilealligator.infinityforreddit;
+package ml.docilealligator.infinityforreddit.Post;
 
 import androidx.annotation.NonNull;
 import androidx.core.util.Pair;
@@ -13,6 +13,8 @@
 
 import java.util.Locale;
 
+import ml.docilealligator.infinityforreddit.NetworkState;
+import ml.docilealligator.infinityforreddit.SortType;
 import retrofit2.Retrofit;
 
 public class PostViewModel extends ViewModel {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Service/SubmitPostService.java
Patch:
@@ -35,7 +35,7 @@
 import ml.docilealligator.infinityforreddit.Event.SubmitVideoPostEvent;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.NotificationUtils;
-import ml.docilealligator.infinityforreddit.Post;
+import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.R;
 import ml.docilealligator.infinityforreddit.SubmitPost;
 import retrofit2.Retrofit;

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubmitPost.java
Patch:
@@ -20,6 +20,7 @@
 import java.util.Locale;
 import java.util.Map;
 
+import ml.docilealligator.infinityforreddit.Post.Post;
 import ml.docilealligator.infinityforreddit.Utils.JSONUtils;
 import ml.docilealligator.infinityforreddit.Utils.RedditUtils;
 import okhttp3.MediaType;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewMultiRedditDetailActivity.java
Patch:
@@ -16,7 +16,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.Toolbar;
-import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
 
 import com.google.android.material.appbar.AppBarLayout;
@@ -55,8 +54,6 @@ public class ViewMultiRedditDetailActivity extends BaseActivity implements SortT
     private static final String ACCESS_TOKEN_STATE = "ATS";
     private static final String ACCOUNT_NAME_STATE = "ANS";
 
-    @BindView(R.id.coordinator_layout_view_multi_reddit_detail_activity)
-    CoordinatorLayout coordinatorLayout;
     @BindView(R.id.appbar_layout_view_multi_reddit_detail_activity)
     AppBarLayout appBarLayout;
     @BindView(R.id.collapsing_toolbar_layout_view_multi_reddit_detail_activity)

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -24,6 +24,7 @@ public class SharedPreferencesUtils {
     public static final String EMAIL_KEY = "email";
     public static final String REDDIT_ACCOUNT_KEY = "reddit_account";
     public static final String SUBREDDIT_KEY = "subreddit";
+    public static final String SHARE_KEY = "share";
     public static final String FONT_SIZE_KEY = "font_size";
     public static final String TITLE_FONT_SIZE_KEY = "title_font_size";
     public static final String CONTENT_FONT_SIZE_KEY = "content_font_size";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -40,6 +40,8 @@ public class SharedPreferencesUtils {
     public static final String SORT_TIME_SEARCH_POST = "sort_time_search_post";
     public static final String SORT_TYPE_SUBREDDIT_POST = "sort_type_subreddit_post";
     public static final String SORT_TIME_SUBREDDIT_POST = "sort_time_subreddit_post";
+    public static final String SORT_TYPE_MULTI_REDDIT_POST_BASE = "sort_type_multi_reddit_post_";
+    public static final String SORT_TIME_MULTI_REDDIT_POST_BASE = "sort_time_multi_reddit_post_";
     public static final String SORT_TYPE_USER_POST = "sort_type_user_post";
     public static final String SORT_TIME_USER_POST = "sort_time_user_post";
     public static final String SORT_TYPE_USER_COMMENT = "sort_type_user_comment";
@@ -51,6 +53,7 @@ public class SharedPreferencesUtils {
     public static final String POST_LAYOUT_POPULAR_POST = "post_layout_popular_post";
     public static final String POST_LAYOUT_ALL_POST = "post_layout_all_post";
     public static final String POST_LAYOUT_SUBREDDIT_POST_BASE = "post_layout_subreddit_post_";
+    public static final String POST_LAYOUT_MULTI_REDDIT_POST_BASE = "post_layout_multi_reddit_post_";
     public static final String POST_LAYOUT_USER_POST_BASE = "post_layout_user_post_";
     public static final String POST_LAYOUT_SEARCH_POST = "post_layout_search_post";
     public static final int POST_LAYOUT_CARD = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountPostsActivity.java
Patch:
@@ -149,11 +149,10 @@ public void onStateChanged(AppBarLayout appBarLayout, State state) {
             mAccessToken = savedInstanceState.getString(ACCESS_TOKEN_STATE);
             mAccountName = savedInstanceState.getString(ACCOUNT_NAME_STATE);
             isInLazyMode = savedInstanceState.getBoolean(IS_IN_LAZY_MODE_STATE);
+            mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
+            getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_account_posts_activity, mFragment).commit();
             if (!mNullAccessToken && mAccessToken == null) {
                 getCurrentAccountAndInitializeFragment();
-            } else {
-                mFragment = getSupportFragmentManager().getFragment(savedInstanceState, FRAGMENT_OUT_STATE);
-                getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_account_posts_activity, mFragment).commit();
             }
         } else {
             getCurrentAccountAndInitializeFragment();

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -27,6 +27,7 @@
 import ml.docilealligator.infinityforreddit.Activity.ViewGIFActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewImageActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewMessageActivity;
+import ml.docilealligator.infinityforreddit.Activity.ViewMultiRedditDetailActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewPostDetailActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewSubredditDetailActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewUserDetailActivity;
@@ -119,4 +120,6 @@ public interface AppComponent {
     void inject(ViewGIFActivity viewGIFActivity);
 
     void inject(MultiRedditListingActivity multiRedditListingActivity);
+
+    void inject(ViewMultiRedditDetailActivity viewMultiRedditDetailActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSourceFactory.java
Patch:
@@ -85,7 +85,7 @@ public DataSource<String, Post> create() {
         } else if (postType == PostDataSource.TYPE_SEARCH) {
             postDataSource = new PostDataSource(retrofit, accessToken, locale, subredditName, query,
                     postType, sortType, filter, nsfw);
-        } else if (postType == PostDataSource.TYPE_SUBREDDIT) {
+        } else if (postType == PostDataSource.TYPE_SUBREDDIT || postType == PostDataSource.TYPE_MULTI_REDDIT) {
             postDataSource = new PostDataSource(retrofit, accessToken, locale, subredditName, postType,
                     sortType, filter, nsfw);
         } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostViewModel.java
Patch:
@@ -252,7 +252,7 @@ public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {
             } else if (postType == PostDataSource.TYPE_SEARCH) {
                 return (T) new PostViewModel(retrofit, accessToken, locale, subredditName, query,
                         postType, sortType, filter, nsfw);
-            } else if (postType == PostDataSource.TYPE_SUBREDDIT) {
+            } else if (postType == PostDataSource.TYPE_SUBREDDIT || postType == PostDataSource.TYPE_MULTI_REDDIT) {
                 return (T) new PostViewModel(retrofit, accessToken, locale, subredditName, postType,
                         sortType, filter, nsfw);
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageActivity.java
Patch:
@@ -54,8 +54,8 @@
 import ml.docilealligator.infinityforreddit.FontStyle;
 import ml.docilealligator.infinityforreddit.Infinity;
 import ml.docilealligator.infinityforreddit.R;
-import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;
 import ml.docilealligator.infinityforreddit.TitleFontStyle;
+import ml.docilealligator.infinityforreddit.Utils.SharedPreferencesUtils;
 
 public class ViewImageActivity extends AppCompatActivity {
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -474,8 +474,9 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     ((PostDetailViewHolder) holder).mImageView.setOnClickListener(view -> {
                         Intent intent = new Intent(mActivity, ViewVideoActivity.class);
                         intent.setData(videoUri);
-                        intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, mPost.getSubredditName());
-                        intent.putExtra(ViewVideoActivity.ID_KEY, mPost.getId());
+                        intent.putExtra(ViewVideoActivity.EXTRA_VIDEO_DOWNLOAD_URL, mPost.getVideoDownloadUrl());
+                        intent.putExtra(ViewVideoActivity.EXTRA_SUBREDDIT, mPost.getSubredditName());
+                        intent.putExtra(ViewVideoActivity.EXTRA_ID, mPost.getId());
                         mActivity.startActivity(intent);
                     });
                     break;

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSource.java
Patch:
@@ -155,7 +155,7 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull final LoadCal
         this.params = params;
         this.callback = callback;
 
-        if ("".equals(params.key) || "null".equals(params.key)) {
+        if (params == null || "".equals(params.key) || "null".equals(params.key)) {
             return;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/JSONUtils.java
Patch:
@@ -37,6 +37,7 @@ public class JSONUtils {
     public static final String MEDIA_KEY = "media";
     public static final String REDDIT_VIDEO_KEY = "reddit_video";
     public static final String HLS_URL_KEY = "hls_url";
+    public static final String FALLBACK_URL_KEY = "fallback_url";
     public static final String IS_VIDEO_KEY = "is_video";
     public static final String CROSSPOST_PARENT_LIST = "crosspost_parent_list";
     public static final String REDDIT_VIDEO_PREVIEW_KEY = "reddit_video_preview";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils/SharedPreferencesUtils.java
Patch:
@@ -57,4 +57,5 @@ public class SharedPreferencesUtils {
     public static final int POST_LAYOUT_COMPACT = 1;
     public static final String PULL_NOTIFICATION_TIME = "pull_notification_time";
     public static final String SHOW_ELAPSED_TIME_KEY = "show_elapsed_time";
+    public static final String SWIPE_RIGHT_TO_GO_BACK_FROM_POST_DETAIL = "swipe_to_go_back_from_post_detail";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -585,6 +585,7 @@ public void failed() {
             if (comment.getAuthorFlair() != null && !comment.getAuthorFlair().equals("")) {
                 ((CommentViewHolder) holder).authorFlairTextView.setVisibility(View.VISIBLE);
                 ((CommentViewHolder) holder).authorFlairTextView.setText(comment.getAuthorFlair());
+                ((CommentViewHolder) holder).authorFlairTextView.setOnClickListener(view -> ((CommentViewHolder) holder).authorTextView.performClick());
             }
 
             if (comment.isSubmitter()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -82,9 +82,7 @@ public boolean areItemsTheSame(@NonNull Post post, @NonNull Post t1) {
 
         @Override
         public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
-            return post.getTitle().equals(t1.getTitle()) && !(post.getSelfText() != null && t1.getSelfText() != null
-                    && !post.getSelfText().equals(t1.getSelfText()))
-                    && post.getScore() == t1.getScore() && post.getVoteType() == t1.getVoteType();
+            return false;
         }
     };
     private Context mContext;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LoginActivity.java
Patch:
@@ -43,6 +43,8 @@ public class LoginActivity extends BaseActivity {
 
     @BindView(R.id.toolbar_login_activity)
     Toolbar toolbar;
+    @BindView(R.id.webview_login_activity)
+    WebView webView;
     @Inject
     @Named("no_oauth")
     Retrofit mRetrofit;
@@ -68,7 +70,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
-        WebView webView = findViewById(R.id.webview_login_activity);
         webView.getSettings().setJavaScriptEnabled(true);
         webView.getSettings().setDomStorageEnabled(true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/FragmentCommunicator.java
Patch:
@@ -23,4 +23,6 @@ default boolean isInLazyMode() {
         return false;
     }
 
+    default void changePostLayout(int postLayout) { }
+
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -36,9 +36,9 @@ public class LinkResolverActivity extends AppCompatActivity {
 
     private static final String POST_PATTERN = "/r/\\w+/comments/\\w+/{0,1}\\w+/{0,1}";
     private static final String COMMENT_PATTERN = "/r/\\w+/comments/\\w+/{0,1}\\w+/\\w+/{0,1}";
-    private static final String SUBREDDIT_PATTERN = "/r/\\w+/{0,1}";
+    private static final String SUBREDDIT_PATTERN = "/[rR]/\\w+/{0,1}";
     private static final String USER_PATTERN_1 = "/user/\\w+/{0,1}";
-    private static final String USER_PATTERN_2 = "/u/\\w+/{0,1}";
+    private static final String USER_PATTERN_2 = "/[uU]/\\w+/{0,1}";
 
     @Inject
     SharedPreferences mSharedPreferences;

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -16,6 +16,7 @@ public class JSONUtils {
     public static final String SELFTEXT_KEY = "selftext";
     public static final String SELFTEXT_HTML_KEY = "selftext_html";
     public static final String AUTHOR_KEY = "author";
+    public static final String AUTHOR_FLAIR_TEXT_KEY = "author_flair_text";
     public static final String LINK_AUTHOR_KEY = "link_author";
     public static final String LINK_FLAIR_TEXT_KEY = "link_flair_text";
     public static final String SCORE_KEY = "score";

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/SubredditListingRecyclerViewAdapter.java
Patch:
@@ -121,7 +121,7 @@ public void isNotSubscribed() {
                             ((DataViewHolder) holder).subscribeButton.setVisibility(View.VISIBLE);
                             ((DataViewHolder) holder).subscribeButton.setOnClickListener(view -> {
                                 SubredditSubscription.subscribeToSubreddit(oauthRetrofit, retrofit,
-                                        accessToken, accountName, subredditData.getName(), redditDataRoomDatabase,
+                                        accessToken, subredditData.getName(), accountName, redditDataRoomDatabase,
                                         new SubredditSubscription.SubredditSubscriptionListener() {
                                             @Override
                                             public void onSubredditSubscriptionSuccess() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -661,7 +661,7 @@ public void failed() {
 
             if (comment.hasReply()) {
                 if (comment.isExpanded()) {
-                    ((CommentViewHolder) holder).expandButton.setImageResource(R.drawable.ic_expand_less_black_20dp);
+                    ((CommentViewHolder) holder).expandButton.setImageResource(R.drawable.ic_expand_less_black_22dp);
                 } else {
                     ((CommentViewHolder) holder).expandButton.setImageResource(R.drawable.ic_expand_more_black_20dp);
                 }
@@ -1741,7 +1741,7 @@ class CommentViewHolder extends RecyclerView.ViewHolder {
                         } else {
                             expandChildren(commentPosition);
                             mVisibleComments.get(commentPosition).setExpanded(true);
-                            expandButton.setImageResource(R.drawable.ic_expand_less_black_20dp);
+                            expandButton.setImageResource(R.drawable.ic_expand_less_black_22dp);
                         }
                     }
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils.java
Patch:
@@ -2,7 +2,7 @@
 
 public class Utils {
     public static String addSubredditAndUserLink(String markdown) {
-        return markdown.replaceAll("(?<!\\s)/{0,1}u/\\w+/{0,1}(?<!\\s)$", "[$0]($0)")
-                .replaceAll("(?<!\\s)/{0,1}r/\\w+/{0,1}(?<!\\s)$", "[$0]($0)");
+        return markdown.replaceAll("\n", "  ")
+                .replaceAll("((?<=[\\s])|^)/{0,1}[ru]/\\w+/{0,1}", "[$0]($0)");
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostViewModel.java
Patch:
@@ -216,6 +216,7 @@ public Factory(Retrofit retrofit, String accessToken, Locale locale, String subr
             this.nsfw = nsfw;
         }
 
+        //User posts
         public Factory(Retrofit retrofit, String accessToken, Locale locale, String subredditName, int postType,
                        SortType sortType, String where, int filter, boolean nsfw) {
             this.retrofit = retrofit;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewUserDetailActivity.java
Patch:
@@ -621,6 +621,9 @@ public void sortTypeSelected(SortType sortType) {
 
     @Override
     public void sortTypeSelected(String sortType) {
+        Bundle bundle = new Bundle();
+        bundle.putString(SortTimeBottomSheetFragment.EXTRA_SORT_TYPE, sortType);
+        sortTimeBottomSheetFragment.setArguments(bundle);
         sortTimeBottomSheetFragment.show(getSupportFragmentManager(), sortTimeBottomSheetFragment.getTag());
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSource.java
Patch:
@@ -388,7 +388,7 @@ private void loadSubredditPostsAfter(@NonNull LoadParams<String> params, @NonNul
         RedditAPI api = retrofit.create(RedditAPI.class);
 
         Call<String> getPost;
-        if (accessToken != null) {
+        if (accessToken == null) {
             if (sortType.getTime() != null) {
                 getPost = api.getSubredditBestPosts(subredditOrUserName, sortType.getType().value,
                         sortType.getTime().value, after);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/AccountSavedThingActivity.java
Patch:
@@ -294,7 +294,6 @@ public Fragment getItem(int position) {
                 bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostDataSource.TYPE_USER);
                 bundle.putString(PostFragment.EXTRA_USER_NAME, mAccountName);
                 bundle.putString(PostFragment.EXTRA_USER_WHERE, PostDataSource.USER_WHERE_SAVED);
-                bundle.putString(PostFragment.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_NEW);
                 bundle.putInt(PostFragment.EXTRA_FILTER, PostFragment.EXTRA_NO_FILTER);
                 bundle.putString(PostFragment.EXTRA_ACCESS_TOKEN, mAccessToken);
                 fragment.setArguments(bundle);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -391,7 +391,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     Intent intent = new Intent(mActivity, FilteredThingActivity.class);
                     intent.putExtra(FilteredThingActivity.EXTRA_NAME, mSubredditNamePrefixed.substring(2));
                     intent.putExtra(FilteredThingActivity.EXTRA_POST_TYPE, PostDataSource.TYPE_SUBREDDIT);
-                    intent.putExtra(FilteredThingActivity.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_HOT);
                     intent.putExtra(FilteredThingActivity.EXTRA_FILTER, Post.NSFW_TYPE);
                     mActivity.startActivity(intent);
                 });
@@ -407,7 +406,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 Intent intent = new Intent(mActivity, FilteredThingActivity.class);
                 intent.putExtra(FilteredThingActivity.EXTRA_NAME, mSubredditNamePrefixed.substring(2));
                 intent.putExtra(FilteredThingActivity.EXTRA_POST_TYPE, PostDataSource.TYPE_SUBREDDIT);
-                intent.putExtra(FilteredThingActivity.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_HOT);
                 intent.putExtra(FilteredThingActivity.EXTRA_FILTER, mPost.getPostType());
                 mActivity.startActivity(intent);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Adapter/PostRecyclerViewAdapter.java
Patch:
@@ -328,7 +328,6 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                             Intent intent = new Intent(mContext, FilteredThingActivity.class);
                             intent.putExtra(FilteredThingActivity.EXTRA_NAME, post.getSubredditNamePrefixed().substring(2));
                             intent.putExtra(FilteredThingActivity.EXTRA_POST_TYPE, PostDataSource.TYPE_SUBREDDIT);
-                            intent.putExtra(FilteredThingActivity.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_HOT);
                             intent.putExtra(FilteredThingActivity.EXTRA_FILTER, Post.NSFW_TYPE);
                             mContext.startActivity(intent);
                         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentDataSourceFactory.java
Patch:
@@ -14,14 +14,14 @@ class CommentDataSourceFactory extends DataSource.Factory {
     private Locale locale;
     private String accessToken;
     private String username;
-    private String sortType;
+    private SortType sortType;
     private boolean areSavedComments;
 
     private CommentDataSource commentDataSource;
     private MutableLiveData<CommentDataSource> commentDataSourceLiveData;
 
     CommentDataSourceFactory(Retrofit retrofit, Locale locale, @Nullable String accessToken,
-                             String username, String sortType,
+                             String username, SortType sortType,
                              boolean areSavedComments) {
         this.retrofit = retrofit;
         this.locale = locale;
@@ -49,7 +49,7 @@ CommentDataSource getCommentDataSource() {
         return commentDataSource;
     }
 
-    void changeSortType(String sortType) {
+    void changeSortType(SortType sortType) {
         this.sortType = sortType;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingDataSourceFactory.java
Patch:
@@ -9,12 +9,12 @@
 public class SubredditListingDataSourceFactory extends DataSource.Factory {
     private Retrofit retrofit;
     private String query;
-    private String sortType;
+    private SortType sortType;
 
     private SubredditListingDataSource subredditListingDataSource;
     private MutableLiveData<SubredditListingDataSource> subredditListingDataSourceMutableLiveData;
 
-    SubredditListingDataSourceFactory(Retrofit retrofit, String query, String sortType) {
+    SubredditListingDataSourceFactory(Retrofit retrofit, String query, SortType sortType) {
         this.retrofit = retrofit;
         this.query = query;
         this.sortType = sortType;
@@ -37,7 +37,7 @@ SubredditListingDataSource getSubredditListingDataSource() {
         return subredditListingDataSource;
     }
 
-    void changeSortType(String sortType) {
+    void changeSortType(SortType sortType) {
         this.sortType = sortType;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingDataSourceFactory.java
Patch:
@@ -9,12 +9,12 @@
 public class UserListingDataSourceFactory extends DataSource.Factory {
     private Retrofit retrofit;
     private String query;
-    private String sortType;
+    private SortType sortType;
 
     private UserListingDataSource userListingDataSource;
     private MutableLiveData<UserListingDataSource> userListingDataSourceMutableLiveData;
 
-    UserListingDataSourceFactory(Retrofit retrofit, String query, String sortType) {
+    UserListingDataSourceFactory(Retrofit retrofit, String query, SortType sortType) {
         this.retrofit = retrofit;
         this.query = query;
         this.sortType = sortType;
@@ -37,7 +37,7 @@ UserListingDataSource getUserListingDataSource() {
         return userListingDataSource;
     }
 
-    void changeSortType(String sortType) {
+    void changeSortType(SortType sortType) {
         this.sortType = sortType;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/LinkResolverActivity.java
Patch:
@@ -165,7 +165,6 @@ private void deepLinkError(Uri uri) {
         }
 
         if (!packageNames.isEmpty()) {
-            intent.setPackage(packageNames.get(0));
             try {
                 startActivity(intent);
             } catch (ActivityNotFoundException e) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewVideoActivity.java
Patch:
@@ -50,7 +50,6 @@
 
 public class ViewVideoActivity extends AppCompatActivity {
 
-    public static final String TITLE_KEY = "TK";
     public static final String SUBREDDIT_KEY = "SK";
     public static final String ID_KEY = "IK";
     private static final int PERMISSION_REQUEST_WRITE_EXTERNAL_STORAGE = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -23,6 +23,7 @@
 import ml.docilealligator.infinityforreddit.Activity.SettingsActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubredditSelectionActivity;
 import ml.docilealligator.infinityforreddit.Activity.SubscribedThingListingActivity;
+import ml.docilealligator.infinityforreddit.Activity.ViewGIFActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewImageActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewMessageActivity;
 import ml.docilealligator.infinityforreddit.Activity.ViewPostDetailActivity;
@@ -112,4 +113,6 @@ public interface AppComponent {
     void inject(AccountSavedThingActivity accountSavedThingActivity);
 
     void inject(ViewImageActivity viewImageActivity);
+
+    void inject(ViewGIFActivity viewGIFActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Post.java
Patch:
@@ -13,7 +13,7 @@ public class Post implements Parcelable {
     public static final int IMAGE_TYPE = 1;
     public static final int LINK_TYPE = 2;
     public static final int VIDEO_TYPE = 3;
-    public static final int GIF_VIDEO_TYPE = 4;
+    public static final int GIF_TYPE = 4;
     public static final int NO_PREVIEW_LINK_TYPE = 5;
     public static final Creator<Post> CREATOR = new Creator<Post>() {
         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSource.java
Patch:
@@ -164,7 +164,7 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull final LoadCal
         this.params = params;
         this.callback = callback;
 
-        if (params.key.equals("") || params.key.equals("null")) {
+        if ("".equals(params.key) || "null".equals(params.key)) {
             return;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewImageActivity.java
Patch:
@@ -90,6 +90,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ((Infinity) getApplication()).getAppComponent().inject(this);
 
+        getTheme().applyStyle(R.style.Theme_Default, true);
+
         getTheme().applyStyle(FontStyle.valueOf(mSharedPreferences
                 .getString(SharedPreferencesUtils.FONT_SIZE_KEY, FontStyle.Normal.name())).getResId(), true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewVideoActivity.java
Patch:
@@ -74,6 +74,8 @@ public class ViewVideoActivity extends AppCompatActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        getTheme().applyStyle(R.style.Theme_Default, true);
+
         setContentView(R.layout.activity_view_video);
         ButterKnife.bind(this);
         setVolumeControlStream(AudioManager.STREAM_MUSIC);

File: app/src/main/java/ml/docilealligator/infinityforreddit/Activity/ViewPostDetailActivity.java
Patch:
@@ -640,7 +640,7 @@ public void onFetchMoreCommentFailed() {
     }
 
     private void refresh(boolean fetchPost, boolean fetchComments) {
-        if (!isRefreshing) {
+        if (mAdapter != null && !isRefreshing) {
             isRefreshing = true;
             mChildrenStartingIndex = 0;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SharedPreferencesUtils.java
Patch:
@@ -10,6 +10,7 @@ public class SharedPreferencesUtils {
     public static final String LAZY_MODE_INTERVAL_KEY = "lazy_mode_interval";
     public static final String NSFW_KEY = "nsfw";
     public static final String BLUR_NSFW_KEY = "blur_nsfw";
+    public static final String BLUR_SPOILER_KEY = "blur_spoiler";
     public static final String THEME_KEY = "theme";
     public static final String ICON_FOREGROUND_KEY = "icon_foreground";
     public static final String ICON_BACKGROUND_KEY = "icon_background";

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -103,8 +103,9 @@ public boolean areItemsTheSame(@NonNull Post post, @NonNull Post t1) {
 
         @Override
         public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
-            return post.getTitle().equals(t1.getTitle()) && post.getSelfText().equals(t1.getSelfText())
-                    && post.getScore() == t1.getScore();
+            return post.getTitle().equals(t1.getTitle()) && !(post.getSelfText() != null && t1.getSelfText() != null
+                    && !post.getSelfText().equals(t1.getSelfText()))
+                    && post.getScore() == t1.getScore() && post.getVoteType() == t1.getVoteType();
         }
     };
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -176,7 +176,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-
         EventBus.getDefault().register(this);
 
         getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentActivity.java
Patch:
@@ -150,8 +150,8 @@ public void configureConfiguration(@NonNull MarkwonConfiguration.Builder builder
                 })
                 .usePlugin(LinkifyPlugin.create(Linkify.WEB_URLS))
                 .build();
-        markwon.setMarkdown(commentParentMarkwonView, intent.getExtras().getString(EXTRA_COMMENT_PARENT_TEXT_KEY));
-        parentFullname = intent.getExtras().getString(EXTRA_PARENT_FULLNAME_KEY);
+        markwon.setMarkdown(commentParentMarkwonView, intent.getStringExtra(EXTRA_COMMENT_PARENT_TEXT_KEY));
+        parentFullname = intent.getStringExtra(EXTRA_PARENT_FULLNAME_KEY);
         parentDepth = intent.getExtras().getInt(EXTRA_PARENT_DEPTH_KEY);
         parentPosition = intent.getExtras().getInt(EXTRA_PARENT_POSITION_KEY);
         isReplying = intent.getExtras().getBoolean(EXTRA_IS_REPLYING_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -741,7 +741,6 @@ public void onVoteThingFail(int position1) { }
 
     private void loadImage(PostDetailViewHolder holder) {
         RequestBuilder imageRequestBuilder = mGlide.load(mPost.getPreviewUrl())
-                .apply(new RequestOptions().override(mPost.getPreviewWidth(), mPost.getPreviewHeight()))
                 .listener(new RequestListener<Drawable>() {
                     @Override
                     public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -163,6 +163,8 @@ public class MainActivity extends AppCompatActivity implements SortTypeBottomShe
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        setTheme(R.style.AppTheme_NoActionBarWithTransparentStatusBar);
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -157,8 +157,6 @@ public class MainActivity extends AppCompatActivity implements SortTypeBottomShe
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        setTheme(R.style.AppTheme_NoActionBarWithTransparentStatusBar);
-
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchMessages.java
Patch:
@@ -87,7 +87,7 @@ static ArrayList<Message> parseMessage(String response, Locale locale) {
 
                 Calendar submitTimeCalendar = Calendar.getInstance();
                 submitTimeCalendar.setTimeInMillis(timeUTC);
-                String formattedTime = new SimpleDateFormat("MMM d, YYYY, HH:mm",
+                String formattedTime = new SimpleDateFormat("MMM d, yyyy, HH:mm",
                         locale).format(submitTimeCalendar.getTime());
 
                 messages.add(new Message(kind, subredditName, subredditNamePrefixed, id, fullname, subject,

File: app/src/main/java/ml/docilealligator/infinityforreddit/LoginActivity.java
Patch:
@@ -92,6 +92,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         WebView webView = findViewById(R.id.webview_login_activity);
         webView.getSettings().setJavaScriptEnabled(true);
+        webView.getSettings().setDomStorageEnabled(true);
 
         Uri baseUri = Uri.parse(RedditUtils.OAUTH_URL);
         Uri.Builder uriBuilder = baseUri.buildUpon();

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -433,7 +433,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, mPost.isDownloadableGifOrVideo());
                         if(mPost.isDownloadableGifOrVideo()) {
                             intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, mPost.getGifOrVideoDownloadUrl());
-                            intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, mPost.getSubredditNamePrefixed());
+                            intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, mPost.getSubredditName());
                             intent.putExtra(ViewVideoActivity.ID_KEY, mPost.getId());
                         }
                         mActivity.startActivity(intent);
@@ -451,7 +451,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, mPost.isDownloadableGifOrVideo());
                         if(mPost.isDownloadableGifOrVideo()) {
                             intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, mPost.getGifOrVideoDownloadUrl());
-                            intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, mPost.getSubredditNamePrefixed());
+                            intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, mPost.getSubredditName());
                             intent.putExtra(ViewVideoActivity.ID_KEY, mPost.getId());
                         }
                         mActivity.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/MessageRecyclerViewAdapter.java
Patch:
@@ -127,7 +127,8 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     }
 
                     if(message.isNew()) {
-                        ((DataViewHolder) holder).itemView.setBackgroundColor(mResources.getColor(android.R.color.white));
+                        ((DataViewHolder) holder).itemView.setBackgroundColor(mResources.getColor(R.color.backgroundColor));
+                        message.setNew(false);
 
                         ReadMessage.readMessage(mOauthRetrofit, mAccessToken, message.getFullname(),
                                 new ReadMessage.ReadMessageListener() {
@@ -136,6 +137,7 @@ public void readSuccess() {}
 
                             @Override
                             public void readFailed() {
+                                message.setNew(true);
                                 ((DataViewHolder) holder).itemView.setBackgroundColor(mResources.getColor(R.color.unreadMessageBackgroundColor));
                             }
                         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -423,7 +423,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                             intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, post.isDownloadableGifOrVideo());
                             if(post.isDownloadableGifOrVideo()) {
                                 intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, post.getGifOrVideoDownloadUrl());
-                                intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, subredditNamePrefixed);
+                                intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, subredditName);
                                 intent.putExtra(ViewVideoActivity.ID_KEY, id);
                             }
                             mContext.startActivity(intent);
@@ -441,7 +441,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                             intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, post.isDownloadableGifOrVideo());
                             if(post.isDownloadableGifOrVideo()) {
                                 intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, post.getGifOrVideoDownloadUrl());
-                                intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, subredditNamePrefixed);
+                                intent.putExtra(ViewVideoActivity.SUBREDDIT_KEY, subredditName);
                                 intent.putExtra(ViewVideoActivity.ID_KEY, id);
                             }
                             mContext.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -429,7 +429,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         Intent intent = new Intent(mActivity, ViewVideoActivity.class);
                         intent.setData(gifVideoUri);
                         intent.putExtra(ViewVideoActivity.TITLE_KEY, mPost.getTitle());
-                        intent.putExtra(ViewVideoActivity.IS_DASH_VIDEO_KEY, mPost.isDashVideo());
+                        intent.putExtra(ViewVideoActivity.IS_HLS_VIDEO_KEY, mPost.isHLSVideo());
                         intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, mPost.isDownloadableGifOrVideo());
                         if(mPost.isDownloadableGifOrVideo()) {
                             intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, mPost.getGifOrVideoDownloadUrl());
@@ -447,7 +447,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                         Intent intent = new Intent(mActivity, ViewVideoActivity.class);
                         intent.setData(videoUri);
                         intent.putExtra(ViewVideoActivity.TITLE_KEY, mPost.getTitle());
-                        intent.putExtra(ViewVideoActivity.IS_DASH_VIDEO_KEY, mPost.isDashVideo());
+                        intent.putExtra(ViewVideoActivity.IS_HLS_VIDEO_KEY, mPost.isHLSVideo());
                         intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, mPost.isDownloadableGifOrVideo());
                         if(mPost.isDownloadableGifOrVideo()) {
                             intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, mPost.getGifOrVideoDownloadUrl());

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -34,7 +34,7 @@ public class JSONUtils {
     static final String URL_KEY = "url";
     static final String MEDIA_KEY = "media";
     static final String REDDIT_VIDEO_KEY = "reddit_video";
-    static final String DASH_URL_KEY = "dash_url";
+    static final String HLS_URL_KEY = "hls_url";
     static final String IS_VIDEO_KEY = "is_video";
     static final String CROSSPOST_PARENT_LIST = "crosspost_parent_list";
     static final String REDDIT_VIDEO_PREVIEW_KEY = "reddit_video_preview";

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParsePost.java
Patch:
@@ -262,7 +262,7 @@ private static Post parseData(JSONObject data, String permalink, String id, Stri
                 //Video post
                 JSONObject redditVideoObject = data.getJSONObject(JSONUtils.MEDIA_KEY).getJSONObject(JSONUtils.REDDIT_VIDEO_KEY);
                 int postType = Post.VIDEO_TYPE;
-                String videoUrl = Html.fromHtml(redditVideoObject.getString(JSONUtils.DASH_URL_KEY)).toString();
+                String videoUrl = Html.fromHtml(redditVideoObject.getString(JSONUtils.HLS_URL_KEY)).toString();
 
                 post = new Post(id, fullName, subredditName, subredditNamePrefixed, author, formattedPostTime,
                         title, previewUrl, permalink, score, postType, voteType, gilded, flair, hidden,
@@ -290,10 +290,10 @@ private static Post parseData(JSONObject data, String permalink, String id, Stri
                     post.setDownloadableGifOrVideo(true);
                     post.setGifOrVideoDownloadUrl(gifDownloadUrl);
                 } else if(data.getJSONObject(JSONUtils.PREVIEW_KEY).has(JSONUtils.REDDIT_VIDEO_PREVIEW_KEY)) {
-                    //Gif video post (Dash)
+                    //Gif video post (HLS)
                     int postType = Post.GIF_VIDEO_TYPE;
                     String videoUrl = Html.fromHtml(data.getJSONObject(JSONUtils.PREVIEW_KEY)
-                            .getJSONObject(JSONUtils.REDDIT_VIDEO_PREVIEW_KEY).getString(JSONUtils.DASH_URL_KEY)).toString();
+                            .getJSONObject(JSONUtils.REDDIT_VIDEO_PREVIEW_KEY).getString(JSONUtils.HLS_URL_KEY)).toString();
 
                     post = new Post(id, fullName, subredditName, subredditNamePrefixed, author,
                             formattedPostTime, title, previewUrl, permalink, score, postType, voteType,

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -419,7 +419,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                             Intent intent = new Intent(mContext, ViewVideoActivity.class);
                             intent.setData(gifVideoUri);
                             intent.putExtra(ViewVideoActivity.TITLE_KEY, title);
-                            intent.putExtra(ViewVideoActivity.IS_DASH_VIDEO_KEY, post.isDashVideo());
+                            intent.putExtra(ViewVideoActivity.IS_HLS_VIDEO_KEY, post.isHLSVideo());
                             intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, post.isDownloadableGifOrVideo());
                             if(post.isDownloadableGifOrVideo()) {
                                 intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, post.getGifOrVideoDownloadUrl());
@@ -437,7 +437,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                             Intent intent = new Intent(mContext, ViewVideoActivity.class);
                             intent.setData(videoUri);
                             intent.putExtra(ViewVideoActivity.TITLE_KEY, title);
-                            intent.putExtra(ViewVideoActivity.IS_DASH_VIDEO_KEY, post.isDashVideo());
+                            intent.putExtra(ViewVideoActivity.IS_HLS_VIDEO_KEY, post.isHLSVideo());
                             intent.putExtra(ViewVideoActivity.IS_DOWNLOADABLE_KEY, post.isDownloadableGifOrVideo());
                             if(post.isDownloadableGifOrVideo()) {
                                 intent.putExtra(ViewVideoActivity.DOWNLOAD_URL_KEY, post.getGifOrVideoDownloadUrl());

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewImageActivity.java
Patch:
@@ -95,7 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         Drawable upArrow = getResources().getDrawable(R.drawable.ic_arrow_back_white_24dp);
         actionBar.setHomeAsUpIndicator(upArrow);
-        actionBar.setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.transparentActionBarColor)));
+        actionBar.setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.transparentActionBarAndExoPlayerControllerColor)));
         setTitle("");
 
         Intent intent = getIntent();
@@ -113,7 +113,7 @@ protected void onCreate(Bundle savedInstanceState) {
         float pxHeight = getResources().getDisplayMetrics().heightPixels;
 
         int activityColorFrom = getResources().getColor(android.R.color.black);
-        int actionBarColorFrom = getResources().getColor(R.color.transparentActionBarColor);
+        int actionBarColorFrom = getResources().getColor(R.color.transparentActionBarAndExoPlayerControllerColor);
         int actionBarElementColorFrom = getResources().getColor(android.R.color.white);
         int colorTo = getResources().getColor(android.R.color.transparent);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -544,12 +544,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
             switch (comment.getVoteType()) {
-                case 1:
+                case CommentData.VOTE_TYPE_UPVOTE:
                     ((CommentViewHolder) holder).upVoteButton
                             .setColorFilter(ContextCompat.getColor(mActivity, R.color.upvoted), android.graphics.PorterDuff.Mode.SRC_IN);
                     ((CommentViewHolder) holder).scoreTextView.setTextColor(ContextCompat.getColor(mActivity, R.color.upvoted));
                     break;
-                case 2:
+                case CommentData.VOTE_TYPE_DOWNVOTE:
                     ((CommentViewHolder) holder).downVoteButton
                             .setColorFilter(ContextCompat.getColor(mActivity, R.color.downvoted), android.graphics.PorterDuff.Mode.SRC_IN);
                     ((CommentViewHolder) holder).scoreTextView.setTextColor(ContextCompat.getColor(mActivity, R.color.downvoted));

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -117,7 +117,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     ((DataViewHolder) holder).authorTextView.setTextColor(mTextColorPrimaryDark);
                     ((DataViewHolder) holder).authorTextView.setOnClickListener(view -> {
                         Intent intent = new Intent(mContext, ViewUserDetailActivity.class);
-                        intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, comment.getAuthor());
+                        intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, comment.getLinkAuthor());
                         mContext.startActivity(intent);
                     });
                 } else {
@@ -137,12 +137,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 ((DataViewHolder) holder).scoreTextView.setText(Integer.toString(comment.getScore() + comment.getVoteType()));
 
                 switch (comment.getVoteType()) {
-                    case 1:
+                    case CommentData.VOTE_TYPE_UPVOTE:
                         ((DataViewHolder) holder).upvoteButton
                                 .setColorFilter(ContextCompat.getColor(mContext, R.color.upvoted), android.graphics.PorterDuff.Mode.SRC_IN);
                         ((DataViewHolder) holder).scoreTextView.setTextColor(ContextCompat.getColor(mContext, R.color.upvoted));
                         break;
-                    case 2:
+                    case CommentData.VOTE_TYPE_DOWNVOTE:
                         ((DataViewHolder) holder).downvoteButton
                                 .setColorFilter(ContextCompat.getColor(mContext, R.color.downvoted), android.graphics.PorterDuff.Mode.SRC_IN);
                         ((DataViewHolder) holder).scoreTextView.setTextColor(ContextCompat.getColor(mContext, R.color.downvoted));

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -235,7 +235,7 @@ static CommentData parseSingleComment(JSONObject singleCommentData, int depth, L
 
         Calendar submitTimeCalendar = Calendar.getInstance();
         submitTimeCalendar.setTimeInMillis(submitTime);
-        String formattedSubmitTime = new SimpleDateFormat("MMM d, YYYY, HH:mm",
+        String formattedSubmitTime = new SimpleDateFormat("MMM d, yyyy, HH:mm",
                 locale).format(submitTimeCalendar.getTime());
 
         if(singleCommentData.has(JSONUtils.DEPTH_KEY)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParsePost.java
Patch:
@@ -184,7 +184,7 @@ private static Post parseBasicData(JSONObject data, Locale locale) throws JSONEx
 
         Calendar postTimeCalendar = Calendar.getInstance();
         postTimeCalendar.setTimeInMillis(postTime);
-        String formattedPostTime = new SimpleDateFormat("MMM d, YYYY, HH:mm",
+        String formattedPostTime = new SimpleDateFormat("MMM d, yyyy, HH:mm",
                 locale).format(postTimeCalendar.getTime());
         String permalink = Html.fromHtml(data.getString(JSONUtils.PERMALINK_KEY)).toString();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -521,7 +521,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             ((CommentViewHolder) holder).commentTimeTextView.setText(comment.getCommentTime());
 
             mMarkwon.setMarkdown(((CommentViewHolder) holder).commentMarkdownView, comment.getCommentContent());
-            ((CommentViewHolder) holder).scoreTextView.setText(Integer.toString(comment.getScore()));
+            ((CommentViewHolder) holder).scoreTextView.setText(Integer.toString(comment.getScore() + comment.getVoteType()));
 
             ViewGroup.LayoutParams params = ((CommentViewHolder) holder).verticalBlock.getLayoutParams();
             params.width = comment.getDepth() * 16;

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentsListingRecyclerViewAdapter.java
Patch:
@@ -133,7 +133,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
                 mMarkwon.setMarkdown(((DataViewHolder) holder).commentMarkdownView, comment.getCommentContent());
 
-                ((DataViewHolder) holder).scoreTextView.setText(Integer.toString(comment.getScore()));
+                ((DataViewHolder) holder).scoreTextView.setText(Integer.toString(comment.getScore() + comment.getVoteType()));
 
                 switch (comment.getVoteType()) {
                     case 1:

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditSubscription.java
Patch:
@@ -1,7 +1,6 @@
 package ml.docilealligator.infinityforreddit;
 
 import android.os.AsyncTask;
-import android.util.Log;
 
 import androidx.annotation.NonNull;
 
@@ -69,14 +68,12 @@ public void onFetchSubredditDataFail() {
                     }
                     subredditSubscriptionListener.onSubredditSubscriptionSuccess();
                 } else {
-                    Log.i("call failed", response.message());
                     subredditSubscriptionListener.onSubredditSubscriptionFail();
                 }
             }
 
             @Override
             public void onFailure(@NonNull Call<String> call, @NonNull Throwable t) {
-                Log.i("call failed", t.getMessage());
                 subredditSubscriptionListener.onSubredditSubscriptionFail();
             }
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -1296,7 +1296,8 @@ class LoadMoreChildCommentsViewHolder extends RecyclerView.ViewHolder {
                 mVisibleComments.get(commentPosition).setLoadMoreChildrenFailed(false);
                 placeholderTextView.setText(R.string.loading);
 
-                FetchComment.fetchMoreComment(mRetrofit, parentComment.getMoreChildrenFullnames(),
+                Retrofit retrofit = mAccessToken == null ? mRetrofit : mOauthRetrofit;
+                FetchComment.fetchMoreComment(retrofit, mAccessToken, parentComment.getMoreChildrenFullnames(),
                         parentComment.getMoreChildrenStartingIndex(), parentComment.getDepth() + 1, mLocale,
                         new FetchComment.FetchMoreCommentListener() {
                             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentData.java
Patch:
@@ -37,7 +37,7 @@ class CommentData implements Parcelable {
     private boolean loadMoreChildrenFailed;
 
     CommentData(String id, String fullName, String author, String linkAuthor, String commentTime, String commentContent,
-                String linkId, String subredditName, String parentId, int score, boolean isSubmitter, String permalink,
+                String linkId, String subredditName, String parentId, int score, int voteType, boolean isSubmitter, String permalink,
                 int depth, boolean collapsed, boolean hasReply, boolean scoreHidden) {
         this.id = id;
         this.fullName = fullName;
@@ -49,6 +49,7 @@ class CommentData implements Parcelable {
         this.subredditName = subredditName;
         this.parentId = parentId;
         this.score = score;
+        this.voteType = voteType;
         this.isSubmitter = isSubmitter;
         this.permalink = RedditUtils.API_BASE_URI + permalink;
         this.depth = depth;

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -73,6 +73,9 @@ Call<String> getUserComments(@Path("username") String username, @Query("after")
     @GET("/api/info.json?raw_json=1")
     Call<String> getInfo(@Query("id") String id);
 
+    @GET("/api/info.json?raw_json=1")
+    Call<String> getInfoOauth(@Query("id") String id, @HeaderMap Map<String, String> headers);
+
     @GET("subreddits/search.json?raw_json=1")
     Call<String> searchSubreddits(@Query("q") String subredditName, @Query("after") String after,
                                   @Query("sort") String sort);

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserFollowing.java
Patch:
@@ -1,7 +1,6 @@
 package ml.docilealligator.infinityforreddit;
 
 import android.os.AsyncTask;
-import android.util.Log;
 
 import androidx.annotation.NonNull;
 
@@ -99,7 +98,7 @@ private static class UpdateSubscriptionAsyncTask extends AsyncTask<Void, Void, V
                                     String accountName, boolean isSubscribing) {
             this.subscribedUserDao = subscribedUserDao;
             this.subscribedUserData = new SubscribedUserData(userData.getName(), userData.getIconUrl(),
-                    userData.getName());
+                    accountName);
             this.accountName = accountName;
             this.isSubscribing = isSubscribing;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -470,7 +470,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     String noPreviewLinkDomain = Uri.parse(mPost.getUrl()).getHost();
                     ((PostDetailViewHolder) holder).linkTextView.setText(noPreviewLinkDomain);
 
-                    if(!mPost.getSelfText().equals("")) {
+                    if(mPost.getSelfText() != null && !mPost.getSelfText().equals("")) {
                         ((PostDetailViewHolder) holder).mContentMarkdownView.setVisibility(View.VISIBLE);
                         mMarkwon.setMarkdown(((PostDetailViewHolder) holder).mContentMarkdownView, mPost.getSelfText());
                     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -819,7 +819,7 @@ private class SectionsPagerAdapter extends FragmentPagerAdapter {
         private PostFragment allPostFragment;
 
         SectionsPagerAdapter(FragmentManager fm) {
-            super(fm);
+            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
         }
 
         @NonNull

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -271,7 +271,7 @@ private class SectionsPagerAdapter extends FragmentPagerAdapter {
         private UserListingFragment userListingFragment;
 
         public SectionsPagerAdapter(FragmentManager fm) {
-            super(fm);
+            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
         }
 
         @NonNull

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -645,7 +645,7 @@ private class SectionsPagerAdapter extends FragmentPagerAdapter {
         private CommentsListingFragment commentsListingFragment;
 
         SectionsPagerAdapter(FragmentManager fm) {
-            super(fm);
+            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
         }
 
         @NonNull

File: app/src/main/java/ml/docilealligator/infinityforreddit/AccountPostsActivity.java
Patch:
@@ -227,6 +227,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 userThingSortTypeBottomSheetFragment.show(getSupportFragmentManager(), userThingSortTypeBottomSheetFragment.getTag());
                 return true;
             case R.id.action_refresh_account_posts_activity:
+                if(mMenu != null) {
+                    mMenu.findItem(R.id.action_lazy_mode_account_posts_activity).setTitle(R.string.action_start_lazy_mode);
+                }
                 if(mFragment != null) {
                     ((PostFragment) mFragment).refresh();
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -706,6 +706,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_main_activity:
+                if(mMenu != null) {
+                    mMenu.findItem(R.id.action_lazy_mode_main_activity).setTitle(R.string.action_start_lazy_mode);
+                }
                 sectionsPagerAdapter.refresh();
                 mFetchUserInfoSuccess = false;
                 loadUserData();

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSourceFactory.java
Patch:
@@ -1,5 +1,6 @@
 package ml.docilealligator.infinityforreddit;
 
+import androidx.annotation.NonNull;
 import androidx.lifecycle.MutableLiveData;
 import androidx.paging.DataSource;
 
@@ -75,6 +76,7 @@ class PostDataSourceFactory extends DataSource.Factory {
         this.nsfw = nsfw;
     }
 
+    @NonNull
     @Override
     public DataSource create() {
         if(postType == PostDataSource.TYPE_FRONT_PAGE) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -104,7 +104,8 @@ public boolean areItemsTheSame(@NonNull Post post, @NonNull Post t1) {
 
         @Override
         public boolean areContentsTheSame(@NonNull Post post, @NonNull Post t1) {
-            return post.getTitle().equals(t1.getTitle());
+            return post.getTitle().equals(t1.getTitle()) && post.getSelfText().equals(t1.getSelfText())
+                    && post.getScore() == t1.getScore();
         }
     };
 
@@ -357,7 +358,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                     loadImage(holder, post);
                 }
 
-                if(mPostType == PostDataSource.TYPE_SUBREDDIT && post.isStickied()) {
+                if(mPostType == PostDataSource.TYPE_SUBREDDIT && !mDisplaySubredditName && post.isStickied()) {
                     ((DataViewHolder) holder).stickiedPostImageView.setVisibility(View.VISIBLE);
                     mGlide.load(R.drawable.thumbtack).into(((DataViewHolder) holder).stickiedPostImageView);
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -478,6 +478,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 startActivity(intent);
                 break;
             case R.id.action_refresh_view_subreddit_detail_activity:
+                if(mMenu != null) {
+                    mMenu.findItem(R.id.action_lazy_mode_view_subreddit_detail_activity).setTitle(R.string.action_start_lazy_mode);
+                }
                 if(mFragment instanceof FragmentCommunicator) {
                     ((FragmentCommunicator) mFragment).refresh();
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -533,6 +533,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_view_user_detail_activity:
+                if(mMenu != null) {
+                    mMenu.findItem(R.id.action_lazy_mode_view_user_detail_activity).setTitle(R.string.action_start_lazy_mode);
+                }
                 sectionsPagerAdapter.refresh();
                 return true;
             case R.id.action_lazy_mode_view_user_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingDataSource.java
Patch:
@@ -78,7 +78,7 @@ public void loadAfter(@NonNull PageKeyedDataSource.LoadParams<String> params, @N
         this.params = params;
         this.callback = callback;
 
-        if(params.key.equals("null")) {
+        if(params.key.equals("null") || params.key.equals("")) {
             return;
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -390,7 +390,7 @@ private void bindView() {
 
         sectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());
         viewPager.setAdapter(sectionsPagerAdapter);
-        viewPager.setOffscreenPageLimit(2);
+        viewPager.setOffscreenPageLimit(3);
         tabLayout.setupWithViewPager(viewPager);
 
         viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils.java
Patch:
@@ -2,7 +2,7 @@
 
 class Utils {
     static String addSubredditAndUserLink(String markdown) {
-        return markdown.replaceAll("(?<!\\w)/{0,1}u/\\w+/{0,1}", "[$0]($0)")
-                .replaceAll("(?<!\\w)/{0,1}r/\\w+/{0,1}", "[$0]($0)");
+        return markdown.replaceAll("(?<!\\s)/{0,1}u/\\w+/{0,1}(?<!\\s)$", "[$0]($0)")
+                .replaceAll("(?<!\\s)/{0,1}r/\\w+/{0,1}(?<!\\s)$", "[$0]($0)");
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubmitPost.java
Patch:
@@ -135,7 +135,7 @@ public void parseFailed() {
                                             }
                                         }).execute();
                                     } else {
-                                        submitPostListener.submitFailed("Error: " + response.code());
+                                        submitPostListener.submitFailed(response.message());
                                     }
                                 }
 
@@ -234,7 +234,6 @@ private static void uploadImage(Retrofit oauthRetrofit, Retrofit uploadMediaRetr
         uploadImageParams.put(RedditUtils.FILEPATH_KEY, "post_image.jpg");
         uploadImageParams.put(RedditUtils.MIMETYPE_KEY, "image/jpeg");
 
-        Log.i("map", RedditUtils.getOAuthHeader(accessToken).toString());
         Call<String> uploadImageCall = api.uploadImage(RedditUtils.getOAuthHeader(accessToken), uploadImageParams);
         uploadImageCall.enqueue(new Callback<String>() {
             @Override
@@ -417,7 +416,6 @@ private static void getSubmittedPost(String response, String kind, Retrofit oaut
                 } else {
                     errorString = error.getString(0);
                 }
-                errorString = errorString.substring(0, 1).toUpperCase() + errorString.substring(1);
                 submitPostListener.submitFailed(errorString);
             } else {
                 submitPostListener.submitFailed(null);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubmitPostService.java
Patch:
@@ -122,7 +122,8 @@ private Notification createNotification(int stringResId) {
         return new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_SUBMIT_POST)
                 .setContentTitle(getString(stringResId))
                 .setContentText(getString(R.string.please_wait))
-                .setSmallIcon(R.mipmap.ic_launcher_round)
+                .setSmallIcon(R.drawable.ic_notification)
+                .setColor(getResources().getColor(R.color.notificationIconColor))
                 .build();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/CancelSubmittingPostEvent.java
Patch:
@@ -0,0 +1,3 @@
+package ml.docilealligator.infinityforreddit;
+
+public class CancelSubmittingPostEvent {}

File: app/src/main/java/ml/docilealligator/infinityforreddit/NotificationUtils.java
Patch:
@@ -8,9 +8,10 @@
 import androidx.core.app.NotificationManagerCompat;
 
 class NotificationUtils {
-    static final String CHANNEL_POST_MEDIA = "Post Media";
+    static final String CHANNEL_SUBMIT_POST = "Submit Post";
     static final String CHANNEL_ID_NEW_MESSAGES = "new_messages";
     static final String CHANNEL_NEW_MESSAGES = "New Messages";
+    static final int SUBMIT_POST_SERVICE_NOTIFICATION_ID = 10000;
 
     private static final int SUMMARY_BASE_ID_UNREAD_MESSAGE = 0;
     private static final int NOTIFICATION_BASE_ID_UNREAD_MESSAGE = 1;

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -199,7 +199,7 @@ private Response<String> fetchMessages(Account account, int retryCount) throws I
 
         Call<String> call = mOauthWithoutAuthenticatorRetrofit.create(RedditAPI.class)
                 .getMessages(RedditUtils.getOAuthHeader(account.getAccessToken()),
-                        FetchMessages.WHERE_INBOX, null);
+                        FetchMessages.WHERE_UNREAD, null);
         Response<String> response = call.execute();
 
         if(response.isSuccessful()) {

File: app/src/main/java/Settings/MainPreferenceFragment.java
Patch:
@@ -24,6 +24,7 @@
  * A simple {@link PreferenceFragmentCompat} subclass.
  */
 public class MainPreferenceFragment extends PreferenceFragmentCompat {
+
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         setPreferencesFromResource(R.xml.main_preferences, rootKey);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -325,7 +325,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
             if(mPost.getGilded() > 0) {
                 ((PostDetailViewHolder) holder).mGildedImageView.setVisibility(View.VISIBLE);
-                mGlide.load(R.drawable.gold).into(((PostDetailViewHolder) holder).mGildedImageView);
                 ((PostDetailViewHolder) holder).mGildedNumberTextView.setVisibility(View.VISIBLE);
                 String gildedNumber = mActivity.getResources().getString(R.string.gilded_count, mPost.getGilded());
                 ((PostDetailViewHolder) holder).mGildedNumberTextView.setText(gildedNumber);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentsListingFragment.java
Patch:
@@ -156,7 +156,7 @@ private void showErrorView(int stringResId) {
         if(activity != null && isAdded()) {
             mFetchCommentInfoLinearLayout.setVisibility(View.VISIBLE);
             mFetchCommentInfoTextView.setText(stringResId);
-            mGlide.load(R.drawable.load_post_error_indicator).into(mFetchCommentInfoImageView);
+            mGlide.load(R.drawable.error_image).into(mFetchCommentInfoImageView);
         }
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/FollowedUsersListingFragment.java
Patch:
@@ -86,7 +86,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             if (subscribedUserData == null || subscribedUserData.size() == 0) {
                 mRecyclerView.setVisibility(View.GONE);
                 mLinearLayout.setVisibility(View.VISIBLE);
-                mGlide.load(R.drawable.load_post_error_indicator).into(mImageView);
+                mGlide.load(R.drawable.error_image).into(mImageView);
             } else {
                 mLinearLayout.setVisibility(View.GONE);
                 mRecyclerView.setVisibility(View.VISIBLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/NotificationUtils.java
Patch:
@@ -29,7 +29,7 @@ static NotificationCompat.Builder buildNotification(NotificationManagerCompat no
         return new NotificationCompat.Builder(context.getApplicationContext(), channelId)
                 .setContentTitle(title)
                 .setContentText(content)
-                .setSmallIcon(R.mipmap.ic_launcher)
+                .setSmallIcon(R.drawable.ic_launcher_foreground)
                 .setStyle(new NotificationCompat.BigTextStyle()
                         .setSummaryText(summary)
                         .bigText(content))
@@ -49,7 +49,7 @@ static NotificationCompat.Builder buildSummaryNotification(Context context, Noti
                 .setContentTitle(title)
                 //set content text to support devices running API level < 24
                 .setContentText(content)
-                .setSmallIcon(R.mipmap.ic_launcher)
+                .setSmallIcon(R.drawable.ic_launcher_foreground)
                 .setGroup(group)
                 .setGroupSummary(true)
                 .setAutoCancel(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostFragment.java
Patch:
@@ -416,7 +416,7 @@ private void showErrorView(int stringResId) {
         if(activity != null && isAdded()) {
             mFetchPostInfoLinearLayout.setVisibility(View.VISIBLE);
             mFetchPostInfoTextView.setText(stringResId);
-            mGlide.load(R.drawable.load_post_error_indicator).into(mFetchPostInfoImageView);
+            mGlide.load(R.drawable.error_image).into(mFetchPostInfoImageView);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -299,7 +299,6 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
 
                 if(gilded > 0) {
                     ((DataViewHolder) holder).gildedImageView.setVisibility(View.VISIBLE);
-                    mGlide.load(R.drawable.gold).into(((DataViewHolder) holder).gildedImageView);
                     ((DataViewHolder) holder).gildedNumberTextView.setVisibility(View.VISIBLE);
                     String gildedNumber = mContext.getResources().getString(R.string.gilded_count, gilded);
                     ((DataViewHolder) holder).gildedNumberTextView.setText(gildedNumber);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingFragment.java
Patch:
@@ -162,7 +162,7 @@ private void showErrorView(int stringResId) {
         if(getActivity() != null && isAdded()) {
             mFetchSubredditListingInfoLinearLayout.setVisibility(View.VISIBLE);
             mFetchSubredditListingInfoTextView.setText(stringResId);
-            Glide.with(this).load(R.drawable.load_post_error_indicator).into(mFetchSubredditListingInfoImageView);
+            Glide.with(this).load(R.drawable.error_image).into(mFetchSubredditListingInfoImageView);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditsListingFragment.java
Patch:
@@ -100,7 +100,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             if (subscribedSubredditData == null || subscribedSubredditData.size() == 0) {
                 mRecyclerView.setVisibility(View.GONE);
                 mLinearLayout.setVisibility(View.VISIBLE);
-                mGlide.load(R.drawable.load_post_error_indicator).into(mImageView);
+                mGlide.load(R.drawable.error_image).into(mImageView);
             } else {
                 mLinearLayout.setVisibility(View.GONE);
                 mRecyclerView.setVisibility(View.VISIBLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingFragment.java
Patch:
@@ -141,7 +141,7 @@ private void showErrorView(int stringResId) {
         if(getActivity() != null && isAdded()) {
             mFetchUserListingInfoLinearLayout.setVisibility(View.VISIBLE);
             mFetchUserListingInfoTextView.setText(stringResId);
-            Glide.with(this).load(R.drawable.load_post_error_indicator).into(mFetchUserListingInfoImageView);
+            Glide.with(this).load(R.drawable.error_image).into(mFetchUserListingInfoImageView);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewMessageActivity.java
Patch:
@@ -258,7 +258,7 @@ private void showErrorView(int stringResId) {
         mProgressBar.setVisibility(View.GONE);
         mFetchMessageInfoLinearLayout.setVisibility(View.VISIBLE);
         mFetchMessageInfoTextView.setText(stringResId);
-        mGlide.load(R.drawable.load_post_error_indicator).into(mFetchMessageInfoImageView);
+        mGlide.load(R.drawable.error_image).into(mFetchMessageInfoImageView);
     }
 
     @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -655,7 +655,7 @@ private void showErrorView(String subredditId) {
         mFetchPostInfoLinearLayout.setVisibility(View.VISIBLE);
         mFetchPostInfoLinearLayout.setOnClickListener(view -> fetchPostAndCommentsById(subredditId));
         mFetchPostInfoTextView.setText(R.string.load_posts_error);
-        mGlide.load(R.drawable.load_post_error_indicator).into(mFetchPostInfoImageView);
+        mGlide.load(R.drawable.error_image).into(mFetchPostInfoImageView);
     }
 
     private void showMessage(int resId) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/LinkResolverActivity.java
Patch:
@@ -31,9 +31,9 @@ public class LinkResolverActivity extends AppCompatActivity {
 
     private static final String POST_PATTERN = "/r/\\w+/comments/\\w+/{0,1}\\w+/{0,1}";
     private static final String COMMENT_PATTERN = "/r/\\w+/comments/\\w+/{0,1}\\w+/\\w+/{0,1}";
-    private static final String SUBREDDIT_PATTERN = "/r/\\w+/*";
-    private static final String USER_PATTERN_1 = "/user/\\w+/*";
-    private static final String USER_PATTERN_2 = "/u/\\w+/*";
+    private static final String SUBREDDIT_PATTERN = "/r/\\w+/{0,1}";
+    private static final String USER_PATTERN_1 = "/user/\\w+/{0,1}";
+    private static final String USER_PATTERN_2 = "/u/\\w+/{0,1}";
 
     @Inject
     SharedPreferences mSharedPreferences;

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils.java
Patch:
@@ -2,7 +2,7 @@
 
 class Utils {
     static String addSubredditAndUserLink(String markdown) {
-        return markdown.replaceAll("(?<!\\w)/*u/\\w+/*", "[$0]($0)")
-                .replaceAll("(?<!\\w)/*r/\\w+/*", "[$0]($0)");
+        return markdown.replaceAll("(?<!\\w)/{0,1}u/\\w+/{0,1}", "[$0]($0)")
+                .replaceAll("(?<!\\w)/{0,1}r/\\w+/{0,1}", "[$0]($0)");
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Utils.java
Patch:
@@ -2,7 +2,7 @@
 
 class Utils {
     static String addSubredditAndUserLink(String markdown) {
-        return markdown.replaceAll("(?<!\\w)/+u/\\w+/*", "[$0]($0)")
-                .replaceAll("(?<!\\w)/+r/\\w+/*", "[$0]($0)");
+        return markdown.replaceAll("(?<!\\w)/*u/\\w+/*", "[$0]($0)")
+                .replaceAll("(?<!\\w)/*r/\\w+/*", "[$0]($0)");
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostFragment.java
Patch:
@@ -406,6 +406,8 @@ public void refresh() {
         if(isInLazyMode) {
             stopLazyMode();
         }
+
+        hasPost = false;
         mPostViewModel.refresh();
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostImageActivity.java
Patch:
@@ -227,7 +227,9 @@ protected void onCreate(Bundle savedInstanceState) {
             isPosting = false;
 
             if(getIntent().hasExtra(EXTRA_SUBREDDIT_NAME)) {
-                subredditName = getIntent().getExtras().getString(EXTRA_SUBREDDIT_NAME);
+                loadSubredditIconSuccessful = false;
+                subredditName = getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME);
+                subredditSelected = true;
                 subredditNameTextView.setTextColor(getResources().getColor(R.color.primaryTextColor));
                 subredditNameTextView.setText(subredditName);
                 loadSubredditIcon();

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostLinkActivity.java
Patch:
@@ -197,7 +197,9 @@ protected void onCreate(Bundle savedInstanceState) {
             isPosting = false;
 
             if(getIntent().hasExtra(EXTRA_SUBREDDIT_NAME)) {
-                subredditName = getIntent().getExtras().getString(EXTRA_SUBREDDIT_NAME);
+                loadSubredditIconSuccessful = false;
+                subredditName = getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME);
+                subredditSelected = true;
                 subredditNameTextView.setTextColor(getResources().getColor(R.color.primaryTextColor));
                 subredditNameTextView.setText(subredditName);
                 flairTextView.setVisibility(View.VISIBLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostTextActivity.java
Patch:
@@ -198,7 +198,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
             if(getIntent().hasExtra(EXTRA_SUBREDDIT_NAME)) {
                 loadSubredditIconSuccessful = false;
-                subredditName = getIntent().getExtras().getString(EXTRA_SUBREDDIT_NAME);
+                subredditName = getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME);
+                subredditSelected = true;
                 subredditNameTextView.setTextColor(getResources().getColor(R.color.primaryTextColor));
                 subredditNameTextView.setText(subredditName);
                 flairTextView.setVisibility(View.VISIBLE);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostVideoActivity.java
Patch:
@@ -225,7 +225,9 @@ protected void onCreate(Bundle savedInstanceState) {
             isPosting = false;
 
             if(getIntent().hasExtra(EXTRA_SUBREDDIT_NAME)) {
-                subredditName = getIntent().getExtras().getString(EXTRA_SUBREDDIT_NAME);
+                loadSubredditIconSuccessful = false;
+                subredditName = getIntent().getStringExtra(EXTRA_SUBREDDIT_NAME);
+                subredditSelected = true;
                 subredditNameTextView.setTextColor(getResources().getColor(R.color.primaryTextColor));
                 subredditNameTextView.setText(subredditName);
                 loadSubredditIcon();

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -554,17 +554,17 @@ public void postTypeSelected(int postType) {
                 break;
             case PostTypeBottomSheetFragment.TYPE_LINK:
                 intent = new Intent(this, PostLinkActivity.class);
-                intent.putExtra(PostTextActivity.EXTRA_SUBREDDIT_NAME, subredditName);
+                intent.putExtra(PostLinkActivity.EXTRA_SUBREDDIT_NAME, subredditName);
                 startActivity(intent);
                 break;
             case PostTypeBottomSheetFragment.TYPE_IMAGE:
                 intent = new Intent(this, PostImageActivity.class);
-                intent.putExtra(PostTextActivity.EXTRA_SUBREDDIT_NAME, subredditName);
+                intent.putExtra(PostImageActivity.EXTRA_SUBREDDIT_NAME, subredditName);
                 startActivity(intent);
                 break;
             case PostTypeBottomSheetFragment.TYPE_VIDEO:
                 intent = new Intent(this, PostVideoActivity.class);
-                intent.putExtra(PostTextActivity.EXTRA_SUBREDDIT_NAME, subredditName);
+                intent.putExtra(PostVideoActivity.EXTRA_SUBREDDIT_NAME, subredditName);
                 startActivity(intent);
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchMessages.java
Patch:
@@ -76,7 +76,7 @@ static ArrayList<Message> parseMessage(String response, Locale locale) {
                 String author = rawMessageJSON.getString(JSONUtils.AUTHOR_KEY);
                 String parentFullname = rawMessageJSON.getString(JSONUtils.PARENT_ID_KEY);
                 String title = rawMessageJSON.has(JSONUtils.LINK_TITLE_KEY) ? rawMessageJSON.getString(JSONUtils.LINK_TITLE_KEY) : null;
-                String body = rawMessageJSON.getString(JSONUtils.BODY_KEY);
+                String body = Utils.addSubredditAndUserLink(rawMessageJSON.getString(JSONUtils.BODY_KEY));
                 String context = rawMessageJSON.getString(JSONUtils.CONTEXT_KEY);
                 String distinguished = rawMessageJSON.getString(JSONUtils.DISTINGUISHED_KEY);
                 boolean wasComment = rawMessageJSON.getBoolean(JSONUtils.WAS_COMMENT_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -73,7 +73,7 @@ public class JSONUtils {
     static final String SPOILER_KEY = "spoiler";
     static final String RULES_KEY = "rules";
     static final String SHORT_NAME_KEY = "short_name";
-    static final String DESCRIPTION_HTML_KEY = "description_html";
+    static final String DESCRIPTION_KEY = "description";
     static final String ARCHIVED_KEY = "archived";
     static final String LOCKEC_KEY = "locked";
     static final String SAVED_KEY = "saved";

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -225,7 +225,7 @@ static CommentData parseSingleComment(JSONObject singleCommentData, int depth, L
         boolean isSubmitter = singleCommentData.getBoolean(JSONUtils.IS_SUBMITTER_KEY);
         String commentContent = "";
         if(!singleCommentData.isNull(JSONUtils.BODY_KEY)) {
-            commentContent = singleCommentData.getString(JSONUtils.BODY_KEY).trim();
+            commentContent = Utils.addSubredditAndUserLink(singleCommentData.getString(JSONUtils.BODY_KEY).trim());
         }
         String permalink = Html.fromHtml(singleCommentData.getString(JSONUtils.PERMALINK_KEY)).toString();
         int score = singleCommentData.getInt(JSONUtils.SCORE_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewMessageActivity.java
Patch:
@@ -213,7 +213,8 @@ private void getCurrentAccountAndFetchMessage() {
     }
 
     private void bindView() {
-        mAdapter = new MessageRecyclerViewAdapter(this, mOauthRetrofit, mAccessToken);
+        mAdapter = new MessageRecyclerViewAdapter(this, mOauthRetrofit, mAccessToken,
+                () -> mMessageViewModel.retryLoadingMore());
         LinearLayoutManager layoutManager = new LinearLayoutManager(this);
         recyclerView.setLayoutManager(layoutManager);
         recyclerView.setAdapter(mAdapter);

File: app/src/main/java/ml/docilealligator/infinityforreddit/MessageRecyclerViewAdapter.java
Patch:
@@ -154,7 +154,7 @@ public int getItemCount() {
     public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
         super.onViewRecycled(holder);
         if(holder instanceof DataViewHolder) {
-            ((DataViewHolder) holder).itemView.setBackgroundColor(mResources.getColor(android.R.color.white));
+            ((DataViewHolder) holder).itemView.setBackgroundColor(mResources.getColor(R.color.backgroundColor));
             ((DataViewHolder) holder).titleTextView.setVisibility(View.VISIBLE);
             ((DataViewHolder) holder).authorTextView.setTextColor(mResources.getColor(R.color.primaryTextColor));
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -300,7 +299,6 @@ public void readFailed() {
             mPost = getIntent().getParcelableExtra(EXTRA_POST_DATA);
         }
 
-        Log.i("asdfasdfadfadf", "" + mPost.isSaved());
         if(mPost == null) {
             fetchPostAndCommentsById(getIntent().getStringExtra(EXTRA_POST_ID));
         } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -39,4 +39,6 @@ public interface AppComponent {
     void inject(ViewMessageActivity viewMessageActivity);
     void inject(NotificationPreferenceFragment notificationPreferenceFragment);
     void inject(LinkResolverActivity linkResolverActivity);
+    void inject(SearchActivity searchActivity);
+    void inject(SettingsActivity settingsActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -75,6 +75,7 @@ public class JSONUtils {
     static final String SHORT_NAME_KEY = "short_name";
     static final String DESCRIPTION_HTML_KEY = "description_html";
     static final String ARCHIVED_KEY = "archived";
+    static final String LOCKEC_KEY = "locked";
     static final String TEXT_EDITABLE_KEY = "text_editable";
     static final String SUBJECT_KEY = "subject";
     static final String CONTEXT_KEY = "context";

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -351,9 +351,9 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
 
                 if(isArchived) {
                     ((DataViewHolder) holder).upvoteButton
-                            .setColorFilter(ContextCompat.getColor(mContext, R.color.voteUnavailableVoteButtonColor), android.graphics.PorterDuff.Mode.SRC_IN);
+                            .setColorFilter(ContextCompat.getColor(mContext, R.color.voteAndReplyUnavailableVoteButtonColor), android.graphics.PorterDuff.Mode.SRC_IN);
                     ((DataViewHolder) holder).downvoteButton
-                            .setColorFilter(ContextCompat.getColor(mContext, R.color.voteUnavailableVoteButtonColor), android.graphics.PorterDuff.Mode.SRC_IN);
+                            .setColorFilter(ContextCompat.getColor(mContext, R.color.voteAndReplyUnavailableVoteButtonColor), android.graphics.PorterDuff.Mode.SRC_IN);
                 }
 
                 if(post.isCrosspost()) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -31,10 +31,9 @@ Retrofit provideOauthRetrofit(OkHttpClient okHttpClient) {
 
     @Provides @Named("oauth_without_authenticator")
     @Singleton
-    Retrofit provideOauthWithoutAuthenticatorRetrofit(OkHttpClient okHttpClient) {
+    Retrofit provideOauthWithoutAuthenticatorRetrofit() {
         return new Retrofit.Builder()
                 .baseUrl(RedditUtils.OAUTH_API_BASE_URI)
-                .client(okHttpClient)
                 .addConverterFactory(ScalarsConverterFactory.create())
                 .build();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -559,6 +559,8 @@ public void readFailed() {
 
         settingsLinearLayout.setOnClickListener(view -> {
             drawer.closeDrawers();
+            Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
+            startActivity(intent);
         });
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostFragment.java
Patch:
@@ -60,7 +60,6 @@ public class PostFragment extends Fragment implements FragmentCommunicator {
 
     private static final String IS_IN_LAZY_MODE_STATE = "IILMS";
 
-    @BindView(R.id.coordinator_layout_post_fragment) CoordinatorLayout mCoordinatorLayout;
     @BindView(R.id.recycler_view_post_fragment) RecyclerView mPostRecyclerView;
     @BindView(R.id.progress_bar_post_fragment) CircleProgressBar mProgressBar;
     @BindView(R.id.fetch_post_info_linear_layout_post_fragment) LinearLayout mFetchPostInfoLinearLayout;

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostImageActivity.java
Patch:
@@ -496,8 +496,8 @@ public void onSubmitImagePostEvent(SubmitImagePostEvent submitImagePostEvent) {
             startActivity(intent);
             finish();
         } else {
-            mMemu.getItem(R.id.action_send_post_image_activity).setEnabled(true);
-            mMemu.getItem(R.id.action_send_post_image_activity).getIcon().setAlpha(255);
+            mMemu.findItem(R.id.action_send_post_image_activity).setEnabled(true);
+            mMemu.findItem(R.id.action_send_post_image_activity).getIcon().setAlpha(255);
             if (submitImagePostEvent.errorMessage == null || submitImagePostEvent.errorMessage.equals("")) {
                 Snackbar.make(coordinatorLayout, R.string.post_failed, Snackbar.LENGTH_SHORT).show();
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostVideoActivity.java
Patch:
@@ -489,6 +489,9 @@ public void onAccountSwitchEvent(SwitchAccountEvent event) {
     public void onSubmitVideoPostEvent(SubmitVideoPostEvent submitVideoPostEvent) {
         isPosting = false;
         mPostingSnackbar.dismiss();
+        mMemu.findItem(R.id.action_send_post_video_activity).setEnabled(true);
+        mMemu.findItem(R.id.action_send_post_video_activity).getIcon().setAlpha(255);
+
         if(submitVideoPostEvent.postSuccess) {
             Intent intent = new Intent(this, ViewUserDetailActivity.class);
             intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY,
@@ -498,8 +501,6 @@ public void onSubmitVideoPostEvent(SubmitVideoPostEvent submitVideoPostEvent) {
         } else if(submitVideoPostEvent.errorProcessingVideo) {
             Snackbar.make(coordinatorLayout, R.string.error_processing_video, Snackbar.LENGTH_SHORT).show();
         } else {
-            mMemu.getItem(R.id.action_send_post_video_activity).setEnabled(true);
-            mMemu.getItem(R.id.action_send_post_video_activity).getIcon().setAlpha(255);
             if (submitVideoPostEvent.errorMessage == null || submitVideoPostEvent.errorMessage.equals("")) {
                 Snackbar.make(coordinatorLayout, R.string.post_failed, Snackbar.LENGTH_SHORT).show();
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -15,6 +15,7 @@ public class JSONUtils {
     static final String SUBREDDIT_NAME_PREFIX_KEY = "subreddit_name_prefixed";
     static final String SELFTEXT_KEY = "selftext";
     static final String AUTHOR_KEY = "author";
+    static final String LINK_AUTHOR_KEY = "link_author";
     static final String LINK_FLAIR_TEXT_KEY = "link_flair_text";
     static final String SCORE_KEY = "score";
     static final String LIKES_KEY = "likes";

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -193,6 +193,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
             case R.id.action_search_search_result_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
+                intent.putExtra(SearchActivity.EXTRA_QUERY, mQuery);
                 finish();
                 startActivity(intent);
                 return true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.ActionBarDrawerToggle;
@@ -253,6 +254,8 @@ private void getCurrentAccountAndBindView() {
                 if(account == null || !account.getUsername().equals(mNewAccountName)) {
                     new SwitchAccountAsyncTask(mRedditDataRoomDatabase, mNewAccountName, newAccount -> {
                         EventBus.getDefault().post(new SwitchAccountEvent(getClass().getName()));
+                        Toast.makeText(this, R.string.account_switched, Toast.LENGTH_SHORT).show();
+
                         mNewAccountName = null;
                         if(newAccount == null) {
                             mNullAccessToken = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewMessageActivity.java
Patch:
@@ -13,6 +13,7 @@
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
@@ -156,6 +157,8 @@ private void getCurrentAccountAndFetchMessage() {
                 if(account == null || !account.getUsername().equals(mNewAccountName)) {
                     new SwitchAccountAsyncTask(mRedditDataRoomDatabase, mNewAccountName, newAccount -> {
                         EventBus.getDefault().post(new SwitchAccountEvent(getClass().getName()));
+                        Toast.makeText(this, R.string.account_switched, Toast.LENGTH_SHORT).show();
+
                         mNewAccountName = null;
                         if(newAccount == null) {
                             mNullAccessToken = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -223,6 +223,8 @@ private void getCurrentAccountAndBindView() {
                 if(account == null || !account.getUsername().equals(mNewAccountName)) {
                     new SwitchAccountAsyncTask(mRedditDataRoomDatabase, mNewAccountName, newAccount -> {
                         EventBus.getDefault().post(new SwitchAccountEvent(getClass().getName()));
+                        Toast.makeText(this, R.string.account_switched, Toast.LENGTH_SHORT).show();
+
                         mNewAccountName = null;
                         if(newAccount == null) {
                             mNullAccessToken = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -277,6 +277,8 @@ private void getCurrentAccountAndBindView() {
                 if(account == null || !account.getUsername().equals(mNewAccountName)) {
                     new SwitchAccountAsyncTask(mRedditDataRoomDatabase, mNewAccountName, newAccount -> {
                         EventBus.getDefault().post(new SwitchAccountEvent(getClass().getName()));
+                        Toast.makeText(this, R.string.account_switched, Toast.LENGTH_SHORT).show();
+
                         mNewAccountName = null;
                         if(newAccount == null) {
                             mNullAccessToken = true;
@@ -432,7 +434,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     }
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
                 finish();

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -357,6 +357,8 @@ private void getCurrentAccountAndInitializeViewPager() {
                 if(account == null || !account.getUsername().equals(mNewAccountName)) {
                     new SwitchAccountAsyncTask(mRedditDataRoomDatabase, mNewAccountName, newAccount -> {
                         EventBus.getDefault().post(new SwitchAccountEvent(getClass().getName()));
+                        Toast.makeText(this, R.string.account_switched, Toast.LENGTH_SHORT).show();
+
                         mNewAccountName = null;
                         if(newAccount == null) {
                             mNullAccessToken = true;

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -55,8 +55,6 @@ public Result doWork() {
         try {
             Log.i("workmanager", "before response");
 
-            String currentAccountName = redditDataRoomDatabase.accountDao().getCurrentAccount().getUsername();
-
             List<Account> accounts = redditDataRoomDatabase.accountDao().getAllAccounts();
             for(int accountIndex = 0; accountIndex < accounts.size(); accountIndex++) {
                 Account account = accounts.get(accountIndex);
@@ -119,6 +117,7 @@ public Result doWork() {
                                 Uri uri = LinkResolverActivity.getRedditUriByPath(message.getContext());
                                 intent.setData(uri);
                                 intent.putExtra(LinkResolverActivity.EXTRA_NEW_ACCOUNT_NAME, accountName);
+                                intent.putExtra(LinkResolverActivity.EXTRA_MESSAGE_FULLNAME, message.getFullname());
                                 PendingIntent pendingIntent = PendingIntent.getActivity(context, accountIndex * 6, intent, PendingIntent.FLAG_UPDATE_CURRENT);
                                 builder.setContentIntent(pendingIntent);
                             } else if(kind.equals(Message.TYPE_ACCOUNT)) {
@@ -131,6 +130,7 @@ public Result doWork() {
                                 Uri uri = LinkResolverActivity.getRedditUriByPath(message.getContext());
                                 intent.setData(uri);
                                 intent.putExtra(LinkResolverActivity.EXTRA_NEW_ACCOUNT_NAME, accountName);
+                                intent.putExtra(LinkResolverActivity.EXTRA_MESSAGE_FULLNAME, message.getFullname());
                                 PendingIntent pendingIntent = PendingIntent.getActivity(context, accountIndex * 6 + 2, intent, PendingIntent.FLAG_UPDATE_CURRENT);
                                 builder.setContentIntent(pendingIntent);
                             } else if(kind.equals(Message.TYPE_MESSAGE)) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -35,4 +35,5 @@ interface AppComponent {
     void inject(EditCommentActivity editCommentActivity);
     void inject(AccountPostsActivity accountPostsActivity);
     void inject(PullNotificationWorker pullNotificationWorker);
+    void inject(ViewMessageActivity viewMessageActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/Message.java
Patch:
@@ -104,7 +104,7 @@ public String getFormattedTime() {
         return formattedTime;
     }
 
-    public boolean isWasComment() {
+    public boolean wasComment() {
         return wasComment;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -248,7 +248,8 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                     });
                 } else {
                     if(post.getAuthorIconUrl() == null) {
-                        new LoadUserDataAsyncTask(mUserDao, post.getAuthor(), mRetrofit, iconImageUrl -> {
+                        String authorName = post.getAuthor().equals("[deleted]") ? post.getSubredditNamePrefixed().substring(2) : post.getAuthor();
+                        new LoadUserDataAsyncTask(mUserDao, authorName, mRetrofit, iconImageUrl -> {
                             if(mContext != null && getItemCount() > 0) {
                                 if(iconImageUrl == null || iconImageUrl.equals("")) {
                                     mGlide.load(R.drawable.subreddit_default_icon)

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -49,13 +49,13 @@ public Result doWork() {
             Account currentAccount = redditDataRoomDatabase.accountDao().getCurrentAccount();
             Response<String> response = mOauthRetrofit.create(RedditAPI.class).getMessages(
                     RedditUtils.getOAuthHeader(currentAccount.getAccessToken()),
-                    FetchMessages.WHERE_COMMENTS).execute();
+                    FetchMessages.WHERE_UNREAD, null).execute();
             Log.i("workmanager", "has response");
             if(response.isSuccessful()) {
                 String responseBody = response.body();
                 ArrayList<Message> messages = FetchMessages.parseMessage(responseBody, context.getResources().getConfiguration().locale);
 
-                if(messages != null) {
+                if(messages != null && !messages.isEmpty()) {
                     NotificationManagerCompat notificationManager = NotificationUtils.getNotificationManager(context);
 
                     NotificationCompat.Builder summaryBuilder = NotificationUtils.buildSummaryNotification(context,

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -158,5 +158,5 @@ Call<String> getPostAndCommentsSingleThreadByIdOauth(@Path("id") String id, @Pat
     Call<String> selectFlair(@Path("subredditNamePrefixed") String subredditName, @HeaderMap Map<String, String> headers, @FieldMap Map<String, String> params);
 
     @GET("/message/{where}.json?raw_json=1")
-    Call<String> getMessages(@HeaderMap Map<String, String> headers, @Path("where") String where);
+    Call<String> getMessages(@HeaderMap Map<String, String> headers, @Path("where") String where, @Query("after") String after);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PullNotificationWorker.java
Patch:
@@ -23,6 +23,8 @@
 import retrofit2.Retrofit;
 
 public class PullNotificationWorker extends Worker {
+    static final String WORKER_TAG = "PNWT";
+
     private Context context;
 
     @Inject

File: app/src/main/java/ml/docilealligator/infinityforreddit/FollowedUsersListingFragment.java
Patch:
@@ -13,7 +13,7 @@
 import android.widget.LinearLayout;
 
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.ViewModelProviders;
+import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -79,7 +79,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         FollowedUsersRecyclerViewAdapter adapter = new FollowedUsersRecyclerViewAdapter(mActivity);
         mRecyclerView.setAdapter(adapter);
 
-        mSubscribedUserViewModel = ViewModelProviders.of(this,
+        mSubscribedUserViewModel = new ViewModelProvider(this,
                 new SubscribedUserViewModel.Factory(mActivity.getApplication(), mRedditDataRoomDatabase, getArguments().getString(EXTRA_ACCOUNT_NAME)))
                 .get(SubscribedUserViewModel.class);
         mSubscribedUserViewModel.getAllSubscribedUsers().observe(this, subscribedUserData -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -26,7 +26,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentPagerAdapter;
-import androidx.lifecycle.ViewModelProviders;
+import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager.widget.ViewPager;
@@ -313,7 +313,7 @@ public void manageAccountSelected() {
         accountRecyclerView.setNestedScrollingEnabled(false);
         accountRecyclerView.setAdapter(adapter);
 
-        accountViewModel = ViewModelProviders.of(this,
+        accountViewModel = new ViewModelProvider(this,
                 new AccountViewModel.Factory(getApplication(), mRedditDataRoomDatabase, mAccountName)).get(AccountViewModel.class);
         accountViewModel.getAccountsExceptCurrentAccountLiveData().observe(this, adapter::changeAccountsDataset);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingFragment.java
Patch:
@@ -17,7 +17,7 @@
 import androidx.annotation.NonNull;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.ViewModelProviders;
+import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -124,7 +124,7 @@ public void subredditSelected(String subredditName, String iconUrl) {
 
         SubredditListingViewModel.Factory factory = new SubredditListingViewModel.Factory(mRetrofit, query,
                 PostDataSource.SORT_TYPE_RELEVANCE);
-        mSubredditListingViewModel = ViewModelProviders.of(this, factory).get(SubredditListingViewModel.class);
+        mSubredditListingViewModel = new ViewModelProvider(this, factory).get(SubredditListingViewModel.class);
         mSubredditListingViewModel.getSubreddits().observe(this, subredditData -> mAdapter.submitList(subredditData));
 
         mSubredditListingViewModel.getInitialLoadingState().observe(this, networkState -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditsListingFragment.java
Patch:
@@ -14,7 +14,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.ViewModelProviders;
+import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -93,7 +93,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
 
         mRecyclerView.setAdapter(adapter);
 
-        mSubscribedSubredditViewModel = ViewModelProviders.of(this,
+        mSubscribedSubredditViewModel = new ViewModelProvider(this,
                 new SubscribedSubredditViewModel.Factory(mActivity.getApplication(), mRedditDataRoomDatabase, accountName))
                 .get(SubscribedSubredditViewModel.class);
         mSubscribedSubredditViewModel.getAllSubscribedSubreddits().observe(this, subscribedSubredditData -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingFragment.java
Patch:
@@ -14,7 +14,7 @@
 
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.ViewModelProviders;
+import androidx.lifecycle.ViewModelProvider;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -103,7 +103,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         UserListingViewModel.Factory factory = new UserListingViewModel.Factory(mRetrofit, mQuery,
                 PostDataSource.SORT_TYPE_RELEVANCE);
-        mUserListingViewModel = ViewModelProviders.of(this, factory).get(UserListingViewModel.class);
+        mUserListingViewModel = new ViewModelProvider(this, factory).get(UserListingViewModel.class);
         mUserListingViewModel.getUsers().observe(this, UserData -> mAdapter.submitList(UserData));
 
         mUserListingViewModel.getInitialLoadingState().observe(this, networkState -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -149,7 +149,7 @@ void onStateChanged(AppBarLayout appBarLayout, State state) {
                 int statusBarResourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
                 if (statusBarResourceId > 0) {
                     ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) toolbar.getLayoutParams();
-                    params.topMargin = getResources().getDimensionPixelSize(statusBarResourceId);
+                    params.topMargin = resources.getDimensionPixelSize(statusBarResourceId);
                     toolbar.setLayoutParams(params);
                 }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -150,6 +150,7 @@ protected void onCreate(Bundle savedInstanceState) {
             mProfileImageUrl = savedInstanceState.getString(ACCOUNT_PROFILE_IMAGE_URL_STATE);
             mBannerImageUrl = savedInstanceState.getString(ACCOUNT_BANNER_IMAGE_URL_STATE);
             mKarma = savedInstanceState.getInt(ACCOUNT_KARMA_STATE);
+
             if(!mNullAccessToken && mAccessToken == null) {
                 getCurrentAccountAndBindView();
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -489,7 +489,6 @@ public Object instantiateItem(@NonNull ViewGroup container, int position) {
                     break;
                 case 1:
                     commentsListingFragment = (CommentsListingFragment) fragment;
-                    break;
             }
             return fragment;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedThingListingActivity.java
Patch:
@@ -29,7 +29,6 @@
 public class SubscribedThingListingActivity extends AppCompatActivity {
 
     private static final String INSERT_SUBSCRIBED_SUBREDDIT_STATE = "ISSS";
-
     private static final String NULL_ACCESS_TOKEN_STATE = "NATS";
     private static final String ACCESS_TOKEN_STATE = "ATS";
     private static final String ACCOUNT_NAME_STATE = "ANS";

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -30,4 +30,5 @@ interface AppComponent {
     void inject(SearchResultActivity searchResultActivity);
     void inject(SearchSubredditsResultActivity searchSubredditsResultActivity);
     void inject(FollowedUsersListingFragment followedUsersListingFragment);
+    void inject(SubredditSelectionActivity subredditSelectionActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentsListingFragment.java
Patch:
@@ -70,7 +70,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View rootView = inflater.inflate(R.layout.fragment_comments_listing, container, false);
 
-        ((Infinity) activity.getApplication()).getmAppComponent().inject(this);
+        ((Infinity) activity.getApplication()).getAppComponent().inject(this);
 
         ButterKnife.bind(this, rootView);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchFlairsInSubreddit.java
Patch:
@@ -1,6 +1,5 @@
 package ml.docilealligator.infinityforreddit;
 
-import android.content.SharedPreferences;
 import android.os.AsyncTask;
 
 import androidx.annotation.NonNull;
@@ -21,10 +20,9 @@ interface FetchFlairsInSubredditListener {
         void fetchFailed();
     }
 
-    static void fetchFlairs(Retrofit oauthRetrofit, SharedPreferences authInfoSharedPreferences, String subredditName, FetchFlairsInSubredditListener fetchFlairsInSubredditListener) {
+    static void fetchFlairs(Retrofit oauthRetrofit, String accessToken, String subredditName, FetchFlairsInSubredditListener fetchFlairsInSubredditListener) {
         RedditAPI api = oauthRetrofit.create(RedditAPI.class);
 
-        String accessToken = authInfoSharedPreferences.getString(SharedPreferencesUtils.ACCESS_TOKEN_KEY, "");
         Call<String> flairsCall = api.getFlairs(RedditUtils.getOAuthHeader(accessToken), subredditName);
         flairsCall.enqueue(new Callback<String>() {
             @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/FilteredPostsActivity.java
Patch:
@@ -51,7 +51,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/FollowedUsersListingFragment.java
Patch:
@@ -57,7 +57,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         mActivity = getActivity();
 
-        ((Infinity) mActivity.getApplication()).getmAppComponent().inject(this);
+        ((Infinity) mActivity.getApplication()).getAppComponent().inject(this);
 
         mGlide = Glide.with(this);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/Infinity.java
Patch:
@@ -34,7 +34,7 @@ public void restoreInstanceState(@NonNull Object target, @Nullable Bundle state)
         });
     }
 
-    public AppComponent getmAppComponent() {
+    public AppComponent getAppComponent() {
         return mAppComponent;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/LoginActivity.java
Patch:
@@ -47,7 +47,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_login);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
@@ -100,7 +100,7 @@ public void onResponse(@NonNull Call<String> call, @NonNull Response<String> res
                                         FetchMyInfo.fetchMyInfo(mOauthRetrofit, accessToken, new FetchMyInfo.FetchUserMyListener() {
                                             @Override
                                             public void onFetchMyInfoSuccess(String response) {
-                                                ParseMyInfo.parseMyInfo(response, new ParseMyInfo.ParseMyInfoListener() {
+                                                ParseAndSaveAccountInfo.parseAndSaveAccountInfo(response, mRedditDataRoomDatabase, new ParseAndSaveAccountInfo.ParseAndSaveAccountInfoListener() {
                                                     @Override
                                                     public void onParseMyInfoSuccess(String name, String profileImageUrl, String bannerImageUrl, int karma) {
                                                         new ParseAndInsertNewAccountAsyncTask(name, accessToken, refreshToken, profileImageUrl, bannerImageUrl,

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostFragment.java
Patch:
@@ -108,7 +108,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         // Inflate the layout for this fragment
         View rootView = inflater.inflate(R.layout.fragment_post, container, false);
 
-        ((Infinity) activity.getApplication()).getmAppComponent().inject(this);
+        ((Infinity) activity.getApplication()).getAppComponent().inject(this);
 
         ButterKnife.bind(this, rootView);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/RulesActivity.java
Patch:
@@ -53,7 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         ActionBar actionBar = getSupportActionBar();
         Drawable upArrow = getResources().getDrawable(R.drawable.ic_arrow_back_white_24dp);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -55,7 +55,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchSubredditsResultActivity.java
Patch:
@@ -44,7 +44,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditsListingFragment.java
Patch:
@@ -61,7 +61,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
 
         mActivity = getActivity();
 
-        ((Infinity) mActivity.getApplication()).getmAppComponent().inject(this);
+        ((Infinity) mActivity.getApplication()).getAppComponent().inject(this);
 
         String accountName = getArguments().getString(EXTRA_ACCOUNT_NAME);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditsRecyclerViewAdapter.java
Patch:
@@ -94,7 +94,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder viewHolder,
             });
         }
 
-        if(!iconUrl.equals("")) {
+        if(iconUrl != null && !iconUrl.equals("")) {
             glide.load(iconUrl)
                     .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(72, 0)))
                     .error(glide.load(R.drawable.subreddit_default_icon)

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedThingListingActivity.java
Patch:
@@ -59,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -111,7 +111,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         EventBus.getDefault().register(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         toolbar.setTitle("");
         setSupportActionBar(toolbar);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -97,7 +97,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         if(savedInstanceState == null) {
             getCurrentAccountAndBindView();

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -100,7 +100,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmAppComponent().inject(this);
+        ((Infinity) getApplication()).getAppComponent().inject(this);
 
         if(savedInstanceState == null) {
             getCurrentAccountAndInitializeViewPager();

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -117,8 +117,6 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
-        getCurrentAccountAndInitializeViewPager();
-
         params = (AppBarLayout.LayoutParams) collapsingToolbarLayout.getLayoutParams();
 
         //Get status bar height

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -25,5 +25,5 @@ interface AppComponent {
     void inject(FlairBottomSheetFragment flairBottomSheetFragment);
     void inject(RulesActivity rulesActivity);
     void inject(CommentsListingFragment commentsListingFragment);
-    void inject(PostMediaService postMediaService);
+    void inject(SubmitPostService submitPostService);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubredditData.java
Patch:
@@ -54,7 +54,7 @@ protected Void doInBackground(Void... voids) {
                 JSONObject data = jsonResponse.getJSONObject(JSONUtils.DATA_KEY);
                 mNCurrentOnlineSubscribers = data.getInt(JSONUtils.ACTIVE_USER_COUNT_KEY);
                 subredditData = parseSubredditData(data);
-                /*String id = data.getString(JSONUtils.EXTRA_SUBREDDIT_NAME);
+                /*String id = data.getString(JSONUtils.EXTRA_NAME);
                 String subredditFullName = data.getString(JSONUtils.DISPLAY_NAME);
                 String description = data.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -102,6 +102,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             case R.id.action_search_search_result_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
+                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 finish();
                 startActivity(intent);
                 return true;
@@ -141,8 +142,9 @@ public Fragment getItem(int position) {
                     Bundle bundle = new Bundle();
                     bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostDataSource.TYPE_SEARCH);
                     bundle.putString(PostFragment.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_RELEVANCE);
-                    bundle.putString(PostFragment.EXTRA_SUBREDDIT_NAME, mSubredditName);
+                    bundle.putString(PostFragment.EXTRA_NAME, mSubredditName);
                     bundle.putString(PostFragment.EXTRA_QUERY, mQuery);
+                    bundle.putInt(PostFragment.EXTRA_FILTER, PostFragment.EXTRA_NO_FILTER);
                     mFragment.setArguments(bundle);
                     return mFragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -300,6 +300,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                 return true;
             case R.id.action_search_main_activity:
                 Intent intent = new Intent(this, SearchActivity.class);
+                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 return true;
             case R.id.action_refresh_main_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -149,7 +149,8 @@ public Fragment getItem(int position) {
                 case 1: {
                     SubredditListingFragment mFragment = new SubredditListingFragment();
                     Bundle bundle = new Bundle();
-                    bundle.putString(SubredditListingFragment.QUERY_KEY, mQuery);
+                    bundle.putString(SubredditListingFragment.EXTRA_QUERY_KEY, mQuery);
+                    bundle.putBoolean(SubredditListingFragment.EXTRA_IS_POSTING, false);
                     mFragment.setArguments(bundle);
                     return mFragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -312,6 +312,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_NAME, subredditName);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_IS_USER, false);
+                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 break;
             case R.id.action_refresh_view_subreddit_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -328,6 +328,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 Intent intent = new Intent(this, SearchActivity.class);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_NAME, userName);
                 intent.putExtra(SearchActivity.EXTRA_SUBREDDIT_IS_USER, true);
+                intent.putExtra(SearchActivity.EXTRA_SEARCH_ONLY_SUBREDDITS, false);
                 startActivity(intent);
                 break;
             case R.id.action_refresh_view_user_detail_activity:

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -201,7 +201,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     }
                     mLoadSubredditIconAsyncTask = new LoadSubredditIconAsyncTask(
                             SubredditRoomDatabase.getDatabase(mActivity).subredditDao(), mPost.getSubredditNamePrefixed().substring(2),
-                            iconImageUrl -> {
+                            mRetrofit, iconImageUrl -> {
                                 if(!iconImageUrl.equals("")) {
                                     mGlide.load(iconImageUrl)
                                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(72, 0)))

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchUserData.java
Patch:
@@ -22,8 +22,7 @@ public interface FetchUserListingDataListener {
         void onFetchUserListingDataFailed();
     }
 
-    public static void fetchUserData(final Retrofit retrofit, String userName,
-                              final FetchUserDataListener fetchUserDataListener) {
+    public static void fetchUserData(Retrofit retrofit, String userName, FetchUserDataListener fetchUserDataListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
 
         Call<String> userInfo = api.getUserData(userName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/LoadUserDataAsyncTask.java
Patch:
@@ -50,7 +50,7 @@ public void onFetchUserDataSuccess(UserData userData) {
 
                 @Override
                 public void onFetchUserDataFailed() {
-                    loadUserDataAsyncTaskListener.loadUserDataSuccess("");
+                    loadUserDataAsyncTaskListener.loadUserDataSuccess(null);
                 }
             });
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSource.java
Patch:
@@ -469,7 +469,6 @@ private void loadSearchPostsInitial(@NonNull final LoadInitialCallback<String, P
         getPost.enqueue(new Callback<String>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull retrofit2.Response<String> response) {
-                Log.i("initial", call.request().url().toString());
                 if(response.isSuccessful()) {
                     ParsePost.parsePosts(response.body(), locale, -1,
                             new ParsePost.ParsePostsListingListener() {
@@ -518,7 +517,6 @@ private void loadSearchPostsAfter(@NonNull LoadParams<String> params, @NonNull f
         getPost.enqueue(new Callback<String>() {
             @Override
             public void onResponse(@NonNull Call<String> call, @NonNull retrofit2.Response<String> response) {
-                Log.i("after", call.request().url().toString());
                 if(response.isSuccessful()) {
                     ParsePost.parsePosts(response.body(), locale, -1, new ParsePost.ParsePostsListingListener() {
                         @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchComment.java
Patch:
@@ -23,8 +23,8 @@ interface FetchMoreCommentListener {
         void onFetchMoreCommentFailed();
     }
 
-    static void fetchComment(Retrofit retrofit, String subredditNamePrefixed, String article,
-                             Locale locale, FetchCommentListener fetchCommentListener) {
+    static void fetchComments(Retrofit retrofit, String subredditNamePrefixed, String article,
+                              Locale locale, FetchCommentListener fetchCommentListener) {
         RedditAPI api = retrofit.create(RedditAPI.class);
         Call<String> comments = api.getComments(subredditNamePrefixed, article);
         comments.enqueue(new Callback<String>() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -66,13 +66,13 @@ Call<String> getUserBestPosts(@Path("username") String username, @Query("after")
     Call<String> getInfo(@Path("subredditNamePrefixed") String subredditNamePrefixed, @Query("id") String id);
 
     @GET("subreddits/search.json?raw_json=1&include_over_18=on")
-    Call<String> searchSubreddits(@Query("q") String subredditName, @Query("after") String after);
+    Call<String> searchSubreddits(@Query("q") String subredditName, @Query("after") String after, @Query("sort") String sort);
 
     @GET("search.json?raw_json=1&type=user&include_over_18=on")
-    Call<String> searchUsers(@Query("q") String profileName, @Query("after") String after);
+    Call<String> searchUsers(@Query("q") String profileName, @Query("after") String after, @Query("sort") String sort);
 
     @GET("search.json?raw_json=1&type=link&include_over_18=on")
-    Call<String> searchPosts(@Query("q") String query, @Query("after") String after,
+    Call<String> searchPosts(@Query("q") String query, @Query("after") String after, @Query("sort") String sort,
                              @HeaderMap Map<String, String> headers);
 
     @GET("r/{subredditName}/search.json?raw_json=1&type=link&restrict_sr=true&include_over_18=on")

File: app/src/main/java/ml/docilealligator/infinityforreddit/SortTypeBottomSheetFragment.java
Patch:
@@ -78,7 +78,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         });
 
         controversialTypeTextView.setOnClickListener(view -> {
-            ((SortTypeSelectionCallback) activity).sortTypeSelected(PostDataSource.SORT_TYPE_BEST);
+            ((SortTypeSelectionCallback) activity).sortTypeSelected(PostDataSource.SORT_TYPE_CONTROVERSIAL);
             dismiss();
         });
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SortTypeBottomSheetFragment.java
Patch:
@@ -11,7 +11,7 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 
-import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
+import com.deishelon.roundedbottomsheet.RoundedBottomSheetDialogFragment;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -20,7 +20,7 @@
 /**
  * A simple {@link Fragment} subclass.
  */
-public class SortTypeBottomSheetFragment extends BottomSheetDialogFragment {
+public class SortTypeBottomSheetFragment extends RoundedBottomSheetDialogFragment {
 
     interface SortTypeSelectionCallback {
         void sortTypeSelected(String sortType);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -1,6 +1,7 @@
 package ml.docilealligator.infinityforreddit;
 
 import android.os.AsyncTask;
+import android.text.Html;
 import android.util.Log;
 
 import androidx.annotation.Nullable;
@@ -223,7 +224,7 @@ static CommentData parseSingleComment(JSONObject singleCommentData, int depth, L
         if(!singleCommentData.isNull(JSONUtils.BODY_HTML_KEY)) {
             commentContent = singleCommentData.getString(JSONUtils.BODY_HTML_KEY).trim();
         }
-        String permalink = singleCommentData.getString(JSONUtils.PERMALINK_KEY);
+        String permalink = Html.fromHtml(singleCommentData.getString(JSONUtils.PERMALINK_KEY)).toString();
         int score = singleCommentData.getInt(JSONUtils.SCORE_KEY);
         long submitTime = singleCommentData.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;
         boolean scoreHidden = singleCommentData.getBoolean(JSONUtils.SCORE_HIDDEN_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostImageActivity.java
Patch:
@@ -260,6 +260,7 @@ protected void onCreate(Bundle savedInstanceState) {
             imageUri = null;
             selectAgainTextView.setVisibility(View.GONE);
             mGlide.clear(imageView);
+            imageView.setVisibility(View.GONE);
             constraintLayout.setVisibility(View.VISIBLE);
         });
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -102,6 +102,7 @@ public Fragment getItem(int position) {
                     PostFragment mFragment = new PostFragment();
                     Bundle bundle = new Bundle();
                     bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostDataSource.TYPE_SEARCH);
+                    bundle.putString(PostFragment.EXTRA_SORT_TYPE, PostDataSource.SORT_TYPE_BEST);
                     bundle.putString(PostFragment.EXTRA_SUBREDDIT_NAME, mSubredditName);
                     bundle.putString(PostFragment.EXTRA_QUERY, mQuery);
                     mFragment.setArguments(bundle);

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentData.java
Patch:
@@ -84,8 +84,8 @@ protected CommentData(Parcel in) {
         hasReply = in.readByte() != 0;
         scoreHidden = in.readByte() != 0;
         isExpanded = in.readByte() != 0;
-        children = in.readArrayList(null);
-        moreChildrenFullnames = in.readArrayList(null);
+        children = in.readArrayList(CommentData.class.getClassLoader());
+        moreChildrenFullnames = in.readArrayList(CommentData.class.getClassLoader());
         moreChildrenStartingIndex = in.readInt();
         isPlaceHolder = in.readByte() != 0;
         isLoadingMoreChildren = in.readByte() != 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -122,7 +122,7 @@ protected void onCreate(Bundle savedInstanceState) {
             if (savedInstanceState == null) {
                 mFragment = new PostFragment();
                 Bundle bundle = new Bundle();
-                bundle.putInt(PostFragment.EXTRA_POST_TYPE_KEY, PostDataSource.TYPE_FRONT_PAGE);
+                bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostDataSource.TYPE_FRONT_PAGE);
                 mFragment.setArguments(bundle);
                 getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_content_main, mFragment).commit();
             } else {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubredditData.java
Patch:
@@ -54,7 +54,7 @@ protected Void doInBackground(Void... voids) {
                 JSONObject data = jsonResponse.getJSONObject(JSONUtils.DATA_KEY);
                 mNCurrentOnlineSubscribers = data.getInt(JSONUtils.ACTIVE_USER_COUNT_KEY);
                 subredditData = parseSubredditData(data);
-                /*String id = data.getString(JSONUtils.EXTRA_SUBREDDIT_NAME_KEY);
+                /*String id = data.getString(JSONUtils.EXTRA_SUBREDDIT_NAME);
                 String subredditFullName = data.getString(JSONUtils.DISPLAY_NAME);
                 String description = data.getString(JSONUtils.PUBLIC_DESCRIPTION_KEY).trim();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -668,7 +668,7 @@ class ErrorViewHolder extends RecyclerView.ViewHolder {
         ErrorViewHolder(View itemView) {
             super(itemView);
             ButterKnife.bind(this, itemView);
-            errorTextView.setText(R.string.load_posts_failed);
+            errorTextView.setText(R.string.load_posts_error);
             retryButton.setOnClickListener(view -> retryLoadingMoreCallback.retryLoadingMore());
         }
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchResultActivity.java
Patch:
@@ -101,9 +101,9 @@ public Fragment getItem(int position) {
                 case 0: {
                     PostFragment mFragment = new PostFragment();
                     Bundle bundle = new Bundle();
-                    bundle.putInt(PostFragment.EXTRA_POST_TYPE_KEY, PostDataSource.TYPE_SEARCH);
-                    bundle.putString(PostFragment.EXTRA_SUBREDDIT_NAME_KEY, mSubredditName);
-                    bundle.putString(PostFragment.EXTRA_QUERY_KEY, mQuery);
+                    bundle.putInt(PostFragment.EXTRA_POST_TYPE, PostDataSource.TYPE_SEARCH);
+                    bundle.putString(PostFragment.EXTRA_SUBREDDIT_NAME, mSubredditName);
+                    bundle.putString(PostFragment.EXTRA_QUERY, mQuery);
                     mFragment.setArguments(bundle);
                     return mFragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -364,7 +364,7 @@ private void showErrorView(String subredditId) {
         mProgressBar.setVisibility(View.GONE);
         mFetchPostInfoLinearLayout.setVisibility(View.VISIBLE);
         mFetchPostInfoLinearLayout.setOnClickListener(view -> fetchPostAndCommentsById(subredditId));
-        mFetchPostInfoTextView.setText(R.string.error_loading_post);
+        mFetchPostInfoTextView.setText(R.string.load_posts_error);
         mGlide.load(R.drawable.load_post_error_indicator).into(mFetchPostInfoImageView);
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -24,4 +24,5 @@ interface AppComponent {
     void inject(PostVideoActivity postVideoActivity);
     void inject(FlairBottomSheetFragment flairBottomSheetFragment);
     void inject(RulesActivity rulesActivity);
+    void inject(CommentsListingFragment commentsListingFragment);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentAndPostRecyclerViewAdapter.java
Patch:
@@ -442,7 +442,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 ((LoadMoreChildCommentsViewHolder) holder).placeholderTextView.setText(R.string.comment_load_more_comments);
             }
         } else if(holder instanceof LoadMoreCommentsFailedViewHolder) {
-            ((LoadMoreCommentsFailedViewHolder) holder).errorTextView.setText(R.string.post_load_comments_failed);
+            ((LoadMoreCommentsFailedViewHolder) holder).errorTextView.setText(R.string.load_comments_failed);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -211,7 +211,7 @@ protected void onPostExecute(Void aVoid) {
         }
     }
 
-    private static CommentData parseSingleComment(JSONObject singleCommentData, int depth, Locale locale) throws JSONException {
+    static CommentData parseSingleComment(JSONObject singleCommentData, int depth, Locale locale) throws JSONException {
         String id = singleCommentData.getString(JSONUtils.ID_KEY);
         String fullName = singleCommentData.getString(JSONUtils.NAME_KEY);
         String author = singleCommentData.getString(JSONUtils.AUTHOR_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingRecyclerViewAdapter.java
Patch:
@@ -208,7 +208,7 @@ class ErrorViewHolder extends RecyclerView.ViewHolder {
             super(itemView);
             ButterKnife.bind(this, itemView);
             retryButton.setOnClickListener(view -> retryLoadingMoreCallback.retryLoadingMore());
-            errorTextView.setText(R.string.post_load_comments_failed);
+            errorTextView.setText(R.string.load_comments_failed);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingRecyclerViewAdapter.java
Patch:
@@ -208,7 +208,7 @@ class ErrorViewHolder extends RecyclerView.ViewHolder {
             super(itemView);
             ButterKnife.bind(this, itemView);
             retryButton.setOnClickListener(view -> retryLoadingMoreCallback.retryLoadingMore());
-            errorTextView.setText(R.string.post_load_comments_failed);
+            errorTextView.setText(R.string.load_comments_failed);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -19,4 +19,5 @@ interface AppComponent {
     void inject(SubscribedThingListingActivity subscribedThingListingActivity);
     void inject(PostTextActivity postTextActivity);
     void inject(SubscribedSubredditsListingFragment subscribedSubredditsListingFragment);
+    void inject(PostLinkActivity postLinkActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostTextActivity.java
Patch:
@@ -44,7 +44,7 @@ public class PostTextActivity extends AppCompatActivity {
 
     private static final int SUBREDDIT_SELECTION_REQUEST_CODE = 0;
 
-    @BindView(R.id.coordinator_layout_post_detail_activity) CoordinatorLayout coordinatorLayout;
+    @BindView(R.id.coordinator_layout_post_text_activity) CoordinatorLayout coordinatorLayout;
     @BindView(R.id.subreddit_icon_gif_image_view_post_text_activity) GifImageView iconGifImageView;
     @BindView(R.id.subreddit_name_text_view_post_text_activity) TextView subreditNameTextView;
     @BindView(R.id.rules_button_post_text_activity) Button rulesButton;
@@ -156,9 +156,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                     subredditName = subreditNameTextView.getText().toString();
                 }
 
-                SubmitPost.submitPostText(mOauthRetrofit, sharedPreferences, mLocale, subredditName,
+                SubmitPost.submitTextOrLinkPost(mOauthRetrofit, sharedPreferences, mLocale, subredditName,
                         titleEditText.getText().toString(), contentEditText.getText().toString(),
-                        false, new SubmitPost.SubmitPostListener() {
+                        false, RedditUtils.KIND_SELF, new SubmitPost.SubmitPostListener() {
                             @Override
                             public void submitSuccessful(Post post) {
                                 Intent intent = new Intent(PostTextActivity.this, ViewPostDetailActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditUtils.java
Patch:
@@ -52,6 +52,7 @@ public class RedditUtils {
     static final String API_TYPE_JSON = "json";
     static final String RETURN_RTJSON_KEY = "return_rtjson";
     static final String TEXT_KEY = "text";
+    static final String URL_KEY = "url";
     static final String THING_ID_KEY = "thing_id";
 
     static final String SR_KEY = "sr";
@@ -60,6 +61,7 @@ public class RedditUtils {
     static final String KIND_KEY = "kind";
     static final String KIND_TEXT = "text";
     static final String KIND_SELF = "self";
+    static final String KIND_LINK = "link";
 
     static Map<String, String> getHttpBasicAuthHeader() {
         Map<String, String> params = new HashMap<>();

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditSelectionActivity.java
Patch:
@@ -10,7 +10,6 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.app.AppCompatActivity;
 
-import SubscribedSubredditDatabase.SubscribedSubredditViewModel;
 import butterknife.ButterKnife;
 
 public class SubredditSelectionActivity extends AppCompatActivity {
@@ -19,8 +18,6 @@ public class SubredditSelectionActivity extends AppCompatActivity {
     static final String EXTRA_RETURN_SUBREDDIT_ICON_URL_KEY = "ERSIURLK";
     static final String EXTRA_RETURN_SUBREDDIT_IS_USER_KEY = "ERSIUK";
 
-    private SubscribedSubredditViewModel mSubscribedSubredditViewModel;
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -17,4 +17,5 @@ interface AppComponent {
     void inject(ViewUserDetailActivity viewUserDetailActivity);
     void inject(CommentActivity commentActivity);
     void inject(SubscribedThingListingActivity subscribedThingListingActivity);
+    void inject(PostTextActivity postTextActivity);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentActivity.java
Patch:
@@ -121,7 +121,9 @@ public void parseSentCommentFailed() {
                                 finish();
                             }
                         });
+                return true;
         }
-        return super.onOptionsItemSelected(item);
+
+        return false;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -70,4 +70,5 @@ public class JSONUtils {
     static final String JSON_KEY = "json";
     static final String THINGS_KEY = "things";
     static final String PARENT_ID_KEY = "parent_id";
+    static final String ERRORS_KEY = "errors";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -145,7 +145,6 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                         canStartActivity = false;
 
                         Intent intent = new Intent(mContext, ViewPostDetailActivity.class);
-                        intent.putExtra(ViewPostDetailActivity.EXTRA_TITLE, title);
                         intent.putExtra(ViewPostDetailActivity.EXTRA_POST_DATA, post);
                         intent.putExtra(ViewPostDetailActivity.EXTRA_POST_LIST_POSITION, position);
                         mContext.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditSelectionActivity.java
Patch:
@@ -33,7 +33,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         SubscribedSubredditsListingFragment fragment = new SubscribedSubredditsListingFragment();
         Bundle bundle = new Bundle();
-        bundle.putInt(PostFragment.POST_TYPE_KEY, PostDataSource.TYPE_FRONT_PAGE);
+        bundle.putBoolean(SubscribedSubredditsListingFragment.EXTRA_IS_SUBREDDIT_SELECTION, true);
         fragment.setArguments(bundle);
         getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout_subreddit_selection_activity, fragment).commit();
     }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentRecyclerViewAdapter.java
Patch:
@@ -1109,7 +1109,7 @@ class LoadMoreCommentsFailedViewHolder extends RecyclerView.ViewHolder {
         @BindView(R.id.error_text_view_item_comment_footer_error) TextView errorTextView;
         @BindView(R.id.retry_button_item_comment_footer_error) Button retryButton;
 
-        public LoadMoreCommentsFailedViewHolder(@NonNull View itemView) {
+        LoadMoreCommentsFailedViewHolder(@NonNull View itemView) {
             super(itemView);
             ButterKnife.bind(this, itemView);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
-import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -94,7 +93,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mRecyclerView.setNestedScrollingEnabled(false);
         mRecyclerView.setLayoutManager(new LinearLayoutManager(this));
-        mRecyclerView.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
 
         if(savedInstanceState == null) {
             orientation = getResources().getConfiguration().orientation;

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -18,7 +18,7 @@ public interface RedditAPI {
 
     @GET("{subredditNamePrefixed}/comments/{article}.json?raw_json=1")
     Call<String> getComments(@Path("subredditNamePrefixed") String subredditNamePrefixed,
-                             @Path("article") String article, @Query("comment") String comment);
+                             @Path("article") String article);
 
     @GET("r/{subredditName}/about.json?raw_json=1")
     Call<String> getSubredditData(@Path("subredditName") String subredditName);

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -54,9 +54,6 @@ Call<String> getUserBestPosts(@Path("userName") String userName, @Query("after")
     @POST("api/subscribe")
     Call<String> subredditSubscription(@HeaderMap Map<String, String> headers, @FieldMap Map<String, String> params);
 
-    @GET("api/morechildren?api_type=json&raw_json=1")
-    Call<String> getMoreChildren(@Query("link_id") String linkId, @Query("children") String children);
-
     @GET("{subredditNamePrefixed}/api/info.json?raw_json=1")
     Call<String> getInfo(@Path("subredditNamePrefixed") String subredditNamePrefixed, @Query("id") String id);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingRecyclerViewAdapter.java
Patch:
@@ -209,7 +209,7 @@ class ErrorViewHolder extends RecyclerView.ViewHolder {
             super(itemView);
             ButterKnife.bind(this, itemView);
             retryButton.setOnClickListener(view -> retryLoadingMoreCallback.retryLoadingMore());
-            errorTextView.setText(R.string.load_comment_failed);
+            errorTextView.setText(R.string.post_load_comments_failed);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingRecyclerViewAdapter.java
Patch:
@@ -209,7 +209,7 @@ class ErrorViewHolder extends RecyclerView.ViewHolder {
             super(itemView);
             ButterKnife.bind(this, itemView);
             retryButton.setOnClickListener(view -> retryLoadingMoreCallback.retryLoadingMore());
-            errorTextView.setText(R.string.load_comment_failed);
+            errorTextView.setText(R.string.post_load_comments_failed);
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -154,6 +154,9 @@ protected void onCreate(Bundle savedInstanceState) {
                 }
 
                 String subredditFullName = "r/" + subredditData.getName();
+                if(!title.equals(subredditFullName)) {
+                    getSupportActionBar().setTitle(subredditFullName);
+                }
                 subredditNameTextView.setText(subredditFullName);
                 String nSubscribers = getString(R.string.subscribers_number_detail, subredditData.getNSubscribers());
                 nSubscribersTextView.setText(nSubscribers);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -216,6 +216,9 @@ public void isNotSubscribed() {
 
                 String userFullName = "u/" + userData.getName();
                 userNameTextView.setText(userFullName);
+                if(!title.equals(userFullName)) {
+                    getSupportActionBar().setTitle(userFullName);
+                }
                 String karma = getString(R.string.karma_info, userData.getKarma());
                 karmaTextView.setText(karma);
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentActivity.java
Patch:
@@ -98,6 +98,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                             public void sendCommentSuccess(CommentData commentData) {
                                 Intent returnIntent = new Intent();
                                 returnIntent.putExtra(EXTRA_COMMENT_DATA_KEY, commentData);
+                                returnIntent.putExtra(EXTRA_PARENT_FULLNAME_KEY, parentFullname);
                                 if(isReplying) {
                                     returnIntent.putExtra(EXTRA_PARENT_POSITION_KEY, parentPosition);
                                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -694,8 +694,9 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
                 if(comment.getDepth() == 0) {
                     mAdapter.addComment(comment);
                 } else {
+                    String parentFullname = data.getExtras().getString(CommentActivity.EXTRA_PARENT_FULLNAME_KEY);
                     int parentPosition = data.getExtras().getInt(CommentActivity.EXTRA_PARENT_POSITION_KEY);
-                    mAdapter.addChildComment(comment, parentPosition);
+                    mAdapter.addChildComment(comment, parentFullname, parentPosition);
                 }
             } else {
                 Toast.makeText(this, R.string.send_comment_failed, Toast.LENGTH_SHORT).show();

File: app/src/main/java/ml/docilealligator/infinityforreddit/FetchComment.java
Patch:
@@ -84,7 +84,6 @@ static void fetchMoreComment(Retrofit retrofit, String subredditNamePrefixed, St
         }
 
         stringBuilder.deleteCharAt(stringBuilder.length() - 1);
-        //final int finalStartingIndex = startingIndex + 100;
 
         RedditAPI api = retrofit.create(RedditAPI.class);
         Call<String> moreChildrenBasicInfo = api.getMoreChildren(mParentId, stringBuilder.toString());

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentActivity.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.widget.EditText;
@@ -70,7 +69,6 @@ protected void onCreate(Bundle savedInstanceState) {
             toolbar.setTitle(getString(R.string.comment_activity_label_is_replying));
         }
 
-        Log.i("fullname", parentFullname);
         setSupportActionBar(toolbar);
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppComponent.java
Patch:
@@ -5,8 +5,8 @@
 import dagger.Component;
 
 @Singleton
-@Component(modules = NetworkModule.class)
-interface NetworkComponent {
+@Component(modules = AppModule.class)
+interface AppComponent {
     void inject(MainActivity mainActivity);
     void inject(LoginActivity loginActivity);
     void inject(PostFragment postFragment);

File: app/src/main/java/ml/docilealligator/infinityforreddit/AppModule.java
Patch:
@@ -14,10 +14,10 @@
 import retrofit2.converter.scalars.ScalarsConverterFactory;
 
 @Module
-class NetworkModule {
+class AppModule {
     Application mApplication;
 
-    public NetworkModule(Application application) {
+    public AppModule(Application application) {
         mApplication = application;
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentMultiLevelRecyclerViewAdapter.java
Patch:
@@ -79,11 +79,11 @@ public void onBindViewHolder(final RecyclerView.ViewHolder holder, int position)
 
         ((CommentViewHolder) holder).commentTimeTextView.setText(commentItem.getCommentTime());
         SpannableConfiguration spannableConfiguration = SpannableConfiguration.builder(mContext).linkResolver((view, link) -> {
-            if (link.startsWith("/u/")) {
+            if (link.startsWith("/u/") || link.startsWith("u/")) {
                 Intent intent = new Intent(mContext, ViewUserDetailActivity.class);
                 intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, link.substring(3));
                 mContext.startActivity(intent);
-            } else if (link.startsWith("/r/")) {
+            } else if (link.startsWith("/r/") || link.startsWith("r/")) {
                 Intent intent = new Intent(mContext, ViewSubredditDetailActivity.class);
                 intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME_KEY, link.substring(3));
                 mContext.startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/LoginActivity.java
Patch:
@@ -41,7 +41,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_login);
 
-        ((Infinity) getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getApplication()).getmAppComponent().inject(this);
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -98,7 +98,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_main);
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getApplication()).getmAppComponent().inject(this);
 
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostRecyclerViewAdapter.java
Patch:
@@ -238,7 +238,7 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int
                                 .into(((DataViewHolder) holder).subredditIconGifImageView);
                     }
 
-                    ((DataViewHolder) holder).subredditNameTextView.setTextColor(mContext.getResources().getColor(R.color.colorPrimaryDark));
+                    ((DataViewHolder) holder).subredditNameTextView.setTextColor(mContext.getResources().getColor(R.color.textColorPrimaryDark));
                     ((DataViewHolder) holder).subredditNameTextView.setText(author);
 
                     ((DataViewHolder) holder).subredditIconNameLinearLayout.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingFragment.java
Patch:
@@ -69,7 +69,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         // Inflate the layout for this fragment
         View rootView = inflater.inflate(R.layout.fragment_subreddit_listing, container, false);
 
-        ((Infinity) getActivity().getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getActivity().getApplication()).getmAppComponent().inject(this);
 
         ButterKnife.bind(this, rootView);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingFragment.java
Patch:
@@ -76,7 +76,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         // Inflate the layout for this fragment
         View rootView = inflater.inflate(R.layout.fragment_user_listing, container, false);
 
-        ((Infinity) getActivity().getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getActivity().getApplication()).getmAppComponent().inject(this);
 
         ButterKnife.bind(this, rootView);
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -133,7 +133,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         EventBus.getDefault().register(this);
 
-        ((Infinity) getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getApplication()).getmAppComponent().inject(this);
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
@@ -557,11 +557,11 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
 
     private SpannableConfiguration getCustomSpannableConfiguration() {
         return SpannableConfiguration.builder(this).linkResolver((view, link) -> {
-            if(link.startsWith("/u/")) {
+            if(link.startsWith("/u/") || link.startsWith("u/")) {
                 Intent intent = new Intent(ViewPostDetailActivity.this, ViewUserDetailActivity.class);
                 intent.putExtra(ViewUserDetailActivity.EXTRA_USER_NAME_KEY, link.substring(3));
                 startActivity(intent);
-            } else if(link.startsWith("/r/")) {
+            } else if(link.startsWith("/r/") || link.startsWith("r/")) {
                 Intent intent = new Intent(ViewPostDetailActivity.this, ViewSubredditDetailActivity.class);
                 intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME_KEY, link.substring(3));
                 startActivity(intent);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -79,7 +79,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_view_subreddit_detail);
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getApplication()).getmAppComponent().inject(this);
 
         //Get status bar height
         int statusBarHeight = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -76,7 +76,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ButterKnife.bind(this);
 
-        ((Infinity) getApplication()).getmNetworkComponent().inject(this);
+        ((Infinity) getApplication()).getmAppComponent().inject(this);
 
         //Get status bar height
         int statusBarHeight = 0;

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -1,7 +1,6 @@
 package ml.docilealligator.infinityforreddit;
 
 import android.os.AsyncTask;
-import android.text.Html;
 import android.util.Log;
 
 import org.json.JSONArray;
@@ -117,7 +116,7 @@ protected Void doInBackground(Void... voids) {
                     boolean isSubmitter = data.getBoolean(JSONUtils.IS_SUBMITTER_KEY);
                     String commentContent = "";
                     if(!data.isNull(JSONUtils.BODY_HTML_KEY)) {
-                        commentContent = Html.fromHtml(data.getString(JSONUtils.BODY_HTML_KEY).trim()).toString();
+                        commentContent = data.getString(JSONUtils.BODY_HTML_KEY).trim();
                     }
                     String permalink = data.getString(JSONUtils.PERMALINK_KEY);
                     int score = data.getInt(JSONUtils.SCORE_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -1,6 +1,7 @@
 package ml.docilealligator.infinityforreddit;
 
 import android.os.AsyncTask;
+import android.text.Html;
 import android.util.Log;
 
 import org.json.JSONArray;
@@ -116,7 +117,7 @@ protected Void doInBackground(Void... voids) {
                     boolean isSubmitter = data.getBoolean(JSONUtils.IS_SUBMITTER_KEY);
                     String commentContent = "";
                     if(!data.isNull(JSONUtils.BODY_HTML_KEY)) {
-                        commentContent = data.getString(JSONUtils.BODY_HTML_KEY);
+                        commentContent = Html.fromHtml(data.getString(JSONUtils.BODY_HTML_KEY).trim()).toString();
                     }
                     String permalink = data.getString(JSONUtils.PERMALINK_KEY);
                     int score = data.getInt(JSONUtils.SCORE_KEY);

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserFollowing.java
Patch:
@@ -2,9 +2,10 @@
 
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
-import androidx.annotation.NonNull;
 import android.util.Log;
 
+import androidx.annotation.NonNull;
+
 import java.util.HashMap;
 import java.util.Map;
 
@@ -109,7 +110,7 @@ protected Void doInBackground(Void... voids) {
             if(isSubscribing) {
                 subscribedUserDao.insert(subscribedUserData);
             } else {
-                subscribedUserDao.deleteSubscribedUser(userName);;
+                subscribedUserDao.deleteSubscribedUser(userName);
             }
             return null;
         }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParsePost.java
Patch:
@@ -81,7 +81,9 @@ protected Void doInBackground(Void... voids) {
                         voteType = 0;
                     } else {
                         voteType = data.getBoolean(JSONUtils.LIKES_KEY) ? 1 : -1;
+                        score -= voteType;
                     }
+
                     Calendar postTimeCalendar = Calendar.getInstance();
                     postTimeCalendar.setTimeInMillis(postTime);
                     String formattedPostTime = new SimpleDateFormat("MMM d, YYYY, HH:mm",

File: app/src/main/java/ml/docilealligator/infinityforreddit/UserListingRecyclerViewAdapter.java
Patch:
@@ -104,7 +104,8 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             if(UserData.getIconUrl() != null) {
                 glide.load(UserData.getIconUrl())
                         .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(72, 0)))
-                        .error(glide.load(R.drawable.subreddit_default_icon))
+                        .error(glide.load(R.drawable.subreddit_default_icon)
+                                .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(72, 0))))
                         .into(((UserListingRecyclerViewAdapter.DataViewHolder) holder).iconGifImageView);
             } else {
                 glide.load(R.drawable.subreddit_default_icon)

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewSubredditDetailActivity.java
Patch:
@@ -159,7 +159,8 @@ public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {
                 } else {
                     glide.load(subredditData.getIconUrl())
                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0)))
-                            .error(glide.load(R.drawable.subreddit_default_icon))
+                            .error(glide.load(R.drawable.subreddit_default_icon)
+                                    .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0))))
                             .into(iconGifImageView);
                     iconGifImageView.setOnClickListener(view -> {
                         Intent intent = new Intent(ViewSubredditDetailActivity.this, ViewImageActivity.class);

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewUserDetailActivity.java
Patch:
@@ -157,7 +157,8 @@ public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {
                 } else {
                     glide.load(userData.getIconUrl())
                             .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0)))
-                            .error(glide.load(R.drawable.subreddit_default_icon))
+                            .error(glide.load(R.drawable.subreddit_default_icon)
+                                    .apply(RequestOptions.bitmapTransform(new RoundedCornersTransformation(216, 0))))
                             .into(iconGifImageView);
 
                     iconGifImageView.setOnClickListener(view -> {

File: app/src/main/java/ml/docilealligator/infinityforreddit/NetworkComponent.java
Patch:
@@ -8,6 +8,7 @@
 @Component(modules = NetworkModule.class)
 interface NetworkComponent {
     void inject(MainActivity mainActivity);
+    void inject(LoginActivity loginActivity);
     void inject(PostFragment postFragment);
     void inject(SubredditListingFragment subredditListingFragment);
     void inject(UserListingFragment userListingFragment);

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -75,8 +75,6 @@ public class MainActivity extends AppCompatActivity {
     private boolean mFetchUserInfoSuccess;
     private boolean mInsertSuccess;
 
-    private FragmentCommunicator mFragmentCommunicator;
-
     private SubscribedSubredditViewModel mSubscribedSubredditViewModel;
     private SubscribedUserViewModel mSubscribedUserViewModel;
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubredditData.java
Patch:
@@ -116,7 +116,6 @@ private static class ParseSubredditListingDataAsyncTask extends AsyncTask<Void,
             } catch (JSONException e) {
                 Log.i("subreddit json error", e.getMessage());
                 parseFailed = true;
-                parseSubredditListingDataListener.onParseSubredditListingDataFail();
             }
         }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditListingDataSourceFactory.java
Patch:
@@ -24,7 +24,7 @@ public class SubredditListingDataSourceFactory extends DataSource.Factory {
     @NonNull
     @Override
     public DataSource create() {
-        SubredditListingDataSource subredditListingDataSource = new SubredditListingDataSource(retrofit,
+        subredditListingDataSource = new SubredditListingDataSource(retrofit,
                 query, onSubredditListingDataFetchedCallback);
         subredditListingDataSourceMutableLiveData.postValue(subredditListingDataSource);
         return subredditListingDataSource;

File: app/src/main/java/ml/docilealligator/infinityforreddit/NetworkComponent.java
Patch:
@@ -9,6 +9,7 @@
 interface NetworkComponent {
     void inject(MainActivity mainActivity);
     void inject(PostFragment postFragment);
+    void inject(SubredditListingFragment subredditListingFragment);
     void inject(ViewPostDetailActivity viewPostDetailActivity);
     void inject(ViewSubredditDetailActivity viewSubredditDetailActivity);
     void inject(ViewUserDetailActivity viewUserDetailActivity);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSource.java
Patch:
@@ -115,8 +115,10 @@ public void loadAfter(@NonNull LoadParams<String> params, @NonNull final LoadCal
                 break;
             case TYPE_USER:
                 loadUserPostsAfter(params, callback);
+                break;
             case TYPE_SEARCH:
                 loadSearchPostsAfter(params, callback);
+                break;
         }
     }
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -58,8 +58,7 @@ Call<String> getUserBestPosts(@Path("userName") String userName, @Query("after")
     Call<String> getInfo(@Path("subredditNamePrefixed") String subredditNamePrefixed, @Query("id") String id);
 
     @GET("subreddits/search.json?raw_json=1&include_over_18=on")
-    Call<String> searchSubreddits(@Query("q") String subredditName, @Query("after") String after,
-                                  @HeaderMap Map<String, String> headers);
+    Call<String> searchSubreddits(@Query("q") String subredditName, @Query("after") String after);
 
     @GET("profiles/search.json?raw_json=1")
     Call<String> searchProfiles(@Query("q") String profileName, @Query("after") String after,

File: app/src/main/java/ml/docilealligator/infinityforreddit/SearchActivity.java
Patch:
@@ -70,10 +70,9 @@ public Fragment getItem(int position) {
                     return mFragment;
                 }
                 case 1: {
-                    PostFragment mFragment = new PostFragment();
+                    SubredditListingFragment mFragment = new SubredditListingFragment();
                     Bundle bundle = new Bundle();
-                    bundle.putInt(PostFragment.POST_TYPE_KEY, PostDataSource.TYPE_FRONT_PAGE);
-                    bundle.putString(PostFragment.NAME_KEY, mQuery);
+                    bundle.putString(SubredditListingFragment.QUERY_KEY, mQuery);
                     mFragment.setArguments(bundle);
                     return mFragment;
                 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -191,7 +191,6 @@ protected Void doInBackground(Void... voids) {
                 commaSeparatedChildren.deleteCharAt(commaSeparatedChildren.length() - 1);
                 parseFailed = false;
             } catch (JSONException e) {
-                parseMoreCommentBasicInfoListener.onParseMoreCommentBasicInfoFailed();
                 parseFailed = true;
                 e.printStackTrace();
             }

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -494,7 +494,9 @@ public void onFetchCommentSuccess(List<?> commentData,
                             mRecyclerView.setAdapter(mAdapter);
                             mCommentCardView.setVisibility(View.VISIBLE);
 
-                            fetchMoreComment();
+                            if(!mCommaSeparatedChildren.equals("")) {
+                                fetchMoreComment();
+                            }
                         } else {
                             mNoCommentWrapperLinearLayout.setVisibility(View.VISIBLE);
                             glide.load(R.drawable.no_comment_indicator).into(mNoCommentImageView);

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostDataSourceFactory.java
Patch:
@@ -28,9 +28,10 @@ class PostDataSourceFactory extends DataSource.Factory {
         this.onPostFetchedCallback = onPostFetchedCallback;
     }
 
-    PostDataSourceFactory(Retrofit retrofit, Locale locale, String subredditName, int postType,
+    PostDataSourceFactory(Retrofit retrofit, String accessToken, Locale locale, String subredditName, int postType,
                           PostDataSource.OnPostFetchedCallback onPostFetchedCallback) {
         this.retrofit = retrofit;
+        this.accessToken = accessToken;
         this.locale = locale;
         this.subredditName = subredditName;
         postDataSourceLiveData = new MutableLiveData<>();
@@ -43,7 +44,7 @@ public DataSource create() {
         if(postType == PostDataSource.TYPE_FRONT_PAGE) {
             postDataSource = new PostDataSource(retrofit, accessToken, locale, postType, onPostFetchedCallback);
         } else {
-            postDataSource = new PostDataSource(retrofit, locale, subredditName, postType, onPostFetchedCallback);
+            postDataSource = new PostDataSource(retrofit, accessToken, locale, subredditName, postType, onPostFetchedCallback);
         }
 
         postDataSourceLiveData.postValue(postDataSource);

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditUtils.java
Patch:
@@ -12,7 +12,7 @@
 public class RedditUtils {
     static final String OAUTH_URL ="https://www.reddit.com/api/v1/authorize.compact";
     static final String OAUTH_API_BASE_URI = "https://oauth.reddit.com";
-    static final String API_BASE_URI = "https://www.reddit.com";
+    static final String API_BASE_URI = "https://api.reddit.com";
 
     static final String CLIENT_ID_KEY = "client_id";
     static final String CLIENT_ID = "";

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditUtils.java
Patch:
@@ -30,7 +30,7 @@ public class RedditUtils {
 
     static final String AUTHORIZATION_KEY = "Authorization";
     static final String AUTHORIZATION_BASE = "bearer ";
-    static final String USER_AGENT_KEY = "UserData-Agent";
+    static final String USER_AGENT_KEY = "User-Agent";
     static final String USER_AGENT = "";
 
     static final String GRANT_TYPE_KEY = "grant_type";

File: app/src/main/java/ml/docilealligator/infinityforreddit/NetworkState.java
Patch:
@@ -2,7 +2,7 @@
 
 class NetworkState {
     public enum Status{
-        RUNNING,
+        LOADING,
         SUCCESS,
         FAILED
     }
@@ -21,7 +21,7 @@ public enum Status{
 
     static {
         LOADED=new NetworkState(Status.SUCCESS,"Success");
-        LOADING=new NetworkState(Status.RUNNING,"Running");
+        LOADING=new NetworkState(Status.LOADING,"Loading");
     }
 
     public Status getStatus() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostData.java
Patch:
@@ -36,7 +36,6 @@ class PostData implements Parcelable {
     private boolean isCrosspost;
     private boolean isDashVideo;
     private boolean isDownloadableGifOrVideo;
-    private PostData crosspostParentPostData;
 
     PostData(String id, String fullName, String subredditNamePrefixed, String postTime, String title,
              String previewUrl, String permalink, int score, int postType, int voteType, int gilded,

File: app/src/main/java/ml/docilealligator/infinityforreddit/Infinity.java
Patch:
@@ -9,7 +9,9 @@ public class Infinity extends Application {
     public void onCreate() {
         super.onCreate();
 
-        mNetworkComponent = DaggerNetworkComponent.create();
+        mNetworkComponent = DaggerNetworkComponent.builder()
+                .networkModule(new NetworkModule(this))
+                .build();
     }
 
     public NetworkComponent getmNetworkComponent() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditUtils.java
Patch:
@@ -27,7 +27,6 @@ class RedditUtils {
     static final String SCOPE_KEY = "scope";
     static final String SCOPE = "identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread";
     static final String ACCESS_TOKEN_KEY = "access_token";
-    static final String EXPIRES_IN_KEY = "expires_in";
 
     static final String AUTHORIZATION_KEY = "Authorization";
     static final String AUTHORIZATION_BASE = "bearer ";

File: app/src/main/java/ml/docilealligator/infinityforreddit/RefreshAccessToken.java
Patch:
@@ -52,12 +52,11 @@ public void onResponse(@NonNull Call<String> call, @NonNull retrofit2.Response<S
                         String newAccessToken = jsonObject.getString(RedditUtils.ACCESS_TOKEN_KEY);
                         int expireIn = jsonObject.getInt(RedditUtils.EXPIRES_IN_KEY);
 
+                        long queryAccessTokenTime = Calendar.getInstance().getTimeInMillis();
+
                         SharedPreferences.Editor editor = context.getSharedPreferences(SharedPreferencesUtils.AUTH_CODE_FILE_KEY, Context.MODE_PRIVATE).edit();
                         editor.putString(SharedPreferencesUtils.ACCESS_TOKEN_KEY, newAccessToken);
                         editor.putInt(SharedPreferencesUtils.ACCESS_TOKEN_EXPIRE_INTERVAL_KEY, expireIn);
-                        editor.apply();
-
-                        long queryAccessTokenTime = Calendar.getInstance().getTimeInMillis();
                         editor.putLong(SharedPreferencesUtils.QUERY_ACCESS_TOKEN_TIME_KEY, queryAccessTokenTime);
                         editor.apply();
 

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewImageActivity.java
Patch:
@@ -24,7 +24,6 @@
 import android.text.Spannable;
 import android.text.SpannableString;
 import android.text.style.ForegroundColorSpan;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.MotionEvent;
@@ -178,12 +177,10 @@ public void onSwipingUp(final MotionEvent event) {
                         .y(totalLengthY)
                         .setDuration(0)
                         .start();
-                Log.i("total length", Float.toString(totalLengthY));
             }
 
             @Override
             public boolean onSwipedUp(final MotionEvent event) {
-                Log.i("total length", Float.toString(totalLengthY));
                 if (totalLengthY < -pxHeight / 8) {
                     mImageView.animate()
                             .y(-pxHeight)

File: app/src/main/java/ml/docilealligator/infinityforreddit/PostFragment.java
Patch:
@@ -127,7 +127,7 @@ public void lastItemChanged(String lastItem) {
             });
             mPaginationSynchronizer.setLoadSuccess(savedInstanceState.getBoolean(LOAD_SUCCESS_STATE));
             mPaginationSynchronizer.setLoadingState(savedInstanceState.getBoolean(LOADING_STATE_STATE));
-            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), mPostData, mPaginationSynchronizer);
+            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), mPostData, mPaginationSynchronizer, mIsBestPost);
             mPostRecyclerView.setAdapter(adapter);
             mPostRecyclerView.addOnScrollListener(new PostPaginationScrollListener(
                     getActivity(), mLinearLayoutManager, adapter, mLastItem, mPostData,
@@ -187,7 +187,7 @@ public void onParsePostSuccess(ArrayList<PostData> postData, String lastItem) {
                                         if(isAdded() && getActivity() != null) {
                                             mPostData = postData;
                                             mLastItem = lastItem;
-                                            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), postData, mPaginationSynchronizer);
+                                            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), postData, mPaginationSynchronizer, mIsBestPost);
 
                                             mPostRecyclerView.setAdapter(adapter);
                                             mPostRecyclerView.addOnScrollListener(new PostPaginationScrollListener(
@@ -259,7 +259,7 @@ public void onParsePostSuccess(ArrayList<PostData> postData, String lastItem) {
                                         if(isAdded() && getActivity() != null) {
                                             mPostData = postData;
                                             mLastItem = lastItem;
-                                            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), postData, mPaginationSynchronizer);
+                                            PostRecyclerViewAdapter adapter = new PostRecyclerViewAdapter(getActivity(), postData, mPaginationSynchronizer, mIsBestPost);
 
                                             mPostRecyclerView.setAdapter(adapter);
                                             mPostRecyclerView.addOnScrollListener(new PostPaginationScrollListener(

File: app/src/main/java/ml/docilealligator/infinityforreddit/PaginationSynchronizer.java
Patch:
@@ -10,9 +10,10 @@ class PaginationSynchronizer implements Parcelable {
     private PaginationRetryNotifier paginationRetryNotifier;
     private LastItemSynchronizer lastItemSynchronizer;
 
-    PaginationSynchronizer() {
+    PaginationSynchronizer(LastItemSynchronizer lastItemSynchronizer) {
         loadingState = false;
         loadSuccess = true;
+        this. lastItemSynchronizer = lastItemSynchronizer;
     }
 
     protected PaginationSynchronizer(Parcel in) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/RedditAPI.java
Patch:
@@ -38,4 +38,7 @@ Call<String> getComments(@Path("subredditNamePrefixed") String subredditNamePref
 
     @GET("r/{subredditName}.json?raw_json=1")
     Call<String> getPost(@Path("subredditName") String subredditName, @Query("after") String lastItem);
+
+    @GET("user/{username}/about.json/raw_json=1")
+    Call<String> getUserData(@Path("username") String username);
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditRecyclerViewAdapter.java
Patch:
@@ -39,7 +39,8 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder viewHolder,
             public void onClick(View view) {
                 Intent intent = new Intent(mContext, ViewSubredditDetailActivity.class);
                 intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME_KEY, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getName());
-                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_ID_KEY, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getId());
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_VALUE_KEY, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getId());
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_QUERY_BY_ID_KEY, true);
                 mContext.startActivity(intent);
             }
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/CommentMultiLevelRecyclerViewAdapter.java
Patch:
@@ -67,8 +67,8 @@ public void onBindViewHolder(final RecyclerView.ViewHolder holder, int position)
             @Override
             public void onClick(View view) {
                 if(commentItem.hasChildren() && commentItem.getChildren().size() > 0) {
-                    setExpandButton(((CommentViewHolder) holder).expandButton, commentItem.isExpanded());
                     mMultiLevelRecyclerView.toggleItemsGroup(holder.getAdapterPosition());
+                    setExpandButton(((CommentViewHolder) holder).expandButton, commentItem.isExpanded());
                 } else {
                     ((CommentViewHolder) holder).loadMoreCommentsProgressBar.setVisibility(View.VISIBLE);
                     FetchComment.fetchComment(subredditNamePrefixed, article, commentItem.getId(),
@@ -83,6 +83,8 @@ public void onParseCommentSuccess(List<?> commentData, int moreCommentCount) {
                                                     ((CommentViewHolder) holder).loadMoreCommentsProgressBar
                                                             .setVisibility(View.GONE);
                                                     mMultiLevelRecyclerView.toggleItemsGroup(holder.getAdapterPosition());
+                                                    ((CommentViewHolder) holder).expandButton
+                                                            .setImageResource(R.drawable.ic_expand_less_black_20dp);
                                                 }
 
                                                 @Override

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseSubscribedThing.java
Patch:
@@ -65,7 +65,7 @@ protected Void doInBackground(Void... voids) {
                 for(int i = 0; i < children.length(); i++) {
                     JSONObject data = children.getJSONObject(i).getJSONObject(JSONUtils.DATA_KEY);
                     String name = data.getString(JSONUtils.DISPLAY_NAME);
-                    String bannerImageUrl = data.getString(JSONUtils.BANNER_IMG_KEY);
+                    String bannerImageUrl = data.getString(JSONUtils.BANNER_BACKGROUND_IMAGE_KEY);
                     if(bannerImageUrl.equals("") || bannerImageUrl.equals("null")) {
                         bannerImageUrl= data.getString(JSONUtils.BANNER_IMG_KEY);
                         if(bannerImageUrl.equals("null")) {

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditRecyclerViewAdapter.java
Patch:
@@ -38,8 +38,8 @@ public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder viewHolder,
             @Override
             public void onClick(View view) {
                 Intent intent = new Intent(mContext, ViewSubredditDetailActivity.class);
-                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getName());
-                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_ID, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getId());
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME_KEY, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getName());
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_ID_KEY, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getId());
                 mContext.startActivity(intent);
             }
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -13,7 +13,7 @@ class JSONUtils {
     static final String TITLE_KEY = "title";
     static final String NAME_KEY = "name";
     static final String SUBREDDIT_NAME_PREFIX_KEY = "subreddit_name_prefixed";
-    static final String SELF_TEXT_KEY = "selftext";
+    static final String SELFTEXT_HTML_KEY = "selftext_html";
     static final String AUTHOR_KEY = "author";
     static final String DOMAIN_KEY = "domain";
     static final String LINK_FLAIR_TEXT_KEY = "link_flair_text";
@@ -44,7 +44,7 @@ class JSONUtils {
     static final String REDDIT_VIDEO_PREVIEW_KEY = "reddit_video_preview";
     static final String IS_REDDIT_MEDIA_DOMAIN = "is_reddit_media_domain";
     static final String STICKIED_KEY = "stickied";
-    static final String BODY_KEY = "body";
+    static final String BODY_HTML_KEY = "body_html";
     static final String COLLAPSED_KEY = "collapsed";
     static final String IS_SUBMITTER_KEY = "is_submitter";
     static final String REPLIES_KEY = "replies";

File: app/src/main/java/ml/docilealligator/infinityforreddit/ParseComment.java
Patch:
@@ -72,7 +72,7 @@ protected Void doInBackground(Void... voids) {
                     String fullName = data.getString(JSONUtils.LINK_ID);
                     String author = data.getString(JSONUtils.AUTHOR_KEY);
                     boolean isSubmitter = data.getBoolean(JSONUtils.IS_SUBMITTER_KEY);
-                    String commentContent = data.getString(JSONUtils.BODY_KEY);
+                    String commentContent = data.getString(JSONUtils.BODY_HTML_KEY);
                     String permalink = data.getString(JSONUtils.PERMALINK_KEY);
                     int score = data.getInt(JSONUtils.SCORE_KEY);
                     long submitTime = data.getLong(JSONUtils.CREATED_UTC_KEY) * 1000;

File: app/src/main/java/ml/docilealligator/infinityforreddit/MainActivity.java
Patch:
@@ -224,7 +224,7 @@ public void onFetchUserInfoFail() {
                 }, 1);
             }
 
-            if(mInsertSuccess) {
+            if(!mInsertSuccess) {
                 new FetchSubscribedThing(this, Volley.newRequestQueue(this), new ArrayList<SubscribedSubredditData>(),
                         new ArrayList<SubscribedUserData>(), new ArrayList<SubredditData>())
                         .fetchSubscribedSubreddits(new FetchSubscribedThing.FetchSubscribedSubredditsListener() {

File: app/src/main/java/ml/docilealligator/infinityforreddit/ViewPostDetailActivity.java
Patch:
@@ -141,8 +141,10 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
                     @Override
                     public void onClick(View view) {
                         Intent intent = new Intent(ViewPostDetailActivity.this, ViewImageActivity.class);
-                        intent.putExtra(ViewImageActivity.IMAGE_URL_KEY, mPostData.getPreviewUrl());
+                        intent.putExtra(ViewImageActivity.IMAGE_URL_KEY, mPostData.getUrl());
                         intent.putExtra(ViewImageActivity.TITLE_KEY, mPostData.getTitle());
+                        intent.putExtra(ViewImageActivity.SUBREDDIT_KEY, mPostData.getSubredditName());
+                        intent.putExtra(ViewImageActivity.ID_KEY, mPostData.getId());
                         startActivity(intent);
                     }
                 });

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -62,4 +62,5 @@ class JSONUtils {
     static final String SUBSCRIBERS_KEY = "subscribers";
     static final String PUBLIC_DESCRIPTION = "public_description";
     static final String ACTIVE_USER_COUNT = "active_user_count";
+    static final String DISPLAY_NAME_PREFIXED = "display_name_prefixed";
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubredditData.java
Patch:
@@ -57,7 +57,7 @@ public String getDescription() {
         return description;
     }
 
-    public int getnSubscribers() {
+    public int getNSubscribers() {
         return nSubscribers;
     }
 }

File: app/src/main/java/ml/docilealligator/infinityforreddit/SubscribedSubredditRecyclerViewAdapter.java
Patch:
@@ -33,11 +33,13 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup,
     }
 
     @Override
-    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder viewHolder, int i) {
+    public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder viewHolder, final int i) {
         viewHolder.itemView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 Intent intent = new Intent(mContext, ViewSubredditDetailActivity.class);
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_NAME, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getName());
+                intent.putExtra(ViewSubredditDetailActivity.EXTRA_SUBREDDIT_ID, mSubscribedSubredditData.get(viewHolder.getAdapterPosition()).getId());
                 mContext.startActivity(intent);
             }
         });

File: app/src/main/java/ml/docilealligator/infinityforreddit/AcquireAccessToken.java
Patch:
@@ -50,6 +50,7 @@ public void onResponse(String response) {
                         editor.putString(SharedPreferencesUtils.ACCESS_TOKEN_KEY, newAccessToken);
                         editor.apply();
 
+                        Log.i("access token", newAccessToken);
                         mAcquireAccessTokenListener.onAcquireAccessTokenSuccess();
                     } catch (JSONException e) {
                         e.printStackTrace();

File: app/src/main/java/ml/docilealligator/infinityforreddit/JSONUtils.java
Patch:
@@ -56,4 +56,5 @@ class JSONUtils {
     static final String ICON_IMG_KEY = "icon_img";
     static final String LINK_KARMA_KEY = "link_karma";
     static final String COMMENT_KARMA_KEY = "comment_karma";
+    static final String DISPLAY_NAME = "display_name";
 }

