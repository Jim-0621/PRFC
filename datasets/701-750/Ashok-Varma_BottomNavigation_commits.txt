File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/BottomNavigationBar.java
Patch:
@@ -214,9 +214,9 @@ private void init() {
 
         LayoutInflater inflater = LayoutInflater.from(getContext());
         View parentView = inflater.inflate(R.layout.bottom_navigation_bar_container, this, true);
-        mBackgroundOverlay = (FrameLayout) parentView.findViewById(R.id.bottom_navigation_bar_overLay);
-        mContainer = (FrameLayout) parentView.findViewById(R.id.bottom_navigation_bar_container);
-        mTabContainer = (LinearLayout) parentView.findViewById(R.id.bottom_navigation_bar_item_container);
+        mBackgroundOverlay = parentView.findViewById(R.id.bottom_navigation_bar_overLay);
+        mContainer = parentView.findViewById(R.id.bottom_navigation_bar_container);
+        mTabContainer = parentView.findViewById(R.id.bottom_navigation_bar_item_container);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             this.setOutlineProvider(ViewOutlineProvider.BOUNDS);

File: sample/src/main/java/com/ashokvarma/bottomnavigation/sample/HomeActivityJava.java
Patch:
@@ -35,7 +35,6 @@
  *
  * @author ashokvarma
  * @version 1.0
- * @see
  * @since 10 Jul 2017
  */
 public class HomeActivityJava extends AppCompatActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener, BottomNavigationBar.OnTabSelectedListener, AdapterView.OnItemSelectedListener {

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/BottomNavigationBar.java
Patch:
@@ -342,7 +342,7 @@ public BottomNavigationBar setFirstSelectedPosition(int firstSelectedPosition) {
     }
 
     /**
-     * will be public once all bugs are ressolved.
+     * will be public once all bugs are resolved.
      */
     private BottomNavigationBar setScrollable(boolean scrollable) {
         mScrollable = scrollable;

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/behaviour/VerticalScrollingBehavior.java
Patch:
@@ -19,9 +19,9 @@
  */
 public abstract class VerticalScrollingBehavior<V extends View> extends CoordinatorLayout.Behavior<V> {
 
-    private int mTotalDyUnconsumed = 0;
-    private int mTotalDyConsumed = 0;
-    private int mTotalDy = 0;
+    private int mTotalDyUnconsumed = -1;
+    private int mTotalDyConsumed = -1;
+    private int mTotalDy = -1;
 
     @ScrollDirection
     private int mScrollDirection = ScrollDirection.SCROLL_NONE;

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/BottomNavigationBar.java
Patch:
@@ -350,7 +350,7 @@ public void initialise() {
             }
 
             if (mBackgroundStyle == BACKGROUND_STYLE_STATIC) {
-                mBackgroundOverlay.setBackgroundColor(mBackgroundColor);
+                mBackgroundOverlay.setVisibility(View.GONE);
                 mContainer.setBackgroundColor(mBackgroundColor);
             }
 
@@ -419,7 +419,7 @@ public void clearAll() {
         mTabContainer.removeAllViews();
         mBottomNavigationTabs.clear();
         mBottomNavigationItems.clear();
-        mBackgroundOverlay.setBackgroundColor(Color.TRANSPARENT);
+        mBackgroundOverlay.setVisibility(View.GONE);
         mContainer.setBackgroundColor(Color.TRANSPARENT);
         mSelectedPosition = DEFAULT_SELECTED_POSITION;
     }

File: sample/src/main/java/com/ashokvarma/bottomnavigation/sample/HomeActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 import io.fabric.sdk.android.Fabric;
 
-public class BottomNavigationActivity extends AppCompatActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener, BottomNavigationBar.OnTabSelectedListener {
+public class HomeActivity extends AppCompatActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener, BottomNavigationBar.OnTabSelectedListener {
 
     BottomNavigationBar bottomNavigationBar;
 
@@ -194,9 +194,9 @@ private void refresh() {
 
         if (items3.isChecked()) {
             bottomNavigationBar
-                    .addItem(new BottomNavigationItem(R.drawable.ic_location_on_white_24dp, "Location").setActiveColorResource(R.color.orange).setBadgeItem(numberBadgeItem))
+                    .addItem(new BottomNavigationItem(R.drawable.ic_location_on_white_24dp, "Nearby").setActiveColorResource(R.color.orange).setBadgeItem(numberBadgeItem))
                     .addItem(new BottomNavigationItem(R.drawable.ic_find_replace_white_24dp, "Find").setActiveColorResource(R.color.teal))
-                    .addItem(new BottomNavigationItem(R.drawable.ic_favorite_white_24dp, "Favorites").setActiveColorResource(R.color.blue))
+                    .addItem(new BottomNavigationItem(R.drawable.ic_favorite_white_24dp, "Categories").setActiveColorResource(R.color.blue))
                     .setFirstSelectedPosition(lastSelectedPosition > 2 ? 2 : lastSelectedPosition)
                     .initialise();
         } else if (items4.isChecked()) {

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/ShiftingBottomNavigationTab.java
Patch:
@@ -72,9 +72,7 @@ public void unSelect(boolean setActiveColor, int animationDuration) {
         anim.setDuration(animationDuration);
         this.startAnimation(anim);
 
-//        labelView.animate().scaleY(0).scaleX(0).setDuration(animationDuration).start();
-        labelView.setScaleY(0);
-        labelView.setScaleX(0);
+        labelView.animate().scaleY(0).scaleX(0).setDuration(0).start();
     }
 
 //    @Override

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/BottomNavigationBar.java
Patch:
@@ -620,7 +620,7 @@ public interface OnTabSelectedListener {
      * Simple implementation of the OnTabSelectedListener interface with stub implementations of each method.
      * Extend this if you do not intend to override every method of OnTabSelectedListener.
      */
-    public class SimpleOnTabSelectedListener implements OnTabSelectedListener {
+    public static class SimpleOnTabSelectedListener implements OnTabSelectedListener {
         @Override
         public void onTabSelected(int position) {}
 

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/behaviour/BottomVerticalScrollBehavior.java
Patch:
@@ -20,7 +20,6 @@ public class BottomVerticalScrollBehavior<V extends View> extends VerticalScroll
     private static final Interpolator INTERPOLATOR = new LinearOutSlowInInterpolator();
     private int mBottomNavHeight;
     private int mDefaultOffset;
-//    private WeakReference<V> mViewRef;
 
     private ViewPropertyAnimatorCompat mTranslationAnimator;
     private boolean hidden = false;
@@ -30,7 +29,6 @@ public boolean onLayoutChild(CoordinatorLayout parent, final V child, int layout
         // First let the parent lay it out
         parent.onLayoutChild(child, layoutDirection);
 
-//        mViewRef = new WeakReference<>(child);
 
         child.post(new Runnable() {
             @Override
@@ -46,6 +44,7 @@ public void run() {
 
     @Override
     public void onNestedVerticalOverScroll(CoordinatorLayout coordinatorLayout, V child, @ScrollDirection int scrollDirection, int currentOverScroll, int totalOverScroll) {
+        // Empty body
     }
 
     @Override

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/utils/Utils.java
Patch:
@@ -15,6 +15,8 @@
  */
 public class Utils {
 
+    private Utils() {}
+
     /**
      * @param context used to get system services
      * @return screenWidth in pixels

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/BottomNavigationBar.java
Patch:
@@ -231,7 +231,7 @@ public void onClick(View v) {
 
         BottomNavigationUtils.bindTabWithData(currentItem, bottomNavigationTab, this);
 
-        bottomNavigationTab.initialise();
+        bottomNavigationTab.initialise(mBackgroundStyle == BACKGROUND_STYLE_STATIC);
 
         mTabContainer.addView(bottomNavigationTab);
     }

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/ClassicBottomNavigationTab.java
Patch:
@@ -70,7 +70,7 @@ public void unSelect(boolean setActiveColor, int animationDuration) {
     }
 
     @Override
-    public void initialise() {
-
+    public void initialise(boolean setActiveColor) {
+        super.initialise(setActiveColor);
     }
 }

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/ShiftingBottomNavigationTab.java
Patch:
@@ -1,6 +1,5 @@
 package com.ashokvarma.bottomnavigation;
 
-import android.animation.ValueAnimator;
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.os.Build;
@@ -78,8 +77,8 @@ public void unSelect(boolean setActiveColor, int animationDuration) {
     }
 
     @Override
-    public void initialise() {
-
+    public void initialise(boolean setActiveColor) {
+        super.initialise(setActiveColor);
     }
 
     public class ResizeWidthAnimation extends Animation {

File: bottom-navigation-bar/src/main/java/com/ashokvarma/bottomnavigation/ClassicBottomNavigationTab.java
Patch:
@@ -49,22 +49,22 @@ void init() {
         labelView = (TextView) view.findViewById(R.id.classic_bottom_navigation_title);
         iconView = (ImageView) view.findViewById(R.id.classic_bottom_navigation_icon);
 
-        labelScale = getResources().getDimension(R.dimen.classic_label_active) / getResources().getDimension(R.dimen.classic_label_inactive);
+        labelScale = getResources().getDimension(R.dimen.classic_label_inactive) / getResources().getDimension(R.dimen.classic_label_active);
 
         super.init();
     }
 
     @Override
     public void select(boolean setActiveColor, int animationDuration) {
 
-        labelView.animate().scaleX(labelScale).scaleY(labelScale).setDuration(animationDuration).start();
+        labelView.animate().scaleX(1).scaleY(1).setDuration(animationDuration).start();
 //        labelView.setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.classic_label_active));
         super.select(setActiveColor, animationDuration);
     }
 
     @Override
     public void unSelect(boolean setActiveColor, int animationDuration) {
-        labelView.animate().scaleX(1).scaleY(1).setDuration(animationDuration).start();
+        labelView.animate().scaleX(labelScale).scaleY(labelScale).setDuration(animationDuration).start();
 //        labelView.setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.classic_label_inactive));
         super.unSelect(setActiveColor, animationDuration);
     }

