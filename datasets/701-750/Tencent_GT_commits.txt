File: android/GT_APP/app/src/main/java/com/tencent/wstt/gt/analysis4/GTRAnalysisManager.java
Patch:
@@ -69,7 +69,7 @@ public void analysisData(String data) {
         try {
             distribute(data.split(GTConfig.separator));
         } catch (Exception e) {
-
+            e.printStackTrace();
         }
     }
 

File: android/GT_APP/app/src/main/java/com/tencent/wstt/gt/analysis4/analysis/NormalAnalysis.java
Patch:
@@ -37,7 +37,8 @@ public void onCollectNormalInfo(long time, long cpuTotal, long cpuApp,
         }
 
         if (lastTime != 0) {
-            gtrAnalysisResult.nowCPU = (cpuApp_noGTR - lastCPUApp) * 100L / (cpuTotal - lastCPUTotal);
+            gtrAnalysisResult.nowCPU = (cpuTotal - lastCPUTotal) == 0 ? 0
+                : (cpuApp_noGTR - lastCPUApp) * 100L / (cpuTotal - lastCPUTotal);
             gtrAnalysisResult.nowMemory = memory / 1024;
             gtrAnalysisResult.nowFlow = gtrAnalysisResult.nowFlow + (flowUpload + flowDownload - lastFlowUpload - lastFlowDownload);
             gtrAnalysisResult.nowFlowSpeed = (flowUpload + flowDownload - lastFlowUpload - lastFlowDownload) * 1000 / 1024 / (time - lastTime);

File: android/GT_APP/app/src/main/java/com/tencent/wstt/gt/analysis4/GTRAnalysisManager.java
Patch:
@@ -69,7 +69,7 @@ public void analysisData(String data) {
         try {
             distribute(data.split(GTConfig.separator));
         } catch (Exception e) {
-
+            e.printStackTrace();
         }
     }
 

File: android/GT_APP/app/src/main/java/com/tencent/wstt/gt/analysis4/analysis/NormalAnalysis.java
Patch:
@@ -37,7 +37,8 @@ public void onCollectNormalInfo(long time, long cpuTotal, long cpuApp,
         }
 
         if (lastTime != 0) {
-            gtrAnalysisResult.nowCPU = (cpuApp_noGTR - lastCPUApp) * 100L / (cpuTotal - lastCPUTotal);
+            gtrAnalysisResult.nowCPU = (cpuTotal - lastCPUTotal) == 0 ? 0
+                : (cpuApp_noGTR - lastCPUApp) * 100L / (cpuTotal - lastCPUTotal);
             gtrAnalysisResult.nowMemory = memory / 1024;
             gtrAnalysisResult.nowFlow = gtrAnalysisResult.nowFlow + (flowUpload + flowDownload - lastFlowUpload - lastFlowDownload);
             gtrAnalysisResult.nowFlowSpeed = (flowUpload + flowDownload - lastFlowUpload - lastFlowDownload) * 1000 / 1024 / (time - lastTime);

File: android/app/src/main/java/com/tencent/wstt/gt/activity/GTACSettingActivity.java
Patch:
@@ -90,7 +90,7 @@ else if (GTACSettingActivity.this.show_gw.getId() == checkedId) {
 
 	@Override
 	protected void onPause() {
-		super.onResume();
+		super.onPause();
 		cb_show_Switch.setOnCheckedChangeListener(null);
 		this.show_quickswitch.setOnCheckedChangeListener(null);
 	}

File: android/sdk/src/com/tencent/wstt/gt/client/GT.java
Patch:
@@ -140,9 +140,9 @@ public static void disconnect(Context hostContext) {
 	}
 
 	/**
-	 * 设置性能开关状态，主要用于性能开关随GT启动开启的设置
-	 * 该方法在connect方法之后调用，即可保证GT控制台启动时即开启性能统计开关
-	 * @param flag 性能开关是否开启
+	 * 设置耗时统计开关状态，主要用于耗时统计开关随GT启动开启的设置
+	 * 该方法在connect方法之后调用，即可保证GT控制台启动时即开启耗时统计开关
+	 * @param flag 耗时统计开关是否开启
 	 * @since 1.1
 	 */
 	public static void setProfilerEnable(boolean flag)

File: android/src/com/tencent/wstt/gt/GTApp.java
Patch:
@@ -50,7 +50,6 @@
 import com.tencent.wstt.gt.plugin.gps.GTGPSReplayEngine;
 import com.tencent.wstt.gt.plugin.internal.PluginService;
 import com.tencent.wstt.gt.plugin.memfill.GTMemFillPluginItem;
-import com.tencent.wstt.gt.plugin.octopus.GTOctopusPluginItem;
 import com.tencent.wstt.gt.plugin.screenlock.ScreenlockPluginItem;
 import com.tencent.wstt.gt.plugin.smtools.SMToolsPluginItem;
 import com.tencent.wstt.gt.plugin.tcpdump.TcpdumpPluginItem;
@@ -154,7 +153,6 @@ private void loadPlugins() {
 		pm.register(new GTMemFillPluginItem());
 		pm.register(new SMToolsPluginItem());
 		pm.register(new GTGPSPluginItem());
-		pm.register(new GTOctopusPluginItem());
 	}
 
 	public static Context getContext() {

