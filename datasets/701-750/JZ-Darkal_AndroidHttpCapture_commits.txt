File: app/src/main/java/net/lightbody/bmp/core/har/HarCookie.java
Patch:
@@ -57,7 +57,7 @@ public void setDomain(String domain) {
         this.domain = domain;
     }
 
-    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
+    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.ssZ")
     public Date getExpires() {
         return expires;
     }

File: app/src/main/java/net/lightbody/bmp/core/har/HarEntry.java
Patch:
@@ -35,7 +35,7 @@ public void setPageref(String pageref) {
         this.pageref = pageref;
     }
 
-    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
+    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ssZ")
     public Date getStartedDateTime() {
         return startedDateTime;
     }

File: app/src/main/java/net/lightbody/bmp/core/har/HarPage.java
Patch:
@@ -34,7 +34,7 @@ public void setId(String id) {
         this.id = id;
     }
 
-    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
+    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.ssZ")
     public Date getStartedDateTime() {
         return startedDateTime;
     }

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/MainActivity.java
Patch:
@@ -659,15 +659,15 @@ private void handleUriStartupParams() {
 
 
     public void createZip(final Runnable callback) {
-        showLoading("打包中");
-
         Runnable runnable = new Runnable() {
             @Override
             public void run() {
                 new Thread(new Runnable() {
                     @Override
                     public void run() {
                         try {
+                            showLoading("打包中");
+
                             final Har har = getFiltedHar();
                             final File saveHarFile = new File(Environment.getExternalStorageDirectory() + "/har/test.har");
                             har.writeTo(saveHarFile);

File: app/src/main/java/cn/darkal/networkdiagnosis/Utils/FileUtil.java
Patch:
@@ -443,7 +443,7 @@ public static void deleteFiles(File file){
         }catch (Exception e){}
     }
 
-    public static void checkPermission(Activity activity) {
+    public static void checkPermission(Activity activity,Runnable runnable) {
         //检查权限（NEED_PERMISSION）是否被授权 PackageManager.PERMISSION_GRANTED表示同意授权
         if (ActivityCompat.checkSelfPermission(activity, Manifest.permission.WRITE_EXTERNAL_STORAGE)
                 != PackageManager.PERMISSION_GRANTED) {
@@ -454,9 +454,9 @@ public static void checkPermission(Activity activity) {
             }
             //申请权限
             ActivityCompat.requestPermissions(activity, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
-
         } else {
-            Toast.makeText(activity, "授权成功！", Toast.LENGTH_SHORT).show();
+            runnable.run();
+//            Toast.makeText(activity, "授权成功！", Toast.LENGTH_SHORT).show();
         }
     }
 

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/HarDetailActivity.java
Patch:
@@ -41,9 +41,6 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_scrolling);
         ButterKnife.bind(this);
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-
         setupActionBar();
 
         try {

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/JsonPreviewActivity.java
Patch:
@@ -45,9 +45,9 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_json);
         ButterKnife.bind(this);
-
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
+//
+//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+//        setSupportActionBar(toolbar);
 
         setupActionBar();
 

File: app/src/main/java/cn/darkal/networkdiagnosis/Utils/FileUtil.java
Patch:
@@ -86,11 +86,11 @@ public static File getDataRoot() {
     }
 
     /**
-     * 获取我们京致衣橱存储的目录
+     *
      */
     public static File getAppRoot() {
         try {
-            File root = new File(getDataRoot(), "com.jd.wxsq.app");
+            File root = new File(getDataRoot(), "com.darkal.nt");
             if (!root.exists()) {
                 root.mkdirs();
             }

File: app/src/main/java/net/lightbody/bmp/BrowserMobProxyServer.java
Patch:
@@ -63,7 +63,6 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import java.io.File;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.util.ArrayList;
@@ -326,6 +325,8 @@ public int getMaximumResponseBufferSizeInBytes() {
 //                        .trustSource(trustSource)
 //                        .build();
 //            }
+//
+//            bootstrap.withManInTheMiddle(mitmManager);
 
             try {
                 bootstrap.withManInTheMiddle(new CertificateSniffingMitmManager(
@@ -953,8 +954,7 @@ public void addLastHttpFilterFactory(HttpFiltersSource filterFactory) {
      */
     @Override
     public void addResponseFilter(ResponseFilter filter) {
-        filterFactories.add(new ResponseFilterAdapter.FilterSource(filter));
-//        addLastHttpFilterFactory();
+        addLastHttpFilterFactory(new ResponseFilterAdapter.FilterSource(filter));
     }
 
     /**

File: app/src/main/java/net/lightbody/bmp/core/har/HarPage.java
Patch:
@@ -34,7 +34,7 @@ public void setId(String id) {
         this.id = id;
     }
 
-    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSZ")
+    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
     public Date getStartedDateTime() {
         return startedDateTime;
     }

File: app/src/main/java/net/lightbody/bmp/filters/HttpsAwareFiltersAdapter.java
Patch:
@@ -102,7 +102,7 @@ public String getHost(HttpRequest modifiedRequest) {
         String serverHost;
         if (isHttps()) {
             HostAndPort hostAndPort = HostAndPort.fromString(getHttpsRequestHostAndPort());
-            serverHost = hostAndPort.getHostText();
+            serverHost = hostAndPort.getHost();
         } else {
             serverHost = HttpUtil.getHostFromRequest(modifiedRequest);
         }

File: app/src/main/java/net/lightbody/bmp/filters/ResolvedHostnameCacheFilter.java
Patch:
@@ -53,7 +53,7 @@ public void proxyToServerResolutionSucceeded(String serverHostAndPort, InetSocke
         if (resolvedAddress != null) {
             // place the resolved host into the hostname cache, so subsequent requests will be able to identify the IP address
             HostAndPort parsedHostAndPort = HostAndPort.fromString(serverHostAndPort);
-            String host = parsedHostAndPort.getHostText();
+            String host = parsedHostAndPort.getHost();
 
             if (host != null && !host.isEmpty()) {
                 resolvedAddresses.put(host, resolvedAddress.getHostAddress());

File: app/src/main/java/net/lightbody/bmp/filters/ServerResponseCaptureFilter.java
Patch:
@@ -126,14 +126,14 @@ protected void captureFullResponseContents() {
     }
 
     protected void decompressContents() {
-        if (contentEncoding.equals(HttpHeaders.Values.GZIP)) {
+        if (contentEncoding.equalsIgnoreCase(HttpHeaders.Values.GZIP) || contentEncoding.equalsIgnoreCase(HttpHeaders.Values.DEFLATE)) {
             try {
-                fullResponseContents = BrowserMobHttpUtil.decompressContents(getRawResponseContents());
+                fullResponseContents = BrowserMobHttpUtil.decompressContents(getRawResponseContents(),contentEncoding);
                 decompressionSuccessful = true;
             } catch (RuntimeException e) {
                 log.warn("Failed to decompress response with encoding type " + contentEncoding + " when decoding request from " + originalRequest.getUri(), e);
             }
-        } else {
+        }  else{
             log.warn("Cannot decode unsupported content encoding type {}", contentEncoding);
         }
     }

File: app/src/main/java/net/lightbody/bmp/mitm/TrustSource.java
Patch:
@@ -174,7 +174,7 @@ public TrustSource add(File trustedCAPemFile) {
 
         String pemFileContents;
         try {
-            pemFileContents = Files.toString(trustedCAPemFile, StandardCharsets.UTF_8);
+            pemFileContents = Files.asCharSource(trustedCAPemFile, StandardCharsets.UTF_8).read();
         } catch (IOException e) {
             throw new UncheckedIOException("Unable to read file containing PEM-encoded trusted CAs: " + trustedCAPemFile.getAbsolutePath(), e);
         }

File: app/src/main/java/net/lightbody/bmp/proxy/dns/DnsJavaResolver.java
Patch:
@@ -23,6 +23,8 @@
 /**
  * An {@link net.lightbody.bmp.proxy.dns.AdvancedHostResolver} that uses dnsjava to perform DNS lookups. This implementation provides full
  * cache manipulation capabilities.
+ *
+ * @deprecated The dnsjava resolver has been deprecated in favor of the standard JVM resolver and will be removed in BMP >2.1.
  */
 public class DnsJavaResolver extends AbstractHostNameRemapper implements AdvancedHostResolver {
     private static final Logger log = LoggerFactory.getLogger(DnsJavaResolver.class);

File: app/src/main/java/net/lightbody/bmp/util/HttpUtil.java
Patch:
@@ -114,7 +114,7 @@ private static String parseHostHeader(HttpRequest httpRequest, boolean includePo
                 return hostAndPort;
             } else {
                 HostAndPort parsedHostAndPort = HostAndPort.fromString(hostAndPort);
-                return parsedHostAndPort.getHostText();
+                return parsedHostAndPort.getHost();
             }
         } else {
             return null;

File: app/src/main/java/cn/darkal/networkdiagnosis/SysApplication.java
Patch:
@@ -23,6 +23,7 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
+import java.util.LinkedList;
 import java.util.List;
 import java.util.Locale;
 import java.util.Random;
@@ -38,7 +39,7 @@ public class SysApplication extends MultiDexApplication {
     public static Boolean isInitProxy = false;
     public static int proxyPort = 8888;
     public BrowserMobProxy proxy;
-    public List<ResponseFilterRule> ruleList;
+    public List<ResponseFilterRule> ruleList = new ArrayList<>();
 
     @Override
     public void onCreate() {

File: app/src/main/java/cn/darkal/networkdiagnosis/Utils/DeviceUtils.java
Patch:
@@ -80,6 +80,8 @@ public static void changeHost(BrowserMobProxy browserMobProxy,String newValue){
                 Log.e("~~~~remapHost ", temp.split(" ")[1] + " " + temp.split(" ")[0]);
             }
         }
+
+
         browserMobProxy.setHostNameResolver(advancedHostResolver);
     }
 

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/MainActivity.java
Patch:
@@ -460,7 +460,7 @@ public void setSelectedFragment(BaseFragment selectedFragment) {
 
     public void installCert() {
         final String CERTIFICATE_RESOURCE = Environment.getExternalStorageDirectory() + "/har/littleproxy-mitm.pem";
-        Boolean isInstallCert = SharedPreferenceUtils.getBoolean(this, "isInstallCert", false);
+        Boolean isInstallCert = SharedPreferenceUtils.getBoolean(this, "isInstallNewCert", false);
 
         if (!isInstallCert) {
             Toast.makeText(this, "必须安装证书才可实现HTTPS抓包", Toast.LENGTH_LONG).show();
@@ -490,7 +490,7 @@ public void installCert() {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == 3) {
             if (resultCode == Activity.RESULT_OK) {
-                SharedPreferenceUtils.putBoolean(this,"isInstallCert", true);
+                SharedPreferenceUtils.putBoolean(this,"isInstallNewCert", true);
                 Toast.makeText(this, "安装成功", Toast.LENGTH_LONG).show();
 
             } else {

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/SettingsActivity.java
Patch:
@@ -228,7 +228,7 @@ public void run() {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == 3) {
             if (resultCode == Activity.RESULT_OK) {
-                SharedPreferenceUtils.putBoolean(this, "isInstallCert", true);
+                SharedPreferenceUtils.putBoolean(this, "isInstallNewCert", true);
                 Toast.makeText(this, "安装成功", Toast.LENGTH_LONG).show();
             } else {
                 Toast.makeText(this, "安装失败", Toast.LENGTH_LONG).show();

File: app/src/main/java/cn/darkal/networkdiagnosis/Adapter/PageFilterAdapter.java
Patch:
@@ -17,9 +17,9 @@
  * Created by Darkal on 2016/9/5.
  */
 
-public class FilterAdpter extends BaseAdapter{
+public class PageFilterAdapter extends BaseAdapter{
 
-    public FilterAdpter(List<PageBean> pageBeenList){
+    public PageFilterAdapter(List<PageBean> pageBeenList){
         this.pageBeenList = pageBeenList;
     }
 

File: app/src/main/java/net/lightbody/bmp/core/har/HarEntry.java
Patch:
@@ -1,13 +1,13 @@
 package net.lightbody.bmp.core.har;
 
 import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.JsonFormat;
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+
 import net.lightbody.bmp.core.json.ISO8601WithTDZDateFormatter;
 
 import java.util.Date;
-import java.util.HashSet;
-import java.util.Set;
 import java.util.concurrent.TimeUnit;
 
 @JsonInclude(JsonInclude.Include.NON_NULL)

File: app/src/main/java/net/lightbody/bmp/core/har/HarPostData.java
Patch:
@@ -32,9 +32,6 @@ public String getText() {
     }
 
     public void setText(String text) {
-        if(text != null && text.length()>100000){
-            text = "HarPostData is too large! Size:"+text.length();
-        }
         this.text = text;
     }
 

File: app/src/main/java/net/lightbody/bmp/core/har/HarRequest.java
Patch:
@@ -68,7 +68,7 @@ public HarPostData getPostData() {
     }
 
     public void setPostData(HarPostData postData) {
-            this.postData = postData;
+        this.postData = postData;
     }
 
     public long getHeadersSize() {

File: app/src/main/java/net/lightbody/bmp/core/json/ISO8601DateFormatter.java
Patch:
@@ -16,7 +16,7 @@ public class ISO8601DateFormatter extends JsonSerializer<Date> {
     public final static ISO8601DateFormatter instance = new ISO8601DateFormatter();
 
     @Override
-    public void serialize(java.util.Date value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
+    public void serialize(Date value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
         DateFormat df = (DateFormat) provider.getConfig().getDateFormat().clone();
         jgen.writeString(df.format(value));
     }

File: app/src/main/java/net/lightbody/bmp/core/json/ISO8601WithTDZDateFormatter.java
Patch:
@@ -20,7 +20,7 @@
  */
 public class ISO8601WithTDZDateFormatter extends JsonSerializer<Date> {
     @Override
-    public void serialize(java.util.Date value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
+    public void serialize(Date value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
         Calendar cal = Calendar.getInstance();
         cal.setTime(value);
         jgen.writeString(DatatypeConverter.doFormat("%Y-%M-%DT%h:%m:%s%z",cal));

File: app/src/main/java/net/lightbody/bmp/filters/ResponseFilter.java
Patch:
@@ -1,10 +1,9 @@
 package net.lightbody.bmp.filters;
 
+import io.netty.handler.codec.http.HttpResponse;
 import net.lightbody.bmp.util.HttpMessageContents;
 import net.lightbody.bmp.util.HttpMessageInfo;
 
-import io.netty.handler.codec.http.HttpResponse;
-
 /**
  * A functional interface to simplify modification and manipulation of responses.
  */

File: app/src/main/java/net/lightbody/bmp/mitm/TrustSource.java
Patch:
@@ -7,7 +7,7 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.security.KeyStore;
 import java.security.cert.X509Certificate;
 import java.util.List;
@@ -174,7 +174,7 @@ public TrustSource add(File trustedCAPemFile) {
 
         String pemFileContents;
         try {
-            pemFileContents = Files.toString(trustedCAPemFile, Charset.forName("UTF-8"));
+            pemFileContents = Files.toString(trustedCAPemFile, StandardCharsets.UTF_8);
         } catch (IOException e) {
             throw new UncheckedIOException("Unable to read file containing PEM-encoded trusted CAs: " + trustedCAPemFile.getAbsolutePath(), e);
         }

File: app/src/main/java/net/lightbody/bmp/mitm/manager/ImpersonatingMitmManager.java
Patch:
@@ -291,7 +291,7 @@ private SslContext createImpersonatingSslContext(CertificateInfo certificateInfo
         // to impersonate the real upstream server, and will use the private key to encrypt the channel.
         KeyPair serverKeyPair = serverKeyGenerator.generate();
 
-        // get the CA root certificate and private key that will be used to sign the forced certificate
+        // get the CA root certificate and private key that will be used to sign the forged certificate
         X509Certificate caRootCertificate = rootCertificate.get().getCertificate();
         PrivateKey caPrivateKey = rootCertificate.get().getPrivateKey();
         if (caRootCertificate == null || caPrivateKey == null) {

File: app/src/main/java/net/lightbody/bmp/mitm/trustmanager/InsecureTrustManagerFactory.java
Patch:
@@ -16,12 +16,12 @@
 
 package net.lightbody.bmp.mitm.trustmanager;
 
+import cn.darkal.networkdiagnosis.Utils.X509ExtendedTrustManager;
 import io.netty.handler.ssl.util.SimpleTrustManagerFactory;
 
 import javax.net.ssl.ManagerFactoryParameters;
 import javax.net.ssl.TrustManager;
 import javax.net.ssl.TrustManagerFactory;
-import cn.darkal.networkdiagnosis.Utils.X509ExtendedTrustManager;
 import java.security.KeyStore;
 
 /**

File: app/src/main/java/net/lightbody/bmp/mitm/util/EncryptionUtil.java
Patch:
@@ -5,6 +5,7 @@
 
 import org.apache.commons.io.FileUtils;
 
+import javax.crypto.Cipher;
 import java.io.File;
 import java.io.IOException;
 import java.math.BigInteger;
@@ -16,8 +17,6 @@
 import java.security.interfaces.RSAKey;
 import java.util.Random;
 
-import javax.crypto.Cipher;
-
 /**
  * A collection of simple JCA-related utilities.
  */

File: app/src/main/java/net/lightbody/bmp/mitm/util/KeyStoreUtil.java
Patch:
@@ -28,7 +28,7 @@ public class KeyStoreUtil {
      */
     public static KeyStore createEmptyKeyStore(String keyStoreType, String provider) {
         if (keyStoreType == null) {
-            keyStoreType = "BKS";
+            keyStoreType = KeyStore.getDefaultType();
         }
 
         KeyStore keyStore;

File: app/src/main/java/net/lightbody/bmp/util/ClasspathResourceUtil.java
Patch:
@@ -34,8 +34,7 @@ public static String classpathResourceToString(String resource, Charset charset)
             throw new IllegalArgumentException("Character set cannot be null");
         }
 
-        try {
-            InputStream resourceAsStream = ClasspathResourceUtil.class.getResourceAsStream(resource);
+        try (InputStream resourceAsStream = ClasspathResourceUtil.class.getResourceAsStream(resource)) {
             if (resourceAsStream == null) {
                 throw new UncheckedIOException(new FileNotFoundException("Unable to locate classpath resource: " + resource));
             }

File: app/src/main/java/cn/darkal/networkdiagnosis/Utils/ProxyUtils.java
Patch:
@@ -35,7 +35,7 @@ public static boolean setProxy(WebView webview, String host, int port) {
         } else if (sdkInt < Build.VERSION_CODES.LOLLIPOP) {
             return setProxyKK(webview, host, port, "android.app.Application");
         } else {
-            return webview.getContext() != null && setProxyLollipop(webview.getContext(), host, port);
+            return webview != null && setProxyLollipop(webview.getContext(), host, port);
         }
     }
 

File: app/src/main/java/cn/darkal/networkdiagnosis/Fragment/WebViewFragment.java
Patch:
@@ -32,6 +32,7 @@
 import android.widget.EditText;
 import android.widget.ProgressBar;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -254,6 +255,8 @@ public void run() {
                         Log.e("~~~~", "initProxyWebView()");
                         webView.loadUrl(urlText.getText() + "");
                         isSetProxy = true;
+                    }else{
+                        Toast.makeText(webView.getContext(),"Set proxy fail!",Toast.LENGTH_LONG).show();
                     }
                 }
             });

File: app/src/main/java/cn/darkal/networkdiagnosis/Activity/MainActivity.java
Patch:
@@ -90,7 +90,7 @@
 public class MainActivity extends AppCompatActivity implements BackHandledInterface {
     public final static String CODE_URL = "#";
     public final static String UPLOAD_URL = "#";
-    public final static String HOME_URL = "http://www.qq.com";
+    public final static String HOME_URL = "http://h5.darkal.cn/har/guide/widget.basic.html";
     public final static String GUIDE_URL = "http://h5.darkal.cn/har/guide/widget.guide.html";
 
     public final static int TYPE_NONE = 0;

File: app/src/main/java/cn/darkal/networkdiagnosis/Fragment/PreviewFragment.java
Patch:
@@ -172,7 +172,9 @@ protected FilterResults performFiltering(CharSequence constraint) {
                 @Override
                 protected void publishResults(CharSequence constraint, FilterResults results) {
                     harEntryList.clear();//清除原始数据
-                    harEntryList.addAll((List<HarEntry>) results.values);//将过滤结果添加到这个对象
+                    if(results.values instanceof List){
+                        harEntryList.addAll((List<HarEntry>) results.values);//将过滤结果添加到这个对象
+                    }
                     if (results.count > 0) {
                         previewAdapter.notifyDataSetChanged();//有关键字的时候刷新数据
                     } else {

File: app/src/main/java/cn/darkal/networkdiagnosis/Fragment/WebViewFragment.java
Patch:
@@ -96,6 +96,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         isSetProxy = false;
 
+        urlText.setText(MainActivity.HOME_URL);
+
         WebSettings webSettings = webView.getSettings();
         webSettings.setJavaScriptEnabled(true);
         webSettings.setAllowFileAccess(true);

File: app/src/main/java/cn/darkal/networkdiagnosis/SysApplication.java
Patch:
@@ -39,7 +39,9 @@ public void onCreate() {
         initProxy();
         // Gradle automatically generates proper variable as below.
         UploadService.NAMESPACE = BuildConfig.APPLICATION_ID;
-        Bugly.init(getApplicationContext(), "8c4787abc3", true);
+        CrashReport.UserStrategy strategy = new CrashReport.UserStrategy(getApplicationContext());
+        strategy.setAppChannel("GitHub");
+        Bugly.init(getApplicationContext(), "db9f598223", true);
     }
 
     public void initProxy() {

