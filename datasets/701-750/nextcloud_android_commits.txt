File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -1288,7 +1288,8 @@ public void fetchExternalLinks(final boolean force) {
 
         Thread t = new Thread(() -> {
             // fetch capabilities as early as possible
-            if ((getCapabilities() == null || getCapabilities().getAccountName() != null && getCapabilities().getAccountName().isEmpty())
+            final OCCapability capability = getCapabilities();
+            if ((capability == null || capability.getAccountName() == null || !capability.getAccountName().isEmpty())
                 && getStorageManager() != null) {
                 GetCapabilitiesOperation getCapabilities = new GetCapabilitiesOperation(getStorageManager());
                 getCapabilities.execute(getBaseContext());

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -148,7 +148,7 @@ public class OCFileListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHol
     private final long headerId = UUID.randomUUID().getLeastSignificantBits();
     private final SyncedFolderProvider syncedFolderProvider;
 
-    private final ArrayList<Recommendation> recommendedFiles;
+    private final Set<Recommendation> recommendedFiles;
 
     public OCFileListAdapter(
         Activity activity,
@@ -160,7 +160,7 @@ public OCFileListAdapter(
         boolean argHideItemOptions,
         boolean gridView,
         final ViewThemeUtils viewThemeUtils,
-        final ArrayList<Recommendation> recommendedFiles) {
+        final Set<Recommendation> recommendedFiles) {
         this.recommendedFiles = recommendedFiles;
         this.ocFileListFragmentInterface = ocFileListFragmentInterface;
         this.activity = activity;

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -252,7 +252,7 @@ protected enum MenuItemAddRemove {
     protected MenuItemAddRemove menuItemAddRemoveValue = MenuItemAddRemove.ADD_GRID_AND_SORT_WITH_SEARCH;
 
     private List<MenuItem> mOriginalMenuItems = new ArrayList<>();
-    private final ArrayList<Recommendation> recommendedFiles = new ArrayList<>();
+    private final Set<Recommendation> recommendedFiles = new HashSet<>();
 
     @Override
     public void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -672,8 +672,6 @@ protected void onNewIntent(Intent intent) {
                 DrawerActivity.menuItemId = R.id.nav_groupfolders;
                 setLeftFragment(new GroupfolderListFragment());
                 getSupportFragmentManager().executePendingTransactions();
-            } else if (AUTO_UPLOAD_NOTIFICATION.equals(intent.getAction())) {
-                showReEnableAutoUploadDialog();
             }
         }
     }
@@ -1249,6 +1247,8 @@ protected void onResume() {
             if (fileArgs != null) {
                 startFile = fileArgs;
                 setFile(startFile);
+            } else if (AUTO_UPLOAD_NOTIFICATION.equals(getIntent().getAction())) {
+                showReEnableAutoUploadDialog();
             }
         }
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -672,8 +672,6 @@ protected void onNewIntent(Intent intent) {
                 DrawerActivity.menuItemId = R.id.nav_groupfolders;
                 setLeftFragment(new GroupfolderListFragment());
                 getSupportFragmentManager().executePendingTransactions();
-            } else if (AUTO_UPLOAD_NOTIFICATION.equals(intent.getAction())) {
-                showReEnableAutoUploadDialog();
             }
         }
     }
@@ -1249,6 +1247,8 @@ protected void onResume() {
             if (fileArgs != null) {
                 startFile = fileArgs;
                 setFile(startFile);
+            } else if (AUTO_UPLOAD_NOTIFICATION.equals(getIntent().getAction())) {
+                showReEnableAutoUploadDialog();
             }
         }
 

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -21,7 +21,6 @@
 import android.text.TextUtils;
 
 import com.nextcloud.utils.BuildHelper;
-import com.owncloud.android.BuildConfig;
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.network.WebdavEntry;
 import com.owncloud.android.lib.common.network.WebdavUtils;
@@ -1093,7 +1092,7 @@ public void setInternalFolderSyncResult(String internalFolderSyncResult) {
     }
     
     public boolean isAPKorAAB() {
-        if (BuildHelper.GPLAY.equals(BuildConfig.FLAVOR)) {
+        if (BuildHelper.INSTANCE.isFlavourGPlay()) {
             return getFileName().endsWith(".apk") || getFileName().endsWith(".aab");
         } else {
             return false;

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -600,10 +600,12 @@ private void setFileModificationTimestamp(OCFile file, boolean showDetailedTimes
     private void setFavoriteIconStatus(boolean isFavorite) {
         if (isFavorite) {
             binding.favorite.setImageDrawable(ResourcesCompat.getDrawable(getResources(), R.drawable.ic_star, null));
+            binding.favorite.setContentDescription(getString(R.string.unset_favorite));
         } else {
             binding.favorite.setImageDrawable(ResourcesCompat.getDrawable(getResources(),
                                                                           R.drawable.ic_star_outline,
                                                                           null));
+            binding.favorite.setContentDescription(getString(R.string.favorite));
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -600,10 +600,12 @@ private void setFileModificationTimestamp(OCFile file, boolean showDetailedTimes
     private void setFavoriteIconStatus(boolean isFavorite) {
         if (isFavorite) {
             binding.favorite.setImageDrawable(ResourcesCompat.getDrawable(getResources(), R.drawable.ic_star, null));
+            binding.favorite.setContentDescription(getString(R.string.unset_favorite));
         } else {
             binding.favorite.setImageDrawable(ResourcesCompat.getDrawable(getResources(),
                                                                           R.drawable.ic_star_outline,
                                                                           null));
+            binding.favorite.setContentDescription(getString(R.string.favorite));
         }
     }
 

File: app/src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -72,8 +72,8 @@ public static void walkFileTreeRandomly(Path start, FileVisitor<? super Path> vi
                 FileVisitResult preVisitDirectoryResult = visitor.preVisitDirectory(start, (BasicFileAttributes)null);
                 if (preVisitDirectoryResult == FileVisitResult.CONTINUE) {
                     File[] children = start.toFile().listFiles();
-                    Collections.shuffle(Arrays.asList(children));
                     if (children != null) {
+                        Collections.shuffle(Arrays.asList(children));
                         File[] var5 = children;
                         int var6 = children.length;
 

File: app/src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -72,8 +72,8 @@ public static void walkFileTreeRandomly(Path start, FileVisitor<? super Path> vi
                 FileVisitResult preVisitDirectoryResult = visitor.preVisitDirectory(start, (BasicFileAttributes)null);
                 if (preVisitDirectoryResult == FileVisitResult.CONTINUE) {
                     File[] children = start.toFile().listFiles();
-                    Collections.shuffle(Arrays.asList(children));
                     if (children != null) {
+                        Collections.shuffle(Arrays.asList(children));
                         File[] var5 = children;
                         int var6 = children.length;
 

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -262,6 +262,7 @@ private void handleBottomNavigationViewClicks() {
                 if (this instanceof FileDisplayActivity fda) {
                     fda.browseToRoot();
                 }
+                EventBus.getDefault().post(new ChangeMenuEvent());
             } else if (menuItemId == R.id.nav_favorites) {
                 handleSearchEvents(new SearchEvent("", SearchRemoteOperation.SearchType.FAVORITE_SEARCH), menuItemId);
             } else if (menuItemId == R.id.nav_assistant && !(this instanceof ComposeActivity)) {

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -257,6 +257,9 @@ private void handleBottomNavigationViewClicks() {
             menuItemId = menuItem.getItemId();
 
             if (menuItemId == R.id.nav_all_files) {
+                MainApp.showOnlyPersonalFiles(false);
+                MainApp.showOnlyFilesOnDevice(false);
+
                 Intent intent = new Intent(this, FileDisplayActivity.class);
                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                 intent.setAction(FileDisplayActivity.ALL_FILES);

File: app/src/main/java/com/owncloud/android/utils/DrawerMenuUtil.java
Patch:
@@ -55,6 +55,7 @@ public static void filterAssistantMenuItem(Menu menu, @Nullable OCCapability cap
         }
     }
 
+    // TODO: simplify
     public static boolean isAssistantAvailable(@Nullable OCCapability capability, Resources resources) {
         if (resources.getBoolean(R.bool.is_branded_client)) {
             if (capability != null && capability.getAssistant().isFalse()) {

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1400,7 +1400,7 @@ private static Bitmap doResizedImageInBackground(OCFile file, FileDataStorageMan
                     GetMethod getMethod = null;
                     try {
                         String uri = mClient.getBaseUri() + "/index.php/core/preview?fileId="
-                            + file.getRemoteId()
+                            + file.getLocalId()
                             + "&x=" + (pxW / 2) + "&y=" + (pxH / 2) + "&a=1&mode=cover&forceIcon=0";
                         Log_OC.d(TAG, "generate resized image: " + file.getFileName() + " URI: " + uri);
                         getMethod = new GetMethod(uri);

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1400,7 +1400,7 @@ private static Bitmap doResizedImageInBackground(OCFile file, FileDataStorageMan
                     GetMethod getMethod = null;
                     try {
                         String uri = mClient.getBaseUri() + "/index.php/core/preview?fileId="
-                            + file.getRemoteId()
+                            + file.getLocalId()
                             + "&x=" + (pxW / 2) + "&y=" + (pxH / 2) + "&a=1&mode=cover&forceIcon=0";
                         Log_OC.d(TAG, "generate resized image: " + file.getFileName() + " URI: " + uri);
                         getMethod = new GetMethod(uri);

File: app/src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -250,7 +250,7 @@ protected void setThumbnailView(final User user) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable drawable = MimeTypeUtil.getFileIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
+            LayerDrawable drawable = MimeTypeUtil.getFolderIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
             binding.thumbnail.setImageDrawable(drawable);
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {

File: app/src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, optionalUser.get());
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable drawable = MimeTypeUtil.getFileIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
+            LayerDrawable drawable = MimeTypeUtil.getFolderIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
             binding.shareFileIcon.setImageDrawable(drawable);
         } else {
             binding.shareFileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(),

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -868,7 +868,7 @@ public static void setThumbnail(OCFile file,
             boolean isDarkModeActive = preferences.isDarkModeEnabled();
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable fileIcon = MimeTypeUtil.getFileIcon(isDarkModeActive, overlayIconId, context, viewThemeUtils);
+            LayerDrawable fileIcon = MimeTypeUtil.getFolderIcon(isDarkModeActive, overlayIconId, context, viewThemeUtils);
             thumbnailView.setImageDrawable(fileIcon);
         } else {
             if (file.getRemoteId() != null && file.isPreviewAvailable()) {

File: app/src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -250,7 +250,7 @@ protected void setThumbnailView(final User user) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable drawable = MimeTypeUtil.getFileIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
+            LayerDrawable drawable = MimeTypeUtil.getFolderIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
             binding.thumbnail.setImageDrawable(drawable);
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {

File: app/src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, optionalUser.get());
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable drawable = MimeTypeUtil.getFileIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
+            LayerDrawable drawable = MimeTypeUtil.getFolderIcon(preferences.isDarkModeEnabled(), overlayIconId, this, viewThemeUtils);
             binding.shareFileIcon.setImageDrawable(drawable);
         } else {
             binding.shareFileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(),

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -868,7 +868,7 @@ public static void setThumbnail(OCFile file,
             boolean isDarkModeActive = preferences.isDarkModeEnabled();
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
-            LayerDrawable fileIcon = MimeTypeUtil.getFileIcon(isDarkModeActive, overlayIconId, context, viewThemeUtils);
+            LayerDrawable fileIcon = MimeTypeUtil.getFolderIcon(isDarkModeActive, overlayIconId, context, viewThemeUtils);
             thumbnailView.setImageDrawable(fileIcon);
         } else {
             if (file.getRemoteId() != null && file.isPreviewAvailable()) {

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -443,7 +443,7 @@ private void prepareOpsFromLocalKnowledge() throws OperationCancelledException {
     private void syncContents(OwnCloudClient client) throws OperationCancelledException {
         startDirectDownloads();
         startContentSynchronizations(mFilesToSyncContents);
-        updateEtag(client);
+        updateETag(client);
     }
 
     /**

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -842,7 +842,7 @@ public void onMessageEvent(FavoriteEvent event) {
     }
 
     private boolean showSharingTab() {
-        if (!MDMConfig.INSTANCE.shareViaLink(requireContext()) || !MDMConfig.INSTANCE.shareViaUser(requireContext())) {
+         if (!MDMConfig.INSTANCE.shareViaLink(requireContext()) && !MDMConfig.INSTANCE.shareViaUser(requireContext())) {
             return false;
         }
 

File: app/src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -810,7 +810,7 @@ protected void onNewIntent(Intent intent) {
 
         Uri data = intent.getData();
         if (data != null && data.toString().startsWith(getString(R.string.login_data_own_scheme))) {
-            if (!MDMConfig.INSTANCE.multiAccountSupport(this) ||
+            if (!MDMConfig.INSTANCE.multiAccountSupport(this) &&
                 accountManager.getAccounts().length == 1) {
                 Toast.makeText(this, R.string.no_mutliple_accounts_allowed, Toast.LENGTH_LONG).show();
                 finish();
@@ -1531,7 +1531,7 @@ private void startQRScanner() {
                     return;
                 }
 
-                if (!MDMConfig.INSTANCE.multiAccountSupport(this) ||
+                if (!MDMConfig.INSTANCE.multiAccountSupport(this) &&
                     accountManager.getAccounts().length == 1) {
                     Toast.makeText(this, R.string.no_mutliple_accounts_allowed, Toast.LENGTH_LONG).show();
                 } else {

File: app/src/main/java/com/owncloud/android/authentication/AccountAuthenticator.java
Patch:
@@ -71,7 +71,7 @@ public Bundle addAccount(AccountAuthenticatorResponse response,
 
         final Bundle bundle = new Bundle();
 
-        if (MDMConfig.INSTANCE.multiAccountSupport(mContext) && accounts.length > 1) {
+        if (accounts.length > 1 && MDMConfig.INSTANCE.multiAccountSupport(mContext)) {
             try {
                 validateAccountType(accountType);
             } catch (AuthenticatorException e) {

File: app/src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -322,7 +322,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         if (MainApp.isClientBrandedPlus()) {
             RestrictionsManager restrictionsManager = (RestrictionsManager) getSystemService(Context.RESTRICTIONS_SERVICE);
-            String baseUrl = RestrictionsManagerExtensionsKt.getRestriction(restrictionsManager, AppConfigKeys.BaseUrl.getKey(),null);
+            String baseUrl = RestrictionsManagerExtensionsKt.getRestriction(restrictionsManager, AppConfigKeys.BaseUrl.getKey(),"");
             if (!TextUtils.isEmpty(baseUrl)) {
                 webloginUrl = baseUrl + WEB_LOGIN;
             }

File: app/src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -272,7 +272,7 @@ public AccountSetupBinding getAccountSetupBinding() {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         viewThemeUtils = viewThemeUtilsFactory.withPrimaryAsBackground();
-        viewThemeUtils.platform.themeStatusBar(this, ColorRole.PRIMARY);
+        viewThemeUtils.platform.colorStatusBar(this, getResources().getColor(R.color.primary));
 
         // WebViewUtil webViewUtil = new WebViewUtil(this);
 

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -397,4 +397,7 @@ default void onDarkThemeModeChanged(DarkMode mode) {
 
     void setTwoWaySyncInterval(Long value);
     Long getTwoWaySyncInterval();
+
+    boolean shouldStopDownloadJobsOnStart();
+    void setStopDownloadJobsOnStart(boolean value);
 }

File: app/src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -106,7 +106,8 @@ public void testRenameFolder() throws IOException {
         assertTrue(new SynchronizeFolderOperation(targetContext,
                                                   folderPath,
                                                   user,
-                                                  fileDataStorageManager)
+                                                  fileDataStorageManager,
+                                                  false)
                        .execute(targetContext)
                        .isSuccess());
 

File: app/src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -106,7 +106,8 @@ public void testRenameFolder() throws IOException {
         assertTrue(new SynchronizeFolderOperation(targetContext,
                                                   folderPath,
                                                   user,
-                                                  fileDataStorageManager)
+                                                  fileDataStorageManager,
+                                                  false)
                        .execute(targetContext)
                        .isSuccess());
 

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -35,7 +35,6 @@
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.utils.extensions.ActivityExtensionsKt;
 import com.nextcloud.utils.extensions.FileExtensionsKt;
-import com.nextcloud.utils.fileNameValidator.FileNameValidator;
 import com.owncloud.android.R;
 import com.owncloud.android.databinding.UploadFilesLayoutBinding;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -60,7 +59,6 @@
 
 import androidx.activity.OnBackPressedCallback;
 import androidx.annotation.NonNull;
-import androidx.annotation.VisibleForTesting;
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
 import androidx.core.view.MenuItemCompat;

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -300,6 +300,8 @@ private void requestForDownload(OCFile file) {
             final var operation = new DownloadFileOperation(mUser, file, mContext);
             var result = operation.execute(getClient());
 
+            mTransferWasRequested = true;
+
             String filename = file.getFileName();
             if (filename != null) {
                 if (result.isSuccess()) {
@@ -312,7 +314,7 @@ private void requestForDownload(OCFile file) {
             Log_OC.d(TAG, "Exception caught at requestForDownload" + e);
         }
 
-        mTransferWasRequested = true;
+
     }
 
     public boolean transferWasRequested() {

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -239,7 +239,7 @@ private void setupView() {
                 binding.searchView.setQueryHint(getResources().getString(R.string.share_search));
             }
         } else {
-            binding.searchView.setQueryHint(getResources().getString(R.string.reshare_not_allowed));
+            binding.searchView.setQueryHint(getResources().getString(R.string.resharing_is_not_allowed));
             binding.searchView.setInputType(InputType.TYPE_NULL);
             binding.pickContactEmailBtn.setVisibility(View.GONE);
             disableSearchView(binding.searchView);

File: app/src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -183,7 +183,7 @@ public static void beforeAll() {
         String darkModeParameter = arguments.getString("DARKMODE");
 
         if (darkModeParameter != null) {
-            if (darkModeParameter.equalsIgnoreCase("dark")) {
+            if ("dark".equalsIgnoreCase(darkModeParameter)) {
                 DARK_MODE = "dark";
                 AppPreferencesImpl.fromContext(targetContext).setDarkThemeMode(DarkMode.DARK);
                 MainApp.setAppTheme(DarkMode.DARK);
@@ -192,7 +192,7 @@ public static void beforeAll() {
             }
         }
 
-        if (DARK_MODE.equalsIgnoreCase("light") && COLOR.equalsIgnoreCase("blue")) {
+        if ("light".equalsIgnoreCase(DARK_MODE) && "blue".equalsIgnoreCase(COLOR)) {
             // use already existing names
             DARK_MODE = "";
             COLOR = "";

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -515,7 +515,7 @@ public void testMetadata() throws IOException, AccountUtils.AccountNotFoundExcep
 
         OCFile ocFile = null;
         for (OCFile f : files) {
-            if (f.getFileName().equals("metadata.jpg")) {
+            if ("metadata.jpg".equals(f.getFileName())) {
                 ocFile = f;
                 break;
             }

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -397,8 +397,10 @@ private boolean anyFileSynchronizing(OperationsServiceBinder opsBinder) {
     }
 
     private boolean anyFileDownloading() {
+        final var fileDownloadHelper = FileDownloadHelper.Companion.instance();
+
         for (OCFile file : files) {
-            if (FileDownloadHelper.Companion.instance().isDownloading(user, file)) {
+            if (fileDownloadHelper.isDownloading(user, file)) {
                 return true;
             }
         }

File: app/src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -124,7 +124,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             try {
                 String publicKey = EncryptionUtils.getPublicKey(user, shareeName, arbitraryDataProvider);
 
-                if (publicKey.equals("")) {
+                if ("".equals(publicKey)) {
                     NextcloudClient nextcloudClient = new ClientFactoryImpl(context).createNextcloudClient(user);
                     RemoteOperationResult<String> result = new GetPublicKeyRemoteOperation(shareeName).execute(nextcloudClient);
                     if (result.isSuccess()) {

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -441,7 +441,8 @@ private void syncContents() throws OperationCancelledException {
     }
 
     private void startDirectDownloads() {
-        mFilesForDirectDownload.forEach(file -> FileDownloadHelper.Companion.instance().downloadFile(user, file));
+        final var fileDownloadHelper = FileDownloadHelper.Companion.instance();
+        mFilesForDirectDownload.forEach(file -> fileDownloadHelper.downloadFile(user, file));
     }
 
     /**

File: app/src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -142,7 +142,7 @@ protected void updateActionBarTitleAndHomeButton(OCFile chosenFile) {
         String title;
         boolean isRoot = isRoot(chosenFile);
 
-        title = isRoot ? themeUtils.getDefaultDisplayNameForRootFolder(this) : chosenFile.getFileName();
+        title = isRoot ? themeUtils.getDefaultDisplayNameForRootFolder(this) : fileDataStorageManager.getFilenameConsideringOfflineOperation(chosenFile);
         updateActionBarTitleAndHomeButtonByString(title);
 
         if (mAppBar != null) {

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -518,7 +518,7 @@ private void updateLivePhotoIndicators(ListViewHolder holder, OCFile file) {
     }
 
     private void bindListGridItemViewHolder(ListGridItemViewHolder holder, OCFile file) {
-        holder.getFileName().setText(file.getDecryptedFileName());
+        holder.getFileName().setText(mStorageManager.getFilenameConsideringOfflineOperation(file));
 
         boolean gridImage = MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file);
         if (gridView && gridImage) {

File: app/src/main/java/third_parties/sufficientlysecure/CalendarSource.java
Patch:
@@ -50,13 +50,13 @@ public URLConnection getConnection() throws IOException {
             String protocol = mUrl.getProtocol();
             String userPass = mUsername + ":" + mPassword;
 
-            if (protocol.equalsIgnoreCase("ftp") || protocol.equalsIgnoreCase("ftps")) {
+            if ("ftp".equalsIgnoreCase(protocol) || "ftps".equalsIgnoreCase(protocol)) {
                 String external = mUrl.toExternalForm();
                 String end = external.substring(protocol.length() + HTTP_SEP.length());
                 return new URL(protocol + HTTP_SEP + userPass + "@" + end).openConnection();
             }
 
-            if (protocol.equalsIgnoreCase("http") || protocol.equalsIgnoreCase("https")) {
+            if ("http".equalsIgnoreCase(protocol) || "https".equalsIgnoreCase(protocol)) {
                 String encoded = new String(new Base64().encode(userPass.getBytes("UTF-8")));
                 URLConnection connection = mUrl.openConnection();
                 connection.setRequestProperty("Authorization", "Basic " + encoded);

File: app/src/main/java/third_parties/sufficientlysecure/ProcessVEvent.java
Patch:
@@ -567,7 +567,7 @@ private void checkTestValue(VEvent e, ContentValues c, String keyValue, String t
         String expected = parts.length > 1 ? parts[1] : "";
         String got = c.getAsString(key);
 
-        if (expected.equals("<non-null>") && got != null) {
+        if ("<non-null>".equals(expected) && got != null) {
             got = "<non-null>"; // Sentinel for testing present and non-null
         }
         if (got == null) {

File: app/src/main/java/third_parties/sufficientlysecure/SaveCalendar.java
Patch:
@@ -478,7 +478,7 @@ private boolean isUtcTimeZone(final String tz) {
             return true;
         }
         final String utz = tz.toUpperCase(Locale.US);
-        return utz.equals("UTC") || utz.equals("UTC-0") || utz.equals("UTC+0") || utz.endsWith("/UTC");
+        return "UTC".equals(utz) || "UTC-0".equals(utz) || "UTC+0".equals(utz) || utz.endsWith("/UTC");
     }
 
     private Date getDateTime(Cursor cur, String dbName, String dbTzName, Calendar cal) {

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -239,7 +239,7 @@ private void setupView() {
                 binding.searchView.setQueryHint(getResources().getString(R.string.share_search));
             }
         } else {
-            binding.searchView.setQueryHint(getResources().getString(R.string.reshare_not_allowed));
+            binding.searchView.setQueryHint(getResources().getString(R.string.resharing_is_not_allowed));
             binding.searchView.setInputType(InputType.TYPE_NULL);
             binding.pickContactEmailBtn.setVisibility(View.GONE);
             disableSearchView(binding.searchView);

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -239,7 +239,7 @@ private void setupView() {
                 binding.searchView.setQueryHint(getResources().getString(R.string.share_search));
             }
         } else {
-            binding.searchView.setQueryHint(getResources().getString(R.string.reshare_not_allowed));
+            binding.searchView.setQueryHint(getResources().getString(R.string.resharing_is_not_allowed));
             binding.searchView.setInputType(InputType.TYPE_NULL);
             binding.pickContactEmailBtn.setVisibility(View.GONE);
             disableSearchView(binding.searchView);

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -801,7 +801,7 @@ public void setTwoWaySyncStatus(boolean value) {
 
     @Override
     public boolean isTwoWaySyncEnabled() {
-        return preferences.getBoolean(PREF__TWO_WAY_STATUS, false);
+        return preferences.getBoolean(PREF__TWO_WAY_STATUS, true);
     }
 
     @Override

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -393,7 +393,7 @@ default void onDarkThemeModeChanged(DarkMode mode) {
     String getLastSelectedMediaFolder();
 
     void setTwoWaySyncStatus(boolean value);
-    boolean getTwoWaySyncStatus();
+    boolean isTwoWaySyncEnabled();
 
     void setTwoWaySyncTimestampDefault(boolean value);
     boolean isTwoWaySyncTimestampDefault();

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -800,7 +800,7 @@ public void setTwoWaySyncStatus(boolean value) {
     }
 
     @Override
-    public boolean getTwoWaySyncStatus() {
+    public boolean isTwoWaySyncEnabled() {
         return preferences.getBoolean(PREF__TWO_WAY_STATUS, false);
     }
 

File: app/src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -665,8 +665,7 @@ private void setupHiddenFilesPreference(PreferenceCategory preferenceCategoryDet
         }
     }
 
-    private void setupShowEcosystemAppsPreference(PreferenceCategory preferenceCategoryDetails,
-                                                  boolean fShowEcosystemAppsEnabled) {
+    private void setupShowEcosystemAppsPreference(PreferenceCategory preferenceCategoryDetails, boolean fShowEcosystemAppsEnabled) {
         showEcosystemApps = (ThemeableSwitchPreference) findPreference("show_ecosystem_apps");
         if (fShowEcosystemAppsEnabled) {
             showEcosystemApps.setOnPreferenceClickListener(preference -> {

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -1072,7 +1072,7 @@ public boolean isInternalFolderSync() {
             return false;
         }
 
-        return internalFolderSyncTimestamp > 0;
+        return internalFolderSyncTimestamp >= 0;
     }
     
     public Long getInternalFolderSyncTimestamp() {

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -160,6 +160,7 @@ public void addCreateFileOfflineOperation(String[] localPaths, String[] remotePa
             long modificationTimestamp = System.currentTimeMillis();
 
             entity.setCreatedAt(createdAt);
+            entity.setModifiedAt(modificationTimestamp / 1000);
             entity.setFilename(new File(remotePath).getName());
 
             String parentPath = new File(remotePath).getParent() + OCFile.PATH_SEPARATOR;
@@ -188,6 +189,7 @@ public OfflineOperationEntity addCreateFolderOfflineOperation(String path, Strin
         long modificationTimestamp = System.currentTimeMillis();
 
         entity.setCreatedAt(createdAt);
+        entity.setModifiedAt(modificationTimestamp / 1000);
 
         offlineOperationDao.insert(entity);
         createPendingDirectory(path, createdAt, modificationTimestamp);

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -291,6 +291,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String OFFLINE_OPERATION_PARENT_OC_FILE_ID = "offline_operations_parent_oc_file_id";
         public static final String OFFLINE_OPERATION_TYPE = "offline_operations_type";
         public static final String OFFLINE_OPERATION_PATH = "offline_operations_path";
+        public static final String OFFLINE_OPERATION_MODIFIED_AT = "offline_operations_modified_at";
         public static final String OFFLINE_OPERATION_CREATED_AT = "offline_operations_created_at";
         public static final String OFFLINE_OPERATION_FILE_NAME = "offline_operations_file_name";
 

File: app/src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -43,9 +43,9 @@
 import com.google.android.material.button.MaterialButton;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.di.Injectable;
-import com.nextcloud.client.network.ConnectivityService;
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.client.preferences.AppPreferencesImpl;
+import com.nextcloud.utils.extensions.FragmentExtensionsKt;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.databinding.ListFragmentBinding;
@@ -650,7 +650,8 @@ public void setEmptyListMessage(final SearchType searchType) {
      */
     public void setEmptyListLoadingMessage() {
         new Handler(Looper.getMainLooper()).post(() -> {
-            if (requireActivity() instanceof FileActivity fileActivity) {
+            FileActivity fileActivity = FragmentExtensionsKt.getTypedActivity(this, FileActivity.class);
+            if (fileActivity != null) {
                 fileActivity.connectivityService.isNetworkAndServerAvailable(result -> {
                     if (!result || mEmptyListContainer == null || mEmptyListMessage == null) return;
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -59,7 +59,6 @@
 import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.media.PlayerServiceConnection;
 import com.nextcloud.client.network.ClientFactory;
-import com.nextcloud.client.network.ConnectivityService;
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.client.utils.IntentUtil;
 import com.nextcloud.model.WorkerState;
@@ -236,8 +235,6 @@ public class FileDisplayActivity extends FileActivity
 
     @Inject AppInfo appInfo;
 
-    @Inject ConnectivityService connectivityService;
-
     @Inject InAppReviewHelper inAppReviewHelper;
 
     @Inject FastScrollUtils fastScrollUtils;

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1018,6 +1018,7 @@ private Boolean isRootDirectory() {
      */
     @SuppressFBWarnings("ITC_INHERITANCE_TYPE_CHECKING")
     @Override
+    // TODO Apply fail fast principle
     public void onBackPressed() {
         if (isSearchOpen()) {
             resetSearchAction();

File: app/src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -91,9 +91,6 @@ public class UploadListActivity extends FileActivity {
     @Inject
     LocalBroadcastManager localBroadcastManager;
 
-    @Inject
-    ViewThemeUtils viewThemeUtils;
-
     @Inject Throttler throttler;
 
     private UploadListLayoutBinding binding;

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -959,11 +959,11 @@ public int onBrowseUp() {
             }
         }
 
-        // FIXME
+        // TODO Optimize
         if (DrawerActivity.menuItemId == R.id.nav_favorites) {
-            mFile = storageManager.getParentByFilterType(currentFile, OCFileFilterType.Favorite);
+            mFile = storageManager.getParentByFilterType(currentFile, parentDir, OCFileFilterType.Favorite);
         } else if (DrawerActivity.menuItemId == R.id.nav_shared) {
-            mFile = storageManager.getParentByFilterType(currentFile, OCFileFilterType.Shared);
+            mFile = storageManager.getParentByFilterType(currentFile, parentDir, OCFileFilterType.Shared);
         } else {
             mFile = parentDir;
         }

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1125,7 +1125,7 @@ private OCFile createFileInstance(FileEntity fileEntity) {
         ocFile.setLivePhoto(fileEntity.getMetadataLivePhoto());
         ocFile.setHidden(nullToZero(fileEntity.getHidden()) == 1);
         ocFile.setE2eCounter(fileEntity.getE2eCounter());
-        ocFile.setInternalFolderSyncTimestamp(fileEntity.getInternalTwoWaySync());
+        ocFile.setInternalFolderSyncTimestamp(nullToZero(fileEntity.getInternalTwoWaySync()));
 
         String sharees = fileEntity.getSharees();
         // Surprisingly JSON deserialization causes significant overhead.

File: app/src/main/java/com/owncloud/android/operations/GetServerInfoOperation.java
Patch:
@@ -46,7 +46,7 @@ public class GetServerInfoOperation extends RemoteOperation {
      *                          TODO ugly dependency, get rid of it.
      */
     public GetServerInfoOperation(String url, Context context) {
-        mUrl = AuthenticatorUrlUtils.trimWebdavSuffix(url);
+        mUrl = AuthenticatorUrlUtils.INSTANCE.trimWebdavSuffix(url);
         mContext = context;
         mResultData = new ServerInfo();
     }

File: app/src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -78,6 +78,7 @@ public static Bitmap decodeSampledBitmapFromFile(String srcPath, int reqWidth, i
         // make a false load of the bitmap to get its dimensions
         options.inJustDecodeBounds = true;
 
+        // FIXME after auto-rename can't generate thumbnail from localPath
         BitmapFactory.decodeFile(srcPath, options);
 
         // calculate factor to subsample the bitmap

File: app/src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -131,7 +131,7 @@ protected void onCreate(Bundle savedInstanceState) {
         updateActionBarTitleAndHomeButtonByString(getString(R.string.uploads_view_title));
 
         // setup drawer
-        setupDrawer(R.id.nav_uploads);
+        setupDrawer();
 
         setupContent();
         observeWorkerState();
@@ -232,8 +232,6 @@ protected void onResume() {
         Log_OC.v(TAG, "onResume() start");
         super.onResume();
 
-        setDrawerMenuItemChecked(R.id.nav_uploads);
-
         // Listen for upload messages
         uploadMessagesReceiver = new UploadMessagesReceiver();
         IntentFilter uploadIntentFilter = new IntentFilter();

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -93,8 +93,8 @@
 import com.owncloud.android.ui.dialog.CreateFolderDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
-import com.owncloud.android.ui.dialog.setupEncryption.SetupEncryptionDialogFragment;
 import com.owncloud.android.ui.dialog.SyncFileNotEnoughSpaceDialogFragment;
+import com.owncloud.android.ui.dialog.setupEncryption.SetupEncryptionDialogFragment;
 import com.owncloud.android.ui.events.ChangeMenuEvent;
 import com.owncloud.android.ui.events.CommentsEvent;
 import com.owncloud.android.ui.events.EncryptionEvent;
@@ -279,7 +279,6 @@ public void onResume() {
         super.onResume();
     }
 
-
     /**
      * {@inheritDoc}
      */

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -902,6 +902,8 @@ public void setDrawerMenuItemChecked() {
             return;
         }
 
+        Log_OC.d(TAG, "New menu item is: " + menuItemId);
+
         viewThemeUtils.platform.colorNavigationView(mNavigationView);
         menuItem.setChecked(true);
     }

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -881,7 +881,7 @@ public void onLoadFailed(Exception e, Drawable errorDrawable) {
      *
      * @param menuItemId the menu item to be highlighted
      */
-    protected void setDrawerMenuItemChecked(int menuItemId) {
+    public void setDrawerMenuItemChecked(int menuItemId) {
         if (mNavigationView != null && mNavigationView.getMenu().findItem(menuItemId) != null) {
             viewThemeUtils.platform.colorNavigationView(mNavigationView);
             mCheckedMenuItem = menuItemId;

File: app/src/androidTest/java/com/owncloud/android/ui/activity/ConflictsResolveActivityIT.java
Patch:
@@ -63,8 +63,8 @@ public void screenshotTextFiles() {
         ConflictsResolveActivity sut = activityRule.launchActivity(intent);
 
         ConflictsResolveDialog dialog = ConflictsResolveDialog.newInstance(targetContext,
-                                                                           existingFile,
                                                                            newFile,
+                                                                           existingFile,
                                                                            UserAccountManagerImpl
                                                                                .fromContext(targetContext)
                                                                                .getUser()

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -390,6 +390,7 @@ public void createRichWorkspace() {
 
         DeviceInfo info = new DeviceInfo();
         OCFile ocFile = new OCFile("/test.md");
+        ocFile.setRemoteId("00000001");
 
         Intent intent = new Intent(targetContext, FileDisplayActivity.class);
         FileDisplayActivity fda = activityRule.launchActivity(intent);

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -777,7 +777,7 @@ public boolean isDownloading() {
     }
 
     public boolean isRootDirectory() {
-        return decryptedRemotePath.equals(ROOT_PATH);
+        return ROOT_PATH.equals(decryptedRemotePath);
     }
 
     public boolean isOfflineOperation() {

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -109,8 +109,6 @@ public class UploadFilesActivity extends DrawerActivity implements LocalFileList
     private UploadFilesLayoutBinding binding;
     private boolean isWithinEncryptedFolder = false;
 
-
-    @VisibleForTesting
     public LocalFileListFragment getFileListFragment() {
         return mFileListFragment;
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListBottomSheetDialog.java
Patch:
@@ -212,6 +212,8 @@ private void setupClickListener() {
     }
 
     private void filterActionsForOfflineOperations() {
+        if (file == null) return;
+
         if (!file.isOfflineOperation() || file.isRootDirectory()) {
             return;
         }

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -777,7 +777,7 @@ public boolean isDownloading() {
     }
 
     public boolean isRootDirectory() {
-        return decryptedRemotePath.equals(ROOT_PATH);
+        return ROOT_PATH.equals(decryptedRemotePath);
     }
 
     public boolean isOfflineOperation() {

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -1043,7 +1043,7 @@ public long getLastTimestamp() {
     @Override
     public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
         super.onViewRecycled(holder);
-        if (holder instanceof ListGridImageViewHolder listGridImageViewHolder) {
+        if (holder instanceof ListViewHolder listGridImageViewHolder) {
             LoaderImageView thumbnailShimmer = listGridImageViewHolder.getShimmerThumbnail();
             DisplayUtils.stopShimmer(thumbnailShimmer,  listGridImageViewHolder.getThumbnail());
         }

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -203,6 +203,7 @@ public void keepOfflineOperationAndServerFile(OfflineOperationEntity entity, OCF
         String newFolderName = oldFileName + " - " + currentDateTime;
         String newPath = parentFolder.getDecryptedRemotePath() + newFolderName + OCFile.PATH_SEPARATOR;
         moveLocalFile(file, newPath, parentFolder.getDecryptedRemotePath());
+        offlineOperationsRepository.updateNextOperations();
     }
 
     private @Nullable

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -156,7 +156,7 @@ public OfflineOperationEntity addCreateFolderOfflineOperation(String path, Strin
     }
 
     public void deleteOfflineOperation(OCFile file) {
-        OfflineOperationExtensionsKt.deleteSubDirIfParentPathMatches(offlineOperationDao, file.getDecryptedRemotePath());
+        OfflineOperationExtensionsKt.deleteSubDirIfParentPathMatches(offlineOperationDao, file.getFileName());
         offlineOperationDao.deleteByPath(file.getDecryptedRemotePath());
         removeFile(file, true, true);
     }
@@ -178,7 +178,7 @@ public void renameCreateFolderOfflineOperation(OCFile file, String newFolderName
         }
 
         OfflineOperationEntity entity = addCreateFolderOfflineOperation(newPath, newFolderName, uploadedParentPath, file.getParentId());
-        String newTopDir = OfflineOperationExtensionsKt.getParentPathFromPath(entity);
+        String newTopDir = OfflineOperationExtensionsKt.getTopParentPathFromPath(entity);
 
         if (newTopDir != null) {
             OfflineOperationExtensionsKt.updatePathsIfParentPathMatches(offlineOperationDao, oldPath, newTopDir, entity.getParentPath());
@@ -205,7 +205,7 @@ public void keepOfflineOperationAndServerFile(OfflineOperationEntity entity) {
         entity.setFilename(newFolderName);
         offlineOperationDao.update(entity);
 
-        String newTopDir = OfflineOperationExtensionsKt.getParentPathFromPath(entity);
+        String newTopDir = OfflineOperationExtensionsKt.getTopParentPathFromPath(entity);
 
         if (newTopDir != null && oldPath != null) {
             OfflineOperationExtensionsKt.updatePathsIfParentPathMatches(offlineOperationDao, oldPath, newTopDir, entity.getParentPath());

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -39,8 +39,8 @@
 import com.nextcloud.client.database.entity.FileEntity;
 import com.nextcloud.client.database.entity.OfflineOperationEntity;
 import com.nextcloud.model.OfflineOperationType;
+import com.nextcloud.utils.date.DateFormatPattern;
 import com.nextcloud.utils.extensions.DateExtensionsKt;
-import com.nextcloud.utils.extensions.DateFormatPattern;
 import com.nextcloud.utils.extensions.OfflineOperationExtensionsKt;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1600,7 +1600,7 @@ private void observeWorkerState() {
             } else if (state instanceof  WorkerState.OfflineOperationsCompleted) {
                 OCFileListFragment fileListFragment = getListOfFilesFragment();
                 if (fileListFragment != null) {
-                    fileListFragment.onRefresh();
+                    new Handler(Looper.getMainLooper()).postDelayed(fileListFragment::onRefresh, 3000);
                 }
             }
         });

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -131,13 +131,12 @@ OCFile getFileByDecryptedRemotePath(String path) {
     }
 
     public void addCreateFolderOfflineOperation(String path, Long parentId) {
-        OfflineOperationType type = new OfflineOperationType.CreateFolder(path);
-
         OfflineOperationEntity entity = new OfflineOperationEntity();
 
+        entity.setPath(path);
         entity.setParentOCFileId(parentId);
         entity.setCreatedAt(System.currentTimeMillis() / 1000L);
-        entity.setType(type);
+        entity.setType(OfflineOperationType.CreateFolder);
 
         offlineOperationDao.insert(entity);
 

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -86,6 +86,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import me.zhanghai.android.fastscroll.PopupTextProvider;
@@ -682,7 +683,8 @@ private void setColorFilterForOfflineOperations(ListGridImageViewHolder holder,
         if (file.isOfflineOperation()) {
             holder.getThumbnail().setColorFilter(Color.GRAY, PorterDuff.Mode.SRC_IN);
         } else {
-            holder.getThumbnail().setColorFilter(holder.getThumbnail().getColorFilter());
+            int color = ContextCompat.getColor(MainApp.getAppContext(), R.color.color_accent);
+            holder.getThumbnail().setColorFilter(color, PorterDuff.Mode.SRC_IN);
         }
     }
 

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -34,6 +34,7 @@
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.database.NextcloudDatabase;
 import com.nextcloud.client.database.dao.FileDao;
+import com.nextcloud.client.database.dao.OfflineOperationDao;
 import com.nextcloud.client.database.entity.FileEntity;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
@@ -94,6 +95,7 @@ public class FileDataStorageManager {
     private final ContentProviderClient contentProviderClient;
     private final User user;
 
+    private final OfflineOperationDao offlineOperationDao = NextcloudDatabase.getInstance(MainApp.getAppContext()).offlineOperationDao();
     private final FileDao fileDao = NextcloudDatabase.getInstance(MainApp.getAppContext()).fileDao();
     private final Gson gson = new Gson();
 

File: app/src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -34,7 +34,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.databinding.UploadListLayoutBinding;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderProvider;
 import com.owncloud.android.datamodel.UploadsStorageManager;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
@@ -140,7 +139,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     private void observeWorkerState() {
         WorkerStateLiveData.Companion.instance().observe(this, state -> {
-            if (state instanceof WorkerState.Upload) {
+            if (state instanceof WorkerState.UploadStarted) {
                 Log_OC.d(TAG, "Upload worker started");
                 handleUploadWorkerState();
             }

File: app/src/main/java/com/owncloud/android/ui/adapter/TemplateAdapter.java
Patch:
@@ -104,7 +104,8 @@ public ViewHolder(@NonNull TemplateButtonBinding binding) {
             super(binding.getRoot());
             this.binding = binding;
             viewThemeUtils.files.themeTemplateCardView(this.binding.templateContainer);
-            itemView.setOnClickListener(this);
+            binding.templateLayout.setOnClickListener(this);
+            binding.templateContainer.setOnClickListener(this);
         }
 
         @Override

File: app/src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -92,7 +92,7 @@ public void clearPayload() {
     public /* synchronized */ Pair<String, String> putIfAbsent(String accountName, String remotePath, V value) {
         String targetKey = buildKey(accountName, remotePath);
 
-        Node<V> valuedNode = new Node(targetKey, value);
+        Node<V> valuedNode = new Node<>(targetKey, value);
         Node<V> previousValue = mMap.putIfAbsent(
             targetKey,
             valuedNode
@@ -111,13 +111,13 @@ public void clearPayload() {
             boolean linked = false;
             while (!OCFile.ROOT_PATH.equals(currentPath) && !linked) {
                 parentPath = new File(currentPath).getParent();
-                if (!parentPath.endsWith(OCFile.PATH_SEPARATOR)) {
+                if (parentPath != null && !parentPath.endsWith(OCFile.PATH_SEPARATOR)) {
                     parentPath += OCFile.PATH_SEPARATOR;
                 }
                 parentKey = buildKey(accountName, parentPath);
                 parentNode = mMap.get(parentKey);
                 if (parentNode == null) {
-                    parentNode = new Node(parentKey, null);
+                    parentNode = new Node<>(parentKey, null);
                     parentNode.addChild(currentNode);
                     mMap.put(parentKey, parentNode);
                 } else {

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -45,6 +45,7 @@
 import com.owncloud.android.lib.resources.files.model.GeoLocation;
 import com.owncloud.android.lib.resources.files.model.ImageDimension;
 import com.owncloud.android.lib.resources.files.model.RemoteFile;
+import com.owncloud.android.lib.resources.files.model.ServerFileInterface;
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.lib.resources.shares.ShareeUser;
@@ -228,7 +229,7 @@ public List<OCFile> getFolderContent(OCFile ocFile, boolean onlyOnDevice) {
         }
     }
 
-    public OCFile findDuplicatedFile(OCFile parentFolder, OCFile newFile) {
+    public OCFile findDuplicatedFile(OCFile parentFolder, ServerFileInterface newFile) {
         List<OCFile> folderContent = getFolderContent(parentFolder, false);
         if (folderContent == null || folderContent.isEmpty()) {
             return null;

File: app/src/main/java/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -62,7 +62,8 @@ public void onReceive(Context context, Intent intent) {
         AndroidInjection.inject(this, context);
 
         if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) {
-            MainApp.initSyncOperations(preferences,
+            MainApp.initSyncOperations(context,
+                                       preferences,
                                        uploadsStorageManager,
                                        accountManager,
                                        connectivityService,

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -81,7 +81,7 @@ public class FileDetailSharingFragment extends Fragment implements ShareeListAda
     DisplayUtils.AvatarGenerationListener,
     Injectable, FileDetailsSharingMenuBottomSheetActions, QuickSharingPermissionsBottomSheetDialog.QuickPermissionSharingBottomSheetActions {
 
-    private final String tag = "FileDetailSharingFragment";
+    private static final String TAG = "FileDetailSharingFragment";
     private static final String ARG_FILE = "FILE";
     private static final String ARG_USER = "USER";
 
@@ -543,7 +543,7 @@ private boolean containsNoNewPublicShare(List<OCShare> shares) {
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
-        FileExtensionsKt.logFileSize(file, tag);
+        FileExtensionsKt.logFileSize(file, TAG);
         outState.putParcelable(ARG_FILE, file);
         outState.putParcelable(ARG_USER, user);
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -67,8 +67,8 @@ public class GalleryFragment extends OCFileListFragment implements GalleryFragme
     private GalleryFragmentBottomSheetDialog galleryFragmentBottomSheetDialog;
 
     @Inject FileDataStorageManager fileDataStorageManager;
-    private final int maxColumnSizeLandscape = 5;
-    private final int maxColumnSizePortrait = 2;
+    private final static int maxColumnSizeLandscape = 5;
+    private final static int maxColumnSizePortrait = 2;
     private int columnSize;
 
     protected void setPhotoSearchQueryRunning(boolean value) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -22,7 +22,6 @@
 import com.nextcloud.utils.extensions.FileExtensionsKt;
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
-import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.theme.ViewThemeUtils;
@@ -39,7 +38,7 @@ public class PreviewTextStringFragment extends PreviewTextFragment {
     @Inject UserAccountManager accountManager;
     @Inject ViewThemeUtils viewThemeUtils;
 
-    private final String tag = "PreviewTextStringFragment";
+    private final static String TAG = "PreviewTextStringFragment";
     private boolean isEditorWebviewLaunched = false;
 
     /**
@@ -73,7 +72,7 @@ public void onCreate(Bundle savedInstanceState) {
      */
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState) {
-        FileExtensionsKt.logFileSize(getFile(), tag);
+        FileExtensionsKt.logFileSize(getFile(), TAG);
         outState.putParcelable(PreviewTextStringFragment.EXTRA_FILE, getFile());
 
         super.onSaveInstanceState(outState);

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -229,7 +229,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     public void checkInternetConnection() {
-        if (connectivityService.isConnected()) {
+        if (connectivityService != null && connectivityService.isConnected()) {
             hideInfoBox();
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -229,7 +229,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     public void checkInternetConnection() {
-        if (connectivityService.isConnected()) {
+        if (connectivityService != null && connectivityService.isConnected()) {
             hideInfoBox();
         }
     }

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -329,7 +329,7 @@ public FileSortOrder getSortOrderByFolder(OCFile folder) {
                                                                 userAccountManager.getUser(),
                                                                 PREF__FOLDER_SORT_ORDER,
                                                                 folder,
-                                                                FileSortOrder.sort_a_to_z.name));
+                                                                FileSortOrder.SORT_A_TO_Z.name));
     }
 
     @Override
@@ -343,7 +343,7 @@ public void setSortOrder(@Nullable OCFile folder, FileSortOrder sortOrder) {
 
     @Override
     public FileSortOrder getSortOrderByType(FileSortOrder.Type type) {
-        return getSortOrderByType(type, FileSortOrder.sort_a_to_z);
+        return getSortOrderByType(type, FileSortOrder.SORT_A_TO_Z);
     }
 
     @Override

File: app/src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -83,7 +83,7 @@ public void setTrashbinFiles(List<TrashbinFile> trashbinFiles, boolean clear) {
         files.addAll(trashbinFiles);
 
         files = preferences.getSortOrderByType(FileSortOrder.Type.trashBinView,
-                                               FileSortOrder.sort_new_to_old).sortTrashbinFiles(files);
+                                               FileSortOrder.SORT_NEW_TO_OLD).sortTrashbinFiles(files);
 
         notifyDataSetChanged();
     }

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1426,6 +1426,7 @@ private static Bitmap doResizedImageInBackground(OCFile file, FileDataStorageMan
             // resized dimensions and set update thumbnail needed to false to prevent rendering loop
             if (thumbnail != null) {
                 file.setImageDimension(new ImageDimension(thumbnail.getWidth(), thumbnail.getHeight()));
+                file.setUpdateThumbnailNeeded(false);
                 storageManager.saveFile(file);
             }
         }

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -289,7 +289,7 @@ protected Bitmap doInBackground(Object... params) {
             file = (OCFile) params[0];
 
 
-            if (file.getRemoteId() != null && file.isPreviewAvailable()) {
+            if (file.getRemoteId() != null || file.isPreviewAvailable()) {
                 // Thumbnail in cache?
                 thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(
                     ThumbnailsCacheManager.PREFIX_RESIZED_IMAGE + file.getRemoteId()
@@ -1423,7 +1423,7 @@ private static Bitmap doResizedImageInBackground(OCFile file, FileDataStorageMan
                 }
             }
 
-            // resized dimensions
+            // resized dimensions and set update thumbnail needed to false to prevent rendering loop
             if (thumbnail != null) {
                 file.setImageDimension(new ImageDimension(thumbnail.getWidth(), thumbnail.getHeight()));
                 storageManager.saveFile(file);

File: app/src/main/java/com/nextcloud/client/account/CurrentAccountProvider.java
Patch:
@@ -24,7 +24,7 @@ public interface CurrentAccountProvider {
      * @return Currently selected {@link Account} or first valid {@link Account} registered in OS or null, if not available at all.
      */
     @Deprecated
-    @Nullable
+    @NonNull
     Account getCurrentAccount();
 
     /**

File: app/src/main/java/com/nextcloud/client/di/AppModule.java
Patch:
@@ -100,8 +100,7 @@ Resources resources(Application application) {
     @Provides
     UserAccountManager userAccountManager(
         Context context,
-        AccountManager accountManager
-                                         ) {
+        AccountManager accountManager) {
         return new UserAccountManagerImpl(context, accountManager);
     }
 

File: app/src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -30,7 +30,6 @@
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.common.NextcloudClient;
-import com.nextcloud.java.util.Optional;
 import com.nextcloud.utils.extensions.IntentExtensionsKt;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -79,9 +79,7 @@
 import androidx.core.content.res.ResourcesCompat;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentStatePagerAdapter;
 import androidx.fragment.app.FragmentTransaction;
-import androidx.viewpager2.adapter.FragmentStateAdapter;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import pl.droidsonroids.gif.GifDrawable;
 
@@ -128,7 +126,7 @@ public class PreviewImageFragment extends FileFragment implements Injectable {
      * This method hides to client objects the need of doing the construction in two steps.
      *
      * @param imageFile             An {@link OCFile} to preview as an image in the fragment
-     * @param ignoreFirstSavedState Flag to work around an unexpected behaviour of {@link FragmentStateAdapter} ;
+     * @param ignoreFirstSavedState Flag to work around an unexpected behaviour of { FragmentStateAdapter } ;
      *                                                           TODO better solution
      */
     public static PreviewImageFragment newInstance(@NonNull OCFile imageFile,

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -79,9 +79,7 @@
 import androidx.core.content.res.ResourcesCompat;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentStatePagerAdapter;
 import androidx.fragment.app.FragmentTransaction;
-import androidx.viewpager2.adapter.FragmentStateAdapter;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import pl.droidsonroids.gif.GifDrawable;
 
@@ -128,7 +126,7 @@ public class PreviewImageFragment extends FileFragment implements Injectable {
      * This method hides to client objects the need of doing the construction in two steps.
      *
      * @param imageFile             An {@link OCFile} to preview as an image in the fragment
-     * @param ignoreFirstSavedState Flag to work around an unexpected behaviour of {@link FragmentStateAdapter} ;
+     * @param ignoreFirstSavedState Flag to work around an unexpected behaviour of { FragmentStateAdapter } ;
      *                                                           TODO better solution
      */
     public static PreviewImageFragment newInstance(@NonNull OCFile imageFile,

File: app/src/main/java/com/owncloud/android/ui/asynctasks/TextEditorLoadUrlTask.java
Patch:
@@ -48,7 +48,7 @@ protected String doInBackground(Void... voids) {
         }
 
         RemoteOperationResult<String> result = new DirectEditingOpenFileRemoteOperation(file.getRemotePath(), editor.getId())
-            .executeNextcloudClient(user, editorWebViewWeakReference.get());
+            .executeNextcloudClient(user, editorWebView);
 
 
         if (!result.isSuccess()) {

File: app/src/main/java/com/owncloud/android/ui/adapter/SslCertificateViewAdapter.java
Patch:
@@ -24,7 +24,7 @@ public class SslCertificateViewAdapter implements SslUntrustedCertDialog.Certifi
 
     //private final static String TAG = SslCertificateViewAdapter.class.getSimpleName();
 
-    private SslCertificate mCertificate;
+    private final SslCertificate mCertificate;
 
     /**
      * Constructor
@@ -36,7 +36,7 @@ public SslCertificateViewAdapter(SslCertificate certificate) {
     }
 
     @Override
-    public void updateCertificateView(SslUntrustedCertLayoutBinding binding) {
+    public void updateCertificateView(@NonNull SslUntrustedCertLayoutBinding binding) {
         if (mCertificate != null) {
             binding.nullCert.setVisibility(View.GONE);
             showSubject(mCertificate.getIssuedTo(), binding);

File: app/src/main/java/com/owncloud/android/ui/adapter/X509CertificateViewAdapter.java
Patch:
@@ -37,7 +37,7 @@
  */
 public class X509CertificateViewAdapter implements SslUntrustedCertDialog.CertificateViewAdapter {
 
-    private X509Certificate mCertificate;
+    private final X509Certificate mCertificate;
 
     private static final String TAG = X509CertificateViewAdapter.class.getSimpleName();
 
@@ -46,7 +46,7 @@ public X509CertificateViewAdapter(X509Certificate certificate) {
     }
 
     @Override
-    public void updateCertificateView(SslUntrustedCertLayoutBinding binding) {
+    public void updateCertificateView(@NonNull SslUntrustedCertLayoutBinding binding) {
         if (mCertificate != null) {
             binding.nullCert.setVisibility(View.GONE);
             showSubject(mCertificate.getSubjectX500Principal(), binding);
@@ -97,7 +97,7 @@ private String getDigestString(Context context, byte[] cert) {
 
     private String getDigestHexBytesWithColonsAndNewLines(Context context, final String digestType, final byte [] cert) {
         final byte[] rawDigest;
-        final String newLine = System.getProperty("line.separator");
+        final String newLine = System.lineSeparator();
 
         rawDigest = getDigest(digestType, cert);
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -61,6 +61,7 @@
 import com.nextcloud.client.utils.IntentUtil;
 import com.nextcloud.model.WorkerState;
 import com.nextcloud.model.WorkerStateLiveData;
+import com.nextcloud.utils.extensions.ActivityExtensionsKt;
 import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.extensions.IntentExtensionsKt;
 import com.nextcloud.utils.view.FastScrollUtils;
@@ -598,7 +599,7 @@ private void setLeftFragment(Fragment fragment, boolean showSortListGroup) {
         showSortListGroup(showSortListGroup);
 
         FragmentManager fragmentManager = getSupportFragmentManager();
-        if (!isFinishing() && !fragmentManager.isDestroyed()) {
+        if (ActivityExtensionsKt.isActive(this) && !fragmentManager.isDestroyed()) {
             FragmentTransaction transaction = fragmentManager.beginTransaction();
             transaction.addToBackStack(null);
             transaction.replace(R.id.left_fragment_container, fragment, TAG_LIST_OF_FILES);

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -32,6 +32,7 @@
 import com.nextcloud.client.di.Injectable;
 import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.preferences.AppPreferences;
+import com.nextcloud.utils.extensions.ActivityExtensionsKt;
 import com.owncloud.android.R;
 import com.owncloud.android.databinding.UploadFilesLayoutBinding;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -479,7 +480,7 @@ public void onCheckAvailableSpaceStart() {
      */
     @Override
     public void onCheckAvailableSpaceFinish(boolean hasEnoughSpaceAvailable, String... filesToUpload) {
-        if (mCurrentDialog != null) {
+        if (mCurrentDialog != null && ActivityExtensionsKt.isDialogFragmentReady(this, mCurrentDialog)) {
             mCurrentDialog.dismiss();
             mCurrentDialog = null;
         }
@@ -524,7 +525,7 @@ public void onCheckAvailableSpaceFinish(boolean hasEnoughSpaceAvailable, String.
         } else {
             // show a dialog to query the user if wants to move the selected files
             // to the ownCloud folder instead of copying
-            String[] args = {getString(R.string.app_name)};
+            String[] args = { getString(R.string.app_name) };
             ConfirmationDialogFragment dialog = ConfirmationDialogFragment.newInstance(
                 R.string.upload_query_move_foreign_files, args, 0, R.string.common_yes,  R.string.common_no, -1);
             dialog.setOnConfirmationListener(this);

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 TSI-mc
  * SPDX-FileCopyrightText: 2022-2023 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2016-2020 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 TSI-mc
  * SPDX-FileCopyrightText: 2021 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2018-2020 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey Vilas <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2018 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2019-2023 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey Vilas <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2020 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2017-2018 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2016 ownCloud Inc.
  * SPDX-FileCopyrightText: 2015 David A. Velasco <dvelasco@solidgear.es>

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2015 ownCloud Inc.

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2021 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2021 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2016-2018 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/ui/activity/ComponentsGetter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2016 ownCloud Inc.
  * SPDX-FileCopyrightText: 2015 María Asensio Valverde <masensio@solidgear.es>
  * SPDX-FileCopyrightText: 2014 David A. Velasco <dvelasco@solidgear.es>

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2020 Chawki Chouib <chouibc@gmail.com>
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 TSI-mc
  * SPDX-FileCopyrightText: 2022-2023 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2018 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/adapter/ShareeListAdapter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2018 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2015 ownCloud Inc.
  * SPDX-FileCopyrightText: 2012 Bartosz Przybylski <bart.p.pl@gmail.com>

File: app/src/main/java/com/owncloud/android/ui/dialog/RemoveFilesDialogFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2018 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2018 Jessie Chatham Spencer <jessie@teainspace.com>
  * SPDX-FileCopyrightText: 2016-2022 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2017-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2014 ownCloud Inc.

File: app/src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2021 TSI-mc
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020-2024 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020-2024 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 ZetaTom
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2021 TSI-mc

File: app/src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2023 TSI-mc
- * SPDX-FileCopyrightText: 2023 alperozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 alperozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2018-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2016 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 TSI-mc
  * SPDX-FileCopyrightText: 2022-2023 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2016-2020 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 TSI-mc
  * SPDX-FileCopyrightText: 2021 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2018-2020 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey Vilas <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2018 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2019-2023 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey Vilas <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2020 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2017-2018 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2016 ownCloud Inc.
  * SPDX-FileCopyrightText: 2015 David A. Velasco <dvelasco@solidgear.es>

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2015 ownCloud Inc.

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2021 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2021 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2016-2018 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/ui/activity/ComponentsGetter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2016 ownCloud Inc.
  * SPDX-FileCopyrightText: 2015 María Asensio Valverde <masensio@solidgear.es>
  * SPDX-FileCopyrightText: 2014 David A. Velasco <dvelasco@solidgear.es>

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2020 Chawki Chouib <chouibc@gmail.com>
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 TSI-mc
  * SPDX-FileCopyrightText: 2022-2023 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2018 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/adapter/ShareeListAdapter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2018 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2020-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2015 ownCloud Inc.
  * SPDX-FileCopyrightText: 2012 Bartosz Przybylski <bart.p.pl@gmail.com>

File: app/src/main/java/com/owncloud/android/ui/dialog/RemoveFilesDialogFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2018 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2018 Jessie Chatham Spencer <jessie@teainspace.com>
  * SPDX-FileCopyrightText: 2016-2022 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Andy Scherzinger <info@andy-scherzinger.de>
  * SPDX-FileCopyrightText: 2017-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2014 ownCloud Inc.

File: app/src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2021 TSI-mc
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017 Tobias Kaminsky <tobias@kaminsky.me>

File: app/src/main/java/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020-2024 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020-2024 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2017-2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Nextcloud - Android Client
  *
- * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2024 Alper Ozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2023 ZetaTom
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2021 TSI-mc

File: app/src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2023 TSI-mc
- * SPDX-FileCopyrightText: 2023 alperozturk <alper_ozturk@proton.me>
+ * SPDX-FileCopyrightText: 2023 alperozturk <alper.ozturk@nextcloud.com>
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2018-2022 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2016 Andy Scherzinger <info@andy-scherzinger.de>

File: app/src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -267,10 +267,10 @@ private void updateGlobalPauseIcon(MenuItem pauseMenuItem) {
         int iconId;
         String title;
         if (preferences.isGlobalUploadPaused()) {
-            iconId = R.drawable.ic_play;
+            iconId = R.drawable.ic_global_resume;
             title = getString(R.string.upload_action_global_upload_resume);
         } else {
-            iconId = R.drawable.ic_pause;
+            iconId = R.drawable.ic_global_pause;
             title = getString(R.string.upload_action_global_upload_pause);
         }
 

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -346,7 +346,7 @@ public static void clearTempEncryptedFolder(String accountName) {
         File tempEncryptedFolder =  new File(FileStorageUtils.getTemporalEncryptedFolderPath(accountName));
 
         if (!tempEncryptedFolder.exists()) {
-            Log_OC.d(TAG,"tempEncryptedFolder not exists");
+            Log_OC.d(TAG,"tempEncryptedFolder does not exist");
             return;
         }
 

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -534,7 +534,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                 updateMetadataForE2E(object, e2eData, clientData, e2eFiles, arbitraryDataProvider, encryptionUtilsV2, metadataExists);
             }
         } catch (FileNotFoundException e) {
-            Log_OC.d(TAG, mFile.getStoragePath() + " not exists anymore");
+            Log_OC.d(TAG, mFile.getStoragePath() + " does not exist anymore");
             result = new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
         } catch (OverlappingFileLockException e) {
             Log_OC.d(TAG, "Overlapping file lock exception");
@@ -917,7 +917,7 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check if the file continues existing before schedule the operation
         if (!originalFile.exists()) {
-            Log_OC.d(TAG, mOriginalStoragePath + " not exists anymore");
+            Log_OC.d(TAG, mOriginalStoragePath + " does not exist anymore");
             remoteOperationResult = new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
         }
 

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -192,7 +192,7 @@ public static String getInstantUploadFilePath(File file,
 
         String relativeSubfolderPath = "";
         if (parentFile == null) {
-            Log_OC.e("AutoUpload", "Parent folder does not exists!");
+            Log_OC.e("AutoUpload", "Parent folder does not exist!");
         } else {
             relativeSubfolderPath = parentFile.getAbsolutePath();
         }

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -346,7 +346,7 @@ public static void clearTempEncryptedFolder(String accountName) {
         File tempEncryptedFolder =  new File(FileStorageUtils.getTemporalEncryptedFolderPath(accountName));
 
         if (!tempEncryptedFolder.exists()) {
-            Log_OC.d(TAG,"tempEncryptedFolder not exists");
+            Log_OC.d(TAG,"tempEncryptedFolder does not exist");
             return;
         }
 

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -534,7 +534,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                 updateMetadataForE2E(object, e2eData, clientData, e2eFiles, arbitraryDataProvider, encryptionUtilsV2, metadataExists);
             }
         } catch (FileNotFoundException e) {
-            Log_OC.d(TAG, mFile.getStoragePath() + " not exists anymore");
+            Log_OC.d(TAG, mFile.getStoragePath() + " does not exist anymore");
             result = new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
         } catch (OverlappingFileLockException e) {
             Log_OC.d(TAG, "Overlapping file lock exception");
@@ -917,7 +917,7 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check if the file continues existing before schedule the operation
         if (!originalFile.exists()) {
-            Log_OC.d(TAG, mOriginalStoragePath + " not exists anymore");
+            Log_OC.d(TAG, mOriginalStoragePath + " does not exist anymore");
             remoteOperationResult = new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
         }
 

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -192,7 +192,7 @@ public static String getInstantUploadFilePath(File file,
 
         String relativeSubfolderPath = "";
         if (parentFile == null) {
-            Log_OC.e("AutoUpload", "Parent folder does not exists!");
+            Log_OC.e("AutoUpload", "Parent folder does not exist!");
         } else {
             relativeSubfolderPath = parentFile.getAbsolutePath();
         }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -1071,9 +1071,9 @@ private List<OCFile> limitToPersonalFiles(Iterable<OCFile> files) {
         List<OCFile> ret = new ArrayList<>();
 
         for (OCFile file : files) {
-            if (file.getOwnerId().equals(userId) &&
-                !file.isSharedWithMe() &&
-                !file.isGroupFolder()) {
+            String ownerId = file.getOwnerId();
+
+            if (ownerId != null && ownerId.equals(userId) && !file.isSharedWithMe() && !file.isGroupFolder()) {
                 ret.add(file);
             }
         }

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -405,6 +405,7 @@ public void onPageSelected(int position) {
             }
         }
 
+        // Update ActionBar title
         if (currentFile != null) {
             if (getSupportActionBar() != null) {
                 getSupportActionBar().setTitle(currentFile.getFileName());

File: app/src/androidTest/disabledTests/uiautomator/InitialTest.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2018 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2015 ownCloud Inc.
- * SPDX-License-Identifier: GPL-2.0-only AND AGPL-3.0-or-later
+ * SPDX-License-Identifier: GPL-2.0-only AND (AGPL-3.0-or-later OR GPL-2.0-only)
  */
 package com.owncloud.android.uiautomator;
 

File: app/src/androidTest/java/com/nextcloud/client/AuthenticatorActivityIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2021 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/CommunityActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/EndToEndAction.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2023 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2023 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/FirstRunActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/UploadListActivityActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client;
 

File: app/src/androidTest/java/com/nextcloud/client/account/OwnCloudClientManagerTest.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.account;
 

File: app/src/androidTest/java/com/nextcloud/client/account/UserAccountManagerImplTest.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019-2023 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.account;
 

File: app/src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/AbstractOnServerIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/DownloadIT.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android;
 

File: app/src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentProviderClientIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.datamodel;
 

File: app/src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.datamodel;
 

File: app/src/androidTest/java/com/owncloud/android/datamodel/UploadStorageManagerTest.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2017 JARP <jarp@customer-187-174-218-184.uninet-ide.com.mx
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2021 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.datamodel;
 

File: app/src/androidTest/java/com/owncloud/android/operations/RemoveFileOperationIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.operations;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/ConflictsResolveActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/DrawerActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/FileDisplayActivityTest.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Unpublished <unpublished@gmx.net>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/FolderPickerActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Kilian Périsset <kilian.perisset@infomaniak.com>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/ManageAccountsActivityIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/activity/UserInfoActivityIT.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020 Andy Scherzinger <info@andy-scherzinger.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.activity;
 

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.dialog;
 

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/SyncFileNotEnoughSpaceDialogFragmentTest.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.dialog;
 

File: app/src/androidTest/java/com/owncloud/android/ui/preview/PreviewTextFileFragmentTest.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2020 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.ui.preview;
 

File: app/src/androidTest/java/com/owncloud/android/util/EncryptionTestIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2017 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2017 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.util;
 

File: app/src/androidTest/java/com/owncloud/android/util/ErrorMessageAdapterIT.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2021-2022 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2019-2021 Tobias Kaminsky <tobias@kaminsky.me>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.util;
 

File: app/src/generic/java/com/nextcloud/client/di/VariantComponentsModule.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.di;
 

File: app/src/generic/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/generic/java/com/owncloud/android/utils/SecurityUtils.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/gplay/java/com/nextcloud/client/di/VariantComponentsModule.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.di;
 

File: app/src/gplay/java/com/owncloud/android/authentication/ModifiedAuthenticatorActivity.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2017 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.authentication;
 

File: app/src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.services.firebase;
 

File: app/src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017-2018 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/gplay/java/com/owncloud/android/utils/SecurityUtils.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/huawei/java/com/nextcloud/client/di/VariantComponentsModule.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.di;
 

File: app/src/huawei/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
  * SPDX-FileCopyrightText: 2017 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/huawei/java/com/owncloud/android/utils/SecurityUtils.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2018 Mario Danic <mario@lovelyhq.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.owncloud.android.utils;
 

File: app/src/main/java/com/nextcloud/android/sso/Constants.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2019 David Luhmer <david-dev@live.de>
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Edvard Holst <edvard.holst@gmail.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso;
 

File: app/src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 David Luhmer <david-dev@live.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  *
  * More information here: https://github.com/abeluck/android-streams-ipc
  */

File: app/src/main/java/com/nextcloud/android/sso/PatchMethod.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2021 Timo Triebensky <timo@binsky.org>
  * SPDX-FileCopyrightText: 2021 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  *
  * More information here: https://github.com/abeluck/android-streams-ipc
  */

File: app/src/main/java/com/nextcloud/android/sso/PlainHeader.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso;
 

File: app/src/main/java/com/nextcloud/android/sso/QueryParam.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2021 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2021 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso;
 

File: app/src/main/java/com/nextcloud/android/sso/Response.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2019 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2019 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso;
 

File: app/src/main/java/com/nextcloud/android/sso/aidl/IThreadListener.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2017 David Luhmer <david-dev@live.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso.aidl;
 

File: app/src/main/java/com/nextcloud/android/sso/aidl/NextcloudRequest.java
Patch:
@@ -4,7 +4,7 @@
  * SPDX-FileCopyrightText: 2021 Tobias Kaminsky <tobias@kaminsky.me>
  * SPDX-FileCopyrightText: 2021 Nextcloud GmbH
  * SPDX-FileCopyrightText: 2017 David Luhmer <david-dev@live.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso.aidl;
 

File: app/src/main/java/com/nextcloud/android/sso/aidl/ParcelFileDescriptorUtil.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2017 David Luhmer <david-dev@live.de>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.android.sso.aidl;
 

File: app/src/main/java/com/nextcloud/client/account/CurrentAccountProvider.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.account;
 

File: app/src/main/java/com/nextcloud/client/account/UserAccountManager.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.account;
 

File: app/src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2023 TSI-mc
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.account;
 

File: app/src/main/java/com/nextcloud/client/database/migrations/LegacyMigrationHelper.java
Patch:
@@ -3,7 +3,7 @@
  *
  * SPDX-FileCopyrightText: 2022 Álvaro Brey <alvaro@alvarobrey.com>
  * SPDX-FileCopyrightText: 2022 Nextcloud GmbH
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.database.migrations;
 

File: app/src/main/java/com/nextcloud/client/di/AppComponent.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 
 package com.nextcloud.client.di;

File: app/src/main/java/com/nextcloud/client/di/AppModule.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 
 package com.nextcloud.client.di;

File: app/src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2020 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 package com.nextcloud.client.di;
 

File: app/src/main/java/com/nextcloud/client/di/Injectable.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 
 package com.nextcloud.client.di;

File: app/src/main/java/com/nextcloud/client/di/InjectorNotFoundException.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 
 package com.nextcloud.client.di;

File: app/src/main/java/com/nextcloud/client/di/package-info.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud - Android Client
  *
  * SPDX-FileCopyrightText: 2019 Chris Narkiewicz <hello@ezaquarii.com>
- * SPDX-License-Identifier: AGPL-3.0-or-later
+ * SPDX-License-Identifier: AGPL-3.0-or-later OR GPL-2.0-only
  */
 
 /**

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1705,6 +1705,7 @@ public void deleteFileInMediaScan(String path) {
         }
     }
 
+    @SuppressFBWarnings("PSC")
     public void saveConflict(OCFile ocFile, String etagInConflict) {
         ContentValues cv = new ContentValues();
         if (!ocFile.isDown()) {

File: app/src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -738,6 +738,7 @@ private void setLocalFileDataOnUpdatedFile(OCFile remoteFile, OCFile localFile,
     }
 
     @NonNull
+    @SuppressFBWarnings("OCP")
     public static Map<String, OCFile> prefillLocalFilesMap(Object metadata, List<OCFile> localFiles) {
         Map<String, OCFile> localFilesMap = Maps.newHashMapWithExpectedSize(localFiles.size());
 

File: app/src/androidTest/java/com/owncloud/android/util/EncryptionTestIT.java
Patch:
@@ -836,7 +836,7 @@ private boolean cryptFile(String fileName, String md5, byte[] key, byte[] iv)
 
         // Encryption
         Cipher encryptorCipher = EncryptionUtils.getCipher(Cipher.ENCRYPT_MODE, key, iv);
-        EncryptionUtils.encryptFile(file, encryptorCipher);
+        EncryptionUtils.encryptFile(user.getAccountName(), file, encryptorCipher);
         String encryptorCipherAuthTag = EncryptionUtils.getAuthenticationTag(encryptorCipher);
 
         // Decryption

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -2337,6 +2337,7 @@ public String getEncryptedRemotePath(String decryptedRemotePath) {
         return null;
     }
 
+    @SuppressFBWarnings("OCP")
     private List<Pair<String, String>> getDecryptedFileNamesAndEncryptedRemotePaths(List<OCFile> fileList) {
         List<Pair<String, String>> result = new ArrayList<>();
 

File: app/src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -58,6 +58,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 import static com.owncloud.android.datamodel.OCFile.PATH_SEPARATOR;
 
@@ -601,6 +602,7 @@ public static Object getDecryptedFolderMetadata(boolean encryptedAncestor,
         return metadata;
     }
 
+    @SuppressFBWarnings("CE")
     private static void setMimeTypeAndDecryptedRemotePath(OCFile updatedFile, FileDataStorageManager storageManager, String decryptedFileName, String mimetype) {
         OCFile parentFile = storageManager.getFileById(updatedFile.getParentId());
 

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -14,6 +14,7 @@
 import com.owncloud.android.AbstractIT;
 import com.owncloud.android.databinding.SyncedFoldersLayoutBinding;
 import com.owncloud.android.datamodel.MediaFolderType;
+import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
 import com.owncloud.android.ui.activity.SyncedFoldersActivity;
 import com.owncloud.android.ui.dialog.SyncedFolderPreferencesDialogFragment;
@@ -63,7 +64,8 @@ public void testSyncedFolderDialog() {
                                                                    MediaFolderType.IMAGE,
                                                                    false,
                                                                    SubFolderRule.YEAR_MONTH,
-                                                                   false);
+                                                                   false,
+                                                                   SyncedFolder.NOT_SCANNED_YET);
         SyncedFolderPreferencesDialogFragment sut = SyncedFolderPreferencesDialogFragment.newInstance(item, 0);
 
         Intent intent = new Intent(targetContext, SyncedFoldersActivity.class);

File: app/src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -107,6 +107,7 @@ public Set<String> getFilesForUpload(String localPath, String syncedFolderId) {
 
     public void storeOrUpdateFileValue(String localPath, long modifiedAt, boolean isFolder, SyncedFolder syncedFolder) {
 
+        // takes multiple milliseconds to query data from database (around 75% of execution time) (6ms)
         FileSystemDataSet data = getFilesystemDataSet(localPath, syncedFolder);
 
         int isFolderValue = 0;
@@ -145,7 +146,7 @@ public void storeOrUpdateFileValue(String localPath, long modifiedAt, boolean is
                 }
             }
 
-
+            // updating data takes multiple milliseconds (around 25% of exec time) (2 ms)
             int result = contentResolver.update(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_FILESYSTEM,
                 cv,

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 80;
+    public static final int DB_VERSION = 81;
 
     private ProviderMeta() {
         // No instance
@@ -293,7 +293,8 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String SYNCED_FOLDER_NAME_COLLISION_POLICY = "name_collision_policy";
         public static final String SYNCED_FOLDER_HIDDEN = "hidden";
         public static final String SYNCED_FOLDER_SUBFOLDER_RULE = "sub_folder_rule";
-        public static final String SYNCED_EXCLUDE_HIDDEN = "exclude_hidden";
+        public static final String SYNCED_FOLDER_EXCLUDE_HIDDEN = "exclude_hidden";
+        public static final String SYNCED_FOLDER_LAST_SCAN_TIMESTAMP_MS = "last_scan_timestamp_ms";
 
         // Columns of external links table
         public static final String EXTERNAL_LINKS_ICON_URL = "icon_url";

File: app/src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -10,6 +10,7 @@
 import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.preferences.SubFolderRule;
 import com.owncloud.android.datamodel.MediaFolderType;
+import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
 import com.owncloud.android.files.services.NameCollisionPolicy;
 
@@ -164,6 +165,7 @@ private SyncedFolderDisplayItem create(String folderName, boolean enabled) {
                                            MediaFolderType.IMAGE,
                                            false,
                                            SubFolderRule.YEAR_MONTH,
-                                           true);
+                                           true,
+                                           SyncedFolder.NOT_SCANNED_YET);
     }
 }

File: app/src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -10,6 +10,7 @@
 import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.preferences.SubFolderRule;
 import com.owncloud.android.datamodel.MediaFolderType;
+import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
 import com.owncloud.android.files.services.NameCollisionPolicy;
 
@@ -164,6 +165,7 @@ private SyncedFolderDisplayItem create(String folderName, boolean enabled) {
                                            MediaFolderType.IMAGE,
                                            false,
                                            SubFolderRule.YEAR_MONTH,
-                                           true);
+                                           true,
+                                           SyncedFolder.NOT_SCANNED_YET);
     }
 }

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -548,7 +548,7 @@ public static byte[] decodeStringToBase64Bytes(String string) {
     }
 
     public static EncryptedFile encryptFile(Context context, File file, Cipher cipher) throws InvalidParameterSpecException, IOException {
-        File tempEncryptedFile = File.createTempFile(file.getName(), ".", context.getCacheDir());
+        File tempEncryptedFile = File.createTempFile(file.getName(), null, context.getCacheDir());
         encryptFileWithGivenCipher(file, tempEncryptedFile, cipher);
         String authenticationTagString = getAuthenticationTag(cipher);
         return new EncryptedFile(tempEncryptedFile, authenticationTagString);

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -548,7 +548,7 @@ public static byte[] decodeStringToBase64Bytes(String string) {
     }
 
     public static EncryptedFile encryptFile(Context context, File file, Cipher cipher) throws InvalidParameterSpecException, IOException {
-        File tempEncryptedFile = File.createTempFile(file.getName(), "", context.getCacheDir());
+        File tempEncryptedFile = File.createTempFile(file.getName(), ".", context.getCacheDir());
         encryptFileWithGivenCipher(file, tempEncryptedFile, cipher);
         String authenticationTagString = getAuthenticationTag(cipher);
         return new EncryptedFile(tempEncryptedFile, authenticationTagString);

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -757,10 +757,10 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
             logResult(result, mFile.getStoragePath(), mFile.getRemotePath());
 
             // Unlock must be done otherwise folder stays locked and user can't upload any file
-            RemoteOperationResult<Void> unlockFolderResult = null;
+            RemoteOperationResult<Void> unlockFolderResult;
             if (object instanceof DecryptedFolderMetadataFileV1) {
                 unlockFolderResult = EncryptionUtils.unlockFolderV1(parentFile, client, token);
-            } else if (object instanceof DecryptedFolderMetadataFile) {
+            } else {
                 unlockFolderResult = EncryptionUtils.unlockFolder(parentFile, client, token);
             }
 

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -1010,8 +1010,7 @@ public void setUploadedFilename(String uploadedFilename){
 
     private void logResult(RemoteOperationResult result, String sourcePath, String targetPath) {
         if (result.isSuccess()) {
-            int lastIndex = sourcePath.lastIndexOf("/");
-            String filename = sourcePath.substring(lastIndex + 1);
+            String filename = sourcePath.substring(sourcePath.lastIndexOf('/') + 1);
             setUploadedFilename(filename);
 
             Log_OC.i(TAG, "Upload of " + sourcePath + " to " + targetPath + ": " + result.getLogMessage());

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -569,7 +569,7 @@ public static byte[] decodeStringToBase64Bytes(String string) {
     }
 
     public static EncryptedFile encryptFile(File file, Cipher cipher) throws InvalidParameterSpecException {
-        File encryptedFile = new File(file.getAbsolutePath() + ".enc");
+        File encryptedFile = new File(file.getAbsolutePath() + ".enc.jpg");
         encryptFileWithGivenCipher(file, encryptedFile, cipher);
         String authenticationTagString = getAuthenticationTag(cipher);
         return new EncryptedFile(encryptedFile, authenticationTagString);

File: app/src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -256,7 +256,7 @@ private int updateUploadInternal(Cursor c, UploadStatus status, UploadResult res
      * @param localPath  path of the file to upload in the device storage
      * @return 1 if file status was updated, else 0.
      */
-    private int updateUploadStatus(long id, UploadStatus status, UploadResult result, String remotePath,
+    public int updateUploadStatus(long id, UploadStatus status, UploadResult result, String remotePath,
                                    String localPath) {
         //Log_OC.v(TAG, "Updating "+filepath+" with uploadStatus="+status +" and result="+result);
 

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -726,7 +726,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                                                                  metadata,
                                                                  token,
                                                                  client,
-                                                                 metadataExists,
+                                                                 true,
                                                                  mContext,
                                                                  user,
                                                                  getStorageManager());

File: app/src/main/java/com/owncloud/android/ui/dialog/RemoveFilesDialogFragment.java
Patch:
@@ -106,11 +106,9 @@ public static RemoveFilesDialogFragment newInstance(ArrayList<OCFile> files) {
 
         if (containsFolder || containsDown) {
             args.putInt(ARG_NEGATIVE_BTN_RES, R.string.confirmation_remove_local);
-            args.putInt(ARG_NEUTRAL_BTN_RES, R.string.file_keep);
-        } else {
-            args.putInt(ARG_NEGATIVE_BTN_RES, R.string.file_keep);
         }
 
+        args.putInt(ARG_NEUTRAL_BTN_RES, R.string.file_keep);
         args.putParcelableArrayList(ARG_TARGET_FILES, files);
         frag.setArguments(args);
 

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -275,7 +275,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
             if (downloadType == DownloadType.DOWNLOAD && !file.isEncrypted()) {
                 moved = tmpFile.renameTo(newFile);
-                newFile.setLastModified(file.getModificationTimestamp());
+                boolean isLastModifiedSet = newFile.setLastModified(file.getModificationTimestamp());
+                Log_OC.d(TAG, "Last modified set: " + isLastModifiedSet);
                 if (!moved) {
                     result = new RemoteOperationResult(RemoteOperationResult.ResultCode.LOCAL_STORAGE_NOT_MOVED);
                 }

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -726,7 +726,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                                                                  metadata,
                                                                  token,
                                                                  client,
-                                                                 metadataExists,
+                                                                 true,
                                                                  mContext,
                                                                  user,
                                                                  getStorageManager());

File: app/src/main/java/com/owncloud/android/ui/dialog/RemoveFilesDialogFragment.java
Patch:
@@ -106,11 +106,9 @@ public static RemoveFilesDialogFragment newInstance(ArrayList<OCFile> files) {
 
         if (containsFolder || containsDown) {
             args.putInt(ARG_NEGATIVE_BTN_RES, R.string.confirmation_remove_local);
-            args.putInt(ARG_NEUTRAL_BTN_RES, R.string.file_keep);
-        } else {
-            args.putInt(ARG_NEGATIVE_BTN_RES, R.string.file_keep);
         }
 
+        args.putInt(ARG_NEUTRAL_BTN_RES, R.string.file_keep);
         args.putParcelableArrayList(ARG_TARGET_FILES, files);
         frag.setArguments(args);
 

File: app/src/main/java/com/owncloud/android/datastorage/providers/SystemDefaultStoragePointProvider.java
Patch:
@@ -40,7 +40,7 @@ public boolean canProvideStoragePoints() {
     public Vector<StoragePoint> getAvailableStoragePoint() {
         Vector<StoragePoint> result = new Vector<>();
 
-        final String defaultStringDesc = MainApp.getAppContext().getString(R.string.storage_description_default);
+        final String defaultStringDesc = MainApp.string(R.string.storage_description_default);
         // Add private internal storage data directory.
         result.add(new StoragePoint(defaultStringDesc,
                 MainApp.getAppContext().getFilesDir().getAbsolutePath(), StoragePoint.StorageType.INTERNAL,

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -180,7 +180,7 @@ private DisplayUtils() {
      */
     public static String bytesToHumanReadable(long bytes) {
         if (bytes < 0) {
-            return MainApp.getAppContext().getString(R.string.common_pending);
+            return MainApp.string(R.string.common_pending);
         } else {
             double result = bytes;
             int suffixIndex = 0;

File: app/src/main/java/com/owncloud/android/utils/theme/ThemeUtils.java
Patch:
@@ -43,7 +43,7 @@ public String getDefaultDisplayNameForRootFolder(Context context) {
         OCCapability capability = CapabilityUtils.getCapability(context);
 
         if (MainApp.isOnlyOnDevice()) {
-            return MainApp.getAppContext().getString(R.string.drawer_item_on_device);
+            return MainApp.string(R.string.drawer_item_on_device);
         } else {
             if (capability.getServerName() == null || capability.getServerName().isEmpty()) {
                 return MainApp.getAppContext().getResources().getString(R.string.default_display_name_for_root_folder);

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 79;
+    public static final int DB_VERSION = 80;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 79;
+    public static final int DB_VERSION = 80;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -571,7 +571,7 @@ public static EncryptedFile encryptFile(File file, Cipher cipher) throws IOExcep
         return new EncryptedFile(encryptedFile, authenticationTagString);
     }
 
-    private static String getAuthenticationTag(Cipher cipher) throws InvalidParameterSpecException {
+    public static String getAuthenticationTag(Cipher cipher) throws InvalidParameterSpecException {
         byte[] authenticationTag = cipher.getParameters().getParameterSpec(GCMParameterSpec.class).getIV();
         return encodeBytesToBase64String(authenticationTag);
     }

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -273,9 +273,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 }
             }
 
-            if (downloadType == DownloadType.DOWNLOAD) {
-
-            } else if (downloadType == DownloadType.EXPORT) {
+            if (downloadType == DownloadType.EXPORT) {
                 new FileExportUtils().exportFile(file.getFileName(),
                                                  file.getMimeType(),
                                                  operationContext.getContentResolver(),

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -738,6 +738,8 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                         token = null;
                     }
                 }
+
+                encryptedTempFile.delete();
             }
         } catch (FileNotFoundException e) {
             Log_OC.d(TAG, mFile.getStoragePath() + " not exists anymore");

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -568,7 +568,6 @@ public static EncryptedFile encryptFile(File file, Cipher cipher) throws IOExcep
         File encryptedFile = new File(file.getAbsolutePath() + ".enc");
         encryptFileWithGivenCipher(file, encryptedFile, cipher);
         String authenticationTagString = getAuthenticationTag(cipher);
-        Log_OC.d("", "KAVGAM!!: " + authenticationTagString);
         return new EncryptedFile(encryptedFile, authenticationTagString);
     }
 

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -1449,7 +1449,8 @@ public static Pair<Boolean, DecryptedFolderMetadataFile> retrieveMetadata(OCFile
                                                                                 arbitraryDataProvider)
             );
 
-        } else if (getMetadataOperationResult.getHttpCode() == HttpStatus.SC_NOT_FOUND) {
+        } else if (getMetadataOperationResult.getHttpCode() == HttpStatus.SC_NOT_FOUND ||
+            getMetadataOperationResult.getHttpCode() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {
             // new metadata
             metadata = new DecryptedFolderMetadataFile(new com.owncloud.android.datamodel.e2e.v2.decrypted.DecryptedMetadata(),
                                                        new ArrayList<>(),

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -1390,6 +1390,7 @@ public static Pair<Boolean, DecryptedFolderMetadataFileV1> retrieveMetadataV1(OC
             // new metadata
             metadata = new DecryptedFolderMetadataFileV1();
             metadata.setMetadata(new DecryptedMetadata());
+            metadata.getMetadata().setVersion(Double.parseDouble(E2EVersion.V1_2.getValue()));
             metadata.getMetadata().setMetadataKeys(new HashMap<>());
             String metadataKey = EncryptionUtils.encodeBytesToBase64String(EncryptionUtils.generateKey());
             String encryptedMetadataKey = EncryptionUtils.encryptStringAsymmetric(metadataKey, publicKey);

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -508,7 +508,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                 metadata.getMetadata().setMetadataKey(encryptedMetadataKey);
 
                 if (object instanceof DecryptedFolderMetadataFileV1) {
-                    metadata.getMetadata().setChecksum(((DecryptedFolderMetadataFileV1) object).getMetadata().getChecksum());
+                    metadata = (DecryptedFolderMetadataFileV1) object;
                 }
 
                 object = metadata;
@@ -696,6 +696,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                         serializedFolderMetadata = EncryptionUtils.serializeJSON(encryptedFolderMetadata);
                     }
 
+                    // FIXME after first failed upload folder stay locked, uploadMetadata throws UploadException for encrypted folder
                     // upload metadata
                     EncryptionUtils.uploadMetadata(parentFile,
                                                    serializedFolderMetadata,

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -669,7 +669,6 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
                     data.setFilename(mFile.getDecryptedFileName());
                     data.setMimetype(mFile.getMimeType());
                     data.setKey(EncryptionUtils.encodeBytesToBase64String(key));
-
                     decryptedFile.setEncrypted(data);
                     decryptedFile.setInitializationVector(EncryptionUtils.encodeBytesToBase64String(iv));
                     decryptedFile.setAuthenticationTag(encryptedFile.getAuthenticationTag());

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -1390,6 +1390,7 @@ public static Pair<Boolean, DecryptedFolderMetadataFileV1> retrieveMetadataV1(OC
             // new metadata
             metadata = new DecryptedFolderMetadataFileV1();
             metadata.setMetadata(new DecryptedMetadata());
+            metadata.getMetadata().setVersion(Double.parseDouble(E2EVersion.V1_2.getValue()));
             metadata.getMetadata().setMetadataKeys(new HashMap<>());
             String metadataKey = EncryptionUtils.encodeBytesToBase64String(EncryptionUtils.generateKey());
             String encryptedMetadataKey = EncryptionUtils.encryptStringAsymmetric(metadataKey, publicKey);

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -366,7 +366,7 @@ public void onResourceReady(Bitmap resource, GlideAnimation glideAnimation) {
                 ecosystemApps.findViewById(R.id.drawer_ecosystem_assistant),
             };
 
-            if (getCapabilities() != null && getCapabilities().getAssistant().isTrue() && !getResources().getBoolean(R.bool.is_branded_client)) {
+            if (getCapabilities() != null && getCapabilities().getAssistant().isTrue()) {
                 views[3].setVisibility(View.VISIBLE);
             } else {
                 views[3].setVisibility(View.GONE);

File: app/src/main/java/com/owncloud/android/utils/DrawerMenuUtil.java
Patch:
@@ -65,7 +65,8 @@ public static void filterActivityMenuItem(Menu menu, @Nullable OCCapability capa
     }
 
     public static void filterAssistantMenuItem(Menu menu, @Nullable OCCapability capability, Resources resources) {
-        if (capability != null && !capability.getAssistant().isTrue() && resources.getBoolean(R.bool.is_branded_client)) {
+        boolean showCondition = capability != null && capability.getAssistant().isTrue() && !resources.getBoolean(R.bool.is_branded_client);
+        if (!showCondition) {
             filterMenuItems(menu, R.id.nav_assistant);
         }
     }

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 78;
+    public static final int DB_VERSION = 79;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/ui/activities/ActivitiesActivity.java
Patch:
@@ -61,7 +61,7 @@
 public class ActivitiesActivity extends DrawerActivity implements ActivityListInterface, ActivitiesContract.View {
     private static final String TAG = ActivitiesActivity.class.getSimpleName();
 
-    private ActivityListLayoutBinding binding;
+    ActivityListLayoutBinding binding;
     private ActivityListAdapter adapter;
     private int lastGiven;
     private boolean isLoadingActivities;

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -54,7 +54,7 @@ public class SyncedFoldersActivityIT extends AbstractIT {
     public void open() {
         SyncedFoldersLayoutBinding sut = activityRule.launchActivity(null).binding;
         shortSleep();
-        screenshot(sut.list);
+        screenshot(sut.loadingContent);
     }
 
     @Test

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 79;
+    public static final int DB_VERSION = 78;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -468,7 +468,7 @@ private void filterDrawerMenu(final Menu menu, @NonNull final User user) {
         DrawerMenuUtil.filterSearchMenuItems(menu, user, getResources());
         DrawerMenuUtil.filterTrashbinMenuItem(menu, capability);
         DrawerMenuUtil.filterActivityMenuItem(menu, capability);
-        // DrawerMenuUtil.filterAssistantMenuItem(menu, capability);
+        DrawerMenuUtil.filterAssistantMenuItem(menu, capability);
         DrawerMenuUtil.filterGroupfoldersMenuItem(menu, capability);
 
         DrawerMenuUtil.setupHomeMenuItem(menu, getResources());

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -52,7 +52,7 @@ public class SyncedFoldersActivityIT extends AbstractIT {
     @ScreenshotTest
     public void open() {
         Activity sut = activityRule.launchActivity(null);
-
+        longSleep();
         screenshot(sut);
     }
 

File: app/src/androidTest/java/com/owncloud/android/util/EncryptionTestIT.java
Patch:
@@ -610,7 +610,7 @@ public void filedrop() throws Exception {
         EncryptionUtils.encryptFileDropFiles(decryptedFolderMetadata1, encryptedFolderMetadata1, publicKey);
 
         // serialize
-        String encryptedJson = serializeJSON(encryptedFolderMetadata1);
+        String encryptedJson = serializeJSON(encryptedFolderMetadata1, true);
 
         // de-serialize
         EncryptedFolderMetadataFileV1 encryptedFolderMetadata2 = deserializeJSON(encryptedJson,
@@ -626,8 +626,8 @@ public void filedrop() throws Exception {
             folderID);
 
         // compare
-        assertFalse(compareJsonStrings(serializeJSON(decryptedFolderMetadata1),
-                                       serializeJSON(decryptedFolderMetadata2)));
+        assertFalse(compareJsonStrings(serializeJSON(decryptedFolderMetadata1, true),
+                                       serializeJSON(decryptedFolderMetadata2, true)));
 
         assertEquals(decryptedFolderMetadata1.getFiles().size() + decryptedFolderMetadata1.getFiledrop().size(),
                      decryptedFolderMetadata2.getFiles().size());

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -248,6 +248,9 @@ protected void setupDrawer() {
         if (getSupportActionBar() != null) {
             getSupportActionBar().setDisplayHomeAsUpEnabled(true);
         }
+
+        showSortListGroup(true);
+        hideSearchText(false);
     }
 
     /**

File: app/src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -367,7 +367,8 @@ public void onBindViewHolder(SectionedViewHolder holder, int section, int relati
                 itemViewHolder.binding.uploadProgressBar.invalidate();
             }
             case UPLOAD_FAILED -> itemViewHolder.binding.uploadDate.setVisibility(View.GONE);
-            case UPLOAD_SUCCEEDED -> itemViewHolder.binding.uploadStatus.setVisibility(View.GONE);
+            case UPLOAD_SUCCEEDED, UPLOAD_MANUALLY_CANCELLED ->
+                itemViewHolder.binding.uploadStatus.setVisibility(View.GONE);
         }
 
         // show status if same file conflict or local file deleted or upload cancelled

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -387,7 +387,7 @@ default void onDarkThemeModeChanged(DarkMode mode) {
 
     void setCalendarLastBackup(long timestamp);
 
-    boolean getGlobalUploadPaused();
+    boolean isGlobalUploadPaused();
 
     void setGlobalUploadPaused(boolean globalPausedState);
 

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -744,7 +744,7 @@ public void setCalendarLastBackup(long timestamp) {
     }
 
     @Override
-    public boolean getGlobalUploadPaused() {
+    public boolean isGlobalUploadPaused() {
         return preferences.getBoolean(PREF__GLOBAL_PAUSE_STATE,false);
     }
 

File: app/src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -29,7 +29,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.Bitmap;
-import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.text.format.DateUtils;
@@ -643,7 +642,7 @@ private String getStatusText(OCUpload upload) {
                     // really uploading, bind the progress bar to listen for progress updates
                     status = parentActivity.getString(R.string.uploader_upload_in_progress_ticker);
                 }
-                if (parentActivity.getAppPreferences().getGlobalUploadPaused()) {
+                if (parentActivity.getAppPreferences().isGlobalUploadPaused()) {
                     status = parentActivity.getString(R.string.upload_global_pause_title);
                 }
             }

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -523,6 +523,8 @@ public void getFileWithLink(@NonNull OCFile file, final ViewThemeUtils viewTheme
                 showShareFile(file);
             }
         }
+
+        fileActivity.refreshList();
     }
 
     /**

File: app/src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -423,7 +423,7 @@ String getMessageForResult(RemoteOperationResult result, Resources res) {
                 message = res.getString(R.string.auth_not_configured_title);
 
             } else if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
-                message = res.getString(R.string.auth_incorrect_path_title);
+                message = res.getString(R.string.file_not_found);
 
             } else if (result.getCode() == ResultCode.OAUTH2_ERROR) {
                 message = res.getString(R.string.auth_oauth_error);

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -74,7 +74,8 @@ public void testSyncedFolderDialog() {
                                                                    "Name",
                                                                    MediaFolderType.IMAGE,
                                                                    false,
-                                                                   SubFolderRule.YEAR_MONTH);
+                                                                   SubFolderRule.YEAR_MONTH,
+                                                                   false);
         SyncedFolderPreferencesDialogFragment sut = SyncedFolderPreferencesDialogFragment.newInstance(item, 0);
 
         Intent intent = new Intent(targetContext, SyncedFoldersActivity.class);

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 77;
+    public static final int DB_VERSION = 78;
 
     private ProviderMeta() {
         // No instance
@@ -302,6 +302,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String SYNCED_FOLDER_NAME_COLLISION_POLICY = "name_collision_policy";
         public static final String SYNCED_FOLDER_HIDDEN = "hidden";
         public static final String SYNCED_FOLDER_SUBFOLDER_RULE = "sub_folder_rule";
+        public static final String SYNCED_EXCLUDE_HIDDEN = "exclude_hidden";
 
         // Columns of external links table
         public static final String EXTERNAL_LINKS_ICON_URL = "icon_url";

File: app/src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -178,6 +178,7 @@ private SyncedFolderDisplayItem create(String folderName, boolean enabled) {
                                            2,
                                            MediaFolderType.IMAGE,
                                            false,
-                                           SubFolderRule.YEAR_MONTH);
+                                           SubFolderRule.YEAR_MONTH,
+                                           true);
     }
 }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2486,12 +2486,12 @@ private void setSortListGroup(boolean currentListGroupVisibility, boolean show)
      * visibility earlier using {@link #setSortListGroup(boolean, boolean)}
      */
     private void popSortListGroupVisibility() {
+        showSortListGroup(false);
+
         if (previousSortGroupState.isEmpty()) {
-            showSortListGroup(false);
             return;
         }
 
-        boolean popped = previousSortGroupState.pop();
-        showSortListGroup(popped);
+        previousSortGroupState.pop();
     }
 }

File: app/src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -74,7 +74,8 @@ public void testSyncedFolderDialog() {
                                                                    "Name",
                                                                    MediaFolderType.IMAGE,
                                                                    false,
-                                                                   SubFolderRule.YEAR_MONTH);
+                                                                   SubFolderRule.YEAR_MONTH,
+                                                                   false);
         SyncedFolderPreferencesDialogFragment sut = SyncedFolderPreferencesDialogFragment.newInstance(item, 0);
 
         Intent intent = new Intent(targetContext, SyncedFoldersActivity.class);

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -302,6 +302,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String SYNCED_FOLDER_NAME_COLLISION_POLICY = "name_collision_policy";
         public static final String SYNCED_FOLDER_HIDDEN = "hidden";
         public static final String SYNCED_FOLDER_SUBFOLDER_RULE = "sub_folder_rule";
+        public static final String SYNCED_EXCLUDE_HIDDEN = "exclude_hidden";
 
         // Columns of external links table
         public static final String EXTERNAL_LINKS_ICON_URL = "icon_url";

File: app/src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -178,6 +178,7 @@ private SyncedFolderDisplayItem create(String folderName, boolean enabled) {
                                            2,
                                            MediaFolderType.IMAGE,
                                            false,
-                                           SubFolderRule.YEAR_MONTH);
+                                           SubFolderRule.YEAR_MONTH,
+                                           true);
     }
 }

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -248,6 +248,7 @@ public void testAccountChooserDialog() throws AccountUtils.AccountNotFoundExcept
         accountManager.setUserData(newAccount, AccountUtils.Constants.KEY_USER_ID, "test");
         accountManager.setAuthToken(newAccount, AccountTypeUtils.getAuthTokenTypePass(newAccount.type), "password");
         User newUser = userAccountManager.getUser(newAccount.name).orElseThrow(RuntimeException::new);
+        userAccountManager.setCurrentOwnCloudAccount(newAccount.name);
 
         Account newAccount2 = new Account("user1@nextcloud.localhost", MainApp.getAccountType(targetContext));
         accountManager.addAccountExplicitly(newAccount2, "password", null);

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -147,6 +147,7 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         viewThemeUtils.androidx.themeSwipeRefreshLayout(binding.swipeContainingEmpty);
         viewThemeUtils.androidx.themeSwipeRefreshLayout(binding.swipeContainingList);
 
+        isLoadingActivities = true;
         fetchAndSetData(-1);
 
         binding.swipeContainingList.setOnRefreshListener(() -> {

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -147,6 +147,7 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         viewThemeUtils.androidx.themeSwipeRefreshLayout(binding.swipeContainingEmpty);
         viewThemeUtils.androidx.themeSwipeRefreshLayout(binding.swipeContainingList);
 
+        isLoadingActivities = true;
         fetchAndSetData(-1);
 
         binding.swipeContainingList.setOnRefreshListener(() -> {

File: app/src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -423,7 +423,7 @@ String getMessageForResult(RemoteOperationResult result, Resources res) {
                 message = res.getString(R.string.auth_not_configured_title);
 
             } else if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
-                message = res.getString(R.string.auth_incorrect_path_title);
+                message = res.getString(R.string.file_not_found);
 
             } else if (result.getCode() == ResultCode.OAUTH2_ERROR) {
                 message = res.getString(R.string.auth_oauth_error);

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -1683,7 +1683,7 @@ public static Problem readE2eError(ArbitraryDataProvider arbitraryDataProvider,
                                                   ArbitraryDataProvider.E2E_ERRORS_TIMESTAMP);
 
         if (value > 0 && timestamp > 0) {
-            return new Problem(SendClientDiagnosticRemoteOperation.E2E_ERRORS, value, timestamp);
+            return new Problem(SendClientDiagnosticRemoteOperation.E2EE_ERRORS, value, timestamp);
         } else {
             return null;
         }

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -1683,7 +1683,7 @@ public static Problem readE2eError(ArbitraryDataProvider arbitraryDataProvider,
                                                   ArbitraryDataProvider.E2E_ERRORS_TIMESTAMP);
 
         if (value > 0 && timestamp > 0) {
-            return new Problem(SendClientDiagnosticRemoteOperation.E2E_ERRORS, value, timestamp);
+            return new Problem(SendClientDiagnosticRemoteOperation.E2EE_ERRORS, value, timestamp);
         } else {
             return null;
         }

File: app/src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -21,7 +21,7 @@
 import com.nextcloud.client.account.UserAccountManagerImpl;
 import com.nextcloud.client.device.BatteryStatus;
 import com.nextcloud.client.device.PowerManagementService;
-import com.nextcloud.client.files.upload.FileUploadWorker;
+import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.network.Connectivity;
 import com.nextcloud.client.network.ConnectivityService;
 import com.nextcloud.client.preferences.AppPreferencesImpl;

File: app/src/androidTest/java/com/owncloud/android/AbstractOnServerIT.java
Patch:
@@ -13,7 +13,7 @@
 import com.nextcloud.client.account.UserAccountManagerImpl;
 import com.nextcloud.client.device.BatteryStatus;
 import com.nextcloud.client.device.PowerManagementService;
-import com.nextcloud.client.files.upload.FileUploadWorker;
+import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.network.Connectivity;
 import com.nextcloud.client.network.ConnectivityService;
 import com.nextcloud.java.util.Optional;

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -24,7 +24,7 @@
 import com.nextcloud.client.account.UserAccountManagerImpl;
 import com.nextcloud.client.device.BatteryStatus;
 import com.nextcloud.client.device.PowerManagementService;
-import com.nextcloud.client.files.upload.FileUploadWorker;
+import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.network.Connectivity;
 import com.nextcloud.client.network.ConnectivityService;
 import com.owncloud.android.datamodel.OCFile;

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -43,7 +43,6 @@
 import com.google.android.material.snackbar.Snackbar;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
-import com.nextcloud.client.files.uploader.FileUploadHelper;
 import com.nextcloud.client.jobs.BackgroundJobManager;
 import com.nextcloud.client.jobs.download.FileDownloadWorker;
 import com.nextcloud.client.jobs.upload.FileUploadHelper;

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -47,7 +47,6 @@
 
 import com.nextcloud.client.account.CurrentAccountProvider;
 import com.nextcloud.client.account.User;
-import com.nextcloud.client.files.uploader.FileUploadHelper;
 import com.nextcloud.client.jobs.BackgroundJobManager;
 import com.nextcloud.client.jobs.download.FileDownloadHelper;
 import com.nextcloud.client.jobs.upload.FileUploadHelper;

File: app/src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -22,7 +22,7 @@
 
 package com.owncloud.android.ui.activity;
 
-import com.nextcloud.client.files.upload.FileUploadWorker;
+import com.nextcloud.client.jobs.upload.FileUploadWorker;
 import com.nextcloud.client.preferences.SubFolderRule;
 import com.owncloud.android.datamodel.MediaFolderType;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -997,7 +997,8 @@ public void cancelTransference(OCFile file) {
         }
 
         if (FileDownloadHelper.Companion.instance().isDownloading(currentUser, file)) {
-            FileDownloadHelper.Companion.instance().cancelPendingOrCurrentDownloads(currentUser, file);
+            List<OCFile> files = fileActivity.getStorageManager().getAllFilesRecursivelyInsideFolder(file);
+            FileDownloadHelper.Companion.instance().cancelPendingOrCurrentDownloads(currentUser, files);
         }
 
         FileUploaderBinder uploaderBinder = fileActivity.getFileUploaderBinder();

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -99,7 +99,7 @@ public DownloadFileOperation(User user, OCFile file, Context context) {
         this(user, file, null, null, null, context, DownloadType.DOWNLOAD);
     }
 
-    public void cancel(String accountName, long fileId) {
+    public void cancelMatchingOperation(String accountName, long fileId) {
         if (getFile().getFileId() == fileId && getUser().getAccountName().equals(accountName)) {
             cancel();
         }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -287,7 +287,7 @@ protected void onCreate(Bundle savedInstanceState) {
         checkStoragePath();
 
         initSyncBroadcastReceiver();
-        observeDownloadWorkerState();
+        observeWorkerState();
     }
 
     @SuppressWarnings("unchecked")
@@ -1562,7 +1562,7 @@ public boolean isDrawerIndicatorAvailable() {
         return isRoot(getCurrentDir());
     }
 
-    private void observeDownloadWorkerState() {
+    private void observeWorkerState() {
         WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -44,7 +44,6 @@
 
 import java.io.File;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Vector;
@@ -444,7 +443,6 @@ private void syncContents() throws OperationCancelledException {
         startContentSynchronizations(mFilesToSyncContents);
     }
 
-    public static HashMap<Long, Boolean> folderDownloadStatusPair = new HashMap<>();
 
     private void startDirectDownloads() {
         FileDownloadHelper.Companion.instance().downloadFolder(mLocalFolder,

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1563,7 +1563,7 @@ public boolean isDrawerIndicatorAvailable() {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 handleDownloadWorkerState();

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -518,7 +518,7 @@ public void onOptionItemClicked(User user, View view) {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 workerAccountName = ((WorkerState.Download) state).getUser().getAccountName();

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -307,7 +307,7 @@ private void onSynchronizeFileOperationFinish(RemoteOperationResult result) {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 isDownloadWorkStarted = true;

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -445,14 +445,12 @@ private void syncContents() throws OperationCancelledException {
     }
 
     private void startDirectDownloads() throws OperationCancelledException {
-        FileDownloadHelper downloadHelper = new FileDownloadHelper();
-
         for (OCFile file : mFilesForDirectDownload) {
             synchronized(mCancellationRequested) {
                 if (mCancellationRequested.get()) {
                     throw new OperationCancelledException();
                 }
-                downloadHelper.downloadFile(user, file);
+                FileDownloadHelper.Companion.instance().downloadFile(user, file);
             }
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -166,7 +166,6 @@ public abstract class FileActivity extends DrawerActivity
 
     private boolean mResumed;
 
-    protected FileDownloadHelper fileDownloadHelper = new FileDownloadHelper();
     protected FileDownloadWorker.FileDownloadProgressListener fileDownloadProgressListener;
     protected FileUploaderBinder mUploaderBinder;
     private ServiceConnection mUploadServiceConnection;
@@ -235,7 +234,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 Context.BIND_AUTO_CREATE);
 
         if (user != null) {
-            new FileDownloadHelper().downloadFile(user, mFile);
+            FileDownloadHelper.Companion.instance().downloadFile(user, mFile);
         }
 
         mUploadServiceConnection = newTransferenceServiceConnection();

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -41,6 +41,7 @@
 import com.google.common.collect.Sets;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.files.downloader.FileDownloadHelper;
 import com.nextcloud.client.jobs.BackgroundJobManager;
 import com.nextcloud.client.onboarding.FirstRunActivity;
 import com.nextcloud.java.util.Optional;
@@ -341,7 +342,7 @@ public void run(AccountManagerFuture<Boolean> future) {
                     mUploaderBinder.cancel(accountName);
                 }
 
-                fileDownloadHelper.cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
+                FileDownloadHelper.Companion.instance().cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
             }
 
             User currentUser = getUserAccountManager().getUser();
@@ -431,7 +432,7 @@ private void performAccountRemoval(User user) {
             mUploaderBinder.cancel(user);
         }
 
-        fileDownloadHelper.cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
+        FileDownloadHelper.Companion.instance().cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
 
         backgroundJobManager.startAccountRemovalJob(user.getAccountName(), false);
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1587,16 +1587,17 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             } else {
                 return;
             }
+
             // a new chance to get the mDownloadBinder through
             // getFileDownloadBinder() - THIS IS A MESS
             OCFileListFragment listOfFiles = getListOfFilesFragment();
             if (listOfFiles != null && (getIntent() == null || (getIntent() != null &&
                 IntentExtensionsKt.getParcelableArgument(getIntent(), EXTRA_FILE, OCFile.class) == null))) {
                 listOfFiles.listDirectory(MainApp.isOnlyOnDevice(), false);
             }
+
             Fragment leftFragment = getLeftFragment();
-            if (leftFragment instanceof FileDetailFragment) {
-                FileDetailFragment detailFragment = (FileDetailFragment) leftFragment;
+            if (leftFragment instanceof FileDetailFragment detailFragment) {
                 detailFragment.listenForTransferProgress();
                 detailFragment.updateFileDetails(false, false);
             }

File: app/src/main/java/com/owncloud/android/ui/activity/ComponentsGetter.java
Patch:
@@ -30,7 +30,7 @@ public interface ComponentsGetter {
 
     /**
      * To be invoked when the parent activity is fully created to get a reference
-     * to the FileDownloader service API.
+     * to the FileDownloadWorker.
      */
     public FilesDownloadWorker.FileDownloaderBinder getFileDownloaderBinder();
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -94,6 +94,7 @@
 import com.owncloud.android.lib.resources.files.SearchRemoteOperation;
 import com.owncloud.android.operations.CopyFileOperation;
 import com.owncloud.android.operations.CreateFolderOperation;
+import com.owncloud.android.operations.DownloadType;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RefreshFolderOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
@@ -1957,7 +1958,7 @@ public void run() {
     private void requestForDownload(OCFile file, String downloadBehaviour, String packageName, String activityName) {
         final User currentUser = getUser().orElseThrow(RuntimeException::new);
         if (!mDownloaderBinder.isDownloading(currentUser, mWaitingToPreview)) {
-            new FilesDownloadHelper().downloadFile(currentUser, file, downloadBehaviour, null, activityName, packageName, null);
+            new FilesDownloadHelper().downloadFile(currentUser, file, downloadBehaviour, DownloadType.DOWNLOAD, activityName, packageName, null);
         }
     }
 

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -99,7 +99,7 @@ public DownloadFileOperation(User user, OCFile file, Context context) {
         this(user, file, null, null, null, context, DownloadType.DOWNLOAD);
     }
 
-    public void cancel(String accountName, long fileId) {
+    public void cancelMatchingOperation(String accountName, long fileId) {
         if (getFile().getFileId() == fileId && getUser().getAccountName().equals(accountName)) {
             cancel();
         }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -287,7 +287,7 @@ protected void onCreate(Bundle savedInstanceState) {
         checkStoragePath();
 
         initSyncBroadcastReceiver();
-        observeDownloadWorkerState();
+        observeWorkerState();
     }
 
     @SuppressWarnings("unchecked")
@@ -1562,7 +1562,7 @@ public boolean isDrawerIndicatorAvailable() {
         return isRoot(getCurrentDir());
     }
 
-    private void observeDownloadWorkerState() {
+    private void observeWorkerState() {
         WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -44,7 +44,6 @@
 
 import java.io.File;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Vector;
@@ -444,7 +443,6 @@ private void syncContents() throws OperationCancelledException {
         startContentSynchronizations(mFilesToSyncContents);
     }
 
-    public static HashMap<Long, Boolean> folderDownloadStatusPair = new HashMap<>();
 
     private void startDirectDownloads() {
         FileDownloadHelper.Companion.instance().downloadFolder(mLocalFolder,

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1563,7 +1563,7 @@ public boolean isDrawerIndicatorAvailable() {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 handleDownloadWorkerState();

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -518,7 +518,7 @@ public void onOptionItemClicked(User user, View view) {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 workerAccountName = ((WorkerState.Download) state).getUser().getAccountName();

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -307,7 +307,7 @@ private void onSynchronizeFileOperationFinish(RemoteOperationResult result) {
     }
 
     private void observeWorkerState() {
-        WorkerStateLiveData.Companion.getInstance().observe(this, state -> {
+        WorkerStateLiveData.Companion.instance().observe(this, state -> {
             if (state instanceof WorkerState.Download) {
                 Log_OC.d(TAG, "Download worker started");
                 isDownloadWorkStarted = true;

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -445,14 +445,12 @@ private void syncContents() throws OperationCancelledException {
     }
 
     private void startDirectDownloads() throws OperationCancelledException {
-        FileDownloadHelper downloadHelper = new FileDownloadHelper();
-
         for (OCFile file : mFilesForDirectDownload) {
             synchronized(mCancellationRequested) {
                 if (mCancellationRequested.get()) {
                     throw new OperationCancelledException();
                 }
-                downloadHelper.downloadFile(user, file);
+                FileDownloadHelper.Companion.instance().downloadFile(user, file);
             }
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -166,7 +166,6 @@ public abstract class FileActivity extends DrawerActivity
 
     private boolean mResumed;
 
-    protected FileDownloadHelper fileDownloadHelper = new FileDownloadHelper();
     protected FileDownloadWorker.FileDownloadProgressListener fileDownloadProgressListener;
     protected FileUploaderBinder mUploaderBinder;
     private ServiceConnection mUploadServiceConnection;
@@ -235,7 +234,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 Context.BIND_AUTO_CREATE);
 
         if (user != null) {
-            new FileDownloadHelper().downloadFile(user, mFile);
+            FileDownloadHelper.Companion.instance().downloadFile(user, mFile);
         }
 
         mUploadServiceConnection = newTransferenceServiceConnection();

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -41,6 +41,7 @@
 import com.google.common.collect.Sets;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.files.downloader.FileDownloadHelper;
 import com.nextcloud.client.jobs.BackgroundJobManager;
 import com.nextcloud.client.onboarding.FirstRunActivity;
 import com.nextcloud.java.util.Optional;
@@ -341,7 +342,7 @@ public void run(AccountManagerFuture<Boolean> future) {
                     mUploaderBinder.cancel(accountName);
                 }
 
-                fileDownloadHelper.cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
+                FileDownloadHelper.Companion.instance().cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
             }
 
             User currentUser = getUserAccountManager().getUser();
@@ -431,7 +432,7 @@ private void performAccountRemoval(User user) {
             mUploaderBinder.cancel(user);
         }
 
-        fileDownloadHelper.cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
+        FileDownloadHelper.Companion.instance().cancelAllDownloadsForAccount(workerAccountName, workerCurrentDownload);
 
         backgroundJobManager.startAccountRemovalJob(user.getAccountName(), false);
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -166,6 +166,7 @@ public abstract class FileActivity extends DrawerActivity
 
     private boolean mResumed;
 
+    protected FileDownloadHelper fileDownloadHelper = new FileDownloadHelper();
     protected FileDownloadWorker.FileDownloaderBinder mDownloaderBinder;
     protected FileUploaderBinder mUploaderBinder;
     private ServiceConnection mUploadServiceConnection;

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -47,6 +47,7 @@
 
 import com.nextcloud.client.account.CurrentAccountProvider;
 import com.nextcloud.client.account.User;
+import com.nextcloud.client.files.downloader.FileDownloadHelper;
 import com.nextcloud.client.files.downloader.FileDownloadWorker;
 import com.nextcloud.client.jobs.BackgroundJobManager;
 import com.nextcloud.client.network.ConnectivityService;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -131,6 +131,7 @@ public class PreviewMediaFragment extends FileFragment implements OnTouchListene
 
     private boolean autoplay;
     private boolean isLivePhoto;
+    private final FileDownloadHelper downloadHelper = new FileDownloadHelper();
     private boolean prepared;
     private PlayerServiceConnection mediaPlayerServiceConnection;
 
@@ -478,8 +479,8 @@ public void onFileActionChosen(final int itemId) {
                                                                     getView(),
                                                                     backgroundJobManager);
         } else if (itemId == R.id.action_download_file) {
-            if (!containerActivity.getFileDownloaderBinder().isDownloading(user, getFile())) {
-                new FileDownloadHelper().downloadFile(user, getFile());
+            if (!downloadHelper.isDownloading(user, getFile())) {
+                downloadHelper.downloadFile(user, getFile());
             }
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1587,16 +1587,17 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             } else {
                 return;
             }
+
             // a new chance to get the mDownloadBinder through
             // getFileDownloadBinder() - THIS IS A MESS
             OCFileListFragment listOfFiles = getListOfFilesFragment();
             if (listOfFiles != null && (getIntent() == null || (getIntent() != null &&
                 IntentExtensionsKt.getParcelableArgument(getIntent(), EXTRA_FILE, OCFile.class) == null))) {
                 listOfFiles.listDirectory(MainApp.isOnlyOnDevice(), false);
             }
+
             Fragment leftFragment = getLeftFragment();
-            if (leftFragment instanceof FileDetailFragment) {
-                FileDetailFragment detailFragment = (FileDetailFragment) leftFragment;
+            if (leftFragment instanceof FileDetailFragment detailFragment) {
                 detailFragment.listenForTransferProgress();
                 detailFragment.updateFileDetails(false, false);
             }

File: app/src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -260,7 +260,7 @@ public void cancel() {
     }
 
 
-    public void addDatatransferProgressListener (OnDatatransferProgressListener listener) {
+    public void addDownloadDataTransferProgressListener(OnDatatransferProgressListener listener) {
         synchronized (dataTransferListeners) {
             dataTransferListeners.add(listener);
         }

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -402,7 +402,7 @@ private boolean anyFileDownloading(FileDownloadWorker.FileDownloaderBinder downl
         boolean downloading = false;
         if (downloaderBinder != null) {
             for (Iterator<OCFile> iterator = files.iterator(); !downloading && iterator.hasNext(); ) {
-                downloading = downloaderBinder.isDownloading(user, iterator.next());
+                downloading = downloaderBinder.isDownloading();
             }
         }
         return downloading;

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1884,8 +1884,7 @@ public void onTransferStateChanged(OCFile file, boolean downloading, boolean upl
 
     private void requestForDownload() {
         User user = getUser().orElseThrow(RuntimeException::new);
-        //if (!mWaitingToPreview.isDownloading()) {
-        if (!mDownloaderBinder.isDownloading(user, mWaitingToPreview)) {
+        if (!mDownloaderBinder.isDownloading()) {
             new FileDownloadHelper().downloadFile(user, mWaitingToPreview);
         }
     }
@@ -1957,7 +1956,7 @@ public void run() {
 
     private void requestForDownload(OCFile file, String downloadBehaviour, String packageName, String activityName) {
         final User currentUser = getUser().orElseThrow(RuntimeException::new);
-        if (!mDownloaderBinder.isDownloading(currentUser, mWaitingToPreview)) {
+        if (!mDownloaderBinder.isDownloading()) {
             new FileDownloadHelper().downloadFile(currentUser, file, downloadBehaviour, DownloadType.DOWNLOAD, activityName, packageName, null);
         }
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -537,7 +537,7 @@ public void updateFileDetails(boolean transferring, boolean refresh) {
             FileDownloadWorker.FileDownloaderBinder downloaderBinder = containerActivity.getFileDownloaderBinder();
             FileUploaderBinder uploaderBinder = containerActivity.getFileUploaderBinder();
             if (transferring
-                || (downloaderBinder != null && downloaderBinder.isDownloading(user, file))
+                || (downloaderBinder != null && downloaderBinder.isDownloading())
                 || (uploaderBinder != null && uploaderBinder.isUploading(user, file))) {
                 setButtonsForTransferring();
 
@@ -662,7 +662,7 @@ private void setButtonsForTransferring() {
             FileDownloadWorker.FileDownloaderBinder downloaderBinder = containerActivity.getFileDownloaderBinder();
             FileUploaderBinder uploaderBinder = containerActivity.getFileUploaderBinder();
             //if (getFile().isDownloading()) {
-            if (downloaderBinder != null && downloaderBinder.isDownloading(user, getFile())) {
+            if (downloaderBinder != null && downloaderBinder.isDownloading()) {
                 binding.progressText.setText(R.string.downloader_download_in_progress_ticker);
             } else {
                 if (uploaderBinder != null && uploaderBinder.isUploading(user, getFile())) {

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -998,8 +998,8 @@ public void cancelTransference(OCFile file) {
 
         // for both files and folders
         FileDownloadWorker.FileDownloaderBinder downloaderBinder = fileActivity.getFileDownloaderBinder();
-        if (downloaderBinder != null && downloaderBinder.isDownloading(currentUser, file)) {
-            downloaderBinder.cancelPendingOrCurrentDownloads(currentUser.toPlatformAccount(), file);
+        if (downloaderBinder != null && downloaderBinder.isDownloading()) {
+            downloaderBinder.cancelPendingOrCurrentDownloads();
         }
         FileUploaderBinder uploaderBinder = fileActivity.getFileUploaderBinder();
         if (uploaderBinder != null && uploaderBinder.isUploading(currentUser, file)) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -411,7 +411,7 @@ public void requestForDownload(OCFile file, String downloadBehaviour) {
         if (mDownloaderBinder == null) {
             Log_OC.d(TAG, "requestForDownload called without binder to download service");
 
-        } else if (!mDownloaderBinder.isDownloading(getUserAccountManager().getUser(), file)) {
+        } else if (!mDownloaderBinder.isDownloading()) {
             final User user = getUser().orElseThrow(RuntimeException::new);
             new FileDownloadHelper().downloadFile(user, file, downloadBehaviour);
         }

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -478,7 +478,7 @@ public void onFileActionChosen(final int itemId) {
                                                                     getView(),
                                                                     backgroundJobManager);
         } else if (itemId == R.id.action_download_file) {
-            if (!containerActivity.getFileDownloaderBinder().isDownloading(user, getFile())) {
+            if (!containerActivity.getFileDownloaderBinder().isDownloading()) {
                 new FileDownloadHelper().downloadFile(user, getFile());
             }
         }

File: app/src/main/java/com/owncloud/android/ui/activity/ComponentsGetter.java
Patch:
@@ -30,7 +30,7 @@ public interface ComponentsGetter {
 
     /**
      * To be invoked when the parent activity is fully created to get a reference
-     * to the FileDownloader service API.
+     * to the FileDownloadWorker.
      */
     public FilesDownloadWorker.FileDownloaderBinder getFileDownloaderBinder();
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -94,6 +94,7 @@
 import com.owncloud.android.lib.resources.files.SearchRemoteOperation;
 import com.owncloud.android.operations.CopyFileOperation;
 import com.owncloud.android.operations.CreateFolderOperation;
+import com.owncloud.android.operations.DownloadType;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RefreshFolderOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
@@ -1957,7 +1958,7 @@ public void run() {
     private void requestForDownload(OCFile file, String downloadBehaviour, String packageName, String activityName) {
         final User currentUser = getUser().orElseThrow(RuntimeException::new);
         if (!mDownloaderBinder.isDownloading(currentUser, mWaitingToPreview)) {
-            new FilesDownloadHelper().downloadFile(currentUser, file, downloadBehaviour, null, activityName, packageName, null);
+            new FilesDownloadHelper().downloadFile(currentUser, file, downloadBehaviour, DownloadType.DOWNLOAD, activityName, packageName, null);
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1395,7 +1395,7 @@ public void onReceive(Context context, Intent intent) {
                 if (uploadWasFine) {
                     OCFile ocFile = getFile();
                     if (PreviewImageFragment.canBePreviewed(ocFile)) {
-                        startImagePreview(getFile(),true);
+                        startImagePreview(getFile(), true);
                     } else if (PreviewTextFileFragment.canBePreviewed(ocFile)) {
                         startTextPreview(ocFile, true);
                     }
@@ -2044,7 +2044,7 @@ public void startMediaPreview(OCFile file, long startPlaybackPosition, boolean a
         }
         if (showPreview && file.isDown() && !file.isDownloading() || streamMedia) {
             if (showInActivity) {
-                startMediaActivity(file, startPlaybackPosition, autoplay, showPreview, streamMedia, user);
+                startMediaActivity(file, startPlaybackPosition, autoplay, user);
             } else {
                 configureToolbarForPreview(file);
                 Fragment mediaFragment = PreviewMediaFragment.newInstance(file, user.get(), startPlaybackPosition, autoplay, false);
@@ -2060,7 +2060,7 @@ public void startMediaPreview(OCFile file, long startPlaybackPosition, boolean a
         }
     }
 
-    private void startMediaActivity(OCFile file, long startPlaybackPosition, boolean autoplay, boolean showPreview, boolean streamMedia, Optional<User> user) {
+    private void startMediaActivity(OCFile file, long startPlaybackPosition, boolean autoplay, Optional<User> user) {
         Intent previewMediaIntent = new Intent(this, PreviewMediaActivity.class);
         previewMediaIntent.putExtra(PreviewMediaActivity.EXTRA_FILE, file);
         previewMediaIntent.putExtra(PreviewMediaActivity.EXTRA_USER, user.get());

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -82,6 +82,7 @@
 import javax.inject.Inject;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.OptIn;
 import androidx.annotation.StringRes;
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.app.AppCompatActivity;
@@ -96,7 +97,7 @@
 import androidx.media3.common.util.UnstableApi;
 import androidx.media3.exoplayer.ExoPlayer;
 
-@UnstableApi
+@OptIn(markerClass = UnstableApi.class)
 /**
  * This fragment shows a preview of a downloaded media file (audio or video).
  * <p>

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -374,9 +374,7 @@ public void onStart() {
                                 playVideo();
                             });
                         } catch (ClientFactory.CreationException e) {
-                            handler.post(() -> {
-                                Log_OC.e(TAG, "error setting up ExoPlayer", e);
-                            });
+                            handler.post(() -> Log_OC.e(TAG, "error setting up ExoPlayer", e));
                         }
                     });
                 }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -73,7 +73,6 @@
 import com.nextcloud.java.util.Optional;
 import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.extensions.IntentExtensionsKt;
-import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.view.FastScrollUtils;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
@@ -1086,7 +1085,6 @@ protected void onResume() {
                 startFile = fileArgs;
                 setFile(startFile);
             }
-            setFile(startFile);
         }
 
         // refresh list of files

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -55,6 +55,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 /**

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -429,7 +429,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
             ocFileListDelegate.bindGridViewHolder(gridViewHolder, file, searchType);
-            gridViewHolder.checkVisibilityOfFileFeaturesLayout();
             checkVisibilityOfMoreButtons(gridViewHolder);
 
             if (holder instanceof ListItemViewHolder) {
@@ -438,7 +437,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
             if (holder instanceof ListGridItemViewHolder) {
                 bindListGridItemViewHolder((ListGridItemViewHolder) holder, file);
-                ((ListGridItemViewHolder) holder).checkVisibilityOfFileFeaturesLayout();
                 checkVisibilityOfMoreButtons((ListGridItemViewHolder) holder);
             }
 

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -430,6 +430,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
             ocFileListDelegate.bindGridViewHolder(gridViewHolder, file, searchType);
+            gridViewHolder.checkVisibilityOfFileFeaturesLayout();
 
             if (holder instanceof ListItemViewHolder) {
                 bindListItemViewHolder((ListItemViewHolder) gridViewHolder, file);

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -977,9 +977,9 @@ public static void stopShimmer(@Nullable LoaderImageView thumbnailShimmer, Image
     }
 
     private static void configShimmerGridImageSize(LoaderImageView thumbnailShimmer, float gridColumns) {
-        FrameLayout.LayoutParams targetLayoutParams = (FrameLayout.LayoutParams) thumbnailShimmer.getLayoutParams();
-
         try {
+            FrameLayout.LayoutParams targetLayoutParams = (FrameLayout.LayoutParams) thumbnailShimmer.getLayoutParams();
+
             final Point screenSize = getScreenSize(thumbnailShimmer.getContext());
             final int marginLeftAndRight = targetLayoutParams.leftMargin + targetLayoutParams.rightMargin;
             final int size = Math.round(screenSize.x / gridColumns - marginLeftAndRight);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -73,7 +73,6 @@
 import com.nextcloud.java.util.Optional;
 import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.extensions.IntentExtensionsKt;
-import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.view.FastScrollUtils;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
@@ -1086,7 +1085,6 @@ protected void onResume() {
                 startFile = fileArgs;
                 setFile(startFile);
             }
-            setFile(startFile);
         }
 
         // refresh list of files

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -318,6 +318,7 @@ private void showBottomSheet() {
     public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
         if (requestCode == SELECT_LOCATION_REQUEST_CODE && data != null && FolderPickerActivity.EXTRA_FOLDER != null) {
             OCFile chosenFolder = IntentExtensionsKt.getParcelableArgument(data, FolderPickerActivity.EXTRA_FOLDER, OCFile.class);
+
             if (chosenFolder != null) {
                 preferences.setLastSelectedMediaFolder(chosenFolder.getRemotePath());
                 searchAndDisplayAfterChangingFolder();

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -48,6 +48,7 @@
 import com.nextcloud.utils.EditorUtils;
 import com.nextcloud.utils.extensions.BundleExtensionsKt;
 import com.nextcloud.utils.extensions.IntentExtensionsKt;
+import com.nextcloud.utils.extensions.IntentExtensionsKt;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AuthenticatorActivity;

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -429,7 +429,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
             ocFileListDelegate.bindGridViewHolder(gridViewHolder, file, searchType);
-            gridViewHolder.checkVisibilityOfFileFeaturesLayout();
             checkVisibilityOfMoreButtons(gridViewHolder);
 
             if (holder instanceof ListItemViewHolder) {
@@ -438,7 +437,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
             if (holder instanceof ListGridItemViewHolder) {
                 bindListGridItemViewHolder((ListGridItemViewHolder) holder, file);
-                ((ListGridItemViewHolder) holder).checkVisibilityOfFileFeaturesLayout();
                 checkVisibilityOfMoreButtons((ListGridItemViewHolder) holder);
             }
 

File: app/src/main/java/com/owncloud/android/ui/asynctasks/FetchRemoteFileTask.java
Patch:
@@ -43,6 +43,7 @@ public class FetchRemoteFileTask extends AsyncTask<Void, Void, String> {
     private final String fileId;
     private final FileDataStorageManager storageManager;
     private final FileDisplayActivity fileDisplayActivity;
+    private OCFile ocFile;
 
     public FetchRemoteFileTask(User user,
                                String fileId,
@@ -84,7 +85,7 @@ protected String doInBackground(Void... voids) {
 
             RemoteFile remoteFile = (RemoteFile) result.getData().get(0);
 
-            OCFile ocFile = FileStorageUtils.fillOCFile(remoteFile);
+            ocFile = FileStorageUtils.fillOCFile(remoteFile);
             FileStorageUtils.searchForLocalFileInDefaultPath(ocFile, user.getAccountName());
             ocFile = storageManager.saveFileWithParent(ocFile, fileDisplayActivity);
 
@@ -118,6 +119,6 @@ protected String doInBackground(Void... voids) {
     protected void onPostExecute(String message) {
         super.onPostExecute(message);
 
-        fileDisplayActivity.showFile(message);
+        fileDisplayActivity.showFile(ocFile, message);
     }
 }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -430,6 +430,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
             ocFileListDelegate.bindGridViewHolder(gridViewHolder, file, searchType);
+            gridViewHolder.checkVisibilityOfFileFeaturesLayout();
 
             if (holder instanceof ListItemViewHolder) {
                 bindListItemViewHolder((ListItemViewHolder) gridViewHolder, file);

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -978,9 +978,9 @@ public static void stopShimmer(@Nullable LoaderImageView thumbnailShimmer, Image
     }
 
     private static void configShimmerGridImageSize(LoaderImageView thumbnailShimmer, float gridColumns) {
-        FrameLayout.LayoutParams targetLayoutParams = (FrameLayout.LayoutParams) thumbnailShimmer.getLayoutParams();
-
         try {
+            FrameLayout.LayoutParams targetLayoutParams = (FrameLayout.LayoutParams) thumbnailShimmer.getLayoutParams();
+
             final Point screenSize = getScreenSize(thumbnailShimmer.getContext());
             final int marginLeftAndRight = targetLayoutParams.leftMargin + targetLayoutParams.rightMargin;
             final int size = Math.round(screenSize.x / gridColumns - marginLeftAndRight);

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -134,6 +134,7 @@ public class OCFileListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHol
     private final SimpleDateFormat dateFormat = new SimpleDateFormat("MMMM yyyy", Locale.getDefault());
     private final ViewThemeUtils viewThemeUtils;
     private SearchType searchType;
+    private final long footerId = UUID.randomUUID().getLeastSignificantBits();
 
     public OCFileListAdapter(
         Activity activity,
@@ -294,7 +295,7 @@ public void setEncryptionAttributeForItemID(String fileId, boolean encrypted) {
     public long getItemId(int position) {
         boolean isFilesNotEmpty = mFiles == null || mFiles.size() <= position;
         return (isFilesNotEmpty)
-            ? UUID.randomUUID().getLeastSignificantBits()
+            ? footerId
             : mFiles.get(position).getFileId();
     }
 

File: app/src/main/java/com/nextcloud/client/network/ConnectivityService.java
Patch:
@@ -25,6 +25,7 @@
  * and server reachability.
  */
 public interface ConnectivityService {
+    boolean isConnected();
 
     /**
      * Check if server is accessible by issuing HTTP status check request.

File: app/src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -219,7 +219,6 @@ protected final void showInfoBox(@StringRes int text) {
     /**
      * Hides the toolbar's info box.
      */
-    @VisibleForTesting
     public final void hideInfoBox() {
         mInfoBox.setVisibility(View.GONE);
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -561,8 +561,7 @@ public void uploadFiles() {
             getActivity(),
             ((FileActivity) getActivity()).getUser().orElseThrow(RuntimeException::new),
             FileDisplayActivity.REQUEST_CODE__SELECT_FILES_FROM_FILE_SYSTEM,
-                                                        getCurrentFile().isEncrypted()
-                                                        );
+            getCurrentFile().isEncrypted());
     }
 
     @Override
@@ -976,6 +975,8 @@ public boolean onLongItemClicked(OCFile file) {
 
     @Override
     public void onItemClicked(OCFile file) {
+        ((FileActivity) mContainerActivity).checkInternetConnection();
+
         if (getCommonAdapter().isMultiSelect()) {
             toggleItemToCheckedList(file);
         } else {

File: app/src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1447,10 +1447,10 @@ private void cancelOldErrorNotification(UploadFileOperation uploadFileOperation)
             mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
         }
 
-        if (uploadFileOperation == null) return;
+        if (uploadFileOperation == null || uploadFileOperation.getOldFile() == null) return;
         //cancel for old file because of file conflicts
         mNotificationManager.cancel(NotificationUtils.createUploadNotificationTag(uploadFileOperation.getOldFile()),
-                                   NOTIFICATION_ERROR_ID);
+                                    NOTIFICATION_ERROR_ID);
         mNotificationManager.cancel(NotificationUtils.createUploadNotificationTag(uploadFileOperation.getFile()),
                                    NOTIFICATION_ERROR_ID);
     }

File: app/src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1262,6 +1262,7 @@ public boolean isUploading(User user, OCFile file) {
             }
         }
 
+        @SuppressFBWarnings("NP")
         public boolean isUploadingNow(OCUpload upload) {
             if (useFilesUploadWorker(getApplicationContext())){
                 UploadFileOperation currentUploadFileOperation = FilesUploadWorker.Companion.getCurrentUploadFileOperation();

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -205,7 +205,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             return true;
         } else {
-            return onOptionsItemSelected(item);
+            return super.onOptionsItemSelected(item);
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -223,7 +223,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             return true;
         } else {
-            return onOptionsItemSelected(item);
+            return super.onOptionsItemSelected(item);
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -38,6 +38,7 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -360,7 +361,7 @@ public void onStart() {
                 if (exoPlayer != null) {
                     playVideo();
                 } else {
-                    final Handler handler = new Handler();
+                    final Handler handler = new Handler(Looper.getMainLooper());
                     Executors.newSingleThreadExecutor().execute(() -> {
                         try {
                             nextcloudClient = clientFactory.createNextcloudClient(accountManager.getUser());

File: app/src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -711,6 +711,9 @@ private String getUploadFailedStatusText(UploadResult result) {
             case LOCAL_STORAGE_NOT_COPIED:
                 status = parentActivity.getString(R.string.upload_local_storage_not_copied);
                 break;
+            case QUOTA_EXCEEDED:
+                status = parentActivity.getString(R.string.upload_quota_exceeded);
+                break;
             default:
                 status = parentActivity.getString(R.string.upload_unknown_error);
                 break;

File: app/src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -467,7 +467,7 @@ protected void restoreIndexAndTopPosition() {
     private void scrollToPosition(int position) {
         LinearLayoutManager linearLayoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();
 
-        if (mRecyclerView != null) {
+        if (linearLayoutManager != null) {
             int visibleItemCount = linearLayoutManager.findLastCompletelyVisibleItemPosition() -
                 linearLayoutManager.findFirstCompletelyVisibleItemPosition();
             linearLayoutManager.scrollToPositionWithOffset(position, (visibleItemCount / 2) * mHeightCell);

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -66,6 +66,7 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.lib.resources.files.model.ServerFileInterface;
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.operations.CreateShareViaLinkOperation;
@@ -709,7 +710,7 @@ public static void copyAndShareFileLink(FileActivity activity,
         snackbar.show();
     }
 
-    public static void showShareLinkDialog(FileActivity activity, OCFile file, String link) {
+    public static void showShareLinkDialog(FileActivity activity, ServerFileInterface file, String link) {
         // Create dialog to allow the user choose an app to send the link
         Intent intentToShareLink = new Intent(Intent.ACTION_SEND);
 
@@ -866,8 +867,7 @@ FileDetailSharingFragment getShareFileFragment() {
 
         if (fragment instanceof FileDetailSharingFragment) {
             return (FileDetailSharingFragment) fragment;
-        } else if (fragment instanceof FileDetailFragment) {
-            FileDetailFragment fileDetailFragment = (FileDetailFragment) fragment;
+        } else if (fragment instanceof FileDetailFragment fileDetailFragment) {
             return fileDetailFragment.getFileDetailSharingFragment();
         } else {
             return null;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -205,7 +205,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             return true;
         } else {
-            return onOptionsItemSelected(item);
+            return super.onOptionsItemSelected(item);
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupListFragment.java
Patch:
@@ -270,7 +270,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
 
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onMessageEvent(VCardToggleEvent event) {
-        if (event.showRestoreButton) {
+        if (event.getShowRestoreButton()) {
             binding.contactlistRestoreSelectedContainer.setVisibility(View.VISIBLE);
         } else {
             binding.contactlistRestoreSelectedContainer.setVisibility(View.GONE);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -436,6 +436,8 @@ public void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_download_file || itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        }else if(itemId == R.id.action_cancel_sync){
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_set_as_wallpaper) {
             containerActivity.getFileOperationsHelper().setPictureAs(getFile(), getImageView());
         } else if (itemId == R.id.action_export_file) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -482,6 +482,8 @@ public void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        } else if (itemId == R.id.action_cancel_sync) {
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_stream_media) {
             containerActivity.getFileOperationsHelper().streamMediaFile(getFile());
         } else if (itemId == R.id.action_export_file) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -330,6 +330,8 @@ private void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        } else if(itemId == R.id.action_cancel_sync){
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_edit) {
             containerActivity.getFileOperationsHelper().openFileWithTextEditor(getFile(), getContext());
         }

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -129,6 +129,7 @@
  * Contains methods to build the "static" strings. These strings were before constants in different classes
  */
 public class MainApp extends MultiDexApplication implements HasAndroidInjector {
+
     public static final OwnCloudVersion OUTDATED_SERVER_VERSION = NextcloudVersion.nextcloud_23;
     public static final OwnCloudVersion MINIMUM_SUPPORTED_SERVER_VERSION = OwnCloudVersion.nextcloud_16;
 

File: app/src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1052,7 +1052,6 @@ public static void retryUpload(@NonNull Context context,
         i.putExtra(FileUploader.KEY_ACCOUNT, user.toPlatformAccount());
         i.putExtra(FileUploader.KEY_RETRY_UPLOAD, upload);
 
-        // FIXME Conflict files not uploading successfully
         if (useFilesUploadWorker(context)) {
             new FilesUploadHelper().retryUpload(upload, user);
         } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -178,6 +178,8 @@ public OCFileListAdapter(
                                                     viewThemeUtils,
                                                     syncedFolderProvider);
 
+        setHasStableIds(true);
+
         // initialise thumbnails cache on background thread
         new ThumbnailsCacheManager.InitDiskCacheTask().execute();
     }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -178,6 +178,8 @@ public OCFileListAdapter(
                                                     viewThemeUtils,
                                                     syncedFolderProvider);
 
+        setHasStableIds(true);
+
         // initialise thumbnails cache on background thread
         new ThumbnailsCacheManager.InitDiskCacheTask().execute();
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupListFragment.java
Patch:
@@ -270,7 +270,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
 
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onMessageEvent(VCardToggleEvent event) {
-        if (event.showRestoreButton) {
+        if (event.getShowRestoreButton()) {
             binding.contactlistRestoreSelectedContainer.setVisibility(View.VISIBLE);
         } else {
             binding.contactlistRestoreSelectedContainer.setVisibility(View.GONE);

File: app/src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -711,6 +711,9 @@ private String getUploadFailedStatusText(UploadResult result) {
             case LOCAL_STORAGE_NOT_COPIED:
                 status = parentActivity.getString(R.string.upload_local_storage_not_copied);
                 break;
+            case QUOTA_EXCEEDED:
+                status = parentActivity.getString(R.string.upload_quota_exceeded);
+                break;
             default:
                 status = parentActivity.getString(R.string.upload_unknown_error);
                 break;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -412,6 +412,8 @@ public void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_download_file || itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        }else if(itemId == R.id.action_cancel_sync){
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_set_as_wallpaper) {
             containerActivity.getFileOperationsHelper().setPictureAs(getFile(), getImageView());
         } else if (itemId == R.id.action_export_file) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -450,6 +450,8 @@ public void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        } else if (itemId == R.id.action_cancel_sync) {
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_stream_media) {
             containerActivity.getFileOperationsHelper().streamMediaFile(getFile());
         } else if (itemId == R.id.action_export_file) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -330,6 +330,8 @@ private void onFileActionChosen(final int itemId) {
             seeDetails();
         } else if (itemId == R.id.action_sync_file) {
             containerActivity.getFileOperationsHelper().syncFile(getFile());
+        } else if(itemId == R.id.action_cancel_sync){
+            containerActivity.getFileOperationsHelper().cancelTransference(getFile());
         } else if (itemId == R.id.action_edit) {
             containerActivity.getFileOperationsHelper().openFileWithTextEditor(getFile(), getContext());
         }

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1758,7 +1758,7 @@ public void saveConflict(OCFile ocFile, String etagInConflict) {
                             ProviderTableMeta.CONTENT_URI_FILE,
                             projection,
                             whereForDescencentsInConflict,
-                            new String[]{user.getAccountName(), parentPath + "%"},
+                            new String[]{user.getAccountName(), parentPath + '%'},
                             null
                         );
                     } else {

File: app/src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -201,7 +201,7 @@ private int updateUploadInternal(Cursor c, UploadStatus status, UploadResult res
                     TAG,
                     "Updating " + path + " with status:" + status + " and result:"
                             + (result == null ? "null" : result.toString()) + " (old:"
-                            + upload.toFormattedString() + ")");
+                            + upload.toFormattedString() + ')');
 
             upload.setUploadStatus(status);
             upload.setLastResult(result);

File: app/src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -21,6 +21,7 @@
 import android.content.Context;
 import android.media.MediaPlayer;
 import android.os.Handler;
+import android.os.Looper;
 import android.os.Message;
 import android.util.AttributeSet;
 import android.view.KeyEvent;
@@ -140,7 +141,7 @@ private void disableUnsupportedButtons() {
         }
     }
 
-    private final Handler handler = new Handler() {
+    private final Handler handler = new Handler(Looper.getMainLooper()) {
         @Override
         public void handleMessage(Message msg) {
             if (msg.what == SHOW_PROGRESS) {

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -295,7 +295,7 @@ public static String convertIdn(String url, boolean toASCII) {
             hostStart = url.indexOf('@') + "@".length();
         }
 
-        int hostEnd = url.substring(hostStart).indexOf("/");
+        int hostEnd = url.substring(hostStart).indexOf('/');
         // Handle URL which doesn't have a path (path is implicitly '/')
         hostEnd = hostEnd == -1 ? urlNoDots.length() : hostStart + hostEnd;
 

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -116,7 +116,7 @@ public final class EncryptionUtils {
     public static final String ivDelimiter = "|"; // not base64 encoded
     public static final String ivDelimiterOld = "fA=="; // "|" base64 encoded
 
-    private static final String HASH_DELIMITER = "$";
+    private static final char HASH_DELIMITER = '$';
     private static final int iterationCount = 1024;
     private static final int keyStrength = 256;
     private static final String AES_CIPHER = "AES/GCM/NoPadding";

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -37,7 +37,6 @@
 import android.os.RemoteException;
 import android.provider.MediaStore;
 import android.text.TextUtils;
-import android.util.Log;
 
 import com.google.gson.Gson;
 import com.google.gson.JsonSyntaxException;
@@ -463,7 +462,7 @@ private ContentValues createContentValuesBase(OCFile fileOrFolder) {
         cv.put(ProviderTableMeta.FILE_REMOTE_ID, fileOrFolder.getRemoteId());
         cv.put(ProviderTableMeta.FILE_LOCAL_ID, fileOrFolder.getLocalId());
         cv.put(ProviderTableMeta.FILE_FAVORITE, fileOrFolder.isFavorite());
-        cv.put(ProviderTableMeta.FILE_HIDDEN, fileOrFolder.getHidden());
+        cv.put(ProviderTableMeta.FILE_HIDDEN, fileOrFolder.shouldHide());
         cv.put(ProviderTableMeta.FILE_UNREAD_COMMENTS_COUNT, fileOrFolder.getUnreadCommentsCount());
         cv.put(ProviderTableMeta.FILE_OWNER_ID, fileOrFolder.getOwnerId());
         cv.put(ProviderTableMeta.FILE_OWNER_DISPLAY_NAME, fileOrFolder.getOwnerDisplayName());
@@ -503,7 +502,7 @@ private ContentValues createContentValuesForFile(OCFile file) {
         cv.put(ProviderTableMeta.FILE_LOCKED, file.isLocked());
         final FileLockType lockType = file.getLockType();
         cv.put(ProviderTableMeta.FILE_LOCK_TYPE, lockType != null ? lockType.getValue() : -1);
-        cv.put(ProviderTableMeta.FILE_HIDDEN, file.getHidden());
+        cv.put(ProviderTableMeta.FILE_HIDDEN, file.shouldHide());
         cv.put(ProviderTableMeta.FILE_LOCK_OWNER, file.getLockOwnerId());
         cv.put(ProviderTableMeta.FILE_LOCK_OWNER_DISPLAY_NAME, file.getLockOwnerDisplayName());
         cv.put(ProviderTableMeta.FILE_LOCK_OWNER_EDITOR, file.getLockOwnerEditor());

File: app/src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -254,7 +254,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     } else {
                         // TODO CHECK: is this really useful in some point in the code?
                         mServerFile.setFavorite(mLocalFile.isFavorite());
-                        mServerFile.setHidden(mLocalFile.getHidden());
+                        mServerFile.setHidden(mLocalFile.shouldHide());
                         mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
                         mServerFile.setStoragePath(mLocalFile.getStoragePath());
                         mServerFile.setParentId(mLocalFile.getParentId());

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -92,7 +92,6 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
-import java.util.stream.Collectors;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -950,7 +949,7 @@ private void prepareListOfHiddenFiles() {
         listOfHiddenFiles.clear();
 
         mFiles.forEach(file -> {
-            if (file.getHidden()) {
+            if (file.shouldHide()) {
                 listOfHiddenFiles.add(file.getFileName());
             }
         });

File: app/src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1033,6 +1033,7 @@ public static void retryUpload(@NonNull Context context,
         i.putExtra(FileUploader.KEY_ACCOUNT, user.toPlatformAccount());
         i.putExtra(FileUploader.KEY_RETRY_UPLOAD, upload);
 
+        // FIXME Conflict files not uploading successfully
         if (useFilesUploadWorker(context)) {
             new FilesUploadHelper().retryUpload(upload, user);
         } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {

File: app/src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -437,6 +437,9 @@ String getMessageForResult(RemoteOperationResult result, Resources res) {
             } else if (result.getCode() == ResultCode.ACCOUNT_NOT_THE_SAME) {
                 message = res.getString(R.string.auth_account_not_the_same);
 
+            } else if (result.getCode() == ResultCode.QUOTA_EXCEEDED) {
+                message = res.getString(R.string.upload_quota_exceeded);
+
             }
 
             else if (!TextUtils.isEmpty(result.getHttpPhrase())) {

File: app/src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -437,6 +437,9 @@ String getMessageForResult(RemoteOperationResult result, Resources res) {
             } else if (result.getCode() == ResultCode.ACCOUNT_NOT_THE_SAME) {
                 message = res.getString(R.string.auth_account_not_the_same);
 
+            } else if (result.getCode() == ResultCode.QUOTA_EXCEEDED) {
+                message = res.getString(R.string.upload_quota_exceeded);
+
             }
 
             else if (!TextUtils.isEmpty(result.getHttpPhrase())) {

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -259,6 +259,7 @@ public static Intent openFileIntent(Context context, User user, OCFile file) {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+
         Log_OC.v(TAG, "onCreate() start");
         // Set the default theme to replace the launch screen theme.
         setTheme(R.style.Theme_ownCloud_Toolbar_Drawer);

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -460,7 +460,7 @@ public void testMetadata() throws IOException, AccountUtils.AccountNotFoundExcep
         testOnlyOnServer(NextcloudVersion.nextcloud_27);
 
         File file = getFile("gps.jpg");
-        String remotePath = "/gps.jpg";
+        String remotePath = "/metadata.jpg";
         OCUpload ocUpload = new OCUpload(file.getAbsolutePath(), remotePath, account.name);
 
         assertTrue(
@@ -497,16 +497,16 @@ public void testMetadata() throws IOException, AccountUtils.AccountNotFoundExcep
 
         OCFile ocFile = null;
         for (OCFile f : files) {
-            if (f.getFileName().equals("gps.jpg")) {
+            if (f.getFileName().equals("metadata.jpg")) {
                 ocFile = f;
                 break;
             }
         }
 
         assertNotNull(ocFile);
         assertEquals(remotePath, ocFile.getRemotePath());
-        assertEquals(new ImageDimension(300f, 200f), ocFile.getImageDimension());
         assertEquals(new GeoLocation(64, -46), ocFile.getGeoLocation());
+        assertEquals(new ImageDimension(300f, 200f), ocFile.getImageDimension());
     }
 
     private void verifyStoragePath(OCFile file) {

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -460,7 +460,7 @@ public void testMetadata() throws IOException, AccountUtils.AccountNotFoundExcep
         testOnlyOnServer(NextcloudVersion.nextcloud_27);
 
         File file = getFile("gps.jpg");
-        String remotePath = "/gps.jpg";
+        String remotePath = "/metadata.jpg";
         OCUpload ocUpload = new OCUpload(file.getAbsolutePath(), remotePath, account.name);
 
         assertTrue(
@@ -497,16 +497,16 @@ public void testMetadata() throws IOException, AccountUtils.AccountNotFoundExcep
 
         OCFile ocFile = null;
         for (OCFile f : files) {
-            if (f.getFileName().equals("gps.jpg")) {
+            if (f.getFileName().equals("metadata.jpg")) {
                 ocFile = f;
                 break;
             }
         }
 
         assertNotNull(ocFile);
         assertEquals(remotePath, ocFile.getRemotePath());
-        assertEquals(new ImageDimension(300f, 200f), ocFile.getImageDimension());
         assertEquals(new GeoLocation(64, -46), ocFile.getGeoLocation());
+        assertEquals(new ImageDimension(300f, 200f), ocFile.getImageDimension());
     }
 
     private void verifyStoragePath(OCFile file) {

File: app/src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1159,7 +1159,7 @@ public void cancel(String accountName, String remotePath, @Nullable ResultCode r
                 try{
                     new FilesUploadHelper().cancelFileUpload(remotePath, accountManager.getUser(accountName).get(),null);
                 }catch(NoSuchElementException e){
-                    Log_OC.e(TAG,"Error cancelling current upload because user does not exist! 666");
+                    Log_OC.e(TAG,"Error cancelling current upload because user does not exist!");
                 }
             } else {
                 // Cancel for Android version <= Android 10

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -920,7 +920,6 @@ private OCFile createFileInstance(FileEntity fileEntity) {
         ocFile.setDownloading(nullToZero(fileEntity.isDownloading()) == 1);
         ocFile.setEtagInConflict(fileEntity.getEtagInConflict());
         ocFile.setFavorite(nullToZero(fileEntity.getFavorite()) == 1);
-        ocFile.setHidden(nullToZero(fileEntity.getHidden()) == 1);
         ocFile.setEncrypted(nullToZero(fileEntity.isEncrypted()) == 1);
 //        if (ocFile.isEncrypted()) {
 //            ocFile.setFileName(cursor.getString(cursor.getColumnIndexOrThrow(ProviderTableMeta.FILE_NAME)));
@@ -946,6 +945,7 @@ private OCFile createFileInstance(FileEntity fileEntity) {
         ocFile.setLockTimeout(nullToZero(fileEntity.getLockTimeout()));
         ocFile.setLockToken(fileEntity.getLockToken());
         ocFile.setLivePhoto(fileEntity.getMetadataLivePhoto());
+        ocFile.setHidden(nullToZero(fileEntity.getHidden()) == 1);
 
         String sharees = fileEntity.getSharees();
         // Surprisingly JSON deserialization causes significant overhead.

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -238,7 +238,6 @@ public static OCFile fillOCFile(RemoteFile remote) {
         file.setRemoteId(remote.getRemoteId());
         file.setLocalId(remote.getLocalId());
         file.setFavorite(remote.isFavorite());
-        file.setHidden(remote.getHidden());
         if (file.isFolder()) {
             file.setEncrypted(remote.isEncrypted());
         }
@@ -262,6 +261,7 @@ public static OCFile fillOCFile(RemoteFile remote) {
         file.setImageDimension(remote.getImageDimension());
         file.setGeoLocation(remote.getGeoLocation());
         file.setLivePhoto(remote.getLivePhoto());
+        file.setHidden(remote.getHidden());
 
         return file;
     }

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 75;
+    public static final int DB_VERSION = 74;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -412,6 +412,7 @@ private void hideVideoFileOfLivePhoto(ListGridImageViewHolder holder, OCFile fil
         }
     }
 
+    // FIXME gets called multiple times
     private void addVideoOCFileOfLivePhoto() {
         HashMap<String, OCFile> livePhotoMap = new HashMap<>();
 

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -94,6 +94,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.recyclerview.widget.RecyclerView;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import me.zhanghai.android.fastscroll.PopupTextProvider;

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -511,7 +511,7 @@ private ContentValues createContentValuesForFile(OCFile file) {
         cv.put(ProviderTableMeta.FILE_MODIFIED, file.getModificationTimestamp());
         cv.put(ProviderTableMeta.FILE_METADATA_SIZE, gson.toJson(file.getImageDimension()));
         cv.put(ProviderTableMeta.FILE_METADATA_GPS, gson.toJson(file.getGeoLocation()));
-        cv.put(ProviderTableMeta.FILE_METADATA_LIVE_PHOTO, gson.toJson(file.getLivePhoto()));
+        cv.put(ProviderTableMeta.FILE_METADATA_LIVE_PHOTO, file.getLivePhoto());
 
         return cv;
     }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -88,6 +88,7 @@
 import java.util.Date;
 import java.util.List;
 import java.util.Locale;
+import java.util.Objects;
 import java.util.Set;
 
 import androidx.annotation.NonNull;
@@ -393,6 +394,7 @@ private void checkLivePhotoAvailability(ListGridImageViewHolder holder, OCFile f
         holder.getLivePhotoIndicator().setVisibility(isLivePhoto ? (View.VISIBLE) : (View.GONE));
 
         // FIXME Interface segregation principle violation
+        // 594c962d71b
         // Not needed for Grid mode unfortunately ListGridImageViewHolder interface used for List and Grid mode
         holder.getLivePhotoIndicatorSeparator().setVisibility(isLivePhoto ? (View.VISIBLE) : (View.GONE));
     }

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -260,6 +260,7 @@ public static OCFile fillOCFile(RemoteFile remote) {
         file.setTags(new ArrayList<>(Arrays.asList(remote.getTags())));
         file.setImageDimension(remote.getImageDimension());
         file.setGeoLocation(remote.getGeoLocation());
+        file.setLivePhoto(remote.getLivePhoto());
 
         return file;
     }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -388,12 +388,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
         }
     }
 
-    private void checkLivePhotoAbility(ListGridImageViewHolder holder, OCFile file) {
+    private void checkLivePhotoAvailability(ListGridImageViewHolder holder, OCFile file) {
         holder.getLivePhotoIndicator().setVisibility((file.isLivePhoto()) ? (View.VISIBLE) : (View.GONE));
     }
 
     private void bindListItemViewHolder(ListItemViewHolder holder, OCFile file) {
-        checkLivePhotoAbility(holder, file);
+        checkLivePhotoAvailability(holder, file);
 
         if ((file.isSharedWithMe() || file.isSharedWithSharee()) && !isMultiSelect() && !gridView &&
             !hideItemOptions) {
@@ -507,7 +507,7 @@ private void bindListItemViewHolder(ListItemViewHolder holder, OCFile file) {
     }
 
     private void bindListGridItemViewHolder(ListGridItemViewHolder holder, OCFile file) {
-        checkLivePhotoAbility(holder, file);
+        checkLivePhotoAvailability(holder, file);
         holder.getFileName().setText(file.getDecryptedFileName());
 
         boolean gridImage = MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2557,6 +2557,7 @@ private void openFileByPath(User user, String filepath) {
     private Unit onFileRequestError(Throwable throwable) {
         dismissLoadingDialog();
         DisplayUtils.showSnackMessage(this, getString(R.string.error_retrieving_file));
+        Log_OC.e(TAG, "Requesting file from remote failed!", throwable);
         return null;
     }
 

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 75;
+    public static final int DB_VERSION = 74;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -415,7 +415,7 @@ private ContentValues createContentValuesFromSyncedFolder(SyncedFolder syncedFol
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_UPLOAD_ACTION, syncedFolder.getUploadAction());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY,
                syncedFolder.getNameCollisionPolicyInt());
-        cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_TYPE, syncedFolder.getType().getId());
+        cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_TYPE, syncedFolder.getType().id);
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN, syncedFolder.isHidden());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_SUBFOLDER_RULE, syncedFolder.getSubfolderRule().ordinal());
 

File: app/src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -248,7 +248,7 @@ private boolean showFooter() {
     public int getSectionByLocalPathAndType(String localPath, int type) {
         for (int i = 0; i < filteredSyncFolderItems.size(); i++) {
             if (filteredSyncFolderItems.get(i).getLocalPath().equalsIgnoreCase(localPath) &&
-                filteredSyncFolderItems.get(i).getType().getId().equals(type)) {
+                filteredSyncFolderItems.get(i).getType().id == type) {
                 return i;
             }
         }

File: app/src/main/java/com/owncloud/android/ui/dialog/parcel/SyncedFolderParcelable.java
Patch:
@@ -105,7 +105,7 @@ public void writeToParcel(Parcel dest, int flags) {
         dest.writeInt(existing ? 1 : 0);
         dest.writeInt(enabled ? 1 : 0);
         dest.writeInt(subfolderByDate ? 1 : 0);
-        dest.writeInt(type.getId());
+        dest.writeInt(type.id);
         dest.writeString(account);
         dest.writeInt(uploadAction);
         dest.writeInt(nameCollisionPolicy.serialize());

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -932,15 +932,15 @@ public void toggleFileLock(OCFile file, boolean shouldBeLocked) {
     }
 
     public void renameFile(OCFile file, String newFilename) {
-        // RenameFile
         Intent service = new Intent(fileActivity, OperationsService.class);
+
         service.setAction(OperationsService.ACTION_RENAME);
         service.putExtra(OperationsService.EXTRA_ACCOUNT, fileActivity.getAccount());
         service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
         service.putExtra(OperationsService.EXTRA_NEWNAME, newFilename);
         mWaitingForOpId = fileActivity.getOperationsServiceBinder().queueNewOperation(service);
 
-        fileActivity.showLoadingDialog(fileActivity.getString(R.string.wait_a_moment));
+        fileActivity.refreshList();
     }
 
 

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -932,15 +932,15 @@ public void toggleFileLock(OCFile file, boolean shouldBeLocked) {
     }
 
     public void renameFile(OCFile file, String newFilename) {
-        // RenameFile
         Intent service = new Intent(fileActivity, OperationsService.class);
+
         service.setAction(OperationsService.ACTION_RENAME);
         service.putExtra(OperationsService.EXTRA_ACCOUNT, fileActivity.getAccount());
         service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
         service.putExtra(OperationsService.EXTRA_NEWNAME, newFilename);
         mWaitingForOpId = fileActivity.getOperationsServiceBinder().queueNewOperation(service);
 
-        fileActivity.showLoadingDialog(fileActivity.getString(R.string.wait_a_moment));
+        fileActivity.refreshList();
     }
 
 

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -932,15 +932,15 @@ public void toggleFileLock(OCFile file, boolean shouldBeLocked) {
     }
 
     public void renameFile(OCFile file, String newFilename) {
-        // RenameFile
         Intent service = new Intent(fileActivity, OperationsService.class);
+
         service.setAction(OperationsService.ACTION_RENAME);
         service.putExtra(OperationsService.EXTRA_ACCOUNT, fileActivity.getAccount());
         service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
         service.putExtra(OperationsService.EXTRA_NEWNAME, newFilename);
         mWaitingForOpId = fileActivity.getOperationsServiceBinder().queueNewOperation(service);
 
-        fileActivity.showLoadingDialog(fileActivity.getString(R.string.wait_a_moment));
+        fileActivity.refreshList();
     }
 
 

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -412,6 +412,7 @@ private void hideVideoFileOfLivePhoto(ListGridImageViewHolder holder, OCFile fil
         }
     }
 
+    // FIXME gets called multiple times
     private void addVideoOCFileOfLivePhoto() {
         HashMap<String, OCFile> livePhotoMap = new HashMap<>();
 

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -94,6 +94,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.recyclerview.widget.RecyclerView;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import me.zhanghai.android.fastscroll.PopupTextProvider;

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -511,7 +511,7 @@ private ContentValues createContentValuesForFile(OCFile file) {
         cv.put(ProviderTableMeta.FILE_MODIFIED, file.getModificationTimestamp());
         cv.put(ProviderTableMeta.FILE_METADATA_SIZE, gson.toJson(file.getImageDimension()));
         cv.put(ProviderTableMeta.FILE_METADATA_GPS, gson.toJson(file.getGeoLocation()));
-        cv.put(ProviderTableMeta.FILE_METADATA_LIVE_PHOTO, gson.toJson(file.getLivePhoto()));
+        cv.put(ProviderTableMeta.FILE_METADATA_LIVE_PHOTO, file.getLivePhoto());
 
         return cv;
     }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -88,6 +88,7 @@
 import java.util.Date;
 import java.util.List;
 import java.util.Locale;
+import java.util.Objects;
 import java.util.Set;
 
 import androidx.annotation.NonNull;
@@ -393,6 +394,7 @@ private void checkLivePhotoAvailability(ListGridImageViewHolder holder, OCFile f
         holder.getLivePhotoIndicator().setVisibility(isLivePhoto ? (View.VISIBLE) : (View.GONE));
 
         // FIXME Interface segregation principle violation
+        // 594c962d71b
         // Not needed for Grid mode unfortunately ListGridImageViewHolder interface used for List and Grid mode
         holder.getLivePhotoIndicatorSeparator().setVisibility(isLivePhoto ? (View.VISIBLE) : (View.GONE));
     }

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -260,6 +260,7 @@ public static OCFile fillOCFile(RemoteFile remote) {
         file.setTags(new ArrayList<>(Arrays.asList(remote.getTags())));
         file.setImageDimension(remote.getImageDimension());
         file.setGeoLocation(remote.getGeoLocation());
+        file.setLivePhoto(remote.getLivePhoto());
 
         return file;
     }

File: app/src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -388,12 +388,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
         }
     }
 
-    private void checkLivePhotoAbility(ListGridImageViewHolder holder, OCFile file) {
+    private void checkLivePhotoAvailability(ListGridImageViewHolder holder, OCFile file) {
         holder.getLivePhotoIndicator().setVisibility((file.isLivePhoto()) ? (View.VISIBLE) : (View.GONE));
     }
 
     private void bindListItemViewHolder(ListItemViewHolder holder, OCFile file) {
-        checkLivePhotoAbility(holder, file);
+        checkLivePhotoAvailability(holder, file);
 
         if ((file.isSharedWithMe() || file.isSharedWithSharee()) && !isMultiSelect() && !gridView &&
             !hideItemOptions) {
@@ -507,7 +507,7 @@ private void bindListItemViewHolder(ListItemViewHolder holder, OCFile file) {
     }
 
     private void bindListGridItemViewHolder(ListGridItemViewHolder holder, OCFile file) {
-        checkLivePhotoAbility(holder, file);
+        checkLivePhotoAvailability(holder, file);
         holder.getFileName().setText(file.getDecryptedFileName());
 
         boolean gridImage = MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -437,12 +437,10 @@ public void onClick(DialogInterface dialog, int which) {
 
     private void checkOutdatedServer() {
         Optional<User> user = getUser();
-        OwnCloudVersion serverVersion = user.get().getServer().getVersion();
-
         // show outdated warning
         if (user.isPresent() &&
             CapabilityUtils.checkOutdatedWarning(getResources(),
-                                                 serverVersion,
+                                                 user.get().getServer().getVersion(),
                                                  getCapabilities().getExtendedSupport().isTrue())) {
             DisplayUtils.showServerOutdatedSnackbar(this, Snackbar.LENGTH_LONG);
         }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -437,12 +437,10 @@ public void onClick(DialogInterface dialog, int which) {
 
     private void checkOutdatedServer() {
         Optional<User> user = getUser();
-        OwnCloudVersion serverVersion = user.get().getServer().getVersion();
-
         // show outdated warning
         if (user.isPresent() &&
             CapabilityUtils.checkOutdatedWarning(getResources(),
-                                                 serverVersion,
+                                                 user.get().getServer().getVersion(),
                                                  getCapabilities().getExtendedSupport().isTrue())) {
             DisplayUtils.showServerOutdatedSnackbar(this, Snackbar.LENGTH_LONG);
         }

File: app/src/main/java/com/owncloud/android/ui/asynctasks/FetchRemoteFileTask.java
Patch:
@@ -21,6 +21,7 @@
 
 package com.owncloud.android.ui.asynctasks;
 
+import android.annotation.SuppressLint;
 import android.os.AsyncTask;
 
 import com.nextcloud.client.account.User;
@@ -42,6 +43,8 @@ public class FetchRemoteFileTask extends AsyncTask<Void, Void, String> {
     private final User user;
     private final String fileId;
     private final FileDataStorageManager storageManager;
+
+    @SuppressLint("StaticFieldLeak")
     private final FileDisplayActivity fileDisplayActivity;
 
     public FetchRemoteFileTask(User user,

File: app/src/main/java/com/owncloud/android/ui/asynctasks/FetchRemoteFileTask.java
Patch:
@@ -118,6 +118,6 @@ protected String doInBackground(Void... voids) {
     protected void onPostExecute(String message) {
         super.onPostExecute(message);
 
-        fileDisplayActivity.showFile(message);
+        fileDisplayActivity.showFile(null, message);
     }
 }

File: app/src/main/java/com/owncloud/android/ui/dialog/ConfirmationDialogFragment.java
Patch:
@@ -167,7 +167,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         } else if (neutralButtonTextId != -1 && negativeButtonTextId == -1) {
             builder.setNegativeButton(neutralButtonTextId, (dialog, which) -> {
                 if (mListener != null) {
-                    mListener.onCancel(getTag());
+                    mListener.onNeutral(getTag());
                 }
                 dialog.dismiss();
             });

File: app/src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -314,7 +314,7 @@ protected Activity getCurrentActivity() {
         return currentActivity;
     }
 
-    protected void shortSleep() {
+    protected static void shortSleep() {
         try {
             Thread.sleep(2000);
         } catch (InterruptedException e) {

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -42,7 +42,6 @@
 import android.os.StatFs;
 import android.provider.MediaStore;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.View;
 import android.webkit.MimeTypeMap;
 

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -42,6 +42,7 @@
 import android.os.StatFs;
 import android.provider.MediaStore;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.View;
 import android.webkit.MimeTypeMap;
 
@@ -1007,10 +1008,10 @@ public void cancelTransference(OCFile file) {
         }
     }
 
-    public void moveOrCopyFiles(final List<String> filePaths, final OCFile targetFolder) {
+    public void moveOrCopyFiles(String action, final List<String> filePaths, final OCFile targetFolder) {
         for (String path : filePaths) {
             Intent service = new Intent(fileActivity, OperationsService.class);
-            //service.setAction(OperationsService.ACTION_MOVE_OR_COPY_FILE);
+            service.setAction(action);
             service.putExtra(OperationsService.EXTRA_NEW_PARENT_PATH, targetFolder.getRemotePath());
             service.putExtra(OperationsService.EXTRA_REMOTE_PATH, path);
             service.putExtra(OperationsService.EXTRA_ACCOUNT, fileActivity.getAccount());
@@ -1019,7 +1020,6 @@ public void moveOrCopyFiles(final List<String> filePaths, final OCFile targetFol
         fileActivity.showLoadingDialog(fileActivity.getString(R.string.wait_a_moment));
     }
 
-
     public void exportFiles(Collection<OCFile> files,
                             Context context,
                             View view,

File: app/src/main/java/com/owncloud/android/ui/dialog/ConfirmationDialogFragment.java
Patch:
@@ -167,7 +167,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         } else if (neutralButtonTextId != -1 && negativeButtonTextId == -1) {
             builder.setNegativeButton(neutralButtonTextId, (dialog, which) -> {
                 if (mListener != null) {
-                    mListener.onCancel(getTag());
+                    mListener.onNeutral(getTag());
                 }
                 dialog.dismiss();
             });

File: app/src/main/java/com/owncloud/android/ui/dialog/ChooseRichDocumentsTemplateDialogFragment.java
Patch:
@@ -138,7 +138,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.filename);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.filename);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -116,7 +116,7 @@ public void onResume() {
         super.onResume();
 
         bindButton();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/NoteDialogFragment.java
Patch:
@@ -90,7 +90,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.noteText);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.noteText);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/RenamePublicShareDialogFragment.java
Patch:
@@ -83,7 +83,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -99,7 +99,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.sharePassword);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.sharePassword);
     }
 
     /**

File: app/src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -213,7 +213,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                                   false,
                                   getContext(),
                                   null,
-                                  null,
+                                  syncedFolderProvider.getPreferences(),
                                   viewThemeUtils,
                                   syncedFolderProvider);
 

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -26,6 +26,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.util.Log;
 
 import com.google.gson.Gson;
 import com.nextcloud.appReview.AppReviewShownModel;

File: app/src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -213,7 +213,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                                   false,
                                   getContext(),
                                   null,
-                                  null,
+                                  syncedFolderProvider.getPreferences(),
                                   viewThemeUtils,
                                   syncedFolderProvider);
 

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -47,6 +47,7 @@
 import android.text.format.DateUtils;
 import android.text.style.StyleSpan;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.view.View;
 import android.view.WindowManager;
 import android.widget.FrameLayout;

File: app/src/androidTest/java/com/owncloud/android/datamodel/OCFileUnitTest.java
Patch:
@@ -70,7 +70,6 @@ public void createDefaultOCFile() {
         mFile = new OCFile(PATH);
     }
 
-
     @Test
     public void writeThenReadAsParcelable() {
 

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -539,8 +539,8 @@ public void testSslUntrustedCertDialog() {
 
         final SslCertificate certificate = new SslCertificate("foo", "bar", "2022/01/10", "2022/01/30");
         final SslError sslError = new SslError(SslError.SSL_UNTRUSTED, certificate);
-        final SslErrorHandler handler = Mockito.mock(SslErrorHandler.class);
 
+        final SslErrorHandler handler = Mockito.mock(SslErrorHandler.class);
 
         SslUntrustedCertDialog sut = SslUntrustedCertDialog.newInstanceForEmptySslError(sslError, handler);
         showDialog(sut);

File: app/src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -71,6 +71,7 @@ default void onDarkThemeModeChanged(DarkMode mode) {
 
     boolean instantPictureUploadEnabled();
     boolean instantVideoUploadEnabled();
+    boolean isDarkModeEnabled();
 
     boolean isShowHiddenFilesEnabled();
     void setShowHiddenFilesEnabled(boolean enabled);

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -83,6 +83,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.core.content.res.ResourcesCompat;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import kotlin.text.Charsets;
@@ -899,8 +900,7 @@ protected void onPostExecute(Bitmap bitmap) {
                 } else {
                     if (mFile != null) {
                         if (mFile.isDirectory()) {
-                            imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(mContext,
-                                                                                         viewThemeUtils));
+                            imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(mContext, viewThemeUtils));
                         } else {
                             if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);

File: app/src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -80,6 +80,7 @@
 import java.util.Locale;
 
 import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 /**
@@ -271,8 +272,7 @@ private ImageView createThumbnailNew(PreviewObject previewObject, List<RichObjec
                 .into(imageView);
         } else {
             if (MimeTypeUtil.isFolder(previewObject.getMimeType())) {
-                imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context,
-                                                                             viewThemeUtils));
+                imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
             } else {
                 imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(previewObject.getMimeType(),
                                                                         "",

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -54,6 +54,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 /**

File: app/src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -48,6 +48,7 @@
 import java.util.List;
 
 import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 import static com.owncloud.android.datamodel.OCFile.PATH_SEPARATOR;
@@ -219,8 +220,7 @@ private String generateFooterText(int filesCount, int foldersCount) {
 
     private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
         if (file.isFolder()) {
-            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context,
-                                                                             viewThemeUtils));
+            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {
                 // Thumbnail in cache?

File: app/src/androidTest/java/com/owncloud/android/UploadIT.java
Patch:
@@ -426,7 +426,9 @@ public Connectivity getConnectivity() {
     }
 
     @Test
-    public void testCreationAndUploadTimestamp() throws IOException {
+    public void testCreationAndUploadTimestamp() throws IOException, AccountUtils.AccountNotFoundException {
+        testOnlyOnServer(NextcloudVersion.nextcloud_27);
+
         File file = getDummyFile("empty.txt");
         String remotePath = "/testFile.txt";
         OCUpload ocUpload = new OCUpload(file.getAbsolutePath(), remotePath, account.name);

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -856,7 +856,7 @@ public static void setThumbnail(OCFile file,
             stopShimmer(shimmerThumbnail, thumbnailView);
 
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
-            boolean isDarkModeActive = preferences.getDarkThemeMode() == DarkMode.DARK;
+            boolean isDarkModeActive = preferences.isDarkModeEnabled();
 
             Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
             LayerDrawable fileIcon = MimeTypeUtil.getFileIcon(isDarkModeActive, overlayIconId, context, viewThemeUtils);

File: app/src/androidTest/java/com/owncloud/android/ui/activity/DrawerActivityIT.java
Patch:
@@ -119,7 +119,6 @@ public void switchAccountViaAccountList() {
 
         waitForIdleSync();
 
-        // FIXME test fails
         assertEquals(account2, sut.getUser().get().toPlatformAccount());
 
         onView(withId(R.id.switch_account_button)).perform(click());

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -540,10 +540,8 @@ public void testSslUntrustedCertDialog() {
         final SslCertificate certificate = new SslCertificate("foo", "bar", "2022/01/10", "2022/01/30");
         final SslError sslError = new SslError(SslError.SSL_UNTRUSTED, certificate);
 
-        // FIXME test fails
         final SslErrorHandler handler = Mockito.mock(SslErrorHandler.class);
 
-
         SslUntrustedCertDialog sut = SslUntrustedCertDialog.newInstanceForEmptySslError(sslError, handler);
         showDialog(sut);
     }

File: app/src/main/java/com/owncloud/android/ui/dialog/ChooseRichDocumentsTemplateDialogFragment.java
Patch:
@@ -138,7 +138,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.filename);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.filename);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -116,7 +116,7 @@ public void onResume() {
         super.onResume();
 
         bindButton();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/NoteDialogFragment.java
Patch:
@@ -90,7 +90,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.noteText);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.noteText);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -110,7 +110,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/RenamePublicShareDialogFragment.java
Patch:
@@ -83,7 +83,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.userInput);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.userInput);
     }
 
     @NonNull

File: app/src/main/java/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -99,7 +99,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        keyboardUtils.showKeyboardForEditText(binding.sharePassword);
+        keyboardUtils.showKeyboardForEditText(requireDialog().getWindow(), binding.sharePassword);
     }
 
     /**

File: app/src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -34,6 +34,7 @@
 import com.nextcloud.client.preferences.SubFolderRule;
 import com.owncloud.android.db.ProviderMeta;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.lib.resources.files.model.ServerFileInterface;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -89,7 +90,7 @@ public long storeSyncedFolder(SyncedFolder syncedFolder) {
         }
     }
 
-    public static boolean isAutoUploadFolder(SyncedFolderProvider syncedFolderProvider, OCFile file, User user) {
+    public static boolean isAutoUploadFolder(SyncedFolderProvider syncedFolderProvider, ServerFileInterface file, User user) {
         return syncedFolderProvider != null && syncedFolderProvider.findByRemotePathAndAccount(file.getRemotePath(), user);
     }
 

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -1021,4 +1021,5 @@ public List<String> getTags() {
     public void setTags(List<String> tags) {
         this.tags = tags;
     }
+
 }

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -900,7 +900,7 @@ protected void onPostExecute(Bitmap bitmap) {
                 } else {
                     if (mFile != null) {
                         if (mFile.isDirectory()) {
-                            imageView.setImageDrawable(ContextCompat.getDrawable(mContext, R.drawable.folder));
+                            imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(mContext, viewThemeUtils));
                         } else {
                             if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);

File: app/src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -272,7 +272,7 @@ private ImageView createThumbnailNew(PreviewObject previewObject, List<RichObjec
                 .into(imageView);
         } else {
             if (MimeTypeUtil.isFolder(previewObject.getMimeType())) {
-                imageView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
+                imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
             } else {
                 imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(previewObject.getMimeType(),
                                                                         "",

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -244,7 +244,7 @@ public static void setThumbnail(File file,
                                     Context context,
                                     ViewThemeUtils viewThemeUtils) {
         if (file.isDirectory()) {
-            thumbnailView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
+            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
         } else {
             thumbnailView.setImageResource(R.drawable.file);
 

File: app/src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -220,7 +220,7 @@ private String generateFooterText(int filesCount, int foldersCount) {
 
     private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
         if (file.isFolder()) {
-            thumbnailView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
+            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {
                 // Thumbnail in cache?

File: app/src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -222,7 +222,8 @@ protected void setThumbnailView(final User user) {
         OCFile file = getFile();
         if (file.isFolder()) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
-            LayerDrawable drawable = file.getFileIcon(isAutoUploadFolder, this, viewThemeUtils);
+            Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
+            LayerDrawable drawable = MimeTypeUtil.getFileIcon(overlayIconId, this, viewThemeUtils);
             binding.thumbnail.setImageDrawable(drawable);
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {

File: app/src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -79,7 +79,8 @@ protected void onCreate(Bundle savedInstanceState) {
         // Icon
         if (file.isFolder()) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, optionalUser.get());
-            LayerDrawable drawable = file.getFileIcon(isAutoUploadFolder, this, viewThemeUtils);
+            Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
+            LayerDrawable drawable = MimeTypeUtil.getFileIcon(overlayIconId, this, viewThemeUtils);
             binding.shareFileIcon.setImageDrawable(drawable);
         } else {
             binding.shareFileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(),

File: app/src/main/java/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -106,7 +106,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
         if (file.isFolder()) {
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
-            final LayerDrawable icon = file.getFileIcon(isAutoUploadFolder, mContext, viewThemeUtils);
+            Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
+            final LayerDrawable icon = MimeTypeUtil.getFileIcon(overlayIconId, mContext, viewThemeUtils);
             fileIcon.setImageDrawable(icon);
         } else {
             // get Thumbnail if file is image

File: app/src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -855,7 +855,8 @@ public static void setThumbnail(OCFile file,
             stopShimmer(shimmerThumbnail, thumbnailView);
 
             boolean isAutoUploadFolder = SyncedFolderProvider.isAutoUploadFolder(syncedFolderProvider, file, user);
-            LayerDrawable fileIcon = file.getFileIcon(isAutoUploadFolder, context, viewThemeUtils);
+            Integer overlayIconId = file.getFileOverlayIconId(isAutoUploadFolder);
+            LayerDrawable fileIcon = MimeTypeUtil.getFileIcon(overlayIconId, context, viewThemeUtils);
             thumbnailView.setImageDrawable(fileIcon);
         } else {
             if (file.getRemoteId() != null && file.isPreviewAvailable()) {

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -83,6 +83,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.core.content.res.ResourcesCompat;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import kotlin.text.Charsets;
@@ -899,8 +900,7 @@ protected void onPostExecute(Bitmap bitmap) {
                 } else {
                     if (mFile != null) {
                         if (mFile.isDirectory()) {
-                            imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(mContext,
-                                                                                         viewThemeUtils));
+                            imageView.setImageDrawable(ContextCompat.getDrawable(mContext, R.drawable.folder));
                         } else {
                             if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);

File: app/src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -80,6 +80,7 @@
 import java.util.Locale;
 
 import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 /**
@@ -271,8 +272,7 @@ private ImageView createThumbnailNew(PreviewObject previewObject, List<RichObjec
                 .into(imageView);
         } else {
             if (MimeTypeUtil.isFolder(previewObject.getMimeType())) {
-                imageView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context,
-                                                                             viewThemeUtils));
+                imageView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
             } else {
                 imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(previewObject.getMimeType(),
                                                                         "",

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -54,6 +54,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.VisibleForTesting;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 /**
@@ -243,7 +244,7 @@ public static void setThumbnail(File file,
                                     Context context,
                                     ViewThemeUtils viewThemeUtils) {
         if (file.isDirectory()) {
-            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context, viewThemeUtils));
+            thumbnailView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
         } else {
             thumbnailView.setImageResource(R.drawable.file);
 

File: app/src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -48,6 +48,7 @@
 import java.util.List;
 
 import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 import static com.owncloud.android.datamodel.OCFile.PATH_SEPARATOR;
@@ -219,8 +220,7 @@ private String generateFooterText(int filesCount, int foldersCount) {
 
     private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
         if (file.isFolder()) {
-            thumbnailView.setImageDrawable(MimeTypeUtil.getDefaultFolderIcon(context,
-                                                                             viewThemeUtils));
+            thumbnailView.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.folder));
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {
                 // Thumbnail in cache?

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1387,8 +1387,8 @@ public void listDirectory(OCFile directory, OCFile file, boolean onlyOnDevice, b
     }
 
     public void updateOCFile(OCFile file) {
-        mAdapter.getFiles().remove(file);
-        mAdapter.getFiles().add(file);
+        List<OCFile> mFiles = mAdapter.getFiles();
+        mFiles.set(mFiles.indexOf(file), file);
         mAdapter.notifyItemChanged(file);
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1387,8 +1387,8 @@ public void listDirectory(OCFile directory, OCFile file, boolean onlyOnDevice, b
     }
 
     public void updateOCFile(OCFile file) {
-        mAdapter.getFiles().remove(file);
-        mAdapter.getFiles().add(file);
+        List<OCFile> mFiles = mAdapter.getFiles();
+        mFiles.set(mFiles.indexOf(file), file);
         mAdapter.notifyItemChanged(file);
     }
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -191,6 +191,7 @@ public class FileDisplayActivity extends FileActivity
     public static final String KEY_FILE_ID = "KEY_FILE_ID";
     public static final String KEY_FILE_PATH = "KEY_FILE_PATH";
     public static final String KEY_ACCOUNT = "KEY_ACCOUNT";
+    public static final String KEY_ACTIVE_USER = "KEY_ACTIVE_USER";
 
 
     private static final String KEY_WAITING_TO_PREVIEW = "WAITING_TO_PREVIEW";
@@ -2491,6 +2492,7 @@ private void handleOpenFileViaIntent(Intent intent) {
         String userName = intent.getStringExtra(KEY_ACCOUNT);
         String fileId = intent.getStringExtra(KEY_FILE_ID);
         String filePath = intent.getStringExtra(KEY_FILE_PATH);
+        String activeUser = intent.getStringExtra(KEY_ACTIVE_USER);
 
         if (userName == null && fileId == null && intent.getData() != null) {
             openDeepLink(intent.getData());

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1093,6 +1093,8 @@ public void onBackPressed() {
             }
         } else if (leftFragment instanceof PreviewTextStringFragment) {
             createMinFragments(null);
+        } else if (leftFragment instanceof PreviewPdfFragment) {
+            super.onBackPressed();
         } else {
             // pop back
             resetScrolling(true);

File: app/src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -116,7 +116,7 @@ protected void onCreate(Bundle savedInstanceState) {
         defaultViewThemeUtils.platform.colorTextView(binding.hostOwnServer, ColorRole.ON_PRIMARY);
         binding.hostOwnServer.setVisibility(isProviderOrOwnInstallationVisible ? View.VISIBLE : View.GONE);
 
-        if (!isProviderOrOwnInstallationVisible) {
+        if (isProviderOrOwnInstallationVisible) {
             binding.hostOwnServer.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.url_server_install));
         }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -282,7 +282,8 @@ private void onOverflowIconClicked() {
                 R.id.action_copy,
                 R.id.action_stream_media,
                 R.id.action_send_share_file,
-                R.id.action_select_all_action_menu));
+                R.id.action_pin_to_homescreen
+                         ));
         if (getFile().isFolder()) {
             additionalFilter.add(R.id.action_send_file);
             additionalFilter.add(R.id.action_sync_file);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -375,11 +375,11 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,
-                R.id.action_unset_favorite
+                R.id.action_unset_favorite,
+                R.id.action_pin_to_homescreen
                          ));
         if (getFile() != null && getFile().isSharedWithMe() && !getFile().canReshare()) {
             additionalFilter.add(R.id.action_send_share_file);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -424,7 +424,6 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -300,11 +300,11 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,
-                R.id.action_unset_favorite
+                R.id.action_unset_favorite,
+                R.id.action_pin_to_homescreen
                          ));
         if (getFile() != null && getFile().isSharedWithMe() && !getFile().canReshare()) {
             additionalFilter.add(R.id.action_send_share_file);

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -282,7 +282,8 @@ private void onOverflowIconClicked() {
                 R.id.action_copy,
                 R.id.action_stream_media,
                 R.id.action_send_share_file,
-                R.id.action_select_all_action_menu));
+                R.id.action_pin_to_homescreen
+                         ));
         if (getFile().isFolder()) {
             additionalFilter.add(R.id.action_send_file);
             additionalFilter.add(R.id.action_sync_file);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -375,11 +375,11 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,
-                R.id.action_unset_favorite
+                R.id.action_unset_favorite,
+                R.id.action_pin_to_homescreen
                          ));
         if (getFile() != null && getFile().isSharedWithMe() && !getFile().canReshare()) {
             additionalFilter.add(R.id.action_send_share_file);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -424,7 +424,6 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -300,11 +300,11 @@ private void showFileActions(OCFile file) {
             Arrays.asList(
                 R.id.action_rename_file,
                 R.id.action_sync_file,
-                R.id.action_select_all,
                 R.id.action_move,
                 R.id.action_copy,
                 R.id.action_favorite,
-                R.id.action_unset_favorite
+                R.id.action_unset_favorite,
+                R.id.action_pin_to_homescreen
                          ));
         if (getFile() != null && getFile().isSharedWithMe() && !getFile().canReshare()) {
             additionalFilter.add(R.id.action_send_share_file);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -4,9 +4,11 @@
  *   @author David A. Velasco
  *   @author Chris Narkiewicz
  *   @author Andy Scherzinger
+ *   @author TSI-mc
  *   Copyright (C) 2016 ownCloud Inc.
  *   Copyright (C) 2019 Chris Narkiewicz <hello@ezaquarii.com>
  *   Copyright (C) 2020 Andy Scherzinger
+ *   Copyright (C) 2023 TSI-mc
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,
@@ -410,7 +412,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
 
                 final OCFile fileNew = getFile();
                 if (fileNew != null) {
-                    showFileActions(file);
+                    showFileActions(fileNew);
                 }
             }
         }

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -4,9 +4,11 @@
  *   @author David A. Velasco
  *   @author Chris Narkiewicz
  *   @author Andy Scherzinger
+ *   @author TSI-mc
  *   Copyright (C) 2016 ownCloud Inc.
  *   Copyright (C) 2019 Chris Narkiewicz <hello@ezaquarii.com>
  *   Copyright (C) 2020 Andy Scherzinger
+ *   Copyright (C) 2023 TSI-mc
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,
@@ -410,7 +412,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
 
                 final OCFile fileNew = getFile();
                 if (fileNew != null) {
-                    showFileActions(file);
+                    showFileActions(fileNew);
                 }
             }
         }

File: app/src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -147,6 +147,9 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             updateShareInfoOperation.setHideFileDownload(hideFileDownload);
             updateShareInfoOperation.setLabel(label);
 
+            //update permissions for external share (will otherwise default to read-only)
+            updateShareInfoOperation.setPermissions(permissions);
+
             //execute and save the result in database
             RemoteOperationResult updateShareInfoResult = updateShareInfoOperation.execute(client);
             if (updateShareInfoResult.isSuccess() && updateShareInfoResult.getData().size() > 0) {

File: app/src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -147,6 +147,9 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             updateShareInfoOperation.setHideFileDownload(hideFileDownload);
             updateShareInfoOperation.setLabel(label);
 
+            //update permissions for external share (will otherwise default to read-only)
+            updateShareInfoOperation.setPermissions(permissions);
+
             //execute and save the result in database
             RemoteOperationResult updateShareInfoResult = updateShareInfoOperation.execute(client);
             if (updateShareInfoResult.isSuccess() && updateShareInfoResult.getData().size() > 0) {

File: app/src/main/java/com/owncloud/android/ui/trashbin/RemoteTrashbinRepository.java
Patch:
@@ -2,11 +2,13 @@
  * Nextcloud Android client application
  *
  * @author Tobias Kaminsky
+ * @author TSI-mc
  * @author Chris Narkiewicz
  *
  * Copyright (C) 2018 Tobias Kaminsky
  * Copyright (C) 2018 Nextcloud GmbH.
  * Copyright (C) 2019 Chris Narkiewicz <hello@ezaquarii.com>
+ * Copyright (C) 2023 TSI-mc
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/main/java/com/owncloud/android/ui/trashbin/RemoteTrashbinRepository.java
Patch:
@@ -2,11 +2,13 @@
  * Nextcloud Android client application
  *
  * @author Tobias Kaminsky
+ * @author TSI-mc
  * @author Chris Narkiewicz
  *
  * Copyright (C) 2018 Tobias Kaminsky
  * Copyright (C) 2018 Nextcloud GmbH.
  * Copyright (C) 2019 Chris Narkiewicz <hello@ezaquarii.com>
+ * Copyright (C) 2023 TSI-mc
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/main/java/com/owncloud/android/ui/trashbin/RemoteTrashbinRepository.java
Patch:
@@ -27,6 +27,7 @@
 
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.network.ClientFactory;
+import com.nextcloud.common.NextcloudClient;
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -112,9 +113,9 @@ private EmptyTrashbinTask(User user, ClientFactory clientFactory, OperationCallb
         @Override
         protected Boolean doInBackground(Void... voids) {
             try {
-                OwnCloudClient client = clientFactory.create(user);
+                NextcloudClient client = clientFactory.createNextcloudClient(user);
                 EmptyTrashbinRemoteOperation emptyTrashbinFileOperation = new EmptyTrashbinRemoteOperation();
-                RemoteOperationResult result = emptyTrashbinFileOperation.execute(client);
+                RemoteOperationResult<Boolean> result = emptyTrashbinFileOperation.execute(client);
                 return result.isSuccess();
             } catch (ClientFactory.CreationException e) {
                 Log_OC.e(this, "Cannot create client", e);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1513,18 +1513,18 @@ public void onReceive(Context context, Intent intent) {
                 // update file after downloading
                 mWaitingToSend = getStorageManager().getFileByRemoteId(mWaitingToSend.getRemoteId());
                 if (mWaitingToSend != null && mWaitingToSend.isDown() &&
-                    downloadBehaviour.equals(OCFileListFragment.DOWNLOAD_SEND)) {
+                    OCFileListFragment.DOWNLOAD_SEND.equals(downloadBehaviour)) {
                     String packageName = intent.getStringExtra(SendShareDialog.PACKAGE_NAME);
                     String activityName = intent.getStringExtra(SendShareDialog.ACTIVITY_NAME);
 
                     sendDownloadedFile(packageName, activityName);
                 }
             }
 
-            if (mWaitingToPreview != null && downloadBehaviour != null) {
+            if (mWaitingToPreview != null) {
                 mWaitingToPreview = getStorageManager().getFileByRemoteId(mWaitingToPreview.getRemoteId());
                 if (mWaitingToPreview != null && mWaitingToPreview.isDown() &&
-                    downloadBehaviour.equals(EditImageActivity.OPEN_IMAGE_EDITOR)) {
+                    EditImageActivity.OPEN_IMAGE_EDITOR.equals(downloadBehaviour)) {
                     startImageEditor(mWaitingToPreview);
                 }
             }

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -295,7 +295,7 @@ private void setThumbnailForAudio(OCFile file) {
     private void setGenericThumbnail() {
         Drawable logo = AppCompatResources.getDrawable(requireContext(), R.drawable.logo);
         if (logo != null) {
-            DrawableCompat.setTint(logo, getResources().getColor(R.color.primary));
+            DrawableCompat.setTint(logo, getResources().getColor(R.color.primary, requireContext().getTheme()));
             binding.imagePreview.setImageDrawable(logo);
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1080,6 +1080,8 @@ public void onBackPressed() {
             }
         } else if (leftFragment instanceof PreviewTextStringFragment) {
             createMinFragments(null);
+        } else if (leftFragment instanceof PreviewPdfFragment) {
+            super.onBackPressed();
         } else {
             // pop back
             resetScrolling(true);

File: app/src/main/java/com/owncloud/android/ui/trashbin/RemoteTrashbinRepository.java
Patch:
@@ -27,6 +27,7 @@
 
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.network.ClientFactory;
+import com.nextcloud.common.NextcloudClient;
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -112,9 +113,9 @@ private EmptyTrashbinTask(User user, ClientFactory clientFactory, OperationCallb
         @Override
         protected Boolean doInBackground(Void... voids) {
             try {
-                OwnCloudClient client = clientFactory.create(user);
+                NextcloudClient client = clientFactory.createNextcloudClient(user);
                 EmptyTrashbinRemoteOperation emptyTrashbinFileOperation = new EmptyTrashbinRemoteOperation();
-                RemoteOperationResult result = emptyTrashbinFileOperation.execute(client);
+                RemoteOperationResult<Boolean> result = emptyTrashbinFileOperation.execute(client);
                 return result.isSuccess();
             } catch (ClientFactory.CreationException e) {
                 Log_OC.e(this, "Cannot create client", e);

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1124,6 +1124,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
             if (file != null) {
                 mContainerActivity.getFileOperationsHelper().toggleEncryption(file, true);
+                mAdapter.setEncryptionAttributeForItemID(file.getRemoteId(), true);
             }
 
             // update state and view of this fragment

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -496,6 +496,7 @@ public void registerFabListener() {
                                                     appScanOptionalFeature);
 
                 dialog.getBehavior().setState(BottomSheetBehavior.STATE_EXPANDED);
+                dialog.getBehavior().setSkipCollapsed(true);
                 dialog.show();
             });
         }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -496,6 +496,7 @@ public void registerFabListener() {
                                                     appScanOptionalFeature);
 
                 dialog.getBehavior().setState(BottomSheetBehavior.STATE_EXPANDED);
+                dialog.getBehavior().setSkipCollapsed(true);
                 dialog.show();
             });
         }

File: app/src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -211,8 +211,7 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell
 
         int accessMode = ParcelFileDescriptor.parseMode(mode);
         boolean writeOnly = (accessMode & MODE_WRITE_ONLY) != 0;
-        boolean wasNotYetStored = ocFile.getStoragePath() == null;
-        boolean needsDownload = (!writeOnly || wasNotYetStored) && (!ocFile.isDown() || hasServerChange(document));
+        boolean needsDownload = !ocFile.existsOnDevice() || (!writeOnly && hasServerChange(document));
         if (needsDownload) {
             if (ocFile.getLocalModificationTimestamp() > ocFile.getLastSyncDateForData()) {
                 // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog

File: app/src/androidTest/java/com/owncloud/android/util/EncryptionTestIT.java
Patch:
@@ -533,7 +533,7 @@ public void filedrop() throws Exception {
             arbitraryDataProvider,
             user,
             folderID);
-        EncryptionUtils.encryptFileDropFiles(decryptedFolderMetadata1, encryptedFolderMetadata1);
+        EncryptionUtils.encryptFileDropFiles(decryptedFolderMetadata1, encryptedFolderMetadata1, cert);
 
         // serialize
         String encryptedJson = serializeJSON(encryptedFolderMetadata1);

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1186,7 +1186,7 @@ public boolean onFileActionChosen(@IdRes final int itemId, Set<OCFile> checkedFi
             } else if (itemId == R.id.action_unlock_file) {
                 mContainerActivity.getFileOperationsHelper().toggleFileLock(singleFile, false);
             } else if (itemId == R.id.action_pin_to_homescreen) {
-                shortcutUtil.addShortcutToHomescreen(singleFile, viewThemeUtils);
+                shortcutUtil.addShortcutToHomescreen(singleFile, viewThemeUtils, accountManager.getUser(), syncedFolderProvider);
                 return true;
             }
         }

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -510,6 +510,7 @@ private LocalFileListItemViewHolder(View itemView) {
 
             itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.overflow_menu).setVisibility(View.GONE);
+            itemView.findViewById(R.id.tagsGroup).setVisibility(View.GONE);
         }
     }
 

File: app/src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -2,7 +2,9 @@
  * Nextcloud Android client application
  *
  * @author Chris Narkiewicz
+ * @author TSI-mc
  * Copyright (C) 2019 Chris Narkiewicz
+ * Copyright (C) 2023 TSI-mc
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
@@ -340,7 +342,7 @@ public void resetOwnCloudAccount() {
     @Override
     public  boolean accountOwnsFile(OCFile file, Account account) {
         final String ownerId = file.getOwnerId();
-        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equals(ownerId);
+        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equalsIgnoreCase(ownerId);
     }
 
     @Override

File: app/src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -340,7 +340,7 @@ public void resetOwnCloudAccount() {
     @Override
     public  boolean accountOwnsFile(OCFile file, Account account) {
         final String ownerId = file.getOwnerId();
-        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equals(ownerId);
+        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equalsIgnoreCase(ownerId);
     }
 
     @Override

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -800,7 +800,9 @@ public void sendShareFile(OCFile file, boolean hideNcSharingOptions) {
         OCCapability capability = fileActivity.getStorageManager().getCapability(fileActivity.getAccount().name);
         SendShareDialog mSendShareDialog = SendShareDialog.newInstance(file, hideNcSharingOptions, capability);
         mSendShareDialog.setFileOperationsHelper(this);
-        mSendShareDialog.show(ft, "TAG_SEND_SHARE_DIALOG");
+        if (fm.findFragmentByTag("TAG_SEND_SHARE_DIALOG") == null) {
+            mSendShareDialog.show(ft, "TAG_SEND_SHARE_DIALOG");
+        }
     }
 
     public void sendFiles(Set<OCFile> files) {

File: app/src/main/java/com/owncloud/android/ui/dialog/ChooseRichDocumentsTemplateDialogFragment.java
Patch:
@@ -64,6 +64,7 @@
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 import java.util.Set;
 
 import javax.inject.Inject;
@@ -297,7 +298,7 @@ private void prefillFilenameIfEmpty(Template template) {
 
     private void checkEnablingCreateButton() {
         Template selectedTemplate = adapter.getSelectedTemplate();
-        String name = binding.filename.getText().toString();
+        String name = Objects.requireNonNull(binding.filename.getText()).toString();
 
         positiveButton.setEnabled(selectedTemplate != null && !name.isEmpty() &&
                                       !name.equalsIgnoreCase(DOT + selectedTemplate.getExtension()));

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -495,7 +495,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
             }
 
             // Get the last modification date of the file from the file system
-            String lastModifiedTimestamp = Long.toString(originalFile.lastModified() / 1000);
+            long lastModifiedTimestamp = originalFile.lastModified() / 1000;
 
             Long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
 
@@ -759,7 +759,7 @@ private RemoteOperationResult normalUpload(OwnCloudClient client) {
             }
 
             // Get the last modification date of the file from the file system
-            String lastModifiedTimestamp = Long.toString(originalFile.lastModified() / 1000);
+            long lastModifiedTimestamp = originalFile.lastModified() / 1000;
 
             final Long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
 

File: app/src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -564,7 +564,7 @@ private String createFile(Document targetFolder, String displayName, String mime
                                                                      newFilePath,
                                                                      mimeType,
                                                                      "",
-                                                                     String.valueOf(System.currentTimeMillis() / 1000),
+                                                                     System.currentTimeMillis() / 1000,
                                                                      FileUtil.getCreationTimestamp(emptyFile),
                                                                      false)
             .execute(client);

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -466,7 +466,7 @@ public static boolean checkEncryptionStatus(OCFile file, FileDataStorageManager
             return true;
         }
 
-        while (!OCFile.ROOT_PATH.equals(file.getDecryptedRemotePath())) {
+        while (file != null && !OCFile.ROOT_PATH.equals(file.getDecryptedRemotePath())) {
             if (file.isEncrypted()) {
                 return true;
             }

File: app/src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -495,7 +495,7 @@ private RemoteOperationResult encryptedUpload(OwnCloudClient client, OCFile pare
             }
 
             // Get the last modification date of the file from the file system
-            String lastModifiedTimestamp = Long.toString(originalFile.lastModified() / 1000);
+            long lastModifiedTimestamp = originalFile.lastModified() / 1000;
 
             Long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
 
@@ -759,7 +759,7 @@ private RemoteOperationResult normalUpload(OwnCloudClient client) {
             }
 
             // Get the last modification date of the file from the file system
-            String lastModifiedTimestamp = Long.toString(originalFile.lastModified() / 1000);
+            long lastModifiedTimestamp = originalFile.lastModified() / 1000;
 
             final Long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
 

File: app/src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -564,7 +564,7 @@ private String createFile(Document targetFolder, String displayName, String mime
                                                                      newFilePath,
                                                                      mimeType,
                                                                      "",
-                                                                     String.valueOf(System.currentTimeMillis() / 1000),
+                                                                     System.currentTimeMillis() / 1000,
                                                                      FileUtil.getCreationTimestamp(emptyFile),
                                                                      false)
             .execute(client);

File: app/src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -466,7 +466,7 @@ public static boolean checkEncryptionStatus(OCFile file, FileDataStorageManager
             return true;
         }
 
-        while (!OCFile.ROOT_PATH.equals(file.getDecryptedRemotePath())) {
+        while (file != null && !OCFile.ROOT_PATH.equals(file.getDecryptedRemotePath())) {
             if (file.isEncrypted()) {
                 return true;
             }

File: app/src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -54,6 +54,7 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.lib.resources.files.CreateLocalFileException;
 import com.owncloud.android.lib.resources.files.FileUtils;
 import com.owncloud.android.operations.DownloadFileOperation;
 import com.owncloud.android.operations.DownloadType;

File: app/src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -326,7 +326,8 @@ String getMessageForDownloadFileOperation(
         } else {
             if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
                 return res.getString(R.string.downloader_download_file_not_found);
-
+            } else if (result.getCode() == ResultCode.CANNOT_CREATE_FILE) {
+                return res.getString(R.string.download_cannot_create_file);
             }
         }
         return null;

File: app/src/main/java/com/nextcloud/client/di/AppComponent.java
Patch:
@@ -33,6 +33,7 @@
 import com.owncloud.android.MainApp;
 import com.owncloud.android.media.MediaControlView;
 import com.owncloud.android.ui.ThemeableSwitchPreference;
+import com.owncloud.android.ui.whatsnew.ProgressIndicator;
 import com.owncloud.android.utils.FilesUploadHelper;
 
 import javax.inject.Singleton;
@@ -68,6 +69,8 @@ public interface AppComponent {
 
     void inject(FilesUploadHelper filesUploadHelper);
 
+    void inject(ProgressIndicator progressIndicator);
+
     @Component.Builder
     interface Builder {
         @BindsInstance

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -602,7 +602,7 @@ public boolean isHidden() {
     public long getLocalId() {
         if (localId > 0) {
             return localId;
-        } else if (remoteId != null) {
+        } else if (remoteId != null && remoteId.length() > 8) {
             return Long.parseLong(remoteId.substring(0, 8).replaceAll("^0*", ""));
         } else {
             return -1;

File: app/src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -68,7 +68,8 @@ public class CreateShareWithShareeOperation extends SyncOperation {
      * @param shareeName  User or group name of the target sharee.
      * @param shareType   Type of share determines type of sharee; {@link ShareType#USER} and {@link ShareType#GROUP}
      *                    are the only valid values for the moment.
-     * @param permissions Share permissions key as detailed in https://doc.owncloud.org/server/8.2/developer_manual/core/ocs-share-api.html
+     * @param permissions Share permissions key as detailed in
+     *                    https://docs.nextcloud.com/server/latest/developer_manual/client_apis/OCS/ocs-share-api.html#create-a-new-share
      *                    .
      */
     public CreateShareWithShareeOperation(String path,

File: app/src/main/java/com/owncloud/android/ui/events/FavoriteEvent.java
Patch:
@@ -25,11 +25,9 @@
 public class FavoriteEvent {
     public final String remotePath;
     public final boolean shouldFavorite;
-    public final String remoteId;
 
-    public FavoriteEvent(String remotePath, boolean shouldFavorite, String remoteId) {
+    public FavoriteEvent(String remotePath, boolean shouldFavorite) {
         this.remotePath = remotePath;
         this.shouldFavorite = shouldFavorite;
-        this.remoteId = remoteId;
     }
 }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1605,7 +1605,7 @@ public void onMessageEvent(FavoriteEvent event) {
 
             if (remoteOperationResult.isSuccess()) {
                 boolean removeFromList = currentSearchType == SearchType.FAVORITE_SEARCH && !event.shouldFavorite;
-                mAdapter.setFavoriteAttributeForItemID(event.remoteId, event.shouldFavorite, removeFromList);
+                mAdapter.setFavoriteAttributeForItemID(event.remotePath, event.shouldFavorite, removeFromList);
             }
 
         } catch (ClientFactory.CreationException e) {

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -906,7 +906,7 @@ public void toggleFavoriteFiles(Collection<OCFile> files, boolean shouldBeFavori
 
     public void toggleFavoriteFile(OCFile file, boolean shouldBeFavorite) {
         if (file.isFavorite() != shouldBeFavorite) {
-            EventBus.getDefault().post(new FavoriteEvent(file.getRemotePath(), shouldBeFavorite, file.getRemoteId()));
+            EventBus.getDefault().post(new FavoriteEvent(file.getRemotePath(), shouldBeFavorite));
         }
     }
 

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -602,7 +602,7 @@ public boolean isHidden() {
     public long getLocalId() {
         if (localId > 0) {
             return localId;
-        } else if (remoteId != null) {
+        } else if (remoteId != null && remoteId.length() > 8) {
             return Long.parseLong(remoteId.substring(0, 8).replaceAll("^0*", ""));
         } else {
             return -1;

File: app/src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -68,7 +68,8 @@ public class CreateShareWithShareeOperation extends SyncOperation {
      * @param shareeName  User or group name of the target sharee.
      * @param shareType   Type of share determines type of sharee; {@link ShareType#USER} and {@link ShareType#GROUP}
      *                    are the only valid values for the moment.
-     * @param permissions Share permissions key as detailed in https://doc.owncloud.org/server/8.2/developer_manual/core/ocs-share-api.html
+     * @param permissions Share permissions key as detailed in
+     *                    https://docs.nextcloud.com/server/latest/developer_manual/client_apis/OCS/ocs-share-api.html#create-a-new-share
      *                    .
      */
     public CreateShareWithShareeOperation(String path,

File: app/src/main/java/com/owncloud/android/ui/events/FavoriteEvent.java
Patch:
@@ -25,11 +25,9 @@
 public class FavoriteEvent {
     public final String remotePath;
     public final boolean shouldFavorite;
-    public final String remoteId;
 
-    public FavoriteEvent(String remotePath, boolean shouldFavorite, String remoteId) {
+    public FavoriteEvent(String remotePath, boolean shouldFavorite) {
         this.remotePath = remotePath;
         this.shouldFavorite = shouldFavorite;
-        this.remoteId = remoteId;
     }
 }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1605,7 +1605,7 @@ public void onMessageEvent(FavoriteEvent event) {
 
             if (remoteOperationResult.isSuccess()) {
                 boolean removeFromList = currentSearchType == SearchType.FAVORITE_SEARCH && !event.shouldFavorite;
-                mAdapter.setFavoriteAttributeForItemID(event.remoteId, event.shouldFavorite, removeFromList);
+                mAdapter.setFavoriteAttributeForItemID(event.remotePath, event.shouldFavorite, removeFromList);
             }
 
         } catch (ClientFactory.CreationException e) {

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -906,7 +906,7 @@ public void toggleFavoriteFiles(Collection<OCFile> files, boolean shouldBeFavori
 
     public void toggleFavoriteFile(OCFile file, boolean shouldBeFavorite) {
         if (file.isFavorite() != shouldBeFavorite) {
-            EventBus.getDefault().post(new FavoriteEvent(file.getRemotePath(), shouldBeFavorite, file.getRemoteId()));
+            EventBus.getDefault().post(new FavoriteEvent(file.getRemotePath(), shouldBeFavorite));
         }
     }
 

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 67;
+    public static final int DB_VERSION = 68;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 67;
+    public static final int DB_VERSION = 68;
 
     private ProviderMeta() {
         // No instance

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -30,6 +30,7 @@
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
 import com.nextcloud.client.account.User;
+import com.owncloud.android.R;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.ArbitraryDataProviderImpl;
 import com.owncloud.android.datamodel.DecryptedFolderMetadata;
@@ -664,8 +665,7 @@ public static String privateKeyToPEM(PrivateKey privateKey) {
      */
 
     public static List<String> getRandomWords(int count, Context context) throws IOException {
-        InputStream ins = context.getResources().openRawResource(context.getResources()
-                .getIdentifier("encryption_key_words", "raw", context.getPackageName()));
+        InputStream ins = context.getResources().openRawResource(R.raw.encryption_key_words);
 
         InputStreamReader inputStreamReader = new InputStreamReader(ins);
 

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -73,6 +73,7 @@
 
 import java.io.File;
 import java.io.FileNotFoundException;
+import java.io.IOException;
 import java.io.InputStream;
 import java.lang.ref.WeakReference;
 import java.net.URLEncoder;
@@ -944,7 +945,7 @@ private Bitmap doFileInBackground(File file, Type type) {
                     } finally {
                         try {
                             retriever.release();
-                        } catch (RuntimeException ex) {
+                        } catch (RuntimeException | IOException ex) {
                             // Ignore failure at this point.
                             Log_OC.w(TAG, "Failed release MediaMetadataRetriever for " + file.getAbsolutePath());
                         }

File: app/src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -193,9 +193,8 @@ private void setupWebSettings(WebSettings webSettings) {
         webSettings.setDomStorageEnabled(true);
 
         // caching disabled in debug mode
-        if ((getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) == 0) {
-            webSettings.setAppCacheEnabled(true);
-            webSettings.setAppCachePath(getCacheDir().getPath());
+        if ((getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
+            getWebView().getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
         }
     }
 

File: app/src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerIT.java
Patch:
@@ -344,7 +344,7 @@ public void testSaveNewFile() {
                                               targetContext).execute(client).isSuccess());
 
         OCFile newFile = new OCFile("/1/1/1.txt");
-        newFile.setRemoteId("123");
+        newFile.setRemoteId("12345678");
 
         sut.saveNewFile(newFile);
     }

File: app/src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentProviderClientIT.java
Patch:
@@ -30,8 +30,6 @@
 import static org.junit.Assert.assertNotNull;
 
 public class FileDataStorageManagerContentProviderClientIT extends FileDataStorageManagerIT {
-    protected FileDataStorageManager sut;
-
     public void before() {
         sut = new FileDataStorageManager(user,
                                          targetContext
@@ -44,7 +42,6 @@ public void before() {
 
     @Test
     public void saveFile() {
-        before();
 
         String path = "/1.txt";
         OCFile file = new OCFile(path);

File: app/src/androidTest/java/com/owncloud/android/ui/activity/ConflictsResolveActivityIT.java
Patch:
@@ -246,7 +246,7 @@ public void keepNew() {
         OCFile existingFile = new OCFile("/newFile.txt");
         existingFile.setFileLength(1024000);
         existingFile.setModificationTimestamp(1582019340);
-        existingFile.setRemoteId("123abc");
+        existingFile.setRemoteId("00000123abc");
 
         OCFile newFile = new OCFile("/newFile.txt");
         newFile.setFileLength(56000);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1091,7 +1091,6 @@ public void onBackPressed() {
                 showSortListGroup(true);
                 resetTitleBarAndScrolling();
                 setDrawerAllFiles();
-                EventBus.getDefault().post(new ChangeMenuEvent()); // for OCFileListFragment to update sort menu
             }
         } else if (leftFragment instanceof PreviewTextStringFragment) {
             createMinFragments(null);

File: app/src/main/java/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -72,7 +72,7 @@ public UploaderAdapter(Context context,
     public View getView(int position, View convertView, ViewGroup parent) {
         View vi = convertView;
         if (convertView == null) {
-            vi = inflater.inflate(R.layout.uploader_list_item_layout, null);
+            vi = inflater.inflate(R.layout.uploader_list_item_layout, parent, false);
         }
 
         HashMap<String, OCFile> data = (HashMap<String, OCFile>) getItem(position);

File: app/src/main/java/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -72,7 +72,7 @@ public UploaderAdapter(Context context,
     public View getView(int position, View convertView, ViewGroup parent) {
         View vi = convertView;
         if (convertView == null) {
-            vi = inflater.inflate(R.layout.uploader_list_item_layout, null);
+            vi = inflater.inflate(R.layout.uploader_list_item_layout, parent, false);
         }
 
         HashMap<String, OCFile> data = (HashMap<String, OCFile>) getItem(position);

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1227,7 +1227,6 @@ private void pickFolderForMoveOrCopy(final String extraAction, final Set<OCFile>
             paths.add(file.getRemotePath());
         }
         action.putStringArrayListExtra(FolderPickerActivity.EXTRA_FILE_PATHS, paths);
-        action.putExtra(FolderPickerActivity.EXTRA_CURRENT_FOLDER, mFile);
         action.putExtra(FolderPickerActivity.EXTRA_ACTION, extraAction);
         getActivity().startActivityForResult(action, requestCode);
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1227,7 +1227,6 @@ private void pickFolderForMoveOrCopy(final String extraAction, final Set<OCFile>
             paths.add(file.getRemotePath());
         }
         action.putStringArrayListExtra(FolderPickerActivity.EXTRA_FILE_PATHS, paths);
-        action.putExtra(FolderPickerActivity.EXTRA_CURRENT_FOLDER, mFile);
         action.putExtra(FolderPickerActivity.EXTRA_ACTION, extraAction);
         getActivity().startActivityForResult(action, requestCode);
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -381,7 +381,7 @@ public void requestPasswordForShare(OCShare share, boolean askForPassword) {
 
     @Override
     public void showProfileBottomSheet(User user, String shareWith) {
-        if (user.getServer().getVersion().isNewerOrEqual(NextcloudVersion.Companion.getNextcloud_23())) {
+        if (user.getServer().getVersion().isNewerOrEqual(NextcloudVersion.nextcloud_23)) {
             new RetrieveHoverCardAsyncTask(user,
                                            shareWith,
                                            fileActivity,

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -381,7 +381,7 @@ public void requestPasswordForShare(OCShare share, boolean askForPassword) {
 
     @Override
     public void showProfileBottomSheet(User user, String shareWith) {
-        if (user.getServer().getVersion().isNewerOrEqual(NextcloudVersion.Companion.getNextcloud_23())) {
+        if (user.getServer().getVersion().isNewerOrEqual(NextcloudVersion.nextcloud_23)) {
             new RetrieveHoverCardAsyncTask(user,
                                            shareWith,
                                            fileActivity,

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -117,8 +117,7 @@ public OCFile getFileByPath(String path) {
         return getFileByEncryptedRemotePath(path);
     }
 
-    public @Nullable
-    OCFile getFileByEncryptedRemotePath(String path) {
+    public OCFile getFileByEncryptedRemotePath(String path) {
         return getFileByPath(ProviderTableMeta.FILE_PATH, path);
     }
 

File: app/src/main/java/com/owncloud/android/files/CreateFileFromTemplateOperation.java
Patch:
@@ -38,14 +38,14 @@ public class CreateFileFromTemplateOperation extends RemoteOperation {
     private static final String NEW_FROM_TEMPLATE_URL = "/ocs/v2.php/apps/richdocuments/api/v1/templates/new";
 
     private String path;
-    private int templateId;
+    private long templateId;
 
     // JSON node names
     private static final String NODE_OCS = "ocs";
     private static final String NODE_DATA = "data";
     private static final String JSON_FORMAT = "?format=json";
 
-    public CreateFileFromTemplateOperation(String path, int templateId) {
+    public CreateFileFromTemplateOperation(String path, long templateId) {
         this.path = path;
         this.templateId = templateId;
     }

File: app/src/main/java/com/owncloud/android/files/FetchTemplateOperation.java
Patch:
@@ -78,11 +78,11 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 for (int i = 0; i < templates.length(); i++) {
                     JSONObject templateObject = templates.getJSONObject(i);
 
-                    templateArray.add(new Template(templateObject.getInt("id"),
+                    templateArray.add(new Template(templateObject.getLong("id"),
                                                    templateObject.getString("name"),
                                                    templateObject.optString("preview"),
                                                    Template.Type.parse(templateObject.getString("type")
-                                                                            .toUpperCase(Locale.ROOT)),
+                                                                           .toUpperCase(Locale.ROOT)),
                                                    templateObject.getString("extension")));
                 }
 

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -488,7 +488,8 @@ private void fixStoragePath() {
     }
 
     private void enableStrictMode() {
-        if (BuildConfig.DEBUG) {
+        if (BuildConfig.DEBUG && BuildConfig.RUNTIME_PERF_ANALYSIS) {
+            Log_OC.d(TAG, "Enabling StrictMode");
             StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
                                            .detectDiskReads()
                                            .detectDiskWrites()

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -488,7 +488,8 @@ private void fixStoragePath() {
     }
 
     private void enableStrictMode() {
-        if (BuildConfig.DEBUG) {
+        if (BuildConfig.DEBUG && BuildConfig.RUNTIME_PERF_ANALYSIS) {
+            Log_OC.d(TAG, "Enabling StrictMode");
             StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
                                            .detectDiskReads()
                                            .detectDiskWrites()

File: app/src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -427,7 +427,7 @@ private void setupE2EPreference(PreferenceCategory preferenceCategoryMore) {
 
         if (preference != null) {
             if (FileOperationsHelper.isEndToEndEncryptionSetup(this, user) ||
-                !CapabilityUtils.getCapability(this).getEndToEndEncryptionKeysExist().isFalse()) {
+                CapabilityUtils.getCapability(this).getEndToEndEncryptionKeysExist().isTrue()) {
                 preferenceCategoryMore.removePreference(preference);
             } else {
                 preference.setOnPreferenceClickListener(p -> {

File: app/src/main/java/third_parties/sufficientlysecure/AndroidCalendar.java
Patch:
@@ -101,7 +101,7 @@ public static List<AndroidCalendar> loadAll(ContentResolver resolver) {
             calendar.mTimezone = getString(cur, Calendars.CALENDAR_TIME_ZONE);
 
             final String[] args = new String[]{calendar.mIdStr};
-            Cursor eventsCur = resolver.query(Events.CONTENT_URI, CAL_ID_COLS, CAL_ID_WHERE, args, null);
+            Cursor eventsCur = resolver.query(Events.CONTENT_URI, CAL_ID_COLS, CAL_ID_WHERE + " AND deleted=0", args, null);
             calendar.mNumEntries = eventsCur.getCount();
             eventsCur.close();
             calendars.add(calendar);

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -53,6 +53,7 @@
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.di.Injectable;
 import com.nextcloud.client.jobs.BackgroundJobManager;
+import com.nextcloud.client.media.ExoplayerListener;
 import com.nextcloud.client.media.NextcloudExoPlayer;
 import com.nextcloud.client.media.PlayerServiceConnection;
 import com.nextcloud.client.network.ClientFactory;
@@ -330,6 +331,7 @@ public void onStart() {
                             final NextcloudClient client = clientFactory.createNextcloudClient(accountManager.getUser());
                             handler.post(() ->{
                                 exoPlayer = NextcloudExoPlayer.createNextcloudExoplayer(requireContext(), client);
+                                exoPlayer.addListener(new ExoplayerListener(requireContext(), binding.exoplayerView, exoPlayer));
                                 playVideo();
                             });
                         } catch (ClientFactory.CreationException e) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -331,7 +331,7 @@ public void onStart() {
                             final NextcloudClient client = clientFactory.createNextcloudClient(accountManager.getUser());
                             handler.post(() ->{
                                 exoPlayer = NextcloudExoPlayer.createNextcloudExoplayer(requireContext(), client);
-                                exoPlayer.addListener(new ExoplayerListener(requireContext(), exoPlayer));
+                                exoPlayer.addListener(new ExoplayerListener(requireContext(), binding.exoplayerView, exoPlayer));
                                 playVideo();
                             });
                         } catch (ClientFactory.CreationException e) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -53,6 +53,7 @@
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.di.Injectable;
 import com.nextcloud.client.jobs.BackgroundJobManager;
+import com.nextcloud.client.media.ExoplayerListener;
 import com.nextcloud.client.media.NextcloudExoPlayer;
 import com.nextcloud.client.media.PlayerServiceConnection;
 import com.nextcloud.client.network.ClientFactory;
@@ -330,6 +331,7 @@ public void onStart() {
                             final NextcloudClient client = clientFactory.createNextcloudClient(accountManager.getUser());
                             handler.post(() ->{
                                 exoPlayer = NextcloudExoPlayer.createNextcloudExoplayer(requireContext(), client);
+                                exoPlayer.addListener(new ExoplayerListener(requireContext(), exoPlayer));
                                 playVideo();
                             });
                         } catch (ClientFactory.CreationException e) {

File: app/src/main/java/third_parties/sufficientlysecure/AndroidCalendar.java
Patch:
@@ -101,7 +101,7 @@ public static List<AndroidCalendar> loadAll(ContentResolver resolver) {
             calendar.mTimezone = getString(cur, Calendars.CALENDAR_TIME_ZONE);
 
             final String[] args = new String[]{calendar.mIdStr};
-            Cursor eventsCur = resolver.query(Events.CONTENT_URI, CAL_ID_COLS, CAL_ID_WHERE, args, null);
+            Cursor eventsCur = resolver.query(Events.CONTENT_URI, CAL_ID_COLS, CAL_ID_WHERE + " AND deleted=0", args, null);
             calendar.mNumEntries = eventsCur.getCount();
             eventsCur.close();
             calendars.add(calendar);

File: app/src/main/java/third_parties/sufficientlysecure/SaveCalendar.java
Patch:
@@ -203,7 +203,7 @@ public void start() throws Exception {
 
             upload(fileName);
         } else {
-            Log_OC.w(TAG, "Calendar has " + selectedCal.mIdStr + "no components");
+            Log_OC.w(TAG, "Calendar '" + selectedCal.mIdStr + "' has no components");
         }
     }
 

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -456,8 +456,7 @@ private boolean isEmptyFolder() {
         if (isSingleSelection()) {
             OCFile file = files.iterator().next();
 
-            boolean noChildren = componentsGetter
-                .getStorageManager()
+            boolean noChildren = storageManager
                 .getFolderContent(file, false).size() == EMPTY_FILE_LENGTH;
 
             return file.isFolder() && file.getFileLength() == EMPTY_FILE_LENGTH && noChildren;

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -130,6 +130,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.content.ContextCompat;
+import androidx.core.content.res.ResourcesCompat;
 import androidx.drawerlayout.widget.DrawerLayout;
 import androidx.fragment.app.FragmentActivity;
 import androidx.fragment.app.FragmentManager;
@@ -709,9 +710,10 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             mIsActionModeNew = true;
 
             // fake menu to be able to use bottom sheet instead
-            // TODO android:iconTint does not work below API 26. Color icon with viewThemeUtils
             MenuInflater inflater = getActivity().getMenuInflater();
             inflater.inflate(R.menu.custom_menu_placeholder, menu);
+            final MenuItem item = menu.findItem(R.id.custom_menu_placeholder_item);
+            item.setIcon(viewThemeUtils.platform.colorDrawable(item.getIcon(), ContextCompat.getColor(requireContext(), R.color.white)));
             mode.invalidate();
 
             //set actionMode color

File: app/src/main/java/com/nextcloud/client/network/NetworkModule.java
Patch:
@@ -37,12 +37,13 @@ public class NetworkModule {
     @Provides
     ConnectivityService connectivityService(ConnectivityManager connectivityManager,
                                             UserAccountManager accountManager,
-                                            ClientFactory clientFactory) {
+                                            ClientFactory clientFactory,
+                                            WalledCheckCache walledCheckCache) {
         return new ConnectivityServiceImpl(connectivityManager,
                                            accountManager,
                                            clientFactory,
                                            new ConnectivityServiceImpl.GetRequestBuilder(),
-                                           Build.VERSION.SDK_INT
+                                           walledCheckCache
         );
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1740,7 +1740,7 @@ protected void setTitle(final String title) {
                 final Context context = getContext();
 
                 if (actionBar != null && context != null) {
-                    viewThemeUtils.files.themeActionBar(context, actionBar, title);
+                    viewThemeUtils.files.themeActionBar(context, actionBar, title, true);
                 }
             }
         });

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1149,7 +1149,7 @@ protected void onResume() {
         localBroadcastManager.registerReceiver(mDownloadFinishReceiver, downloadIntentFilter);
 
         // setup drawer
-        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItemId);
+        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, -1);
 
         if (menuItemId == -1) {
             if (MainApp.isOnlyOnDevice()) {

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1536,6 +1536,7 @@ protected void setEmptyView(SearchEvent event) {
     public void onMessageEvent(ChangeMenuEvent changeMenuEvent) {
         searchFragment = false;
         searchEvent = null;
+        currentSearchType = SearchType.NO_SEARCH;
 
         menuItemAddRemoveValue = MenuItemAddRemove.ADD_GRID_AND_SORT_WITH_SEARCH;
         Activity activity = getActivity();

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1536,6 +1536,7 @@ protected void setEmptyView(SearchEvent event) {
     public void onMessageEvent(ChangeMenuEvent changeMenuEvent) {
         searchFragment = false;
         searchEvent = null;
+        currentSearchType = SearchType.NO_SEARCH;
 
         menuItemAddRemoveValue = MenuItemAddRemove.ADD_GRID_AND_SORT_WITH_SEARCH;
         Activity activity = getActivity();

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1739,7 +1739,7 @@ protected void setTitle(final String title) {
                 final Context context = getContext();
 
                 if (actionBar != null && context != null) {
-                    viewThemeUtils.files.themeActionBar(context, actionBar, title);
+                    viewThemeUtils.files.themeActionBar(context, actionBar, title, true);
                 }
             }
         });

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1149,7 +1149,7 @@ protected void onResume() {
         localBroadcastManager.registerReceiver(mDownloadFinishReceiver, downloadIntentFilter);
 
         // setup drawer
-        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItemId);
+        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, -1);
 
         if (menuItemId == -1) {
             if (MainApp.isOnlyOnDevice()) {

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -276,7 +276,7 @@ public static AppComponent getAppComponent() {
     @SuppressFBWarnings("ST")
     @Override
     public void onCreate() {
-         enableStrictMode();
+        enableStrictMode();
 
         viewThemeUtils = viewThemeUtilsProvider.get();
 

File: app/src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -142,16 +142,16 @@ public static Drawable getFolderTypeIcon(boolean isSharedViaUsers,
                                              ViewThemeUtils viewThemeUtils) {
         int drawableId;
 
-        if (isSharedViaLink) {
+        if (WebdavEntry.MountType.GROUP == mountType || isGroupFolder) {
+            drawableId = R.drawable.folder_group;
+        } else if (isSharedViaLink) {
             drawableId = R.drawable.folder_shared_link;
         } else if (isSharedViaUsers) {
             drawableId = R.drawable.folder_shared_users;
         } else if (isEncrypted) {
             drawableId = R.drawable.folder_encrypted;
         } else if (WebdavEntry.MountType.EXTERNAL == mountType) {
             drawableId = R.drawable.folder_external;
-        } else if (WebdavEntry.MountType.GROUP == mountType || isGroupFolder) {
-            drawableId = R.drawable.folder_group;
         } else {
             drawableId = R.drawable.folder;
         }

File: app/src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -142,16 +142,16 @@ public static Drawable getFolderTypeIcon(boolean isSharedViaUsers,
                                              ViewThemeUtils viewThemeUtils) {
         int drawableId;
 
-        if (isSharedViaLink) {
+        if (WebdavEntry.MountType.GROUP == mountType || isGroupFolder) {
+            drawableId = R.drawable.folder_group;
+        } else if (isSharedViaLink) {
             drawableId = R.drawable.folder_shared_link;
         } else if (isSharedViaUsers) {
             drawableId = R.drawable.folder_shared_users;
         } else if (isEncrypted) {
             drawableId = R.drawable.folder_encrypted;
         } else if (WebdavEntry.MountType.EXTERNAL == mountType) {
             drawableId = R.drawable.folder_external;
-        } else if (WebdavEntry.MountType.GROUP == mountType || isGroupFolder) {
-            drawableId = R.drawable.folder_group;
         } else {
             drawableId = R.drawable.folder;
         }

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -755,6 +755,8 @@ private void populateDirectoryList() {
             if (files.isEmpty()) {
                 setMessageForEmptyList(R.string.file_list_empty_headline, R.string.empty,
                                        R.drawable.uploads);
+                mEmptyListContainer.setVisibility(View.VISIBLE);
+                binding.list.setVisibility(View.GONE);
             } else {
                 mEmptyListContainer.setVisibility(View.GONE);
 
@@ -777,6 +779,7 @@ private void populateDirectoryList() {
                                                          viewThemeUtils);
 
                 binding.list.setAdapter(sa);
+                binding.list.setVisibility(View.VISIBLE);
             }
             MaterialButton btnChooseFolder = binding.uploaderChooseFolder;
             viewThemeUtils.material.colorMaterialButtonPrimaryFilled(btnChooseFolder);

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -755,6 +755,8 @@ private void populateDirectoryList() {
             if (files.isEmpty()) {
                 setMessageForEmptyList(R.string.file_list_empty_headline, R.string.empty,
                                        R.drawable.uploads);
+                mEmptyListContainer.setVisibility(View.VISIBLE);
+                binding.list.setVisibility(View.GONE);
             } else {
                 mEmptyListContainer.setVisibility(View.GONE);
 
@@ -777,6 +779,7 @@ private void populateDirectoryList() {
                                                          viewThemeUtils);
 
                 binding.list.setAdapter(sa);
+                binding.list.setVisibility(View.VISIBLE);
             }
             MaterialButton btnChooseFolder = binding.uploaderChooseFolder;
             viewThemeUtils.material.colorMaterialButtonPrimaryFilled(btnChooseFolder);

File: app/src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -77,11 +77,10 @@
 import java.lang.ref.WeakReference;
 import java.net.URLEncoder;
 import java.util.List;
-import java.util.Locale;
 
 import androidx.annotation.NonNull;
-import androidx.annotation.VisibleForTesting;
 import androidx.annotation.Nullable;
+import androidx.annotation.VisibleForTesting;
 import androidx.core.content.res.ResourcesCompat;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
@@ -152,7 +151,7 @@ protected Void doInBackground(File... params) {
                         mThumbnailCache = new DiskLruImageCache(diskCacheDir, DISK_CACHE_SIZE, mCompressFormat,
                                                                 mCompressQuality);
                     } catch (Exception e) {
-                        Log_OC.d(TAG, String.format(Locale.US, "Disk cache init failed: %s", e.getMessage()));
+                        Log_OC.d(TAG, "Disk cache init failed", e);
                         mThumbnailCache = null;
                     }
                 }
@@ -1378,6 +1377,7 @@ public static void generateThumbnailFromOCFile(OCFile file, User user, Context c
     @VisibleForTesting
     public static void clearCache() {
         mThumbnailCache.clearCache();
+        mThumbnailCache = null;
     }
 
     private static Bitmap doResizedImageInBackground(OCFile file, FileDataStorageManager storageManager) {

File: app/src/main/java/com/nextcloud/android/sso/PatchMethod.java
Patch:
@@ -106,11 +106,10 @@ protected RequestEntity generateRequestEntity() {
             // as bytes allows us to keep the current charset without worrying about how
             // this charset will effect the encoding of the form url encoded string.
             String content = EncodingUtil.formUrlEncode(getParameters(), getRequestCharSet());
-            ByteArrayRequestEntity entity = new ByteArrayRequestEntity(
+            return new ByteArrayRequestEntity(
                 EncodingUtil.getAsciiBytes(content),
                 FORM_URL_ENCODED_CONTENT_TYPE
             );
-            return entity;
         } else {
             return super.generateRequestEntity();
         }

File: app/src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -1081,7 +1081,7 @@ private static boolean isValidColumnName(@NonNull String columnName) {
 
         @VisibleForTesting
         public static void verifyColumns(@Nullable ContentValues contentValues) {
-            if (contentValues == null || contentValues.keySet().size() == 0) {
+            if (contentValues == null || contentValues.keySet().isEmpty()) {
                 return;
             }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -826,7 +826,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
 
     @Override
     public void onPrepareOptionsMenu(@NonNull Menu menu) {
-        if (mOriginalMenuItems.size() == 0) {
+        if (mOriginalMenuItems.isEmpty()) {
             mOriginalMenuItems.add(menu.findItem(R.id.action_search));
         }
 

File: app/src/main/java/com/nextcloud/android/sso/PatchMethod.java
Patch:
@@ -106,11 +106,10 @@ protected RequestEntity generateRequestEntity() {
             // as bytes allows us to keep the current charset without worrying about how
             // this charset will effect the encoding of the form url encoded string.
             String content = EncodingUtil.formUrlEncode(getParameters(), getRequestCharSet());
-            ByteArrayRequestEntity entity = new ByteArrayRequestEntity(
+            return new ByteArrayRequestEntity(
                 EncodingUtil.getAsciiBytes(content),
                 FORM_URL_ENCODED_CONTENT_TYPE
             );
-            return entity;
         } else {
             return super.generateRequestEntity();
         }

File: app/src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -1081,7 +1081,7 @@ private static boolean isValidColumnName(@NonNull String columnName) {
 
         @VisibleForTesting
         public static void verifyColumns(@Nullable ContentValues contentValues) {
-            if (contentValues == null || contentValues.keySet().size() == 0) {
+            if (contentValues == null || contentValues.keySet().isEmpty()) {
                 return;
             }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -826,7 +826,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
 
     @Override
     public void onPrepareOptionsMenu(@NonNull Menu menu) {
-        if (mOriginalMenuItems.size() == 0) {
+        if (mOriginalMenuItems.isEmpty()) {
             mOriginalMenuItems.add(menu.findItem(R.id.action_search));
         }
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -89,6 +89,7 @@
 import com.owncloud.android.ui.fragment.FileDetailSharingFragment;
 import com.owncloud.android.ui.fragment.OCFileListFragment;
 import com.owncloud.android.ui.helpers.FileOperationsHelper;
+import com.owncloud.android.ui.preview.PreviewImageActivity;
 import com.owncloud.android.utils.ClipboardUtil;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.ErrorMessageAdapter;
@@ -204,7 +205,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 savedInstanceState.getLong(KEY_WAITING_FOR_OP_ID, Long.MAX_VALUE)
                                                    );
             final ActionBar actionBar = getSupportActionBar();
-            if (actionBar != null) {
+            if (actionBar != null && !(this instanceof PreviewImageActivity)) {
                 viewThemeUtils.files.themeActionBar(this, actionBar, savedInstanceState.getString(KEY_ACTION_BAR_TITLE));
             }
         } else {

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -438,8 +438,7 @@ public void testProfileBottomSheet() {
         ProfileBottomSheetDialog sut = new ProfileBottomSheetDialog(fda,
                                                                     user,
                                                                     hoverCard,
-                                                                    fda.themeColorUtils,
-                                                                    fda.themeDrawableUtils);
+                                                                    fda.viewThemeUtils);
 
         fda.runOnUiThread(sut::show);
 

File: app/src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -209,9 +209,6 @@ public abstract class DrawerActivity extends ToolbarActivity
     @Inject
     ClientFactory clientFactory;
 
-    @Inject
-    ViewThemeUtils viewThemeUtils;
-
     /**
      * Initializes the drawer, its content and highlights the menu item with the given id. This method needs to be
      * called after the content view has been set.

File: app/src/main/java/com/owncloud/android/ui/asynctasks/RetrieveHoverCardAsyncTask.java
Patch:
@@ -91,8 +91,6 @@ protected void onPostExecute(HoverCard hoverCard) {
                 new ProfileBottomSheetDialog(activity,
                                              user,
                                              hoverCard,
-                                             themeColorUtils,
-                                             themeDrawableUtils,
                                              viewThemeUtils)
                     .show();
             } else {

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -255,7 +255,7 @@ private void setupViewPager() {
         binding.tabLayout.removeAllTabs();
 
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(R.string.drawer_item_activities).setIcon(R.drawable.ic_activity));
-        viewThemeUtils.material.themeTabLayoutOnSurface(binding.tabLayout);
+        viewThemeUtils.material.themeTabLayout(binding.tabLayout);
 
         if (!getFile().isEncrypted()) {
             binding.tabLayout.addTab(binding.tabLayout.newTab().setText(R.string.share_dialog_title).setIcon(R.drawable.shared_via_users));

File: app/src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -85,8 +85,7 @@ public LocalFileListAdapter(boolean localFolderPickerMode,
                                 LocalFileListFragmentInterface localFileListFragmentInterface,
                                 AppPreferences preferences,
                                 Context context,
-                                ThemeColorUtils themeColorUtils,
-                                ThemeDrawableUtils themeDrawableUtils) {
+                                final ViewThemeUtils viewThemeUtils) {
         this.preferences = preferences;
         mContext = context;
         mLocalFolderPicker = localFolderPickerMode;

File: app/src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -135,8 +135,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
                                             this,
                                             preferences,
                                             getActivity(),
-                                            themeColorUtils,
-                                            themeDrawableUtils);
+                                            viewThemeUtils);
         setRecyclerViewAdapter(mAdapter);
 
         listDirectory(mContainerActivity.getInitialDirectory());

File: app/src/main/java/third_parties/sufficientlysecure/SaveCalendar.java
Patch:
@@ -101,7 +101,7 @@
 import java.util.UUID;
 
 @SuppressLint("NewApi")
-public class SaveCalendar implements Injectable {
+public class SaveCalendar {
     private static final String TAG = "ICS_SaveCalendar";
 
     private final PropertyFactoryImpl mPropertyFactory = PropertyFactoryImpl.getInstance();

File: app/src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -235,7 +235,7 @@ private void filterShareFile(List<Integer> toShow, List<Integer> toHide, OCCapab
 
     private void filterSendFiles(List<Integer> toShow, List<Integer> toHide, boolean inSingleFileFragment) {
         boolean show = true;
-        if (containsEncryptedFile() || overflowMenu || SEND_OFF.equalsIgnoreCase(context.getString(R.string.send_files_to_other_apps))) {
+        if (overflowMenu || SEND_OFF.equalsIgnoreCase(context.getString(R.string.send_files_to_other_apps)) || containsEncryptedFile()) {
             show = false;
         }
         if (!inSingleFileFragment && (isSingleSelection() || !anyFileDown())) {
@@ -321,8 +321,8 @@ private void filterEncrypt(List<Integer> toShow, List<Integer> toHide, boolean e
     }
 
     private void filterUnsetEncrypted(List<Integer> toShow, List<Integer> toHide, boolean endToEndEncryptionEnabled) {
-        if (files.isEmpty() || !isSingleSelection() || isSingleFile() || !isEncryptedFolder() || hasEncryptedParent()
-            || !endToEndEncryptionEnabled || !isEmptyFolder()) {
+        if (!endToEndEncryptionEnabled || files.isEmpty() || !isSingleSelection() || isSingleFile() || !isEncryptedFolder() || hasEncryptedParent()
+            || !isEmptyFolder()) {
             toHide.add(R.id.action_unset_encrypted);
         } else {
             toShow.add(R.id.action_unset_encrypted);

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -47,6 +47,7 @@
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.ViewGroup;
 import android.view.WindowManager.LayoutParams;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemClickListener;
@@ -164,7 +165,7 @@ public class ReceiveExternalFilesActivity extends FileActivity
 
     private final static Charset FILENAME_ENCODING = Charset.forName("UTF-8");
 
-    private NestedScrollView mEmptyListContainer;
+    private ViewGroup mEmptyListContainer;
     private TextView mEmptyListMessage;
     private TextView mEmptyListHeadline;
     private ImageView mEmptyListIcon;

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -47,6 +47,7 @@
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.ViewGroup;
 import android.view.WindowManager.LayoutParams;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemClickListener;
@@ -164,7 +165,7 @@ public class ReceiveExternalFilesActivity extends FileActivity
 
     private final static Charset FILENAME_ENCODING = Charset.forName("UTF-8");
 
-    private NestedScrollView mEmptyListContainer;
+    private ViewGroup mEmptyListContainer;
     private TextView mEmptyListMessage;
     private TextView mEmptyListHeadline;
     private ImageView mEmptyListIcon;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -718,7 +718,7 @@ public void setErrorPreviewMessage() {
                                    PreviewImageActivity activity = (PreviewImageActivity) getActivity();
                                    if (activity != null) {
                                        activity.requestForDownload(getFile());
-                                   } else {
+                                   } else if (getContext() != null) {
                                        Snackbar.make(binding.emptyListView,
                                                      getResources().getString(R.string.could_not_download_image),
                                                      Snackbar.LENGTH_INDEFINITE).show();

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1916,7 +1916,7 @@ private void onCreateFolderOperationFinish(CreateFolderOperation operation,
         if (result.isSuccess()) {
             OCFileListFragment fileListFragment = getListOfFilesFragment();
             if (fileListFragment != null) {
-                fileListFragment.onItemClicked(getStorageManager().getFileByPath(operation.getRemotePath()));
+                fileListFragment.onItemClicked(getStorageManager().getFileByDecryptedRemotePath(operation.getRemotePath()));
             }
         } else {
             try {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -718,7 +718,7 @@ public void setErrorPreviewMessage() {
                                    PreviewImageActivity activity = (PreviewImageActivity) getActivity();
                                    if (activity != null) {
                                        activity.requestForDownload(getFile());
-                                   } else {
+                                   } else if (getContext() != null) {
                                        Snackbar.make(binding.emptyListView,
                                                      getResources().getString(R.string.could_not_download_image),
                                                      Snackbar.LENGTH_INDEFINITE).show();

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1916,7 +1916,7 @@ private void onCreateFolderOperationFinish(CreateFolderOperation operation,
         if (result.isSuccess()) {
             OCFileListFragment fileListFragment = getListOfFilesFragment();
             if (fileListFragment != null) {
-                fileListFragment.onItemClicked(getStorageManager().getFileByPath(operation.getRemotePath()));
+                fileListFragment.onItemClicked(getStorageManager().getFileByDecryptedRemotePath(operation.getRemotePath()));
             }
         } else {
             try {

File: app/src/main/java/com/owncloud/android/ui/EmptyRecyclerView.java
Patch:
@@ -69,6 +69,7 @@ private void initEmptyView() {
             int emptyCount = hasFooter ? 1 : 0;
             boolean empty = getAdapter() == null || getAdapter().getItemCount() == emptyCount;
             mEmptyView.setVisibility(empty ? VISIBLE : GONE);
+            mEmptyView.setFocusable(false);
             this.setVisibility(empty ? GONE : VISIBLE);
         }
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -124,7 +124,7 @@ public class ExtendedListFragment extends Fragment implements
     protected SwipeRefreshLayout mRefreshListLayout;
     protected MaterialButton mSortButton;
     protected MaterialButton mSwitchGridViewButton;
-    protected LinearLayout mEmptyListContainer;
+    protected ViewGroup mEmptyListContainer;
     protected TextView mEmptyListMessage;
     protected TextView mEmptyListHeadline;
     protected ImageView mEmptyListIcon;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -119,7 +119,7 @@ public class PreviewMediaFragment extends FileFragment implements OnTouchListene
     @Inject ClientFactory clientFactory;
     @Inject UserAccountManager accountManager;
     FragmentPreviewMediaBinding binding;
-    LinearLayout emptyListView;
+    private ViewGroup emptyListView;
     private ExoPlayer exoPlayer;
 
     /**

File: app/src/main/java/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -175,7 +175,7 @@ private boolean isValidNewName() throws IOException {
         String tmpFolderName = FileStorageUtils.getTemporalPath("");
         File testFile = new File(tmpFolderName + newName);
         File tmpFolder = testFile.getParentFile();
-        if (! tmpFolder.mkdirs()) {
+        if (!tmpFolder.exists() && !tmpFolder.mkdirs()) {
             Log_OC.e(TAG, "Unable to create parent folder " + tmpFolder.getAbsolutePath());
         }
         if (!tmpFolder.isDirectory()) {

File: app/src/main/java/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -175,7 +175,7 @@ private boolean isValidNewName() throws IOException {
         String tmpFolderName = FileStorageUtils.getTemporalPath("");
         File testFile = new File(tmpFolderName + newName);
         File tmpFolder = testFile.getParentFile();
-        if (! tmpFolder.mkdirs()) {
+        if (!tmpFolder.exists() && !tmpFolder.mkdirs()) {
             Log_OC.e(TAG, "Unable to create parent folder " + tmpFolder.getAbsolutePath());
         }
         if (!tmpFolder.isDirectory()) {

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -104,7 +104,8 @@ public void testRenameFileDialog() {
         if (Looper.myLooper() == null) {
             Looper.prepare();
         }
-        RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(new OCFile("/Test/"));
+        RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(new OCFile("/Test/"),
+                                                                               new OCFile("/"));
         showDialog(dialog);
     }
 

File: app/src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -19,11 +19,11 @@
 
 package com.owncloud.android.operations;
 
-import android.accounts.Account;
 import android.content.Context;
 import android.content.Intent;
 import android.util.Log;
 
+import com.google.common.collect.Maps;
 import com.google.gson.Gson;
 import com.nextcloud.android.lib.resources.directediting.DirectEditingObtainRemoteOperation;
 import com.nextcloud.client.account.User;
@@ -631,7 +631,7 @@ private void setLocalFileDataOnUpdatedFile(OCFile remoteFile, OCFile localFile,
 
     @NonNull
     public static Map<String, OCFile> prefillLocalFilesMap(DecryptedFolderMetadata metadata, List<OCFile> localFiles) {
-        Map<String, OCFile> localFilesMap = new HashMap<>(localFiles.size());
+        Map<String, OCFile> localFilesMap = Maps.newHashMapWithExpectedSize(localFiles.size());
 
         for (OCFile file : localFiles) {
             String remotePath = file.getRemotePath();

File: app/src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -38,6 +38,7 @@
 import android.view.MenuItem;
 import android.view.View;
 
+import com.google.common.collect.Sets;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.jobs.BackgroundJobManager;
@@ -65,7 +66,6 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
@@ -217,7 +217,7 @@ private boolean hasAccountListChanged() {
     }
 
     private static Set<String> toAccountNames(Collection<User> users) {
-        Set<String> accountNames = new HashSet<>(users.size());
+        Set<String> accountNames = Sets.newHashSetWithExpectedSize(users.size());
         for (User user : users) {
             accountNames.add(user.getAccountName());
         }

File: app/src/main/java/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -165,7 +165,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         binding.sharePassword.setText("");
         themeTextInputUtils.colorTextInput(binding.sharePasswordContainer,
                                            binding.sharePassword,
-                                           themeColorUtils.primaryColor(getActivity()));
+                                           themeColorUtils.primaryColor(getActivity()),
+                                           themeColorUtils.primaryAccentColor(getActivity()));
         binding.sharePassword.requestFocus();
 
         int negativeButtonCaption;

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -185,7 +185,8 @@ public void onError(int error) {
 
         themeTextInputUtils.colorTextInput(binding.commentInputFieldContainer,
                                            binding.commentInputField,
-                                           themeColorUtils.primaryColor(getContext()));
+                                           themeColorUtils.primaryColor(getContext()),
+                                           themeColorUtils.primaryAccentColor(getContext()));
 
         DisplayUtils.setAvatar(user,
                                this,

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1075,7 +1075,7 @@ public void onItemClicked(OCFile file) {
                             mContainerActivity.getFileOperationsHelper().openFileAsRichDocument(file, getContext());
                         } else {
                             // automatic download, preview on finish
-                            ((FileDisplayActivity) mContainerActivity).startDownloadForPreview(file);
+                            ((FileDisplayActivity) mContainerActivity).startDownloadForPreview(file, mFile);
                         }
                     }
                 }
@@ -1148,7 +1148,7 @@ public boolean onFileActionChosen(MenuItem item, Set<OCFile> checkedFiles) {
 
                 return true;
             } else if (itemId == R.id.action_rename_file) {
-                RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(singleFile);
+                RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(singleFile, mFile);
                 dialog.show(getFragmentManager(), FileDetailFragment.FTAG_RENAME_FILE);
                 return true;
             } else if (itemId == R.id.action_see_details) {

File: app/src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -26,6 +26,7 @@
 import android.util.Base64;
 import android.util.Pair;
 
+import com.google.common.collect.Lists;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
 import com.nextcloud.client.account.User;
@@ -674,7 +675,7 @@ public static List<String> getRandomWords(int count, Context context) throws IOE
 
         SecureRandom random = new SecureRandom();
 
-        List<String> outputLines = new ArrayList<>();
+        List<String> outputLines = Lists.newArrayListWithCapacity(count);
         for (int i = 0; i < count; i++) {
             int randomLine = random.nextInt(lines.size());
             outputLines.add(lines.get(randomLine));

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -782,7 +782,7 @@ private void onUpdateShareInformation(RemoteOperationResult result, @StringRes i
     private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation operation,
                                                      RemoteOperationResult result) {
         FileDetailSharingFragment sharingFragment = getShareFileFragment();
-        OCFileListFragment fileListFragment = (OCFileListFragment) getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
+        final Fragment fileListFragment = getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
 
         if (result.isSuccess()) {
             updateFileFromDB();
@@ -806,8 +806,8 @@ private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation ope
                 sharingFragment.onUpdateShareInformation(result, file);
             }
 
-            if (fileListFragment != null && file != null) {
-                fileListFragment.updateOCFile(file);
+            if (fileListFragment instanceof OCFileListFragment && file != null) {
+                ((OCFileListFragment) fileListFragment).updateOCFile(file);
             }
         } else {
             // Detect Failure (403) --> maybe needs password

File: app/src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -104,7 +104,8 @@ public void testRenameFileDialog() {
         if (Looper.myLooper() == null) {
             Looper.prepare();
         }
-        RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(new OCFile("/Test/"));
+        RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(new OCFile("/Test/"),
+                                                                               new OCFile("/"));
         showDialog(dialog);
     }
 

File: app/src/main/java/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -165,7 +165,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         binding.sharePassword.setText("");
         themeTextInputUtils.colorTextInput(binding.sharePasswordContainer,
                                            binding.sharePassword,
-                                           themeColorUtils.primaryColor(getActivity()));
+                                           themeColorUtils.primaryColor(getActivity()),
+                                           themeColorUtils.primaryAccentColor(getActivity()));
         binding.sharePassword.requestFocus();
 
         int negativeButtonCaption;

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -185,7 +185,8 @@ public void onError(int error) {
 
         themeTextInputUtils.colorTextInput(binding.commentInputFieldContainer,
                                            binding.commentInputField,
-                                           themeColorUtils.primaryColor(getContext()));
+                                           themeColorUtils.primaryColor(getContext()),
+                                           themeColorUtils.primaryAccentColor(getContext()));
 
         DisplayUtils.setAvatar(user,
                                this,

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1075,7 +1075,7 @@ public void onItemClicked(OCFile file) {
                             mContainerActivity.getFileOperationsHelper().openFileAsRichDocument(file, getContext());
                         } else {
                             // automatic download, preview on finish
-                            ((FileDisplayActivity) mContainerActivity).startDownloadForPreview(file);
+                            ((FileDisplayActivity) mContainerActivity).startDownloadForPreview(file, mFile);
                         }
                     }
                 }
@@ -1148,7 +1148,7 @@ public boolean onFileActionChosen(MenuItem item, Set<OCFile> checkedFiles) {
 
                 return true;
             } else if (itemId == R.id.action_rename_file) {
-                RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(singleFile);
+                RenameFileDialogFragment dialog = RenameFileDialogFragment.newInstance(singleFile, mFile);
                 dialog.show(getFragmentManager(), FileDetailFragment.FTAG_RENAME_FILE);
                 return true;
             } else if (itemId == R.id.action_see_details) {

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -23,6 +23,7 @@
 
 package com.owncloud.android.ui.fragment;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.Bundle;
@@ -207,6 +208,7 @@ private void searchAndDisplay() {
         }
     }
 
+    @SuppressLint("NotifyDataSetChanged")
     public void searchCompleted(boolean emptySearch, long lastTimeStamp) {
         photoSearchQueryRunning = false;
         mAdapter.notifyDataSetChanged();

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -782,7 +782,7 @@ private void onUpdateShareInformation(RemoteOperationResult result, @StringRes i
     private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation operation,
                                                      RemoteOperationResult result) {
         FileDetailSharingFragment sharingFragment = getShareFileFragment();
-        OCFileListFragment fileListFragment = (OCFileListFragment) getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
+        final Fragment fileListFragment = getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
 
         if (result.isSuccess()) {
             updateFileFromDB();
@@ -806,8 +806,8 @@ private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation ope
                 sharingFragment.onUpdateShareInformation(result, file);
             }
 
-            if (fileListFragment != null && file != null) {
-                fileListFragment.updateOCFile(file);
+            if (fileListFragment instanceof OCFileListFragment && file != null) {
+                ((OCFileListFragment) fileListFragment).updateOCFile(file);
             }
         } else {
             // Detect Failure (403) --> maybe needs password

File: app/src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -236,7 +236,7 @@ public static void restartJobsIfNeeded(final UploadsStorageManager uploadsStorag
         }
 
         new Thread(() -> {
-            if (connectivityService.getConnectivity().isConnected() && !connectivityService.isInternetWalled()) {
+            if (connectivityService.getConnectivity().isConnected()) {
                 FileUploader.retryFailedUploads(
                     context,
                     uploadsStorageManager,

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1498,7 +1498,6 @@ private boolean isSameAccount(Intent intent) {
     public void browseToRoot() {
         OCFileListFragment listOfFiles = getListOfFilesFragment();
         if (listOfFiles != null) {  // should never be null, indeed
-            MainApp.showOnlyFilesOnDevice(false);
             OCFile root = getStorageManager().getFileByPath(OCFile.ROOT_PATH);
             listOfFiles.listDirectory(root, MainApp.isOnlyOnDevice(), false);
             setFile(listOfFiles.getCurrentFile());

File: app/src/main/java/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -89,7 +89,9 @@ protected void onPause() {
     @Override
     protected void onResume() {
         super.onResume();
-        mixinRegistry.onResume();
+        if (enableAccountHandling) {
+            mixinRegistry.onResume();
+        }
         paused = false;
 
         if (themeChangePending) {

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -284,12 +284,12 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
         outState.putParcelable(EXTRA_FILE, getFile());
         outState.putParcelable(EXTRA_USER, user);
 
-        if (MimeTypeUtil.isVideo(getFile())) {
+        if (MimeTypeUtil.isVideo(getFile()) && exoPlayer != null) {
             savedPlaybackPosition = exoPlayer.getCurrentPosition();
             autoplay = exoPlayer.isPlaying();
             outState.putLong(EXTRA_PLAY_POSITION, savedPlaybackPosition);
             outState.putBoolean(EXTRA_PLAYING, autoplay);
-        } else if (mediaPlayerServiceConnection.isConnected()) {
+        } else if (mediaPlayerServiceConnection != null && mediaPlayerServiceConnection.isConnected()) {
             outState.putInt(EXTRA_PLAY_POSITION, mediaPlayerServiceConnection.getCurrentPosition());
             outState.putBoolean(EXTRA_PLAYING, mediaPlayerServiceConnection.isPlaying());
         }

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -346,7 +346,7 @@ public void onActivityStarted(@NonNull Activity activity) {
             @Override
             public void onActivityResumed(@NonNull Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onResume() starting");
-                passCodeManager.onActivityStarted(activity);
+                passCodeManager.onActivityResumed(activity);
             }
 
             @Override

File: app/src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -657,7 +657,7 @@ protected void onNewIntent(Intent intent) {
         onlyAdd = intent.getBooleanExtra(KEY_ONLY_ADD, false) || checkIfViaSSO(intent);
 
         // Passcode
-        passCodeManager.onActivityStarted(this);
+        passCodeManager.onActivityResumed(this);
 
         Uri data = intent.getData();
 

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -663,6 +663,7 @@ public void onConfirmation(String callerTag) {
             // signaling that they should be moved to the ownCloud folder, instead of copied
             Intent data = new Intent();
             data.putExtra(EXTRA_CHOSEN_FILES, mFileListFragment.getCheckedFilePaths());
+            data.putExtra(LOCAL_BASE_PATH, mCurrentDir.getAbsolutePath());
             setResult(RESULT_OK_AND_MOVE, data);
             finish();
         }

File: app/src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -298,7 +298,7 @@ public void performSearch(final String query, boolean isBackPressed) {
                 localFileListAdapter.filter(query);
                 ((UploadFilesActivity) activity).showToolbarSpinner();
             } else if (activity instanceof FolderPickerActivity) {
-                ((FolderPickerActivity) activity).refreshListOfFilesFragment(true);
+                ((FolderPickerActivity) activity).search(query);
             }
         }
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -298,7 +298,7 @@ public void performSearch(final String query, boolean isBackPressed) {
                 localFileListAdapter.filter(query);
                 ((UploadFilesActivity) activity).showToolbarSpinner();
             } else if (activity instanceof FolderPickerActivity) {
-                ((FolderPickerActivity) activity).refreshListOfFilesFragment(true);
+                ((FolderPickerActivity) activity).search(query);
             }
         }
     }

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -663,6 +663,7 @@ public void onConfirmation(String callerTag) {
             // signaling that they should be moved to the ownCloud folder, instead of copied
             Intent data = new Intent();
             data.putExtra(EXTRA_CHOSEN_FILES, mFileListFragment.getCheckedFilePaths());
+            data.putExtra(LOCAL_BASE_PATH, mCurrentDir.getAbsolutePath());
             setResult(RESULT_OK_AND_MOVE, data);
             finish();
         }

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -432,7 +432,7 @@ protected void setAdapter(Bundle args) {
 
         setRecyclerViewAdapter(mAdapter);
 
-        FastScroll.applyFastScroll(getRecyclerView());
+        FastScroll.applyFastScroll(requireContext(), themeColorUtils, themeDrawableUtils, getRecyclerView());
     }
 
     protected void prepareCurrentSearch(SearchEvent event) {

File: app/src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -506,6 +506,7 @@ private ContentValues createContentValuesForFile(OCFile file) {
         cv.put(ProviderTableMeta.FILE_LOCK_TIMESTAMP, file.getLockTimestamp());
         cv.put(ProviderTableMeta.FILE_LOCK_TIMEOUT, file.getLockTimeout());
         cv.put(ProviderTableMeta.FILE_LOCK_TOKEN, file.getLockToken());
+        cv.put(ProviderTableMeta.FILE_MODIFIED, file.getModificationTimestamp());
 
         return cv;
     }

File: app/src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -156,6 +156,7 @@ protected void setThumbnailView(final User user) {
                                                                                   file.isSharedWithSharee(),
                                                                               file.isSharedViaLink(),
                                                                               file.isEncrypted(),
+                                                                              file.isGroupFolder(),
                                                                               file.getMountType(),
                                                                               this,
                                                                               themeColorUtils,

File: app/src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -76,6 +76,7 @@ protected void onCreate(Bundle savedInstanceState) {
                                                                                       file.isSharedWithSharee(),
                                                                                   file.isSharedViaLink(),
                                                                                   file.isEncrypted(),
+                                                                                  file.isGroupFolder(),
                                                                                   file.getMountType(),
                                                                                   this,
                                                                                   themeColorUtils,

File: app/src/main/java/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -108,6 +108,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             final Drawable icon = MimeTypeUtil.getFolderTypeIcon(isShared,
                                                                  file.isSharedViaLink(),
                                                                  file.isEncrypted(),
+                                                                 file.isGroupFolder(),
                                                                  user,
                                                                  file.getMountType(),
                                                                  mContext,

File: app/src/main/java/com/owncloud/android/ui/activity/CommunityActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void setupContent() {
 
         MaterialButton reportButton = binding.communityTestingReport;
         themeButtonUtils.colorPrimaryButton(reportButton, this, themeColorUtils);
-        reportButton.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.report_issue_link));
+        reportButton.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.report_issue_empty_link));
 
         binding.communityBetaFdroid.setOnClickListener(
             l -> DisplayUtils.startLinkIntent(this, R.string.fdroid_beta_link));

File: app/src/main/java/com/owncloud/android/ui/activity/CommunityActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void setupContent() {
 
         MaterialButton reportButton = binding.communityTestingReport;
         themeButtonUtils.colorPrimaryButton(reportButton, this, themeColorUtils);
-        reportButton.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.report_issue_link));
+        reportButton.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.report_issue_empty_link));
 
         binding.communityBetaFdroid.setOnClickListener(
             l -> DisplayUtils.startLinkIntent(this, R.string.fdroid_beta_link));

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -627,7 +627,7 @@ public void onHeaderClicked() {
     }
 
     @Override
-    public void showTemplate(Creator creator, String headline) {
+    public void showTemplate(@NonNull Creator creator, @NonNull String headline) {
         ChooseTemplateDialogFragment.newInstance(mFile, creator, headline).show(requireActivity().getSupportFragmentManager(),
                                                                                 DIALOG_CREATE_DOCUMENT);
     }

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -182,7 +182,6 @@ private void searchAndDisplay() {
 
     public void searchCompleted(boolean emptySearch, long lastTimeStamp) {
         photoSearchQueryRunning = false;
-        mAdapter.notifyDataSetChanged();
 
         if (mAdapter.isEmpty()) {
             setEmptyListMessage(SearchType.GALLERY_SEARCH);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1498,7 +1498,6 @@ private boolean isSameAccount(Intent intent) {
     public void browseToRoot() {
         OCFileListFragment listOfFiles = getListOfFilesFragment();
         if (listOfFiles != null) {  // should never be null, indeed
-            MainApp.showOnlyFilesOnDevice(false);
             OCFile root = getStorageManager().getFileByPath(OCFile.ROOT_PATH);
             listOfFiles.listDirectory(root, MainApp.isOnlyOnDevice(), false);
             setFile(listOfFiles.getCurrentFile());

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2282,8 +2282,10 @@ public void showFiles(boolean onDeviceOnly) {
             updateActionBarTitleAndHomeButtonByString(getString(R.string.drawer_item_on_device));
         }
         OCFileListFragment ocFileListFragment = getListOfFilesFragment();
-        if (ocFileListFragment != null) {
+        if (ocFileListFragment != null && !(ocFileListFragment instanceof GalleryFragment) && !(ocFileListFragment instanceof SharedListFragment)) {
             ocFileListFragment.refreshDirectory();
+        } else {
+            setLeftFragment(new OCFileListFragment());
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -410,7 +410,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
             FileDisplayActivity fileDisplayActivity = (FileDisplayActivity) fragmentActivity;
             fileDisplayActivity.updateActionBarTitleAndHomeButton(fileDisplayActivity.getCurrentDir());
         }
-        listDirectory(false, false);
+        listDirectory(MainApp.isOnlyOnDevice(), false);
     }
 
     protected void setAdapter(Bundle args) {

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2282,8 +2282,10 @@ public void showFiles(boolean onDeviceOnly) {
             updateActionBarTitleAndHomeButtonByString(getString(R.string.drawer_item_on_device));
         }
         OCFileListFragment ocFileListFragment = getListOfFilesFragment();
-        if (ocFileListFragment != null) {
+        if (ocFileListFragment != null && !(ocFileListFragment instanceof GalleryFragment) && !(ocFileListFragment instanceof SharedListFragment)) {
             ocFileListFragment.refreshDirectory();
+        } else {
+            setLeftFragment(new OCFileListFragment());
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -410,7 +410,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
             FileDisplayActivity fileDisplayActivity = (FileDisplayActivity) fragmentActivity;
             fileDisplayActivity.updateActionBarTitleAndHomeButton(fileDisplayActivity.getCurrentDir());
         }
-        listDirectory(false, false);
+        listDirectory(MainApp.isOnlyOnDevice(), false);
     }
 
     protected void setAdapter(Bundle args) {

File: app/src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -683,7 +683,8 @@ private FileDataStorageManager getStorageManager(String rootId) {
         return rootIdToStorageManager.get(rootId);
     }
 
-    private String rootIdForUser(User user) {
+    @VisibleForTesting
+    public static String rootIdForUser(User user) {
         return HashUtil.md5Hash(user.getAccountName());
     }
 

File: app/src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -40,7 +40,6 @@
 import android.provider.DocumentsContract;
 import android.provider.DocumentsProvider;
 import android.util.Log;
-import android.util.SparseArray;
 import android.widget.Toast;
 
 import com.nextcloud.client.account.User;
@@ -86,6 +85,7 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.Objects;
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;

File: app/src/main/java/com/owncloud/android/ui/EmptyRecyclerView.java
Patch:
@@ -25,14 +25,13 @@
 import android.util.AttributeSet;
 import android.view.View;
 
-import com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView;
-
 import androidx.annotation.Nullable;
+import androidx.recyclerview.widget.RecyclerView;
 
 /**
  * Extends RecyclerView to show a custom view if no data is available Inspired by http://alexzh.com/tutorials/how-to-setemptyview-to-recyclerview
  */
-public class EmptyRecyclerView extends FastScrollRecyclerView {
+public class EmptyRecyclerView extends RecyclerView {
     private View mEmptyView;
     private boolean hasFooter = false;
 

File: app/src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -59,6 +59,7 @@
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.client.utils.Throttler;
 import com.nextcloud.common.NextcloudClient;
+import com.nextcloud.utils.view.FastScroll;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
@@ -429,6 +430,8 @@ protected void setAdapter(Bundle args) {
         );
 
         setRecyclerViewAdapter(mAdapter);
+
+        FastScroll.applyFastScroll(getRecyclerView());
     }
 
     protected void prepareCurrentSearch(SearchEvent event) {

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -165,7 +165,7 @@ private void handleSearchEvent() {
         setEmptyListLoadingMessage();
 
         // always show first stored items
-        mAdapter.showAllGalleryItems(mContainerActivity.getStorageManager());
+        mAdapter.showAllGalleryItems();
 
         setFabVisible(false);
 
@@ -272,6 +272,6 @@ private void loadMoreWhenEndReached(@NonNull RecyclerView recyclerView, int dy)
     }
 
     public void showAllGalleryItems() {
-        mAdapter.showAllGalleryItems(mContainerActivity.getStorageManager());
+        mAdapter.showAllGalleryItems();
     }
 }

File: app/src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -36,6 +36,7 @@
 import com.owncloud.android.ui.adapter.GalleryAdapter;
 import com.owncloud.android.ui.asynctasks.GallerySearchTask;
 import com.owncloud.android.ui.events.ChangeMenuEvent;
+import com.owncloud.android.ui.fragment.util.GalleryFastScrollViewHelper;
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.FragmentActivity;
@@ -117,7 +118,7 @@ protected void setAdapter(Bundle args) {
         mAdapter.setLayoutManager(layoutManager);
         getRecyclerView().setLayoutManager(layoutManager);
 
-        FastScroll.applyFastScroll(getRecyclerView());
+        FastScroll.applyFastScroll(getRecyclerView(), new GalleryFastScrollViewHelper(getRecyclerView(), mAdapter));
     }
 
     @Override

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -601,7 +601,7 @@ public void onStop() {
         final OCFile file = getFile();
         if (MimeTypeUtil.isAudio(file) && !mediaPlayerServiceConnection.isPlaying()) {
             stopAudio();
-        } else if (MimeTypeUtil.isVideo(file) && exoPlayer.isPlaying()) {
+        } else if (MimeTypeUtil.isVideo(file) && exoPlayer != null && exoPlayer.isPlaying()) {
             savedPlaybackPosition = exoPlayer.getCurrentPosition();
             exoPlayer.pause();
         }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -513,6 +513,7 @@ protected void onNewIntent(Intent intent) {
                 Log_OC.d(this, "Switch to oc file fragment");
 
                 setLeftFragment(new OCFileListFragment());
+                getSupportFragmentManager().executePendingTransactions();
                 browseToRoot();
             }
     }

File: app/src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -180,7 +180,7 @@ private OCFile(Parcel source) {
         lockType = FileLockType.fromValue(source.readInt());
         lockOwnerId = source.readString();
         lockOwnerDisplayName = source.readString();
-        lockOwnerDisplayName = source.readString();
+        lockOwnerEditor = source.readString();
         lockTimestamp = source.readLong();
         lockTimeout = source.readLong();
         lockToken = source.readString();

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -513,6 +513,7 @@ protected void onNewIntent(Intent intent) {
                 Log_OC.d(this, "Switch to oc file fragment");
 
                 setLeftFragment(new OCFileListFragment());
+                getSupportFragmentManager().executePendingTransactions();
                 browseToRoot();
             }
     }

File: app/src/main/java/com/nextcloud/client/di/AppComponent.java
Patch:
@@ -30,6 +30,7 @@
 import com.nextcloud.client.onboarding.OnboardingModule;
 import com.nextcloud.client.preferences.PreferencesModule;
 import com.owncloud.android.MainApp;
+import com.owncloud.android.media.MediaControlView;
 
 import javax.inject.Singleton;
 
@@ -55,6 +56,8 @@ public interface AppComponent {
 
     void inject(MainApp app);
 
+    void inject(MediaControlView mediaControlView);
+
     @Component.Builder
     interface Builder {
         @BindsInstance

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -144,8 +144,6 @@ public class ReceiveExternalFilesActivity extends FileActivity
 
     @Inject AppPreferences preferences;
     @Inject LocalBroadcastManager localBroadcastManager;
-    @Inject ThemeColorUtils themeColorUtils;
-    @Inject ThemeTextInputUtils themeTextInputUtils;
     private AccountManager mAccountManager;
     private Stack<String> mParents = new Stack<>();
     private List<Parcelable> mStreamsToUpload;

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -228,7 +228,7 @@ protected void onPostExecute(final StringWriter stringWriter) {
 
             if (textView != null) {
                 originalText = stringWriter.toString();
-                setText(textView, originalText, getFile(), requireActivity(), themeColorUtils);
+                setText(textView, originalText, getFile(), requireActivity(), false, false, themeColorUtils);
 
                 if (searchView != null) {
                     searchView.setOnQueryTextListener(PreviewTextFileFragment.this);

File: app/src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -183,7 +183,7 @@ private static void checkPermissions(@Nullable AppCompatActivity activity,
                                          ThemeButtonUtils themeButtonUtils) {
         if (activity != null &&
             !PermissionUtil.checkExternalStoragePermission(activity.getApplicationContext())) {
-            PermissionUtil.requestExternalStoragePermission(activity, true);
+            PermissionUtil.requestExternalStoragePermission(activity, themeSnackbarUtils, true);
         }
     }
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -121,8 +121,6 @@
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.PushUtils;
 import com.owncloud.android.utils.StringUtils;
-import com.owncloud.android.utils.theme.ThemeButtonUtils;
-import com.owncloud.android.utils.theme.ThemeToolbarUtils;
 
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
@@ -318,7 +316,7 @@ protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
 
 
-        PermissionUtil.requestExternalStoragePermission(this);
+        PermissionUtil.requestExternalStoragePermission(this, themeSnackbarUtils);
 
         if (getIntent().getParcelableExtra(OCFileListFragment.SEARCH_EVENT) != null) {
             switchToSearchFragment(savedInstanceState);

File: app/src/androidTest/java/com/owncloud/android/ui/LoginIT.java
Patch:
@@ -113,7 +113,7 @@ public void login() throws InterruptedException {
 
         // click login
         onWebView()
-            .withElement(findElement(Locator.XPATH, "//input[@id='submit-form']"))
+            .withElement(findElement(Locator.XPATH, "//input[@type='submit']"))
             .perform(webClick());
 
         Thread.sleep(2000);

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -514,6 +514,7 @@ protected void onNewIntent(Intent intent) {
                 Log_OC.d(this, "Switch to oc file fragment");
 
                 setLeftFragment(new OCFileListFragment());
+                browseToRoot();
             }
     }
 
@@ -1495,6 +1496,7 @@ private boolean isSameAccount(Intent intent) {
     public void browseToRoot() {
         OCFileListFragment listOfFiles = getListOfFilesFragment();
         if (listOfFiles != null) {  // should never be null, indeed
+            MainApp.showOnlyFilesOnDevice(false);
             OCFile root = getStorageManager().getFileByPath(OCFile.ROOT_PATH);
             listOfFiles.listDirectory(root, MainApp.isOnlyOnDevice(), false);
             setFile(listOfFiles.getCurrentFile());

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -514,6 +514,7 @@ protected void onNewIntent(Intent intent) {
                 Log_OC.d(this, "Switch to oc file fragment");
 
                 setLeftFragment(new OCFileListFragment());
+                browseToRoot();
             }
     }
 
@@ -1495,6 +1496,7 @@ private boolean isSameAccount(Intent intent) {
     public void browseToRoot() {
         OCFileListFragment listOfFiles = getListOfFilesFragment();
         if (listOfFiles != null) {  // should never be null, indeed
+            MainApp.showOnlyFilesOnDevice(false);
             OCFile root = getStorageManager().getFileByPath(OCFile.ROOT_PATH);
             listOfFiles.listDirectory(root, MainApp.isOnlyOnDevice(), false);
             setFile(listOfFiles.getCurrentFile());

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -232,7 +232,7 @@ protected void attachBaseContext(Context base) {
         // let the platform deal with those
         final boolean isCrashReportingProcess = getAppProcessName().endsWith(":crash");
 
-        if (!isCrashReportingProcess) {
+        if (!isCrashReportingProcess && !appInfo.isDebugBuild()) {
             Thread.UncaughtExceptionHandler defaultPlatformHandler = Thread.getDefaultUncaughtExceptionHandler();
             final ExceptionHandler crashReporter = new ExceptionHandler(this,
                                                                         defaultPlatformHandler);

File: app/src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -232,7 +232,7 @@ protected void attachBaseContext(Context base) {
         // let the platform deal with those
         final boolean isCrashReportingProcess = getAppProcessName().endsWith(":crash");
 
-        if (!isCrashReportingProcess) {
+        if (!isCrashReportingProcess && !appInfo.isDebugBuild()) {
             Thread.UncaughtExceptionHandler defaultPlatformHandler = Thread.getDefaultUncaughtExceptionHandler();
             final ExceptionHandler crashReporter = new ExceptionHandler(this,
                                                                         defaultPlatformHandler);

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -743,7 +743,7 @@ private void onUpdateNoteForShareOperationFinish(RemoteOperationResult result) {
 
         if (result.isSuccess()) {
             if (sharingFragment != null) {
-                sharingFragment.onUpdateShareInformation(result, getFile());
+                sharingFragment.onUpdateShareInformation(result);
             }
         } else {
             DisplayUtils.showSnackMessage(this, R.string.note_could_not_sent);
@@ -757,7 +757,7 @@ private void onUpdateShareInformation(RemoteOperationResult result, @StringRes i
         if (result.isSuccess()) {
             updateFileFromDB();
             if (sharingFragment != null) {
-                sharingFragment.onUpdateShareInformation(result, getFile());
+                sharingFragment.onUpdateShareInformation(result);
             }
         } else if (sharingFragment != null && sharingFragment.getView() != null) {
             if (TextUtils.isEmpty(result.getMessage())) {

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1533,7 +1533,6 @@ public void showDetails(OCFile file, int activeTab) {
 
         resetScrolling();
 
-        setFile(file);
         Fragment detailFragment = FileDetailFragment.newInstance(file, currentUser, activeTab);
         setLeftFragment(detailFragment);
 

File: app/src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -454,7 +454,7 @@ public void streamMediaFile(OCFile file) {
         fileActivity.showLoadingDialog(fileActivity.getString(R.string.wait_a_moment));
         final User user = currentAccount.getUser();
         new Thread(() -> {
-            StreamMediaFileOperation sfo = new StreamMediaFileOperation(file.getLocalId());
+            StreamMediaFileOperation sfo = new StreamMediaFileOperation(file.getRemoteId());
             RemoteOperationResult result = sfo.execute(user.toPlatformAccount(), fileActivity);
 
             fileActivity.dismissLoadingDialog();

File: app/src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -490,7 +490,7 @@ private void playVideo() {
             playVideoUri(getFile().getStorageUri());
         } else {
             try {
-                new LoadStreamUrl(this, user, clientFactory).execute(getFile().getLocalId());
+                new LoadStreamUrl(this, user, clientFactory).execute(getFile().getRemoteId());
             } catch (Exception e) {
                 Log_OC.e(TAG, "Loading stream url not possible: " + e);
             }

File: app/src/main/java/com/owncloud/android/ui/adapter/ShareeListAdapter.java
Patch:
@@ -196,7 +196,9 @@ protected final void sortShares() {
         shares.addAll(users);
 
         // add internal share link at end
-        shares.add(new OCShare().setShareType(ShareType.INTERNAL));
+        final OCShare ocShare = new OCShare();
+        ocShare.setShareType(ShareType.INTERNAL);
+        shares.add(ocShare);
     }
 
     public List<OCShare> getShares() {

File: app/src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -410,7 +410,9 @@ public void refreshSharesFromDB() {
 
 
         if (publicShares.isEmpty() && containsNoNewPublicShare(adapter.getShares())) {
-            publicShares.add(new OCShare().setShareType(ShareType.NEW_PUBLIC_LINK));
+            final OCShare ocShare = new OCShare();
+            ocShare.setShareType(ShareType.NEW_PUBLIC_LINK);
+            publicShares.add(ocShare);
         } else {
             adapter.removeNewPublicShare();
         }

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -877,10 +877,11 @@ protected void onNewIntent(Intent intent) {
 
     /**
      * open the new sharing process fragment to create the share
+     *
      * @param shareeName
      * @param shareType
      */
-    private void doShareWith(String shareeName, ShareType shareType) {
+    protected void doShareWith(String shareeName, ShareType shareType) {
         FileDetailFragment fragment = getFileDetailFragment();
         if (fragment != null) {
             fragment.initiateSharingProcess(shareeName, shareType);

File: app/src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -877,10 +877,11 @@ protected void onNewIntent(Intent intent) {
 
     /**
      * open the new sharing process fragment to create the share
+     *
      * @param shareeName
      * @param shareType
      */
-    private void doShareWith(String shareeName, ShareType shareType) {
+    protected void doShareWith(String shareeName, ShareType shareType) {
         FileDetailFragment fragment = getFileDetailFragment();
         if (fragment != null) {
             fragment.initiateSharingProcess(shareeName, shareType);

File: app/src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -264,7 +264,9 @@ protected void onSaveInstanceState(@NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putString(KEY_PARENTS, generatePath(mParents));
         outState.putParcelable(KEY_FILE, mFile);
-        outState.putParcelable(FileActivity.EXTRA_USER, getUser().orElseThrow(RuntimeException::new));
+        if (getUser().isPresent()) {
+            outState.putParcelable(FileActivity.EXTRA_USER, getUser().orElseThrow(RuntimeException::new));
+        }
 
         Log_OC.d(TAG, "onSaveInstanceState() end");
     }

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1507,6 +1507,7 @@ public void showDetails(OCFile file, int activeTab) {
 
         resetHeaderScrollingState();
 
+        setFile(file);
         Fragment detailFragment = FileDetailFragment.newInstance(file, currentUser, activeTab);
         setLeftFragment(detailFragment);
 

File: app/src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1507,6 +1507,7 @@ public void showDetails(OCFile file, int activeTab) {
 
         resetHeaderScrollingState();
 
+        setFile(file);
         Fragment detailFragment = FileDetailFragment.newInstance(file, currentUser, activeTab);
         setLeftFragment(detailFragment);
 

File: app/src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -189,7 +189,7 @@ public void onCreate(Bundle savedInstanceState) {
         uploadButton = findViewById(R.id.upload_files_btn_upload);
         ThemeButtonUtils.colorPrimaryButton(uploadButton, this);
         uploadButton.setOnClickListener(this);
-        uploadButton.setEnabled(false);
+        uploadButton.setEnabled(mLocalFolderPickerMode);
 
         int localBehaviour = preferences.getUploaderBehaviour();
 
@@ -458,7 +458,7 @@ public boolean popDirname() {
 
     private void updateUploadButtonActive() {
         final boolean anySelected = mFileListFragment.getCheckedFilesCount() > 0;
-        uploadButton.setEnabled(anySelected);
+        uploadButton.setEnabled(anySelected || mLocalFolderPickerMode);
     }
 
     private void setSelectAllMenuItem(MenuItem selectAll, boolean checked) {
@@ -600,7 +600,7 @@ private void checkWritableFolder(File folder) {
      */
     @Override
     public void onFileClick(File file) {
-        uploadButton.setEnabled(mFileListFragment.getCheckedFilesCount() > 0);
+        updateUploadButtonActive();
 
         boolean selectAll = mFileListFragment.getCheckedFilesCount() == mFileListFragment.getFilesCount();
         setSelectAllMenuItem(mOptionsMenu.findItem(R.id.action_select_all), selectAll);

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -574,7 +574,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
             showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         }
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, download.getFile());
-        showDetailsIntent.putExtra(FileActivity.EXTRA_USER, download.getAccount());
+        showDetailsIntent.putExtra(FileActivity.EXTRA_USER, download.getUser());
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 
         mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this, (int) System.currentTimeMillis(),

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -574,7 +574,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
             showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         }
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, download.getFile());
-        showDetailsIntent.putExtra(FileActivity.EXTRA_USER, download.getAccount());
+        showDetailsIntent.putExtra(FileActivity.EXTRA_USER, download.getUser());
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 
         mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this, (int) System.currentTimeMillis(),

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -110,6 +110,9 @@ public PreviewImagePagerAdapter(FragmentManager fragmentManager,
         if (type == null) {
             throw new IllegalArgumentException("NULL parent folder");
         }
+        if(type == VirtualFolderType.NONE){
+            throw new IllegalArgumentException("NONE virtual folder type");
+        }
         if (storageManager == null) {
             throw new IllegalArgumentException("NULL storage manager");
         }

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -31,13 +31,13 @@
 import android.webkit.WebChromeClient;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
-import android.webkit.WebViewClient;
 import android.widget.ProgressBar;
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.databinding.ExternalsiteWebviewBinding;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.ui.NextcloudWebViewClient;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.theme.ThemeToolbarUtils;
 
@@ -141,7 +141,7 @@ public void onProgressChanged(WebView view, int progress) {
             });
         }
 
-        getWebView().setWebViewClient(new WebViewClient() {
+        getWebView().setWebViewClient(new NextcloudWebViewClient(getSupportFragmentManager()) {
             public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
                 InputStream resources = getResources().openRawResource(R.raw.custom_error);
                 String customError = DisplayUtils.getData(resources);

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -782,7 +782,7 @@ private RemoteOperationResult normalUpload(OwnCloudClient client) {
             // Get the last modification date of the file from the file system
             String lastModifiedTimestamp = Long.toString(originalFile.lastModified() / 1000);
 
-            long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
+            final Long creationTimestamp = FileUtil.getCreationTimestamp(originalFile);
 
             FileChannel channel = null;
             try {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -110,6 +110,9 @@ public PreviewImagePagerAdapter(FragmentManager fragmentManager,
         if (type == null) {
             throw new IllegalArgumentException("NULL parent folder");
         }
+        if(type == VirtualFolderType.NONE){
+            throw new IllegalArgumentException("NONE virtual folder type");
+        }
         if (storageManager == null) {
             throw new IllegalArgumentException("NULL storage manager");
         }

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -231,9 +231,8 @@ protected void attachBaseContext(Context base) {
         // we don't want to handle crashes occurring inside crash reporter activity/process;
         // let the platform deal with those
         final boolean isCrashReportingProcess = getAppProcessName().endsWith(":crash");
-        final boolean useExceptionHandler = !appInfo.isDebugBuild();
 
-        if (!isCrashReportingProcess && useExceptionHandler) {
+        if (!isCrashReportingProcess) {
             Thread.UncaughtExceptionHandler defaultPlatformHandler = Thread.getDefaultUncaughtExceptionHandler();
             final ExceptionHandler crashReporter = new ExceptionHandler(this,
                                                                         defaultPlatformHandler);

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -233,7 +233,7 @@ protected void attachBaseContext(Context base) {
         final boolean isCrashReportingProcess = getAppProcessName().endsWith(":crash");
         final boolean useExceptionHandler = !appInfo.isDebugBuild();
 
-        if (!isCrashReportingProcess && useExceptionHandler) {
+        if (!isCrashReportingProcess) {
             Thread.UncaughtExceptionHandler defaultPlatformHandler = Thread.getDefaultUncaughtExceptionHandler();
             final ExceptionHandler crashReporter = new ExceptionHandler(this,
                                                                         defaultPlatformHandler);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -986,6 +986,8 @@ public void onItemClicked(OCFile file) {
                         }
                     } else if (file.isDown() && MimeTypeUtil.isVCard(file)) {
                         ((FileDisplayActivity) mContainerActivity).startContactListFragment(file);
+                    } else if (file.isDown() && MimeTypeUtil.isPDF(file)) {
+                        ((FileDisplayActivity) mContainerActivity).startPdfPreview(file);
                     } else if (PreviewTextFileFragment.canBePreviewed(file)) {
                         setFabVisible(false);
                         resetHeaderScrollingState();

File: src/main/java/com/owncloud/android/ui/asynctasks/GallerySearchTask.java
Patch:
@@ -176,7 +176,7 @@ private boolean parseMedia(long startDate, long endDate, List<Object> remoteFile
         Log_OC.d(this, "Gallery search result:" +
             " new: " + filesToAdd.size() +
             " updated: " + filesToUpdate.size() +
-            " deleted: " + localFilesMap.values().size());
+            " deleted: " + localFilesMap.size());
 
         return didNotFindNewResults(filesToAdd, filesToUpdate, localFilesMap.values());
     }

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -722,7 +722,7 @@ public ContentProviderResult[] applyBatch(@NonNull ArrayList<ContentProviderOper
 
     private boolean checkIfColumnExists(SQLiteDatabase database, String table, String column) {
         Cursor cursor = database.rawQuery("SELECT * FROM " + table + " LIMIT 0", null);
-        boolean exists = cursor.getColumnIndexOrThrow(column) != -1;
+        boolean exists = cursor.getColumnIndex(column) != -1;
         cursor.close();
 
         return exists;

File: src/main/java/com/owncloud/android/ui/asynctasks/GallerySearchTask.java
Patch:
@@ -122,10 +122,10 @@ protected void onPostExecute(GallerySearchTask.Result result) {
 
             photoFragment.setLoading(false);
 
-            if (!result.success || result.emptySearch) {
-                photoFragment.setEmptyListMessage(ExtendedListFragment.SearchType.GALLERY_SEARCH);
-            } else {
+            if (result.success) {
                 photoFragment.searchCompleted(result.emptySearch, result.lastTimestamp);
+            } else {
+                photoFragment.setEmptyListMessage(ExtendedListFragment.SearchType.GALLERY_SEARCH);
             }
         }
     }

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -916,7 +916,7 @@ private void createVirtualTable(SQLiteDatabase db) {
                        + ProviderTableMeta._ID + " INTEGER PRIMARY KEY, "          // id
                        + ProviderTableMeta.VIRTUAL_TYPE + " TEXT, "                // type
                        + ProviderTableMeta.VIRTUAL_OCFILE_ID + " INTEGER )"        // file id
-                       + ProviderTableMeta.VIRTUAL_OCFILE_REMOTE_ID + " STRNING )"        // remote id
+                       + ProviderTableMeta.VIRTUAL_OCFILE_REMOTE_ID + " STRING )"  // remote id
                   );
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -116,10 +116,12 @@ public PreviewImagePagerAdapter(FragmentManager fragmentManager,
 
         this.user = user;
         mStorageManager = storageManager;
-        mImageFiles = mStorageManager.getVirtualFolderContent(type, true);
 
         if (type == VirtualFolderType.GALLERY) {
+            mImageFiles = mStorageManager.getAllGalleryItems();
             mImageFiles = FileStorageUtils.sortOcFolderDescDateModifiedWithoutFavoritesFirst(mImageFiles);
+        } else {
+            mImageFiles = mStorageManager.getVirtualFolderContent(type, true);
         }
 
         mObsoleteFragments = new HashSet<>();

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -722,7 +722,7 @@ public ContentProviderResult[] applyBatch(@NonNull ArrayList<ContentProviderOper
 
     private boolean checkIfColumnExists(SQLiteDatabase database, String table, String column) {
         Cursor cursor = database.rawQuery("SELECT * FROM " + table + " LIMIT 0", null);
-        boolean exists = cursor.getColumnIndexOrThrow(column) != -1;
+        boolean exists = cursor.getColumnIndex(column) != -1;
         cursor.close();
 
         return exists;

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -163,7 +163,7 @@ protected Void doInBackground(File... params) {
      * Converts size of file icon from dp to pixel
      * @return int
      */
-    private static int getThumbnailDimension(){
+    public static int getThumbnailDimension() {
         // Converts dp to pixel
         Resources r = MainApp.getAppContext().getResources();
         return Math.round(r.getDimension(R.dimen.file_icon_size_grid));

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -594,7 +594,8 @@ private static void setThumbnail(OCFile file,
                                                                            R.drawable.file_image,
                                                                            null);
                                 }
-                                thumbnail = BitmapUtils.drawableToBitmap(drawable);
+                                int px = ThumbnailsCacheManager.getThumbnailDimension();
+                                thumbnail = BitmapUtils.drawableToBitmap(drawable, px, px);
                             }
                             final ThumbnailsCacheManager.AsyncThumbnailDrawable asyncDrawable =
                                 new ThumbnailsCacheManager.AsyncThumbnailDrawable(context.getResources(),

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -259,6 +259,7 @@ public void onAttach(@NonNull Context context) {
         Log_OC.i(TAG, "onAttach");
         try {
             mContainerActivity = (FileFragment.ContainerActivity) context;
+            setTitle();
 
         } catch (ClassCastException e) {
             throw new IllegalArgumentException(context.toString() + " must implement " +

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -525,7 +525,7 @@ protected void onNewIntent(Intent intent) {
                     if (SearchRemoteOperation.SearchType.PHOTO_SEARCH.equals(searchEvent.searchType)) {
                         Log_OC.d(this, "Switch to photo search fragment");
 
-                        GalleryFragment photoFragment = new GalleryFragment(true);
+                        GalleryFragment photoFragment = new GalleryFragment();
                         Bundle bundle = new Bundle();
                         bundle.putParcelable(OCFileListFragment.SEARCH_EVENT, Parcels.wrap(searchEvent));
                         photoFragment.setArguments(bundle);
@@ -2071,7 +2071,7 @@ public void run() {
 
                             OCFileListFragment fragment = getListOfFilesFragment();
 
-                            if (fragment != null) {
+                            if (fragment != null && !(fragment instanceof GalleryFragment)) {
                                 fragment.setLoading(true);
                             }
 
@@ -2341,7 +2341,7 @@ public void onMessageEvent(final SearchEvent event) {
         if (SearchRemoteOperation.SearchType.PHOTO_SEARCH == event.searchType) {
             Log_OC.d(this, "Switch to photo search fragment");
 
-            setLeftFragment(new GalleryFragment(true));
+            setLeftFragment(new GalleryFragment());
         }
     }
 

File: src/androidTest/java/com/owncloud/android/util/TestSorting.java
Patch:
@@ -419,13 +419,13 @@ private List<Comparable> sort(List<? extends Comparable> sortedList) {
         if (sortedList.get(0) instanceof OCFile) {
             Collections.sort(unsortedList, (Comparator<OCFile>) (o1, o2) -> {
                 if (o1.isFolder() && o2.isFolder()) {
-                    return new AlphanumComparator().compare(o1, o2);
+                    return AlphanumComparator.compare(o1, o2);
                 } else if (o1.isFolder()) {
                     return -1;
                 } else if (o2.isFolder()) {
                     return 1;
                 }
-                return new AlphanumComparator().compare(o1, o2);
+                return AlphanumComparator.compare(o1, o2);
             });
         } else {
             Collections.sort(unsortedList, new AlphanumComparator<>());

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -478,13 +478,13 @@ public int describeContents() {
     @Override
     public int compareTo(@NonNull OCFile another) {
         if (isFolder() && another.isFolder()) {
-            return new AlphanumComparator().compare(this, another);
+            return AlphanumComparator.compare(this, another);
         } else if (isFolder()) {
             return -1;
         } else if (another.isFolder()) {
             return 1;
         }
-        return new AlphanumComparator().compare(this, another);
+        return AlphanumComparator.compare(this, another);
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/interfaces/LocalFileListFragmentInterface.java
Patch:
@@ -32,4 +32,5 @@ public interface LocalFileListFragmentInterface {
     int getColumnsCount();
     void onItemClicked(File file);
     void onItemCheckboxClicked(File file);
+    void setLoading(boolean loading);
 }

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -141,8 +141,8 @@ protected void onCreate(Bundle savedInstanceState) {
                 binding.header.setText(R.string.pass_code_configure_your_pass_code);
 
                 binding.explanation.setVisibility(View.VISIBLE);
-                setCancelButtonEnabled(true);
             }
+            setCancelButtonEnabled(true);
 
         } else if (ACTION_CHECK_WITH_RESULT.equals(getIntent().getAction())) {
             // pass code preference has just been disabled in SettingsActivity;

File: src/androidTest/java/com/owncloud/android/util/TestSorting.java
Patch:
@@ -419,13 +419,13 @@ private List<Comparable> sort(List<? extends Comparable> sortedList) {
         if (sortedList.get(0) instanceof OCFile) {
             Collections.sort(unsortedList, (Comparator<OCFile>) (o1, o2) -> {
                 if (o1.isFolder() && o2.isFolder()) {
-                    return new AlphanumComparator().compare(o1, o2);
+                    return AlphanumComparator.compare(o1, o2);
                 } else if (o1.isFolder()) {
                     return -1;
                 } else if (o2.isFolder()) {
                     return 1;
                 }
-                return new AlphanumComparator().compare(o1, o2);
+                return AlphanumComparator.compare(o1, o2);
             });
         } else {
             Collections.sort(unsortedList, new AlphanumComparator<>());

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -478,13 +478,13 @@ public int describeContents() {
     @Override
     public int compareTo(@NonNull OCFile another) {
         if (isFolder() && another.isFolder()) {
-            return new AlphanumComparator().compare(this, another);
+            return AlphanumComparator.compare(this, another);
         } else if (isFolder()) {
             return -1;
         } else if (another.isFolder()) {
             return 1;
         }
-        return new AlphanumComparator().compare(this, another);
+        return AlphanumComparator.compare(this, another);
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -141,8 +141,8 @@ protected void onCreate(Bundle savedInstanceState) {
                 binding.header.setText(R.string.pass_code_configure_your_pass_code);
 
                 binding.explanation.setVisibility(View.VISIBLE);
-                setCancelButtonEnabled(true);
             }
+            setCancelButtonEnabled(true);
 
         } else if (ACTION_CHECK_WITH_RESULT.equals(getIntent().getAction())) {
             // pass code preference has just been disabled in SettingsActivity;

File: src/main/java/com/nextcloud/client/integrations/deck/DeckApiImpl.java
Patch:
@@ -78,7 +78,7 @@ private PendingIntent createPendingIntent(@NonNull Intent intent, @NonNull Notif
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         return PendingIntent.getActivity(context, notification.getNotificationId(),
                                          putExtrasToIntent(intent, notification, user),
-                                         PendingIntent.FLAG_ONE_SHOT);
+                                         PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE);
     }
 
     private Intent putExtrasToIntent(@NonNull Intent intent, @NonNull Notification notification, @NonNull User user) {

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -723,7 +723,7 @@ private void notifyUploadStart(UploadFileOperation upload) {
         mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this,
                                                                         (int) System.currentTimeMillis(),
                                                                         intent,
-                                                                        0)
+                                                                        PendingIntent.FLAG_IMMUTABLE)
                                              );
 
         if (!upload.isInstantPicture() && !upload.isInstantVideo()) {
@@ -823,7 +823,7 @@ private void notifyUploadResult(UploadFileOperation upload, RemoteOperationResul
                     this,
                     (int) System.currentTimeMillis(),
                     updateAccountCredentials,
-                    PendingIntent.FLAG_ONE_SHOT
+                    PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE
                 ));
             } else {
                 Intent intent;
@@ -843,7 +843,7 @@ private void notifyUploadResult(UploadFileOperation upload, RemoteOperationResul
                 mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this,
                                                                                 (int) System.currentTimeMillis(),
                                                                                 intent,
-                                                                                0)
+                                                                                PendingIntent.FLAG_IMMUTABLE)
                                                      );
             }
 

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -359,7 +359,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 }
             }
 
-            LayoutInflater layout = LayoutInflater.from(requireContext());
+            LayoutInflater layout = getLayoutInflater();
             View view = layout.inflate(R.layout.upload_file_dialog, null);
 
             ArrayAdapter<String> adapter

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -525,7 +525,7 @@ protected void onNewIntent(Intent intent) {
                     if (SearchRemoteOperation.SearchType.PHOTO_SEARCH.equals(searchEvent.searchType)) {
                         Log_OC.d(this, "Switch to photo search fragment");
 
-                        GalleryFragment photoFragment = new GalleryFragment(true);
+                        GalleryFragment photoFragment = new GalleryFragment();
                         Bundle bundle = new Bundle();
                         bundle.putParcelable(OCFileListFragment.SEARCH_EVENT, Parcels.wrap(searchEvent));
                         photoFragment.setArguments(bundle);
@@ -2071,7 +2071,7 @@ public void run() {
 
                             OCFileListFragment fragment = getListOfFilesFragment();
 
-                            if (fragment != null) {
+                            if (fragment != null && !(fragment instanceof GalleryFragment)) {
                                 fragment.setLoading(true);
                             }
 
@@ -2341,7 +2341,7 @@ public void onMessageEvent(final SearchEvent event) {
         if (SearchRemoteOperation.SearchType.PHOTO_SEARCH == event.searchType) {
             Log_OC.d(this, "Switch to photo search fragment");
 
-            setLeftFragment(new GalleryFragment(true));
+            setLeftFragment(new GalleryFragment());
         }
     }
 

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -30,6 +30,7 @@
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.device.PowerManagementService;
 import com.nextcloud.client.network.ConnectivityService;
+import com.nextcloud.common.DNSCache;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.UploadsStorageManager;
 
@@ -55,6 +56,7 @@ public static void registerNetworkChangeReceiver(final UploadsStorageManager upl
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
+                DNSCache.clear();
                 if (connectivityService.getConnectivity().isConnected()) {
                     FilesSyncHelper.restartJobsIfNeeded(uploadsStorageManager,
                                                         accountManager,

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -149,6 +149,8 @@ protected void onCreate(Bundle savedInstanceState) {
                         intent.putExtra(FileDownloader.EXTRA_FILE, file);
                         intent.putExtra(EXTRA_CONFLICT_UPLOAD_ID, conflictUploadId);
                         startService(intent);
+                    } else {
+                        uploadsStorageManager.removeUpload(upload);
                     }
                     break;
             }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupFragment.java
Patch:
@@ -267,11 +267,11 @@ protected Boolean doInBackground(String... path) {
 
             @Override
             protected void onPostExecute(Boolean result) {
-                if (result) {
+                if (result && binding != null) {
                     OCFile backupFolder = storageManager.getFileByPath(backupFolderPath);
 
                     List<OCFile> backupFiles = storageManager
-                            .getFolderContent(backupFolder, false);
+                        .getFolderContent(backupFolder, false);
 
                     Collections.sort(backupFiles, new AlphanumComparator<>());
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupFragment.java
Patch:
@@ -267,11 +267,11 @@ protected Boolean doInBackground(String... path) {
 
             @Override
             protected void onPostExecute(Boolean result) {
-                if (result) {
+                if (result && binding != null) {
                     OCFile backupFolder = storageManager.getFileByPath(backupFolderPath);
 
                     List<OCFile> backupFiles = storageManager
-                            .getFolderContent(backupFolder, false);
+                        .getFolderContent(backupFolder, false);
 
                     Collections.sort(backupFiles, new AlphanumComparator<>());
 

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -179,7 +179,7 @@ private void setupDialogElements(View view) {
 
         // find/saves UI elements
         mEnabledSwitch = view.findViewById(R.id.sync_enabled);
-        ThemeCheckableUtils.tintSwitch(mEnabledSwitch, accentColor);
+        ThemeCheckableUtils.tintSwitch(mEnabledSwitch);
 
         mLocalFolderPath = view.findViewById(R.id.synced_folders_settings_local_folder_path);
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupFragment.java
Patch:
@@ -138,11 +138,11 @@ public View onCreateView(@NonNull final LayoutInflater inflater, ViewGroup conta
         arbitraryDataProvider = new ArbitraryDataProvider(getContext().getContentResolver());
 
         ThemeCheckableUtils.tintSwitch(
-            binding.contacts, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.contacts);
         ThemeCheckableUtils.tintSwitch(
-            binding.calendar, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.calendar);
         ThemeCheckableUtils.tintSwitch(
-            binding.dailyBackup, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.dailyBackup);
         binding.dailyBackup.setChecked(
             arbitraryDataProvider.getBooleanValue(user, PREFERENCE_CONTACTS_AUTOMATIC_BACKUP));
 

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -248,10 +248,10 @@ private void prefillFilenameIfEmpty(Template template) {
         String name = binding.filename.getText().toString();
         if (name.isEmpty() || name.equalsIgnoreCase(DOT + template.getExtension())) {
             binding.filename.setText(String.format("%s.%s", template.title, template.extension));
+            name = binding.filename.getText().toString();
+            int dotPos = name.lastIndexOf('.');
+            binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
         }
-        name = binding.filename.getText().toString();
-        int dotPos = name.lastIndexOf('.');
-        binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -248,10 +248,10 @@ private void prefillFilenameIfEmpty(Template template) {
         String name = binding.filename.getText().toString();
         if (name.isEmpty() || name.equalsIgnoreCase(DOT + template.getExtension())) {
             binding.filename.setText(String.format("%s.%s", template.title, template.extension));
+            name = binding.filename.getText().toString();
+            int dotPos = name.lastIndexOf('.');
+            binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
         }
-        name = binding.filename.getText().toString();
-        int dotPos = name.lastIndexOf('.');
-        binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -179,7 +179,7 @@ private void setupDialogElements(View view) {
 
         // find/saves UI elements
         mEnabledSwitch = view.findViewById(R.id.sync_enabled);
-        ThemeCheckableUtils.tintSwitch(mEnabledSwitch, accentColor);
+        ThemeCheckableUtils.tintSwitch(mEnabledSwitch, accentColor, getContext());
 
         mLocalFolderPath = view.findViewById(R.id.synced_folders_settings_local_folder_path);
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupFragment.java
Patch:
@@ -138,11 +138,11 @@ public View onCreateView(@NonNull final LayoutInflater inflater, ViewGroup conta
         arbitraryDataProvider = new ArbitraryDataProvider(getContext().getContentResolver());
 
         ThemeCheckableUtils.tintSwitch(
-            binding.contacts, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.contacts, getContext().getResources().getColor(R.color.color_accent), getContext());
         ThemeCheckableUtils.tintSwitch(
-            binding.calendar, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.calendar, ThemeColorUtils.primaryAccentColor(getContext()), getContext());
         ThemeCheckableUtils.tintSwitch(
-            binding.dailyBackup, ThemeColorUtils.primaryAccentColor(getContext()));
+            binding.dailyBackup, ThemeColorUtils.primaryAccentColor(getContext()), getContext());
         binding.dailyBackup.setChecked(
             arbitraryDataProvider.getBooleanValue(user, PREFERENCE_CONTACTS_AUTOMATIC_BACKUP));
 

File: src/main/java/com/owncloud/android/datamodel/ExternalLinksProvider.java
Patch:
@@ -76,7 +76,9 @@ public long storeExternalLink(ExternalLink externalLink) {
      * @return numbers of rows deleted
      */
     public int deleteAllExternalLinks() {
-        return mContentResolver.delete(ProviderMeta.ProviderTableMeta.CONTENT_URI_EXTERNAL_LINKS, " 1 = 1 ", null);
+        return mContentResolver.delete(ProviderMeta.ProviderTableMeta.CONTENT_URI_EXTERNAL_LINKS,
+                                       null,
+                                       null);
     }
 
     /**

File: src/test/java/com/owncloud/android/ui/activities/ActivitiesPresenterTest.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static org.mockito.Matchers.eq;
+import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.verify;
 
 public class ActivitiesPresenterTest {

File: src/test/java/com/owncloud/android/ui/activities/data/activities/RemoteActivitiesRepositoryTest.java
Patch:
@@ -30,7 +30,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static org.mockito.Matchers.eq;
+import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.verify;
 
 public class RemoteActivitiesRepositoryTest {

File: src/test/java/com/owncloud/android/ui/activities/data/files/RemoteFilesRepositoryTest.java
Patch:
@@ -28,7 +28,7 @@
 import org.mockito.Mock;
 import org.mockito.MockitoAnnotations;
 
-import static org.mockito.Matchers.eq;
+import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.verify;
 
 public class RemoteFilesRepositoryTest {

File: src/main/java/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -155,7 +155,7 @@ protected ResultCode doInBackground(Object[] params) {
                                                                  null)) {
                     if (cursor != null && cursor.moveToFirst()) {
                         // this check prevents a crash when last modification time is not available on certain phones
-                        int columnIndex = cursor.getColumnIndexOrThrow(DocumentsContract.Document.COLUMN_LAST_MODIFIED);
+                        int columnIndex = cursor.getColumnIndex(DocumentsContract.Document.COLUMN_LAST_MODIFIED);
                         if (columnIndex >= 0) {
                             lastModified = cursor.getLong(columnIndex);
                         }

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -566,7 +566,7 @@ public void shareFileWithSharee(OCFile file, String shareeName, ShareType shareT
             service.putExtra(OperationsService.EXTRA_SHARE_HIDE_FILE_DOWNLOAD, hideFileDownload);
             service.putExtra(OperationsService.EXTRA_SHARE_PASSWORD, (password == null) ? "" : password);
             service.putExtra(OperationsService.EXTRA_SHARE_EXPIRATION_DATE_IN_MILLIS, expirationTimeInMillis);
-            service.putExtra(OperationsService.EXTRA_SHARE_NOTE, note);
+            service.putExtra(OperationsService.EXTRA_SHARE_NOTE, (note == null) ? "" : note);
             service.putExtra(OperationsService.EXTRA_SHARE_PUBLIC_LABEL, (label == null) ? "" : label);
 
             mWaitingForOpId = fileActivity.getOperationsServiceBinder().queueNewOperation(service);

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -169,6 +169,9 @@ public FileDetailFragment() {
      * @return reference to the {@link FileDetailSharingFragment}
      */
     public FileDetailSharingFragment getFileDetailSharingFragment() {
+        if (binding == null) {
+            return null;
+        }
         return ((FileDetailTabAdapter) binding.pager.getAdapter()).getFileDetailSharingFragment();
     }
 

File: src/main/java/com/owncloud/android/ui/dialog/ChooseRichDocumentsTemplateDialogFragment.java
Patch:
@@ -310,7 +310,7 @@ protected void onPostExecute(String url) {
 
             if (fragment != null && fragment.isAdded()) {
                 if (url.isEmpty()) {
-                    DisplayUtils.showSnackMessage(fragment.binding.list, "Error creating file from template");
+                    DisplayUtils.showSnackMessage(fragment.binding.list, R.string.error_creating_file_from_template);
                 } else {
                     Intent collaboraWebViewIntent = new Intent(MainApp.getAppContext(), RichDocumentsEditorWebView.class);
                     collaboraWebViewIntent.putExtra(ExternalSiteWebView.EXTRA_TITLE, "Collabora");

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1279,6 +1279,7 @@ protected boolean createAccount(RemoteOperationResult<UserInfo> authResult) {
 
             mAccount = newAccount;
             mAccountMgr.addAccountExplicitly(mAccount, webViewPassword, null);
+            mAccountMgr.notifyAccountAuthenticated(mAccount);
 
             // add the new account as default in preferences, if there is none already
             User defaultAccount = accountManager.getUser();

File: src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -468,6 +468,9 @@ private void synchronizeData(List<Object> folderAndFiles) {
         // update eTag
         mLocalFolder.setEtag(remoteFolder.getEtag());
 
+        // update size
+        mLocalFolder.setFileLength(remoteFolder.getFileLength());
+
         DecryptedFolderMetadata metadata = getDecryptedFolderMetadata(encryptedAncestor,
                                                                       mLocalFolder,
                                                                       getClient(),

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -48,7 +48,6 @@
 import android.view.View;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import android.widget.Toast;
 
 import com.google.android.material.appbar.AppBarLayout;
 import com.google.android.material.snackbar.Snackbar;
@@ -1124,6 +1123,8 @@ public void onBackPressed() {
             createMinFragments(null);
         } else {
             // pop back
+            ((CoordinatorLayout.LayoutParams) binding.rootLayout.getLayoutParams())
+                .setBehavior(new AppBarLayout.ScrollingViewBehavior());
             hideSearchView(getCurrentDir());
             showSortListGroup(true);
             super.onBackPressed();
@@ -2187,6 +2188,7 @@ public void startMediaPreview(OCFile file,
             Fragment mediaFragment = PreviewMediaFragment.newInstance(file, user.get(), startPlaybackPosition, autoplay);
             setLeftFragment(mediaFragment);
             binding.rightFragmentContainer.setVisibility(View.GONE);
+            ((CoordinatorLayout.LayoutParams) binding.rootLayout.getLayoutParams()).setBehavior(null);
             super.updateActionBarTitleAndHomeButton(file);
         } else {
             Intent previewIntent = new Intent();

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -20,6 +20,7 @@
  */
 package com.owncloud.android.ui.adapter;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
@@ -163,12 +164,13 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
         }
     }
 
+    @SuppressLint("NotifyDataSetChanged")
     public void removeFile(TrashbinFile file) {
         int index = files.indexOf(file);
 
         if (index != -1) {
             files.remove(index);
-            notifyItemRemoved(index);
+            notifyDataSetChanged(); // needs to be used to also update footer
         }
     }
 

File: src/main/java/com/owncloud/android/ui/asynctasks/GallerySearchTask.java
Patch:
@@ -103,6 +103,7 @@ protected void onPostExecute(RemoteOperationResult result) {
             if (result.isSuccess() && result.getData() != null && !isCancelled()) {
                 if (result.getData() == null || result.getData().size() == 0) {
                     photoFragment.setSearchDidNotFindNewPhotos(true);
+                    photoFragment.setEmptyListMessage(ExtendedListFragment.SearchType.GALLERY_SEARCH);
                 } else {
                     OCFileListAdapter adapter = photoFragment.getAdapter();
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -843,6 +843,7 @@ public void setPictureAs(OCFile file, View view) {
                 }
 
                 intent.setDataAndType(uri, file.getMimeType());
+                intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                 fileActivity.startActivityForResult(Intent.createChooser(intent,
                                                                          fileActivity.getString(R.string.set_as)),
                                                     200);

File: src/main/java/com/owncloud/android/ui/preview/PreviewVideoActivity.java
Patch:
@@ -90,6 +90,8 @@ public void onCreate(Bundle savedInstanceState) {
         exoPlayer = new SimpleExoPlayer.Builder(this).build();
         playerView.setPlayer(exoPlayer);
 
+        findViewById(R.id.exo_exit_fs).setOnClickListener(v -> finish());
+
         if (mSavedPlaybackPosition >= 0) {
             exoPlayer.seekTo(mSavedPlaybackPosition);
         }

File: src/main/java/com/owncloud/android/utils/FileSortOrder.java
Patch:
@@ -51,7 +51,7 @@ public class FileSortOrder {
     public static final Map<String, FileSortOrder> sortOrders;
 
     public enum Type {
-        trashBinView, localFileListView, uploadFilesView
+        trashBinView, localFileListView
     }
     static {
         HashMap<String, FileSortOrder> temp = new HashMap<>();

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -843,6 +843,7 @@ public void setPictureAs(OCFile file, View view) {
                 }
 
                 intent.setDataAndType(uri, file.getMimeType());
+                intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                 fileActivity.startActivityForResult(Intent.createChooser(intent,
                                                                          fileActivity.getString(R.string.set_as)),
                                                     200);

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1279,6 +1279,7 @@ protected boolean createAccount(RemoteOperationResult<UserInfo> authResult) {
 
             mAccount = newAccount;
             mAccountMgr.addAccountExplicitly(mAccount, webViewPassword, null);
+            mAccountMgr.notifyAccountAuthenticated(mAccount);
 
             // add the new account as default in preferences, if there is none already
             User defaultAccount = accountManager.getUser();

File: src/main/java/com/owncloud/android/ui/trashbin/TrashbinActivity.java
Patch:
@@ -299,6 +299,8 @@ public void showUser() {
     @Override
     public void showError(int message) {
         if (active) {
+            trashbinListAdapter.removeAllFiles();
+            
             binding.loadingContent.setVisibility(View.GONE);
             binding.list.setVisibility(View.VISIBLE);
             binding.swipeContainingList.setRefreshing(false);

File: src/main/java/com/owncloud/android/ui/trashbin/TrashbinActivity.java
Patch:
@@ -299,6 +299,8 @@ public void showUser() {
     @Override
     public void showError(int message) {
         if (active) {
+            trashbinListAdapter.removeAllFiles();
+            
             binding.loadingContent.setVisibility(View.GONE);
             binding.list.setVisibility(View.VISIBLE);
             binding.swipeContainingList.setRefreshing(false);

File: src/main/java/com/owncloud/android/authentication/AuthenticatorUrlUtils.java
Patch:
@@ -53,7 +53,7 @@ public static String normalizeUrl(String url, boolean sslWhenUnprefixed) {
             normalizedUrl = normalizedUrl.trim();
 
             if (!normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL) &&
-                    !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTPS_PROTOCOL)) {
+                !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTPS_PROTOCOL)) {
                 if (sslWhenUnprefixed) {
                     normalizedUrl = HTTPS_PROTOCOL + normalizedUrl;
                 } else {
@@ -100,8 +100,8 @@ public static String stripIndexPhpOrAppsFiles(String url) {
     }
 
     public static String normalizeScheme(String url) {
-        URI uri = URI.create(url);
-        if (uri.getScheme() != null) {
+        if (url.matches("[a-zA-Z][a-zA-Z0-9+.-]+://.+")) {
+            URI uri = URI.create(url);
             String lcScheme = uri.getScheme().toLowerCase(Locale.ROOT);
             return String.format("%s:%s", lcScheme, uri.getRawSchemeSpecificPart());
         } else {

File: src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -139,7 +139,7 @@ private void handleSearchEvent() {
                 mContainerActivity.getStorageManager(),
                 mFile,
                 true);
-
+            photoSearchNoNew = false;
             refresh = false;
         } else {
             mAdapter.showVirtuals(VirtualFolderType.GALLERY, true, mContainerActivity.getStorageManager());

File: src/main/java/com/owncloud/android/ui/fragment/GalleryFragment.java
Patch:
@@ -139,7 +139,7 @@ private void handleSearchEvent() {
                 mContainerActivity.getStorageManager(),
                 mFile,
                 true);
-
+            photoSearchNoNew = false;
             refresh = false;
         } else {
             mAdapter.showVirtuals(VirtualFolderType.GALLERY, true, mContainerActivity.getStorageManager());

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -249,7 +249,9 @@ private void prefillFilenameIfEmpty(Template template) {
         if (name.isEmpty() || name.equalsIgnoreCase(DOT + template.getExtension())) {
             binding.filename.setText(String.format("%s.%s", template.title, template.extension));
         }
-        binding.filename.setSelection(binding.filename.getText().toString().lastIndexOf('.'));
+        name = binding.filename.getText().toString();
+        int dotPos = name.lastIndexOf('.');
+        binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -155,7 +155,7 @@ protected ResultCode doInBackground(Object[] params) {
                                                                  null)) {
                     if (cursor != null && cursor.moveToFirst()) {
                         // this check prevents a crash when last modification time is not available on certain phones
-                        int columnIndex = cursor.getColumnIndex(DocumentsContract.Document.COLUMN_LAST_MODIFIED);
+                        int columnIndex = cursor.getColumnIndexOrThrow(DocumentsContract.Document.COLUMN_LAST_MODIFIED);
                         if (columnIndex >= 0) {
                             lastModified = cursor.getLong(columnIndex);
                         }

File: src/main/java/third_parties/sufficientlysecure/AndroidCalendar.java
Patch:
@@ -112,7 +112,7 @@ public static List<AndroidCalendar> loadAll(ContentResolver resolver) {
     }
 
     private static int getColumnIndex(Cursor cur, String dbName) {
-        return dbName == null ? -1 : cur.getColumnIndex(dbName);
+        return dbName == null ? -1 : cur.getColumnIndexOrThrow(dbName);
     }
 
     private static long getLong(Cursor cur, String dbName) {

File: src/main/java/third_parties/sufficientlysecure/SaveCalendar.java
Patch:
@@ -466,7 +466,7 @@ private VEvent convertFromDb(Cursor cur, Calendar cal, DtStamp timestamp) {
     }
 
     private int getColumnIndex(Cursor cur, String dbName) {
-        return dbName == null ? -1 : cur.getColumnIndex(dbName);
+        return dbName == null ? -1 : cur.getColumnIndexOrThrow(dbName);
     }
 
     private String getString(Cursor cur, String dbName) {

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -105,7 +105,7 @@ public class FileDownloader extends Service
     private ServiceHandler mServiceHandler;
     private IBinder mBinder;
     private OwnCloudClient mDownloadClient;
-    private Optional<User> currentUser;
+    private Optional<User> currentUser = Optional.empty();
     private FileDataStorageManager mStorageManager;
 
     private IndexedForest<DownloadFileOperation> mPendingDownloads = new IndexedForest<>();
@@ -483,7 +483,7 @@ private void downloadFile(String downloadKey) {
 
                 } finally {
                     Pair<DownloadFileOperation, String> removeResult = mPendingDownloads.removePayload(
-                        currentUser.get().getAccountName(), mCurrentDownload.getRemotePath());
+                        mCurrentDownload.getUser().getAccountName(), mCurrentDownload.getRemotePath());
 
                     if (downloadResult == null) {
                         downloadResult = new RemoteOperationResult(new RuntimeException("Error downloading…"));

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -105,7 +105,7 @@ public class FileDownloader extends Service
     private ServiceHandler mServiceHandler;
     private IBinder mBinder;
     private OwnCloudClient mDownloadClient;
-    private Optional<User> currentUser;
+    private Optional<User> currentUser = Optional.empty();
     private FileDataStorageManager mStorageManager;
 
     private IndexedForest<DownloadFileOperation> mPendingDownloads = new IndexedForest<>();

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -483,7 +483,7 @@ private void downloadFile(String downloadKey) {
 
                 } finally {
                     Pair<DownloadFileOperation, String> removeResult = mPendingDownloads.removePayload(
-                        currentUser.get().getAccountName(), mCurrentDownload.getRemotePath());
+                        mCurrentDownload.getUser().getAccountName(), mCurrentDownload.getRemotePath());
 
                     if (downloadResult == null) {
                         downloadResult = new RemoteOperationResult(new RuntimeException("Error downloading…"));

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -249,7 +249,9 @@ private void prefillFilenameIfEmpty(Template template) {
         if (name.isEmpty() || name.equalsIgnoreCase(DOT + template.getExtension())) {
             binding.filename.setText(String.format("%s.%s", template.title, template.extension));
         }
-        binding.filename.setSelection(binding.filename.getText().toString().lastIndexOf('.'));
+        name = binding.filename.getText().toString();
+        int dotPos = name.lastIndexOf('.');
+        binding.filename.setSelection((dotPos != -1) ? dotPos : name.length());
     }
 
     @Override

File: src/main/java/com/nextcloud/android/sso/QueryParam.java
Patch:
@@ -25,6 +25,8 @@
 import java.io.Serializable;
 
 public class QueryParam implements Serializable {
+    private static final long serialVersionUID = 21523240203234211L; // must be same as in SSO project
+
     public String key;
     public String value;
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/BackupFragment.java
Patch:
@@ -301,8 +301,11 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     } else {
                         contactsPreferenceActivity.openDrawer();
                     }
+                } else if (getActivity() != null) {
+                    getActivity().finish();
                 } else {
                     Intent settingsIntent = new Intent(getContext(), SettingsActivity.class);
+                    settingsIntent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_ACTIVITY_CLEAR_TOP);
                     startActivity(settingsIntent);
                 }
                 retval = true;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1804,8 +1804,9 @@ private void onRestoreFileVersionOperationFinish(RemoteOperationResult result) {
             OCFile parent = getStorageManager().getFileById(file.getParentId());
             startSyncFolderOperation(parent, true, true);
 
-            if (getSecondFragment() instanceof FileDetailFragment) {
-                FileDetailFragment fileDetailFragment = (FileDetailFragment) getSecondFragment();
+            FileFragment secondFragment = getSecondFragment();
+            if (secondFragment instanceof FileDetailFragment) {
+                FileDetailFragment fileDetailFragment = (FileDetailFragment) secondFragment;
                 fileDetailFragment.getFileDetailActivitiesFragment().reload();
             }
 

File: src/main/java/com/owncloud/android/ui/asynctasks/FetchRemoteFileTask.java
Patch:
@@ -120,6 +120,6 @@ protected String doInBackground(Void... voids) {
     protected void onPostExecute(String message) {
         super.onPostExecute(message);
 
-        fileDisplayActivity.showFile(message);
+        fileDisplayActivity.showFiles(false);
     }
 }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -186,7 +186,7 @@ public void onAttach(@NonNull Context context) {
         try {
             onEditShareListener = (OnEditShareListener) context;
         } catch (Exception ignored) {
-            throw new IllegalArgumentException("Calling activity must implement the interface");
+            throw new IllegalArgumentException("Calling activity must implement the interface", ignored);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/QuickSharingPermissionsBottomSheetDialog.java
Patch:
@@ -131,7 +131,6 @@ private void handlePermissionChanged(List<QuickPermissionModel> quickPermissionM
      * @return
      */
     private List<QuickPermissionModel> getQuickPermissionList() {
-        List<QuickPermissionModel> quickPermissionModelList = new ArrayList<>();
 
         String[] permissionArray;
         if (ocShare.isFolder()) {
@@ -144,6 +143,8 @@ private List<QuickPermissionModel> getQuickPermissionList() {
         //get the checked item position
         int checkedItem = SharingMenuHelper.getPermissionCheckedItem(fileActivity, ocShare, permissionArray);
 
+
+        final List<QuickPermissionModel> quickPermissionModelList = new ArrayList<>(permissionArray.length);
         for (int i = 0; i < permissionArray.length; i++) {
             QuickPermissionModel quickPermissionModel = new QuickPermissionModel(permissionArray[i], checkedItem == i);
             quickPermissionModelList.add(quickPermissionModel);

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -617,6 +617,7 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("eps", Collections.singletonList("application/postscript"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("erf", Collections.singletonList("image/x-dcraw"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("exe", Collections.singletonList("application/x-ms-dos-executable"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("eml", Collections.singletonList("message/rfc822"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("fb2", Arrays.asList("application/x-fictionbook+xml", "text/plain"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flac", Collections.singletonList("audio/flac"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flv", Collections.singletonList("video/x-flv"));

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -176,11 +176,13 @@ protected void onStart() {
         super.onStart();
         if (getAccount() == null) {
             finish();
+            return;
         }
 
         if (newFile == null) {
             Log_OC.e(TAG, "No file received");
             finish();
+            return;
         }
 
         if (existingFile == null) {

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -176,11 +176,13 @@ protected void onStart() {
         super.onStart();
         if (getAccount() == null) {
             finish();
+            return;
         }
 
         if (newFile == null) {
             Log_OC.e(TAG, "No file received");
             finish();
+            return;
         }
 
         if (existingFile == null) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -949,7 +949,7 @@ private void requestUploadOfFilesFromFileSystem(Intent data, int resultCode) {
     }
 
     private void requestUploadOfFilesFromFileSystem(String localBasePath, String[] filePaths, int resultCode) {
-        if (filePaths != null) {
+        if (localBasePath != null && filePaths != null) {
             if (!localBasePath.endsWith("/")) {
                 localBasePath = localBasePath + "/";
             }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -949,7 +949,7 @@ private void requestUploadOfFilesFromFileSystem(Intent data, int resultCode) {
     }
 
     private void requestUploadOfFilesFromFileSystem(String localBasePath, String[] filePaths, int resultCode) {
-        if (filePaths != null) {
+        if (localBasePath != null && filePaths != null) {
             if (!localBasePath.endsWith("/")) {
                 localBasePath = localBasePath + "/";
             }

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -552,6 +552,7 @@ private static void populateMimeTypeIconMapping() {
         MIMETYPE_TO_ICON_MAPPING.put("text/x-shellscript", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("web", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put(MimeType.DIRECTORY, R.drawable.folder);
+        MIMETYPE_TO_ICON_MAPPING.put("message/rfc822", R.drawable.file_text);
     }
 
     /**
@@ -617,6 +618,7 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("eps", Collections.singletonList("application/postscript"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("erf", Collections.singletonList("image/x-dcraw"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("exe", Collections.singletonList("application/x-ms-dos-executable"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("eml", Collections.singletonList("message/rfc822"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("fb2", Arrays.asList("application/x-fictionbook+xml", "text/plain"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flac", Collections.singletonList("audio/flac"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flv", Collections.singletonList("video/x-flv"));

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -529,8 +529,7 @@ private static void createChannel(NotificationManager notificationManager,
                                       String channelId, int channelName,
                                       int channelDescription, Context context, int importance) {
         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O
-            && getAppContext() != null
-            && notificationManager.getNotificationChannel(channelId) == null) {
+            && getAppContext() != null) {
             CharSequence name = context.getString(channelName);
             String description = context.getString(channelDescription);
             NotificationChannel channel = new NotificationChannel(channelId, name, importance);

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -88,7 +88,7 @@ public abstract class AbstractIT {
     protected Activity currentActivity;
 
     protected FileDataStorageManager fileDataStorageManager =
-        new FileDataStorageManager(account, targetContext.getContentResolver());
+        new FileDataStorageManager(user, targetContext.getContentResolver());
 
     @BeforeClass
     public static void beforeAll() {

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentResolverIT.java
Patch:
@@ -25,7 +25,7 @@
 public class FileDataStorageManagerContentResolverIT extends FileDataStorageManagerIT {
     @Override
     public void before() {
-        sut = new FileDataStorageManager(account, targetContext.getContentResolver());
+        sut = new FileDataStorageManager(user, targetContext.getContentResolver());
 
         super.before();
     }

File: src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -599,7 +599,7 @@ private static String getFolderPreference(final Context context,
         }
 
         ArbitraryDataProvider dataProvider = new ArbitraryDataProvider(context.getContentResolver());
-        FileDataStorageManager storageManager = new FileDataStorageManager(user.toPlatformAccount(), context.getContentResolver());
+        FileDataStorageManager storageManager = new FileDataStorageManager(user, context.getContentResolver());
 
         String value = dataProvider.getValue(user.getAccountName(), getKeyFromFolder(preferenceName, folder));
         OCFile prefFolder = folder;

File: src/main/java/com/owncloud/android/providers/DiskLruImageCacheFileProvider.java
Patch:
@@ -62,7 +62,7 @@ public boolean onCreate() {
 
     private OCFile getFile(Uri uri) {
         User user = accountManager.getUser();
-        FileDataStorageManager fileDataStorageManager = new FileDataStorageManager(user.toPlatformAccount(),
+        FileDataStorageManager fileDataStorageManager = new FileDataStorageManager(user,
                 MainApp.getAppContext().getContentResolver());
 
         return fileDataStorageManager.getFileByPath(uri.getPath());

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -234,7 +234,7 @@ private Cursor searchForUsersOrGroups(Uri uri) {
             Uri emailBaseUri = new Uri.Builder().scheme(CONTENT).authority(DATA_EMAIL).build();
             Uri circleBaseUri = new Uri.Builder().scheme(CONTENT).authority(DATA_CIRCLE).build();
 
-            FileDataStorageManager manager = new FileDataStorageManager(user.toPlatformAccount(),
+            FileDataStorageManager manager = new FileDataStorageManager(user,
                                                                         getContext().getContentResolver());
             boolean federatedShareAllowed = manager.getCapability(user.getAccountName())
                 .getFilesSharingFederationOutgoing()

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -507,7 +507,7 @@ private Pair<Target, RemoteOperation> newOperation(Intent operationIntent) {
                 String newParentPath;
                 long shareId;
 
-                FileDataStorageManager fileDataStorageManager = new FileDataStorageManager(account,
+                FileDataStorageManager fileDataStorageManager = new FileDataStorageManager(user,
                                                                                            getContentResolver());
 
                 switch (action) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -390,7 +390,7 @@ private void setupDrawerMenu(NavigationView navigationView) {
     }
 
     private void filterDrawerMenu(final Menu menu, @NonNull final User user) {
-        FileDataStorageManager storageManager = new FileDataStorageManager(user.toPlatformAccount(),
+        FileDataStorageManager storageManager = new FileDataStorageManager(user,
                                                                            getContentResolver());
         OCCapability capability = storageManager.getCapability(user.getAccountName());
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2503,7 +2503,7 @@ private void openFile(User user, String fileId) {
         FileDataStorageManager storageManager = getStorageManager();
 
         if (storageManager == null) {
-            storageManager = new FileDataStorageManager(user.toPlatformAccount(), getContentResolver());
+            storageManager = new FileDataStorageManager(user, getContentResolver());
         }
 
         FetchRemoteFileTask fetchRemoteFileTask = new FetchRemoteFileTask(user,

File: src/main/java/com/owncloud/android/ui/activity/StorageMigration.java
Patch:
@@ -436,7 +436,8 @@ private void copyDirs(File src, File dst) throws MigrationException {
         }
 
         private void updateIndex(Context context) throws MigrationException {
-            FileDataStorageManager manager = new FileDataStorageManager(null, context.getContentResolver());
+            final Account nullAccount = null;
+            FileDataStorageManager manager = new FileDataStorageManager(nullAccount, context.getContentResolver());
 
             try {
                 manager.migrateStoredFiles(mStorageSource, mStorageTarget);

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -857,7 +857,7 @@ public void setData(List<Object> objects,
         }
 
         if (mStorageManager == null) {
-            mStorageManager = new FileDataStorageManager(user.toPlatformAccount(), activity.getContentResolver());
+            mStorageManager = new FileDataStorageManager(user, activity.getContentResolver());
         }
 
         if (clear) {

File: src/main/java/com/owncloud/android/ui/dialog/ChooseRichDocumentsTemplateDialogFragment.java
Patch:
@@ -287,7 +287,7 @@ protected String doInBackground(Void... voids) {
 
                     if (chooseTemplateDialogFragmentWeakReference.get() != null) {
                         FileDataStorageManager storageManager = new FileDataStorageManager(
-                            user.toPlatformAccount(),
+                            user,
                             chooseTemplateDialogFragmentWeakReference.get().requireContext().getContentResolver());
                         storageManager.saveFile(temp);
                         file = storageManager.getFileByPath(path);

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -332,7 +332,7 @@ protected String doInBackground(Void... voids) {
                     return "";
                 }
 
-                FileDataStorageManager storageManager = new FileDataStorageManager(user.toPlatformAccount(),
+                FileDataStorageManager storageManager = new FileDataStorageManager(user,
                                                                                    context.getContentResolver());
 
                 OCFile temp = FileStorageUtils.fillOCFile((RemoteFile) newFileResult.getData().get(0));

File: src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -200,7 +200,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         OCFileListAdapter.setThumbnail(existingFile,
                                        binding.existingThumbnail,
                                        user,
-                                       new FileDataStorageManager(user.toPlatformAccount(),
+                                       new FileDataStorageManager(user,
                                                                   requireContext().getContentResolver()),
                                        asyncTasks,
                                        false,

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -222,7 +222,7 @@ public void onDestroyView() {
     }
 
     private void setupView() {
-        FileDataStorageManager storageManager = new FileDataStorageManager(user.toPlatformAccount(),
+        FileDataStorageManager storageManager = new FileDataStorageManager(user,
                                                                            contentResolver);
         operationsHelper = ((ComponentsGetter) requireActivity()).getFileOperationsHelper();
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -201,7 +201,7 @@ private Intent createIntentFromFile(String storagePath) {
     public void startSyncForFileAndIntent(OCFile file, Intent intent) {
         new Thread(() -> {
             User user = fileActivity.getUser().orElseThrow(RuntimeException::new);
-            FileDataStorageManager storageManager = new FileDataStorageManager(fileActivity.getAccount(),
+            FileDataStorageManager storageManager = new FileDataStorageManager(user,
                                                                                fileActivity.getContentResolver());
 
             // check if file is in conflict (this is known due to latest folder refresh)
@@ -314,7 +314,7 @@ public void openFile(OCFile file) {
                 public void run() {
                     User user = currentAccount.getUser();
                     FileDataStorageManager storageManager =
-                        new FileDataStorageManager(user.toPlatformAccount(), fileActivity.getContentResolver());
+                        new FileDataStorageManager(user, fileActivity.getContentResolver());
                     // a fresh object is needed; many things could have occurred to the file
                     // since it was registered to observe again, assuming that local files
                     // are linked to a remote file AT MOST, SOMETHING TO BE DONE;

File: src/main/java/com/owncloud/android/ui/dialog/SendFilesDialog.java
Patch:
@@ -87,7 +87,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         SendButtonAdapter.ClickListener clickListener = setupSendButtonClickListener(sendIntent);
 
         RecyclerView sendButtonsView = view.findViewById(R.id.send_button_recycler_view);
-        sendButtonsView.setHasFixedSize(true);
         sendButtonsView.setLayoutManager(new GridLayoutManager(getActivity(), 4));
         sendButtonsView.setAdapter(new SendButtonAdapter(sendButtonDataList, clickListener));
 

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -165,7 +165,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         SendButtonAdapter.ClickListener clickListener = setupSendButtonClickListener(sendIntent);
 
         RecyclerView sendButtonsView = view.findViewById(R.id.send_button_recycler_view);
-        sendButtonsView.setHasFixedSize(true);
         sendButtonsView.setLayoutManager(new GridLayoutManager(getActivity(), 4));
         sendButtonsView.setAdapter(new SendButtonAdapter(sendButtonDataList, clickListener));
 

File: src/main/java/com/owncloud/android/ui/dialog/SendFilesDialog.java
Patch:
@@ -87,7 +87,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         SendButtonAdapter.ClickListener clickListener = setupSendButtonClickListener(sendIntent);
 
         RecyclerView sendButtonsView = view.findViewById(R.id.send_button_recycler_view);
-        sendButtonsView.setHasFixedSize(true);
         sendButtonsView.setLayoutManager(new GridLayoutManager(getActivity(), 4));
         sendButtonsView.setAdapter(new SendButtonAdapter(sendButtonDataList, clickListener));
 

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -165,7 +165,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         SendButtonAdapter.ClickListener clickListener = setupSendButtonClickListener(sendIntent);
 
         RecyclerView sendButtonsView = view.findViewById(R.id.send_button_recycler_view);
-        sendButtonsView.setHasFixedSize(true);
         sendButtonsView.setLayoutManager(new GridLayoutManager(getActivity(), 4));
         sendButtonsView.setAdapter(new SendButtonAdapter(sendButtonDataList, clickListener));
 

File: src/main/java/com/owncloud/android/utils/FileSortOrderByDate.java
Patch:
@@ -60,8 +60,7 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
         final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
-            Long obj1 = o1.getDeletionTimestamp();
-            return multiplier * obj1.compareTo(o2.getDeletionTimestamp());
+            return multiplier * Long.compare(o1.getDeletionTimestamp(),o2.getDeletionTimestamp());
         });
 
         return super.sortTrashbinFiles(files);

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -262,9 +262,7 @@ public static RemoteFile fillRemoteFile(OCFile ocFile) {
     public static List<OCFile> sortOcFolderDescDateModifiedWithoutFavoritesFirst(List<OCFile> files) {
         final int multiplier = -1;
         Collections.sort(files, (o1, o2) -> {
-            @SuppressFBWarnings(value = "Bx", justification = "Would require stepping up API level")
-            Long obj1 = o1.getModificationTimestamp();
-            return multiplier * obj1.compareTo(o2.getModificationTimestamp());
+            return multiplier * Long.compare(o1.getModificationTimestamp(),o2.getModificationTimestamp());
         });
 
         return files;

File: src/main/java/com/owncloud/android/utils/FileSortOrderByDate.java
Patch:
@@ -60,8 +60,7 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
         final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
-            Long obj1 = o1.getDeletionTimestamp();
-            return multiplier * obj1.compareTo(o2.getDeletionTimestamp());
+            return multiplier * Long.compare(o1.getDeletionTimestamp(),o2.getDeletionTimestamp());
         });
 
         return super.sortTrashbinFiles(files);

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -262,9 +262,7 @@ public static RemoteFile fillRemoteFile(OCFile ocFile) {
     public static List<OCFile> sortOcFolderDescDateModifiedWithoutFavoritesFirst(List<OCFile> files) {
         final int multiplier = -1;
         Collections.sort(files, (o1, o2) -> {
-            @SuppressFBWarnings(value = "Bx", justification = "Would require stepping up API level")
-            Long obj1 = o1.getModificationTimestamp();
-            return multiplier * obj1.compareTo(o2.getModificationTimestamp());
+            return multiplier * Long.compare(o1.getModificationTimestamp(),o2.getModificationTimestamp());
         });
 
         return files;

File: src/androidTest/java/com/nextcloud/client/SettingsActivityIT.java
Patch:
@@ -86,6 +86,7 @@ public void showMnemonic() {
         SettingsActivity sut = activityRule.launchActivity(null);
         sut.handleMnemonicRequest(intent);
 
+        Looper.myLooper().quitSafely();
         assertTrue(true); // if we reach this, everything is ok
     }
 }

File: src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -71,7 +71,7 @@ public void testSyncedFolderDialog() {
                                                                    false,
                                                                    false,
                                                                    true,
-                                                                   "test@https://server.com",
+                                                                   "test@https://nextcloud.localhost",
                                                                    0,
                                                                    0,
                                                                    true,

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -103,13 +103,13 @@ public static void beforeAll() {
                 }
             }
 
-            Account temp = new Account("test@https://server.com", MainApp.getAccountType(targetContext));
+            Account temp = new Account("test@https://nextcloud.localhost", MainApp.getAccountType(targetContext));
             platformAccountManager.addAccountExplicitly(temp, "password", null);
-            platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "https://server.com");
+            platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "https://nextcloud.localhost");
             platformAccountManager.setUserData(temp, KEY_USER_ID, "test");
 
             final UserAccountManager userAccountManager = UserAccountManagerImpl.fromContext(targetContext);
-            account = userAccountManager.getAccountByName("test@https://server.com");
+            account = userAccountManager.getAccountByName("test@https://nextcloud.localhost");
 
             if (account == null) {
                 throw new ActivityNotFoundException();

File: src/androidTest/java/com/owncloud/android/datamodel/OCFileUnitTest.java
Patch:
@@ -58,7 +58,7 @@ public class OCFileUnitTest {
     private static final long LAST_SYNC_DATE_FOR_PROPERTIES = 5432109876L;
     private static final long LAST_SYNC_DATE_FOR_DATA = 4321098765L;
     private static final String ETAG = "adshfas98ferqw8f9yu2";
-    private static final String PUBLIC_LINK = "https://fake.url.net/owncloud/987427448712984sdas29";
+    private static final String PUBLIC_LINK = "https://nextcloud.localhost/owncloud/987427448712984sdas29";
     private static final String PERMISSIONS = "SRKNVD";
     private static final String REMOTE_ID = "jadñgiadf8203:9jrp98v2mn3er2089fh";
     private static final String ETAG_IN_CONFLICT = "2adshfas98ferqw8f9yu";

File: src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -71,7 +71,7 @@ public void testSyncedFolderDialog() {
                                                                    false,
                                                                    false,
                                                                    true,
-                                                                   "test@https://server.com",
+                                                                   "test@https://nextcloud.localhost",
                                                                    0,
                                                                    0,
                                                                    true,

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -103,13 +103,13 @@ public static void beforeAll() {
                 }
             }
 
-            Account temp = new Account("test@https://server.com", MainApp.getAccountType(targetContext));
+            Account temp = new Account("test@https://nextcloud.localhost", MainApp.getAccountType(targetContext));
             platformAccountManager.addAccountExplicitly(temp, "password", null);
-            platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "https://server.com");
+            platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "https://nextcloud.localhost");
             platformAccountManager.setUserData(temp, KEY_USER_ID, "test");
 
             final UserAccountManager userAccountManager = UserAccountManagerImpl.fromContext(targetContext);
-            account = userAccountManager.getAccountByName("test@https://server.com");
+            account = userAccountManager.getAccountByName("test@https://nextcloud.localhost");
 
             if (account == null) {
                 throw new ActivityNotFoundException();

File: src/androidTest/java/com/owncloud/android/datamodel/OCFileUnitTest.java
Patch:
@@ -58,7 +58,7 @@ public class OCFileUnitTest {
     private static final long LAST_SYNC_DATE_FOR_PROPERTIES = 5432109876L;
     private static final long LAST_SYNC_DATE_FOR_DATA = 4321098765L;
     private static final String ETAG = "adshfas98ferqw8f9yu2";
-    private static final String PUBLIC_LINK = "https://fake.url.net/owncloud/987427448712984sdas29";
+    private static final String PUBLIC_LINK = "https://nextcloud.localhost/owncloud/987427448712984sdas29";
     private static final String PERMISSIONS = "SRKNVD";
     private static final String REMOTE_ID = "jadñgiadf8203:9jrp98v2mn3er2089fh";
     private static final String ETAG_IN_CONFLICT = "2adshfas98ferqw8f9yu";

File: src/androidTest/java/com/nextcloud/client/SettingsActivityIT.java
Patch:
@@ -86,6 +86,7 @@ public void showMnemonic() {
         SettingsActivity sut = activityRule.launchActivity(null);
         sut.handleMnemonicRequest(intent);
 
+        Looper.myLooper().quitSafely();
         assertTrue(true); // if we reach this, everything is ok
     }
 }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorAsyncTask.java
Patch:
@@ -88,6 +88,8 @@ protected RemoteOperationResult<UserInfo> doInBackground(Object... params) {
                 String permanentLocation = redirectionPath.getLastPermanentLocation();
                 result.setLastPermanentLocation(permanentLocation);
             }
+            
+            result.setResultData(userInfoResult.getResultData());
         } else {
             result = new RemoteOperationResult(RemoteOperationResult.ResultCode.UNKNOWN_ERROR);
         }

File: src/main/java/com/owncloud/android/operations/CommentFileOperation.java
Patch:
@@ -27,7 +27,6 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.comments.CommentFileRemoteOperation;
 
-
 /**
  * Comment file
  */

File: src/main/java/com/owncloud/android/operations/CommentFileOperation.java
Patch:
@@ -27,7 +27,6 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.comments.CommentFileRemoteOperation;
 
-
 /**
  * Comment file
  */

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -215,7 +215,7 @@ public class FileDisplayActivity extends FileActivity
 
     private SearchView searchView;
     private PlayerServiceConnection mPlayerConnection;
-    private Optional<User> lastDisplayedUser;
+    private Optional<User> lastDisplayedUser = Optional.empty();
     private int menuItemId = -1;
 
     @Inject

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -215,7 +215,7 @@ public class FileDisplayActivity extends FileActivity
 
     private SearchView searchView;
     private PlayerServiceConnection mPlayerConnection;
-    private Optional<User> lastDisplayedUser;
+    private Optional<User> lastDisplayedUser = Optional.empty();
     private int menuItemId = -1;
 
     @Inject

File: src/main/java/com/owncloud/android/ui/adapter/StoragePathAdapter.java
Patch:
@@ -77,7 +77,8 @@ class StoragePathViewHolder extends RecyclerView.ViewHolder implements View.OnCl
 
         public StoragePathViewHolder(StoragePathItemBinding binding) {
             super(binding.getRoot());
-            binding.getRoot().setOnClickListener(this);
+            this.binding = binding;
+            this.binding.getRoot().setOnClickListener(this);
         }
 
         @Override

File: src/main/java/com/owncloud/android/ui/dialog/MultipleAccountsDialog.java
Patch:
@@ -54,7 +54,6 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 
 public class MultipleAccountsDialog extends DialogFragment implements Injectable, UserListAdapter.ClickListener {
-    private MultipleAccountsBinding binding;
 
     @Inject UserAccountManager accountManager;
 
@@ -68,7 +67,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         // Inflate the layout for the dialog
         LayoutInflater inflater = activity.getLayoutInflater();
-        binding = MultipleAccountsBinding.inflate(inflater, null, false);
+        MultipleAccountsBinding binding = MultipleAccountsBinding.inflate(inflater, null, false);
 
         final ReceiveExternalFilesActivity parent = (ReceiveExternalFilesActivity) getActivity();
         AlertDialog.Builder builder = new AlertDialog.Builder(parent);
@@ -129,7 +128,6 @@ public void onAccountClicked(User user) {
 
     @Override
     public void onDestroyView() {
-        binding = null;
         super.onDestroyView();
     }
 }

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -507,7 +507,7 @@ protected Uri doInBackground(String... fileId) {
         protected void onPostExecute(Uri uri) {
             final PreviewMediaFragment previewMediaFragment = previewMediaFragmentWeakReference.get();
             final Context context = previewMediaFragment != null ? previewMediaFragment.getContext() : null;
-            if (previewMediaFragment != null && context != null) {
+            if (previewMediaFragment != null && previewMediaFragment.binding != null && context != null) {
                 if (uri != null) {
                     previewMediaFragment.videoUri = uri;
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -771,6 +771,8 @@ private void checkOcServer() {
                 accountSetupBinding.hostUrlInput.setText(uri);
             }
 
+            uri = AuthenticatorUrlUtils.normalizeScheme(uri);
+
             // Handle internationalized domain names
             try {
                 uri = DisplayUtils.convertIdn(uri, true);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -507,7 +507,7 @@ protected Uri doInBackground(String... fileId) {
         protected void onPostExecute(Uri uri) {
             final PreviewMediaFragment previewMediaFragment = previewMediaFragmentWeakReference.get();
             final Context context = previewMediaFragment != null ? previewMediaFragment.getContext() : null;
-            if (previewMediaFragment != null && context != null) {
+            if (previewMediaFragment != null && previewMediaFragment.binding != null && context != null) {
                 if (uri != null) {
                     previewMediaFragment.videoUri = uri;
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1373,7 +1373,7 @@ public void cleanShares() {
     }
 
     // TODO shares null?
-    public void saveShares(Collection<OCShare> shares) {
+    public void saveShares(List<OCShare> shares) {
         cleanShares();
         ArrayList<ContentProviderOperation> operations = new ArrayList<>(shares.size());
 

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -403,8 +403,11 @@ private void updateFilesTableAccordingToShareInsertion(SQLiteDatabase db, Conten
             case GROUP:
             case EMAIL:
             case FEDERATED:
+            case FEDERATED_GROUP:
             case ROOM:
             case CIRCLE:
+            case DECK:
+            case GUEST:
                 fileValues.put(ProviderTableMeta.FILE_SHARED_WITH_SHAREE, 1);
                 break;
 

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -403,8 +403,11 @@ private void updateFilesTableAccordingToShareInsertion(SQLiteDatabase db, Conten
             case GROUP:
             case EMAIL:
             case FEDERATED:
+            case FEDERATED_GROUP:
             case ROOM:
             case CIRCLE:
+            case DECK:
+            case GUEST:
                 fileValues.put(ProviderTableMeta.FILE_SHARED_WITH_SHAREE, 1);
                 break;
 

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -895,7 +895,7 @@ public void setData(List<Object> objects,
     }
 
     private void parseShares(List<Object> objects) {
-        ArrayList<OCShare> shares = new ArrayList<>();
+        List<OCShare> shares = new ArrayList<>();
 
         for (Object shareObject : objects) {
             // check type before cast as of long running data fetch it is possible that old result is filled

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -895,7 +895,7 @@ public void setData(List<Object> objects,
     }
 
     private void parseShares(List<Object> objects) {
-        List<OCShare> shares = new ArrayList<>();
+        ArrayList<OCShare> shares = new ArrayList<>();
 
         for (Object shareObject : objects) {
             // check type before cast as of long running data fetch it is possible that old result is filled

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -771,6 +771,8 @@ private void checkOcServer() {
                 accountSetupBinding.hostUrlInput.setText(uri);
             }
 
+            uri = AuthenticatorUrlUtils.normalizeScheme(uri);
+
             // Handle internationalized domain names
             try {
                 uri = DisplayUtils.convertIdn(uri, true);

File: src/main/java/com/owncloud/android/services/AccountManagerService.java
Patch:
@@ -44,7 +44,7 @@ public void onCreate() {
     @Override
     public IBinder onBind(Intent intent) {
         if(mBinder == null) {
-            mBinder = new InputStreamBinder(this, accountManager);
+            mBinder = new InputStreamBinder(getApplicationContext(), accountManager);
         }
         return mBinder;
     }

File: src/main/java/com/nextcloud/client/network/ConnectivityServiceImpl.java
Patch:
@@ -74,7 +74,8 @@ public boolean isInternetWalled() {
 
             int status = get.execute(client);
 
-            boolean result = !(status == HttpStatus.SC_NO_CONTENT && get.getResponseContentLength() == 0);
+            // Content-Length is not available when using chunked transfer encoding, so check for -1 as well
+            boolean result = !(status == HttpStatus.SC_NO_CONTENT && get.getResponseContentLength() <= 0);
 
             get.releaseConnection();
 

File: src/main/java/com/nextcloud/client/network/ConnectivityServiceImpl.java
Patch:
@@ -74,7 +74,8 @@ public boolean isInternetWalled() {
 
             int status = get.execute(client);
 
-            boolean result = !(status == HttpStatus.SC_NO_CONTENT && get.getResponseContentLength() == 0);
+            // Content-Length is not available when using chunked transfer encoding, so check for -1 as well
+            boolean result = !(status == HttpStatus.SC_NO_CONTENT && get.getResponseContentLength() <= 0);
 
             get.releaseConnection();
 

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -149,11 +149,11 @@ public void setActivityItems(List<Object> activityItems, NextcloudClient client,
     public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         if (viewType == ACTIVITY_TYPE) {
             return new ActivityViewHolder(
-                ActivityListItemBinding.inflate(LayoutInflater.from(parent.getContext()))
+                ActivityListItemBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false)
             );
         } else {
             return new ActivityViewHeaderHolder(
-                ActivityListItemHeaderBinding.inflate(LayoutInflater.from(parent.getContext()))
+                ActivityListItemHeaderBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false)
             );
         }
     }

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -149,11 +149,11 @@ public void setActivityItems(List<Object> activityItems, NextcloudClient client,
     public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         if (viewType == ACTIVITY_TYPE) {
             return new ActivityViewHolder(
-                ActivityListItemBinding.inflate(LayoutInflater.from(parent.getContext()))
+                ActivityListItemBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false)
             );
         } else {
             return new ActivityViewHeaderHolder(
-                ActivityListItemHeaderBinding.inflate(LayoutInflater.from(parent.getContext()))
+                ActivityListItemHeaderBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false)
             );
         }
     }

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -402,7 +402,7 @@ private Response processRequestV2(final NextcloudRequest request, final InputStr
 
         HttpMethodBase method = buildMethod(request, client.getBaseUri(), requestBodyInputStream);
 
-        if (!request.getParameterV2().isEmpty()) {
+        if (request.getParameterV2() != null && !request.getParameterV2().isEmpty()) {
             method.setQueryString(convertListToNVP(request.getParameterV2()));
         } else {
             method.setQueryString(convertMapToNVP(request.getParameter()));

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -335,7 +335,7 @@ private HttpMethodBase processRequest(final NextcloudRequest request, final Inpu
 
         HttpMethodBase method = buildMethod(request, client.getBaseUri(), requestBodyInputStream);
 
-        if (!request.getParameterV2().isEmpty()) {
+        if (request.getParameterV2() != null && !request.getParameterV2().isEmpty()) {
             method.setQueryString(convertListToNVP(request.getParameterV2()));
         } else {
             method.setQueryString(convertMapToNVP(request.getParameter()));

File: src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java
Patch:
@@ -53,10 +53,11 @@ public RetrieveStatusAsyncTask(User user,
     protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {
         try {
             NextcloudClient client = clientFactory.createNextcloudClient(user);
-            RemoteOperationResult result = new GetStatusRemoteOperation().execute(client);
+            RemoteOperationResult<com.owncloud.android.lib.resources.users.Status> result =
+                new GetStatusRemoteOperation().execute(client);
 
             if (result.isSuccess()) {
-                return (com.owncloud.android.lib.resources.users.Status) result.getSingleData();
+                return result.getResultData();
             } else {
                 return new com.owncloud.android.lib.resources.users.Status(StatusType.OFFLINE, "", "", -1);
             }
@@ -72,6 +73,5 @@ protected void onPostExecute(com.owncloud.android.lib.resources.users.Status sta
         if (fragment != null && fragment.getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED)) {
             fragment.setStatus(status, fragment.requireContext());
         }
-
     }
 }

File: src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java
Patch:
@@ -53,10 +53,11 @@ public RetrieveStatusAsyncTask(User user,
     protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {
         try {
             NextcloudClient client = clientFactory.createNextcloudClient(user);
-            RemoteOperationResult result = new GetStatusRemoteOperation().execute(client);
+            RemoteOperationResult<com.owncloud.android.lib.resources.users.Status> result =
+                new GetStatusRemoteOperation().execute(client);
 
             if (result.isSuccess()) {
-                return (com.owncloud.android.lib.resources.users.Status) result.getSingleData();
+                return result.getResultData();
             } else {
                 return new com.owncloud.android.lib.resources.users.Status(StatusType.OFFLINE, "", "", -1);
             }
@@ -72,6 +73,5 @@ protected void onPostExecute(com.owncloud.android.lib.resources.users.Status sta
         if (fragment != null && fragment.getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED)) {
             fragment.setStatus(status, fragment.requireContext());
         }
-
     }
 }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -232,7 +232,7 @@ private void setupViewPager() {
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(R.string.drawer_item_activities).setIcon(R.drawable.ic_activity));
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(R.string.share_dialog_title).setIcon(R.drawable.shared_via_users));
 
-        ThemeLayoutUtils.colorTabLayout(getContext(), binding.tabLayout);
+        ThemeLayoutUtils.colorTabLayout(getContext().getApplicationContext(), binding.tabLayout);
 
         final FileDetailTabAdapter adapter = new FileDetailTabAdapter(getFragmentManager(), getFile(), user);
         binding.pager.setAdapter(adapter);

File: src/main/java/com/nextcloud/client/network/ConnectivityServiceImpl.java
Patch:
@@ -74,7 +74,7 @@ public boolean isInternetWalled() {
 
             int status = get.execute(client);
 
-            boolean result = !(status == HttpStatus.SC_NO_CONTENT && (get.getResponseBodyAsString().length() == 0));
+            boolean result = !(status == HttpStatus.SC_NO_CONTENT && (get.getResponseContentLength() == 0));
 
             if (get != null) {
                 get.releaseConnection();

File: src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -22,7 +22,6 @@
 
 package com.owncloud.android.ui.activity;
 
-import android.annotation.SuppressLint;
 import android.app.DownloadManager;
 import android.content.Context;
 import android.content.Intent;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -120,7 +120,7 @@
  */
 public class MainApp extends MultiDexApplication implements HasAndroidInjector {
 
-    public static final OwnCloudVersion OUTDATED_SERVER_VERSION = OwnCloudVersion.nextcloud_17;
+    public static final OwnCloudVersion OUTDATED_SERVER_VERSION = OwnCloudVersion.nextcloud_18;
     public static final OwnCloudVersion MINIMUM_SUPPORTED_SERVER_VERSION = OwnCloudVersion.nextcloud_16;
 
     private static final String TAG = MainApp.class.getSimpleName();

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -304,12 +304,13 @@ public AssetFileDescriptor openDocumentThumbnail(String documentId,
             throws FileNotFoundException {
         Log.d(TAG, "openDocumentThumbnail(), id=" + documentId);
 
-        OCFile file = toDocument(documentId).getFile();
+        Document document = toDocument(documentId);
+        OCFile file = document.getFile();
 
         boolean exists = ThumbnailsCacheManager.containsBitmap(ThumbnailsCacheManager.PREFIX_THUMBNAIL
                                                                    + file.getRemoteId());
         if (!exists) {
-            ThumbnailsCacheManager.generateThumbnailFromOCFile(file);
+            ThumbnailsCacheManager.generateThumbnailFromOCFile(file, document.getAccount(), getContext());
         }
 
         return new AssetFileDescriptor(DiskLruImageCacheFileProvider.getParcelFileDescriptorForOCFile(file),

File: src/main/java/com/owncloud/android/ui/TextDrawable.java
Patch:
@@ -100,7 +100,6 @@ public TextDrawable(String text, BitmapUtils.Color color, float radius) {
      * @return the avatar as a TextDrawable
      */
     @NonNull
-    @NextcloudServer(max = 12)
     public static TextDrawable createAvatar(Account account, float radiusInDp) {
         String username = UserAccountManager.getDisplayName(account);
         return createNamedAvatar(username, radiusInDp);
@@ -115,7 +114,6 @@ public static TextDrawable createAvatar(Account account, float radiusInDp) {
      * @return the avatar as a TextDrawable
      */
     @NonNull
-    @NextcloudServer(max = 12)
     public static TextDrawable createAvatarByUserId(String userId, float radiusInDp) {
         return createNamedAvatar(userId, radiusInDp);
     }

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -268,12 +268,13 @@ private Intent createSendIntent() {
     }
 
     private void shareFile(OCFile file) {
+        dismiss();
+
         if (getActivity() instanceof FileDisplayActivity) {
             ((FileDisplayActivity) getActivity()).showDetails(file, 1);
         } else {
             fileOperationsHelper.showShareFile(file);
         }
-        dismiss();
     }
 
     public void setFileOperationsHelper(FileOperationsHelper fileOperationsHelper) {

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -268,12 +268,13 @@ private Intent createSendIntent() {
     }
 
     private void shareFile(OCFile file) {
+        dismiss();
+
         if (getActivity() instanceof FileDisplayActivity) {
             ((FileDisplayActivity) getActivity()).showDetails(file, 1);
         } else {
             fileOperationsHelper.showShareFile(file);
         }
-        dismiss();
     }
 
     public void setFileOperationsHelper(FileOperationsHelper fileOperationsHelper) {

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -120,7 +120,7 @@
  */
 public class MainApp extends MultiDexApplication implements HasAndroidInjector {
 
-    public static final OwnCloudVersion OUTDATED_SERVER_VERSION = OwnCloudVersion.nextcloud_17;
+    public static final OwnCloudVersion OUTDATED_SERVER_VERSION = OwnCloudVersion.nextcloud_18;
     public static final OwnCloudVersion MINIMUM_SUPPORTED_SERVER_VERSION = OwnCloudVersion.nextcloud_16;
 
     private static final String TAG = MainApp.class.getSimpleName();

File: src/main/java/com/owncloud/android/ui/TextDrawable.java
Patch:
@@ -100,7 +100,6 @@ public TextDrawable(String text, BitmapUtils.Color color, float radius) {
      * @return the avatar as a TextDrawable
      */
     @NonNull
-    @NextcloudServer(max = 12)
     public static TextDrawable createAvatar(Account account, float radiusInDp) {
         String username = UserAccountManager.getDisplayName(account);
         return createNamedAvatar(username, radiusInDp);
@@ -115,7 +114,6 @@ public static TextDrawable createAvatar(Account account, float radiusInDp) {
      * @return the avatar as a TextDrawable
      */
     @NonNull
-    @NextcloudServer(max = 12)
     public static TextDrawable createAvatarByUserId(String userId, float radiusInDp) {
         return createNamedAvatar(userId, radiusInDp);
     }

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -104,7 +104,6 @@
 import androidx.fragment.app.FragmentTransaction;
 
 import static com.owncloud.android.ui.activity.FileDisplayActivity.TAG_PUBLIC_LINK;
-import static com.owncloud.android.ui.activity.FileDisplayActivity.TAG_SECOND_FRAGMENT;
 
 
 /**
@@ -805,7 +804,7 @@ private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation ope
             copyAndShareFileLink(this, file, link);
 
             if (sharingFragment != null) {
-                sharingFragment.onUpdateShareInformation(result, getFile());
+                sharingFragment.onUpdateShareInformation(result, file);
             }
         } else {
             // Detect Failure (403) --> maybe needs password
@@ -849,7 +848,7 @@ FileDetailSharingFragment getShareFileFragment() {
         Fragment fragment = getSupportFragmentManager().findFragmentByTag(ShareActivity.TAG_SHARE_FRAGMENT);
 
         if (fragment == null) {
-            fragment = getSupportFragmentManager().findFragmentByTag(TAG_SECOND_FRAGMENT);
+            fragment = getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
         }
 
         if (fragment instanceof FileDetailSharingFragment) {

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -104,7 +104,6 @@
 import androidx.fragment.app.FragmentTransaction;
 
 import static com.owncloud.android.ui.activity.FileDisplayActivity.TAG_PUBLIC_LINK;
-import static com.owncloud.android.ui.activity.FileDisplayActivity.TAG_SECOND_FRAGMENT;
 
 
 /**
@@ -805,7 +804,7 @@ private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation ope
             copyAndShareFileLink(this, file, link);
 
             if (sharingFragment != null) {
-                sharingFragment.onUpdateShareInformation(result, getFile());
+                sharingFragment.onUpdateShareInformation(result, file);
             }
         } else {
             // Detect Failure (403) --> maybe needs password
@@ -849,7 +848,7 @@ FileDetailSharingFragment getShareFileFragment() {
         Fragment fragment = getSupportFragmentManager().findFragmentByTag(ShareActivity.TAG_SHARE_FRAGMENT);
 
         if (fragment == null) {
-            fragment = getSupportFragmentManager().findFragmentByTag(TAG_SECOND_FRAGMENT);
+            fragment = getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_LIST_OF_FILES);
         }
 
         if (fragment instanceof FileDetailSharingFragment) {

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -242,7 +242,8 @@ public static void pushRegistrationToServer(final UserAccountManager accountMana
                                     context.getResources().getString(R.string.push_server_url),
                                     token, pushResponse.getDeviceIdentifier(),
                                     pushResponse.getSignature(),
-                                    pushResponse.getPublicKey())
+                                    pushResponse.getPublicKey(),
+                                    MainApp.getUserAgent())
                                     .run();
 
                                 if (resultProxy.isSuccess()) {

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1718,10 +1718,10 @@ public static void triggerMediaScan(String path) {
     }
 
     public static void triggerMediaScan(String path, OCFile file) {
-        if (path != null) {
+        if (path != null && !TextUtils.isEmpty(path)) {
             ContentValues values = new ContentValues();
             ContentResolver contentResolver = MainApp.getAppContext().getContentResolver();
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q && !TextUtils.isEmpty(path)) {
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q ) {
                 if (file != null) {
                     values.put(MediaStore.Images.Media.MIME_TYPE, file.getMimeType());
                     values.put(MediaStore.Images.Media.TITLE, file.getFileName());

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -324,7 +324,9 @@ public void onStart() {
                 mMultiListContainer.setVisibility(View.GONE);
                 mPreviewContainer.setVisibility(View.VISIBLE);
             } else if (MimeTypeUtil.isVideo(file)) {
-                stopAudio();
+                if (mMediaPlayerServiceConnection.isConnected() && mMediaPlayerServiceConnection.isPlaying()) {
+                    stopAudio();
+                }
                 playVideo();
             }
         }

File: src/androidTest/java/com/owncloud/android/ui/LoginIT.java
Patch:
@@ -28,6 +28,7 @@
 
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.account.UserAccountManagerImpl;
+import com.owncloud.android.AbstractIT;
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 
@@ -54,7 +55,7 @@
 
 
 @LargeTest
-public class LoginIT {
+public class LoginIT extends AbstractIT {
     @Rule
     public GrantPermissionRule permissionRule = GrantPermissionRule.grant(Manifest.permission.WRITE_EXTERNAL_STORAGE);
 

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentProviderClientIT.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.owncloud.android.db.ProviderMeta;
 
-public class FileDataStorageManagerContentProviderClientTest extends FileDataStorageManagerTest {
+public class FileDataStorageManagerContentProviderClientIT extends FileDataStorageManagerIT {
 
     @Override
     public void before() {

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentResolverIT.java
Patch:
@@ -22,7 +22,7 @@
 
 package com.owncloud.android.datamodel;
 
-public class FileDataStorageManagerContentResolverTest extends FileDataStorageManagerTest {
+public class FileDataStorageManagerContentResolverIT extends FileDataStorageManagerIT {
     @Override
     public void before() {
         sut = new FileDataStorageManager(account, targetContext.getContentResolver());

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentProviderClientIT.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.owncloud.android.db.ProviderMeta;
 
-public class FileDataStorageManagerContentProviderClientTest extends FileDataStorageManagerTest {
+public class FileDataStorageManagerContentProviderClientIT extends FileDataStorageManagerIT {
 
     @Override
     public void before() {

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentResolverIT.java
Patch:
@@ -22,7 +22,7 @@
 
 package com.owncloud.android.datamodel;
 
-public class FileDataStorageManagerContentResolverTest extends FileDataStorageManagerTest {
+public class FileDataStorageManagerContentResolverIT extends FileDataStorageManagerIT {
     @Override
     public void before() {
         sut = new FileDataStorageManager(account, targetContext.getContentResolver());

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -874,6 +874,9 @@ public static boolean isDarkModeActive(Context context) {
         return Configuration.UI_MODE_NIGHT_YES == nightModeFlag;
     }
 
+    @SuppressFBWarnings(
+        value = "SF_SWITCH_NO_DEFAULT",
+        justification = "We only create avatars for a subset of share types")
     public static void createAvatar(ShareType type, ImageView avatar, Context context) {
         switch (type) {
             case GROUP:

File: src/main/java/com/nextcloud/client/network/ConnectivityService.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  * This service provides information about current network connectivity
- * and server reachableity.
+ * and server reachability.
  */
 public interface ConnectivityService {
 

File: src/main/java/com/nextcloud/client/network/ConnectivityService.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  * This service provides information about current network connectivity
- * and server reachableity.
+ * and server reachability.
  */
 public interface ConnectivityService {
 

File: src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -45,7 +45,7 @@
 /**
  * Implementation of application-wide preferences using {@link SharedPreferences}.
  *
- * Users should not use this class directly. Please use {@link AppPreferences} interafce
+ * Users should not use this class directly. Please use {@link AppPreferences} interface
  * instead.
  */
 public final class AppPreferencesImpl implements AppPreferences {

File: src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -45,7 +45,7 @@
 /**
  * Implementation of application-wide preferences using {@link SharedPreferences}.
  *
- * Users should not use this class directly. Please use {@link AppPreferences} interafce
+ * Users should not use this class directly. Please use {@link AppPreferences} interface
  * instead.
  */
 public final class AppPreferencesImpl implements AppPreferences {

File: src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -35,7 +35,7 @@ public interface AppPreferences {
     /**
      * Preferences listener. Callbacks should be invoked on main thread.
      *
-     * Miantainers should extend this interface with callbacks for specific
+     * Maintainers should extend this interface with callbacks for specific
      * events.
      */
     interface Listener {

File: src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -35,7 +35,7 @@ public interface AppPreferences {
     /**
      * Preferences listener. Callbacks should be invoked on main thread.
      *
-     * Miantainers should extend this interface with callbacks for specific
+     * Maintainers should extend this interface with callbacks for specific
      * events.
      */
     interface Listener {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -620,7 +620,7 @@ Fragment getLeftFragment() {
     OCFileListFragment getListOfFilesFragment() {
         Fragment listOfFiles = getSupportFragmentManager().findFragmentByTag(
             FileDisplayActivity.TAG_LIST_OF_FILES);
-        if (listOfFiles != null) {
+        if (listOfFiles instanceof OCFileListFragment) {
             return (OCFileListFragment) listOfFiles;
         }
         Log_OC.e(TAG, "Access to unexisting list of files fragment!!");
@@ -1077,6 +1077,8 @@ public void onBackPressed() {
                 showSortListGroup(true);
                 cleanSecondFragment();
             }
+        } else if (leftFragment instanceof PreviewTextStringFragment) {
+            createMinFragments(null);
         } else {
             // pop back
             hideSearchView(getCurrentDir());

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -347,6 +347,7 @@ private static String getWebLoginUserAgent() {
             Build.MANUFACTURER.substring(1).toLowerCase(Locale.getDefault()) + " " + Build.MODEL + " (Android)";
     }
 
+    @SuppressFBWarnings("ANDROID_WEB_VIEW_JAVASCRIPT")
     @SuppressLint("SetJavaScriptEnabled")
     private void initWebViewLogin(String baseURL, boolean useGenericUserAgent) {
         mLoginWebView.setVisibility(View.GONE);

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -44,6 +44,7 @@
 
 import androidx.appcompat.app.ActionBar;
 import androidx.drawerlayout.widget.DrawerLayout;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 /**
  * This activity shows an URL as a web view
@@ -149,6 +150,7 @@ public void onReceivedError(WebView view, int errorCode, String description, Str
         webview.loadUrl(url);
     }
 
+    @SuppressFBWarnings("ANDROID_WEB_VIEW_JAVASCRIPT")
     @SuppressLint("SetJavaScriptEnabled")
     private void setupWebSettings(WebSettings webSettings) {
         // enable zoom

File: src/main/java/com/owncloud/android/ui/activity/RichDocumentsEditorWebView.java
Patch:
@@ -65,6 +65,7 @@
 import androidx.annotation.RequiresApi;
 import butterknife.ButterKnife;
 import butterknife.Unbinder;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 /**
  * Opens document for editing via Richdocuments app in a web view
@@ -90,6 +91,7 @@ public class RichDocumentsEditorWebView extends EditorWebView {
     @Inject
     protected ClientFactory clientFactory;
 
+    @SuppressFBWarnings("ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE")
     @SuppressLint("AddJavascriptInterface") // suppress warning as webview is only used >= Lollipop
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/ui/fragment/FeatureWebFragment.java
Patch:
@@ -14,6 +14,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 public class FeatureWebFragment extends Fragment {
     private String mWebUrl;
@@ -32,6 +33,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         mWebUrl = getArguments() != null ? getArguments().getString("url") : null;
     }
 
+    @SuppressFBWarnings("ANDROID_WEB_VIEW_JAVASCRIPT")
     @SuppressLint("SetJavaScriptEnabled")
     @Nullable
     @Override

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -707,7 +707,8 @@ private boolean checkIfViaSSO(Intent intent) {
         if (extras == null) {
             return false;
         } else {
-            return extras.getParcelable("accountAuthenticatorResponse") != null;
+            String authTokenType = extras.getString("authTokenType");
+            return "SSO".equals(authTokenType);
         }
     }
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -707,7 +707,8 @@ private boolean checkIfViaSSO(Intent intent) {
         if (extras == null) {
             return false;
         } else {
-            return extras.getParcelable("accountAuthenticatorResponse") != null;
+            String authTokenType = extras.getString("authTokenType");
+            return "SSO".equals(authTokenType);
         }
     }
 

File: src/main/java/com/owncloud/android/utils/SyncedFolderUtils.java
Patch:
@@ -168,7 +168,7 @@ else if (MediaFolderType.IMAGE == folderType) {
      */
     public static boolean isQualifiedFolder(String folderPath) {
         File folder = new File(folderPath);
-        // check if folder starts with thumbnail praefix
+        // check if folder starts with thumbnail prefix
         return folder.isDirectory() && !folder.getName().startsWith(THUMBNAIL_FOLDER_PREFIX);
     }
 

File: src/main/java/com/owncloud/android/utils/SyncedFolderUtils.java
Patch:
@@ -168,7 +168,7 @@ else if (MediaFolderType.IMAGE == folderType) {
      */
     public static boolean isQualifiedFolder(String folderPath) {
         File folder = new File(folderPath);
-        // check if folder starts with thumbnail praefix
+        // check if folder starts with thumbnail prefix
         return folder.isDirectory() && !folder.getName().startsWith(THUMBNAIL_FOLDER_PREFIX);
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -56,7 +56,6 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.adapter.ShareeListAdapter;
 import com.owncloud.android.ui.adapter.ShareeListAdapterListener;
-import com.owncloud.android.ui.decoration.SimpleListItemDividerDecoration;
 import com.owncloud.android.ui.dialog.ExpirationDatePickerDialogFragment;
 import com.owncloud.android.ui.dialog.NoteDialogFragment;
 import com.owncloud.android.ui.dialog.RenamePublicShareDialogFragment;
@@ -173,7 +172,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                                                             this,
                                                             userId));
         binding.sharesList.setLayoutManager(new LinearLayoutManager(getContext()));
-        binding.sharesList.addItemDecoration(new SimpleListItemDividerDecoration(getContext()));
 
         setupView();
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -809,9 +809,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 } else if (
                     currentDir != null && currentDir.getParentId() != 0 ||
                         second != null && second.getFile() != null ||
-                        isSearchOpen() ||
-                        second == null
-                ) {
+                        isSearchOpen()) {
                     onBackPressed();
                 } else {
                     openDrawer();

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -100,9 +100,9 @@ public Set<String> getFilesForUpload(String localPath, String syncedFolderId) {
                         File file = new File(value);
                         if (!file.exists()) {
                             Log_OC.d(TAG, "Ignoring file for upload (doesn't exist): " + value);
-                        } else if (SyncedFolderUtils.isQualifiedFolder(file.getParent())) {
+                        } else if (!SyncedFolderUtils.isQualifiedFolder(file.getParent())) {
                             Log_OC.d(TAG, "Ignoring file for upload (unqualified folder): " + value);
-                        } else if (SyncedFolderUtils.isFileNameQualifiedForAutoUpload(file.getName())) {
+                        } else if (!SyncedFolderUtils.isFileNameQualifiedForAutoUpload(file.getName())) {
                             Log_OC.d(TAG, "Ignoring file for upload (unqualified file): " + value);
                         } else {
                             localPathsToUpload.add(value);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -809,9 +809,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 } else if (
                     currentDir != null && currentDir.getParentId() != 0 ||
                         second != null && second.getFile() != null ||
-                        isSearchOpen() ||
-                        second == null
-                ) {
+                        isSearchOpen()) {
                     onBackPressed();
                 } else {
                     openDrawer();

File: src/main/java/com/owncloud/android/ui/dialog/SendFilesDialog.java
Patch:
@@ -109,11 +109,12 @@ private SendButtonAdapter.ClickListener setupSendButtonClickListener(Intent send
 
     @NonNull
     private List<SendButtonData> setupSendButtonData(Intent sendIntent) {
-        List<SendButtonData> sendButtonDataList = new ArrayList<>();
         Drawable icon;
         SendButtonData sendButtonData;
         CharSequence label;
-        for (ResolveInfo match : requireActivity().getPackageManager().queryIntentActivities(sendIntent, 0)) {
+        List<ResolveInfo> matches = requireActivity().getPackageManager().queryIntentActivities(sendIntent, 0);
+        List<SendButtonData> sendButtonDataList = new ArrayList<>(matches.size());
+        for (ResolveInfo match : matches) {
             icon = match.loadIcon(requireActivity().getPackageManager());
             label = match.loadLabel(requireActivity().getPackageManager());
             sendButtonData = new SendButtonData(icon, label,

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -100,7 +100,8 @@ protected void onCreate(Bundle savedInstanceState) {
         // allow debugging (when building the debug version); see details in
         // https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT &&
-            (getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
+            ((getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0 ||
+                getResources().getBoolean(R.bool.is_beta))) {
             Log_OC.d(this, "Enable debug for webView");
             WebView.setWebContentsDebuggingEnabled(true);
         }

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -100,7 +100,8 @@ protected void onCreate(Bundle savedInstanceState) {
         // allow debugging (when building the debug version); see details in
         // https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT &&
-            (getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
+            ((getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0 ||
+                getResources().getBoolean(R.bool.is_beta))) {
             Log_OC.d(this, "Enable debug for webView");
             WebView.setWebContentsDebuggingEnabled(true);
         }

File: src/test/java/com/owncloud/android/ui/adapter/ActivityListAdapterTest.java
Patch:
@@ -28,7 +28,6 @@
 import org.mockito.Mock;
 import org.mockito.Mockito;
 import org.mockito.MockitoAnnotations;
-import org.mockito.internal.util.reflection.FieldSetter;
 
 import java.util.ArrayList;
 
@@ -39,10 +38,10 @@ public final class ActivityListAdapterTest {
     private ActivityListAdapter activityListAdapter;
 
     @Before
-    public void setUp() throws NoSuchFieldException {
+    public void setUp() {
         MockitoAnnotations.initMocks(this);
         MockitoAnnotations.initMocks(activityListAdapter);
-        FieldSetter.setField(activityListAdapter, activityListAdapter.getClass().getDeclaredField("values"), new ArrayList<>());
+        activityListAdapter.values = new ArrayList<>();
     }
 
     @Test

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -201,7 +201,7 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell
 
         int accessMode = ParcelFileDescriptor.parseMode(mode);
 
-        boolean needsDownload = (accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY);
+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;
         if (needsDownload && ocFile.isDown()) {
             RemoteOperationResult result = new ReadFileRemoteOperation(ocFile.getRemotePath())
                 .execute(document.getClient());

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -686,7 +686,7 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check that connectivity conditions are met and delays the upload otherwise
         Connectivity connectivity = connectivityService.getConnectivity();
-        if (mOnWifiOnly && !connectivity.isWifi()) {
+        if (mOnWifiOnly && (!connectivity.isWifi() || connectivity.isMetered())) {
             Log_OC.d(TAG, "Upload delayed until WiFi is available: " + getRemotePath());
             remoteOperationResult = new RemoteOperationResult(ResultCode.DELAYED_FOR_WIFI);
         }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1132,7 +1132,9 @@ public void onAuthenticatorTaskCallback(RemoteOperationResult result) {
                 }
             } else {
                 // init webView again
-                mLoginWebView.setVisibility(View.GONE);
+                if (mLoginWebView != null) {
+                    mLoginWebView.setVisibility(View.GONE);
+                }
                 setContentView(R.layout.account_setup);
                 initOverallUi();
 

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -125,7 +125,7 @@ public OCFile(String path) {
     @VisibleForTesting
     public OCFile(String path, String remoteId) {
         this(path);
-        setRemoteId(remoteId);
+        this.remoteId = remoteId;
     }
 
     /**

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -686,7 +686,7 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check that connectivity conditions are met and delays the upload otherwise
         Connectivity connectivity = connectivityService.getConnectivity();
-        if (mOnWifiOnly && !connectivity.isWifi()) {
+        if (mOnWifiOnly && (!connectivity.isWifi() || connectivity.isMetered())) {
             Log_OC.d(TAG, "Upload delayed until WiFi is available: " + getRemotePath());
             remoteOperationResult = new RemoteOperationResult(ResultCode.DELAYED_FOR_WIFI);
         }

File: src/main/java/com/nextcloud/client/di/AppModule.java
Patch:
@@ -71,7 +71,7 @@
 import dagger.Module;
 import dagger.Provides;
 
-@Module(includes = {ComponentsModule.class, VariantComponentsModule.class})
+@Module(includes = {ComponentsModule.class, VariantComponentsModule.class, BuildTypeComponentsModule.class})
 class AppModule {
 
     @Provides

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -242,6 +242,7 @@ public boolean saveFile(OCFile ocFile) {
         cv.put(ProviderTableMeta.FILE_NOTE, ocFile.getNote());
         cv.put(ProviderTableMeta.FILE_SHAREES, new Gson().toJson(ocFile.getSharees()));
         cv.put(ProviderTableMeta.FILE_RICH_WORKSPACE, ocFile.getRichWorkspace());
+        cv.put(ProviderTableMeta.FILE_HAS_PREVIEW, ocFile.isPreviewAvailable() ? 1 : 0);
 
         boolean sameRemotePath = fileExists(ocFile.getRemotePath());
         if (sameRemotePath ||

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -83,6 +83,8 @@
  * Manager for concurrent access to thumbnails cache.
  */
 public final class ThumbnailsCacheManager {
+    private static final int READ_TIMEOUT = 40000;
+    private static final int CONNECTION_TIMEOUT = 5000;
 
     public static final String PREFIX_RESIZED_IMAGE = "r";
     public static final String PREFIX_THUMBNAIL = "t";
@@ -632,7 +634,7 @@ private Bitmap doThumbnailFromOCFileInBackground() {
                                 getMethod.setRequestHeader(RemoteOperation.OCS_API_HEADER,
                                         RemoteOperation.OCS_API_HEADER_VALUE);
 
-                                int status = mClient.executeMethod(getMethod);
+                                int status = mClient.executeMethod(getMethod, READ_TIMEOUT, CONNECTION_TIMEOUT);
                                 if (status == HttpStatus.SC_OK) {
                                     InputStream inputStream = getMethod.getResponseBodyAsStream();
                                     Bitmap bitmap = BitmapFactory.decodeStream(inputStream);

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -23,7 +23,6 @@
 
 package com.owncloud.android.ui.fragment;
 
-import android.accounts.Account;
 import android.content.ContentResolver;
 import android.graphics.PorterDuff;
 import android.os.AsyncTask;
@@ -340,7 +339,8 @@ private void fetchAndSetData(int lastGiven) {
                 }
 
                 Log_OC.d(TAG, "BEFORE getRemoteActivitiesOperation.execute");
-                final RemoteOperationResult result = nextcloudClient.execute(getRemoteNotificationOperation);
+                RemoteOperationResult result = nextcloudClient.execute(getRemoteNotificationOperation);
+                result = new RemoteOperationResult(RemoteOperationResult.ResultCode.UNHANDLED_HTTP_CODE);
 
                 ArrayList<Object> versions = null;
                 if (restoreFileVersionSupported) {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -227,7 +227,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
             if (!mIgnoreFirstSavedState) {
                 OCFile file = savedInstanceState.getParcelable(EXTRA_FILE);
                 setFile(file);
-                mImageView.setScale(savedInstanceState.getFloat(EXTRA_ZOOM));
+                mImageView.setScale(Math.min(mImageView.getMaximumScale(), savedInstanceState.getFloat(EXTRA_ZOOM)));
             } else {
                 mIgnoreFirstSavedState = false;
             }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1132,7 +1132,9 @@ public void onAuthenticatorTaskCallback(RemoteOperationResult result) {
                 }
             } else {
                 // init webView again
-                mLoginWebView.setVisibility(View.GONE);
+                if (mLoginWebView != null) {
+                    mLoginWebView.setVisibility(View.GONE);
+                }
                 setContentView(R.layout.account_setup);
                 initOverallUi();
 

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -171,7 +171,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             modificationTimestamp = downloadOperation.getModificationTimestamp();
             etag = downloadOperation.getEtag();
             newFile = new File(getSavePath());
-            if (!newFile.getParentFile().mkdirs()) {
+            if (!newFile.getParentFile().exists() && !newFile.getParentFile().mkdirs()) {
                 Log_OC.e(TAG, "Unable to create parent folder " + newFile.getParentFile().getAbsolutePath());
             }
 

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -399,7 +399,7 @@ private ContentValues createContentValuesFromSyncedFolder(SyncedFolder syncedFol
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ACCOUNT, syncedFolder.getAccount());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_UPLOAD_ACTION, syncedFolder.getUploadAction());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY,
-               syncedFolder.getNameCollisionPolicy());
+               syncedFolder.getNameCollisionPolicyInt());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_TYPE, syncedFolder.getType().getId());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN, syncedFolder.isHidden());
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -903,7 +903,9 @@ private RemoteOperationResult copyFile(File originalFile, String expectedPath) t
     }
 
     @CheckResult
-    private RemoteOperationResult checkNameCollision(OwnCloudClient client, DecryptedFolderMetadata metadata, boolean encrypted)
+    private RemoteOperationResult checkNameCollision(OwnCloudClient client,
+                                                     DecryptedFolderMetadata metadata,
+                                                     boolean encrypted)
         throws OperationCancelledException {
         Log_OC.d(TAG, "Checking name collision in server");
 

File: src/main/java/com/owncloud/android/ui/dialog/parcel/SyncedFolderParcelable.java
Patch:
@@ -61,7 +61,7 @@ public SyncedFolderParcelable(SyncedFolderDisplayItem syncedFolderDisplayItem, i
         account = syncedFolderDisplayItem.getAccount();
         uploadAction = syncedFolderDisplayItem.getUploadAction();
         nameCollisionPolicy = FileUploader.NameCollisionPolicy.deserialize(
-            syncedFolderDisplayItem.getNameCollisionPolicy());
+            syncedFolderDisplayItem.getNameCollisionPolicyInt());
         this.section = section;
         hidden = syncedFolderDisplayItem.isHidden();
     }

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -399,7 +399,7 @@ private ContentValues createContentValuesFromSyncedFolder(SyncedFolder syncedFol
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ACCOUNT, syncedFolder.getAccount());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_UPLOAD_ACTION, syncedFolder.getUploadAction());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_NAME_COLLISION_POLICY,
-               syncedFolder.getNameCollisionPolicy());
+               syncedFolder.getNameCollisionPolicyInt());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_TYPE, syncedFolder.getType().getId());
         cv.put(ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_HIDDEN, syncedFolder.isHidden());
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -903,7 +903,9 @@ private RemoteOperationResult copyFile(File originalFile, String expectedPath) t
     }
 
     @CheckResult
-    private RemoteOperationResult checkNameCollision(OwnCloudClient client, DecryptedFolderMetadata metadata, boolean encrypted)
+    private RemoteOperationResult checkNameCollision(OwnCloudClient client,
+                                                     DecryptedFolderMetadata metadata,
+                                                     boolean encrypted)
         throws OperationCancelledException {
         Log_OC.d(TAG, "Checking name collision in server");
 

File: src/main/java/com/owncloud/android/ui/dialog/parcel/SyncedFolderParcelable.java
Patch:
@@ -61,7 +61,7 @@ public SyncedFolderParcelable(SyncedFolderDisplayItem syncedFolderDisplayItem, i
         account = syncedFolderDisplayItem.getAccount();
         uploadAction = syncedFolderDisplayItem.getUploadAction();
         nameCollisionPolicy = FileUploader.NameCollisionPolicy.deserialize(
-            syncedFolderDisplayItem.getNameCollisionPolicy());
+            syncedFolderDisplayItem.getNameCollisionPolicyInt());
         this.section = section;
         hidden = syncedFolderDisplayItem.isHidden();
     }

File: src/main/java/com/owncloud/android/ui/adapter/ShareeListAdapter.java
Patch:
@@ -334,7 +334,7 @@ private boolean optionsItemSelected(Menu menu, MenuItem item, AppCompatCheckBox
                 return true;
             }
             case R.id.action_password: {
-                listener.requestPasswordForShare(share);
+                listener.requestPasswordForShare(share, false);
                 return true;
             }
             case R.id.action_expiration_date: {
@@ -428,6 +428,6 @@ int updatePermissionsToShare(OCShare share,
          *
          * @param share the share for which a password shall be configured/removed
          */
-        void requestPasswordForShare(OCShare share);
+        void requestPasswordForShare(OCShare share, boolean askForPassword);
     }
 }

File: src/main/java/com/owncloud/android/ui/adapter/ShareeListAdapter.java
Patch:
@@ -334,7 +334,7 @@ private boolean optionsItemSelected(Menu menu, MenuItem item, AppCompatCheckBox
                 return true;
             }
             case R.id.action_password: {
-                listener.requestPasswordForShare(share);
+                listener.requestPasswordForShare(share, false);
                 return true;
             }
             case R.id.action_expiration_date: {
@@ -428,6 +428,6 @@ int updatePermissionsToShare(OCShare share,
          *
          * @param share the share for which a password shall be configured/removed
          */
-        void requestPasswordForShare(OCShare share);
+        void requestPasswordForShare(OCShare share, boolean askForPassword);
     }
 }

File: src/androidTest/java/com/nextcloud/client/SettingsActivityIT.java
Patch:
@@ -65,6 +65,8 @@ public void open() {
     public void showMnemonic_Error() {
         SettingsActivity sut = activityRule.launchActivity(null);
         sut.handleMnemonicRequest(null);
+        shortSleep();
+        waitForIdleSync();
 
         screenshot(sut);
     }

File: src/androidTest/java/com/nextcloud/client/SettingsActivityIT.java
Patch:
@@ -65,6 +65,8 @@ public void open() {
     public void showMnemonic_Error() {
         SettingsActivity sut = activityRule.launchActivity(null);
         sut.handleMnemonicRequest(null);
+        shortSleep();
+        waitForIdleSync();
 
         screenshot(sut);
     }

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -715,6 +715,9 @@ public void onTransferProgress(
             String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR) + 1);
             String text = String.format(getString(R.string.uploader_upload_in_progress_content), percent, fileName);
             mNotificationBuilder.setContentText(text);
+            if (mNotificationManager == null) {
+                mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
+            }
             mNotificationManager.notify(R.string.uploader_upload_in_progress_ticker, mNotificationBuilder.build());
         }
         mLastPercent = percent;

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -863,8 +863,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                         .setPositiveButton(R.string.common_ok, (dialog, which) -> dialog.dismiss())
                         .create();
 
-                    alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(accentColor);
                     alertDialog.show();
+                    alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(accentColor);
                 }
             }
         }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -421,7 +421,7 @@ public boolean optionsItemSelected(MenuItem item, OCShare publicShare) {
             }
             case R.id.action_share_expiration_date: {
                 ExpirationDatePickerDialogFragment expirationDialog = ExpirationDatePickerDialogFragment
-                    .newInstance(file, publicShare.getExpirationDate());
+                    .newInstance(publicShare, publicShare.getExpirationDate());
                 expirationDialog.show(fileActivity.getSupportFragmentManager(),
                                       ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG);
                 return true;

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -421,7 +421,7 @@ public boolean optionsItemSelected(MenuItem item, OCShare publicShare) {
             }
             case R.id.action_share_expiration_date: {
                 ExpirationDatePickerDialogFragment expirationDialog = ExpirationDatePickerDialogFragment
-                    .newInstance(file, publicShare.getExpirationDate());
+                    .newInstance(publicShare, publicShare.getExpirationDate());
                 expirationDialog.show(fileActivity.getSupportFragmentManager(),
                                       ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG);
                 return true;

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerTest.java
Patch:
@@ -89,13 +89,13 @@ public void testFolderContent() throws IOException {
 
         assertTrue(new CreateFolderRemoteOperation("/1/2/", true).execute(client).isSuccess());
 
-        assertTrue(new UploadFileRemoteOperation(FileStorageUtils.getSavePath(account.name) + "/chunkedFile.txt",
+        assertTrue(new UploadFileRemoteOperation(getDummyFile("/chunkedFile.txt").getAbsolutePath(),
                                                  "/1/1/chunkedFile.txt",
                                                  "text/plain",
                                                  String.valueOf(System.currentTimeMillis() / 1000))
                        .execute(client).isSuccess());
 
-        assertTrue(new UploadFileRemoteOperation(FileStorageUtils.getSavePath(account.name) + "/chunkedFile.txt",
+        assertTrue(new UploadFileRemoteOperation(getDummyFile("/chunkedFile.txt").getAbsolutePath(),
                                                  "/1/1/chunkedFile2.txt",
                                                  "text/plain",
                                                  String.valueOf(System.currentTimeMillis() / 1000))

File: src/androidTest/java/com/owncloud/android/ui/preview/PreviewTextFileFragmentTest.java
Patch:
@@ -27,7 +27,6 @@
 import com.owncloud.android.AbstractIT;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
-import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 
 import org.junit.Rule;
@@ -50,12 +49,12 @@ public class PreviewTextFileFragmentTest extends AbstractIT {
 
     @Test
     // @ScreenshotTest // todo run without real server
-    public void displaySimpleTextFile() {
+    public void displaySimpleTextFile() throws IOException {
         FileDisplayActivity sut = activityRule.launchActivity(null);
 
         shortSleep();
 
-        File file = new File(FileStorageUtils.getSavePath(account.name) + "/nonEmpty.txt");
+        File file = getDummyFile("nonEmpty.txt");
         OCFile test = new OCFile("/text.md");
         test.setMimeType(MimeTypeUtil.MIMETYPE_TEXT_MARKDOWN);
         test.setStoragePath(file.getAbsolutePath());

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2144,6 +2144,7 @@ public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean au
             return; // not reachable under normal conditions
         }
         if (showPreview && file.isDown() && !file.isDownloading() || streamMedia) {
+            showSortListGroup(false);
             Fragment mediaFragment = PreviewMediaFragment.newInstance(file, user.get(), startPlaybackPosition, autoplay);
             setSecondFragment(mediaFragment);
             updateFragmentsVisibility(true);
@@ -2197,6 +2198,7 @@ public void startTextPreview(OCFile file, boolean showPreview) {
      * @param folder {@link OCFile} to preview its rich workspace.
      */
     public void startRichWorkspacePreview(OCFile folder) {
+        showSortListGroup(false);
         Bundle args = new Bundle();
         args.putParcelable(EXTRA_FILE, folder);
         Fragment textPreviewFragment = Fragment.instantiate(getApplicationContext(),

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -53,7 +53,7 @@
 import androidx.core.view.ViewCompat;
 
 /**
- * Base class providing toolbar registration functionality, see {@link #setupToolbar(boolean)}.
+ * Base class providing toolbar registration functionality, see {@link #setupToolbar(boolean, boolean)}.
  */
 public abstract class ToolbarActivity extends BaseActivity {
     protected MaterialButton mMenuButton;

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -9,7 +9,6 @@
 import android.content.Context;
 
 import com.facebook.testing.screenshot.Screenshot;
-import com.nextcloud.client.RetryTestRule;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.account.UserAccountManagerImpl;
@@ -35,7 +34,6 @@
 
 import org.apache.commons.io.FileUtils;
 import org.junit.BeforeClass;
-import org.junit.Rule;
 
 import java.io.File;
 import java.io.FileWriter;
@@ -61,7 +59,7 @@
  */
 
 public abstract class AbstractIT {
-    @Rule public RetryTestRule retryTestRule = new RetryTestRule();
+    //@Rule public RetryTestRule retryTestRule = new RetryTestRule();
 
     protected static OwnCloudClient client;
     protected static Account account;

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentResolverTest.java
Patch:
@@ -26,5 +26,7 @@ public class FileDataStorageManagerContentResolverTest extends FileDataStorageMa
     @Override
     public void before() {
         sut = new FileDataStorageManager(account, targetContext.getContentResolver());
+
+        super.before();
     }
 }

File: src/main/java/com/owncloud/android/operations/RemoveFileOperation.java
Patch:
@@ -106,7 +106,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                                                                    context,
                                                                    fileToRemove.getEncryptedFileName());
             } else {
-                operation = new RemoveFileRemoteOperation(fileToRemove.getDecryptedRemotePath());
+                operation = new RemoveFileRemoteOperation(fileToRemove.getRemotePath());
             }
             result = operation.execute(client);
             if (result.isSuccess() || result.getCode() == ResultCode.FILE_NOT_FOUND) {

File: src/androidTest/java/com/owncloud/android/AbstractOnServerIT.java
Patch:
@@ -44,7 +44,7 @@
 import androidx.annotation.NonNull;
 import androidx.test.platform.app.InstrumentationRegistry;
 
-import static junit.framework.TestCase.assertEquals;
+import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
 
@@ -115,7 +115,7 @@ public void after() {
         deleteAllFiles();
 
         OCFile root = fileDataStorageManager.getFileByDecryptedRemotePath("/");
-        assertEquals(0, fileDataStorageManager.getFolderContent(root, false).size());
+        assertEquals(1, fileDataStorageManager.getFolderContent(root, false).size());
     }
 
     public static void deleteAllFiles() {

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -9,7 +9,6 @@
 import android.content.Context;
 
 import com.facebook.testing.screenshot.Screenshot;
-import com.nextcloud.client.RetryTestRule;
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.account.UserAccountManagerImpl;
@@ -35,7 +34,6 @@
 
 import org.apache.commons.io.FileUtils;
 import org.junit.BeforeClass;
-import org.junit.Rule;
 
 import java.io.File;
 import java.io.FileWriter;
@@ -61,7 +59,7 @@
  */
 
 public abstract class AbstractIT {
-    @Rule public RetryTestRule retryTestRule = new RetryTestRule();
+    //@Rule public RetryTestRule retryTestRule = new RetryTestRule();
 
     protected static OwnCloudClient client;
     protected static Account account;

File: src/androidTest/java/com/owncloud/android/datamodel/FileDataStorageManagerContentResolverTest.java
Patch:
@@ -26,5 +26,7 @@ public class FileDataStorageManagerContentResolverTest extends FileDataStorageMa
     @Override
     public void before() {
         sut = new FileDataStorageManager(account, targetContext.getContentResolver());
+
+        super.before();
     }
 }

File: src/main/java/com/owncloud/android/operations/RemoveFileOperation.java
Patch:
@@ -106,7 +106,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                                                                    context,
                                                                    fileToRemove.getEncryptedFileName());
             } else {
-                operation = new RemoveFileRemoteOperation(fileToRemove.getDecryptedRemotePath());
+                operation = new RemoveFileRemoteOperation(fileToRemove.getRemotePath());
             }
             result = operation.execute(client);
             if (result.isSuccess() || result.getCode() == ResultCode.FILE_NOT_FOUND) {

File: src/androidTest/java/com/nextcloud/client/EndToEndRandomIT.java
Patch:
@@ -24,7 +24,7 @@
 
 import android.accounts.AccountManager;
 
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.OCUpload;
@@ -59,7 +59,7 @@
 import static junit.framework.TestCase.assertTrue;
 import static org.junit.Assume.assumeTrue;
 
-public class EndToEndRandomIT extends AbstractIT {
+public class EndToEndRandomIT extends AbstractOnServerIT {
     public enum Action {
         CREATE_FOLDER,
         GO_INTO_FOLDER,

File: src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -69,7 +69,7 @@ public void testSyncedFolderDialog() {
                                                                    false,
                                                                    false,
                                                                    true,
-                                                                   "test@server.com",
+                                                                   "test@https://server.com",
                                                                    0,
                                                                    0,
                                                                    true,

File: src/androidTest/java/com/nextcloud/client/account/OwnCloudClientManagerTest.java
Patch:
@@ -34,7 +34,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManager;
@@ -48,7 +48,7 @@
 
 import static org.junit.Assert.assertEquals;
 
-public class OwnCloudClientManagerTest extends AbstractIT {
+public class OwnCloudClientManagerTest extends AbstractOnServerIT {
 
     /**
      * Like on files app we create & store an account in Android's account manager.

File: src/androidTest/java/com/nextcloud/client/account/UserAccountManagerImplTest.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.client.preferences.AppPreferencesImpl;
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 
 import org.junit.Before;
@@ -17,7 +17,7 @@
 import static junit.framework.TestCase.assertTrue;
 import static org.junit.Assert.assertFalse;
 
-public class UserAccountManagerImplTest extends AbstractIT {
+public class UserAccountManagerImplTest extends AbstractOnServerIT {
 
     private AccountManager accountManager;
 

File: src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -18,7 +18,7 @@
  * Tests related to file operations
  */
 @RunWith(AndroidJUnit4.class)
-public class FileIT extends AbstractIT {
+public class FileIT extends AbstractOnServerIT {
 
     @Test
     public void testCreateFolder() {

File: src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -39,7 +39,7 @@
 
 @LargeTest
 @RunWith(JUnit4.class)
-public class ScreenshotsIT extends AbstractIT {
+public class ScreenshotsIT extends AbstractOnServerIT {
     @ClassRule
     public static final LocaleTestRule localeTestRule = new LocaleTestRule();
 

File: src/androidTest/java/com/nextcloud/client/SyncedFoldersActivityIT.java
Patch:
@@ -69,7 +69,7 @@ public void testSyncedFolderDialog() {
                                                                    false,
                                                                    false,
                                                                    true,
-                                                                   "test@server.com",
+                                                                   "test@https://server.com",
                                                                    0,
                                                                    0,
                                                                    true,

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -84,13 +84,13 @@ public static void beforeAll() {
                 platformAccountManager.removeAccountExplicitly(account);
             }
 
-            Account temp = new Account("test@server.com", MainApp.getAccountType(targetContext));
+            Account temp = new Account("test@https://server.com", MainApp.getAccountType(targetContext));
             platformAccountManager.addAccountExplicitly(temp, "password", null);
             platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "https://server.com");
             platformAccountManager.setUserData(temp, AccountUtils.Constants.KEY_USER_ID, "test");
 
             final UserAccountManager userAccountManager = UserAccountManagerImpl.fromContext(targetContext);
-            account = userAccountManager.getAccountByName("test@server.com");
+            account = userAccountManager.getAccountByName("test@https://server.com");
 
             if (account == null) {
                 throw new ActivityNotFoundException();

File: src/androidTest/java/com/owncloud/android/ui/activity/DrawerActivityIT.java
Patch:
@@ -87,7 +87,7 @@ public static void beforeClass() {
 
         account1 = userAccountManager.getAccountByName(loginName + "@" + baseUrl);
 
-        baseUrl = Uri.parse("server.com");
+        baseUrl = Uri.parse("https://server.com");
         loginName = "user2";
         password = "user2";
 

File: src/androidTest/java/com/owncloud/android/ui/dialog/DialogFragmentIT.java
Patch:
@@ -133,7 +133,7 @@ public void testAccountChooserDialog() throws AccountUtils.AccountNotFoundExcept
             accountManager.removeAccountExplicitly(account);
         }
 
-        Account newAccount = new Account("test@server.com", MainApp.getAccountType(targetContext));
+        Account newAccount = new Account("test@https://server.com", MainApp.getAccountType(targetContext));
         accountManager.addAccountExplicitly(newAccount, "password", null);
         accountManager.setUserData(newAccount, AccountUtils.Constants.KEY_OC_BASE_URL, "https://server.com");
         accountManager.setUserData(newAccount, AccountUtils.Constants.KEY_USER_ID, "test");

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -76,6 +76,7 @@ public abstract class AbstractIT {
     @BeforeClass
     public static void beforeAll() {
         try {
+            // clean up
             targetContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
             AccountManager platformAccountManager = AccountManager.get(targetContext);
 

File: src/androidTest/java/com/nextcloud/client/EndToEndRandomIT.java
Patch:
@@ -24,7 +24,7 @@
 
 import android.accounts.AccountManager;
 
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.OCUpload;
@@ -59,7 +59,7 @@
 import static junit.framework.TestCase.assertTrue;
 import static org.junit.Assume.assumeTrue;
 
-public class EndToEndRandomIT extends AbstractIT {
+public class EndToEndRandomIT extends AbstractOnServerIT {
     public enum Action {
         CREATE_FOLDER,
         GO_INTO_FOLDER,

File: src/androidTest/java/com/nextcloud/client/account/OwnCloudClientManagerTest.java
Patch:
@@ -34,7 +34,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManager;
@@ -48,7 +48,7 @@
 
 import static org.junit.Assert.assertEquals;
 
-public class OwnCloudClientManagerTest extends AbstractIT {
+public class OwnCloudClientManagerTest extends AbstractOnServerIT {
 
     /**
      * Like on files app we create & store an account in Android's account manager.

File: src/androidTest/java/com/nextcloud/client/account/UserAccountManagerImplTest.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.nextcloud.client.preferences.AppPreferences;
 import com.nextcloud.client.preferences.AppPreferencesImpl;
-import com.owncloud.android.AbstractIT;
+import com.owncloud.android.AbstractOnServerIT;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 
 import org.junit.Before;
@@ -17,7 +17,7 @@
 import static junit.framework.TestCase.assertTrue;
 import static org.junit.Assert.assertFalse;
 
-public class UserAccountManagerImplTest extends AbstractIT {
+public class UserAccountManagerImplTest extends AbstractOnServerIT {
 
     private AccountManager accountManager;
 

File: src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -18,7 +18,7 @@
  * Tests related to file operations
  */
 @RunWith(AndroidJUnit4.class)
-public class FileIT extends AbstractIT {
+public class FileIT extends AbstractOnServerIT {
 
     @Test
     public void testCreateFolder() {

File: src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -39,7 +39,7 @@
 
 @LargeTest
 @RunWith(JUnit4.class)
-public class ScreenshotsIT extends AbstractIT {
+public class ScreenshotsIT extends AbstractOnServerIT {
     @ClassRule
     public static final LocaleTestRule localeTestRule = new LocaleTestRule();
 

File: src/main/java/com/nextcloud/client/account/UserAccountManager.java
Patch:
@@ -80,6 +80,9 @@ public interface UserAccountManager extends CurrentAccountProvider {
     @NonNull
     Optional<User> getUser(CharSequence accountName);
 
+
+    User getAnonymousUser();
+
     /**
      * Check if Nextcloud account is registered in {@link android.accounts.AccountManager}
      *

File: src/main/java/com/nextcloud/client/account/UserAccountManager.java
Patch:
@@ -80,6 +80,9 @@ public interface UserAccountManager extends CurrentAccountProvider {
     @NonNull
     Optional<User> getUser(CharSequence accountName);
 
+
+    User getAnonymousUser();
+
     /**
      * Check if Nextcloud account is registered in {@link android.accounts.AccountManager}
      *

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1046,6 +1046,8 @@ public void onBackPressed() {
             }
             if (listOfFiles != null) {  // should never be null, indeed
                 setFile(listOfFiles.getCurrentFile());
+                listOfFiles.setFabVisible(true);
+                showSortListGroup(true);
             }
             cleanSecondFragment();
         }
@@ -2159,6 +2161,7 @@ public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean au
      */
     public void startTextPreview(OCFile file, boolean showPreview) {
         if (showPreview) {
+            showSortListGroup(false);
             Bundle args = new Bundle();
             args.putParcelable(EXTRA_FILE, file);
             args.putParcelable(EXTRA_ACCOUNT, getAccount());

File: src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -171,6 +171,7 @@ public interface ContainerActivity extends ComponentsGetter {
          */
         void onTransferStateChanged(OCFile file, boolean downloading, boolean uploading);
 
+        void showSortListGroup(boolean show);
     }
 
 }

File: src/androidTest/java/com/owncloud/android/AbstractOnServerIT.java
Patch:
@@ -208,7 +208,7 @@ public boolean isPowerSavingExclusionAvailable() {
             uploadsStorageManager,
             connectivityServiceMock,
             powerManagementServiceMock,
-            account,
+            user,
             null,
             ocUpload,
             FileUploader.NameCollisionPolicy.DEFAULT,

File: src/androidTest/java/com/nextcloud/client/FileDisplayActivityIT.java
Patch:
@@ -159,7 +159,7 @@ public void allFiles() {
         FileDisplayActivity sut = activityRule.launchActivity(null);
 
         // given test folder
-        assertTrue(new CreateFolderOperation("/test/", account, targetContext)
+        assertTrue(new CreateFolderOperation("/test/", user, targetContext)
                        .execute(client, getStorageManager())
                        .isSuccess());
 

File: src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -27,7 +27,7 @@ public void testCreateFolder() {
         // folder does not exist yet
         assertNull(getStorageManager().getFileByPath(path));
 
-        SyncOperation syncOp = new CreateFolderOperation(path, account, targetContext);
+        SyncOperation syncOp = new CreateFolderOperation(path, user, targetContext);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
 
         assertTrue(result.toString(), result.isSuccess());
@@ -46,7 +46,7 @@ public void testCreateNonExistingSubFolder() {
         // folder does not exist yet
         assertNull(getStorageManager().getFileByPath(path));
 
-        SyncOperation syncOp = new CreateFolderOperation(path, account, targetContext);
+        SyncOperation syncOp = new CreateFolderOperation(path, user, targetContext);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
         assertTrue(result.toString(), result.isSuccess());
 

File: src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -73,7 +73,7 @@ public void listViewScreenshot() {
 
         // folder does not exist yet
         if (getStorageManager().getFileByPath(path) == null) {
-            SyncOperation syncOp = new CreateFolderOperation(path, account, targetContext);
+            SyncOperation syncOp = new CreateFolderOperation(path, user, targetContext);
             RemoteOperationResult result = syncOp.execute(client, getStorageManager());
 
             assertTrue(result.isSuccess());

File: src/main/java/com/owncloud/android/ui/asynctasks/PhotoSearchTask.java
Patch:
@@ -97,7 +97,6 @@ protected RemoteOperationResult doInBackground(Void... voids) {
     @Override
     protected void onPostExecute(RemoteOperationResult result) {
         if (photoFragmentWeakReference.get() != null) {
-            Boolean loadingStatus = false;
             PhotoFragment photoFragment = photoFragmentWeakReference.get();
 
             if (result.isSuccess() && result.getData() != null && !isCancelled()) {

File: src/main/java/com/owncloud/android/ui/dialog/MultipleAccountsDialog.java
Patch:
@@ -71,8 +71,6 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             throw new IllegalArgumentException("Activity may not be null");
         }
 
-        int accentColor = ThemeUtils.primaryAccentColor(getContext());
-
         // Inflate the layout for the dialog
         LayoutInflater inflater = activity.getLayoutInflater();
         @SuppressLint("InflateParams") View view = inflater.inflate(R.layout.multiple_accounts, null);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1046,6 +1046,8 @@ public void onBackPressed() {
             }
             if (listOfFiles != null) {  // should never be null, indeed
                 setFile(listOfFiles.getCurrentFile());
+                listOfFiles.setFabVisible(true);
+                showSortListGroup(true);
             }
             cleanSecondFragment();
         }
@@ -2159,6 +2161,7 @@ public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean au
      */
     public void startTextPreview(OCFile file, boolean showPreview) {
         if (showPreview) {
+            showSortListGroup(false);
             Bundle args = new Bundle();
             args.putParcelable(EXTRA_FILE, file);
             args.putParcelable(EXTRA_ACCOUNT, getAccount());

File: src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -171,6 +171,7 @@ public interface ContainerActivity extends ComponentsGetter {
          */
         void onTransferStateChanged(OCFile file, boolean downloading, boolean uploading);
 
+        void showSortListGroup(boolean show);
     }
 
 }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListBottomSheetDialog.java
Patch:
@@ -156,7 +156,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
                     thumbnail.setImageDrawable(MimeTypeUtil.getFileTypeIcon(creator.getMimetype(),
                                                                             creator.getExtension(),
-                                                                            user.toPlatformAccount(),
+                                                                            user,
                                                                             getContext()));
 
                     creatorView.setOnClickListener(v -> {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListBottomSheetDialog.java
Patch:
@@ -156,7 +156,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
                     thumbnail.setImageDrawable(MimeTypeUtil.getFileTypeIcon(creator.getMimetype(),
                                                                             creator.getExtension(),
-                                                                            user.toPlatformAccount(),
+                                                                            user,
                                                                             getContext()));
 
                     creatorView.setOnClickListener(v -> {

File: src/main/java/com/owncloud/android/ui/adapter/TemplateAdapter.java
Patch:
@@ -119,7 +119,7 @@ public void setData(Template template) {
 
             Drawable placeholder = MimeTypeUtil.getFileTypeIcon(mimetype,
                                                                 template.getTitle(),
-                                                                currentAccountProvider.getUser().toPlatformAccount(),
+                                                                currentAccountProvider.getUser(),
                                                                 context);
 
             Glide.with(context).using(new CustomGlideStreamLoader(currentAccountProvider, clientFactory))

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -257,7 +257,7 @@ private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
                 }
             } else {
                 thumbnailView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(), file.getFileName(),
-                                                                            user.toPlatformAccount(), context));
+                                                                            user, context));
             }
         }
     }

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -656,7 +656,7 @@ private static void setThumbnail(OCFile file,
                                 thumbnail = BitmapUtils.drawableToBitmap(
                                     MimeTypeUtil.getFileTypeIcon(file.getMimeType(),
                                                                  file.getFileName(),
-                                                                 user.toPlatformAccount(),
+                                                                 user,
                                                                  context));
                             }
                             final ThumbnailsCacheManager.AsyncThumbnailDrawable asyncDrawable =
@@ -698,7 +698,7 @@ public void onError() {
             } else {
                 thumbnailView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(),
                                                                             file.getFileName(),
-                                                                            user.toPlatformAccount(),
+                                                                            user,
                                                                             context));
             }
         }

File: src/main/java/com/owncloud/android/ui/adapter/TemplateAdapter.java
Patch:
@@ -119,7 +119,7 @@ public void setData(Template template) {
 
             Drawable placeholder = MimeTypeUtil.getFileTypeIcon(mimetype,
                                                                 template.getTitle(),
-                                                                currentAccountProvider.getUser().toPlatformAccount(),
+                                                                currentAccountProvider.getUser(),
                                                                 context);
 
             Glide.with(context).using(new CustomGlideStreamLoader(currentAccountProvider, clientFactory))

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -257,7 +257,7 @@ private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
                 }
             } else {
                 thumbnailView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimeType(), file.getFileName(),
-                                                                            user.toPlatformAccount(), context));
+                                                                            user, context));
             }
         }
     }

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -58,6 +58,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import dagger.android.AndroidInjection;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 
 /**
@@ -80,6 +81,7 @@ public class UsersAndGroupsSearchProvider extends ContentProvider {
     private static final int RESULTS_PER_PAGE = 50;
     private static final int REQUESTED_PAGE = 1;
 
+    @SuppressFBWarnings("MS_CANNOT_BE_FINAL")
     public static String ACTION_SHARE_WITH;
 
     public static final String CONTENT = "content";

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -58,6 +58,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import dagger.android.AndroidInjection;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 
 /**
@@ -80,6 +81,7 @@ public class UsersAndGroupsSearchProvider extends ContentProvider {
     private static final int RESULTS_PER_PAGE = 50;
     private static final int REQUESTED_PAGE = 1;
 
+    @SuppressFBWarnings("MS_CANNOT_BE_FINAL")
     public static String ACTION_SHARE_WITH;
 
     public static final String CONTENT = "content";

File: src/main/java/com/owncloud/android/ui/dialog/parcel/SyncedFolderParcelable.java
Patch:
@@ -148,6 +148,9 @@ public void setUploadAction(String uploadAction) {
             case "LOCAL_BEHAVIOUR_DELETE":
                 this.uploadAction = FileUploader.LOCAL_BEHAVIOUR_DELETE;
                 break;
+            default:
+                // do nothing
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -78,7 +78,7 @@
 import butterknife.ButterKnife;
 
 /**
- * This Adapter populates a ListView with following types of uploads: pending,active, completed. Filtering possible.
+ * This Adapter populates a ListView with following types of uploads: pending, active, completed. Filtering possible.
  */
 public class UploadListAdapter extends SectionedRecyclerViewAdapter<SectionedViewHolder> {
     private static final String TAG = UploadListAdapter.class.getSimpleName();

File: src/main/java/com/owncloud/android/ui/dialog/parcel/SyncedFolderParcelable.java
Patch:
@@ -148,6 +148,9 @@ public void setUploadAction(String uploadAction) {
             case "LOCAL_BEHAVIOUR_DELETE":
                 this.uploadAction = FileUploader.LOCAL_BEHAVIOUR_DELETE;
                 break;
+            default:
+                // do nothing
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -444,6 +444,7 @@ public boolean optionsItemSelected(MenuItem item, OCShare publicShare) {
                 return true;
             case R.id.action_unshare:
                 fileOperationsHelper.unshareShare(file, publicShare);
+                return true;
             default:
                 return super.onOptionsItemSelected(item);
         }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1299,7 +1299,7 @@ private void updateLayout() {
         }
 
         // FAB
-        setFabEnabled(mFile.canWrite());
+        setFabEnabled(mFile != null && mFile.canWrite());
 
         invalidateActionMode();
     }
@@ -1319,10 +1319,10 @@ public void sortFiles(FileSortOrder sortOrder) {
      * Determines if user set folder to grid or list view. If folder is not set itself,
      * it finds a parent that is set (at least root is set).
      *
-     * @param folder Folder to check.
+     * @param folder Folder to check or null for root folder
      * @return 'true' is folder should be shown in grid mode, 'false' if list mode is preferred.
      */
-    public boolean isGridViewPreferred(OCFile folder) {
+    public boolean isGridViewPreferred(@Nullable OCFile folder) {
         return FOLDER_LAYOUT_GRID.equals(preferences.getFolderLayout(folder));
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1300,7 +1300,7 @@ private void updateLayout() {
         }
 
         // FAB
-        setFabEnabled(mFile.canWrite());
+        setFabEnabled(mFile != null && mFile.canWrite());
 
         invalidateActionMode();
     }
@@ -1330,10 +1330,10 @@ private void setGridSwitchButton() {
      * Determines if user set folder to grid or list view. If folder is not set itself,
      * it finds a parent that is set (at least root is set).
      *
-     * @param folder Folder to check.
+     * @param folder Folder to check or null for root folder
      * @return 'true' is folder should be shown in grid mode, 'false' if list mode is preferred.
      */
-    public boolean isGridViewPreferred(OCFile folder) {
+    public boolean isGridViewPreferred(@Nullable OCFile folder) {
         return FOLDER_LAYOUT_GRID.equals(preferences.getFolderLayout(folder));
     }
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1603,7 +1603,7 @@ public void saveSharesInFolder(ArrayList<OCShare> shares, OCFile folder) {
      * @return
      */
     private ArrayList<ContentProviderOperation> prepareInsertShares(
-        List<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
+        Iterable<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
 
         ContentValues contentValues;
         // prepare operations to insert or update files to save in the given folder

File: src/main/java/com/owncloud/android/datastorage/providers/AbstractStoragePointProvider.java
Patch:
@@ -24,14 +24,13 @@
 import com.owncloud.android.datastorage.StoragePoint;
 
 import java.io.File;
-import java.util.List;
 
 /**
  * @author Bartosz Przybylski
  */
 abstract class AbstractStoragePointProvider implements IStoragePointProvider {
 
-    boolean canBeAddedToAvailableList(List<StoragePoint> currentList, String path) {
+    boolean canBeAddedToAvailableList(Iterable<StoragePoint> currentList, String path) {
         if (path == null) {
             return false;
         }

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -226,7 +226,7 @@ private void filterShareFile(List<Integer> toShow, List<Integer> toHide, OCCapab
         }
     }
 
-    private void filterDetails(List<Integer> toShow, List<Integer> toHide) {
+    private void filterDetails(Collection<Integer> toShow, Collection<Integer> toHide) {
         if (isSingleSelection()) {
             toShow.add(R.id.action_see_details);
         } else {
@@ -353,7 +353,7 @@ private void filterCancelSync(List<Integer> toShow, List<Integer> toHide, boolea
         }
     }
 
-    private void filterOpenWith(List<Integer> toShow, List<Integer> toHide, boolean synchronizing) {
+    private void filterOpenWith(Collection<Integer> toShow, Collection<Integer> toHide, boolean synchronizing) {
         if (!isSingleFile() || !anyFileDown() || synchronizing) {
             toHide.add(R.id.action_open_file_with);
         } else {
@@ -407,7 +407,7 @@ private void filterMoveCopy(List<Integer> toShow, List<Integer> toHide, boolean
         }
     }
 
-    private void filterRename(List<Integer> toShow, List<Integer> toHide, boolean synchronizing) {
+    private void filterRename(Collection<Integer> toShow, Collection<Integer> toHide, boolean synchronizing) {
         if (!isSingleSelection() || synchronizing || containsEncryptedFile() || containsEncryptedFolder()) {
             toHide.add(R.id.action_rename_file);
         } else {

File: src/main/java/com/owncloud/android/ui/adapter/X509CertificateViewAdapter.java
Patch:
@@ -29,6 +29,7 @@
 
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.security.Principal;
 import java.security.cert.CertificateEncodingException;
 import java.security.cert.X509Certificate;
 import java.text.DateFormat;
@@ -214,7 +215,7 @@ private void showIssuer(X500Principal issuer, @NonNull SslUntrustedCertLayoutBin
     }
 
 
-    private Map<String, String> parsePrincipal(X500Principal principal) {
+    private Map<String, String> parsePrincipal(Principal principal) {
         Map<String, String> result = new HashMap<>();
         String toParse = principal.getName();
         String[] pieces = toParse.split(",");

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -189,7 +189,9 @@ public static String getInstantUploadFilePath(File file,
 
     public static String getParentPath(String remotePath) {
         String parentPath = new File(remotePath).getParent();
-        parentPath = parentPath.endsWith(OCFile.PATH_SEPARATOR) ? parentPath : parentPath + OCFile.PATH_SEPARATOR;
+        if (parentPath != null) {
+            parentPath = parentPath.endsWith(OCFile.PATH_SEPARATOR) ? parentPath : parentPath + OCFile.PATH_SEPARATOR;
+        }
         return parentPath;
     }
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1603,7 +1603,7 @@ public void saveSharesInFolder(ArrayList<OCShare> shares, OCFile folder) {
      * @return
      */
     private ArrayList<ContentProviderOperation> prepareInsertShares(
-        List<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
+        Iterable<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
 
         ContentValues contentValues;
         // prepare operations to insert or update files to save in the given folder

File: src/main/java/com/owncloud/android/datastorage/providers/AbstractStoragePointProvider.java
Patch:
@@ -24,14 +24,13 @@
 import com.owncloud.android.datastorage.StoragePoint;
 
 import java.io.File;
-import java.util.List;
 
 /**
  * @author Bartosz Przybylski
  */
 abstract class AbstractStoragePointProvider implements IStoragePointProvider {
 
-    boolean canBeAddedToAvailableList(List<StoragePoint> currentList, String path) {
+    boolean canBeAddedToAvailableList(Iterable<StoragePoint> currentList, String path) {
         if (path == null) {
             return false;
         }

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -226,7 +226,7 @@ private void filterShareFile(List<Integer> toShow, List<Integer> toHide, OCCapab
         }
     }
 
-    private void filterDetails(List<Integer> toShow, List<Integer> toHide) {
+    private void filterDetails(Collection<Integer> toShow, Collection<Integer> toHide) {
         if (isSingleSelection()) {
             toShow.add(R.id.action_see_details);
         } else {
@@ -353,7 +353,7 @@ private void filterCancelSync(List<Integer> toShow, List<Integer> toHide, boolea
         }
     }
 
-    private void filterOpenWith(List<Integer> toShow, List<Integer> toHide, boolean synchronizing) {
+    private void filterOpenWith(Collection<Integer> toShow, Collection<Integer> toHide, boolean synchronizing) {
         if (!isSingleFile() || !anyFileDown() || synchronizing) {
             toHide.add(R.id.action_open_file_with);
         } else {
@@ -407,7 +407,7 @@ private void filterMoveCopy(List<Integer> toShow, List<Integer> toHide, boolean
         }
     }
 
-    private void filterRename(List<Integer> toShow, List<Integer> toHide, boolean synchronizing) {
+    private void filterRename(Collection<Integer> toShow, Collection<Integer> toHide, boolean synchronizing) {
         if (!isSingleSelection() || synchronizing || containsEncryptedFile() || containsEncryptedFolder()) {
             toHide.add(R.id.action_rename_file);
         } else {

File: src/main/java/com/owncloud/android/ui/adapter/X509CertificateViewAdapter.java
Patch:
@@ -29,6 +29,7 @@
 
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.security.Principal;
 import java.security.cert.CertificateEncodingException;
 import java.security.cert.X509Certificate;
 import java.text.DateFormat;
@@ -214,7 +215,7 @@ private void showIssuer(X500Principal issuer, @NonNull SslUntrustedCertLayoutBin
     }
 
 
-    private Map<String, String> parsePrincipal(X500Principal principal) {
+    private Map<String, String> parsePrincipal(Principal principal) {
         Map<String, String> result = new HashMap<>();
         String toParse = principal.getName();
         String[] pieces = toParse.split(",");

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -43,7 +43,6 @@
 import android.widget.Filter;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
@@ -1298,7 +1297,7 @@ static class OCFileListGridImageViewHolder extends RecyclerView.ViewHolder {
         public ImageView checkbox;
 
         @BindView(R.id.ListItemLayout)
-        public LinearLayout itemLayout;
+        public View itemLayout;
 
         @BindView(R.id.unreadComments)
         public ImageView unreadComments;

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -173,9 +173,9 @@ public void showFiles(boolean onDeviceOnly) {
         // must be specialized in subclasses
         MainApp.showOnlyFilesOnDevice(onDeviceOnly);
         if (onDeviceOnly) {
-            setupToolbar();
+            setupHomeSearchToolbar(true);
         } else {
-            setupHomeSearchToolbar();
+            setupHomeSearchToolbar(true);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -68,7 +68,7 @@ public class LocalFileListFragment extends ExtendedListFragment implements
     private LocalFileListAdapter mAdapter;
 
     @Override
-    public void onAttach(Context context) {
+    public void onAttach(@NonNull Context context) {
         super.onAttach(context);
     }
 
@@ -109,7 +109,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         }
 
         setSwipeEnabled(false); // Disable pull-to-refresh
-        setFabVisible(false); // Disable FAB
 
         Log_OC.i(TAG, "onCreateView() end");
         return v;

File: src/main/java/com/nextcloud/java/util/Optional.java
Patch:
@@ -31,6 +31,7 @@
 import androidx.core.util.Consumer;
 import androidx.core.util.ObjectsCompat;
 import androidx.core.util.Supplier;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import kotlin.jvm.functions.Function1;
 
 /**
@@ -84,6 +85,7 @@ private Optional() {
      */
     public static<T> Optional<T> empty() {
         @SuppressWarnings("unchecked")
+        @SuppressFBWarnings("USBR_UNNECESSARY_STORE_BEFORE_RETURN")
         Optional<T> t = (Optional<T>) EMPTY;
         return t;
     }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -623,8 +623,7 @@ public int[] getCheckedIntArray() {
             }
             return intArray;
         } else {
-            intArray = new int[0];
-            return intArray;
+            return new int[0];
         }
     }
 

File: src/main/java/com/nextcloud/java/util/Optional.java
Patch:
@@ -31,6 +31,7 @@
 import androidx.core.util.Consumer;
 import androidx.core.util.ObjectsCompat;
 import androidx.core.util.Supplier;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import kotlin.jvm.functions.Function1;
 
 /**
@@ -84,6 +85,7 @@ private Optional() {
      */
     public static<T> Optional<T> empty() {
         @SuppressWarnings("unchecked")
+        @SuppressFBWarnings("USBR_UNNECESSARY_STORE_BEFORE_RETURN")
         Optional<T> t = (Optional<T>) EMPTY;
         return t;
     }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -623,8 +623,7 @@ public int[] getCheckedIntArray() {
             }
             return intArray;
         } else {
-            intArray = new int[0];
-            return intArray;
+            return new int[0];
         }
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/ActivityAndVersionListAdapter.java
Patch:
@@ -169,8 +169,6 @@ public int getItemViewType(int position) {
     }
 
     protected class VersionViewHolder extends RecyclerView.ViewHolder {
-        @BindView(R.id.thumbnail)
-        public ImageView thumbnail;
         @BindView(R.id.size)
         public TextView size;
         @BindView(R.id.time)

File: src/main/java/com/owncloud/android/ui/adapter/ActivityAndVersionListAdapter.java
Patch:
@@ -169,8 +169,6 @@ public int getItemViewType(int position) {
     }
 
     protected class VersionViewHolder extends RecyclerView.ViewHolder {
-        @BindView(R.id.thumbnail)
-        public ImageView thumbnail;
         @BindView(R.id.size)
         public TextView size;
         @BindView(R.id.time)

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -203,8 +203,8 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
             int nightModeFlag = context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK;
 
-            if (!activity.getType().equalsIgnoreCase("file_created") &&
-                !activity.getType().equalsIgnoreCase("file_deleted")) {
+            if (!"file_created".equalsIgnoreCase(activity.getType()) &&
+                !"file_deleted".equalsIgnoreCase(activity.getType())) {
                 if (Configuration.UI_MODE_NIGHT_YES == nightModeFlag) {
                     activityViewHolder.activityIcon.setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_IN);
                 } else {
@@ -213,7 +213,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
 
-
             if (activity.getRichSubjectElement() != null &&
                 activity.getRichSubjectElement().getRichObjectList().size() > 0) {
                 activityViewHolder.list.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -299,11 +299,9 @@ private void setUsername(User user) {
      * Account ViewHolderItem to get smooth scrolling.
      */
     static class AddAccountViewHolderItem extends RecyclerView.ViewHolder {
-        AccountActionBinding binding;
 
         AddAccountViewHolderItem(@NonNull AccountActionBinding binding) {
             super(binding.getRoot());
-            this.binding = binding;
         }
 
         /**

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -203,8 +203,8 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
 
             int nightModeFlag = context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK;
 
-            if (!activity.getType().equalsIgnoreCase("file_created") &&
-                !activity.getType().equalsIgnoreCase("file_deleted")) {
+            if (!"file_created".equalsIgnoreCase(activity.getType()) &&
+                !"file_deleted".equalsIgnoreCase(activity.getType())) {
                 if (Configuration.UI_MODE_NIGHT_YES == nightModeFlag) {
                     activityViewHolder.activityIcon.setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_IN);
                 } else {
@@ -213,7 +213,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             }
 
 
-
             if (activity.getRichSubjectElement() != null &&
                 activity.getRichSubjectElement().getRichObjectList().size() > 0) {
                 activityViewHolder.list.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -294,7 +294,7 @@ protected void onPostCreate(Bundle savedInstanceState) {
                 Snackbar snackbar = Snackbar.make(binding.ListLayout,
                                                   R.string.permission_storage_access,
                         Snackbar.LENGTH_INDEFINITE)
-                        .setAction(R.string.common_ok, v -> PermissionUtil.requestWriteExternalStoreagePermission(FileDisplayActivity.this));
+                        .setAction(R.string.common_ok, v -> PermissionUtil.requestWriteExternalStoreagePermission(this));
                 ThemeUtils.colorSnackbar(this, snackbar);
                 snackbar.show();
             } else {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -30,10 +30,8 @@
 import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
-import android.graphics.LinearGradient;
 import android.graphics.Point;
 import android.graphics.PorterDuff;
-import android.graphics.Shader;
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.Looper;
@@ -99,6 +97,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.core.content.res.ResourcesCompat;
 import androidx.core.graphics.drawable.RoundedBitmapDrawable;
 import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;
 import androidx.recyclerview.widget.RecyclerView;
@@ -583,7 +582,7 @@ private void showFederatedShareAvatar(String user, float avatarRadius, Resources
             placeholder = TextDrawable.createAvatarByUserId(userId, avatarRadius);
         } catch (Exception e) {
             Log_OC.e(TAG, "Error calculating RGB value for active account icon.", e);
-            placeholder = resources.getDrawable(R.drawable.account_circle_white);
+            placeholder = ResourcesCompat.getDrawable(resources, R.drawable.account_circle_white, null);
         }
 
         avatar.setTag(null);

File: src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -66,6 +66,9 @@ public class SyncedFolderAdapter extends SectionedRecyclerViewAdapter<SectionedV
     private final List<SyncedFolderDisplayItem> filteredSyncFolderItems;
     private final boolean light;
     private final int VIEW_TYPE_EMPTY = Integer.MAX_VALUE;
+    private final int VIEW_TYPE_ITEM = 1;
+    private final int VIEW_TYPE_HEADER = 2;
+    private final int VIEW_TYPE_FOOTER = 3;
     private boolean hideItems;
 
     public SyncedFolderAdapter(Context context, Clock clock, int gridWidth, ClickListener listener, boolean light) {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -87,6 +87,7 @@
 import androidx.annotation.DrawableRes;
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
+import androidx.core.content.res.ResourcesCompat;
 import androidx.fragment.app.FragmentStatePagerAdapter;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import pl.droidsonroids.gif.GifDrawable;
@@ -811,9 +812,9 @@ && getActivity() instanceof PreviewImageActivity) {
                 Drawable layerOne;
 
                 if (previewImageActivity.isSystemUIVisible()) {
-                    layerOne = getResources().getDrawable(R.color.bg_default);
+                    layerOne = ResourcesCompat.getDrawable(getResources(), R.color.bg_default, null);
                 } else {
-                    layerOne = getResources().getDrawable(R.drawable.backrepeat);
+                    layerOne = ResourcesCompat.getDrawable(getResources(), R.drawable.backrepeat, null);
                 }
 
                 layerDrawable.setDrawableByLayerId(layerDrawable.getId(0), layerOne);

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -347,7 +347,7 @@ public static void tintBackButton(@Nullable ActionBar supportActionBar, Context
             return;
         }
 
-        Drawable backArrow = context.getResources().getDrawable(R.drawable.ic_arrow_back);
+        Drawable backArrow = ResourcesCompat.getDrawable(context.getResources(), R.drawable.ic_arrow_back, null);
         supportActionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, color));
     }
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -366,7 +366,7 @@ private void onNavigationItemClicked(final MenuItem menuItem) {
                 startActivity(SyncedFoldersActivity.class);
                 break;
             case R.id.nav_contacts:
-                startActivity(ContactsPreferenceActivity.class);
+                ContactsPreferenceActivity.startActivity(this);
                 break;
             case R.id.nav_settings:
                 startActivity(SettingsActivity.class);

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -459,9 +459,7 @@ private void setupContactsBackupPreference(PreferenceCategory preferenceCategory
         if (pContactsBackup != null) {
             if (contactsBackupEnabled) {
                 pContactsBackup.setOnPreferenceClickListener(preference -> {
-                    Intent contactsIntent = new Intent(getApplicationContext(), ContactsPreferenceActivity.class);
-                    contactsIntent.putExtra(ContactsPreferenceActivity.EXTRA_SHOW_SIDEBAR, false);
-                    startActivity(contactsIntent);
+                    ContactsPreferenceActivity.startActivityWithoutSidebar(this);
                     return true;
                 });
             } else {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -437,6 +437,7 @@ public void openAddAccount() {
 
     private void startPhotoSearch(MenuItem menuItem) {
         SearchEvent searchEvent = new SearchEvent("image/%", SearchRemoteOperation.SearchType.PHOTO_SEARCH);
+        MainApp.showOnlyFilesOnDevice(false);
 
         Intent intent = new Intent(getApplicationContext(), FileDisplayActivity.class);
         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -218,6 +218,7 @@ public class FileDisplayActivity extends FileActivity
     private SearchView searchView;
     private PlayerServiceConnection mPlayerConnection;
     private Account mLastDisplayedAccount;
+    private int menuItemId = -1;
 
     @Inject
     AppPreferences preferences;
@@ -1185,7 +1186,7 @@ protected void onResume() {
         registerReceiver(mDownloadFinishReceiver, downloadIntentFilter);
 
         // setup drawer
-        int menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, -1);
+        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItemId);
 
         if (menuItemId == -1) {
             if (MainApp.isOnlyOnDevice()) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -218,6 +218,7 @@ public class FileDisplayActivity extends FileActivity
     private SearchView searchView;
     private PlayerServiceConnection mPlayerConnection;
     private Account mLastDisplayedAccount;
+    private int menuItemId = -1;
 
     @Inject
     AppPreferences preferences;
@@ -1185,7 +1186,7 @@ protected void onResume() {
         registerReceiver(mDownloadFinishReceiver, downloadIntentFilter);
 
         // setup drawer
-        int menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, -1);
+        menuItemId = getIntent().getIntExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItemId);
 
         if (menuItemId == -1) {
             if (MainApp.isOnlyOnDevice()) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -368,7 +368,7 @@ private void onNavigationItemClicked(final MenuItem menuItem) {
                 startActivity(SyncedFoldersActivity.class);
                 break;
             case R.id.nav_contacts:
-                startActivity(ContactsPreferenceActivity.class);
+                ContactsPreferenceActivity.startActivity(this);
                 break;
             case R.id.nav_settings:
                 startActivity(SettingsActivity.class);

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -459,9 +459,7 @@ private void setupContactsBackupPreference(PreferenceCategory preferenceCategory
         if (pContactsBackup != null) {
             if (contactsBackupEnabled) {
                 pContactsBackup.setOnPreferenceClickListener(preference -> {
-                    Intent contactsIntent = new Intent(getApplicationContext(), ContactsPreferenceActivity.class);
-                    contactsIntent.putExtra(ContactsPreferenceActivity.EXTRA_SHOW_SIDEBAR, false);
-                    startActivity(contactsIntent);
+                    ContactsPreferenceActivity.startActivityWithoutSidebar(this);
                     return true;
                 });
             } else {

File: src/test/java/com/owncloud/android/ui/adapter/UserListAdapterTest.java
Patch:
@@ -62,7 +62,6 @@ public void test_getItemCountEmptyList() {
                                               null,
                                               new ArrayList<>(),
                                               null,
-                                              null,
                                               true,
                                               true);
         assertEquals(0, userListAdapter.getItemCount());
@@ -81,7 +80,6 @@ public void test_getItemCountNormalCase() {
                                               null,
                                               accounts,
                                               null,
-                                              null,
                                               true,
                                               true);
 
@@ -102,7 +100,6 @@ public void test_getItem() {
                                               null,
                                               accounts,
                                               null,
-                                              null,
                                               true,
                                               true);
 

File: src/test/java/com/owncloud/android/ui/adapter/UserListAdapterTest.java
Patch:
@@ -62,7 +62,6 @@ public void test_getItemCountEmptyList() {
                                               null,
                                               new ArrayList<>(),
                                               null,
-                                              null,
                                               true,
                                               true);
         assertEquals(0, userListAdapter.getItemCount());
@@ -81,7 +80,6 @@ public void test_getItemCountNormalCase() {
                                               null,
                                               accounts,
                                               null,
-                                              null,
                                               true,
                                               true);
 
@@ -102,7 +100,6 @@ public void test_getItem() {
                                               null,
                                               accounts,
                                               null,
-                                              null,
                                               true,
                                               true);
 

File: src/main/java/com/nextcloud/client/network/ClientFactoryImpl.java
Patch:
@@ -31,6 +31,7 @@
 import com.nextcloud.common.NextcloudClient;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientFactory;
+import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 
 import java.io.IOException;
@@ -46,11 +47,10 @@ class ClientFactoryImpl implements ClientFactory {
     @Override
     public OwnCloudClient create(User user) throws CreationException {
         try {
-            return OwnCloudClientFactory.createOwnCloudClient(user.toPlatformAccount(), context);
+            return OwnCloudClientManagerFactory.getDefaultSingleton().getClientFor(user.toOwnCloudAccount(), context);
         } catch (OperationCanceledException|
                  AuthenticatorException|
-                 IOException|
-                 AccountUtils.AccountNotFoundException e) {
+            IOException e) {
             throw new CreationException(e);
         }
     }

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -428,7 +428,7 @@ public void onClick(View v) {
             ArrayList<Parcelable> targetFiles = i.getParcelableArrayListExtra(FolderPickerActivity.EXTRA_FILES);
 
             Intent data = new Intent();
-            data.putExtra(EXTRA_FOLDER, getCurrentFolder());
+            data.putExtra(EXTRA_FOLDER, getListOfFilesFragment().getCurrentFile());
             data.putParcelableArrayListExtra(EXTRA_FILES, targetFiles);
             setResult(RESULT_OK, data);
 

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -428,7 +428,7 @@ public void onClick(View v) {
             ArrayList<Parcelable> targetFiles = i.getParcelableArrayListExtra(FolderPickerActivity.EXTRA_FILES);
 
             Intent data = new Intent();
-            data.putExtra(EXTRA_FOLDER, getCurrentFolder());
+            data.putExtra(EXTRA_FOLDER, getListOfFilesFragment().getCurrentFile());
             data.putParcelableArrayListExtra(EXTRA_FILES, targetFiles);
             setResult(RESULT_OK, data);
 

File: src/main/java/com/nextcloud/client/network/ClientFactoryImpl.java
Patch:
@@ -31,6 +31,7 @@
 import com.nextcloud.common.NextcloudClient;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientFactory;
+import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 
 import java.io.IOException;
@@ -46,11 +47,10 @@ class ClientFactoryImpl implements ClientFactory {
     @Override
     public OwnCloudClient create(User user) throws CreationException {
         try {
-            return OwnCloudClientFactory.createOwnCloudClient(user.toPlatformAccount(), context);
+            return OwnCloudClientManagerFactory.getDefaultSingleton().getClientFor(user.toOwnCloudAccount(), context);
         } catch (OperationCanceledException|
                  AuthenticatorException|
-                 IOException|
-                 AccountUtils.AccountNotFoundException e) {
+            IOException e) {
             throw new CreationException(e);
         }
     }

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 56;
+    public static final int DB_VERSION = 57;
 
     private ProviderMeta() {
         // No instance

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -226,7 +226,7 @@ protected final void hideInfoBox() {
         mInfoBox.setVisibility(View.GONE);
     }
 
-    private void setPreviewImageVisibility(boolean isVisibility) {
+    public void setPreviewImageVisibility(boolean isVisibility) {
         if (mPreviewImage != null && mPreviewImageContainer != null) {
             if (isVisibility) {
                 mToolbar.setTitle(null);

File: src/main/java/com/owncloud/android/ui/dialog/SortingOrderDialogFragment.java
Patch:
@@ -130,7 +130,7 @@ private void setupDialogElements(View view) {
      * tints the icon reflecting the actual sorting choice in the apps primary color.
      */
     private void setupActiveOrderSelection() {
-        final int color = ThemeUtils.primaryAccentColor(getContext());
+        final int color = ThemeUtils.elementColor(getContext());
         for (View view: mTaggedViews) {
             if (!((FileSortOrder) view.getTag()).name.equals(mCurrentSortOrderName)) {
                 continue;

File: src/androidTest/java/com/nextcloud/client/FileDisplayActivityIT.java
Patch:
@@ -151,8 +151,7 @@ public void showShares() {
     public void showAccounts() {
         Activity sut = activityRule.launchActivity(null);
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
-        onView(withId(R.id.drawer_active_user)).perform(click());
+        onView(withId(R.id.switch_account_button)).perform(click());
 
         Screenshot.snapActivity(sut).record();
     }

File: src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -29,6 +29,7 @@
 
 import static androidx.test.espresso.Espresso.onData;
 import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.Espresso.pressBack;
 import static androidx.test.espresso.action.ViewActions.click;
 import static androidx.test.espresso.action.ViewActions.swipeUp;
 import static androidx.test.espresso.matcher.ViewMatchers.withId;
@@ -105,12 +106,11 @@ public void drawerScreenshot() {
     public void multipleAccountsScreenshot() {
         ActivityScenario.launch(FileDisplayActivity.class);
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
-        onView(withId(R.id.drawer_active_user)).perform(click());
+        onView(withId(R.id.switch_account_button)).perform(click());
 
         Screengrab.screenshot("04_accounts");
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.close());
+        pressBack();
 
         Assert.assertTrue(true); // if we reach this, everything is ok
     }

File: src/main/java/com/owncloud/android/ui/dialog/SortingOrderDialogFragment.java
Patch:
@@ -130,7 +130,7 @@ private void setupDialogElements(View view) {
      * tints the icon reflecting the actual sorting choice in the apps primary color.
      */
     private void setupActiveOrderSelection() {
-        final int color = ThemeUtils.primaryAccentColor(getContext());
+        final int color = ThemeUtils.elementColor(getContext());
         for (View view: mTaggedViews) {
             if (!((FileSortOrder) view.getTag()).name.equals(mCurrentSortOrderName)) {
                 continue;

File: src/androidTest/java/com/nextcloud/client/FileDisplayActivityIT.java
Patch:
@@ -151,8 +151,7 @@ public void showShares() {
     public void showAccounts() {
         Activity sut = activityRule.launchActivity(null);
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
-        onView(withId(R.id.drawer_active_user)).perform(click());
+        onView(withId(R.id.switch_account_button)).perform(click());
 
         Screenshot.snapActivity(sut).record();
     }

File: src/androidTest/java/com/owncloud/android/ScreenshotsIT.java
Patch:
@@ -29,6 +29,7 @@
 
 import static androidx.test.espresso.Espresso.onData;
 import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.Espresso.pressBack;
 import static androidx.test.espresso.action.ViewActions.click;
 import static androidx.test.espresso.action.ViewActions.swipeUp;
 import static androidx.test.espresso.matcher.ViewMatchers.withId;
@@ -105,12 +106,11 @@ public void drawerScreenshot() {
     public void multipleAccountsScreenshot() {
         ActivityScenario.launch(FileDisplayActivity.class);
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
-        onView(withId(R.id.drawer_active_user)).perform(click());
+        onView(withId(R.id.switch_account_button)).perform(click());
 
         Screengrab.screenshot("04_accounts");
 
-        onView(withId(R.id.drawer_layout)).perform(DrawerActions.close());
+        pressBack();
 
         Assert.assertTrue(true); // if we reach this, everything is ok
     }

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -300,7 +300,7 @@ private void filterDrawerMenu(final Menu menu, @NonNull final User user) {
                                                                            getContentResolver());
         OCCapability capability = storageManager.getCapability(user.getAccountName());
 
-        DrawerMenuUtil.filterSearchMenuItems(menu, user, getResources(), true);
+        DrawerMenuUtil.filterSearchMenuItems(menu, user, getResources());
         DrawerMenuUtil.filterTrashbinMenuItem(menu, user, capability);
         DrawerMenuUtil.filterActivityMenuItem(menu, capability);
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -300,7 +300,7 @@ private void filterDrawerMenu(final Menu menu, @NonNull final User user) {
                                                                            getContentResolver());
         OCCapability capability = storageManager.getCapability(user.getAccountName());
 
-        DrawerMenuUtil.filterSearchMenuItems(menu, user, getResources(), true);
+        DrawerMenuUtil.filterSearchMenuItems(menu, user, getResources());
         DrawerMenuUtil.filterTrashbinMenuItem(menu, user, capability);
         DrawerMenuUtil.filterActivityMenuItem(menu, capability);
 

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -221,8 +221,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
                 searchView.setMaxWidth((int) (width * 0.4));
             } else {
                 if (activity instanceof FolderPickerActivity) {
-                    searchView.
-                        setMaxWidth((int) (width * 0.8));
+                    searchView.setMaxWidth((int) (width * 0.8));
                 } else {
                     searchView.setMaxWidth(width);
                 }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -825,7 +825,6 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
             case REMOVE_ALL_EXCEPT_SEARCH:
                 menu.removeItem(R.id.action_sort);
                 menu.removeItem(R.id.action_switch_view);
-                menu.removeItem(R.id.action_sync_account);
                 mSwitchGridViewButton.setVisibility(View.VISIBLE);
                 mSortButton.setVisibility(View.VISIBLE);
                 break;

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFileFragment.java
Patch:
@@ -283,7 +283,6 @@ public void onPrepareOptionsMenu(@NotNull Menu menu) {
             menu.findItem(R.id.action_move),
             menu.findItem(R.id.action_download_file),
             menu.findItem(R.id.action_sync_file),
-            menu.findItem(R.id.action_sync_account),
             menu.findItem(R.id.action_favorite),
             menu.findItem(R.id.action_unset_favorite)
         );

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -144,7 +144,6 @@ public void onCreateOptionsMenu(@NotNull Menu menu, @NotNull MenuInflater inflat
     public void onPrepareOptionsMenu(@NonNull Menu menu) {
         super.onPrepareOptionsMenu(menu);
 
-        menu.findItem(R.id.action_sync_account).setVisible(false);
         menu.findItem(R.id.action_sort).setVisible(false);
         menu.findItem(R.id.action_switch_view).setVisible(false);
     }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -332,6 +332,7 @@ public void performSearch(final String query, boolean isBackPressed) {
             } else if (activity instanceof UploadFilesActivity) {
                 LocalFileListAdapter localFileListAdapter = (LocalFileListAdapter) adapter;
                 localFileListAdapter.filter(query);
+                ((UploadFilesActivity) activity).showToolbarSpinner();
             } else if (activity instanceof FolderPickerActivity) {
                 ((FolderPickerActivity) activity).refreshListOfFilesFragment(true);
             }

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -198,7 +198,6 @@ private void refresh() {
     @Override
     protected void onStart() {
         super.onStart();
-        final Optional<User> optionalUser = getUser();
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -332,6 +332,7 @@ public void performSearch(final String query, boolean isBackPressed) {
             } else if (activity instanceof UploadFilesActivity) {
                 LocalFileListAdapter localFileListAdapter = (LocalFileListAdapter) adapter;
                 localFileListAdapter.filter(query);
+                ((UploadFilesActivity) activity).showToolbarSpinner();
             } else if (activity instanceof FolderPickerActivity) {
                 ((FolderPickerActivity) activity).refreshListOfFilesFragment(true);
             }

File: src/test/java/com/owncloud/android/ui/adapter/UserListAdapterTest.java
Patch:
@@ -63,6 +63,7 @@ public void test_getItemCountEmptyList() {
                                               new ArrayList<>(),
                                               null,
                                               null,
+                                              true,
                                               true);
         assertEquals(0, userListAdapter.getItemCount());
     }
@@ -81,6 +82,7 @@ public void test_getItemCountNormalCase() {
                                               accounts,
                                               null,
                                               null,
+                                              true,
                                               true);
 
         assertEquals(2, userListAdapter.getItemCount());
@@ -101,6 +103,7 @@ public void test_getItem() {
                                               accounts,
                                               null,
                                               null,
+                                              true,
                                               true);
 
         UserListItem userListItem1 = new UserListItem();

File: src/test/java/com/owncloud/android/ui/adapter/UserListAdapterTest.java
Patch:
@@ -63,6 +63,7 @@ public void test_getItemCountEmptyList() {
                                               new ArrayList<>(),
                                               null,
                                               null,
+                                              true,
                                               true);
         assertEquals(0, userListAdapter.getItemCount());
     }
@@ -81,6 +82,7 @@ public void test_getItemCountNormalCase() {
                                               accounts,
                                               null,
                                               null,
+                                              true,
                                               true);
 
         assertEquals(2, userListAdapter.getItemCount());
@@ -101,6 +103,7 @@ public void test_getItem() {
                                               accounts,
                                               null,
                                               null,
+                                              true,
                                               true);
 
         UserListItem userListItem1 = new UserListItem();

File: src/androidTest/java/com/nextcloud/client/FileDisplayActivityIT.java
Patch:
@@ -40,7 +40,6 @@
 import com.owncloud.android.ui.events.SearchEvent;
 
 import org.greenrobot.eventbus.EventBus;
-import org.json.JSONException;
 import org.junit.Assert;
 import org.junit.Rule;
 import org.junit.Test;
@@ -86,7 +85,7 @@ public void drawer() {
     }
 
     @Test
-    public void showShares() throws JSONException {
+    public void showShares() {
         assertTrue(new ExistenceCheckRemoteOperation("/shareToAdmin/", true).execute(client).isSuccess());
         assertTrue(new CreateFolderRemoteOperation("/shareToAdmin/", true).execute(client).isSuccess());
         assertTrue(new CreateFolderRemoteOperation("/shareToGroup/", true).execute(client).isSuccess());

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -291,7 +291,6 @@ public interface Listener {
     class AccountViewHolderItem extends RecyclerView.ViewHolder implements View.OnClickListener {
         private ImageView imageViewItem;
         private ImageView checkViewItem;
-        private ImageView accountMenu;
 
         private TextView usernameViewItem;
         private TextView accountViewItem;
@@ -305,7 +304,7 @@ class AccountViewHolderItem extends RecyclerView.ViewHolder implements View.OnCl
             this.checkViewItem = view.findViewById(R.id.ticker);
             this.usernameViewItem = view.findViewById(R.id.user_name);
             this.accountViewItem = view.findViewById(R.id.account);
-            this.accountMenu = view.findViewById(R.id.account_menu);
+            ImageView accountMenu = view.findViewById(R.id.account_menu);
 
             view.setOnClickListener(this);
             if (showDotsMenu) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -265,7 +265,7 @@ protected void onCreate(Bundle savedInstanceState) {
         });
 
         mSwitchAccountButton.setOnClickListener(v -> {
-            openManageAccounts();
+            showManageAccountsDialog();
         });
 
         mDualPane = getResources().getBoolean(R.bool.large_land_layout);

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -161,7 +161,7 @@ protected void onCreate(Bundle savedInstanceState) {
                                               getUserListItems(),
                                               tintedCheck,
                                               this,
-                                              multipleAccountsSupported);
+                                              multipleAccountsSupported, true);
 
         recyclerView.setAdapter(userListAdapter);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
@@ -309,7 +309,7 @@ public void startAccountCreation() {
                                       getUserListItems(),
                                       tintedCheck,
                                       this,
-                                      multipleAccountsSupported
+                                      multipleAccountsSupported, false
                                   );
                                   recyclerView.setAdapter(userListAdapter);
                                   runOnUiThread(() -> userListAdapter.notifyDataSetChanged());
@@ -362,7 +362,7 @@ public void run(AccountManagerFuture<Boolean> future) {
                                                       userListItemArray,
                                                       tintedCheck,
                                                       this,
-                                                      multipleAccountsSupported
+                                                      multipleAccountsSupported, false
                 );
                 recyclerView.setAdapter(userListAdapter);
             } else {

File: src/main/java/com/owncloud/android/ui/dialog/MultipleAccountsDialog.java
Patch:
@@ -95,7 +95,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                                                       getAccountListItems(),
                                                       tintedCheck,
                                                       this,
-                                                      false);
+                                                      false, false);
 
         listView.setHasFixedSize(true);
         listView.setLayoutManager(new LinearLayoutManager(activity));

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -444,6 +444,7 @@ private LocalFileListItemViewHolder(View itemView) {
             fileSeparator = itemView.findViewById(R.id.file_separator);
             lastModification = itemView.findViewById(R.id.last_mod);
 
+            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.overflow_menu).setVisibility(View.GONE);
         }
     }
@@ -461,7 +462,6 @@ private LocalFileListGridImageViewHolder(View itemView) {
             itemLayout = itemView.findViewById(R.id.ListItemLayout);
 
             itemView.findViewById(R.id.sharedIcon).setVisibility(View.GONE);
-            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.favorite_action).setVisibility(View.GONE);
             itemView.findViewById(R.id.localFileIndicator).setVisibility(View.GONE);
         }

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -444,6 +444,7 @@ private LocalFileListItemViewHolder(View itemView) {
             fileSeparator = itemView.findViewById(R.id.file_separator);
             lastModification = itemView.findViewById(R.id.last_mod);
 
+            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.overflow_menu).setVisibility(View.GONE);
         }
     }

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -461,7 +461,6 @@ private LocalFileListGridImageViewHolder(View itemView) {
             itemLayout = itemView.findViewById(R.id.ListItemLayout);
 
             itemView.findViewById(R.id.sharedIcon).setVisibility(View.GONE);
-            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.favorite_action).setVisibility(View.GONE);
             itemView.findViewById(R.id.localFileIndicator).setVisibility(View.GONE);
         }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -679,14 +679,14 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check that connectivity conditions are met and delays the upload otherwise
         Connectivity connectivity = connectivityService.getConnectivity();
-        if (mOnWifiOnly && connectivity.isWifi()) {
+        if (mOnWifiOnly && !connectivity.isWifi()) {
             Log_OC.d(TAG, "Upload delayed until WiFi is available: " + getRemotePath());
             remoteOperationResult = new RemoteOperationResult(ResultCode.DELAYED_FOR_WIFI);
         }
 
         // check if charging conditions are met and delays the upload otherwise
         final BatteryStatus battery = powerManagementService.getBattery();
-        if (mWhileChargingOnly && battery.isCharging()) {
+        if (mWhileChargingOnly && !battery.isCharging()) {
             Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
             remoteOperationResult =  new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
         }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -679,14 +679,14 @@ private RemoteOperationResult checkConditions(File originalFile) {
 
         // check that connectivity conditions are met and delays the upload otherwise
         Connectivity connectivity = connectivityService.getConnectivity();
-        if (mOnWifiOnly && connectivity.isWifi()) {
+        if (mOnWifiOnly && !connectivity.isWifi()) {
             Log_OC.d(TAG, "Upload delayed until WiFi is available: " + getRemotePath());
             remoteOperationResult = new RemoteOperationResult(ResultCode.DELAYED_FOR_WIFI);
         }
 
         // check if charging conditions are met and delays the upload otherwise
         final BatteryStatus battery = powerManagementService.getBattery();
-        if (mWhileChargingOnly && battery.isCharging()) {
+        if (mWhileChargingOnly && !battery.isCharging()) {
             Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
             remoteOperationResult =  new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
         }

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -148,7 +148,7 @@ private void showHomeSearchToolbar(String title, boolean isRoot) {
 
     @SuppressLint("PrivateResource")
     private void showHomeSearchToolbar(boolean isShow) {
-        if (isShow && mDefaultToolbar.getVisibility() == View.VISIBLE) {
+        if (isShow) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 mAppBar.setStateListAnimator(AnimatorInflater.loadStateListAnimator(mAppBar.getContext(),
                                                                                     R.animator.appbar_elevation_off));
@@ -158,7 +158,7 @@ private void showHomeSearchToolbar(boolean isShow) {
             mDefaultToolbar.setVisibility(View.GONE);
             mHomeSearchToolbar.setVisibility(View.VISIBLE);
             ThemeUtils.colorStatusBar(this, ContextCompat.getColor(this, R.color.bg_default));
-        } else if (mDefaultToolbar.getVisibility() == View.GONE) {
+        } else {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 mAppBar.setStateListAnimator(AnimatorInflater.loadStateListAnimator(mAppBar.getContext(),
                                                                                     R.animator.appbar_elevation_on));

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -551,6 +551,7 @@ public void onRefresh() {
             if ((activity = getActivity()) != null && activity instanceof FileDisplayActivity) {
                 FileDisplayActivity fileDisplayActivity = (FileDisplayActivity) activity;
                 fileDisplayActivity.setDrawerIndicatorEnabled(fileDisplayActivity.isDrawerIndicatorAvailable());
+                fileDisplayActivity.hideSearchView(fileDisplayActivity.getCurrentDir());
             }
         }
         if (mOnRefreshListener != null) {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -29,6 +29,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.ServiceConnection;
+import android.graphics.Color;
 import android.os.Bundle;
 import android.os.IBinder;
 import android.text.TextUtils;
@@ -117,6 +118,8 @@ protected void onCreate(Bundle savedInstanceState) {
         // ActionBar
         updateActionBarTitleAndHomeButton(null);
 
+        ThemeUtils.tintBackButton(actionBar, this, Color.WHITE);
+
         mFullScreenAnchorView = getWindow().getDecorView();
         // to keep our UI controls visibility in line with system bars visibility
         setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -511,7 +511,7 @@ private void initFragmentsWithFile() {
     @Override
     protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
-
+        setIntent(intent);
 
         if (ACTION_DETAILS.equalsIgnoreCase(intent.getAction())) {
             OCFile file = intent.getParcelableExtra(EXTRA_FILE);

File: src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -53,7 +53,6 @@ public abstract class EditorWebView extends ExternalSiteWebView {
     protected Snackbar loadingSnackbar;
 
     protected String fileName;
-    protected String mimeType;
 
     @BindView(R.id.progressBar2)
     ProgressBar progressBar;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1505,7 +1505,7 @@ public void onReceive(Context context, Intent intent) {
                         // TODO what about other kind of previews?
                     }
                 }
-                getListOfFilesFragment().setLoading(Boolean.FALSE);
+                getListOfFilesFragment().setLoading(false);
             } finally {
                 if (intent != null) {
                     removeStickyBroadcast(intent);
@@ -2218,7 +2218,7 @@ public void run() {
                                         null
                                 );
 
-                                getListOfFilesFragment().setLoading(Boolean.TRUE);
+                                getListOfFilesFragment().setLoading(true);
 
                                 setBackgroundText();
 

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -28,7 +28,6 @@
 import android.content.res.ColorStateList;
 import android.content.res.Resources.NotFoundException;
 import android.graphics.PorterDuff;
-import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.os.Parcelable;
 import android.util.Log;
@@ -69,7 +68,6 @@
 
 import androidx.appcompat.app.ActionBar;
 import androidx.fragment.app.Fragment;
-import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 
 import static com.owncloud.android.utils.DisplayUtils.openSortingOrderDialogFragment;
@@ -264,7 +262,7 @@ public void startSyncFolderOperation(OCFile folder, boolean ignoreETag) {
                                                                             getApplicationContext());
 
         refreshFolderOperation.execute(getAccount(), this, null, null);
-        getListOfFilesFragment().setLoading(Boolean.TRUE);
+        getListOfFilesFragment().setLoading(true);
         setBackgroundText();
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -56,7 +56,6 @@
 import com.nextcloud.client.account.User;
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.preferences.AppPreferences;
-import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
@@ -741,7 +740,7 @@ private static void configShimmerGridImageSize(LoaderImageView thumbnailShimmer,
 
         try {
             final Point screenSize = getScreenSize(thumbnailShimmer.getContext());
-            final int marginLeftAndRight = Math.round(targetLayoutParams.leftMargin + targetLayoutParams.rightMargin);
+            final int marginLeftAndRight = targetLayoutParams.leftMargin + targetLayoutParams.rightMargin;
             final int size = Math.round(screenSize.x / gridColumns - marginLeftAndRight);
 
             FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(size, size);

File: src/main/java/com/owncloud/android/ui/asynctasks/PhotoSearchTask.java
Patch:
@@ -116,7 +116,7 @@ protected void onPostExecute(RemoteOperationResult result) {
                 }
             }
 
-            photoFragment.setLoading(Boolean.FALSE);
+            photoFragment.setLoading(false);
 
             if (!result.isSuccess() && !isCancelled()) {
                 photoFragment.setEmptyListMessage(ExtendedListFragment.SearchType.PHOTO_SEARCH);

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -178,7 +178,7 @@ public FloatingActionButton getFabMain() {
         return mFabMain;
     }
 
-    public void setLoading(Boolean enabled) {
+    public void setLoading(boolean enabled) {
         mRefreshListLayout.setRefreshing(enabled);
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1625,7 +1625,7 @@ protected Boolean doInBackground(Void... voids) {
                                 @Override
                                 public void run() {
                                     if (fileDisplayActivity != null) {
-                                        setLoading(Boolean.FALSE);
+                                        setLoading(false);
                                     }
                                 }
                             });

File: src/androidTest/java/com/owncloud/android/ui/activity/ManageAccountsActivityIT.java
Patch:
@@ -53,7 +53,7 @@ public void userInfoDetail() {
         ManageAccountsActivity sut = activityRule.launchActivity(null);
 
         User user = sut.accountManager.getUser();
-        sut.onClick(user);
+        sut.onAccountClicked(user);
 
         shortSleep();
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1505,7 +1505,7 @@ public void onReceive(Context context, Intent intent) {
                         // TODO what about other kind of previews?
                     }
                 }
-                getListOfFilesFragment().setLoading(false);
+                getListOfFilesFragment().setLoading(Boolean.FALSE);
             } finally {
                 if (intent != null) {
                     removeStickyBroadcast(intent);
@@ -2218,7 +2218,7 @@ public void run() {
                                         null
                                 );
 
-                                getListOfFilesFragment().setLoading(true);
+                                getListOfFilesFragment().setLoading(Boolean.TRUE);
 
                                 setBackgroundText();
 

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -264,7 +264,7 @@ public void startSyncFolderOperation(OCFile folder, boolean ignoreETag) {
                                                                             getApplicationContext());
 
         refreshFolderOperation.execute(getAccount(), this, null, null);
-        getListOfFilesFragment().setLoading(true);
+        getListOfFilesFragment().setLoading(Boolean.TRUE);
         setBackgroundText();
     }
 

File: src/main/java/com/owncloud/android/ui/asynctasks/PhotoSearchTask.java
Patch:
@@ -116,7 +116,7 @@ protected void onPostExecute(RemoteOperationResult result) {
                 }
             }
 
-            photoFragment.setLoading(false);
+            photoFragment.setLoading(Boolean.FALSE);
 
             if (!result.isSuccess() && !isCancelled()) {
                 photoFragment.setEmptyListMessage(ExtendedListFragment.SearchType.PHOTO_SEARCH);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1625,7 +1625,7 @@ protected Boolean doInBackground(Void... voids) {
                                 @Override
                                 public void run() {
                                     if (fileDisplayActivity != null) {
-                                        setLoading(false);
+                                        setLoading(Boolean.FALSE);
                                     }
                                 }
                             });

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -113,7 +113,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             fabMain.setVisibility(View.VISIBLE);
             fabMain.setEnabled(true);
             fabMain.setOnClickListener(v -> edit());
-            ThemeUtils.tintFloatingActionButton(fabMain, R.drawable.ic_edit, getContext());
+            ThemeUtils.tintFloatingActionButton(fabMain, requireContext());
+            ThemeUtils.drawableFloatingActionButton(fabMain, R.drawable.ic_edit, requireContext());
         }
 
         return view;

File: src/androidTest/java/com/owncloud/android/ui/activity/ManageAccountsActivityIT.java
Patch:
@@ -53,7 +53,7 @@ public void userInfoDetail() {
         ManageAccountsActivity sut = activityRule.launchActivity(null);
 
         User user = sut.accountManager.getUser();
-        sut.onClick(user);
+        sut.onAccountClicked(user);
 
         shortSleep();
 

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -428,7 +428,7 @@ public static class ThumbnailGenerationTask extends AsyncTask<ThumbnailGeneratio
         private FileDataStorageManager mStorageManager;
         private GetMethod getMethod;
         private Listener mListener;
-        private Boolean gridViewEnabled = false;
+        private boolean gridViewEnabled = false;
 
         public ThumbnailGenerationTask(ImageView imageView, FileDataStorageManager storageManager, Account account)
                 throws IllegalArgumentException {
@@ -449,7 +449,8 @@ public ThumbnailGenerationTask(ImageView imageView, FileDataStorageManager stora
         }
 
         public ThumbnailGenerationTask(ImageView imageView, FileDataStorageManager storageManager,
-                                       Account account, List<ThumbnailGenerationTask> asyncTasks, Boolean gridViewEnabled)
+                                       Account account, List<ThumbnailGenerationTask> asyncTasks,
+                                       boolean gridViewEnabled)
             throws IllegalArgumentException {
             this(imageView, storageManager, account, asyncTasks);
             this.gridViewEnabled = gridViewEnabled;

File: src/main/java/com/owncloud/android/ui/trashbin/RemoteTrashbinRepository.java
Patch:
@@ -81,7 +81,7 @@ protected Boolean doInBackground(Void... voids) {
                 return result.isSuccess();
             } catch (ClientFactory.CreationException e) {
                 Log_OC.e(this, "Cannot create client", e);
-                return false;
+                return Boolean.FALSE;
             }
         }
 
@@ -160,7 +160,7 @@ protected Boolean doInBackground(Void... voids) {
                 return result.isSuccess();
             } catch (ClientFactory.CreationException e) {
                 Log_OC.e(this, "Cannot create client", e);
-                return false;
+                return Boolean.FALSE;
             }
         }
 

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -670,7 +670,7 @@ private Bitmap doThumbnailFromOCFileInBackground() {
          *
          * @return int
          */
-        public int getThumbnailDimension() {
+        private int getThumbnailDimension() {
             // Converts dp to pixel
             Resources r = MainApp.getAppContext().getResources();
             Double d = Math.pow(2, Math.floor(Math.log(r.getDimension(R.dimen.file_icon_size_grid)) / Math.log(2)));

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -113,7 +113,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             fabMain.setVisibility(View.VISIBLE);
             fabMain.setEnabled(true);
             fabMain.setOnClickListener(v -> edit());
-            ThemeUtils.tintFloatingActionButton(fabMain, R.drawable.ic_edit, getContext());
+            ThemeUtils.tintFloatingActionButton(fabMain, requireContext());
+            ThemeUtils.drawableFloatingActionButton(fabMain, R.drawable.ic_edit, requireContext());
         }
 
         return view;

File: src/main/java/com/nextcloud/client/integration/deck/DeckApiImpl.java
Patch:
@@ -64,7 +64,6 @@ public Optional<PendingIntent> createForwardToDeckActionIntent(@NonNull Notifica
             for (String flavor : DECK_APP_ID_FLAVOR_SUFFIXES) {
                 intent.setClassName(DECK_APP_ID_BASE + flavor, DECK_ACTIVITY_TO_START);
                 if (context.getPackageManager().resolveActivity(intent, 0) != null) {
-                    Log.i(TAG, "Found deck app flavor \"" + flavor + "\"");
                     return Optional.of(createPendingIntent(intent, notification, user));
                 }
             }

File: src/main/java/com/nextcloud/client/integration/deck/DeckApi.java
Patch:
@@ -9,8 +9,8 @@
 
 import androidx.annotation.NonNull;
 
-public interface DeckActionOverride {
+public interface DeckApi {
 
     @NonNull
-    Optional<PendingIntent> handleNotification(@NonNull final Notification notification, @NonNull final User user);
+    Optional<PendingIntent> createForwardToDeckActionIntent(@NonNull final Notification notification, @NonNull final User user);
 }

File: src/main/java/com/nextcloud/client/integration/deck/DeckNotificationHandler.java
Patch:
@@ -54,8 +54,9 @@ public Intent handleNotification(@NonNull Notification notification, @NonNull Us
         if (!APP_NAME.equalsIgnoreCase(notification.app)) {
             throw new AppCannotHandleNotificationException();
         }
+        final Intent intent = new Intent();
         for (String flavor : DECK_APP_ID_FLAVOR_SUFFIXES) {
-            final Intent intent = new Intent().setClassName(DECK_APP_ID_BASE + flavor, DECK_ACTIVITY_TO_START);
+            intent.setClassName(DECK_APP_ID_BASE + flavor, DECK_ACTIVITY_TO_START);
             if (packageManager.resolveActivity(intent, 0) != null) {
                 Log.i(TAG, "Found deck app flavor \"" + flavor + "\"");
                 return intent

File: src/main/java/com/nextcloud/client/integration/deck/DeckNotificationHandler.java
Patch:
@@ -71,7 +71,6 @@ public Intent handleNotification(@NonNull Notification notification, @NonNull Us
                     .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             }
         }
-        Log.v(TAG, "Couldn't find any installed deck app.");
         throw new AppNotInstalledException();
     }
 }

File: src/main/java/com/nextcloud/client/integration/AppCannotHandleNotificationException.java
Patch:
@@ -21,4 +21,5 @@
 package com.nextcloud.client.integration;
 
 public class AppCannotHandleNotificationException extends Exception {
+    private static final long serialVersionUID = 1L;
 }

File: src/main/java/com/nextcloud/client/integration/AppNotInstalledException.java
Patch:
@@ -21,4 +21,5 @@
 package com.nextcloud.client.integration;
 
 public class AppNotInstalledException extends Exception {
+    private static final long serialVersionUID = 1L;
 }

File: src/main/java/com/nextcloud/client/integration/AppCannotHandleNotificationException.java
Patch:
@@ -20,5 +20,5 @@
 
 package com.nextcloud.client.integration;
 
-public class AppCannotHandelNotificationException extends Exception {
+public class AppCannotHandleNotificationException extends Exception {
 }

File: src/main/java/com/nextcloud/client/integration/NotificationHandler.java
Patch:
@@ -11,5 +11,5 @@ public interface NotificationHandler {
 
     @NonNull
     Intent handleNotification(@NonNull final Notification notification,
-                              @NonNull final User user) throws AppNotInstalledException, AppCannotHandelNotificationException;
+                              @NonNull final User user) throws AppNotInstalledException, AppCannotHandleNotificationException;
 }

File: src/main/java/com/nextcloud/client/integration/deck/DeckNotificationHandler.java
Patch:
@@ -25,7 +25,7 @@
 import android.util.Log;
 
 import com.nextcloud.client.account.User;
-import com.nextcloud.client.integration.AppCannotHandelNotificationException;
+import com.nextcloud.client.integration.AppCannotHandleNotificationException;
 import com.nextcloud.client.integration.AppNotInstalledException;
 import com.nextcloud.client.integration.NotificationHandler;
 import com.owncloud.android.lib.resources.notifications.models.Notification;
@@ -46,9 +46,9 @@ public DeckNotificationHandler(@NonNull Context context) {
 
     @NonNull
     @Override
-    public Intent handleNotification(@NonNull Notification notification, @NonNull User user) throws AppNotInstalledException, AppCannotHandelNotificationException {
+    public Intent handleNotification(@NonNull Notification notification, @NonNull User user) throws AppNotInstalledException, AppCannotHandleNotificationException {
         if (!APP_NAME.equalsIgnoreCase(notification.app)) {
-            throw new AppCannotHandelNotificationException();
+            throw new AppCannotHandleNotificationException();
         }
         final String baseDeckApplicationId = "it.niedermann.nextcloud.deck";
         final String activityToStart = "it.niedermann.nextcloud.deck.ui.PushNotificationActivity";

File: src/main/java/com/nextcloud/client/integration/deck/DeckNotificationHandler.java
Patch:
@@ -5,6 +5,8 @@
 import android.util.Log;
 
 import com.nextcloud.client.account.User;
+import com.nextcloud.client.integration.AppCannotHandelNotificationException;
+import com.nextcloud.client.integration.AppNotInstalledException;
 import com.nextcloud.client.integration.NotificationHandler;
 import com.owncloud.android.lib.resources.notifications.models.Notification;
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -212,7 +212,7 @@ public View onCreateView(@NonNull final LayoutInflater inflater, ViewGroup conta
 
         if (!ocFile.isDown()) {
             Intent i = new Intent(getContext(), FileDownloader.class);
-            i.putExtra(FileDownloader.EXTRA_FILE_PATH, user);
+            i.putExtra(FileDownloader.EXTRA_USER, user);
             i.putExtra(FileDownloader.EXTRA_FILE, ocFile);
             getContext().startService(i);
 

File: src/main/java/com/owncloud/android/ui/dialog/MultipleAccountsDialog.java
Patch:
@@ -132,7 +132,8 @@ private List<UserListItem> getAccountListItems() {
 
     @Override
     public void onOptionItemClicked(User user, View view) {
-        // Do nothing
+        // By default, access account if option is clicked
+        onAccountClicked(user);
     }
 
     @Override

File: src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -491,7 +491,7 @@ public String getFolderPath() {
     private void startSyncFolderOperation(String path){
         Intent intent = new Intent(mContext, OperationsService.class);
         intent.setAction(OperationsService.ACTION_SYNC_FOLDER);
-        intent.putExtra(OperationsService.EXTRA_ACCOUNT, user);
+        intent.putExtra(OperationsService.EXTRA_ACCOUNT, user.toPlatformAccount());
         intent.putExtra(OperationsService.EXTRA_REMOTE_PATH, path);
         mContext.startService(intent);
     }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -212,7 +212,7 @@ public View onCreateView(@NonNull final LayoutInflater inflater, ViewGroup conta
 
         if (!ocFile.isDown()) {
             Intent i = new Intent(getContext(), FileDownloader.class);
-            i.putExtra(FileDownloader.EXTRA_FILE_PATH, user);
+            i.putExtra(FileDownloader.EXTRA_USER, user);
             i.putExtra(FileDownloader.EXTRA_FILE, ocFile);
             getContext().startService(i);
 

File: src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -491,7 +491,7 @@ public String getFolderPath() {
     private void startSyncFolderOperation(String path){
         Intent intent = new Intent(mContext, OperationsService.class);
         intent.setAction(OperationsService.ACTION_SYNC_FOLDER);
-        intent.putExtra(OperationsService.EXTRA_ACCOUNT, user);
+        intent.putExtra(OperationsService.EXTRA_ACCOUNT, user.toPlatformAccount());
         intent.putExtra(OperationsService.EXTRA_REMOTE_PATH, path);
         mContext.startService(intent);
     }

File: src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -63,6 +63,7 @@
 import com.owncloud.android.ui.activity.UploadFilesActivity;
 import com.owncloud.android.ui.activity.UploadListActivity;
 import com.owncloud.android.ui.activity.UserInfoActivity;
+import com.owncloud.android.ui.dialog.AccountRemovalConfirmationDialog;
 import com.owncloud.android.ui.dialog.ChooseRichDocumentsTemplateDialogFragment;
 import com.owncloud.android.ui.dialog.ChooseTemplateDialogFragment;
 import com.owncloud.android.ui.dialog.MultipleAccountsDialog;
@@ -138,6 +139,7 @@ abstract class ComponentsModule {
     @ContributesAndroidInjector abstract FileDetailActivitiesFragment fileDetailActivitiesFragment();
     @ContributesAndroidInjector abstract FileDetailSharingFragment fileDetailSharingFragment();
     @ContributesAndroidInjector abstract ChooseTemplateDialogFragment chooseTemplateDialogFragment();
+    @ContributesAndroidInjector abstract AccountRemovalConfirmationDialog accountRemovalConfirmationDialog();
 
     @ContributesAndroidInjector abstract ChooseRichDocumentsTemplateDialogFragment chooseRichDocumentsTemplateDialogFragment();
     @ContributesAndroidInjector abstract ContactsBackupFragment contactsBackupFragment();

File: src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -63,6 +63,7 @@
 import com.owncloud.android.ui.activity.UploadFilesActivity;
 import com.owncloud.android.ui.activity.UploadListActivity;
 import com.owncloud.android.ui.activity.UserInfoActivity;
+import com.owncloud.android.ui.dialog.AccountRemovalConfirmationDialog;
 import com.owncloud.android.ui.dialog.ChooseRichDocumentsTemplateDialogFragment;
 import com.owncloud.android.ui.dialog.ChooseTemplateDialogFragment;
 import com.owncloud.android.ui.dialog.MultipleAccountsDialog;
@@ -138,6 +139,7 @@ abstract class ComponentsModule {
     @ContributesAndroidInjector abstract FileDetailActivitiesFragment fileDetailActivitiesFragment();
     @ContributesAndroidInjector abstract FileDetailSharingFragment fileDetailSharingFragment();
     @ContributesAndroidInjector abstract ChooseTemplateDialogFragment chooseTemplateDialogFragment();
+    @ContributesAndroidInjector abstract AccountRemovalConfirmationDialog accountRemovalConfirmationDialog();
 
     @ContributesAndroidInjector abstract ChooseRichDocumentsTemplateDialogFragment chooseRichDocumentsTemplateDialogFragment();
     @ContributesAndroidInjector abstract ContactsBackupFragment contactsBackupFragment();

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -31,7 +31,6 @@
 import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
-import android.graphics.Color;
 import android.graphics.LinearGradient;
 import android.graphics.PorterDuff;
 import android.graphics.Shader;
@@ -614,7 +613,7 @@ public static void setThumbnail(OCFile file,
         setThumbnail(file, thumbnailView, user, storageManager, asyncTasks, gridView, context, null, null);
     }
 
-    public static void setThumbnail(OCFile file,
+    private static void setThumbnail(OCFile file,
                                     ImageView thumbnailView,
                                     User user,
                                     FileDataStorageManager storageManager,

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -615,7 +615,7 @@ public void onFailedSavingCertificate() {
         dialog.show(getSupportFragmentManager(), DIALOG_CERT_NOT_SAVED);
     }
 
-    public void checkForNewDevVersionNecessary(View view, Context context) {
+    public void checkForNewDevVersionNecessary(Context context) {
         if (getResources().getBoolean(R.bool.dev_version_direct_download_enabled)) {
             ArbitraryDataProvider arbitraryDataProvider = new ArbitraryDataProvider(getContentResolver());
             int count = arbitraryDataProvider.getIntegerValue(FilesSyncHelper.GLOBAL, APP_OPENED_COUNT);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2606,14 +2606,14 @@ public void onStart() {
         }
 
         EventBus.getDefault().post(new TokenPushEvent());
-        checkForNewDevVersionNecessary(findViewById(R.id.root_layout), getApplicationContext());
+        checkForNewDevVersionNecessary(getApplicationContext());
     }
 
     @Override
     protected void onRestart() {
         super.onRestart();
 
-        checkForNewDevVersionNecessary(findViewById(R.id.root_layout), getApplicationContext());
+        checkForNewDevVersionNecessary(getApplicationContext());
     }
 
     public void setSearchQuery(String query) {

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -70,7 +70,6 @@
 import com.owncloud.android.ui.dialog.SyncedFolderPreferencesDialogFragment;
 import com.owncloud.android.ui.dialog.parcel.SyncedFolderParcelable;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ThemeUtils;
 
@@ -233,7 +232,6 @@ private boolean onDisablePowerSaveCheckClicked(MenuItem powerCheck) {
 
     private void showPowerCheckDialog() {
         AlertDialog alertDialog = new AlertDialog.Builder(this)
-            .setView(findViewById(R.id.root_layout))
             .setPositiveButton(R.string.common_ok, (dialog, which) -> dialog.dismiss())
             .setTitle(ThemeUtils.getColoredTitle(getResources().getString(R.string.autoupload_disable_power_save_check),
                                                  ThemeUtils.primaryAccentColor(this)))

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -737,7 +737,7 @@ private static void stopShimmer(ShimmerFrameLayout shimmerFrameLayout, View shim
 
     private static void configShimmerGridImageSize(ImageView shimmerThumbnail, int size){
         shimmerThumbnail.setImageResource(R.drawable.background);
-        FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(size,size);
+        FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,size);
         shimmerThumbnail.setLayoutParams(params);
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -528,7 +528,9 @@ public void newPresentation() {
 
     @Override
     public void onHeaderClicked() {
-        ((FileDisplayActivity) mContainerActivity).startRichWorkspacePreview(getCurrentFile());
+        if (!getAdapter().isMultiSelect()) {
+            ((FileDisplayActivity) mContainerActivity).startRichWorkspacePreview(getCurrentFile());
+        }
     }
 
     @Override

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -981,6 +981,7 @@ private void handleSuccessfulUpload(File temporalFile, File expectedFile, File o
 
             case FileUploader.LOCAL_BEHAVIOUR_DELETE:
                 originalFile.delete();
+                mFile.setStoragePath("");
                 getStorageManager().deleteFileInMediaScan(originalFile.getAbsolutePath());
                 saveUploadedFile(client);
                 break;

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -981,6 +981,7 @@ private void handleSuccessfulUpload(File temporalFile, File expectedFile, File o
 
             case FileUploader.LOCAL_BEHAVIOUR_DELETE:
                 originalFile.delete();
+                mFile.setStoragePath("");
                 getStorageManager().deleteFileInMediaScan(originalFile.getAbsolutePath());
                 saveUploadedFile(client);
                 break;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -528,7 +528,9 @@ public void newPresentation() {
 
     @Override
     public void onHeaderClicked() {
-        ((FileDisplayActivity) mContainerActivity).startRichWorkspacePreview(getCurrentFile());
+        if (!getAdapter().isMultiSelect()) {
+            ((FileDisplayActivity) mContainerActivity).startRichWorkspacePreview(getCurrentFile());
+        }
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -138,6 +138,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         // set title Action bar
         updateActionBarTitleAndHomeButtonByString(getResources().getString(R.string.prefs_manage_accounts));
+        ThemeUtils.tintBackButton(actionBar, this);
 
         List<User> users = accountManager.getAllUsers();
         originalUsers = toAccountNames(users);

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -138,6 +138,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         // set title Action bar
         updateActionBarTitleAndHomeButtonByString(getResources().getString(R.string.prefs_manage_accounts));
+        ThemeUtils.tintBackButton(actionBar, this);
 
         List<User> users = accountManager.getAllUsers();
         originalUsers = toAccountNames(users);

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -302,7 +302,7 @@ private void setupDrawerHeader() {
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 
         mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toggle);
-        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this, true));
+        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this, !ThemeUtils.darkTheme(getApplicationContext())));
 
         if (getResources().getBoolean(R.bool.allow_profile_click)) {
             mAccountChooserToggle.setImageResource(R.drawable.ic_down);

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void setupToolbar(boolean useBackgroundImage) {
         int primaryColor = ThemeUtils.primaryAppbarColor(this);
         int fontColor = ThemeUtils.fontAppbarColor(this);
 
-        Toolbar toolbar = findViewById(R.id.default_toolbar);
+        Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
         mProgressBar = findViewById(R.id.toolbar_progressBar);

File: src/main/java/com/owncloud/android/ui/adapter/NotificationListAdapter.java
Patch:
@@ -170,7 +170,7 @@ public void setButtons(NotificationViewHolder holder, Notification notification)
                 button.setStrokeColor(ColorStateList.valueOf(resources.getColor(R.color.grey_200)));
                 button.setStrokeWidth(3);
 
-                button.setBackgroundColor(resources.getColor(android.R.color.transparent));
+                button.setBackgroundColor(resources.getColor(R.color.transparent));
                 button.setTextColor(primaryColor);
                 button.setTypeface(button.getTypeface(), Typeface.BOLD);
             }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -210,7 +210,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         // todo extract
         internalLinkIcon.getBackground().setColorFilter(getResources().getColor(R.color.grey_db),
                                                         PorterDuff.Mode.SRC_IN);
-        internalLinkIcon.getDrawable().mutate().setColorFilter(getResources().getColor(android.R.color.black),
+        internalLinkIcon.getDrawable().mutate().setColorFilter(getResources().getColor(R.color.black),
                                                                PorterDuff.Mode.SRC_IN);
 
         if (file.isFolder()) {

File: src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -72,6 +72,8 @@ public class FirstRunActivity extends BaseActivity implements ViewPager.OnPageCh
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        enableAccountHandling = false;
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.first_run_activity);
 

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -461,6 +461,7 @@ private LocalFileListGridImageViewHolder(View itemView) {
             itemLayout = itemView.findViewById(R.id.ListItemLayout);
 
             itemView.findViewById(R.id.sharedIcon).setVisibility(View.GONE);
+            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.favorite_action).setVisibility(View.GONE);
             itemView.findViewById(R.id.localFileIndicator).setVisibility(View.GONE);
         }

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 54;
+    public static final int DB_VERSION = 55;
 
     private ProviderMeta() {
         // No instance
@@ -230,6 +230,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String SYNCED_FOLDER_SUBFOLDER_BY_DATE = "subfolder_by_date";
         public static final String SYNCED_FOLDER_ACCOUNT = "account";
         public static final String SYNCED_FOLDER_UPLOAD_ACTION = "upload_option";
+        public static final String SYNCED_FOLDER_NAME_COLLISION_POLICY = "name_collision_policy";
         public static final String SYNCED_FOLDER_HIDDEN = "hidden";
 
         // Columns of external links table

File: src/test/java/com/owncloud/android/ui/activity/SyncedFoldersActivityTest.java
Patch:
@@ -24,6 +24,7 @@
 
 import com.owncloud.android.datamodel.MediaFolderType;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
+import com.owncloud.android.files.services.FileUploader;
 
 import org.junit.Test;
 
@@ -166,7 +167,8 @@ private SyncedFolderDisplayItem create(String folderName, boolean enabled) {
                                            true,
                                            true,
                                            "test@nextcloud.com",
-                                           1,
+                                           FileUploader.LOCAL_BEHAVIOUR_MOVE,
+                                           FileUploader.NameCollisionPolicy.ASK_USER.serialize(),
                                            enabled,
                                            System.currentTimeMillis(),
                                            new ArrayList<String>(),

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -254,7 +254,7 @@ private void syncFile(OCFile file, User user, FileDataStorageManager storageMana
             Intent i = new Intent(fileActivity, ConflictsResolveActivity.class);
             i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);
             i.putExtra(ConflictsResolveActivity.EXTRA_FILE, file);
-            i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, user);
+            i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, user.toPlatformAccount());
             fileActivity.startActivity(i);
         } else {
             if (file.isDown()) {

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -254,7 +254,7 @@ private void syncFile(OCFile file, User user, FileDataStorageManager storageMana
             Intent i = new Intent(fileActivity, ConflictsResolveActivity.class);
             i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);
             i.putExtra(ConflictsResolveActivity.EXTRA_FILE, file);
-            i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, user);
+            i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, user.toPlatformAccount());
             fileActivity.startActivity(i);
         } else {
             if (file.isDown()) {

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -461,6 +461,7 @@ private LocalFileListGridImageViewHolder(View itemView) {
             itemLayout = itemView.findViewById(R.id.ListItemLayout);
 
             itemView.findViewById(R.id.sharedIcon).setVisibility(View.GONE);
+            itemView.findViewById(R.id.sharedAvatars).setVisibility(View.GONE);
             itemView.findViewById(R.id.favorite_action).setVisibility(View.GONE);
             itemView.findViewById(R.id.localFileIndicator).setVisibility(View.GONE);
         }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -104,7 +104,7 @@ public static Bitmap decodeSampledBitmapFromFile(String srcPath, int reqWidth, i
      * @return The largest inSampleSize value that is a power of 2 and keeps both
      *                      height and width larger than reqWidth and reqHeight.
      */
-    private static int calculateSampleFactor(Options options, int reqWidth, int reqHeight) {
+    public static int calculateSampleFactor(Options options, int reqWidth, int reqHeight) {
 
         final int height = options.outHeight;
         final int width = options.outWidth;

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -133,7 +133,7 @@ public void filter(Menu menu, boolean inSingleFileFragment, boolean isMediaSuppo
             List<Integer> toShow = new ArrayList<>();
             List<Integer> toHide = new ArrayList<>();
 
-            filter(toShow, toHide, inSingleFileFragment, isMediaSupported, menu);
+            filter(toShow, toHide, inSingleFileFragment, isMediaSupported);
 
             for (int i : toShow) {
                 showMenuItem(menu.findItem(i));
@@ -193,8 +193,7 @@ public static void hideMenuItems(MenuItem... items) {
     private void filter(List<Integer> toShow,
                         List<Integer> toHide,
                         boolean inSingleFileFragment,
-                        boolean isMediaSupported,
-                        Menu menu) {
+                        boolean isMediaSupported) {
         boolean synchronizing = anyFileSynchronizing();
         OCCapability capability = componentsGetter.getStorageManager().getCapability(account.name);
         boolean endToEndEncryptionEnabled = capability.getEndToEndEncryption().isTrue();

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -104,7 +104,7 @@ public static Bitmap decodeSampledBitmapFromFile(String srcPath, int reqWidth, i
      * @return The largest inSampleSize value that is a power of 2 and keeps both
      *                      height and width larger than reqWidth and reqHeight.
      */
-    private static int calculateSampleFactor(Options options, int reqWidth, int reqHeight) {
+    public static int calculateSampleFactor(Options options, int reqWidth, int reqHeight) {
 
         final int height = options.outHeight;
         final int width = options.outWidth;

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -46,8 +46,7 @@
 
 
 /**
- * Wrapper activity which will be launched if keep-in-sync file will be modified by external
- * application.
+ * Wrapper activity which will be launched if keep-in-sync file will be modified by external application.
  */
 public class ConflictsResolveActivity extends FileActivity implements OnConflictDecisionMadeListener {
     /**
@@ -226,7 +225,7 @@ private void startDialog() {
     }
 
     private void showErrorAndFinish() {
-        Toast.makeText(this, R.string.conflict_dialog_error, Toast.LENGTH_LONG).show();
+        runOnUiThread(() -> Toast.makeText(this, R.string.conflict_dialog_error, Toast.LENGTH_LONG).show());
         finish();
     }
 

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -46,8 +46,7 @@
 
 
 /**
- * Wrapper activity which will be launched if keep-in-sync file will be modified by external
- * application.
+ * Wrapper activity which will be launched if keep-in-sync file will be modified by external application.
  */
 public class ConflictsResolveActivity extends FileActivity implements OnConflictDecisionMadeListener {
     /**
@@ -226,7 +225,7 @@ private void startDialog() {
     }
 
     private void showErrorAndFinish() {
-        Toast.makeText(this, R.string.conflict_dialog_error, Toast.LENGTH_LONG).show();
+        runOnUiThread(() -> Toast.makeText(this, R.string.conflict_dialog_error, Toast.LENGTH_LONG).show());
         finish();
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -107,6 +107,7 @@ public ActivityListAdapter(
         ActivityListInterface activityListInterface,
         FileDataStorageManager storageManager,
         OCCapability capability,
+        ClientFactory clientFactory,
         boolean isDetailView
     ) {
         this.values = new ArrayList<>();
@@ -115,6 +116,7 @@ public ActivityListAdapter(
         this.activityListInterface = activityListInterface;
         this.storageManager = storageManager;
         this.capability = capability;
+        this.clientFactory = clientFactory;
         px = getThumbnailDimension();
         this.isDetailView = isDetailView;
     }

File: src/main/java/com/owncloud/android/ui/activity/SsoGrantPermissionActivity.java
Patch:
@@ -126,9 +126,9 @@ protected void onCreate(Bundle savedInstanceState) {
             Log.e(TAG, e.getMessage());
         }
 
-        int primaryColor = ThemeUtils.primaryColor(this, true);
-        grantPermissionButton.setTextColor(primaryColor);
-        declinePermissionButton.setTextColor(primaryColor);
+        int fontColor = ThemeUtils.fontColor(getApplicationContext(), !ThemeUtils.darkTheme(getApplicationContext()));
+        grantPermissionButton.setTextColor(fontColor);
+        declinePermissionButton.setTextColor(fontColor);
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/activity/SsoGrantPermissionActivity.java
Patch:
@@ -126,9 +126,9 @@ protected void onCreate(Bundle savedInstanceState) {
             Log.e(TAG, e.getMessage());
         }
 
-        int primaryColor = ThemeUtils.primaryColor(this, true);
-        grantPermissionButton.setTextColor(primaryColor);
-        declinePermissionButton.setTextColor(primaryColor);
+        int fontColor = ThemeUtils.fontColor(getApplicationContext(), !ThemeUtils.darkTheme(getApplicationContext()));
+        grantPermissionButton.setTextColor(fontColor);
+        declinePermissionButton.setTextColor(fontColor);
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -107,6 +107,7 @@ public ActivityListAdapter(
         ActivityListInterface activityListInterface,
         FileDataStorageManager storageManager,
         OCCapability capability,
+        ClientFactory clientFactory,
         boolean isDetailView
     ) {
         this.values = new ArrayList<>();
@@ -115,6 +116,7 @@ public ActivityListAdapter(
         this.activityListInterface = activityListInterface;
         this.storageManager = storageManager;
         this.capability = capability;
+        this.clientFactory = clientFactory;
         px = getThumbnailDimension();
         this.isDetailView = isDetailView;
     }

File: src/main/java/com/owncloud/android/ui/activity/CommunityActivity.java
Patch:
@@ -93,6 +93,7 @@ private void setupContent() {
 
         MaterialButton reportButton = findViewById(R.id.community_testing_report);
         reportButton.setBackgroundColor(ThemeUtils.primaryColor(this,true));
+        reportButton.setTextColor(ThemeUtils.fontColor(this, false));
         reportButton.setOnClickListener(v -> DisplayUtils.startLinkIntent(this, R.string.report_issue_link));
     }
 

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -296,7 +296,7 @@ private void requestForUpload(OCFile file) {
             mAccount,
             file,
             FileUploader.LOCAL_BEHAVIOUR_MOVE,
-            FileUploader.NameCollisionPolicy.ASK_USER
+            FileUploader.NameCollisionPolicy.OVERWRITE
         );
 
         mTransferWasRequested = true;

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -463,7 +463,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
         if (!result.isSuccess()) {
             if (result.getCode() == ResultCode.SYNC_CONFLICT) {
                 Intent i = new Intent(this, ConflictsResolveActivity.class);
-                i.putExtra(ConflictsResolveActivity.EXTRA_FILE, syncedFile);
+                i.putExtra(ConflictsResolveActivity.EXTRA_FILE, syncedFile); // must be new file
                 i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, getAccount());
                 startActivity(i);
             }

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -296,7 +296,7 @@ private void requestForUpload(OCFile file) {
             mAccount,
             file,
             FileUploader.LOCAL_BEHAVIOUR_MOVE,
-            FileUploader.NameCollisionPolicy.ASK_USER
+            FileUploader.NameCollisionPolicy.OVERWRITE
         );
 
         mTransferWasRequested = true;

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -463,7 +463,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
         if (!result.isSuccess()) {
             if (result.getCode() == ResultCode.SYNC_CONFLICT) {
                 Intent i = new Intent(this, ConflictsResolveActivity.class);
-                i.putExtra(ConflictsResolveActivity.EXTRA_FILE, syncedFile);
+                i.putExtra(ConflictsResolveActivity.EXTRA_FILE, syncedFile); // must be new file
                 i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, getAccount());
                 startActivity(i);
             }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -588,7 +588,9 @@ public void setFabVisible(final boolean visible) {
             getActivity().runOnUiThread(() -> {
                 if (visible) {
                     mFabMain.show();
-                    ThemeUtils.tintDrawable(mFabMain.getBackground(), ThemeUtils.primaryColor(getContext()));
+                    int primaryColor = ThemeUtils.primaryColor(getContext());
+                    mFabMain.setBackgroundTintList(ColorStateList.valueOf(primaryColor));
+                    mFabMain.setRippleColor(primaryColor);
                 } else {
                     mFabMain.hide();
                 }

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -292,10 +292,10 @@ public boolean setCurrentOwnCloudAccount(String accountName) {
     public boolean setCurrentOwnCloudAccount(int hashCode) {
         boolean result = false;
         if (hashCode != 0) {
-            for (final Account account : getAccounts()) {
-                if (hashCode == account.hashCode()) {
+            for (final User user : getAllUsers()) {
+                if (hashCode == user.hashCode()) {
                     SharedPreferences.Editor appPrefs = PreferenceManager.getDefaultSharedPreferences(context).edit();
-                    appPrefs.putString(PREF_SELECT_OC_ACCOUNT, account.name);
+                    appPrefs.putString(PREF_SELECT_OC_ACCOUNT, user.getAccountName());
                     appPrefs.apply();
                     result = true;
                     break;

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -588,7 +588,9 @@ public void setFabVisible(final boolean visible) {
             getActivity().runOnUiThread(() -> {
                 if (visible) {
                     mFabMain.show();
-                    ThemeUtils.tintDrawable(mFabMain.getBackground(), ThemeUtils.primaryColor(getContext()));
+                    int primaryColor = ThemeUtils.primaryColor(getContext());
+                    mFabMain.setBackgroundTintList(ColorStateList.valueOf(primaryColor));
+                    mFabMain.setRippleColor(primaryColor);
                 } else {
                     mFabMain.hide();
                 }

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -27,7 +27,6 @@
 package com.owncloud.android.ui.activity;
 
 import android.accounts.Account;
-import android.accounts.AccountManager;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;

File: src/main/java/com/owncloud/android/ui/adapter/StoragePathAdapter.java
Patch:
@@ -32,7 +32,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
-
 import butterknife.BindView;
 import butterknife.ButterKnife;
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -22,7 +22,6 @@
  */
 package com.owncloud.android.ui.preview;
 
-import android.accounts.Account;
 import android.annotation.SuppressLint;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
@@ -37,7 +36,6 @@
 import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
-import com.nextcloud.client.account.User;
 import com.nextcloud.client.di.Injectable;
 import com.nextcloud.client.preferences.AppPreferences;
 import com.owncloud.android.MainApp;

File: src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -64,7 +64,7 @@ public class ConflictsResolveDialog extends DialogFragment {
 
     private OCFile existingFile;
     private File newFile;
-    private OnConflictDecisionMadeListener listener;
+    public OnConflictDecisionMadeListener listener;
     private User user;
     private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();
 

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -160,6 +160,7 @@ private OCFile(Parcel source) {
         ownerDisplayName = source.readString();
         mountType = (WebdavEntry.MountType) source.readSerializable();
         richWorkspace = source.readString();
+        previewAvailable = source.readInt() == 1;
     }
 
     @Override
@@ -193,6 +194,7 @@ public void writeToParcel(Parcel dest, int flags) {
         dest.writeString(ownerDisplayName);
         dest.writeSerializable(mountType);
         dest.writeString(richWorkspace);
+        dest.writeInt(previewAvailable ? 1 : 0);
     }
 
     public String getDecryptedRemotePath() {

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -124,7 +124,7 @@ public void after() {
     }
 
 
-    FileDataStorageManager getStorageManager() {
+    protected FileDataStorageManager getStorageManager() {
         return new FileDataStorageManager(account, targetContext.getContentResolver());
     }
 

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -2147,7 +2147,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                                    ProviderTableMeta.UPLOADS_STATUS + ", " +
                                    ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + ", " +
                                    ProviderTableMeta.UPLOADS_UPLOAD_TIME + ", " +
-                                   "force_overwrite" + ", " +
+                                   "force_overwrite" + ", " + // See FileUploader.NameCollisionPolicy
                                    ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + ", " +
                                    ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + ", " +
                                    ProviderTableMeta.UPLOADS_LAST_RESULT + ", " +

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -82,7 +82,6 @@ public void conflictDecisionMade(Decision decision) {
         }
 
         OCFile file = getFile();
-        FileUploader.UploadRequester uploadRequester = new FileUploader.UploadRequester();
 
         // Upload
         if (decision == Decision.KEEP_LOCAL || decision == Decision.KEEP_BOTH) {
@@ -91,7 +90,7 @@ public void conflictDecisionMade(Decision decision) {
                 collisionPolicy = FileUploader.NameCollisionPolicy.RENAME;
             }
 
-            uploadRequester.uploadUpdate(this, getAccount(), file, localBehaviour, collisionPolicy);
+            FileUploader.uploadUpdateFile(this, getAccount(), file, localBehaviour, collisionPolicy);
 
             if (this.conflictUpload != null) {
                 uploadsStorageManager.removeUpload(this.conflictUpload);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1043,8 +1043,7 @@ private void requestUploadOfFilesFromFileSystem(String[] filePaths, int resultCo
                     break;
             }
 
-            FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
-            requester.uploadNewFile(
+            FileUploader.uploadNewFile(
                 this,
                 getAccount(),
                 filePaths,
@@ -1054,7 +1053,8 @@ private void requestUploadOfFilesFromFileSystem(String[] filePaths, int resultCo
                 false,          // do not create parent folder if not existent
                 UploadFileOperation.CREATED_BY_USER,
                 false,
-                false
+                false,
+                FileUploader.NameCollisionPolicy.ASK_USER
             );
 
         } else {

File: src/main/java/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -219,8 +219,7 @@ protected ResultCode doInBackground(Object[] params) {
     }
 
     private void requestUpload(Account account, String localPath, String remotePath, int behaviour, String mimeType) {
-        FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
-        requester.uploadNewFile(
+        FileUploader.uploadNewFile(
             mAppContext,
             account,
             localPath,
@@ -230,7 +229,8 @@ private void requestUpload(Account account, String localPath, String remotePath,
             false,      // do not create parent folder if not existent
             UploadFileOperation.CREATED_BY_USER,
             false,
-             false
+            false,
+            FileUploader.NameCollisionPolicy.ASK_USER
         );
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -471,7 +471,7 @@ private SyncedFolderDisplayItem createSyncedFolderFromMediaFolder(@NonNull Media
                 getString(R.string.instant_upload_path) + "/" + mediaFolder.folderName,
                 true,
                 false,
-                false,
+                true,
                 false,
                 getAccount().name,
                 FileUploader.LOCAL_BEHAVIOUR_FORGET,
@@ -580,7 +580,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case R.id.action_create_custom_folder: {
                 Log.d(TAG, "Show custom folder dialog");
                 SyncedFolderDisplayItem emptyCustomFolder = new SyncedFolderDisplayItem(
-                    SyncedFolder.UNPERSISTED_ID, null, null, true, false, false,
+                    SyncedFolder.UNPERSISTED_ID, null, null, true, false, true,
                     false, getAccount().name, FileUploader.LOCAL_BEHAVIOUR_FORGET, false,
                     clock.getCurrentTime(), null, MediaFolderType.CUSTOM, false);
                 onSyncFolderSettingsClick(0, emptyCustomFolder);

File: src/androidTest/java/com/nextcloud/client/FileDisplayActivityIT.java
Patch:
@@ -80,7 +80,7 @@ public void drawer() {
     }
 
     @Test
-    public void showShares() throws InterruptedException {
+    public void showShares() {
         assertTrue(new CreateFolderRemoteOperation("/shareToAdmin/", true).execute(client).isSuccess());
         assertTrue(new CreateFolderRemoteOperation("/shareToGroup/", true).execute(client).isSuccess());
         assertTrue(new CreateFolderRemoteOperation("/shareViaLink/", true).execute(client).isSuccess());
@@ -118,8 +118,7 @@ public void showShares() throws InterruptedException {
         getInstrumentation().waitForIdleSync();
 
         EventBus.getDefault().post(new SearchEvent("",
-                                                   SearchRemoteOperation.SearchType.SHARED_FILTER,
-                                                   SearchEvent.UnsetType.UNSET_BOTTOM_NAV_BAR));
+                                                   SearchRemoteOperation.SearchType.SHARED_FILTER));
 
         getInstrumentation().waitForIdleSync();
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -469,7 +469,7 @@ private void selectNavigationItem(final MenuItem menuItem) {
                 UserInfoActivity.openAccountRemovalConfirmationDialog(getAccount(), getSupportFragmentManager());
                 break;
             case R.id.nav_shared:
-                handleSearchEvents(new SearchEvent("", SearchRemoteOperation.SearchType.SHARED_SEARCH),
+                handleSearchEvents(new SearchEvent("", SearchRemoteOperation.SearchType.SHARED_FILTER),
                                    menuItem.getItemId());
                 break;
             case R.id.nav_recently_modified:

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -191,7 +191,7 @@ public class OCFileListFragment extends ExtendedListFragment implements
     protected SearchType currentSearchType;
     protected boolean searchFragment;
     protected SearchEvent searchEvent;
-    protected AsyncTask remoteOperationAsyncTask;
+    protected AsyncTask<Void, Void, Boolean> remoteOperationAsyncTask;
     protected String mLimitToMimeType;
 
     @Inject DeviceInfo deviceInfo;
@@ -1591,7 +1591,7 @@ protected void onPostExecute(Boolean bool) {
             }
         };
 
-        remoteOperationAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, true);
+        remoteOperationAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
     }
 
     @Subscribe(threadMode = ThreadMode.BACKGROUND)

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -535,7 +535,7 @@ public int compare(VCard o1, VCard o2) {
 
     }
 
-    private AsyncTask loadContactsTask = new AsyncTask<Void, Void, Boolean>() {
+    private AsyncTask<Void, Void, Boolean> loadContactsTask = new AsyncTask<Void, Void, Boolean>() {
 
         @Override
         protected void onPreExecute() {

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -535,7 +535,7 @@ public int compare(VCard o1, VCard o2) {
 
     }
 
-    private AsyncTask loadContactsTask = new AsyncTask<Void, Void, Boolean>() {
+    private AsyncTask<Void, Void, Boolean> loadContactsTask = new AsyncTask<Void, Void, Boolean>() {
 
         @Override
         protected void onPreExecute() {

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -320,8 +320,7 @@ public void performSearch(final String query, boolean isBackPressed) {
                     handler.post(() -> {
                         if (adapter instanceof OCFileListAdapter) {
                             EventBus.getDefault().post(new SearchEvent(query,
-                                                                       SearchRemoteOperation.SearchType.FILE_SEARCH,
-                                                                       SearchEvent.UnsetType.NO_UNSET));
+                                                                       SearchRemoteOperation.SearchType.FILE_SEARCH));
                         } else if (adapter instanceof LocalFileListAdapter) {
                             LocalFileListAdapter localFileListAdapter = (LocalFileListAdapter) adapter;
                             localFileListAdapter.filter(query);

File: src/main/java/com/owncloud/android/ui/fragment/PhotoFragment.java
Patch:
@@ -65,9 +65,7 @@ public PhotoFragment(boolean refresh) {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        searchEvent = new SearchEvent("image/%",
-                                      SearchRemoteOperation.SearchType.PHOTO_SEARCH,
-                                      SearchEvent.UnsetType.NO_UNSET);
+        searchEvent = new SearchEvent("image/%", SearchRemoteOperation.SearchType.PHOTO_SEARCH);
 
         searchRemoteOperation = new SearchRemoteOperation(searchEvent.getSearchQuery(),
                                                           searchEvent.getSearchType(),

File: src/main/java/com/owncloud/android/ui/dialog/ConfirmationDialogFragment.java
Patch:
@@ -32,7 +32,7 @@ public class ConfirmationDialogFragment extends DialogFragment {
 
     final static String ARG_MESSAGE_RESOURCE_ID = "resource_id";
     final static String ARG_MESSAGE_ARGUMENTS = "string_array";
-    private static final String ARG_TITLE_ID = "title_id";
+    final static String ARG_TITLE_ID = "title_id";
 
     final static String ARG_POSITIVE_BTN_RES = "positive_btn_res";
     final static String ARG_NEUTRAL_BTN_RES = "neutral_btn_res";

File: src/main/java/com/owncloud/android/ui/fragment/PhotoFragment.java
Patch:
@@ -65,9 +65,7 @@ public PhotoFragment(boolean refresh) {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        searchEvent = new SearchEvent("image/%",
-                                      SearchRemoteOperation.SearchType.PHOTO_SEARCH,
-                                      SearchEvent.UnsetType.NO_UNSET);
+        searchEvent = new SearchEvent("image/%", SearchRemoteOperation.SearchType.PHOTO_SEARCH);
 
         searchRemoteOperation = new SearchRemoteOperation(searchEvent.getSearchQuery(),
                                                           searchEvent.getSearchType(),

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1741,9 +1741,9 @@ private void syncAndCheckFiles(Collection<OCFile> files) {
         }
     }
 
-    private void showSpaceErrorDialog(OCFile file, long spaceAvailableOnDevice) {
+    private void showSpaceErrorDialog(OCFile file, long availableSpaceOnDevice) {
         SyncFileNotEnoughSpaceDialogFragment dialog =
-            SyncFileNotEnoughSpaceDialogFragment.newInstance(file, spaceAvailableOnDevice);
+            SyncFileNotEnoughSpaceDialogFragment.newInstance(file, availableSpaceOnDevice);
         dialog.setTargetFragment(this, NOT_ENOUGH_SPACE_FRAG_REQUEST_CODE);
 
         if (getFragmentManager() != null) {

File: src/main/java/com/owncloud/android/ui/dialog/SyncFileNotEnoughSpaceDialogFragment.java
Patch:
@@ -24,12 +24,14 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.storage.StorageManager;
+
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment.ConfirmationDialogFragmentListener;
 import com.owncloud.android.ui.fragment.OCFileListFragment;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.ThemeUtils;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
 import androidx.appcompat.app.AlertDialog;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1118,7 +1118,7 @@ public boolean onFileActionChosen(MenuItem item, Set<OCFile> checkedFiles) {
             }
             case R.id.action_download_file:
             case R.id.action_sync_file: {
-                this.syncAndCheckFiles(checkedFiles);
+                syncAndCheckFiles(checkedFiles);
                 exitSelectionMode();
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -336,6 +336,7 @@ private void stopAudio() {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
+        menu.removeItem(R.id.action_search);
         inflater.inflate(R.menu.item_file, menu);
     }
 

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -227,7 +227,7 @@ public User getUser() {
     public Optional<User> getUser(CharSequence accountName) {
         Account account = getAccountByName(accountName.toString());
         User user =  createUserFromAccount(account);
-        return Optional.of(user);
+        return Optional.ofNullable(user);
     }
 
     @Override

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -227,7 +227,7 @@ public User getUser() {
     public Optional<User> getUser(CharSequence accountName) {
         Account account = getAccountByName(accountName.toString());
         User user =  createUserFromAccount(account);
-        return Optional.of(user);
+        return Optional.ofNullable(user);
     }
 
     @Override

File: src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -414,10 +414,10 @@ public void setDarkThemeMode(DarkMode mode) {
     @Override
     public DarkMode getDarkThemeMode() {
         try {
-            return DarkMode.valueOf(preferences.getString(PREF__DARK_THEME, DarkMode.LIGHT.name()));
+            return DarkMode.valueOf(preferences.getString(PREF__DARK_THEME, DarkMode.SYSTEM.name()));
         } catch (ClassCastException e) {
-            preferences.edit().putString(PREF__DARK_THEME, DarkMode.LIGHT.name()).apply();
-            return DarkMode.DARK;
+            preferences.edit().putString(PREF__DARK_THEME, DarkMode.SYSTEM.name()).apply();
+            return DarkMode.SYSTEM;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -711,8 +711,8 @@ private void setupGeneralCategory(int accentColor) {
         themePref.setEntryValues(themeValues.toArray(new String[0]));
 
         if (TextUtils.isEmpty(themePref.getEntry())) {
-            themePref.setValue(DarkMode.LIGHT.name());
-            themePref.setSummary(TextUtils.isEmpty(themePref.getEntry()) ? DarkMode.LIGHT.name() : themePref.getEntry());
+            themePref.setValue(DarkMode.SYSTEM.name());
+            themePref.setSummary(TextUtils.isEmpty(themePref.getEntry()) ? DarkMode.SYSTEM.name() : themePref.getEntry());
         }
 
         themePref.setOnPreferenceChangeListener((preference, newValue) -> {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -808,7 +808,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
                                                                                                  url,
                                                                                                  requireContext());
                 } else {
-                    DisplayUtils.showSnackMessage(getView(), "Error");
+                    DisplayUtils.showSnackMessage(getView(), R.string.failed_to_start_editor);
                 }
             }).start();
             return true;

File: src/main/java/com/nextcloud/client/preferences/AppPreferencesImpl.java
Patch:
@@ -414,10 +414,10 @@ public void setDarkThemeMode(DarkMode mode) {
     @Override
     public DarkMode getDarkThemeMode() {
         try {
-            return DarkMode.valueOf(preferences.getString(PREF__DARK_THEME, DarkMode.LIGHT.name()));
+            return DarkMode.valueOf(preferences.getString(PREF__DARK_THEME, DarkMode.SYSTEM.name()));
         } catch (ClassCastException e) {
-            preferences.edit().putString(PREF__DARK_THEME, DarkMode.LIGHT.name()).apply();
-            return DarkMode.DARK;
+            preferences.edit().putString(PREF__DARK_THEME, DarkMode.SYSTEM.name()).apply();
+            return DarkMode.SYSTEM;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -711,8 +711,8 @@ private void setupGeneralCategory(int accentColor) {
         themePref.setEntryValues(themeValues.toArray(new String[0]));
 
         if (TextUtils.isEmpty(themePref.getEntry())) {
-            themePref.setValue(DarkMode.LIGHT.name());
-            themePref.setSummary(TextUtils.isEmpty(themePref.getEntry()) ? DarkMode.LIGHT.name() : themePref.getEntry());
+            themePref.setValue(DarkMode.SYSTEM.name());
+            themePref.setSummary(TextUtils.isEmpty(themePref.getEntry()) ? DarkMode.SYSTEM.name() : themePref.getEntry());
         }
 
         themePref.setOnPreferenceChangeListener((preference, newValue) -> {

File: src/main/java/com/owncloud/android/ui/activity/EditorWebView.java
Patch:
@@ -68,7 +68,7 @@ public abstract class EditorWebView extends ExternalSiteWebView {
     private static final String TAG = EditorWebView.class.getSimpleName();
 
     protected void loadUrl(String url) {
-        webview.loadUrl(url);
+        onUrlLoaded(url);
     }
 
     protected void hideLoading() {

File: src/main/java/com/owncloud/android/ui/activity/RichDocumentsEditorWebView.java
Patch:
@@ -251,7 +251,7 @@ private void downloadFile(Uri url) {
     }
 
     @Override
-    protected void loadUrl(String url) {
+    public void loadUrl(String url) {
         if (TextUtils.isEmpty(url)) {
             new RichDocumentsLoadUrlTask(this, getUser().get(), getFile()).execute();
         } else {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -329,7 +329,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             OCFileListHeaderViewHolder headerViewHolder = (OCFileListHeaderViewHolder) holder;
             String text = currentDirectory.getRichWorkspace();
 
-            PreviewTextFragment.setText(headerViewHolder.headerText, text, getItem(position), activity);
+            PreviewTextFragment.setText(headerViewHolder.headerText, text, null, activity, true, true);
             headerViewHolder.headerView.setOnClickListener(v -> ocFileListFragmentInterface.onHeaderClicked());
         } else {
             OCFileListGridImageViewHolder gridViewHolder = (OCFileListGridImageViewHolder) holder;

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -145,7 +145,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     void loadAndShowTextPreview() {
         if (mTextPreview != null) {
             mOriginalText = getFile().getRichWorkspace();
-            setText(mTextPreview, mOriginalText, getFile(), requireActivity(), true);
+            setText(mTextPreview, mOriginalText, getFile(), requireActivity(), true, false);
             mTextPreview.setVisibility(View.VISIBLE);
         }
 

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -329,7 +329,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             OCFileListHeaderViewHolder headerViewHolder = (OCFileListHeaderViewHolder) holder;
             String text = currentDirectory.getRichWorkspace();
 
-            PreviewTextFragment.setText(headerViewHolder.headerText, text, getItem(position), activity);
+            PreviewTextFragment.setText(headerViewHolder.headerText, text, null, activity, true, true);
             headerViewHolder.headerView.setOnClickListener(v -> ocFileListFragmentInterface.onHeaderClicked());
         } else {
             OCFileListGridImageViewHolder gridViewHolder = (OCFileListGridImageViewHolder) holder;

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextStringFragment.java
Patch:
@@ -145,7 +145,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     void loadAndShowTextPreview() {
         if (mTextPreview != null) {
             mOriginalText = getFile().getRichWorkspace();
-            setText(mTextPreview, mOriginalText, getFile(), requireActivity(), true);
+            setText(mTextPreview, mOriginalText, getFile(), requireActivity(), true, false);
             mTextPreview.setVisibility(View.VISIBLE);
         }
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -254,7 +254,7 @@ protected void setupDrawer() {
 
         setupDrawerToggle();
 
-        if(getSupportActionBar() != null) {
+        if (getSupportActionBar() != null) {
             getSupportActionBar().setDisplayHomeAsUpEnabled(true);
         }
     }
@@ -294,7 +294,7 @@ public void onDrawerOpened(View drawerView) {
         // Set the drawer toggle as the DrawerListener
         mDrawerLayout.addDrawerListener(mDrawerToggle);
         mDrawerToggle.setDrawerIndicatorEnabled(true);
-        mDrawerToggle.getDrawerArrowDrawable().setColor(ThemeUtils.fontColor(this));
+        mDrawerToggle.getDrawerArrowDrawable().setColor(ThemeUtils.fontColor(this, true));
     }
 
     /**
@@ -305,7 +305,7 @@ private void setupDrawerHeader() {
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 
         mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toggle);
-        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this));
+        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this, true));
 
         if (getResources().getBoolean(R.bool.allow_profile_click)) {
             mAccountChooserToggle.setImageResource(R.drawable.ic_down);

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -751,7 +751,7 @@ private void setupActionBar() {
             actionBar.setBackgroundDrawable(new ColorDrawable(ThemeUtils.primaryColor(this)));
 
             Drawable backArrow = getResources().getDrawable(R.drawable.ic_arrow_back);
-            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor(this)));
+            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor(this, true)));
         }
 
         Window window = getWindow();

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
      */
     protected void setupToolbar(boolean useBackgroundImage) {
         int primaryColor = ThemeUtils.primaryColor(this, false);
-        int fontColor = ThemeUtils.fontColor(this);
+        int fontColor = ThemeUtils.fontColor(this, true);
 
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -254,7 +254,7 @@ protected void setupDrawer() {
 
         setupDrawerToggle();
 
-        if(getSupportActionBar() != null) {
+        if (getSupportActionBar() != null) {
             getSupportActionBar().setDisplayHomeAsUpEnabled(true);
         }
     }
@@ -294,7 +294,7 @@ public void onDrawerOpened(View drawerView) {
         // Set the drawer toggle as the DrawerListener
         mDrawerLayout.addDrawerListener(mDrawerToggle);
         mDrawerToggle.setDrawerIndicatorEnabled(true);
-        mDrawerToggle.getDrawerArrowDrawable().setColor(ThemeUtils.fontColor(this));
+        mDrawerToggle.getDrawerArrowDrawable().setColor(ThemeUtils.fontColor(this, true));
     }
 
     /**
@@ -305,7 +305,7 @@ private void setupDrawerHeader() {
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 
         mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toggle);
-        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this));
+        mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor(this, true));
 
         if (getResources().getBoolean(R.bool.allow_profile_click)) {
             mAccountChooserToggle.setImageResource(R.drawable.ic_down);

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -751,7 +751,7 @@ private void setupActionBar() {
             actionBar.setBackgroundDrawable(new ColorDrawable(ThemeUtils.primaryColor(this)));
 
             Drawable backArrow = getResources().getDrawable(R.drawable.ic_arrow_back);
-            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor(this)));
+            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor(this, true)));
         }
 
         Window window = getWindow();

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
      */
     protected void setupToolbar(boolean useBackgroundImage) {
         int primaryColor = ThemeUtils.primaryColor(this, false);
-        int fontColor = ThemeUtils.fontColor(this);
+        int fontColor = ThemeUtils.fontColor(this, true);
 
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1041,9 +1041,6 @@ public boolean onFileActionChosen(MenuItem item, Set<OCFile> checkedFiles) {
                     return true;
                 }
                 case R.id.action_edit: {
-                    Account account = ((FileActivity) mContainerActivity).getUserAccountManager()
-                        .getUser().toPlatformAccount();
-
                     // should not be necessary, as menu item is filtered, but better play safe
                     if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                         if (FileMenuFilter.isEditorAvailable(requireContext().getContentResolver(),

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -235,9 +235,9 @@ protected String doInBackground(Void... voids) {
 
         @Override
         protected void onPostExecute(String url) {
-            ChooseTemplateDialogFragment fragment = chooseTemplateDialogFragmentWeakReference.get();
+            final ChooseTemplateDialogFragment fragment = chooseTemplateDialogFragmentWeakReference.get();
 
-            if (fragment != null) {
+            if (fragment != null && fragment.isAdded()) {
                 if (url.isEmpty()) {
                     DisplayUtils.showSnackMessage(fragment.listView, "Error creating file from template");
                 } else {
@@ -247,7 +247,6 @@ protected void onPostExecute(String url) {
                     collaboraWebViewIntent.putExtra(ExternalSiteWebView.EXTRA_SHOW_SIDEBAR, false);
                     collaboraWebViewIntent.putExtra(ExternalSiteWebView.EXTRA_TEMPLATE, Parcels.wrap(template));
                     fragment.startActivity(collaboraWebViewIntent);
-
                     fragment.dismiss();
                 }
             } else {

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -325,7 +325,8 @@ public void resetOwnCloudAccount() {
 
     @Override
     public  boolean accountOwnsFile(OCFile file, Account account) {
-        return !TextUtils.isEmpty(file.getOwnerId()) && account.name.split("@")[0].equals(file.getOwnerId());
+        final String ownerId = file.getOwnerId();
+        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equals(ownerId);
     }
 
     public boolean migrateUserId() {

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -305,7 +305,7 @@ private OCUpload[] getUploads(@Nullable String selection, @Nullable String... se
                     } else {
                         list[c.getPosition()] = upload;
                     }
-                } while (c.moveToNext());
+                } while (c.moveToNext() && !c.isAfterLast());
             }
             c.close();
         } else {

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -573,6 +573,8 @@ public void deleteDocument(String documentId) throws FileNotFoundException {
         }
 
         Document document = toDocument(documentId);
+        // get parent here, because it is not available anymore after the document was deleted
+        Document parentFolder = document.getParent();
 
         recursiveRevokePermission(document);
 
@@ -583,8 +585,6 @@ public void deleteDocument(String documentId) throws FileNotFoundException {
         if (!result.isSuccess()) {
             throw new FileNotFoundException("Failed to delete document with documentId " + documentId);
         }
-
-        Document parentFolder = document.getParent();
         context.getContentResolver().notifyChange(toNotifyUri(parentFolder), null, false);
     }
 

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -325,7 +325,8 @@ public void resetOwnCloudAccount() {
 
     @Override
     public  boolean accountOwnsFile(OCFile file, Account account) {
-        return !TextUtils.isEmpty(file.getOwnerId()) && account.name.split("@")[0].equals(file.getOwnerId());
+        final String ownerId = file.getOwnerId();
+        return TextUtils.isEmpty(ownerId) || account.name.split("@")[0].equals(ownerId);
     }
 
     public boolean migrateUserId() {

File: src/main/java/com/owncloud/android/ui/dialog/ChooseTemplateDialogFragment.java
Patch:
@@ -235,9 +235,9 @@ protected String doInBackground(Void... voids) {
 
         @Override
         protected void onPostExecute(String url) {
-            ChooseTemplateDialogFragment fragment = chooseTemplateDialogFragmentWeakReference.get();
+            final ChooseTemplateDialogFragment fragment = chooseTemplateDialogFragmentWeakReference.get();
 
-            if (fragment != null) {
+            if (fragment != null && fragment.isAdded()) {
                 if (url.isEmpty()) {
                     DisplayUtils.showSnackMessage(fragment.listView, "Error creating file from template");
                 } else {
@@ -247,7 +247,6 @@ protected void onPostExecute(String url) {
                     collaboraWebViewIntent.putExtra(ExternalSiteWebView.EXTRA_SHOW_SIDEBAR, false);
                     collaboraWebViewIntent.putExtra(ExternalSiteWebView.EXTRA_TEMPLATE, Parcels.wrap(template));
                     fragment.startActivity(collaboraWebViewIntent);
-
                     fragment.dismiss();
                 }
             } else {

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -39,7 +39,6 @@
 import com.google.gson.JsonSyntaxException;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
-import com.owncloud.android.lib.common.DirectEditing;
 import com.owncloud.android.lib.common.network.WebdavEntry;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.utils.Log_OC;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -100,7 +100,6 @@
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 import org.greenrobot.eventbus.ThreadMode;
-import org.jetbrains.annotations.NotNull;
 import org.parceler.Parcels;
 
 import java.io.File;

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -695,7 +695,7 @@ private void setupGeneralCategory(int accentColor) {
 
         loadStoragePath();
 
-        ListPreference themePref = (ListPreference) findPreference("darkTheme");
+        ListPreference themePref = (ListPreference) findPreference("darkMode");
 
         List<String> themeEntries = new ArrayList<>(3);
         themeEntries.add(getString(R.string.prefs_value_theme_light));

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -695,7 +695,7 @@ private void setupGeneralCategory(int accentColor) {
 
         loadStoragePath();
 
-        ListPreference themePref = (ListPreference) findPreference("darkTheme");
+        ListPreference themePref = (ListPreference) findPreference("darkMode");
 
         List<String> themeEntries = new ArrayList<>(3);
         themeEntries.add(getString(R.string.prefs_value_theme_light));

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -386,12 +386,10 @@ private void backToDisplayActivity() {
     @SuppressFBWarnings("DLS")
     @Override
     public void showDetails(OCFile file) {
-        final User currentUser = getUserAccountManager().getUser();
         final Intent showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         showDetailsIntent.setAction(FileDisplayActivity.ACTION_DETAILS);
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, file);
-        showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, currentUser.toPlatformAccount());
-        showDetailsIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+        showDetailsIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
         startActivity(showDetailsIntent);
         finish();
     }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -334,7 +334,7 @@ public void run() {
                 if (activity instanceof FileDisplayActivity) {
                     FileDisplayActivity fileDisplayActivity = (FileDisplayActivity) activity;
                     fileDisplayActivity.resetSearchView();
-                    fileDisplayActivity.refreshListOfFilesFragment(true);
+                    fileDisplayActivity.updateListOfFilesFragment(true);
                 } else if (activity instanceof UploadFilesActivity) {
                     LocalFileListAdapter localFileListAdapter = (LocalFileListAdapter) adapter;
                     localFileListAdapter.filter(query);

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -336,7 +336,8 @@ private boolean optionsItemSelected(Menu menu, MenuItem item, AppCompatCheckBox
                 return true;
             }
             case R.id.action_expiration_date: {
-                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment.newInstance(share, -1);
+                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment
+                    .newInstance(share, share.getExpirationDate());
                 dialog.show(fragmentManager, ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG);
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -461,7 +461,8 @@ private boolean optionsItemSelected(MenuItem item) {
                 return true;
             }
             case R.id.action_share_expiration_date: {
-                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment.newInstance(file, -1);
+                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment
+                    .newInstance(file, publicShare.getExpirationDate());
                 dialog.show(
                     fileDisplayActivity.getSupportFragmentManager(),
                         ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -336,7 +336,8 @@ private boolean optionsItemSelected(Menu menu, MenuItem item, AppCompatCheckBox
                 return true;
             }
             case R.id.action_expiration_date: {
-                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment.newInstance(share, share.getExpirationDate());
+                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment
+                    .newInstance(share, share.getExpirationDate());
                 dialog.show(fragmentManager, ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG);
                 return true;
             }

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -125,7 +125,7 @@ public void onActivityStopped(Activity activity) {
     }
 
     private boolean passCodeShouldBeRequested(Long timestamp) {
-        return (System.currentTimeMillis() - timestamp) > PASS_CODE_TIMEOUT &&
+        return (SystemClock.elapsedRealtime() - timestamp) > PASS_CODE_TIMEOUT &&
             visibleActivitiesCounter <= 0 && isPassCodeEnabled();
     }
 
@@ -134,7 +134,7 @@ private boolean isPassCodeEnabled() {
     }
 
     private boolean deviceCredentialsShouldBeRequested(Long timestamp, Activity activity) {
-        return (System.currentTimeMillis() - timestamp) > PASS_CODE_TIMEOUT && visibleActivitiesCounter <= 0 &&
+        return (SystemClock.elapsedRealtime() - timestamp) > PASS_CODE_TIMEOUT && visibleActivitiesCounter <= 0 &&
             deviceCredentialsAreEnabled(activity);
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -461,7 +461,7 @@ private MainViewHolder(View itemView) {
     private void setSyncButtonActiveIcon(ImageButton syncStatusButton, boolean enabled) {
         if (enabled) {
             syncStatusButton.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_cloud_sync_on,
-                    ThemeUtils.primaryColor(context)));
+                                                                      ThemeUtils.primaryColor(context, true)));
         } else {
             syncStatusButton.setImageResource(R.drawable.ic_cloud_sync_off);
         }

File: src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -461,7 +461,7 @@ private MainViewHolder(View itemView) {
     private void setSyncButtonActiveIcon(ImageButton syncStatusButton, boolean enabled) {
         if (enabled) {
             syncStatusButton.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_cloud_sync_on,
-                    ThemeUtils.primaryColor(context)));
+                                                                      ThemeUtils.primaryColor(context, true)));
         } else {
             syncStatusButton.setImageResource(R.drawable.ic_cloud_sync_off);
         }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -461,7 +461,7 @@ private boolean optionsItemSelected(MenuItem item) {
                 return true;
             }
             case R.id.action_share_expiration_date: {
-                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment.newInstance(file, -1);
+                ExpirationDatePickerDialogFragment dialog = ExpirationDatePickerDialogFragment.newInstance(file, publicShare.getExpirationDate());
                 dialog.show(
                     fileDisplayActivity.getSupportFragmentManager(),
                         ExpirationDatePickerDialogFragment.DATE_PICKER_DIALOG

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -1293,7 +1293,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
             // current account has changed
             if (data.getBooleanExtra(ManageAccountsActivity.KEY_CURRENT_ACCOUNT_CHANGED, false)) {
-                setAccount(accountManager.getCurrentAccount());
+                setAccount(accountManager.getCurrentAccount(), false);
                 updateAccountList();
                 restart();
             } else {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2621,7 +2621,8 @@ private void handleOpenFileViaIntent(Intent intent) {
                 return;
             }
 
-            setAccount(newAccount);
+            setAccount(newAccount, false);
+            updateAccountList();
         }
 
         String fileId = String.valueOf(intent.getStringExtra(KEY_FILE_ID));

File: src/main/java/com/owncloud/android/ui/activity/NotificationsActivity.java
Patch:
@@ -127,7 +127,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
             if (account != null && (currentAccount == null || !account.equalsIgnoreCase(currentAccount.name))) {
                 accountManager.setCurrentOwnCloudAccount(account);
-                setAccount(getUserAccountManager().getCurrentAccount());
+                setAccount(getUserAccountManager().getCurrentAccount(), false);
                 currentAccount = getAccount();
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -208,8 +208,6 @@ protected void setAccount(Account account, boolean savedAccount) {
             Log_OC.i(TAG, "No ownCloud account is available");
             DialogNoAccount dialog = new DialogNoAccount();
             dialog.show(getSupportFragmentManager(), null);
-        } else if (!savedAccount) {
-            setAccount(accounts[0]);
         }
 
         if (!somethingToUpload()) {
@@ -680,7 +678,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                 // there is no need for checking for is there more then one
                 // account at this point
                 // since account setup can set only one account at time
-                setAccount(accounts[0]);
+                setAccount(accounts[0], false);
                 populateDirectoryList();
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -132,7 +132,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
             if (account != null && currentAccount != null && !account.equalsIgnoreCase(currentAccount.name)) {
                 accountManager.setCurrentOwnCloudAccount(account);
-                setAccount(getUserAccountManager().getCurrentAccount());
+                setAccount(getUserAccountManager().getCurrentAccount(), false);
             }
 
             path = getIntent().getStringExtra(MediaFoldersDetectionJob.KEY_MEDIA_FOLDER_PATH);

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -135,9 +135,6 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.user_info_layout);
         unbinder = ButterKnife.bind(this);
 
-        setAccount(getUserAccountManager().getCurrentAccount());
-        onAccountSet();
-
         boolean useBackgroundImage = URLUtil.isValidUrl(
                 getStorageManager().getCapability(account.name).getServerBackground());
 

File: src/main/java/com/owncloud/android/ui/dialog/ExpirationDatePickerDialogFragment.java
Patch:
@@ -142,9 +142,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 });
 
         dialog.show();
-        dialog.getButton(DatePickerDialog.BUTTON_NEUTRAL).setTextColor(ThemeUtils.primaryColor(getContext()));
-        dialog.getButton(DatePickerDialog.BUTTON_NEGATIVE).setTextColor(ThemeUtils.primaryColor(getContext()));
-        dialog.getButton(DatePickerDialog.BUTTON_POSITIVE).setTextColor(ThemeUtils.primaryColor(getContext()));
+        dialog.getButton(DatePickerDialog.BUTTON_NEUTRAL).setTextColor(ThemeUtils.primaryColor(getContext(), true));
+        dialog.getButton(DatePickerDialog.BUTTON_NEGATIVE).setTextColor(ThemeUtils.primaryColor(getContext(), true));
+        dialog.getButton(DatePickerDialog.BUTTON_POSITIVE).setTextColor(ThemeUtils.primaryColor(getContext(), true));
 
         // Prevent days in the past may be chosen
         DatePicker picker = dialog.getDatePicker();

File: src/main/java/com/owncloud/android/ui/dialog/ExpirationDatePickerDialogFragment.java
Patch:
@@ -142,9 +142,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 });
 
         dialog.show();
-        dialog.getButton(DatePickerDialog.BUTTON_NEUTRAL).setTextColor(ThemeUtils.primaryColor(getContext()));
-        dialog.getButton(DatePickerDialog.BUTTON_NEGATIVE).setTextColor(ThemeUtils.primaryColor(getContext()));
-        dialog.getButton(DatePickerDialog.BUTTON_POSITIVE).setTextColor(ThemeUtils.primaryColor(getContext()));
+        dialog.getButton(DatePickerDialog.BUTTON_NEUTRAL).setTextColor(ThemeUtils.primaryColor(getContext(), true));
+        dialog.getButton(DatePickerDialog.BUTTON_NEGATIVE).setTextColor(ThemeUtils.primaryColor(getContext(), true));
+        dialog.getButton(DatePickerDialog.BUTTON_POSITIVE).setTextColor(ThemeUtils.primaryColor(getContext(), true));
 
         // Prevent days in the past may be chosen
         DatePicker picker = dialog.getDatePicker();

File: src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -94,7 +94,7 @@ protected void onCreate(Bundle savedInstanceState) {
         });
 
         Button providerButton = findViewById(R.id.signup);
-        providerButton.setBackgroundColor(getResources().getColor(R.color.primary_dark));
+        providerButton.setBackgroundColor(getResources().getColor(R.color.primary));
         providerButton.setTextColor(getResources().getColor(R.color.login_text_color));
         providerButton.setVisibility(isProviderOrOwnInstallationVisible ? View.VISIBLE : View.GONE);
         providerButton.setOnClickListener(v -> {

File: src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -94,7 +94,7 @@ protected void onCreate(Bundle savedInstanceState) {
         });
 
         Button providerButton = findViewById(R.id.signup);
-        providerButton.setBackgroundColor(getResources().getColor(R.color.primary_dark));
+        providerButton.setBackgroundColor(getResources().getColor(R.color.primary));
         providerButton.setTextColor(getResources().getColor(R.color.login_text_color));
         providerButton.setVisibility(isProviderOrOwnInstallationVisible ? View.VISIBLE : View.GONE);
         providerButton.setOnClickListener(v -> {

File: src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -80,7 +80,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setSlideshowSize(getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE);
 
         Button loginButton = findViewById(R.id.login);
-        loginButton.setBackgroundColor(getResources().getColor(R.color.bg_default));
+        loginButton.setBackgroundColor(getResources().getColor(R.color.login_btn_tint));
         loginButton.setTextColor(getResources().getColor(R.color.primary));
 
         loginButton.setOnClickListener(v -> {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -407,7 +407,9 @@ private void initWebViewLogin(String baseURL, boolean showLegacyLogin, boolean u
             new Handler().postDelayed(() -> DisplayUtils.createSnackbar(mLoginWebView,
                                                                         R.string.fallback_weblogin_text,
                                                                         Snackbar.LENGTH_INDEFINITE)
-                .setActionTextColor(getResources().getColor(R.color.fg_inverse))
+                .setActionTextColor(getResources().getColor(R.color.themed_fg))
+                .setBackgroundTint(getResources().getColor(R.color.themed_bg))
+                .setTextColor(getResources().getColor(R.color.themed_fg))
                 .setAction(R.string.fallback_weblogin_back, v -> {
                     mLoginWebView.setVisibility(View.INVISIBLE);
                     webViewLoginMethod = false;

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -96,7 +96,7 @@
  *
  * It proxies the necessary calls via {@link androidx.appcompat.app.AppCompatDelegate} to be used with AppCompat.
  */
-public class SettingsActivity extends PreferenceActivity
+public class SettingsActivity extends ThemedPreferenceActivity
     implements StorageMigration.StorageMigrationProgressListener, LoadingVersionNumberTask.VersionDevInterface,
     Injectable {
 
@@ -699,8 +699,7 @@ private void setupGeneralCategory(int accentColor) {
                             getString(R.string.prefs_value_theme_dark) : getString(R.string.prefs_value_theme_light));
         themePref.setOnPreferenceChangeListener((preference, newValue) -> {
             MainApp.setAppTheme((Boolean) newValue);
-            getDelegate().applyDayNight();
-            recreate();
+//            recreate();
 
             return true;
         });

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -509,7 +509,7 @@ public static void themeEditText(Context context, EditText editText, boolean the
             }
         }
 
-        editText.setHintTextColor(color);
+//        editText.setHintTextColor(color);
         editText.setTextColor(color);
         editText.setHighlightColor(context.getResources().getColor(R.color.fg_contrast));
         setEditTextCursorColor(editText, color);

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -23,7 +23,6 @@
 package com.owncloud.android.ui.activity;
 
 import android.content.Intent;
-import android.graphics.PorterDuff;
 import android.os.Bundle;
 import android.text.Editable;
 import android.text.TextUtils;
@@ -97,7 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {
         int elementColor = ThemeUtils.elementColor(this);
 
         mBCancel = findViewById(R.id.cancel);
-        mBCancel.getBackground().setColorFilter(elementColor, PorterDuff.Mode.SRC_ATOP);
+        mBCancel.setBackgroundColor(ThemeUtils.primaryColor(this));
 
         mPassCodeHdr = findViewById(R.id.header);
         mPassCodeHdrExplanation = findViewById(R.id.explanation);

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -400,6 +400,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
             final EditText userInput = view.findViewById(R.id.user_input);
             setFilename(userInput, selectPos);
+            userInput.setHighlightColor(ThemeUtils.primaryColor(getContext()));
             userInput.requestFocus();
 
             final Spinner spinner = view.findViewById(R.id.file_type);

File: src/main/java/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -99,6 +99,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         inputText.setText("");
         inputText.requestFocus();
         inputText.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        inputText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
 
         // Build the dialog
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

File: src/main/java/com/owncloud/android/ui/dialog/NoteDialogFragment.java
Patch:
@@ -109,6 +109,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         // Setup layout
         noteEditText.setText(share.getNote());
+        noteEditText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
         noteEditText.requestFocus();
         ThemeUtils.colorTextInputLayout(noteEditTextInputLayout, accentColor);
 

File: src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -102,6 +102,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         // Setup layout
         String currentName = mTargetFile.getFileName();
         EditText inputText = v.findViewById(R.id.user_input);
+        inputText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
         inputText.setText(currentName);
         ThemeUtils.themeEditText(getContext(), inputText, false);
         int selectionStart = 0;

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -179,10 +179,10 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         int accentColor = ThemeUtils.primaryAccentColor(getContext());
         int fontColor = ThemeUtils.fontColor(getContext());
 
-        backupNow.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        backupNow.setBackgroundColor(ThemeUtils.primaryColor(getActivity()));
         backupNow.setTextColor(fontColor);
 
-        contactsDatePickerBtn.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        contactsDatePickerBtn.setBackgroundColor(ThemeUtils.primaryColor(getActivity()));
         contactsDatePickerBtn.setTextColor(fontColor);
 
         MaterialButton chooseDate = view.findViewById(R.id.contacts_datepicker);

File: src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -300,4 +300,6 @@ public interface AppPreferences {
     boolean isPowerCheckDisabled();
 
     void setPowerCheckDisabled(boolean value);
+
+    boolean getTheme();
 }

File: src/main/java/com/owncloud/android/ui/activity/SsoGrantPermissionActivity.java
Patch:
@@ -144,7 +144,8 @@ private SpannableStringBuilder makeSpecialPartsBold(String text, String... toBeS
             int start = text.indexOf(textBlock);
             int end = start + textBlock.length();
             ssb.setSpan(new StyleSpan(Typeface.BOLD), start, end, 0);
-            ssb.setSpan(new ForegroundColorSpan(Color.BLACK), start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+            ssb.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.textColor)), start, end,
+                                                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
         }
 
         return ssb;

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -369,7 +369,8 @@ public void updateDrawState(@NonNull TextPaint ds) {
                     }
                 }, idx1, idx2, 0);
                 ssb.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), idx1, idx2, 0);
-                ssb.setSpan(new ForegroundColorSpan(Color.BLACK), idx1, idx2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+                ssb.setSpan(new ForegroundColorSpan(context.getResources().getColor(R.color.textColor)),
+                            idx1, idx2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
             }
             idx1 = text.indexOf('{', idx2);
         }

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -156,7 +156,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     gridViewHolder.checkbox.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_checkbox_marked,
                             ThemeUtils.primaryColor(mContext)));
                 } else {
-                    gridViewHolder.itemLayout.setBackgroundColor(Color.WHITE);
+                    gridViewHolder.itemLayout.setBackgroundColor(mContext.getResources().getColor(R.color.background_color));
                     gridViewHolder.checkbox.setImageResource(R.drawable.ic_checkbox_blank_outline);
                 }
 

File: src/main/java/com/owncloud/android/ui/adapter/NotificationListAdapter.java
Patch:
@@ -77,7 +77,7 @@
 public class NotificationListAdapter extends RecyclerView.Adapter<NotificationListAdapter.NotificationViewHolder> {
     private static final String FILE = "file";
     private StyleSpan styleSpanBold = new StyleSpan(Typeface.BOLD);
-    private ForegroundColorSpan foregroundColorSpanBlack = new ForegroundColorSpan(Color.BLACK);
+    private ForegroundColorSpan foregroundColorSpanBlack;
 
     private List<Notification> notificationsList;
     private OwnCloudClient client;
@@ -87,6 +87,7 @@ public NotificationListAdapter(OwnCloudClient client, NotificationsActivity noti
         this.notificationsList = new ArrayList<>();
         this.client = client;
         this.notificationsActivity = notificationsActivity;
+        foregroundColorSpanBlack = new ForegroundColorSpan(notificationsActivity.getResources().getColor(R.color.textColor));
     }
 
     public void setNotificationItems(List<Notification> notificationItems) {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -330,7 +330,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 gridViewHolder.checkbox.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_checkbox_marked,
                                                                                  ThemeUtils.primaryColor(mContext)));
             } else {
-                gridViewHolder.itemLayout.setBackgroundColor(Color.WHITE);
+                gridViewHolder.itemLayout.setBackgroundColor(mContext.getResources().getColor(R.color.background_color));
                 gridViewHolder.checkbox.setImageResource(R.drawable.ic_checkbox_blank_outline);
             }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -240,7 +240,7 @@ private void activatePreviewImage() {
         if (activity != null) {
             activity.setPreviewImageVisibility(View.VISIBLE);
             activity.setProgressBarVisibility(View.GONE);
-            ThemeUtils.setStatusBarColor(activity, activity.getResources().getColor(R.color.black));
+            ThemeUtils.setStatusBarColor(activity, activity.getResources().getColor(R.color.background_color_inverse));
             if (activity.getSupportActionBar() != null) {
                 activity.getSupportActionBar().setTitle(null);
                 activity.getSupportActionBar().setBackgroundDrawable(null);

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -524,7 +524,7 @@ private String createFile(Document targetFolder, String displayName) throws File
                                                                      newFilePath,
                                                                      null,
                                                                      "",
-                                                                     String.valueOf(System.currentTimeMillis()))
+                                                                     String.valueOf(System.currentTimeMillis() / 1000))
             .execute(client);
 
         if (!result.isSuccess()) {

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -111,6 +111,7 @@ public class DocumentsStorageProvider extends DocumentsProvider {
     UserAccountManager accountManager;
 
     private static final String DOCUMENTID_SEPARATOR = "/";
+    private static final int DOCUMENTID_PARTS = 2;
     private final SparseArray<FileDataStorageManager> rootIdToStorageManager = new SparseArray<>();
 
     private final Executor executor = Executors.newCachedThreadPool();
@@ -705,8 +706,8 @@ private Uri toNotifyUri(Document document) {
     }
 
     private Document toDocument(String documentId) {
-        String[] separated = documentId.split(DOCUMENTID_SEPARATOR, 2);
-        if (separated.length != 2) {
+        String[] separated = documentId.split(DOCUMENTID_SEPARATOR, DOCUMENTID_PARTS);
+        if (separated.length != DOCUMENTID_PARTS) {
             return null;
         }
 

File: src/main/java/com/owncloud/android/ui/fragment/PhotoFragment.java
Patch:
@@ -53,10 +53,10 @@ public class PhotoFragment extends OCFileListFragment {
     private SearchRemoteOperation searchRemoteOperation;
     private AsyncTask photoSearchTask;
     private SearchEvent searchEvent;
-    private boolean refresh = false;
+    private boolean refresh;
 
     public PhotoFragment() {
-
+        this.refresh = false;
     }
 
     public PhotoFragment(boolean refresh) {

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -219,7 +219,7 @@ protected void attachBaseContext(Context base) {
         final boolean isCrashReportingProcess = getAppProcessName().endsWith(":crash");
         final boolean useExceptionHandler = !appInfo.isDebugBuild();
 
-        if (!isCrashReportingProcess && useExceptionHandler) {
+        if (!isCrashReportingProcess) {
             Thread.UncaughtExceptionHandler defaultPlatformHandler = Thread.getDefaultUncaughtExceptionHandler();
             final ExceptionHandler crashReporter = new ExceptionHandler(this,
                                                                         defaultPlatformHandler);

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -291,7 +291,6 @@ public void onDrawerOpened(View drawerView) {
      * initializes and sets up the drawer header.
      */
     private void setupDrawerHeader() {
-        mIsAccountChooserActive = false;
         mAccountMiddleAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_middle);
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -291,7 +291,6 @@ public void onDrawerOpened(View drawerView) {
      * initializes and sets up the drawer header.
      */
     private void setupDrawerHeader() {
-        mIsAccountChooserActive = false;
         mAccountMiddleAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_middle);
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -189,7 +189,7 @@ public SyncedFolder findByLocalPathAndAccount(String localPath, Account account)
         Cursor cursor = mContentResolver.query(
             ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
             null,
-            ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + "LIKE ? AND " +
+            ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + " LIKE ? AND " +
                 ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ACCOUNT + " =? ",
             new String[]{localPath + "%", account.name},
             null

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -189,7 +189,7 @@ public SyncedFolder findByLocalPathAndAccount(String localPath, Account account)
         Cursor cursor = mContentResolver.query(
             ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
             null,
-            ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + "LIKE ? AND " +
+            ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + " LIKE ? AND " +
                 ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ACCOUNT + " =? ",
             new String[]{localPath + "%", account.name},
             null

File: src/main/java/com/nextcloud/client/onboarding/FirstRunActivity.java
Patch:
@@ -80,7 +80,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setSlideshowSize(getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE);
 
         Button loginButton = findViewById(R.id.login);
-        loginButton.setBackgroundColor(getResources().getColor(R.color.bg_default));
+        loginButton.setBackgroundColor(getResources().getColor(R.color.login_btn_tint));
         loginButton.setTextColor(getResources().getColor(R.color.primary));
 
         loginButton.setOnClickListener(v -> {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -410,7 +410,9 @@ private void initWebViewLogin(String baseURL, boolean showLegacyLogin, boolean u
             new Handler().postDelayed(() -> DisplayUtils.createSnackbar(mLoginWebView,
                                                                         R.string.fallback_weblogin_text,
                                                                         Snackbar.LENGTH_INDEFINITE)
-                .setActionTextColor(getResources().getColor(R.color.fg_inverse))
+                .setActionTextColor(getResources().getColor(R.color.themed_fg))
+                .setBackgroundTint(getResources().getColor(R.color.themed_bg))
+                .setTextColor(getResources().getColor(R.color.themed_fg))
                 .setAction(R.string.fallback_weblogin_back, v -> {
                     mLoginWebView.setVisibility(View.INVISIBLE);
                     webViewLoginMethod = false;

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -95,7 +95,7 @@
  *
  * It proxies the necessary calls via {@link androidx.appcompat.app.AppCompatDelegate} to be used with AppCompat.
  */
-public class SettingsActivity extends PreferenceActivity
+public class SettingsActivity extends ThemedPreferenceActivity
     implements StorageMigration.StorageMigrationProgressListener, LoadingVersionNumberTask.VersionDevInterface,
     Injectable {
 
@@ -697,8 +697,7 @@ private void setupGeneralCategory(int accentColor) {
                             getString(R.string.prefs_value_theme_dark) : getString(R.string.prefs_value_theme_light));
         themePref.setOnPreferenceChangeListener((preference, newValue) -> {
             MainApp.setAppTheme((Boolean) newValue);
-            getDelegate().applyDayNight();
-            recreate();
+//            recreate();
 
             return true;
         });

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -509,7 +509,7 @@ public static void themeEditText(Context context, EditText editText, boolean the
             }
         }
 
-        editText.setHintTextColor(color);
+//        editText.setHintTextColor(color);
         editText.setTextColor(color);
         editText.setHighlightColor(context.getResources().getColor(R.color.fg_contrast));
         setEditTextCursorColor(editText, color);

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -56,7 +56,6 @@
 import com.nextcloud.client.account.UserAccountManager;
 import com.nextcloud.client.di.Injectable;
 import com.nextcloud.client.preferences.AppPreferences;
-import com.nextcloud.client.preferences.PreferenceManager;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -23,7 +23,6 @@
 package com.owncloud.android.ui.activity;
 
 import android.content.Intent;
-import android.graphics.PorterDuff;
 import android.os.Bundle;
 import android.text.Editable;
 import android.text.TextUtils;
@@ -97,7 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {
         int elementColor = ThemeUtils.elementColor(this);
 
         mBCancel = findViewById(R.id.cancel);
-        mBCancel.getBackground().setColorFilter(elementColor, PorterDuff.Mode.SRC_ATOP);
+        mBCancel.setBackgroundColor(ThemeUtils.primaryColor(this));
 
         mPassCodeHdr = findViewById(R.id.header);
         mPassCodeHdrExplanation = findViewById(R.id.explanation);

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -399,6 +399,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
             final EditText userInput = view.findViewById(R.id.user_input);
             setFilename(userInput, selectPos);
+            userInput.setHighlightColor(ThemeUtils.primaryColor(getContext()));
             userInput.requestFocus();
 
             final Spinner spinner = view.findViewById(R.id.file_type);

File: src/main/java/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -99,6 +99,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         inputText.setText("");
         inputText.requestFocus();
         inputText.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        inputText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
 
         // Build the dialog
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

File: src/main/java/com/owncloud/android/ui/dialog/NoteDialogFragment.java
Patch:
@@ -109,6 +109,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         // Setup layout
         noteEditText.setText(share.getNote());
+        noteEditText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
         noteEditText.requestFocus();
         ThemeUtils.colorTextInputLayout(noteEditTextInputLayout, accentColor);
 

File: src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -102,6 +102,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         // Setup layout
         String currentName = mTargetFile.getFileName();
         EditText inputText = v.findViewById(R.id.user_input);
+        inputText.setHighlightColor(ThemeUtils.primaryColor(getActivity()));
         inputText.setText(currentName);
         ThemeUtils.themeEditText(getContext(), inputText, false);
         int selectionStart = 0;

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -179,10 +179,10 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         int accentColor = ThemeUtils.primaryAccentColor(getContext());
         int fontColor = ThemeUtils.fontColor(getContext());
 
-        backupNow.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        backupNow.setBackgroundColor(ThemeUtils.primaryColor(getActivity()));
         backupNow.setTextColor(fontColor);
 
-        contactsDatePickerBtn.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
+        contactsDatePickerBtn.setBackgroundColor(ThemeUtils.primaryColor(getActivity()));
         contactsDatePickerBtn.setTextColor(fontColor);
 
         MaterialButton chooseDate = view.findViewById(R.id.contacts_datepicker);

File: src/main/java/com/nextcloud/client/preferences/AppPreferences.java
Patch:
@@ -300,4 +300,6 @@ public interface AppPreferences {
     boolean isPowerCheckDisabled();
 
     void setPowerCheckDisabled(boolean value);
+
+    boolean getTheme();
 }

File: src/main/java/com/owncloud/android/ui/activity/SsoGrantPermissionActivity.java
Patch:
@@ -144,7 +144,8 @@ private SpannableStringBuilder makeSpecialPartsBold(String text, String... toBeS
             int start = text.indexOf(textBlock);
             int end = start + textBlock.length();
             ssb.setSpan(new StyleSpan(Typeface.BOLD), start, end, 0);
-            ssb.setSpan(new ForegroundColorSpan(Color.BLACK), start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+            ssb.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.textColor)), start, end,
+                                                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
         }
 
         return ssb;

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -369,7 +369,8 @@ public void updateDrawState(@NonNull TextPaint ds) {
                     }
                 }, idx1, idx2, 0);
                 ssb.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), idx1, idx2, 0);
-                ssb.setSpan(new ForegroundColorSpan(Color.BLACK), idx1, idx2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+                ssb.setSpan(new ForegroundColorSpan(context.getResources().getColor(R.color.textColor)),
+                            idx1, idx2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
             }
             idx1 = text.indexOf('{', idx2);
         }

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -156,7 +156,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     gridViewHolder.checkbox.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_checkbox_marked,
                             ThemeUtils.primaryColor(mContext)));
                 } else {
-                    gridViewHolder.itemLayout.setBackgroundColor(Color.WHITE);
+                    gridViewHolder.itemLayout.setBackgroundColor(mContext.getResources().getColor(R.color.background_color));
                     gridViewHolder.checkbox.setImageResource(R.drawable.ic_checkbox_blank_outline);
                 }
 

File: src/main/java/com/owncloud/android/ui/adapter/NotificationListAdapter.java
Patch:
@@ -77,7 +77,7 @@
 public class NotificationListAdapter extends RecyclerView.Adapter<NotificationListAdapter.NotificationViewHolder> {
     private static final String FILE = "file";
     private StyleSpan styleSpanBold = new StyleSpan(Typeface.BOLD);
-    private ForegroundColorSpan foregroundColorSpanBlack = new ForegroundColorSpan(Color.BLACK);
+    private ForegroundColorSpan foregroundColorSpanBlack;
 
     private List<Notification> notificationsList;
     private OwnCloudClient client;
@@ -87,6 +87,7 @@ public NotificationListAdapter(OwnCloudClient client, NotificationsActivity noti
         this.notificationsList = new ArrayList<>();
         this.client = client;
         this.notificationsActivity = notificationsActivity;
+        foregroundColorSpanBlack = new ForegroundColorSpan(notificationsActivity.getResources().getColor(R.color.textColor));
     }
 
     public void setNotificationItems(List<Notification> notificationItems) {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -330,7 +330,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 gridViewHolder.checkbox.setImageDrawable(ThemeUtils.tintDrawable(R.drawable.ic_checkbox_marked,
                                                                                  ThemeUtils.primaryColor(mContext)));
             } else {
-                gridViewHolder.itemLayout.setBackgroundColor(Color.WHITE);
+                gridViewHolder.itemLayout.setBackgroundColor(mContext.getResources().getColor(R.color.background_color));
                 gridViewHolder.checkbox.setImageResource(R.drawable.ic_checkbox_blank_outline);
             }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -240,7 +240,7 @@ private void activatePreviewImage() {
         if (activity != null) {
             activity.setPreviewImageVisibility(View.VISIBLE);
             activity.setProgressBarVisibility(View.GONE);
-            ThemeUtils.setStatusBarColor(activity, activity.getResources().getColor(R.color.black));
+            ThemeUtils.setStatusBarColor(activity, activity.getResources().getColor(R.color.background_color_inverse));
             if (activity.getSupportActionBar() != null) {
                 activity.getSupportActionBar().setTitle(null);
                 activity.getSupportActionBar().setBackgroundDrawable(null);

File: src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -20,9 +20,9 @@
 
 package com.nextcloud.client.di;
 
-import com.nextcloud.client.errorhandling.ShowErrorActivity;
 import com.nextcloud.client.etm.EtmActivity;
 import com.nextcloud.client.logger.ui.LogsActivity;
+import com.nextcloud.client.media.PlayerService;
 import com.nextcloud.client.onboarding.FirstRunActivity;
 import com.nextcloud.client.onboarding.WhatsNewActivity;
 import com.owncloud.android.authentication.AuthenticatorActivity;
@@ -96,7 +96,6 @@ abstract class ComponentsModule {
     @ContributesAndroidInjector abstract CopyToClipboardActivity copyToClipboardActivity();
     @ContributesAndroidInjector abstract DeepLinkLoginActivity deepLinkLoginActivity();
     @ContributesAndroidInjector abstract DrawerActivity drawerActivity();
-    @ContributesAndroidInjector abstract ShowErrorActivity errorShowActivity();
     @ContributesAndroidInjector abstract ErrorsWhileCopyingHandlerActivity errorsWhileCopyingHandlerActivity();
     @ContributesAndroidInjector abstract ExternalSiteWebView externalSiteWebView();
     @ContributesAndroidInjector abstract FileDisplayActivity fileDisplayActivity();
@@ -156,4 +155,5 @@ abstract class ComponentsModule {
 
     @ContributesAndroidInjector abstract AccountManagerService accountManagerService();
     @ContributesAndroidInjector abstract OperationsService operationsService();
+    @ContributesAndroidInjector abstract PlayerService playerService();
 }

File: src/main/java/com/owncloud/android/ui/preview/PreviewVideoActivity.java
Patch:
@@ -32,10 +32,10 @@
 import android.widget.MediaController;
 import android.widget.VideoView;
 
+import com.nextcloud.client.media.ErrorFormat;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
-import com.owncloud.android.media.MediaService;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.utils.MimeTypeUtil;
 
@@ -180,7 +180,7 @@ public boolean onError(MediaPlayer mp, int what, int extra) {
         }
 
         if (mVideoPlayer.getWindowToken() != null) {
-            String message = MediaService.getMessageForMediaError(this, what, extra);
+            String message = ErrorFormat.toString(this, what, extra);
             new AlertDialog.Builder(this)
                     .setMessage(message)
                     .setPositiveButton(android.R.string.VideoView_error_button,

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -74,6 +74,7 @@
 import java.lang.ref.WeakReference;
 import java.net.URLEncoder;
 import java.util.List;
+import java.util.Locale;
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
@@ -142,7 +143,7 @@ protected Void doInBackground(File... params) {
                         mThumbnailCache = new DiskLruImageCache(diskCacheDir, DISK_CACHE_SIZE, mCompressFormat,
                                                                 mCompressQuality);
                     } catch (Exception e) {
-                        Log_OC.d(TAG, e.getMessage());
+                        Log_OC.d(TAG, String.format(Locale.US, "Disk cache init failed: %s", e.getMessage()));
                         mThumbnailCache = null;
                     }
                 }

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -74,6 +74,7 @@
 import java.lang.ref.WeakReference;
 import java.net.URLEncoder;
 import java.util.List;
+import java.util.Locale;
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
@@ -142,7 +143,7 @@ protected Void doInBackground(File... params) {
                         mThumbnailCache = new DiskLruImageCache(diskCacheDir, DISK_CACHE_SIZE, mCompressFormat,
                                                                 mCompressQuality);
                     } catch (Exception e) {
-                        Log_OC.d(TAG, e.getMessage());
+                        Log_OC.d(TAG, String.format(Locale.US, "Disk cache init failed: %s", e.getMessage()));
                         mThumbnailCache = null;
                     }
                 }

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -405,9 +405,10 @@ private void selectNavigationItem(final MenuItem menuItem) {
             case R.id.nav_all_files:
                 if (this instanceof FileDisplayActivity) {
                     if (((FileDisplayActivity) this).getListOfFilesFragment() instanceof PhotoFragment) {
-                        showFiles(false);
+                        // showFiles(false);
                         Intent intent = new Intent(getApplicationContext(), FileDisplayActivity.class);
                         intent.putExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItem.getItemId());
+                        intent.setAction(FileDisplayActivity.ALL_FILES);
                         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                         startActivity(intent);
                     } else {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -882,7 +882,7 @@ private void parseVirtuals(List<Object> objects, ExtendedListFragment.SearchType
                         long currentSyncTime = System.currentTimeMillis();
                         RemoteOperation refreshFolderOperation = new RefreshFolderOperation(ocFile,
                                                                                             currentSyncTime,
-                                                                                            false,
+                                                                                            true,
                                                                                             false,
                                                                                             mStorageManager,
                                                                                             account,

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -405,9 +405,10 @@ private void selectNavigationItem(final MenuItem menuItem) {
             case R.id.nav_all_files:
                 if (this instanceof FileDisplayActivity) {
                     if (((FileDisplayActivity) this).getListOfFilesFragment() instanceof PhotoFragment) {
-                        showFiles(false);
+                        // showFiles(false);
                         Intent intent = new Intent(getApplicationContext(), FileDisplayActivity.class);
                         intent.putExtra(FileDisplayActivity.DRAWER_MENU_ID, menuItem.getItemId());
+                        intent.setAction(FileDisplayActivity.ALL_FILES);
                         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                         startActivity(intent);
                     } else {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -882,7 +882,7 @@ private void parseVirtuals(List<Object> objects, ExtendedListFragment.SearchType
                         long currentSyncTime = System.currentTimeMillis();
                         RemoteOperation refreshFolderOperation = new RefreshFolderOperation(ocFile,
                                                                                             currentSyncTime,
-                                                                                            false,
+                                                                                            true,
                                                                                             false,
                                                                                             mStorageManager,
                                                                                             account,

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -622,6 +622,7 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("ldif", Collections.singletonList("text/x-ldif"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("love", Collections.singletonList("application/x-love-game"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("lwp", Collections.singletonList("application/vnd.lotus-wordpro"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m", Collections.singletonList("text/plain"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m2t", Collections.singletonList("video/mp2t"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m3u", Collections.singletonList("audio/mpegurl"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m3u8", Collections.singletonList("audio/mpegurl"));

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -485,6 +485,7 @@ private static void populateMimeTypeIconMapping() {
         MIMETYPE_TO_ICON_MAPPING.put("application/x-font", R.drawable.file_image);
         MIMETYPE_TO_ICON_MAPPING.put("application/x-gimp", R.drawable.file_image);
         MIMETYPE_TO_ICON_MAPPING.put("application/x-gzip", R.drawable.file_zip);
+        MIMETYPE_TO_ICON_MAPPING.put("application/x-love-game", R.drawable.file);
         MIMETYPE_TO_ICON_MAPPING.put("application/x-mobipocket-ebook", R.drawable.file_text);
         MIMETYPE_TO_ICON_MAPPING.put("application/x-ms-dos-executable", R.drawable.file_application);
         MIMETYPE_TO_ICON_MAPPING.put("application/x-msdos-program", R.drawable.file_application);
@@ -619,6 +620,7 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("kmz", Collections.singletonList("application/vnd.google-earth.kmz"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("kra", Collections.singletonList("application/x-krita"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("ldif", Collections.singletonList("text/x-ldif"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("love", Collections.singletonList("application/x-love-game"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("lwp", Collections.singletonList("application/vnd.lotus-wordpro"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m2t", Collections.singletonList("video/mp2t"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("m3u", Collections.singletonList("audio/mpegurl"));

File: src/main/java/com/owncloud/android/ui/activities/data/files/FileRepositories.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  *   Nextcloud Android client application
  *
  *   Copyright (C) 2018 Edvard Holst
@@ -20,7 +20,7 @@
 
 import androidx.annotation.NonNull;
 
-public class FileRepositories {
+public final class FileRepositories {
 
     private FileRepositories() {
         // No instance

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -39,7 +39,7 @@
 import com.owncloud.android.utils.MimeType;
 
 import java.io.File;
-import java.util.ArrayList;
+import java.util.List;
 
 import androidx.annotation.NonNull;
 import androidx.core.content.FileProvider;
@@ -57,7 +57,7 @@ public class OCFile implements Parcelable, Comparable<OCFile>, ServerFileInterfa
 
     private static final String TAG = OCFile.class.getSimpleName();
 
-    @Getter  @Setter private long fileId; // android internal ID of the file
+    @Getter @Setter private long fileId; // android internal ID of the file
     @Getter @Setter private long parentId;
     @Getter @Setter private long fileLength;
     @Getter @Setter private long creationTimestamp; // UNIX timestamp of the time the file was created
@@ -90,7 +90,7 @@ public class OCFile implements Parcelable, Comparable<OCFile>, ServerFileInterfa
     @Getter @Setter private String ownerId;
     @Getter @Setter private String ownerDisplayName;
     @Getter @Setter String note;
-    @Getter @Setter private ArrayList<ShareeUser> sharees;
+    @Getter @Setter private List<ShareeUser> sharees;
 
     /**
      * URI to the local path of the file contents, if stored in the device; cached after first call

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -363,7 +363,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                     itemViewHolder.sharedAvatars.removeAllViews();
 
                     String fileOwner = file.getOwnerId();
-                    ArrayList<ShareeUser> sharees = file.getSharees();
+                    List<ShareeUser> sharees = file.getSharees();
 
                     // use fileOwner if not oneself, then add at first
                     ShareeUser fileOwnerSharee = new ShareeUser(fileOwner, file.getOwnerDisplayName(), ShareType.USER);

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -126,7 +126,7 @@ public static void cancelPreviousContactBackupJobForAccount(Context context, Acc
 
         for (JobRequest jobRequest : jobs) {
             PersistableBundleCompat extras = jobRequest.getExtras();
-            if (extras.getString(ContactsBackupJob.ACCOUNT, "").equalsIgnoreCase(account.name) &&
+            if (extras != null && extras.getString(ContactsBackupJob.ACCOUNT, "").equalsIgnoreCase(account.name) &&
                     jobRequest.isPeriodic()) {
                 jobManager.cancel(jobRequest.getJobId());
             }

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -126,7 +126,7 @@ public static void cancelPreviousContactBackupJobForAccount(Context context, Acc
 
         for (JobRequest jobRequest : jobs) {
             PersistableBundleCompat extras = jobRequest.getExtras();
-            if (extras.getString(ContactsBackupJob.ACCOUNT, "").equalsIgnoreCase(account.name) &&
+            if (extras != null && extras.getString(ContactsBackupJob.ACCOUNT, "").equalsIgnoreCase(account.name) &&
                     jobRequest.isPeriodic()) {
                 jobManager.cancel(jobRequest.getJobId());
             }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -134,7 +134,7 @@ public class ExtendedListFragment extends Fragment implements
     private EmptyRecyclerView mRecyclerView;
 
     protected SearchView searchView;
-    private Handler handler = new Handler();
+    private Handler handler = new Handler(Looper.getMainLooper());
 
     private float mScale = -1f;
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -999,7 +999,7 @@ private OCFile createFileInstance(Cursor c) {
 
             String sharees = c.getString(c.getColumnIndex(ProviderTableMeta.FILE_SHAREES));
 
-            if ("null".equals(sharees) || sharees.isEmpty()) {
+            if (sharees == null || "null".equals(sharees) || sharees.isEmpty()) {
                 file.setSharees(new ArrayList<>());
             } else {
                 try {

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -134,7 +134,7 @@ public class ExtendedListFragment extends Fragment implements
     private EmptyRecyclerView mRecyclerView;
 
     protected SearchView searchView;
-    private Handler handler = new Handler();
+    private Handler handler = new Handler(Looper.getMainLooper());
 
     private float mScale = -1f;
 

File: src/main/java/com/nextcloud/client/account/UserAccountManagerImpl.java
Patch:
@@ -145,7 +145,8 @@ public OwnCloudAccount getCurrentOwnCloudAccount() {
         try {
             Account currentPlatformAccount = getCurrentAccount();
             return new OwnCloudAccount(currentPlatformAccount, context);
-        } catch (com.owncloud.android.lib.common.accounts.AccountUtils.AccountNotFoundException ex) {
+        } catch (com.owncloud.android.lib.common.accounts.AccountUtils.AccountNotFoundException |
+            IllegalArgumentException ex) {
             return null;
         }
     }

File: src/main/java/com/nextcloud/client/network/NetworkModule.java
Patch:
@@ -35,9 +35,11 @@ public class NetworkModule {
 
     @Provides
     ConnectivityService connectivityService(ConnectivityManager connectivityManager,
-                                            UserAccountManager accountManager) {
+                                            UserAccountManager accountManager,
+                                            ClientFactory clientFactory) {
         return new ConnectivityServiceImpl(connectivityManager,
                                            accountManager,
+                                           clientFactory,
                                            new ConnectivityServiceImpl.GetRequestBuilder());
     }
 

File: src/main/java/com/nextcloud/client/appinfo/AppInfo.java
Patch:
@@ -34,4 +34,6 @@ public interface AppInfo {
      */
     String getFormattedVersionCode();
 
+    boolean isDebugBuild();
+
 }

File: src/main/java/com/nextcloud/client/appinfo/AppInfo.java
Patch:
@@ -34,4 +34,6 @@ public interface AppInfo {
      */
     String getFormattedVersionCode();
 
+    boolean isDebugBuild();
+
 }

File: src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -45,7 +45,7 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.FilePickerActivity;
 import com.owncloud.android.ui.activity.FolderPickerActivity;
-import com.owncloud.android.ui.activity.LogHistoryActivity;
+import com.owncloud.android.ui.activity.LogsActivity;
 import com.owncloud.android.ui.activity.ManageAccountsActivity;
 import com.owncloud.android.ui.activity.ManageSpaceActivity;
 import com.owncloud.android.ui.activity.NotificationsActivity;
@@ -101,7 +101,7 @@ abstract class ComponentsModule {
     @ContributesAndroidInjector abstract FilePickerActivity filePickerActivity();
     @ContributesAndroidInjector abstract FirstRunActivity firstRunActivity();
     @ContributesAndroidInjector abstract FolderPickerActivity folderPickerActivity();
-    @ContributesAndroidInjector abstract LogHistoryActivity logHistoryActivity();
+    @ContributesAndroidInjector abstract LogsActivity logsActivity();
     @ContributesAndroidInjector abstract ManageAccountsActivity manageAccountsActivity();
     @ContributesAndroidInjector abstract ManageSpaceActivity manageSpaceActivity();
     @ContributesAndroidInjector abstract NotificationsActivity notificationsActivity();

File: src/main/java/com/owncloud/android/ui/activity/SettingsActivity.java
Patch:
@@ -360,7 +360,7 @@ private void setupLoggingPreference(PreferenceCategory preferenceCategoryMore) {
         if (pLogger != null) {
             if (loggerEnabled) {
                 pLogger.setOnPreferenceClickListener(preference -> {
-                    Intent loggerIntent = new Intent(getApplicationContext(), LogHistoryActivity.class);
+                    Intent loggerIntent = new Intent(getApplicationContext(), LogsActivity.class);
                     startActivity(loggerIntent);
 
                     return true;

File: src/main/java/com/nextcloud/client/di/ComponentsModule.java
Patch:
@@ -62,7 +62,7 @@
 import com.owncloud.android.ui.activity.UploadPathActivity;
 import com.owncloud.android.ui.activity.UserInfoActivity;
 import com.owncloud.android.ui.dialog.ChooseTemplateDialogFragment;
-import com.owncloud.android.ui.errorhandling.ErrorShowActivity;
+import com.owncloud.android.ui.errorhandling.ShowErrorActivity;
 import com.owncloud.android.ui.fragment.ExtendedListFragment;
 import com.owncloud.android.ui.fragment.FileDetailActivitiesFragment;
 import com.owncloud.android.ui.fragment.FileDetailFragment;
@@ -94,7 +94,7 @@ abstract class ComponentsModule {
     @ContributesAndroidInjector abstract CopyToClipboardActivity copyToClipboardActivity();
     @ContributesAndroidInjector abstract DeepLinkLoginActivity deepLinkLoginActivity();
     @ContributesAndroidInjector abstract DrawerActivity drawerActivity();
-    @ContributesAndroidInjector abstract ErrorShowActivity errorShowActivity();
+    @ContributesAndroidInjector abstract ShowErrorActivity errorShowActivity();
     @ContributesAndroidInjector abstract ErrorsWhileCopyingHandlerActivity errorsWhileCopyingHandlerActivity();
     @ContributesAndroidInjector abstract ExternalSiteWebView externalSiteWebView();
     @ContributesAndroidInjector abstract FileDisplayActivity fileDisplayActivity();

File: src/main/java/com/owncloud/android/ui/errorhandling/ExceptionHandler.java
Patch:
@@ -48,8 +48,8 @@ public void uncaughtException(Thread thread, Throwable exception) {
 
         Log.e(TAG, "An exception was thrown and handled by ExceptionHandler:", exception);
 
-        Intent intent = new Intent(context, ErrorShowActivity.class);
-        intent.putExtra(ErrorShowActivity.EXTRA_ERROR_TEXT, errorReport);
+        Intent intent = new Intent(context, ShowErrorActivity.class);
+        intent.putExtra(ShowErrorActivity.EXTRA_ERROR_TEXT, errorReport);
         context.startActivity(intent);
 
         android.os.Process.killProcess(android.os.Process.myPid());

File: src/androidTest/java/com/owncloud/android/datamodel/OCFileUnitTest.java
Patch:
@@ -37,7 +37,7 @@
  * Instrumented unit test, to be run in an Android emulator or device.
  *
  * At the moment, it's a sample to validate the automatic test environment, in the scope of instrumented unit tests.
- *
+ *vvlcvlc
  * Don't take it as an example of completeness.
  *
  * See http://developer.android.com/intl/es/training/testing/unit-testing/instrumented-unit-tests.html .

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -361,7 +361,7 @@ private void deleteCookies() {
 
     private static String getWebLoginUserAgent() {
         return Build.MANUFACTURER.substring(0, 1).toUpperCase(Locale.getDefault()) +
-                Build.MANUFACTURER.substring(1).toLowerCase(Locale.getDefault()) + " " + Build.MODEL;
+            Build.MANUFACTURER.substring(1).toLowerCase(Locale.getDefault()) + " " + Build.MODEL + " (Android)";
     }
 
     @SuppressLint("SetJavaScriptEnabled")

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -361,7 +361,7 @@ private void deleteCookies() {
 
     private static String getWebLoginUserAgent() {
         return Build.MANUFACTURER.substring(0, 1).toUpperCase(Locale.getDefault()) +
-                Build.MANUFACTURER.substring(1).toLowerCase(Locale.getDefault()) + " " + Build.MODEL;
+            Build.MANUFACTURER.substring(1).toLowerCase(Locale.getDefault()) + " " + Build.MODEL + " (Android)";
     }
 
     @SuppressLint("SetJavaScriptEnabled")

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -311,7 +311,7 @@ private InputStream processRequest(final NextcloudRequest request, final InputSt
             }
             throw new IllegalStateException(EXCEPTION_HTTP_REQUEST_FAILED,
                                             new IllegalStateException(String.valueOf(status),
-                                                                      new Throwable(total.toString())));
+                                                                      new IllegalStateException(total.toString())));
         }
     }
 

File: src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -42,8 +42,6 @@
  */
 public class CreateShareWithShareeOperation extends SyncOperation {
 
-    protected FileDataStorageManager mStorageManager;
-
     @Getter private String path;
     private String shareeName;
     private ShareType shareType;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -914,7 +914,6 @@ public void onItemClicked(OCFile file) {
                     } else {
                         // update state and view of this fragment
                         searchFragment = false;
-                        mHideFab = false;
                         listDirectory(file, MainApp.isOnlyOnDevice(), false);
                         // then, notify parent activity to let it update its state and view
                         mContainerActivity.onBrowsedDownTo(file);

File: src/main/java/com/owncloud/android/operations/RichDocumentsCreateAssetOperation.java
Patch:
@@ -37,7 +37,7 @@ public class RichDocumentsCreateAssetOperation extends RemoteOperation {
     private static final String TAG = RichDocumentsCreateAssetOperation.class.getSimpleName();
     private static final int SYNC_READ_TIMEOUT = 40000;
     private static final int SYNC_CONNECTION_TIMEOUT = 5000;
-    private static final String ASSET_URL = "/apps/richdocuments/assets";
+    private static final String ASSET_URL = "/index.php/apps/richdocuments/assets";
 
     private static final String NODE_URL = "url";
     private static final String PARAMETER_PATH = "path";

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -914,7 +914,6 @@ public void onItemClicked(OCFile file) {
                     } else {
                         // update state and view of this fragment
                         searchFragment = false;
-                        mHideFab = false;
                         listDirectory(file, MainApp.isOnlyOnDevice(), false);
                         // then, notify parent activity to let it update its state and view
                         mContainerActivity.onBrowsedDownTo(file);

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1047,8 +1047,8 @@ private static ResizedImageGenerationTask getResizedImageGenerationWorkerTask(Im
     }
 
     public static Bitmap addVideoOverlay(Bitmap thumbnail){
-        Bitmap playButton = BitmapFactory.decodeResource(MainApp.getAppContext().getResources(),
-                R.drawable.view_play);
+        Drawable playButtonDrawable = MainApp.getAppContext().getResources().getDrawable(R.drawable.view_play);
+        Bitmap playButton = BitmapUtils.drawableToBitmap(playButtonDrawable);
 
         Bitmap resizedPlayButton = Bitmap.createScaledBitmap(playButton,
                 (int) (thumbnail.getWidth() * 0.3),

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -55,6 +55,7 @@
 import android.widget.VideoView;
 
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.di.Injectable;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileMenuFilter;
@@ -92,7 +93,7 @@
  * By now, if the {@link OCFile} passed is not downloaded, an {@link IllegalStateException} is
  * generated on instantiation too.
  */
-public class PreviewMediaFragment extends FileFragment implements OnTouchListener {
+public class PreviewMediaFragment extends FileFragment implements OnTouchListener, Injectable {
 
     private static final String TAG = PreviewMediaFragment.class.getSimpleName();
 

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1047,8 +1047,8 @@ private static ResizedImageGenerationTask getResizedImageGenerationWorkerTask(Im
     }
 
     public static Bitmap addVideoOverlay(Bitmap thumbnail){
-        Bitmap playButton = BitmapFactory.decodeResource(MainApp.getAppContext().getResources(),
-                R.drawable.view_play);
+        Drawable playButtonDrawable = MainApp.getAppContext().getResources().getDrawable(R.drawable.view_play);
+        Bitmap playButton = BitmapUtils.drawableToBitmap(playButtonDrawable);
 
         Bitmap resizedPlayButton = Bitmap.createScaledBitmap(playButton,
                 (int) (thumbnail.getWidth() * 0.3),

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -55,6 +55,7 @@
 import android.widget.VideoView;
 
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.di.Injectable;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileMenuFilter;
@@ -92,7 +93,7 @@
  * By now, if the {@link OCFile} passed is not downloaded, an {@link IllegalStateException} is
  * generated on instantiation too.
  */
-public class PreviewMediaFragment extends FileFragment implements OnTouchListener {
+public class PreviewMediaFragment extends FileFragment implements OnTouchListener, Injectable {
 
     private static final String TAG = PreviewMediaFragment.class.getSimpleName();
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -37,6 +37,7 @@
 import android.widget.TextView;
 
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.di.Injectable;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileMenuFilter;
@@ -67,7 +68,7 @@
 import androidx.appcompat.widget.SearchView;
 import androidx.core.view.MenuItemCompat;
 
-public class PreviewTextFragment extends FileFragment implements SearchView.OnQueryTextListener {
+public class PreviewTextFragment extends FileFragment implements SearchView.OnQueryTextListener, Injectable {
     private static final String EXTRA_FILE = "FILE";
     private static final String EXTRA_ACCOUNT = "ACCOUNT";
     private static final String TAG = PreviewTextFragment.class.getSimpleName();

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -37,6 +37,7 @@
 import android.widget.TextView;
 
 import com.nextcloud.client.account.UserAccountManager;
+import com.nextcloud.client.di.Injectable;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileMenuFilter;
@@ -67,7 +68,7 @@
 import androidx.appcompat.widget.SearchView;
 import androidx.core.view.MenuItemCompat;
 
-public class PreviewTextFragment extends FileFragment implements SearchView.OnQueryTextListener {
+public class PreviewTextFragment extends FileFragment implements SearchView.OnQueryTextListener, Injectable {
     private static final String EXTRA_FILE = "FILE";
     private static final String EXTRA_ACCOUNT = "ACCOUNT";
     private static final String TAG = PreviewTextFragment.class.getSimpleName();

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1969,6 +1969,7 @@ public OCCapability saveCapabilities(OCCapability capability) {
             .getValue());
         cv.put(ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_TEMPLATES, capability.getRichDocumentsTemplatesAvailable()
             .getValue());
+        cv.put(ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME, capability.getRichDocumentsProductName());
 
         if (capabilityExists(account.name)) {
             if (getContentResolver() != null) {
@@ -2146,6 +2147,8 @@ private OCCapability createCapabilityInstance(Cursor c) {
                 optionalMimetypes = "";
             }
             capability.setRichDocumentsOptionalMimeTypeList(Arrays.asList(optionalMimetypes.split(",")));
+            capability.setRichDocumentsProductName(
+                c.getString(c.getColumnIndex(ProviderTableMeta.CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME)));
         }
         return capability;
     }

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 47;
+    public static final int DB_VERSION = 48;
 
     private ProviderMeta() {
         // No instance
@@ -190,6 +190,7 @@ static public class ProviderTableMeta implements BaseColumns {
             "richdocument_optional_mimetype_list";
         public static final String CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING = "richdocument_direct_editing";
         public static final String CAPABILITIES_RICHDOCUMENT_TEMPLATES = "richdocument_direct_templates";
+        public static final String CAPABILITIES_RICHDOCUMENT_PRODUCT_NAME = "richdocument_product_name";
 
         public static final String CAPABILITIES_DEFAULT_SORT_ORDER = CAPABILITIES_ACCOUNT_NAME
                 + " collate nocase asc";

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -101,7 +101,7 @@ public boolean onActivityStarted(Activity activity) {
             i.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
             activity.startActivityForResult(i, PASSCODE_ACTIVITY);
         } else {
-            if (preferences.getLockTimestamp() != 0) {
+            if (!askedForPin && preferences.getLockTimestamp() != 0) {
                 preferences.setLockTimestamp(System.currentTimeMillis());
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -228,11 +228,12 @@ public class FileDisplayActivity extends FileActivity
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         Log_OC.v(TAG, "onCreate() start");
-        super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account is valid
 
         // Set the default theme to replace the launch screen theme.
         setTheme(R.style.Theme_ownCloud_Toolbar_Drawer);
 
+        super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account is valid
+
         /// Load of saved instance state
         if (savedInstanceState != null) {
             mWaitingToPreview = savedInstanceState.getParcelable(FileDisplayActivity.KEY_WAITING_TO_PREVIEW);

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -101,7 +101,7 @@ public boolean onActivityStarted(Activity activity) {
             i.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
             activity.startActivityForResult(i, PASSCODE_ACTIVITY);
         } else {
-            if (preferences.getLockTimestamp() != 0) {
+            if (!askedForPin && preferences.getLockTimestamp() != 0) {
                 preferences.setLockTimestamp(System.currentTimeMillis());
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -228,11 +228,12 @@ public class FileDisplayActivity extends FileActivity
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         Log_OC.v(TAG, "onCreate() start");
-        super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account is valid
 
         // Set the default theme to replace the launch screen theme.
         setTheme(R.style.Theme_ownCloud_Toolbar_Drawer);
 
+        super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account is valid
+
         /// Load of saved instance state
         if (savedInstanceState != null) {
             mWaitingToPreview = savedInstanceState.getParcelable(FileDisplayActivity.KEY_WAITING_TO_PREVIEW);

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 45;
+    public static final int DB_VERSION = 46;
 
     private ProviderMeta() {
         // No instance
@@ -184,6 +184,8 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String CAPABILITIES_ACTIVITY = "activity";
         public static final String CAPABILITIES_RICHDOCUMENT = "richdocument";
         public static final String CAPABILITIES_RICHDOCUMENT_MIMETYPE_LIST = "richdocument_mimetype_list";
+        public static final String CAPABILITIES_RICHDOCUMENT_OPTIONAL_MIMETYPE_LIST =
+            "richdocument_optional_mimetype_list";
         public static final String CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING = "richdocument_direct_editing";
         public static final String CAPABILITIES_RICHDOCUMENT_TEMPLATES = "richdocument_direct_templates";
 

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -248,8 +248,10 @@ private void filterSetPictureAs(List<Integer> toShow, List<Integer> toHide) {
     }
 
     private void filterOpenAsRichDocument(List<Integer> toShow, List<Integer> toHide, OCCapability capability) {
+        String mimeType = mFiles.iterator().next().getMimeType();
         if (isSingleFile() && android.os.Build.VERSION.SDK_INT >= RichDocumentsWebView.MINIMUM_API &&
-            capability.getRichDocumentsMimeTypeList().contains(mFiles.iterator().next().getMimeType()) &&
+            (capability.getRichDocumentsMimeTypeList().contains(mimeType) ||
+                capability.getRichDocumentsOptionalMimeTypeList().contains(mimeType)) &&
             capability.getRichDocumentsDirectEditing().isTrue()) {
             toShow.add(R.id.action_open_file_as_richdocument);
         } else {

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class ProviderMeta {
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 45;
+    public static final int DB_VERSION = 46;
 
     private ProviderMeta() {
         // No instance
@@ -184,6 +184,8 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String CAPABILITIES_ACTIVITY = "activity";
         public static final String CAPABILITIES_RICHDOCUMENT = "richdocument";
         public static final String CAPABILITIES_RICHDOCUMENT_MIMETYPE_LIST = "richdocument_mimetype_list";
+        public static final String CAPABILITIES_RICHDOCUMENT_OPTIONAL_MIMETYPE_LIST =
+            "richdocument_optional_mimetype_list";
         public static final String CAPABILITIES_RICHDOCUMENT_DIRECT_EDITING = "richdocument_direct_editing";
         public static final String CAPABILITIES_RICHDOCUMENT_TEMPLATES = "richdocument_direct_templates";
 

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -248,8 +248,10 @@ private void filterSetPictureAs(List<Integer> toShow, List<Integer> toHide) {
     }
 
     private void filterOpenAsRichDocument(List<Integer> toShow, List<Integer> toHide, OCCapability capability) {
+        String mimeType = mFiles.iterator().next().getMimeType();
         if (isSingleFile() && android.os.Build.VERSION.SDK_INT >= RichDocumentsWebView.MINIMUM_API &&
-            capability.getRichDocumentsMimeTypeList().contains(mFiles.iterator().next().getMimeType()) &&
+            (capability.getRichDocumentsMimeTypeList().contains(mimeType) ||
+                capability.getRichDocumentsOptionalMimeTypeList().contains(mimeType)) &&
             capability.getRichDocumentsDirectEditing().isTrue()) {
             toShow.add(R.id.action_open_file_as_richdocument);
         } else {

File: src/main/java/com/owncloud/android/ui/notifications/NotificationsContract.java
Patch:
@@ -26,7 +26,9 @@
 public interface NotificationsContract {
 
     interface View {
-        void onRemovedNotification(boolean isSuccess, NotificationListAdapter.NotificationViewHolder holder);
+        void onRemovedNotification(boolean isSuccess);
+
+        void removeNotification(NotificationListAdapter.NotificationViewHolder holder);
 
         void onRemovedAllNotifications(boolean isSuccess);
 

File: src/main/java/com/owncloud/android/ui/notifications/NotificationsContract.java
Patch:
@@ -26,7 +26,9 @@
 public interface NotificationsContract {
 
     interface View {
-        void onRemovedNotification(boolean isSuccess, NotificationListAdapter.NotificationViewHolder holder);
+        void onRemovedNotification(boolean isSuccess);
+
+        void removeNotification(NotificationListAdapter.NotificationViewHolder holder);
 
         void onRemovedAllNotifications(boolean isSuccess);
 

File: src/androidTest/java/com/owncloud/android/util/TestSorting.java
Patch:
@@ -1,4 +1,4 @@
-package com.owncloud.android.utils;
+package com.owncloud.android.util;
 
 import com.owncloud.android.datamodel.OCFile;
 

File: src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -140,7 +140,7 @@ public void onClick(DialogInterface dialog, int which) {
                 ((TextView)(getDialog().findViewById(R.id.user_input)))
                     .getText().toString().trim();
 
-            if (TextUtils.isEmpty((newFileName))) {
+            if (TextUtils.isEmpty(newFileName)) {
                 DisplayUtils.showSnackMessage(getActivity(), R.string.filename_empty);
                 return;
             }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -2415,7 +2415,7 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
 
             String result = data.getStringExtra("com.blikoon.qrcodescanner.got_qr_scan_relult");
 
-            if (!result.startsWith(getString(R.string.login_data_own_scheme))) {
+            if (result == null || !result.startsWith(getString(R.string.login_data_own_scheme))) {
                 mServerStatusIcon = R.drawable.ic_alert;
                 mServerStatusText = "QR Code could not be read!";
                 showServerStatus();

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -2415,7 +2415,7 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
 
             String result = data.getStringExtra("com.blikoon.qrcodescanner.got_qr_scan_relult");
 
-            if (!result.startsWith(getString(R.string.login_data_own_scheme))) {
+            if (result == null || !result.startsWith(getString(R.string.login_data_own_scheme))) {
                 mServerStatusIcon = R.drawable.ic_alert;
                 mServerStatusText = "QR Code could not be read!";
                 showServerStatus();

File: src/main/java/com/owncloud/android/media/MediaServiceBinder.java
Patch:
@@ -118,7 +118,7 @@ public int getDuration() {
     @Override
     public boolean isPlaying() {
         MediaService.State currentState = mService.getState();
-        return currentState == State.PLAYING || (currentState == State.PREPARING && mService.mPlayOnPrepared);
+        return currentState == State.PLAYING || (currentState == State.PREPARING && mService.playOnPrepared);
     }
 
 

File: src/main/java/com/owncloud/android/ui/activity/ManageSpaceActivity.java
Patch:
@@ -132,9 +132,7 @@ protected void onPostExecute(Boolean result) {
                 ).show();
             } else {
                 finish();
-                System.exit(0);
             }
-
         }
 
         public boolean clearApplicationData() {

File: src/test/java/com/owncloud/android/utils/StringUtilsTest.java
Patch:
@@ -7,7 +7,7 @@
 public class StringUtilsTest {
 
     @Test
-    public void searchAndColor_assertCorrectSingleSearchMatch() {
+    public void assertCorrectSingleSearchMatch() {
 
         String text = "this is a simple test";
         String searchText = "simple";
@@ -20,7 +20,7 @@ public void searchAndColor_assertCorrectSingleSearchMatch() {
     }
 
     @Test
-    public void searchAndColor_assertTextReturnedIfSearchTextIsEmpty() {
+    public void assertTextReturnedIfSearchTextIsEmpty() {
         String helloWorld = "hello world";
         assertEquals("text returned when searchText was not empty",
                      helloWorld, StringUtils.searchAndColor(helloWorld, "", 0));

File: src/main/java/com/owncloud/android/jobs/NotificationJob.java
Patch:
@@ -268,7 +268,8 @@ public void onReceive(Context context, Intent intent) {
 
                         boolean success;
                         if (!TextUtils.isEmpty(actionType) && !TextUtils.isEmpty(actionLink)) {
-                            success = executeAction(actionType, actionLink, client) == HttpStatus.SC_OK;
+                            int resultCode = executeAction(actionType, actionLink, client);
+                            success = resultCode == HttpStatus.SC_OK || resultCode == HttpStatus.SC_ACCEPTED;
                         } else {
                             success = new DeleteNotificationRemoteOperation(numericNotificationId)
                                 .execute(client).isSuccess();

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1471,7 +1471,7 @@ public void saveSharesDB(List<OCShare> shares) {
         // Reset flags & Remove shares for this files
         String filePath = "";
         for (OCShare share : shares) {
-            if (filePath.equals(share.getPath())) {
+            if (!filePath.equals(share.getPath())) {
                 filePath = share.getPath();
                 resetShareFlagInAFile(filePath);
                 operations = prepareRemoveSharesInFile(filePath, operations);

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1471,7 +1471,7 @@ public void saveSharesDB(List<OCShare> shares) {
         // Reset flags & Remove shares for this files
         String filePath = "";
         for (OCShare share : shares) {
-            if (filePath != share.getPath()) {
+            if (filePath.equals(share.getPath())) {
                 filePath = share.getPath();
                 resetShareFlagInAFile(filePath);
                 operations = prepareRemoveSharesInFile(filePath, operations);

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -761,7 +761,7 @@ private void populateDirectoryList() {
 
             if (files.isEmpty()) {
                 setMessageForEmptyList(R.string.file_list_empty_headline, R.string.empty,
-                        R.drawable.ic_list_empty_upload);
+                        R.drawable.uploads);
             } else {
                 mEmptyListContainer.setVisibility(View.GONE);
 

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -152,7 +152,9 @@ private void setupContent() {
         recyclerView = findViewById(android.R.id.list);
         recyclerView.setEmptyView(findViewById(R.id.empty_list_view));
         findViewById(R.id.empty_list_progress).setVisibility(View.GONE);
-        emptyContentIcon.setImageResource(R.drawable.ic_list_empty_upload);
+        emptyContentIcon.setImageResource(R.drawable.uploads);
+        emptyContentIcon.getDrawable().mutate();
+        emptyContentIcon.setAlpha(0.5f);
         emptyContentIcon.setVisibility(View.VISIBLE);
         emptyContentHeadline.setText(noResultsHeadline);
         emptyContentMessage.setText(noResultsMessage);

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -275,7 +275,7 @@ private void populateUserInfoUi(UserInfo userInfo) {
                 && userInfo.getTwitter() == null && userInfo.getWebsite() == null) {
 
             setErrorMessageForMultiList(getString(R.string.userinfo_no_info_headline),
-                    getString(R.string.userinfo_no_info_text), R.drawable.ic_user);
+                getString(R.string.userinfo_no_info_text), R.drawable.ic_user);
         } else {
             emptyContentContainer.setVisibility(View.GONE);
             userInfoView.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -130,7 +130,7 @@ public void onBackPressed() {
 
     private void updateNextButtonIfNeeded() {
         if (!mProgress.hasNextStep()) {
-            mForwardFinishButton.setImageResource(R.drawable.ic_done_white);
+            mForwardFinishButton.setImageResource(R.drawable.ic_ok);
             mSkipButton.setVisibility(View.INVISIBLE);
         } else {
             mForwardFinishButton.setImageResource(R.drawable.arrow_right);

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -956,6 +956,7 @@ static class OCFileListGridImageViewHolder extends RecyclerView.ViewHolder {
         private OCFileListGridImageViewHolder(View itemView) {
             super(itemView);
             ButterKnife.bind(this, itemView);
+            favorite.getDrawable().mutate();
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -400,7 +400,7 @@ private void setEmptyContent(String headline, String message) {
     private void setErrorContent(String message) {
         if (emptyContentContainer != null && emptyContentMessage != null) {
             emptyContentHeadline.setText(R.string.common_error);
-            emptyContentIcon.setImageDrawable(requireContext().getResources().getDrawable(R.drawable.ic_alert_octagon));
+            emptyContentIcon.setImageDrawable(requireContext().getResources().getDrawable(R.drawable.ic_list_empty_error));
             emptyContentMessage.setText(message);
 
             emptyContentMessage.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -585,7 +585,7 @@ private void initAuthTokenType() {
         mAuthTokenType = null;
 
         if (extras != null) {
-            extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
+            mAuthTokenType = extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
         }
 
         if (mAuthTokenType == null) {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -585,7 +585,7 @@ private void initAuthTokenType() {
         mAuthTokenType = null;
 
         if (extras != null) {
-            extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
+            mAuthTokenType = extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
         }
 
         if (mAuthTokenType == null) {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -585,7 +585,7 @@ private void initAuthTokenType() {
         mAuthTokenType = null;
 
         if (extras != null) {
-            extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
+            mAuthTokenType = extras.getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
         }
 
         if (mAuthTokenType == null) {

File: src/main/java/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -118,6 +118,7 @@ private void saveFolderInDB() {
             newDir.setRemoteId(createdRemoteFolder.getRemoteId());
             newDir.setModificationTimestamp(System.currentTimeMillis());
             newDir.setEncrypted(FileStorageUtils.checkEncryptionStatus(newDir, getStorageManager()));
+            newDir.setPermissions(createdRemoteFolder.getPermissions());
             getStorageManager().saveFile(newDir);
 
             Log_OC.d(TAG, "Create directory " + mRemotePath + " in Database");

File: src/main/java/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -118,6 +118,7 @@ private void saveFolderInDB() {
             newDir.setRemoteId(createdRemoteFolder.getRemoteId());
             newDir.setModificationTimestamp(System.currentTimeMillis());
             newDir.setEncrypted(FileStorageUtils.checkEncryptionStatus(newDir, getStorageManager()));
+            newDir.setPermissions(createdRemoteFolder.getPermissions());
             getStorageManager().saveFile(newDir);
 
             Log_OC.d(TAG, "Create directory " + mRemotePath + " in Database");

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -707,7 +707,7 @@ private ExtendedListFragment getListOfFilesFragment() {
     @Override
     protected void onStop() {
         if (dialog != null) {
-            dialog.dismiss();
+            dialog.dismissAllowingStateLoss();
         }
 
         super.onStop();

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -195,10 +195,10 @@ private void setupDialogElements(View view) {
         mUploadBehaviorSummary = view.findViewById(R.id.setting_instant_behaviour_summary);
 
         mCancel = view.findViewById(R.id.cancel);
-        mCancel.setTextColor(accentColor);
+        ThemeUtils.themeDialogActionButton(mCancel);
 
         mSave = view.findViewById(R.id.save);
-        mSave.setTextColor(accentColor);
+        ThemeUtils.themeDialogActionButton(mSave);
 
         // Set values
         setEnabled(mSyncedFolder.getEnabled());

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -195,10 +195,10 @@ private void setupDialogElements(View view) {
         mUploadBehaviorSummary = view.findViewById(R.id.setting_instant_behaviour_summary);
 
         mCancel = view.findViewById(R.id.cancel);
-        mCancel.setTextColor(accentColor);
+        ThemeUtils.themeDialogActionButton(mCancel);
 
         mSave = view.findViewById(R.id.save);
-        mSave.setTextColor(accentColor);
+        ThemeUtils.themeDialogActionButton(mSave);
 
         // Set values
         setEnabled(mSyncedFolder.getEnabled());

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate() {
         DisplayUtils.useCompatVectorIfNeeded();
 
         sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-
+        preferences = PreferenceManager.fromContext(this);
         fixStoragePath();
 
         MainApp.storagePath = sharedPreferences.getString(SettingsActivity.PreferenceKeys.STORAGE_PATH,

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate() {
         DisplayUtils.useCompatVectorIfNeeded();
 
         sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-
+        preferences = PreferenceManager.fromContext(this);
         fixStoragePath();
 
         MainApp.storagePath = sharedPreferences.getString(SettingsActivity.PreferenceKeys.STORAGE_PATH,

File: src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -29,7 +29,7 @@ public void testCreateFolder() {
         SyncOperation syncOp = new CreateFolderOperation(path, true);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
 
-        assertTrue(result.isSuccess());
+        assertTrue(result.toString(), result.isSuccess());
 
         // folder exists
         assertTrue(getStorageManager().getFileByPath(path).isFolder());
@@ -46,7 +46,7 @@ public void testCreateNonExistingSubFolder() {
 
         SyncOperation syncOp = new CreateFolderOperation(path, true);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
-        assertTrue(result.isSuccess());
+        assertTrue(result.toString(), result.isSuccess());
 
         // folder exists
         assertTrue(getStorageManager().getFileByPath(path).isFolder());

File: src/androidTest/java/com/owncloud/android/FileIT.java
Patch:
@@ -29,7 +29,7 @@ public void testCreateFolder() {
         SyncOperation syncOp = new CreateFolderOperation(path, true);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
 
-        assertTrue(result.isSuccess());
+        assertTrue(result.toString(), result.isSuccess());
 
         // folder exists
         assertTrue(getStorageManager().getFileByPath(path).isFolder());
@@ -46,7 +46,7 @@ public void testCreateNonExistingSubFolder() {
 
         SyncOperation syncOp = new CreateFolderOperation(path, true);
         RemoteOperationResult result = syncOp.execute(client, getStorageManager());
-        assertTrue(result.isSuccess());
+        assertTrue(result.toString(), result.isSuccess());
 
         // folder exists
         assertTrue(getStorageManager().getFileByPath(path).isFolder());

File: src/main/java/com/owncloud/android/jobs/NotificationJob.java
Patch:
@@ -75,6 +75,7 @@
 import androidx.annotation.NonNull;
 import androidx.core.app.NotificationCompat;
 import androidx.core.app.NotificationManagerCompat;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 public class NotificationJob extends Job {
     public static final String TAG = "NotificationJob";
@@ -276,6 +277,8 @@ public void onReceive(Context context, Intent intent) {
             }
         }
 
+        @SuppressFBWarnings(value = "HTTP_PARAMETER_POLLUTION",
+            justification = "link and type are from server and expected to be safe")
         private int executeAction(String actionType, String actionLink, OwnCloudClient client) {
             HttpMethod method;
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -93,8 +93,8 @@
 public class SyncedFoldersActivity extends FileActivity implements SyncedFolderAdapter.ClickListener,
         SyncedFolderPreferencesDialogFragment.OnSyncedFolderPreferenceListener {
 
-    public static final String[] PRIORITIZED_FOLDERS = new String[]{"Camera", "Screenshots"};
-    public static final List<String> SPECIAL_MANUFACTURER = Arrays.asList("Samsung", "Huawei", "Xiaomi");
+    private static final String[] PRIORITIZED_FOLDERS = new String[]{"Camera", "Screenshots"};
+    private static final List<String> SPECIAL_MANUFACTURER = Arrays.asList("Samsung", "Huawei", "Xiaomi");
     public static final String EXTRA_SHOW_SIDEBAR = "SHOW_SIDEBAR";
     private static final String SYNCED_FOLDER_PREFERENCES_DIALOG_TAG = "SYNCED_FOLDER_PREFERENCES_DIALOG";
     private static final String TAG = SyncedFoldersActivity.class.getSimpleName();

File: src/main/java/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -92,8 +92,8 @@ public void onAttach(Activity activity) {
             mWebViewClient = new SsoWebViewClient(activity, mHandler, mSsoWebViewClientListener);
 
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    SsoWebViewClientListener.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    SsoWebViewClientListener.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -104,8 +104,8 @@ public void onAttach(Activity activity) {
             mContainerActivity = (ContainerActivity) activity;
 
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    ContainerActivity.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    ContainerActivity.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -72,8 +72,8 @@ public void onAttach(Activity activity) {
         try {
             mContainerActivity = (ContainerActivity) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    LocalFileListFragment.ContainerActivity.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    LocalFileListFragment.ContainerActivity.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -195,8 +195,8 @@ public void onAttach(Activity activity) {
         try {
             mListener = (ShareFragmentListener) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString()
-                    + " must implement OnFragmentInteractionListener");
+            throw new IllegalArgumentException(activity.toString()
+                    + " must implement OnFragmentInteractionListener", e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -576,7 +576,8 @@ public void onAttach(Activity activity) {
         try {
             mListener = (ShareFragmentListener) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement OnShareFragmentInteractionListener");
+            throw new IllegalArgumentException(
+                activity.toString() + " must implement OnShareFragmentInteractionListener", e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -456,17 +456,19 @@ private String getFooterText() {
         int foldersCount = 0;
         int count = mFiles.size();
         OCFile file;
+        final boolean showHiddenFiles = PreferenceManager.showHiddenFilesEnabled(mContext);
         for (int i = 0; i < count; i++) {
             file = getItem(i);
             if (file.isFolder()) {
                 foldersCount++;
             } else {
-                if (!file.isHidden()) {
+                if (!file.isHidden() || showHiddenFiles) {
                     filesCount++;
                 }
             }
         }
 
+
         return generateFooterText(filesCount, foldersCount);
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -93,8 +93,8 @@
 public class SyncedFoldersActivity extends FileActivity implements SyncedFolderAdapter.ClickListener,
         SyncedFolderPreferencesDialogFragment.OnSyncedFolderPreferenceListener {
 
-    public static final String[] PRIORITIZED_FOLDERS = new String[]{"Camera", "Screenshots"};
-    public static final List<String> SPECIAL_MANUFACTURER = Arrays.asList("Samsung", "Huawei", "Xiaomi");
+    private static final String[] PRIORITIZED_FOLDERS = new String[]{"Camera", "Screenshots"};
+    private static final List<String> SPECIAL_MANUFACTURER = Arrays.asList("Samsung", "Huawei", "Xiaomi");
     public static final String EXTRA_SHOW_SIDEBAR = "SHOW_SIDEBAR";
     private static final String SYNCED_FOLDER_PREFERENCES_DIALOG_TAG = "SYNCED_FOLDER_PREFERENCES_DIALOG";
     private static final String TAG = SyncedFoldersActivity.class.getSimpleName();

File: src/main/java/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -92,8 +92,8 @@ public void onAttach(Activity activity) {
             mWebViewClient = new SsoWebViewClient(activity, mHandler, mSsoWebViewClientListener);
 
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    SsoWebViewClientListener.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    SsoWebViewClientListener.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -104,8 +104,8 @@ public void onAttach(Activity activity) {
             mContainerActivity = (ContainerActivity) activity;
 
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    ContainerActivity.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    ContainerActivity.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -72,8 +72,8 @@ public void onAttach(Activity activity) {
         try {
             mContainerActivity = (ContainerActivity) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement " +
-                    LocalFileListFragment.ContainerActivity.class.getSimpleName());
+            throw new IllegalArgumentException(activity.toString() + " must implement " +
+                    LocalFileListFragment.ContainerActivity.class.getSimpleName(), e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -195,8 +195,8 @@ public void onAttach(Activity activity) {
         try {
             mListener = (ShareFragmentListener) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString()
-                    + " must implement OnFragmentInteractionListener");
+            throw new IllegalArgumentException(activity.toString()
+                    + " must implement OnFragmentInteractionListener", e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -576,7 +576,8 @@ public void onAttach(Activity activity) {
         try {
             mListener = (ShareFragmentListener) activity;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement OnShareFragmentInteractionListener");
+            throw new IllegalArgumentException(
+                activity.toString() + " must implement OnShareFragmentInteractionListener", e);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -182,7 +182,7 @@ private void refresh() {
         // scan for missing auto uploads files
         Set<Job> jobs = JobManager.instance().getAllJobsForTag(FilesSyncJob.TAG);
 
-        if (jobs.size() == 0) {
+        if (jobs.isEmpty()) {
             PersistableBundleCompat persistableBundleCompat = new PersistableBundleCompat();
             persistableBundleCompat.putBoolean(FilesSyncJob.OVERRIDE_POWER_SAVING, true);
             new JobRequest.Builder(FilesSyncJob.TAG)

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -259,7 +259,7 @@ public boolean saveFile(OCFile file) {
      * @return the parent file
      */
     public OCFile saveFileWithParent(OCFile file, Context context) {
-        if (file.getParentId() == 0 && !file.getRemotePath().equals("/")) {
+        if (file.getParentId() == 0 && !"/".equals(file.getRemotePath())) {
             String remotePath = file.getRemotePath();
             String parentPath = remotePath.substring(0, remotePath.lastIndexOf(file.getFileName()));
 

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -197,7 +197,7 @@ protected void setTextListeners() {
 
     private void onPassCodeEditTextFocusChange(final int passCodeIndex) {
         for (int i = 0; i < passCodeIndex; i++) {
-            if (mPassCodeEditTexts[i].getText().toString().equals("")) {
+            if ("".equals(mPassCodeEditTexts[i].getText().toString())) {
                 mPassCodeEditTexts[i].requestFocus();
                 break;
             }

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -1,4 +1,4 @@
-/*
+    /*
  * Nextcloud Android client application
  *
  * @author Tobias Kaminsky

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -55,6 +55,7 @@
 import androidx.fragment.app.DialogFragment;
 
 import static com.owncloud.android.datamodel.SyncedFolderDisplayItem.UNPERSISTED_ID;
+import static com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_CODE_KEY;
 
 /**
  * Dialog to show the preferences/configuration of a synced folder allowing the user to change the different parameters.
@@ -386,6 +387,7 @@ public void onClick(View v) {
             public void onClick(View v) {
                 Intent action = new Intent(getActivity(), UploadFilesActivity.class);
                 action.putExtra(UploadFilesActivity.KEY_LOCAL_FOLDER_PICKER_MODE, true);
+                action.putExtra(REQUEST_CODE_KEY, REQUEST_CODE__SELECT_LOCAL_FOLDER);
                 getActivity().startActivityForResult(action, REQUEST_CODE__SELECT_LOCAL_FOLDER);
             }
         });

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -55,6 +55,7 @@
 import androidx.fragment.app.DialogFragment;
 
 import static com.owncloud.android.datamodel.SyncedFolderDisplayItem.UNPERSISTED_ID;
+import static com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_CODE_KEY;
 
 /**
  * Dialog to show the preferences/configuration of a synced folder allowing the user to change the different parameters.
@@ -386,6 +387,7 @@ public void onClick(View v) {
             public void onClick(View v) {
                 Intent action = new Intent(getActivity(), UploadFilesActivity.class);
                 action.putExtra(UploadFilesActivity.KEY_LOCAL_FOLDER_PICKER_MODE, true);
+                action.putExtra(REQUEST_CODE_KEY, REQUEST_CODE__SELECT_LOCAL_FOLDER);
                 getActivity().startActivityForResult(action, REQUEST_CODE__SELECT_LOCAL_FOLDER);
             }
         });

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -356,10 +356,9 @@ private void setupFeedbackPreference(String appVersion, PreferenceCategory prefe
         if (pFeedback != null) {
             if (feedbackEnabled) {
                 pFeedback.setOnPreferenceClickListener(preference -> {
-                    String feedbackMail = getString(R.string.mail_feedback);
                     String feedback = getText(R.string.prefs_feedback) + " - android v" + appVersion;
-                    Intent intent = new Intent(Intent.ACTION_SENDTO);
-                    intent.setDataAndType(Uri.parse(feedbackMail), "text/plain");
+                    Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts("mailto", "", null));
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.mail_feedback)});
                     intent.putExtra(Intent.EXTRA_SUBJECT, feedback);
                     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -357,9 +357,8 @@ private void setupFeedbackPreference(String appVersion, PreferenceCategory prefe
             if (feedbackEnabled) {
                 pFeedback.setOnPreferenceClickListener(preference -> {
                     String feedback = getText(R.string.prefs_feedback) + " - android v" + appVersion;
-                    Intent intent = new Intent(Intent.ACTION_SENDTO,
-                        Uri.fromParts("mailto", "", null));
-                    intent.putExtra(android.content.Intent.EXTRA_EMAIL,new String[] { getString(R.string.mail_feedback) });
+                    Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts("mailto", "", null));
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.mail_feedback)});
                     intent.putExtra(Intent.EXTRA_SUBJECT, feedback);
                     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 

File: src/main/java/com/owncloud/android/ui/activities/ActivitiesActivity.java
Patch:
@@ -230,6 +230,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
     protected void onResume() {
         super.onResume();
 
+        mActionListener.onResume();
+
         setDrawerMenuItemChecked(R.id.nav_activity);
 
         setupContent();
@@ -325,6 +327,6 @@ public void setProgressIndicatorState(boolean isActive) {
     protected void onStop() {
         super.onStop();
 
-        mActionListener.stopLoadingActivity();
+        mActionListener.onStop();
     }
 }

File: src/main/java/com/owncloud/android/ui/activities/ActivitiesActivity.java
Patch:
@@ -230,6 +230,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
     protected void onResume() {
         super.onResume();
 
+        mActionListener.onResume();
+
         setDrawerMenuItemChecked(R.id.nav_activity);
 
         setupContent();
@@ -325,6 +327,6 @@ public void setProgressIndicatorState(boolean isActive) {
     protected void onStop() {
         super.onStop();
 
-        mActionListener.stopLoadingActivity();
+        mActionListener.onStop();
     }
 }

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -52,6 +52,7 @@ public static void beforeAll() {
                         Integer.toString(com.owncloud.android.authentication.AccountUtils.ACCOUNT_VERSION));
                 accountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_VERSION, "14.0.0.0");
                 accountManager.setUserData(temp, AccountUtils.Constants.KEY_OC_BASE_URL, "http://" + baseUrl);
+                accountManager.setUserData(temp, AccountUtils.Constants.KEY_USER_ID, username);
             }
 
             account = com.owncloud.android.authentication.AccountUtils.getOwnCloudAccountByName(context,

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -2024,7 +2024,7 @@ public void onScan() {
     }
 
     private void startQRScanner() {
-        Intent i = new Intent(AuthenticatorActivity.this, QrCodeActivity.class);
+        Intent i = new Intent(this, QrCodeActivity.class);
         startActivityForResult(i, REQUEST_CODE_QR_SCAN);
     }
 

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -337,16 +337,16 @@ public String renameDocument(String documentId, String displayName) throws FileN
     @Override
     public String copyDocument(String sourceDocumentId, String targetParentDocumentId) throws FileNotFoundException {
         long sourceId = Long.parseLong(sourceDocumentId);
-        long targetId = Long.parseLong(targetParentDocumentId);
+
         updateCurrentStorageManagerIfNeeded(sourceId);
 
         OCFile file = currentStorageManager.getFileById(sourceId);
-        OCFile targetFolder = currentStorageManager.getFileById(targetId);
-
         if (file == null) {
             throw new FileNotFoundException("File " + sourceDocumentId + " not found!");
         }
 
+        long targetId = Long.parseLong(targetParentDocumentId);
+        OCFile targetFolder = currentStorageManager.getFileById(targetId);
         if (targetFolder == null) {
             throw new FileNotFoundException("File " + targetParentDocumentId + " not found!");
         }

File: src/main/java/com/owncloud/android/ui/adapter/NotificationListAdapter.java
Patch:
@@ -34,7 +34,6 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -917,9 +917,7 @@ public void onItemClicked(OCFile file) {
                                 .isMediaStreamingSupported()) {
                             // stream media preview on >= NC14
                             ((FileDisplayActivity) mContainerActivity).startMediaPreview(file, 0, true, true, true);
-                        }
-
-                        if (capability.getRichDocumentsMimeTypeList().contains(file.getMimeType()) &&
+                        } else if (capability.getRichDocumentsMimeTypeList().contains(file.getMimeType()) &&
                             android.os.Build.VERSION.SDK_INT >= RichDocumentsWebView.MINIMUM_API &&
                             capability.getRichDocumentsDirectEditing().isTrue()) {
                             mContainerActivity.getFileOperationsHelper().openFileAsRichDocument(file, getContext());

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -906,9 +906,7 @@ public void onItemClicked(OCFile file) {
                                 .isMediaStreamingSupported()) {
                             // stream media preview on >= NC14
                             ((FileDisplayActivity) mContainerActivity).startMediaPreview(file, 0, true, true, true);
-                        }
-
-                        if (capability.getRichDocumentsMimeTypeList().contains(file.getMimeType()) &&
+                        } else if (capability.getRichDocumentsMimeTypeList().contains(file.getMimeType()) &&
                             android.os.Build.VERSION.SDK_INT >= RichDocumentsWebView.MINIMUM_API &&
                             capability.getRichDocumentsDirectEditing().isTrue()) {
                             mContainerActivity.getFileOperationsHelper().openFileAsRichDocument(file, getContext());

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -390,9 +390,9 @@ private void prepareCurrentSearch(SearchEvent event) {
      * register listener on FAB.
      */
     private void registerFabListener() {
-        OCCapability capability = ((FileActivity) getActivity()).getCapabilities();
+        FileActivity activity = ((FileActivity) getActivity());
         getFabMain().setOnClickListener(v -> {
-            new OCFileListBottomSheetDialog(getContext(), capability, this).show();
+            new OCFileListBottomSheetDialog(activity, this).show();
         });
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -22,6 +22,7 @@
 package com.owncloud.android.ui.activity;
 
 import android.accounts.Account;
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -698,7 +699,7 @@ protected void onResume() {
 
     private void showBatteryOptimizationInfo() {
 
-        boolean isSpecialManufacturer = SPECIAL_MANUFACTURER.contains(Build.MANUFACTURER.toLowerCase());
+        boolean isSpecialManufacturer = SPECIAL_MANUFACTURER.contains(Build.MANUFACTURER.toLowerCase(Locale.ROOT));
 
         if ((isSpecialManufacturer && checkIfBatteryOptimizationEnabled()) || checkIfBatteryOptimizationEnabled()) {
             AlertDialog alertDialog = new AlertDialog.Builder(this, R.style.Theme_ownCloud_Dialog)
@@ -707,6 +708,7 @@ private void showBatteryOptimizationInfo() {
                 .setPositiveButton(getString(R.string.battery_optimization_disable), (dialog, which) -> {
                     // show instant upload
                     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+                        @SuppressLint("BatteryLife")
                         Intent intent = new Intent(ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,
                                                    Uri.parse("package:" + BuildConfig.APPLICATION_ID));
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -476,7 +476,7 @@ private ContentValues createContentValueForFile(OCFile file, OCFile folder) {
         cv.put(ProviderTableMeta.FILE_FAVORITE, file.isFavorite());
         cv.put(ProviderTableMeta.FILE_IS_ENCRYPTED, file.isEncrypted());
         cv.put(ProviderTableMeta.FILE_MOUNT_TYPE, file.getMountType().ordinal());
-        cv.put(ProviderTableMeta.FILE_HAS_PREVIEW, file.hasPreview() ? 1 : 0);
+        cv.put(ProviderTableMeta.FILE_HAS_PREVIEW, file.isPreviewAvailable() ? 1 : 0);
         return cv;
     }
 
@@ -970,7 +970,7 @@ private OCFile createFileInstance(Cursor c) {
             }
             file.setMountType(WebdavEntry.MountType.values()[c.getInt(
                     c.getColumnIndex(ProviderTableMeta.FILE_MOUNT_TYPE))]);
-            file.setHasPreview(c.getInt(c.getColumnIndex(ProviderTableMeta.FILE_HAS_PREVIEW)) == 1);
+            file.setPreviewAvailable(c.getInt(c.getColumnIndex(ProviderTableMeta.FILE_HAS_PREVIEW)) == 1);
         }
         return file;
     }

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -372,7 +372,7 @@ private Uri getFileUri(OCFile file, String... officeExtensions) {
                 Arrays.asList(officeExtensions).contains(file.getFileName().substring(file.getFileName().
                         lastIndexOf(".") + 1)) &&
                 !file.getStoragePath().startsWith(MainApp.getAppContext().getFilesDir().getAbsolutePath())) {
-            return file.getLegacyExposedFileUri(mFileActivity);
+            return file.getLegacyExposedFileUri();
         } else {
             return file.getExposedFileUri(mFileActivity);
         }

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * ownCloud Android client application
  *
  * @author David A. Velasco
@@ -177,7 +177,7 @@ public static OCFile fillOCFile(RemoteFile remote) {
             file.setEncrypted(remote.getIsEncrypted());
         }
         file.setMountType(remote.getMountType());
-        file.setHasPreview(remote.hasPreview());
+        file.setPreviewAvailable(remote.hasPreview());
 
         return file;
     }

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -220,8 +220,10 @@ private InputStream processRequest(final NextcloudRequest request) throws Unsupp
             // If response body is available
             if(inputStream != null) {
                 BufferedReader r = new BufferedReader(new InputStreamReader(inputStream));
-                for (String line; (line = r.readLine()) != null; ) {
+                String line = r.readLine();
+                while(line != null) {
                     total.append(line).append('\n');
+                    line = r.readLine();
                 }
                 Log_OC.e(TAG, total.toString());
             }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -144,8 +144,6 @@
 import java.util.Collection;
 import java.util.List;
 
-import static com.owncloud.android.db.PreferenceManager.getSortOrder;
-
 /**
  * Displays, what files the user has available in his ownCloud. This is the main view.
  */
@@ -890,7 +888,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 ft.addToBackStack(null);
 
                 SortingOrderDialogFragment mSortingOrderDialogFragment = SortingOrderDialogFragment.newInstance(
-                        getSortOrder(this, getListOfFilesFragment().getCurrentFile()));
+                    PreferenceManager.getSortOrderByFolder(this, getListOfFilesFragment().getCurrentFile()));
                 mSortingOrderDialogFragment.show(ft, SortingOrderDialogFragment.SORTING_ORDER_FRAGMENT);
 
                 break;

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -294,7 +294,7 @@ public void swapDirectory(final File directory) {
             }
         }
 
-        FileSortOrder sortOrder = PreferenceManager.getSortOrder(mContext, null);
+        FileSortOrder sortOrder = PreferenceManager.getSortOrderByType(mContext, FileSortOrder.Type.localFileListView);
         mFiles = sortOrder.sortLocalFiles(mFiles);
 
         // Fetch preferences for showing hidden files
@@ -310,7 +310,7 @@ public void swapDirectory(final File directory) {
     }
 
     public void setSortOrder(FileSortOrder sortOrder) {
-        PreferenceManager.setSortOrder(mContext, null, sortOrder);
+        PreferenceManager.setSortOrder(mContext, FileSortOrder.Type.localFileListView, sortOrder);
         mFiles = sortOrder.sortLocalFiles(mFiles);
         notifyDataSetChanged();
     }

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -529,7 +529,7 @@ public void swapDirectory(OCFile directory, FileDataStorageManager updatedStorag
             if (!PreferenceManager.showHiddenFilesEnabled(mContext)) {
                 mFiles = filterHiddenFiles(mFiles);
             }
-            FileSortOrder sortOrder = PreferenceManager.getSortOrder(mContext, directory);
+            FileSortOrder sortOrder = PreferenceManager.getSortOrderByFolder(mContext, directory);
             mFiles = sortOrder.sortCloudFiles(mFiles);
             mFilesAll.clear();
             mFilesAll.addAll(mFiles);
@@ -573,7 +573,7 @@ public void setData(List<Object> objects, ExtendedListFragment.SearchType search
                 !searchType.equals(ExtendedListFragment.SearchType.PHOTOS_SEARCH_FILTER) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH_FILTER)) {
-            FileSortOrder sortOrder = PreferenceManager.getSortOrder(mContext, folder);
+            FileSortOrder sortOrder = PreferenceManager.getSortOrderByFolder(mContext, folder);
             mFiles = sortOrder.sortCloudFiles(mFiles);
         } else {
             mFiles = FileStorageUtils.sortOcFolderDescDateModified(mFiles);
@@ -764,7 +764,7 @@ protected void publishResults(CharSequence constraint, Filter.FilterResults resu
                 if (!PreferenceManager.showHiddenFilesEnabled(mContext)) {
                     mFiles = filterHiddenFiles(mFiles);
                 }
-                FileSortOrder sortOrder = PreferenceManager.getSortOrder(mContext, null);
+                FileSortOrder sortOrder = PreferenceManager.getSortOrderByFolder(mContext, currentDirectory);
                 mFiles = sortOrder.sortCloudFiles(mFiles);
             }
 

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -86,7 +86,8 @@ public void setTrashbinFiles(List<Object> trashbinFiles, boolean clear) {
             files.add((TrashbinFile) file);
         }
 
-        files = PreferenceManager.getSortOrder(context, null).sortTrashbinFiles(files);
+        files = PreferenceManager.getSortOrderByType(context, FileSortOrder.Type.trashBinView,
+            FileSortOrder.sort_new_to_old).sortTrashbinFiles(files);
 
         notifyDataSetChanged();
     }
@@ -281,7 +282,7 @@ public void cancelAllPendingTasks() {
     }
 
     public void setSortOrder(FileSortOrder sortOrder) {
-        PreferenceManager.setSortOrder(context, null, sortOrder);
+        PreferenceManager.setSortOrder(context, FileSortOrder.Type.trashBinView, sortOrder);
         files = sortOrder.sortTrashbinFiles(files);
         notifyDataSetChanged();
     }

File: src/main/java/com/owncloud/android/ui/dialog/SortingOrderDialogFragment.java
Patch:
@@ -57,7 +57,7 @@ public static SortingOrderDialogFragment newInstance(FileSortOrder sortOrder) {
         SortingOrderDialogFragment dialogFragment = new SortingOrderDialogFragment();
 
         Bundle args = new Bundle();
-        args.putString(KEY_SORT_ORDER, sortOrder.mName);
+        args.putString(KEY_SORT_ORDER, sortOrder.name);
         dialogFragment.setArguments(args);
 
         dialogFragment.setStyle(STYLE_NORMAL, R.style.Theme_ownCloud_Dialog);
@@ -72,7 +72,7 @@ public void onCreate(Bundle savedInstanceState) {
         setRetainInstance(true);
 
         mView = null;
-        mCurrentSortOrderName = getArguments().getString(KEY_SORT_ORDER, FileSortOrder.sort_a_to_z.mName);
+        mCurrentSortOrderName = getArguments().getString(KEY_SORT_ORDER, FileSortOrder.sort_a_to_z.name);
     }
 
     @Override
@@ -131,7 +131,7 @@ private void setupDialogElements(View view) {
     private void setupActiveOrderSelection() {
         final int color = ThemeUtils.primaryAccentColor(getContext());
         for (View view: mTaggedViews) {
-            if (!((FileSortOrder)view.getTag()).mName.equals(mCurrentSortOrderName)) {
+            if (!((FileSortOrder) view.getTag()).name.equals(mCurrentSortOrderName)) {
                 continue;
             }
             if (view instanceof ImageButton) {

File: src/main/java/com/owncloud/android/utils/FileSortOrderByDate.java
Patch:
@@ -42,7 +42,7 @@ public class FileSortOrderByDate extends FileSortOrder {
      * @param files list of files to sort
      */
     public List<OCFile> sortCloudFiles(List<OCFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) ->
                 multiplier * Long.compare(o1.getModificationTimestamp(), o2.getModificationTimestamp()));
@@ -57,7 +57,7 @@ public List<OCFile> sortCloudFiles(List<OCFile> files) {
      */
     @Override
     public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             Long obj1 = o1.getDeletionTimestamp();
@@ -74,7 +74,7 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
      */
     @Override
     public List<File> sortLocalFiles(List<File> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> multiplier * Long.compare(o1.lastModified(),o2.lastModified()));
 

File: src/main/java/com/owncloud/android/utils/FileSortOrderByName.java
Patch:
@@ -47,7 +47,7 @@ public class FileSortOrderByName extends FileSortOrder {
      */
     @SuppressFBWarnings("Bx")
     public List<OCFile> sortCloudFiles(List<OCFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isFolder() && o2.isFolder()) {
@@ -71,7 +71,7 @@ public List<OCFile> sortCloudFiles(List<OCFile> files) {
     @SuppressFBWarnings("Bx")
     @Override
     public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isFolder() && o2.isFolder()) {
@@ -94,7 +94,7 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
      */
     @Override
     public List<File> sortLocalFiles(List<File> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isDirectory() && o2.isDirectory()) {

File: src/main/java/com/owncloud/android/utils/FileSortOrderBySize.java
Patch:
@@ -43,7 +43,7 @@ public class FileSortOrderBySize extends FileSortOrder {
      * @param files list of files to sort
      */
     public List<OCFile> sortCloudFiles(List<OCFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isFolder() && o2.isFolder()) {
@@ -70,7 +70,7 @@ public List<OCFile> sortCloudFiles(List<OCFile> files) {
      */
     @Override
     public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isFolder() && o2.isFolder()) {
@@ -97,7 +97,7 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
      */
     @Override
     public List<File> sortLocalFiles(List<File> files) {
-        final int multiplier = mAscending ? 1 : -1;
+        final int multiplier = isAscending ? 1 : -1;
 
         Collections.sort(files, (o1, o2) -> {
             if (o1.isDirectory() && o2.isDirectory()) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -67,6 +67,7 @@
 import com.owncloud.android.datamodel.ExternalLinksProvider;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
+import com.owncloud.android.db.PreferenceManager;
 import com.owncloud.android.lib.common.ExternalLink;
 import com.owncloud.android.lib.common.ExternalLinkType;
 import com.owncloud.android.lib.common.OwnCloudAccount;
@@ -1252,7 +1253,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
             if (result == RequestCredentialsActivity.KEY_CHECK_RESULT_CANCEL) {
                 Log_OC.d(TAG, "PassCodeManager cancelled");
-                super.onBackPressed();
+                PreferenceManager.setLockTimestamp(this, 0);
+                finish();
             }
         }
     }

File: src/main/java/com/owncloud/android/ui/activity/RequestCredentialsActivity.java
Patch:
@@ -50,7 +50,7 @@ public class RequestCredentialsActivity extends Activity {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS) {
-            if (resultCode == Activity.RESULT_OK && DeviceCredentialUtils.tryEncrypt(getApplicationContext())) {
+            if (resultCode == Activity.RESULT_OK) {
                 finishWithResult(KEY_CHECK_RESULT_TRUE);
             } else if (resultCode == Activity.RESULT_CANCELED) {
                 finishWithResult(KEY_CHECK_RESULT_CANCEL);
@@ -66,18 +66,18 @@ protected void onResume() {
         super.onResume();
 
         if (DeviceCredentialUtils.areCredentialsAvailable(this)) {
-            DeviceCredentialUtils.createKey(getApplicationContext());
             requestCredentials();
         } else {
             DisplayUtils.showSnackMessage(this, R.string.prefs_lock_device_credentials_not_setup);
-            finishWithResult(KEY_CHECK_RESULT_TRUE);
+            finishWithResult(KEY_CHECK_RESULT_CANCEL);
         }
     }
 
     private void requestCredentials() {
         KeyguardManager keyguardManager = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);
         if (keyguardManager != null) {
             Intent i = keyguardManager.createConfirmDeviceCredentialIntent(null, null);
+            i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivityForResult(i, REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS);
         } else {
             Log_OC.e(TAG, "Keyguard manager is null");

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -67,6 +67,7 @@
 import com.owncloud.android.datamodel.ExternalLinksProvider;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
+import com.owncloud.android.db.PreferenceManager;
 import com.owncloud.android.lib.common.ExternalLink;
 import com.owncloud.android.lib.common.ExternalLinkType;
 import com.owncloud.android.lib.common.OwnCloudAccount;
@@ -1252,7 +1253,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
             if (result == RequestCredentialsActivity.KEY_CHECK_RESULT_CANCEL) {
                 Log_OC.d(TAG, "PassCodeManager cancelled");
-                super.onBackPressed();
+                PreferenceManager.setLockTimestamp(this, 0);
+                finish();
             }
         }
     }

File: src/main/java/com/owncloud/android/ui/activity/RequestCredentialsActivity.java
Patch:
@@ -50,7 +50,7 @@ public class RequestCredentialsActivity extends Activity {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS) {
-            if (resultCode == Activity.RESULT_OK && DeviceCredentialUtils.tryEncrypt(getApplicationContext())) {
+            if (resultCode == Activity.RESULT_OK) {
                 finishWithResult(KEY_CHECK_RESULT_TRUE);
             } else if (resultCode == Activity.RESULT_CANCELED) {
                 finishWithResult(KEY_CHECK_RESULT_CANCEL);
@@ -66,18 +66,18 @@ protected void onResume() {
         super.onResume();
 
         if (DeviceCredentialUtils.areCredentialsAvailable(this)) {
-            DeviceCredentialUtils.createKey(getApplicationContext());
             requestCredentials();
         } else {
             DisplayUtils.showSnackMessage(this, R.string.prefs_lock_device_credentials_not_setup);
-            finishWithResult(KEY_CHECK_RESULT_TRUE);
+            finishWithResult(KEY_CHECK_RESULT_CANCEL);
         }
     }
 
     private void requestCredentials() {
         KeyguardManager keyguardManager = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);
         if (keyguardManager != null) {
             Intent i = keyguardManager.createConfirmDeviceCredentialIntent(null, null);
+            i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivityForResult(i, REQUEST_CODE_CONFIRM_DEVICE_CREDENTIALS);
         } else {
             Log_OC.e(TAG, "Keyguard manager is null");

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -90,6 +90,8 @@ public abstract class FileActivity extends DrawerActivity
     public static final String EXTRA_ACCOUNT = "com.owncloud.android.ui.activity.ACCOUNT";
     public static final String EXTRA_FROM_NOTIFICATION = "com.owncloud.android.ui.activity.FROM_NOTIFICATION";
     public static final String APP_OPENED_COUNT = "APP_OPENED_COUNT";
+    public static final String EXTRA_SEARCH = "com.owncloud.android.ui.activity.SEARCH";
+    public static final String EXTRA_SEARCH_QUERY = "com.owncloud.android.ui.activity.SEARCH_QUERY";
 
     public static final String TAG = FileActivity.class.getSimpleName();
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -353,7 +353,7 @@ private void filterDrawerMenu(Menu menu, Account account) {
             FileDataStorageManager storageManager = new FileDataStorageManager(account, getContentResolver());
             capability = storageManager.getCapability(account.name);
         }
-        
+
         DrawerMenuUtil.filterForBottomToolbarMenuItems(menu, getResources());
         DrawerMenuUtil.filterSearchMenuItems(menu, account, getResources());
         DrawerMenuUtil.filterTrashbinMenuItem(menu, account, capability);
@@ -1095,7 +1095,7 @@ public void updateHeaderBackground() {
                     LayerDrawable layerDrawable = new LayerDrawable(drawables);
                     setNavigationHeaderBackground(layerDrawable, navigationHeader);
                 } else {
-                    // use url 
+                    // use url
                     if (URLUtil.isValidUrl(background) || background.isEmpty()) {
                         // background image
                         SimpleTarget target = new SimpleTarget<Drawable>() {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -353,7 +353,7 @@ private void filterDrawerMenu(Menu menu, Account account) {
             FileDataStorageManager storageManager = new FileDataStorageManager(account, getContentResolver());
             capability = storageManager.getCapability(account.name);
         }
-        
+
         DrawerMenuUtil.filterForBottomToolbarMenuItems(menu, getResources());
         DrawerMenuUtil.filterSearchMenuItems(menu, account, getResources());
         DrawerMenuUtil.filterTrashbinMenuItem(menu, account, capability);
@@ -1095,7 +1095,7 @@ public void updateHeaderBackground() {
                     LayerDrawable layerDrawable = new LayerDrawable(drawables);
                     setNavigationHeaderBackground(layerDrawable, navigationHeader);
                 } else {
-                    // use url 
+                    // use url
                     if (URLUtil.isValidUrl(background) || background.isEmpty()) {
                         // background image
                         SimpleTarget target = new SimpleTarget<Drawable>() {

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -70,7 +70,6 @@ public class UserListAdapter extends RecyclerView.Adapter<UserListAdapter.UserVi
     private int accentColor;
     private List<OCShare> shares;
     private float avatarRadiusDimension;
-    private Account account;
     private OCFile file;
 
     public UserListAdapter(FragmentManager fragmentManager, Context context, List<OCShare> shares, Account account,
@@ -79,7 +78,6 @@ public UserListAdapter(FragmentManager fragmentManager, Context context, List<OC
         this.fragmentManager = fragmentManager;
         this.shares = shares;
         this.listener = listener;
-        this.account = account;
         this.file = file;
 
         accentColor = ThemeUtils.primaryAccentColor(context);
@@ -118,7 +116,7 @@ public void onBindViewHolder(@NonNull UserViewHolder holder, int position) {
                     setImage(holder, name, R.drawable.ic_user);
                     break;
             }
-            
+
             holder.name.setText(name);
 
             ThemeUtils.tintCheckbox(holder.allowEditing, accentColor);

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -308,9 +308,9 @@ public void onCheckedChanged(CompoundButton compound, boolean isChecked) {
 
                             }
                         } else {
-                            for (int i = 0; i < sSubordinateCheckBoxIds.length; i++) {
+                            for (int sSubordinateCheckBoxId : sSubordinateCheckBoxIds) {
                                 //noinspection ConstantConditions, prevented in the method beginning
-                                subordinate = getView().findViewById(sSubordinateCheckBoxIds[i]);
+                                subordinate = getView().findViewById(sSubordinateCheckBoxId);
                                 subordinate.setVisibility(View.GONE);
                                 if (subordinate.isChecked()) {
                                     toggleDisablingListener(subordinate);

File: src/main/java/third_parties/daveKoeller/AlphanumComparator.java
Patch:
@@ -168,9 +168,9 @@ public int compare(String s1, String s2) {
                 }
             } else if (isSpecialChar(thisChunk.charAt(0)) && isSpecialChar(thatChunk.charAt(0))) {
                 for (int i = 0; i < thisChunk.length(); i++) {
-                    if (thisChunk.charAt(i) == '.') {
+                    if (thisChunk.charAt(i) == '.' && thatChunk.charAt(i) != '.') {
                         return -1;
-                    } else if (thatChunk.charAt(i) == '.') {
+                    } else if (thatChunk.charAt(i) == '.' && thisChunk.charAt(i) != '.') {
                         return 1;
                     } else {
                         result = thisChunk.charAt(i) - thatChunk.charAt(i);

File: src/main/java/third_parties/daveKoeller/AlphanumComparator.java
Patch:
@@ -168,9 +168,9 @@ public int compare(String s1, String s2) {
                 }
             } else if (isSpecialChar(thisChunk.charAt(0)) && isSpecialChar(thatChunk.charAt(0))) {
                 for (int i = 0; i < thisChunk.length(); i++) {
-                    if (thisChunk.charAt(i) == '.') {
+                    if (thisChunk.charAt(i) == '.' && thatChunk.charAt(i) != '.') {
                         return -1;
-                    } else if (thatChunk.charAt(i) == '.') {
+                    } else if (thatChunk.charAt(i) == '.' && thisChunk.charAt(i) != '.') {
                         return 1;
                     } else {
                         result = thisChunk.charAt(i) - thatChunk.charAt(i);

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -111,7 +111,7 @@ public int read() {
             NextcloudRequest request = deserializeObjectAndCloseStream(is);
             httpStream = processRequest(request);
         } catch (Exception e) {
-            Log_OC.e(TAG, e.toString());
+            Log_OC.e(TAG, "Error during Nextcloud request", e);
             exception = e;
         }
 
@@ -121,7 +121,7 @@ public int read() {
             InputStream resultStream = new java.io.SequenceInputStream(exceptionStream, httpStream);
             return ParcelFileDescriptorUtil.pipeFrom(resultStream, thread -> Log.d(TAG, "Done sending result"));
         } catch (IOException e) {
-            Log_OC.e(TAG, e.getMessage());
+            Log_OC.e(TAG, "Error while sending response back to client app", e);
         }
         return null;
     }

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -111,7 +111,7 @@ public int read() {
             NextcloudRequest request = deserializeObjectAndCloseStream(is);
             httpStream = processRequest(request);
         } catch (Exception e) {
-            Log_OC.e(TAG, e.getMessage());
+            Log_OC.e(TAG, e.toString());
             exception = e;
         }
 

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -714,7 +714,7 @@ public long getLocalModificationTimestamp() {
      * @return 'True' if the file is hidden
      */
     public boolean isHidden() {
-        return getFileName().charAt(0) == '.';
+        return getFileName().length() > 0 && getFileName().charAt(0) == '.';
     }
 
     public String getPermissions() {

File: src/main/java/com/owncloud/android/datastorage/providers/MountCommandStoragePointProvider.java
Patch:
@@ -62,7 +62,7 @@ private List<String> getPotentialPaths(String mounted) {
             if (!line.toLowerCase(Locale.US).contains("asec") && sPattern.matcher(line).matches()) {
                 String parts[] = line.split(" ");
                 for (String path : parts) {
-                    if (path.charAt(0) == '/' && !path.toLowerCase(Locale.US).contains("vold")) {
+                    if (path.length() > 0 && path.charAt(0) == '/' && !path.toLowerCase(Locale.US).contains("vold")) {
                         result.add(path);
                     }
                 }

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -252,7 +252,7 @@ public static String convertIdn(String url, boolean toASCII) {
 
         String urlNoDots = url;
         String dots = "";
-        while (urlNoDots.charAt(0) == '.') {
+        while (urlNoDots.length() > 0 && urlNoDots.charAt(0) == '.') {
             urlNoDots = url.substring(1);
             dots = dots + ".";
         }

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -223,7 +223,7 @@ public static List<MediaFolder> getVideoFolders(ContentResolver contentResolver,
 
                         if (filePath != null) {
                             mediaFolder.filePaths.add(filePath);
-                            mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf("/"));
+                            mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf('/'));
                         }
                     }
                     cursorVideos.close();

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -198,7 +198,7 @@ public void writeToParcel(Parcel dest, int flags) {
         dest.writeSerializable(mMountType);
     }
 
-    public boolean getIsFavorite() {
+    public boolean isFavorite() {
         return mIsFavorite;
     }
 
@@ -714,7 +714,7 @@ public long getLocalModificationTimestamp() {
      * @return 'True' if the file is hidden
      */
     public boolean isHidden() {
-        return getFileName().startsWith(".");
+        return getFileName().charAt(0) == '.';
     }
 
     public String getPermissions() {

File: src/main/java/com/owncloud/android/datastorage/providers/MountCommandStoragePointProvider.java
Patch:
@@ -62,7 +62,7 @@ private List<String> getPotentialPaths(String mounted) {
             if (!line.toLowerCase(Locale.US).contains("asec") && sPattern.matcher(line).matches()) {
                 String parts[] = line.split(" ");
                 for (String path : parts) {
-                    if (path.startsWith("/") && !path.toLowerCase(Locale.US).contains("vold")) {
+                    if (path.charAt(0) == '/' && !path.toLowerCase(Locale.US).contains("vold")) {
                         result.add(path);
                     }
                 }

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -495,7 +495,7 @@ private boolean allKeptAvailableOffline() {
 
     private boolean allFavorites() {
         for (OCFile file : mFiles) {
-            if (!file.getIsFavorite()) {
+            if (!file.isFavorite()) {
                 return false;
             }
         }
@@ -504,7 +504,7 @@ private boolean allFavorites() {
 
     private boolean allNotFavorites() {
         for (OCFile file : mFiles) {
-            if (file.getIsFavorite()) {
+            if (file.isFavorite()) {
                 return false;
             }
         }

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -961,15 +961,15 @@ public void onTransferProgress(long progressRate, long totalTransferredSoFar,
                         totalToTransfer, fileName);
 
                 if (MainApp.getAppContext() != null) {
-                    if (mCurrentUpload.getIsWifiRequired() && !Device.getNetworkType(MainApp.getAppContext()).
+                    if (mCurrentUpload.isWifiRequired() && !Device.getNetworkType(MainApp.getAppContext()).
                             equals(JobRequest.NetworkType.UNMETERED)) {
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_WIFI);
-                    } else if (mCurrentUpload.getIsChargingRequired() &&
+                    } else if (mCurrentUpload.isChargingRequired() &&
                             !Device.getBatteryStatus(MainApp.getAppContext()).isCharging()) {
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_CHARGING);
-                    } else if (!mCurrentUpload.getIsIgnoringPowerSaveMode() &&
+                    } else if (!mCurrentUpload.isIgnoringPowerSaveMode() &&
                             PowerUtils.isPowerSaveMode(MainApp.getAppContext())) {
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_IN_POWER_SAVE_MODE);

File: src/main/java/com/owncloud/android/jobs/ContactsImportJob.java
Patch:
@@ -88,8 +88,8 @@ protected Result onRunJob(@NonNull Params params) {
             }
 
 
-            for (int i = 0; i < intArray.length; i++) {
-                VCard vCard = vCards.get(intArray[i]);
+            for (int checkedItem : intArray) {
+                VCard vCard = vCards.get(checkedItem);
                 if (ContactListFragment.getDisplayName(vCard).length() != 0) {
                     if (!ownContactList.containsKey(vCard)) {
                         operations.insertContact(vCard);

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -144,8 +144,7 @@ public long getSize() {
     }
     
     public long getModificationTimestamp() {
-        return (mModificationTimestamp > 0) ? mModificationTimestamp :
-                mFile.getModificationTimestamp();
+        return mModificationTimestamp > 0 ? mModificationTimestamp : mFile.getModificationTimestamp();
     }
 
     public String getEtag() {

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -245,7 +245,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         // service when the upload finishes
                     } else {
                         // TODO CHECK: is this really useful in some point in the code?
-                        mServerFile.setFavorite(mLocalFile.getIsFavorite());
+                        mServerFile.setFavorite(mLocalFile.isFavorite());
                         mServerFile.setAvailableOffline(mLocalFile.isAvailableOffline());
                         mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
                         mServerFile.setStoragePath(mLocalFile.getStoragePath());

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -219,15 +219,15 @@ public UploadFileOperation(Account account,
         mFolderUnlockToken = upload.getFolderUnlockToken();
     }
 
-    public boolean getIsWifiRequired() {
+    public boolean isWifiRequired() {
         return mOnWifiOnly;
     }
 
-    public boolean getIsChargingRequired() {
+    public boolean isChargingRequired() {
         return mWhileChargingOnly;
     }
 
-    public boolean getIsIgnoringPowerSaveMode() { return mIgnoringPowerSaveMode; }
+    public boolean isIgnoringPowerSaveMode() { return mIgnoringPowerSaveMode; }
 
     public Account getAccount() {
         return mAccount;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2020,7 +2020,7 @@ private void onUpdateShareInformation(RemoteOperationResult result, @StringRes i
             snackbar.show();
         }
 
-        if (fileDetailFragment != null && fileDetailFragment instanceof FileDetailFragment) {
+        if (fileDetailFragment instanceof FileDetailFragment) {
             ((FileDetailFragment) fileDetailFragment).getFileDetailSharingFragment()
                     .onUpdateShareInformation(result, getFile());
         }

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -461,8 +461,8 @@ protected class UserInfoAdapter extends RecyclerView.Adapter<UserInfoAdapter.Vie
 
         public class ViewHolder extends RecyclerView.ViewHolder {
 
-            @BindView(R.id.icon) protected ImageView icon = null;
-            @BindView(R.id.text) protected TextView text = null;
+            @BindView(R.id.icon) protected ImageView icon;
+            @BindView(R.id.text) protected TextView text;
 
             public ViewHolder(View itemView) {
                 super(itemView);

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -248,7 +248,7 @@ private void setThumbnail(File file, ImageView thumbnailView) {
             if (MimeTypeUtil.isImage(file)) {
                 // Thumbnail in Cache?
                 Bitmap thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(
-                        ThumbnailsCacheManager.PREFIX_THUMBNAIL + String.valueOf(file.hashCode())
+                        ThumbnailsCacheManager.PREFIX_THUMBNAIL + file.hashCode()
                 );
                 if (thumbnail != null) {
                     thumbnailView.setImageBitmap(thumbnail);

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -211,7 +211,7 @@ private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {
                 // Thumbnail in cache?
                 Bitmap thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(
-                        ThumbnailsCacheManager.PREFIX_THUMBNAIL + String.valueOf(file.getRemoteId())
+                        ThumbnailsCacheManager.PREFIX_THUMBNAIL + file.getRemoteId()
                 );
 
                 if (thumbnail != null) {

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -299,7 +299,7 @@ private void performSearch(final String query, boolean isSubmit) {
                 delay = 0;
             }
 
-            if (adapter != null && adapter instanceof OCFileListAdapter) {
+            if (adapter instanceof OCFileListAdapter) {
                 handler.postDelayed(new Runnable() {
                     @Override
                     public void run() {
@@ -313,7 +313,7 @@ public void run() {
                         }
                     }
                 }, delay);
-            } else if (adapter != null && adapter instanceof LocalFileListAdapter) {
+            } else if (adapter instanceof LocalFileListAdapter) {
                 handler.postDelayed(new Runnable() {
                     @Override
                     public void run() {

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -433,12 +433,12 @@ public void onClick(View v) {
                 break;
             }
             case R.id.favorite: {
-                if (getFile().getIsFavorite()) {
+                if (getFile().isFavorite()) {
                     mContainerActivity.getFileOperationsHelper().toggleFavoriteFile(getFile(), false);
                 } else {
                     mContainerActivity.getFileOperationsHelper().toggleFavoriteFile(getFile(), true);
                 }
-                setFavoriteIconStatus(!getFile().getIsFavorite());
+                setFavoriteIconStatus(!getFile().isFavorite());
                 break;
             }
             case R.id.overflow_menu: {
@@ -503,7 +503,7 @@ public void updateFileDetails(boolean transferring, boolean refresh) {
             fileSize.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
             fileModifiedTimestamp.setText(DisplayUtils.getRelativeTimestamp(getContext(), file.getModificationTimestamp()));
             setFilePreview(file);
-            setFavoriteIconStatus(file.getIsFavorite());
+            setFavoriteIconStatus(file.isFavorite());
 
             // configure UI for depending upon local state of the file
             FileDownloaderBinder downloaderBinder = mContainerActivity.getFileDownloaderBinder();

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -780,7 +780,7 @@ public void syncFile(OCFile file) {
     public void toggleFavoriteFiles(Collection<OCFile> files, boolean shouldBeFavorite) {
         List<OCFile> alreadyRightStateList = new ArrayList<>();
         for (OCFile file : files) {
-            if (file.getIsFavorite() == shouldBeFavorite) {
+            if (file.isFavorite() == shouldBeFavorite) {
                 alreadyRightStateList.add(file);
             }
         }
@@ -793,7 +793,7 @@ public void toggleFavoriteFiles(Collection<OCFile> files, boolean shouldBeFavori
     }
 
     public void toggleFavoriteFile(OCFile file, boolean shouldBeFavorite) {
-        if (file.getIsFavorite() != shouldBeFavorite) {
+        if (file.isFavorite() != shouldBeFavorite) {
             EventBus.getDefault().post(new FavoriteEvent(file.getRemotePath(), shouldBeFavorite, file.getRemoteId()));
         }
     }

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -167,7 +167,7 @@ public void onStart() {
     protected void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putBoolean(KEY_WAITING_FOR_BINDER, mRequestWaitingForBinder);
-        outState.putBoolean(KEY_SYSTEM_VISIBLE, getSystemUIVisible());
+        outState.putBoolean(KEY_SYSTEM_VISIBLE, isSystemUIVisible());
     }
 
     @Override
@@ -426,7 +426,7 @@ public void onReceive(Context context, Intent intent) {
         }
     }
 
-    public boolean getSystemUIVisible() {
+    public boolean isSystemUIVisible() {
         return getSupportActionBar() == null || getSupportActionBar().isShowing();
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -728,7 +728,7 @@ && getActivity() instanceof PreviewImageActivity && getResources() != null) {
                 LayerDrawable layerDrawable = (LayerDrawable) mImageView.getDrawable();
                 Drawable layerOne;
 
-                if (previewImageActivity.getSystemUIVisible()) {
+                if (previewImageActivity.isSystemUIVisible()) {
                     layerOne = getResources().getDrawable(R.color.white);
                 } else {
                     layerOne = getResources().getDrawable(R.drawable.backrepeat);

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -53,7 +53,6 @@ public class PreviewImagePagerAdapter extends FragmentStatePagerAdapter {
     private Set<Integer> mObsoletePositions;
     private Set<Integer> mDownloadErrors;
     private FileDataStorageManager mStorageManager;
-
     private SparseArray<FileFragment> mCachedFragments;
 
     /**
@@ -240,12 +239,13 @@ public boolean pendingErrorAt(int position) {
      * Reset the image zoom to default value for each CachedFragments
      */
     public void resetZoom() {
+        Matrix matrix = new Matrix();
         for (int i = 0; i < mCachedFragments.size(); i++) {
             FileFragment fileFragment = mCachedFragments.valueAt(i);
 
             if (fileFragment instanceof PreviewImageFragment) {
-                ((PreviewImageFragment) fileFragment).getImageView().setDisplayMatrix(new Matrix());
-                ((PreviewImageFragment) fileFragment).getImageView().setSuppMatrix(new Matrix());
+                ((PreviewImageFragment) fileFragment).getImageView().setDisplayMatrix(matrix);
+                ((PreviewImageFragment) fileFragment).getImageView().setSuppMatrix(matrix);
             }
         }
     }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -289,7 +289,7 @@ public static int[] calculateHSL(String name) throws NoSuchAlgorithmException {
 
         // Splitting evenly the string
         for (int i = 0; i < hash.length(); i++) {
-            result[i % modulo] = result[i % modulo] + String.valueOf(Integer.parseInt(hash.substring(i, i + 1), 16));
+            result[i % modulo] = result[i % modulo] + Integer.parseInt(hash.substring(i, i + 1), 16);
         }
 
         // Converting our data into a usable rgb format

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -252,7 +252,7 @@ public static String convertIdn(String url, boolean toASCII) {
 
         String urlNoDots = url;
         String dots = "";
-        while (urlNoDots.startsWith(".")) {
+        while (urlNoDots.charAt(0) == '.') {
             urlNoDots = url.substring(1);
             dots = dots + ".";
         }

File: src/main/java/com/owncloud/android/utils/FileSortOrder.java
Patch:
@@ -79,11 +79,11 @@ public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
      */
     public static List<OCFile> sortCloudFilesByFavourite(List<OCFile> files) {
         Collections.sort(files, (o1, o2) -> {
-            if (o1.getIsFavorite() && o2.getIsFavorite()) {
+            if (o1.isFavorite() && o2.isFavorite()) {
                 return 0;
-            } else if (o1.getIsFavorite()) {
+            } else if (o1.isFavorite()) {
                 return -1;
-            } else if (o2.getIsFavorite()) {
+            } else if (o2.isFavorite()) {
                 return 1;
             }
             return 0;

File: src/main/java/com/owncloud/android/utils/FileSortOrderByName.java
Patch:
@@ -68,7 +68,7 @@ public List<OCFile> sortCloudFiles(List<OCFile> files) {
      *
      * @param files files to sort
      */
-    @SuppressFBWarnings(value = "Bx")
+    @SuppressFBWarnings("Bx")
     @Override
     public List<TrashbinFile> sortTrashbinFiles(List<TrashbinFile> files) {
         final int multiplier = mAscending ? 1 : -1;

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -195,7 +195,7 @@ public static RemoteFile fillRemoteFile(OCFile ocFile) {
         file.setEtag(ocFile.getEtag());
         file.setPermissions(ocFile.getPermissions());
         file.setRemoteId(ocFile.getRemoteId());
-        file.setFavorite(ocFile.getIsFavorite());
+        file.setFavorite(ocFile.isFavorite());
         return file;
     }
 

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -544,8 +544,8 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flac", Collections.singletonList("audio/flac"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flv", Collections.singletonList("video/x-flv"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gif", Collections.singletonList("image/gif"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/x-gzip"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gzip", Collections.singletonList("application/x-gzip"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/gzip"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gzip", Collections.singletonList("application/gzip"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("h", Collections.singletonList("text/x-h"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("hh", Collections.singletonList("text/x-h"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("html", Arrays.asList("text/html", "text/plain"));
@@ -631,7 +631,6 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("svg", Arrays.asList("image/svg+xml", "text/plain"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("swf", Arrays.asList("application/x-shockwave-flash", "application/octet-stream"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tar", Collections.singletonList("application/x-tar"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/x-compressed"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tex", Collections.singletonList("application/x-tex"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tgz", Collections.singletonList("application/x-compressed"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tiff", Collections.singletonList("image/tiff"));

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -544,8 +544,8 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flac", Collections.singletonList("audio/flac"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("flv", Collections.singletonList("video/x-flv"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gif", Collections.singletonList("image/gif"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/x-gzip"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gzip", Collections.singletonList("application/x-gzip"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/gzip"));
+        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gzip", Collections.singletonList("application/gzip"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("h", Collections.singletonList("text/x-h"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("hh", Collections.singletonList("text/x-h"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("html", Arrays.asList("text/html", "text/plain"));
@@ -631,7 +631,6 @@ private static void populateFileExtensionMimeTypeMapping() {
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("svg", Arrays.asList("image/svg+xml", "text/plain"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("swf", Arrays.asList("application/x-shockwave-flash", "application/octet-stream"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tar", Collections.singletonList("application/x-tar"));
-        FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("gz", Collections.singletonList("application/x-compressed"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tex", Collections.singletonList("application/x-tex"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tgz", Collections.singletonList("application/x-compressed"));
         FILE_EXTENSION_TO_MIMETYPE_MAPPING.put("tiff", Collections.singletonList("image/tiff"));

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -119,9 +119,9 @@ public static List<MediaFolder> getImageFolders(ContentResolver contentResolver,
                                 MediaStore.MediaColumns.DATA));
 
                         // check if valid path
-                        if (filePath != null && filePath.lastIndexOf("/") > 0) {
+                        if (filePath != null && filePath.lastIndexOf('/') > 0) {
                             mediaFolder.filePaths.add(filePath);
-                            mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf("/"));
+                            mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf('/'));
                         }
                     }
                     cursorImages.close();

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -90,13 +90,13 @@ public final class ThumbnailsCacheManager {
     private static final String ETAG = "ETag";
 
     private static final Object mThumbnailsDiskCacheLock = new Object();
-    private static DiskLruImageCache mThumbnailCache = null;
+    private static DiskLruImageCache mThumbnailCache;
     private static boolean mThumbnailCacheStarting = true;
 
     private static final int DISK_CACHE_SIZE = 1024 * 1024 * 200; // 200MB
     private static final CompressFormat mCompressFormat = CompressFormat.JPEG;
     private static final int mCompressQuality = 70;
-    private static OwnCloudClient mClient = null;
+    private static OwnCloudClient mClient;
 
     public static final Bitmap mDefaultImg = BitmapFactory.decodeResource(MainApp.getAppContext().getResources(),
             R.drawable.file_image);
@@ -384,7 +384,7 @@ public static class ThumbnailGenerationTask extends AsyncTask<ThumbnailGeneratio
         private static Account mAccount;
         private List<ThumbnailGenerationTask> mAsyncTasks;
         private Object mFile;
-        private String mImageKey = null;
+        private String mImageKey;
         private FileDataStorageManager mStorageManager;
         private GetMethod getMethod;
 

File: src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java
Patch:
@@ -84,9 +84,9 @@ protected Result onRunJob(@NonNull Params params) {
             if (cursorOnKeptInSync != null) {
                 if (cursorOnKeptInSync.moveToFirst()) {
 
-                    String localPath = "";
-                    String accountName = "";
-                    Account account = null;
+                    String localPath;
+                    String accountName;
+                    Account account;
                     do {
                         localPath = cursorOnKeptInSync.getString(cursorOnKeptInSync
                                 .getColumnIndex(ProviderMeta.ProviderTableMeta.FILE_STORAGE_PATH));

File: src/main/java/com/owncloud/android/operations/GetServerInfoOperation.java
Patch:
@@ -82,7 +82,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         if (result.isSuccess()) {
             // second: get authentication method required by the server
             mResultData.mVersion = (OwnCloudVersion)(result.getData().get(0));
-            mResultData.mIsSslConn = (result.getCode() == ResultCode.OK_SSL);
+            mResultData.mIsSslConn = result.getCode() == ResultCode.OK_SSL;
             mResultData.mBaseUrl = normalizeProtocolPrefix(mUrl, mResultData.mIsSslConn);
             RemoteOperationResult detectAuthResult = detectAuthorizationMethod(client);
             

File: src/main/java/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -81,7 +81,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if (!isValidNewName()) {
                 return new RemoteOperationResult(ResultCode.INVALID_LOCAL_FILE_NAME);
             }
-            String parent = (new File(mFile.getRemotePath())).getParent();
+            String parent = new File(mFile.getRemotePath()).getParent();
             parent = parent.endsWith(OCFile.PATH_SEPARATOR) ? parent : parent + OCFile.PATH_SEPARATOR;
             mNewRemotePath =  parent + mNewName;
             if (mFile.isFolder()) {

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -211,9 +211,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 } else {
                     serverChanged = !mServerFile.getEtag().equals(mLocalFile.getEtag());
                 }
-                boolean localChanged = (
-                        mLocalFile.getLocalModificationTimestamp() > mLocalFile.getLastSyncDateForData()
-                );
+                boolean localChanged =
+                        mLocalFile.getLocalModificationTimestamp() > mLocalFile.getLastSyncDateForData();
 
                 /// decide action to perform depending upon changes
                 //if (!mLocalFile.getEtag().isEmpty() && localChanged && serverChanged) {

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -215,7 +215,7 @@ public UploadFileOperation(Account account,
         mCreatedBy = upload.getCreatedBy();
         mRemoteFolderToBeCreated = upload.isCreateRemoteFolder();
         // Ignore power save mode only if user explicitly created this upload
-        mIgnoringPowerSaveMode = (mCreatedBy == CREATED_BY_USER);
+        mIgnoringPowerSaveMode = mCreatedBy == CREATED_BY_USER;
         mFolderUnlockToken = upload.getFolderUnlockToken();
     }
 
@@ -721,8 +721,8 @@ private RemoteOperationResult checkConditions(File originalFile) {
         }
 
         // check if charging conditions are met and delays the upload otherwise
-        if (mWhileChargingOnly && (!Device.getBatteryStatus(mContext).isCharging() && Device.getBatteryStatus(mContext)
-                .getBatteryPercent() < 1)) {
+        if (mWhileChargingOnly && !Device.getBatteryStatus(mContext).isCharging()
+                && Device.getBatteryStatus(mContext).getBatteryPercent() < 1) {
             Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
             remoteOperationResult =  new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
         }

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -617,13 +617,13 @@ private void nextOperation() {
                                 remotePath,
                                 shareType,
                                 shareWith,
-                                OperationsService.this
+                                this
                         );
                     }
                     
                 } else if (ACTION_GET_SERVER_INFO.equals(action)) {
                     // check OC server and get basic information from it
-                    operation = new GetServerInfoOperation(serverUrl, OperationsService.this);
+                    operation = new GetServerInfoOperation(serverUrl, this);
 
                 } else if (ACTION_OAUTH2_GET_ACCESS_TOKEN.equals(action)) {
                     /// GET ACCESS TOKEN to the OAuth server

File: src/main/java/com/owncloud/android/ui/EmptyRecyclerView.java
Patch:
@@ -69,7 +69,7 @@ private void initEmptyView() {
             int emptyCount = hasFooter ? 1 : 0;
             boolean empty = getAdapter() == null || getAdapter().getItemCount() == emptyCount;
             mEmptyView.setVisibility(empty ? VISIBLE : GONE);
-            EmptyRecyclerView.this.setVisibility(empty ? GONE : VISIBLE);
+            this.setVisibility(empty ? GONE : VISIBLE);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -1386,7 +1386,7 @@ && getStorageManager() != null) {
                     getCapabilities.execute(getStorageManager(), getBaseContext());
                 }
 
-                Account account = AccountUtils.getCurrentOwnCloudAccount(DrawerActivity.this);
+                Account account = AccountUtils.getCurrentOwnCloudAccount(this);
 
                 if (account != null && getStorageManager() != null &&
                         getStorageManager().getCapability(account.name) != null &&
@@ -1405,7 +1405,7 @@ && getStorageManager() != null) {
 
                         Log_OC.d("ExternalLinks", "update via api");
                         RemoteOperation getExternalLinksOperation = new ExternalLinksOperation();
-                        RemoteOperationResult result = getExternalLinksOperation.execute(account, DrawerActivity.this);
+                        RemoteOperationResult result = getExternalLinksOperation.execute(account, this);
 
                         if (result.isSuccess() && result.getData() != null) {
                             externalLinksProvider.deleteAllExternalLinks();

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -493,7 +493,7 @@ public void dismissLoadingDialog() {
 
 
     private void doOnResumeAndBound() {
-        mOperationsServiceBinder.addOperationListener(FileActivity.this, mHandler);
+        mOperationsServiceBinder.addOperationListener(this, mHandler);
         long waitingForOpId = mFileOperationsHelper.getOpIdWaitingFor();
         if (waitingForOpId <= Integer.MAX_VALUE) {
             boolean wait = mOperationsServiceBinder.dispatchResultIfFinished((int)waitingForOpId,

File: src/main/java/com/owncloud/android/ui/activity/NotificationsActivity.java
Patch:
@@ -31,7 +31,6 @@
 import android.support.design.widget.BottomNavigationView;
 import android.support.design.widget.Snackbar;
 import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.widget.DividerItemDecoration;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.view.MenuItem;

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -528,7 +528,7 @@ private void setFilename(EditText inputText, int selectPos)
             String filename = mFilenameBase.get(selectPos) + mFilenameSuffix.get(selectPos);
             inputText.setText(filename);
             int selectionStart = 0;
-            int extensionStart = filename.lastIndexOf(".");
+            int extensionStart = filename.lastIndexOf('.');
             int selectionEnd = extensionStart >= 0 ? extensionStart : filename.length();
             if (selectionEnd >= 0) {
                 inputText.setSelection(

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -151,8 +151,8 @@ private int getAppropiatePermissions(ShareType shareType) {
                 return getFile().isFolder() ? OCShare.FEDERATED_PERMISSIONS_FOR_FOLDER_AFTER_OC9 :
                         OCShare.FEDERATED_PERMISSIONS_FOR_FILE_AFTER_OC9;
         } else {
-            return (getFile().isFolder() ? OCShare.MAXIMUM_PERMISSIONS_FOR_FOLDER :
-                    OCShare.MAXIMUM_PERMISSIONS_FOR_FILE);
+            return getFile().isFolder() ? OCShare.MAXIMUM_PERMISSIONS_FOR_FOLDER :
+                    OCShare.MAXIMUM_PERMISSIONS_FOR_FILE;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -225,7 +225,7 @@ private void load(final int perFolderMediaItemLimit, boolean force) {
 
         List<SyncedFolder> syncedFolderArrayList = mSyncedFolderProvider.getSyncedFolders();
         List<SyncedFolder> currentAccountSyncedFoldersList = new ArrayList<>();
-        Account currentAccount = AccountUtils.getCurrentOwnCloudAccount(SyncedFoldersActivity.this);
+        Account currentAccount = AccountUtils.getCurrentOwnCloudAccount(this);
         for (SyncedFolder syncedFolder : syncedFolderArrayList) {
             if (currentAccount != null && syncedFolder.getAccount().equals(currentAccount.name)) {
                 currentAccountSyncedFoldersList.add(syncedFolder);

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -299,10 +299,10 @@ private SpannableStringBuilder addClickablePart(RichElement richElement) {
         String text = richElement.getRichSubject();
         SpannableStringBuilder ssb = new SpannableStringBuilder(text);
 
-        int idx1 = text.indexOf("{");
+        int idx1 = text.indexOf('{');
         int idx2;
         while (idx1 != -1) {
-            idx2 = text.indexOf("}", idx1) + 1;
+            idx2 = text.indexOf('}', idx1) + 1;
             final String clickString = text.substring(idx1 + 1, idx2 - 1);
             final RichObject richObject = searchObjectByName(richElement.getRichObjectList(), clickString);
             if (richObject != null) {
@@ -324,7 +324,7 @@ public void updateDrawState(TextPaint ds) {
                 ssb.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), idx1, idx2, 0);
                 ssb.setSpan(new ForegroundColorSpan(Color.BLACK), idx1, idx2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
             }
-            idx1 = text.indexOf("{", idx2);
+            idx1 = text.indexOf('{', idx2);
         }
 
         return ssb;

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -241,7 +241,7 @@ private void setThumbnail(File file, ImageView thumbnailView) {
             /* Cancellation needs do be checked and done before changing the drawable in fileIcon, or
              * {@link ThumbnailsCacheManager#cancelPotentialThumbnailWork} will NEVER cancel any task.
              */
-            boolean allowedToCreateNewThumbnail = (ThumbnailsCacheManager.cancelPotentialThumbnailWork(file, thumbnailView));
+            boolean allowedToCreateNewThumbnail = ThumbnailsCacheManager.cancelPotentialThumbnailWork(file, thumbnailView);
 
 
             // get Thumbnail if file is image

File: src/main/java/com/owncloud/android/ui/components/CustomEditText.java
Patch:
@@ -61,9 +61,9 @@ public String getFullServerUrl() {
                 || getText().toString().startsWith(AuthenticatorActivity.HTTPS_PROTOCOL)) {
             return getText().toString();
         } else if (isPrefixFixed) {
-            return (getResources().getString(R.string.server_url) + "/" + getText().toString());
+            return getResources().getString(R.string.server_url) + "/" + getText().toString();
         } else {
-            return (getText().toString() + "." + getResources().getString(R.string.server_url));
+            return getText().toString() + "." + getResources().getString(R.string.server_url);
         }
     }
 

File: src/main/java/com/owncloud/android/ui/dialog/RemoveFilesDialogFragment.java
Patch:
@@ -101,7 +101,7 @@ public static RemoveFilesDialogFragment newInstance(ArrayList<OCFile> files) {
             -1;
 
         args.putInt(ARG_MESSAGE_RESOURCE_ID, messageStringId);
-        if (files.size() == 1) {
+        if (files.size() == SINGLE_SELECTION) {
             args.putStringArray(ARG_MESSAGE_ARGUMENTS, new String[]{files.get(0).getFileName()});
         }
         args.putInt(ARG_POSITIVE_BTN_RES, R.string.file_delete);

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -577,7 +577,7 @@ private void setFilePreview(OCFile file) {
                 if (ThumbnailsCacheManager.cancelPotentialThumbnailWork(getFile(), activity.getPreviewImageView()) &&
                         mContainerActivity.getStorageManager() != null) {
                     final ThumbnailsCacheManager.ResizedImageGenerationTask task =
-                            new ThumbnailsCacheManager.ResizedImageGenerationTask(FileDetailFragment.this,
+                            new ThumbnailsCacheManager.ResizedImageGenerationTask(this,
                                     activity.getPreviewImageView(),
                                     mContainerActivity.getStorageManager(),
                                     mContainerActivity.getStorageManager().getAccount());

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -268,7 +268,7 @@ public void run() {
         }
 
         Bundle args = getArguments();
-        boolean allowContextualActions = (args != null) && args.getBoolean(ARG_ALLOW_CONTEXTUAL_ACTIONS, false);
+        boolean allowContextualActions = args != null && args.getBoolean(ARG_ALLOW_CONTEXTUAL_ACTIONS, false);
         if (allowContextualActions) {
             setChoiceModeAsMultipleModal(savedInstanceState);
         }

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -248,7 +248,7 @@ public void onStart() {
                     if (ThumbnailsCacheManager.cancelPotentialThumbnailWork(getFile(), mImageView) &&
                             mContainerActivity.getStorageManager() != null) {
                         final ThumbnailsCacheManager.ResizedImageGenerationTask task =
-                                new ThumbnailsCacheManager.ResizedImageGenerationTask(PreviewImageFragment.this,
+                                new ThumbnailsCacheManager.ResizedImageGenerationTask(this,
                                         mImageView,
                                         mContainerActivity.getStorageManager(),
                                         mContainerActivity.getStorageManager().getAccount());

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -295,7 +295,7 @@ public static int[] calculateHSL(String name) throws NoSuchAlgorithmException {
         // Converting our data into a usable rgb format
         // Start at 1 because 16%3=1 but 15%3=0 and makes the repartition even
         for (int count = 1; count < modulo; count++) {
-            rgb[count % 3] += (Integer.parseInt(result[count]));
+            rgb[count % 3] += Integer.parseInt(result[count]);
         }
 
         // Reduce values bigger than rgb requirements

File: src/main/java/com/owncloud/android/utils/FileSortOrderByName.java
Patch:
@@ -45,7 +45,7 @@ public class FileSortOrderByName extends FileSortOrder {
      *
      * @param files files to sort
      */
-    @SuppressFBWarnings(value = "Bx")
+    @SuppressFBWarnings("Bx")
     public List<OCFile> sortCloudFiles(List<OCFile> files) {
         final int multiplier = mAscending ? 1 : -1;
 

File: src/main/java/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -55,7 +55,8 @@ public class CreateShareWithShareeOperation extends SyncOperation {
      */
     public CreateShareWithShareeOperation(String path, String shareeName, ShareType shareType, int permissions) {
         if (!ShareType.USER.equals(shareType) && !ShareType.GROUP.equals(shareType)
-                && !ShareType.FEDERATED.equals(shareType) && !ShareType.EMAIL.equals(shareType)) {
+                && !ShareType.FEDERATED.equals(shareType) && !ShareType.EMAIL.equals(shareType)
+                && !ShareType.ROOM.equals(shareType)) {
             throw new IllegalArgumentException("Illegal share type " + shareType);
         }
         mPath = path;

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -104,8 +104,7 @@ private static int calculateSampleFactor(Options options, int reqWidth, int reqH
 
             // calculates the largest inSampleSize value (for smallest sample) that is a power of 2 and keeps both
             // height and width **larger** than the requested height and width.
-            while ((halfHeight / inSampleSize) > reqHeight
-                    && (halfWidth / inSampleSize) > reqWidth) {
+            while ((halfHeight / inSampleSize) > reqHeight || (halfWidth / inSampleSize) > reqWidth) {
                 inSampleSize *= 2;
             }
         }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -104,8 +104,7 @@ private static int calculateSampleFactor(Options options, int reqWidth, int reqH
 
             // calculates the largest inSampleSize value (for smallest sample) that is a power of 2 and keeps both
             // height and width **larger** than the requested height and width.
-            while ((halfHeight / inSampleSize) > reqHeight
-                    && (halfWidth / inSampleSize) > reqWidth) {
+            while ((halfHeight / inSampleSize) > reqHeight || (halfWidth / inSampleSize) > reqWidth) {
                 inSampleSize *= 2;
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/SsoGrantPermissionActivity.java
Patch:
@@ -31,6 +31,7 @@
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.text.Spannable;
@@ -140,7 +141,7 @@ private SpannableStringBuilder makeSpecialPartsBold(String text, String... toBeS
         for (String textBlock : toBeStyledText) {
             int start = text.indexOf(textBlock);
             int end = start + textBlock.length();
-            ssb.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), start, end, 0);
+            ssb.setSpan(new StyleSpan(Typeface.BOLD), start, end, 0);
             ssb.setSpan(new ForegroundColorSpan(Color.BLACK), start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
         }
 

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -280,6 +280,8 @@ public static void searchForLocalFileInDefaultPath(OCFile file, Account account)
         }
     }
 
+    @SuppressFBWarnings(value="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE",
+            justification="False-positive on the output stream")
     public static boolean copyFile(File src, File target) {
         boolean ret = true;
 

File: src/main/java/com/owncloud/android/datamodel/DecryptedFolderMetadata.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Map;
 
 /**
- * Decrypted class representation of metadata json of folder metadata
+ * Decrypted class representation of metadata json of folder metadata.
  */
 public class DecryptedFolderMetadata {
     private Metadata metadata;
@@ -36,7 +36,7 @@ public DecryptedFolderMetadata() {
         this.files = new HashMap<>();
     }
 
-    public DecryptedFolderMetadata(Metadata metadata, HashMap<String, DecryptedFile> files) {
+    public DecryptedFolderMetadata(Metadata metadata, Map<String, DecryptedFile> files) {
         this.metadata = metadata;
         this.files = files;
     }

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1466,8 +1466,8 @@ public void removeShare(OCShare share) {
         }
     }
 
-    public void saveSharesDB(ArrayList<OCShare> shares) {
-        ArrayList<ContentProviderOperation> operations = new ArrayList<ContentProviderOperation>();
+    public void saveSharesDB(List<OCShare> shares) {
+        ArrayList<ContentProviderOperation> operations = new ArrayList<>();
 
         // Reset flags & Remove shares for this files
         String filePath = "";
@@ -1581,7 +1581,7 @@ public void saveSharesInFolder(ArrayList<OCShare> shares, OCFile folder) {
      * @return
      */
     private ArrayList<ContentProviderOperation> prepareInsertShares(
-            ArrayList<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
+            List<OCShare> shares, ArrayList<ContentProviderOperation> operations) {
 
         if (shares != null) {
             // prepare operations to insert or update files to save in the given folder

File: src/main/java/com/owncloud/android/datastorage/providers/AbstractCommandLineStoragePoint.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  *   Nextcloud Android client application
  *
  *   @author Bartosz Przybylski

File: src/main/java/com/owncloud/android/datastorage/providers/AbstractStoragePointProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  *   Nextcloud Android client application
  *
  *   @author Bartosz Przybylski
@@ -24,14 +24,15 @@
 import com.owncloud.android.datastorage.StoragePoint;
 
 import java.io.File;
+import java.util.List;
 import java.util.Vector;
 
 /**
  * @author Bartosz Przybylski
  */
 abstract class AbstractStoragePointProvider implements IStoragePointProvider {
 
-    boolean canBeAddedToAvailableList(Vector<StoragePoint> currentList, String path) {
+    boolean canBeAddedToAvailableList(List<StoragePoint> currentList, String path) {
         if (path == null) {
             return false;
         }

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -663,7 +663,7 @@ public void updateAccountList() {
      *
      * @param accounts list of accounts
      */
-    private void repopulateAccountList(ArrayList<Account> accounts) {
+    private void repopulateAccountList(List<Account> accounts) {
         // remove all accounts from list
         mNavigationView.getMenu().removeGroup(R.id.drawer_menu_accounts);
 

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -315,9 +315,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
          *
          * @return list of account list items
          */
-        private ArrayList<AccountListItem> getAccountListItems(ReceiveExternalFilesActivity activity) {
+        private List<AccountListItem> getAccountListItems(ReceiveExternalFilesActivity activity) {
             Account[] accountList = activity.mAccountManager.getAccountsByType(MainApp.getAccountType(getActivity()));
-            ArrayList<AccountListItem> adapterAccountList = new ArrayList<>(accountList.length);
+            List<AccountListItem> adapterAccountList = new ArrayList<>(accountList.length);
             for (Account account : accountList) {
                 adapterAccountList.add(new AccountListItem(account));
             }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -117,6 +117,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Set;
 
 /**
@@ -180,7 +181,7 @@ private enum MenuItemAddRemove {
 
     private MenuItemAddRemove menuItemAddRemoveValue = MenuItemAddRemove.DO_NOTHING;
 
-    private ArrayList<MenuItem> mOriginalMenuItems = new ArrayList<>();
+    private List<MenuItem> mOriginalMenuItems = new ArrayList<>();
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -439,7 +440,7 @@ private class MultiChoiceModeListener implements AbsListView.MultiChoiceModeList
         /**
          * Selected items in list when action mode is closed by drawer
          */
-        private HashSet<OCFile> mSelectionWhenActionModeClosedByDrawer = new HashSet<>();
+        private Set<OCFile> mSelectionWhenActionModeClosedByDrawer = new HashSet<>();
 
         @Override
         public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {
@@ -487,7 +488,6 @@ public void onDrawerStateChanged(int newState) {
             }
         }
 
-
         /**
          * Update action mode bar when an item is selected / unselected in the list
          */

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -766,7 +766,8 @@ public void copyLocalFile(OCFile file, String targetPath) {
         }
     }
 
-    public void migrateStoredFiles(String srcPath, String dstPath) throws RemoteException {
+    public void migrateStoredFiles(String srcPath, String dstPath)
+            throws RemoteException, OperationApplicationException {
         Cursor cursor;
         try {
             if (getContentResolver() != null) {

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -185,6 +185,7 @@ public void onClick(View view) {
 
                                 try {
                                     String privateKey = task.get();
+                                    String mnemonicUnchanged = passwordField.getText().toString();
                                     String mnemonic = passwordField.getText().toString().replaceAll("\\s", "")
                                             .toLowerCase(Locale.ROOT);
                                     String decryptedPrivateKey = EncryptionUtils.decryptPrivateKey(privateKey,
@@ -197,7 +198,7 @@ public void onClick(View view) {
                                     Log_OC.d(TAG, "Private key successfully decrypted and stored");
 
                                     arbitraryDataProvider.storeOrUpdateKeyValue(account.name, EncryptionUtils.MNEMONIC,
-                                            mnemonic);
+                                            mnemonicUnchanged);
 
                                     Intent intentExisting = new Intent();
                                     intentExisting.putExtra(SUCCESS, true);

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -870,7 +870,8 @@ Drawable doAvatarInBackground() {
                     // we are using eTag to download a new avatar only if it changed
                     switch (status) {
                         case HttpStatus.SC_OK:
-                            // new avatar
+                        case HttpStatus.SC_CREATED:
+						    // new avatar
                             InputStream inputStream = get.getResponseBodyAsStream();
 
                             String newETag = null;

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -870,7 +870,8 @@ Drawable doAvatarInBackground() {
                     // we are using eTag to download a new avatar only if it changed
                     switch (status) {
                         case HttpStatus.SC_OK:
-                            // new avatar
+                        case HttpStatus.SC_CREATED:
+						    // new avatar
                             InputStream inputStream = get.getResponseBodyAsStream();
 
                             String newETag = null;

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -185,6 +185,7 @@ public void onClick(View view) {
 
                                 try {
                                     String privateKey = task.get();
+                                    String mnemonicUnchanged = passwordField.getText().toString();
                                     String mnemonic = passwordField.getText().toString().replaceAll("\\s", "")
                                             .toLowerCase(Locale.ROOT);
                                     String decryptedPrivateKey = EncryptionUtils.decryptPrivateKey(privateKey,
@@ -197,7 +198,7 @@ public void onClick(View view) {
                                     Log_OC.d(TAG, "Private key successfully decrypted and stored");
 
                                     arbitraryDataProvider.storeOrUpdateKeyValue(account.name, EncryptionUtils.MNEMONIC,
-                                            mnemonic);
+                                            mnemonicUnchanged);
 
                                     Intent intentExisting = new Intent();
                                     intentExisting.putExtra(SUCCESS, true);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -366,7 +366,7 @@ private void checkOutdatedServer() {
             if (MainApp.getVersionCode() > lastSeenVersion) {
                 OwnCloudVersion serverVersion = AccountUtils.getServerVersionForAccount(account, this);
 
-                if (serverVersion.compareTo(MainApp.OUTDATED_SERVER_VERSION) < 0) {
+                if (MainApp.OUTDATED_SERVER_VERSION.compareTo(serverVersion) >= 0) {
                     DisplayUtils.showServerOutdatedSnackbar(this);
                 }
 

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1587,6 +1587,8 @@ public void selectAllFiles(boolean select) {
      * Exits the multi file selection mode.
      */
     public void exitSelectionMode() {
-        mActiveActionMode.finish();
+        if (mActiveActionMode != null) {
+            mActiveActionMode.finish();
+        }
     }
 }

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -109,7 +109,7 @@ public class MainApp extends MultiDexApplication {
 
     private static String storagePath;
 
-    private static boolean mOnlyOnDevice = false;
+    private static boolean mOnlyOnDevice;
 
     private SharedPreferences appPrefs;
     @SuppressWarnings("unused")
@@ -154,7 +154,7 @@ public void onCreate() {
             Log_OC.d("Debug", "start logging");
         }
 
-        if (Build.VERSION.SDK_INT >= 24) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             try {
                 Method m = StrictMode.class.getMethod("disableDeathOnFileUriExposure");
                 m.invoke(null);

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -53,10 +53,10 @@ public class PassCodeManager {
     private static final int PASS_CODE_TIMEOUT = 1000;
         // keeping a "low" positive value is the easiest way to prevent the pass code is requested on rotations
 
-    private static PassCodeManager passCodeManagerInstance = null;
+    private static PassCodeManager passCodeManagerInstance;
 
     private Long timestamp = 0L;
-    private int visibleActivitiesCounter = 0;
+    private int visibleActivitiesCounter;
 
     public static PassCodeManager getPassCodeManager() {
         if (passCodeManagerInstance == null) {

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -466,8 +466,8 @@ public void setFileName(String name) {
         Log_OC.d(TAG, "OCFile name changing from " + mRemotePath);
         if (name != null && name.length() > 0 && !name.contains(PATH_SEPARATOR) &&
                 !mRemotePath.equals(ROOT_PATH)) {
-            String parent = (new File(this.getRemotePath())).getParent();
-            parent = (parent.endsWith(PATH_SEPARATOR)) ? parent : parent + PATH_SEPARATOR;
+            String parent = new File(this.getRemotePath()).getParent();
+            parent = parent.endsWith(PATH_SEPARATOR) ? parent : parent + PATH_SEPARATOR;
             mRemotePath = parent + name;
             if (isFolder()) {
                 mRemotePath += PATH_SEPARATOR;

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -275,7 +275,7 @@ public OCUpload[] getAllStoredUploads() {
         return getUploads(null, null);
     }
 
-    private OCUpload[] getUploads(@Nullable String selection, @Nullable String[] selectionArgs) {
+    private OCUpload[] getUploads(@Nullable String selection, @Nullable String... selectionArgs) {
         OCUpload[] list;
 
         Cursor c = getDB().query(

File: src/main/java/com/owncloud/android/db/OCUpload.java
Patch:
@@ -353,7 +353,7 @@ public String toFormattedString() {
                     (getLastResult() == null ? "null" : getLastResult().getValue());
         } catch (NullPointerException e) {
             Log_OC.d(TAG, "Exception " + e.toString());
-            return (e.toString());
+            return e.toString();
         }
     }
 

File: src/main/java/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -82,8 +82,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 return new RemoteOperationResult(ResultCode.INVALID_LOCAL_FILE_NAME);
             }
             String parent = (new File(mFile.getRemotePath())).getParent();
-            parent = (parent.endsWith(OCFile.PATH_SEPARATOR)) ? parent : parent +
-                    OCFile.PATH_SEPARATOR;
+            parent = parent.endsWith(OCFile.PATH_SEPARATOR) ? parent : parent + OCFile.PATH_SEPARATOR;
             mNewRemotePath =  parent + mNewName;
             if (mFile.isFolder()) {
                 mNewRemotePath += OCFile.PATH_SEPARATOR;

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -50,8 +50,7 @@ public class SynchronizeFileOperation extends SyncOperation {
     private Account mAccount;
     private boolean mSyncFileContents;
     private Context mContext;
-
-    private boolean mTransferWasRequested = false;
+    private boolean mTransferWasRequested;
 
     /**
      * When 'false', uploads to the server are not done; only downloads or conflict detection.

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -127,7 +127,7 @@ public class UploadFileOperation extends SyncOperation {
     /**
      * Local path to file which is to be uploaded (before any possible renaming or moving).
      */
-    private String mOriginalStoragePath = null;
+    private String mOriginalStoragePath;
     private Set<OnDatatransferProgressListener> mDataTransferListeners = new HashSet<>();
     private OnRenameListener mRenameUploadListener;
 
@@ -138,7 +138,7 @@ public class UploadFileOperation extends SyncOperation {
 
     private UploadRemoteFileOperation mUploadOperation;
 
-    protected RequestEntity mEntity = null;
+    protected RequestEntity mEntity;
 
     private Account mAccount;
     private OCUpload mUpload;

File: src/main/java/com/owncloud/android/ui/ExtendedListView.java
Patch:
@@ -36,7 +36,7 @@ public class ExtendedListView extends ListView {
 
     private static final String TAG = ExtendedListView.class.getSimpleName();
 
-    private int mPositionToSetAndCenter = 0;
+    private int mPositionToSetAndCenter;
 
     public ExtendedListView(Context context) {
         super(context);

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -946,13 +946,13 @@ private void getAndDisplayUserQuota() {
         Thread t = new Thread(new Runnable() {
             public void run() {
                 Context context = MainApp.getAppContext();
-                AccountManager mAccountMgr = AccountManager.get(context);
                 Account account = AccountUtils.getCurrentOwnCloudAccount(context);
 
                 if (account == null) {
                     return;
                 }
 
+                AccountManager mAccountMgr = AccountManager.get(context);
                 String userId = mAccountMgr.getUserData(account,
                         com.owncloud.android.lib.common.accounts.AccountUtils.Constants.KEY_USER_ID);
 

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -315,8 +315,7 @@ protected boolean checkPassCode(){
 
         boolean result = true;
         for (int i = 0; i < mPassCodeDigits.length && result; i++) {
-            result = (mPassCodeDigits[i] != null) &&
-                    mPassCodeDigits[i].equals(savedPassCodeDigits[i]);
+            result = mPassCodeDigits[i] != null && mPassCodeDigits[i].equals(savedPassCodeDigits[i]);
         }
         return result;
     }
@@ -332,7 +331,7 @@ protected boolean confirmPassCode(){
 
         boolean result = true;
         for (int i = 0; i < mPassCodeEditTexts.length && result; i++) {
-            result = ((mPassCodeEditTexts[i].getText().toString()).equals(mPassCodeDigits[i]));
+            result = mPassCodeEditTexts[i].getText().toString().equals(mPassCodeDigits[i]);
         }
         return result;
     }

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -148,8 +148,8 @@ private int getAppropiatePermissions(ShareType shareType) {
             return OCShare.READ_PERMISSION_FLAG;    // minimum permissions
 
         } else if (isFederated) {
-                return (getFile().isFolder() ? OCShare.FEDERATED_PERMISSIONS_FOR_FOLDER_AFTER_OC9 :
-                        OCShare.FEDERATED_PERMISSIONS_FOR_FILE_AFTER_OC9);
+                return getFile().isFolder() ? OCShare.FEDERATED_PERMISSIONS_FOR_FOLDER_AFTER_OC9 :
+                        OCShare.FEDERATED_PERMISSIONS_FOR_FILE_AFTER_OC9;
         } else {
             return (getFile().isFolder() ? OCShare.MAXIMUM_PERMISSIONS_FOR_FOLDER :
                     OCShare.MAXIMUM_PERMISSIONS_FOR_FILE);

File: src/main/java/com/owncloud/android/ui/activity/StorageMigration.java
Patch:
@@ -269,7 +269,7 @@ protected void waitForUnfinishedSynchronizations() {
             }
         }
 
-        protected void restoreAccountsSyncStatus(boolean oldSync[]) {
+        protected void restoreAccountsSyncStatus(boolean... oldSync) {
             // If we don't have the old sync statuses, then
             // probably migration failed even before saving states,
             // which is weird and should be investigated.

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -423,7 +423,7 @@ public int compare(File f1, File f2) {
         return files;
     }
 
-    private List<String> getDisplayFilePathList(File[] files) {
+    private List<String> getDisplayFilePathList(File... files) {
         List<String> filePaths = null;
 
         if (files != null && files.length > 0) {

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -84,9 +84,9 @@ public class UploadFilesActivity extends FileActivity implements
     private static final String SORT_ORDER_DIALOG_TAG = "SORT_ORDER_DIALOG";
 
     private ArrayAdapter<String> mDirectories;
-    private File mCurrentDir = null;
-    private boolean mSelectAll = false;
-    private boolean mLocalFolderPickerMode = false;
+    private File mCurrentDir;
+    private boolean mSelectAll;
+    private boolean mLocalFolderPickerMode;
     private LocalFileListFragment mFileListFragment;
     protected Button mUploadBtn;
     private Spinner mBehaviourSpinner;

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -239,7 +239,7 @@ private ImageView createThumbnail(final RichObject richObject, boolean isDetailV
     private void setBitmap(OCFile file, ImageView fileIcon, boolean isDetailView) {
         // No Folder
         if (!file.isFolder()) {
-            if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file))) {
+            if (MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) {
                 int placeholder;
 
                 if (MimeTypeUtil.isImage(file)) {

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -68,7 +68,7 @@ public class LocalFileListAdapter extends RecyclerView.Adapter<RecyclerView.View
     private List<File> mFiles = new ArrayList<>();
     private List<File> mFilesAll = new ArrayList<>();
     private boolean mLocalFolderPicker;
-    private boolean gridView = false;
+    private boolean gridView;
     private LocalFileListFragmentInterface localFileListFragmentInterface;
     private Set<File> checkedFiles;
 

File: src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -605,7 +605,7 @@ public OCUpload getItem(int position) {
             return items[position];
         }
 
-        public void setItems(OCUpload[] items) {
+        public void setItems(OCUpload... items) {
             this.items = items;
         }
 

File: src/main/java/com/owncloud/android/ui/adapter/X509CertificateViewAdapter.java
Patch:
@@ -16,7 +16,6 @@
  *
  *   You should have received a copy of the GNU General Public License
  *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
  */
 package com.owncloud.android.ui.adapter;
 

File: src/main/java/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -194,7 +194,7 @@ public void onDestroyView() {
         
         // Work around bug: http://code.google.com/p/android/issues/detail?id=17423
         Dialog dialog = getDialog();
-        if ((dialog != null)) {
+        if (dialog != null) {
             dialog.setOnDismissListener(null);
         }
         

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -89,8 +89,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         // keep the state of the fragment on configuration changes
         setRetainInstance(true);
 
-        view = null;
-
         file = getArguments().getParcelable(KEY_OCFILE);
         hideNcSharingOptions = getArguments().getBoolean(KEY_HIDE_NCSHARING_OPTIONS, false);
         sharingPublicPasswordEnforced = getArguments().getBoolean(KEY_SHARING_PUBLIC_PASSWORD_ENFORCED, false);

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -345,7 +345,6 @@ protected String doInBackground(Void... voids) {
 
                 // Create public/private key pair
                 KeyPair keyPair = EncryptionUtils.generateKeyPair();
-                PrivateKey privateKey = keyPair.getPrivate();
 
                 // get user id
                 String userID;
@@ -369,13 +368,13 @@ protected String doInBackground(Void... voids) {
 
                 if (result.isSuccess()) {
                     Log_OC.d(TAG, "public key success");
-
                     publicKey = (String) result.getData().get(0);
                 } else {
                     keyResult = KEY_FAILED;
                     return "";
                 }
 
+                PrivateKey privateKey = keyPair.getPrivate();
                 String privateKeyString = EncryptionUtils.encodeBytesToBase64String(privateKey.getEncoded());
                 String privatePemKeyString = EncryptionUtils.privateKeyToPEM(privateKey);
                 String encryptedPrivateKey = EncryptionUtils.encryptPrivateKey(privatePemKeyString,

File: src/main/java/com/owncloud/android/ui/dialog/SortingOrderDialogFragment.java
Patch:
@@ -48,7 +48,7 @@ public class SortingOrderDialogFragment extends DialogFragment {
     public static final String SORTING_ORDER_FRAGMENT = "SORTING_ORDER_FRAGMENT";
     private static final String KEY_SORT_ORDER = "SORT_ORDER";
 
-    private View mView = null;
+    private View mView;
     private View[] mTaggedViews;
     private AppCompatButton mCancel;
     private String mCurrentSortOrderName;

File: src/main/java/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -54,7 +54,7 @@ public class SslValidatorDialog extends Dialog {
     private final static String TAG = SslValidatorDialog.class.getSimpleName();
 
     private OnSslValidatorListener mListener;
-    private CertificateCombinedException mException = null;
+    private CertificateCombinedException mException;
     private View mView;
     
     

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -83,14 +83,14 @@ public class SyncedFolderPreferencesDialogFragment extends DialogFragment {
     private AlertDialog behaviourDialog;
 
     public static SyncedFolderPreferencesDialogFragment newInstance(SyncedFolderDisplayItem syncedFolder, int section) {
-        SyncedFolderPreferencesDialogFragment dialogFragment = new SyncedFolderPreferencesDialogFragment();
-
         if (syncedFolder == null) {
             throw new IllegalArgumentException("SyncedFolder is mandatory but NULL!");
         }
 
         Bundle args = new Bundle();
         args.putParcelable(SYNCED_FOLDER_PARCELABLE, new SyncedFolderParcelable(syncedFolder, section));
+
+        SyncedFolderPreferencesDialogFragment dialogFragment = new SyncedFolderPreferencesDialogFragment();
         dialogFragment.setArguments(args);
         dialogFragment.setStyle(STYLE_NORMAL, R.style.Theme_ownCloud_Dialog);
 

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -101,7 +101,7 @@ public class ExtendedListFragment extends Fragment
     private int maxColumnSizePortrait = 5;
     private int maxColumnSizeLandscape = 10;
 
-    private ScaleGestureDetector mScaleGestureDetector = null;
+    private ScaleGestureDetector mScaleGestureDetector;
     protected SwipeRefreshLayout mRefreshListLayout;
     protected LinearLayout mEmptyListContainer;
     protected TextView mEmptyListMessage;
@@ -115,9 +115,9 @@ public class ExtendedListFragment extends Fragment
     private ArrayList<Integer> mIndexes;
     private ArrayList<Integer> mFirstPositions;
     private ArrayList<Integer> mTops;
-    private int mHeightCell = 0;
+    private int mHeightCell;
 
-    private SwipeRefreshLayout.OnRefreshListener mOnRefreshListener = null;
+    private SwipeRefreshLayout.OnRefreshListener mOnRefreshListener;
 
     private EmptyRecyclerView mRecyclerView;
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -343,7 +343,7 @@ private Intent createOpenFileIntent(OCFile file) {
         return openFileWithIntent;
     }
 
-    private Uri getFileUri(OCFile file, String[] officeExtensions) {
+    private Uri getFileUri(OCFile file, String... officeExtensions) {
         if (file.getFileName().contains(".") &&
                 Arrays.asList(officeExtensions).contains(file.getFileName().substring(file.getFileName().
                         lastIndexOf(".") + 1, file.getFileName().length())) &&

File: src/main/java/com/owncloud/android/ui/helpers/UriUploader.java
Patch:
@@ -177,7 +177,7 @@ private void requestUpload(String localPath, String remotePath) {
      * @param sourceUris        Array of content:// URIs to the files to upload
      * @param remotePaths       Array of absolute paths to set to the uploaded files
      */
-    private void copyThenUpload(Uri[] sourceUris, String[] remotePaths) {
+    private void copyThenUpload(Uri[] sourceUris, String... remotePaths) {
         if (mShowWaitingDialog) {
             mActivity.showLoadingDialog(mActivity.getResources().
                     getString(R.string.wait_for_tmp_copy_from_private_storage));

File: src/main/java/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -283,8 +283,8 @@ mProgressListener, mAccount, getFile()
      * Helper class responsible for updating the progress bar shown for file uploading or downloading
      */
     private class ProgressListener implements OnDatatransferProgressListener {
-        int mLastPercent = 0;
-        WeakReference<ProgressBar> mProgressBar = null;
+        int mLastPercent;
+        WeakReference<ProgressBar> mProgressBar;
 
         ProgressListener(ProgressBar progressBar) {
             mProgressBar = new WeakReference<>(progressBar);

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -145,7 +145,7 @@ private void initViewPager() {
         mViewPager = findViewById(R.id.fragmentPager);
 
         int position = mHasSavedPosition ? mSavedPosition : mPreviewImagePagerAdapter.getFilePosition(getFile());
-        position = (position >= 0) ? position : 0;
+        position = position >= 0 ? position : 0;
 
         mViewPager.setAdapter(mPreviewImagePagerAdapter);
         mViewPager.addOnPageChangeListener(this);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -804,7 +804,7 @@ private void openFile() {
      * @return 'True' if the file can be handled by the fragment.
      */
     public static boolean canBePreviewed(OCFile file) {
-        return (file != null && (MimeTypeUtil.isAudio(file) || MimeTypeUtil.isVideo(file)));
+        return file != null && (MimeTypeUtil.isAudio(file) || MimeTypeUtil.isVideo(file));
     }
 
 

File: src/main/java/com/owncloud/android/utils/MimeType.java
Patch:
@@ -22,4 +22,7 @@
  */
 public class MimeType {
     public static final String DIRECTORY = "DIR";
+    public static final String JPEG = "image/jpeg";
+    public static final String TIFF = "image/tiff";
+    public static final String TEXT_PLAIN = "text/plain";
 }

File: src/main/java/org/nextcloud/providers/cursors/FileCursor.java
Patch:
@@ -37,7 +37,7 @@ public class FileCursor extends MatrixCursor {
             Document.COLUMN_FLAGS, Document.COLUMN_LAST_MODIFIED
     };
 
-    public FileCursor(String[] projection) {
+    public FileCursor(String... projection) {
         super(projection != null ? projection : DEFAULT_DOCUMENT_PROJECTION);
     }
 

File: src/main/java/org/nextcloud/providers/cursors/RootCursor.java
Patch:
@@ -41,7 +41,7 @@ public class RootCursor extends MatrixCursor {
             Root.COLUMN_FLAGS
     };
 
-    public RootCursor(String[] projection) {
+    public RootCursor(String... projection) {
         super(projection != null ? projection : DEFAULT_ROOT_PROJECTION);
     }
 

File: src/main/java/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -150,7 +150,7 @@ else if (UriUtils.isDownloadsDocument(uri)) {
                 final Uri contentUri = ContentUris.withAppendedId(Uri.parse("content://downloads/public_downloads"),
                         Long.valueOf(id));
 
-                return UriUtils.getDataColumn(context, contentUri, null, null);
+                return UriUtils.getDataColumn(context, contentUri, null, (String) null);
             }
             // MediaProvider
             else if (UriUtils.isMediaDocument(uri)) {
@@ -185,7 +185,7 @@ else if ("content".equalsIgnoreCase(uri.getScheme())) {
                 return uri.getLastPathSegment();
             }
 
-            return UriUtils.getDataColumn(context, uri, null, null);
+            return UriUtils.getDataColumn(context, uri, null, (String) null);
         }
         // File
         else if ("file".equalsIgnoreCase(uri.getScheme())) {

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -331,7 +331,7 @@ protected boolean confirmPassCode(){
 
         boolean result = true;
         for (int i = 0; i < mPassCodeEditTexts.length && result; i++) {
-            result = (mPassCodeEditTexts[i].getText().toString()).equals(mPassCodeDigits[i]);
+            result = mPassCodeEditTexts[i].getText().toString().equals(mPassCodeDigits[i]);
         }
         return result;
     }

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -131,6 +131,7 @@ public class ReceiveExternalFilesActivity extends FileActivity
     public static final String URL_FILE_SUFFIX = ".url";
     public static final String WEBLOC_FILE_SUFFIX = ".webloc";
     public static final String DESKTOP_FILE_SUFFIX = ".desktop";
+    public static final int SINGLE_PARENT = 1;
 
     private AccountManager mAccountManager;
     private Stack<String> mParents = new Stack<>();
@@ -1063,7 +1064,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 dialog.show(getSupportFragmentManager(), CreateFolderDialogFragment.CREATE_FOLDER_FRAGMENT);
                 break;
             case android.R.id.home:
-                if (mParents.size() > 1) {
+                if (mParents.size() > SINGLE_PARENT) {
                     onBackPressed();
                 }
                 break;

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -27,7 +27,6 @@
 import android.accounts.Account;
 import android.accounts.AccountManager;
 import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;

File: src/main/java/com/owncloud/android/utils/EncryptionUtils.java
Patch:
@@ -671,8 +671,7 @@ public static String generateSHA512(String token, String salt) {
                 stringBuilder.append(Integer.toString((hashByte & 0xff) + 0x100, 16).substring(1));
             }
 
-            stringBuilder.append(HASH_DELIMITER);
-            stringBuilder.append(salt);
+            stringBuilder.append(HASH_DELIMITER).append(salt);
 
             hashedToken = stringBuilder.toString();
 

File: src/main/java/com/nextcloud/android/sso/aidl/NextcloudRequest.java
Patch:
@@ -28,7 +28,7 @@
 
 public class NextcloudRequest implements Serializable {
 
-    private static final long serialVersionUID = 215521212534239L; //assign a long value
+    private static final long serialVersionUID = 215521212534240L; //assign a long value
 
     private String method;
     private Map<String, List<String>> header = new HashMap<>();

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -205,7 +205,7 @@ private InputStream processRequest(final NextcloudRequest request) throws Unsupp
         method.setQueryString(convertMapToNVP(request.getParameter()));
         method.addRequestHeader("OCS-APIREQUEST", "true");
 
-        client.setFollowRedirects(request.getFollowRedirects());
+        client.setFollowRedirects(request.isFollowRedirects());
         int status = client.executeMethod(method);
 
         // Check if status code is 2xx --> https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -211,7 +211,7 @@ private InputStream processRequest(final NextcloudRequest request) throws Unsupp
         if (status >= HTTP_STATUS_CODE_OK && status < HTTP_STATUS_CODE_MULTIPLE_CHOICES) {
             return method.getResponseBodyAsStream();
         } else {
-            throw new IllegalStateException(EXCEPTION_HTTP_REQUEST_FAILED, new IllegalStateException(""+status));
+            throw new IllegalStateException(EXCEPTION_HTTP_REQUEST_FAILED, new IllegalStateException(String.valueOf(status)));
         }
     }
 

File: src/main/java/com/nextcloud/android/sso/InputStreamBinder.java
Patch:
@@ -61,8 +61,8 @@
 import java.util.List;
 import java.util.Map;
 
-import static com.nextcloud.android.sso.aidl.NextcloudRequest.EXCEPTION_ACCOUNT_NOT_FOUND;
-import static com.nextcloud.android.sso.aidl.NextcloudRequest.EXCEPTION_INVALID_TOKEN;
+import static com.nextcloud.android.sso.Constants.EXCEPTION_ACCOUNT_NOT_FOUND;
+import static com.nextcloud.android.sso.Constants.EXCEPTION_INVALID_TOKEN;
 
 
 /**

File: src/main/java/com/owncloud/android/authentication/AccountAuthenticator.java
Patch:
@@ -196,7 +196,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
             }
 
             result.putString(AccountManager.KEY_ACCOUNT_NAME,  account.name);
-            result.putString(AccountManager.KEY_ACCOUNT_TYPE, MainApp.getAccountType(mContext));
+            result.putString(AccountManager.KEY_ACCOUNT_TYPE,  MainApp.getAccountType(mContext));
             result.putString(AccountManager.KEY_AUTHTOKEN,     NEXTCLOUD_SSO);
             result.putString("username", userId);
             result.putString("token", token);

File: src/main/java/com/owncloud/android/authentication/AccountAuthenticator.java
Patch:
@@ -161,7 +161,6 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
                                Account account, String authTokenType, Bundle options) {
 
         if (NEXTCLOUD_SSO.equals(authTokenType)) {
-            AccountManager accountManager = AccountManager.get(mContext);
             final Bundle result = new Bundle();
 
             String packageName = options.getString("androidPackageName");
@@ -188,6 +187,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
             try {
                 OwnCloudAccount ocAccount = new OwnCloudAccount(account, mContext);
                 serverUrl = ocAccount.getBaseUri().toString();
+                AccountManager accountManager = AccountManager.get(mContext);
                 userId = accountManager.getUserData(account,
                         com.owncloud.android.lib.common.accounts.AccountUtils.Constants.KEY_USER_ID);
             } catch (AccountUtils.AccountNotFoundException e) {

File: src/main/java/com/nextcloud/android/sso/aidl/NextcloudRequest.java
Patch:
@@ -62,7 +62,7 @@ public Builder setHeader(Map<String, List<String>> header) {
             return this;
         }
 
-        public Builder setParameter(HashMap<String, String> parameter) {
+        public Builder setParameter(Map<String, String> parameter) {
             ncr.parameter = parameter;
             return this;
         }

File: src/main/java/com/owncloud/android/services/AccountManagerService.java
Patch:
@@ -42,4 +42,4 @@ public boolean onUnbind(Intent intent) {
         return super.onUnbind(intent);
     }
 
-}
\ No newline at end of file
+}

File: src/main/java/com/owncloud/android/ui/components/CustomViewPager.java
Patch:
@@ -1,5 +1,6 @@
 package com.owncloud.android.ui.components;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -18,6 +19,7 @@ public CustomViewPager(@NonNull Context context, @Nullable AttributeSet attrs) {
         super(context, attrs);
     }
 
+    @SuppressLint("ClickableViewAccessibility")
     @Override
     public boolean onTouchEvent(MotionEvent ev) {
         try {

File: src/main/java/com/owncloud/android/operations/GetCapabilitiesOperation.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * Get and save capabilities from the server
  */
-public class GetCapabilitiesOperarion extends SyncOperation {
+public class GetCapabilitiesOperation extends SyncOperation {
 
     @Override
     protected RemoteOperationResult run(OwnCloudClient client) {

File: src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -247,7 +247,7 @@ private void updateUserProfile() {
     }
 
     private void updateCapabilities() {
-        GetCapabilitiesOperarion getCapabilities = new GetCapabilitiesOperarion();
+        GetCapabilitiesOperation getCapabilities = new GetCapabilitiesOperation();
         RemoteOperationResult result = getCapabilities.execute(mStorageManager, mContext);
         if (!result.isSuccess()) {
             Log_OC.w(TAG, "Update Capabilities unsuccessfully");

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -79,7 +79,7 @@
 import com.owncloud.android.lib.resources.status.OCCapability;
 import com.owncloud.android.lib.resources.status.OwnCloudVersion;
 import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation;
-import com.owncloud.android.operations.GetCapabilitiesOperarion;
+import com.owncloud.android.operations.GetCapabilitiesOperation;
 import com.owncloud.android.ui.TextDrawable;
 import com.owncloud.android.ui.activities.ActivitiesActivity;
 import com.owncloud.android.ui.events.AccountRemovedEvent;
@@ -1356,7 +1356,7 @@ public void fetchExternalLinks(final boolean force) {
                 // fetch capabilities as early as possible
                 if ((getCapabilities() == null || getCapabilities().getAccountName().isEmpty())
                         && getStorageManager() != null) {
-                    GetCapabilitiesOperarion getCapabilities = new GetCapabilitiesOperarion();
+                    GetCapabilitiesOperation getCapabilities = new GetCapabilitiesOperation();
                     getCapabilities.execute(getStorageManager(), getBaseContext());
                 }
 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -122,7 +122,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (mContainerActivity.isFolderPickerMode()) {
-            menu.removeItem(R.id.action_select_all_action_menu);
+            menu.removeItem(R.id.action_select_all);
             menu.removeItem(R.id.action_search);
         } else {
             super.onCreateOptionsMenu(menu, inflater);

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -51,7 +51,6 @@
 import com.owncloud.android.utils.PowerUtils;
 
 import java.io.File;
-import java.io.IOException;
 import java.text.ParsePosition;
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -72,7 +71,7 @@ public class FilesSyncJob extends Job {
 
     @NonNull
     @Override
-    protected Result onRunJob(Params params) {
+    protected Result onRunJob(@NonNull Params params) {
         final Context context = MainApp.getAppContext();
         final ContentResolver contentResolver = context.getContentResolver();
         FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
@@ -129,7 +128,7 @@ protected Result onRunJob(Params params) {
                                     lastModificationTime = dateTime.getTime();
                                 }
 
-                            } catch (IOException e) {
+                            } catch (Exception e) {
                                 Log_OC.d(TAG, "Failed to get the proper time " + e.getLocalizedMessage());
                             }
                         }

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -122,7 +122,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (mContainerActivity.isFolderPickerMode()) {
-            menu.removeItem(R.id.action_select_all_action_menu);
+            menu.removeItem(R.id.action_select_all);
             menu.removeItem(R.id.action_search);
         } else {
             super.onCreateOptionsMenu(menu, inflater);

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -283,6 +283,8 @@ public void run() {
                                     }
                                 }
 
+                                openFileWithIntent.setFlags(openFileWithIntent.getFlags() |
+                                        Intent.FLAG_ACTIVITY_NEW_TASK);
                                 mFileActivity.startActivity(
                                         Intent.createChooser(
                                                 openFileWithIntent,

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -221,11 +221,11 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     /**
      * Provides a binder object that clients can use to perform operations on the queue of downloads,
      * excepting the addition of new files.
-     * <p/>
+     *
      * Implemented to perform cancellation, pause and resume of existing downloads.
      */
     @Override
-    public IBinder onBind(Intent arg0) {
+    public IBinder onBind(Intent intent) {
         return mBinder;
     }
 

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -736,7 +736,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
      * uploads.
      */
     @Override
-    public IBinder onBind(Intent arg0) {
+    public IBinder onBind(Intent intent) {
         return mBinder;
     }
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -25,6 +25,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.support.annotation.RequiresApi;
+import android.util.Log;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.Device;
@@ -976,7 +977,7 @@ private void handleSuccessfulUpload(File temporalFile, File expectedFile, File o
                 try {
                     move(originalFile, newFile);
                 } catch (IOException e) {
-                    e.printStackTrace();
+                    Log.e(TAG, "Error moving file", e);
                 }
                 getStorageManager().deleteFileInMediaScan(originalFile.getAbsolutePath());
                 mFile.setStoragePath(newFile.getAbsolutePath());

File: src/main/java/com/owncloud/android/datamodel/ArbitraryDataProvider.java
Patch:
@@ -29,12 +29,11 @@
 import com.owncloud.android.db.ProviderMeta;
 import com.owncloud.android.lib.common.utils.Log_OC;
 
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Database provider for handling the persistence aspects of arbitrary data table.
  */
-
 public class ArbitraryDataProvider {
     static private final String TAG = ArbitraryDataProvider.class.getSimpleName();
 
@@ -56,7 +55,7 @@ public int deleteKeyForAccount(String account, String key) {
         );
     }
 
-    public int deleteForKeyWhereAccountNotIn(ArrayList<String> accounts, String key) {
+    public int deleteForKeyWhereAccountNotIn(List<String> accounts, String key) {
         return contentResolver.delete(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_ARBITRARY_DATA,
                 ProviderMeta.ProviderTableMeta.ARBITRARY_DATA_CLOUD_ID + " NOT IN (?) AND " +

File: src/main/java/com/owncloud/android/datamodel/ExternalLinksProvider.java
Patch:
@@ -31,6 +31,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Database provider for handling the persistence aspects of {@link com.owncloud.android.lib.common.ExternalLink}s.
@@ -82,7 +83,7 @@ public int deleteAllExternalLinks() {
      *
      * @return external links, empty if none exists
      */
-    public ArrayList<ExternalLink> getExternalLink(ExternalLinkType type) {
+    public List<ExternalLink> getExternalLink(ExternalLinkType type) {
         Cursor cursor = mContentResolver.query(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_EXTERNAL_LINKS,
                 null,
@@ -92,7 +93,7 @@ public ArrayList<ExternalLink> getExternalLink(ExternalLinkType type) {
         );
 
         if (cursor != null) {
-            ArrayList<ExternalLink> list = new ArrayList<>();
+            List<ExternalLink> list = new ArrayList<>();
             if (cursor.moveToFirst()) {
                 do {
                     ExternalLink externalLink = createExternalLinkFromCursor(cursor);

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1656,7 +1656,7 @@ private ArrayList<ContentProviderOperation> prepareRemoveSharesInFile(
 
     }
 
-    public ArrayList<OCShare> getSharesWithForAFile(String filePath, String accountName) {
+    public List<OCShare> getSharesWithForAFile(String filePath, String accountName) {
         // Condition
         String where = ProviderTableMeta.OCSHARES_PATH + AND
                 + ProviderTableMeta.OCSHARES_ACCOUNT_OWNER + AND

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -309,7 +309,7 @@ public void updateAutoUploadPaths(Context context) {
      * @param ids     the list of ids to be excluded from deletion.
      * @return number of deleted records.
      */
-    public int deleteSyncedFoldersNotInList(Context context, ArrayList<Long> ids) {
+    public int deleteSyncedFoldersNotInList(Context context, List<Long> ids) {
         int result = mContentResolver.delete(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
                 ProviderMeta.ProviderTableMeta._ID + " NOT IN (?)",

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -71,7 +71,7 @@
 import java.io.InputStream;
 import java.lang.ref.WeakReference;
 import java.net.URLEncoder;
-import java.util.ArrayList;
+import java.util.List;
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
@@ -379,7 +379,7 @@ private String getImageKey() {
     public static class ThumbnailGenerationTask extends AsyncTask<ThumbnailGenerationTaskObject, Void, Bitmap> {
         private final WeakReference<ImageView> mImageViewReference;
         private static Account mAccount;
-        private ArrayList<ThumbnailGenerationTask> mAsyncTasks = null;
+        private List<ThumbnailGenerationTask> mAsyncTasks;
         private Object mFile;
         private String mImageKey = null;
         private FileDataStorageManager mStorageManager;
@@ -391,7 +391,7 @@ public ThumbnailGenerationTask(ImageView imageView, FileDataStorageManager stora
         }
 
         public ThumbnailGenerationTask(ImageView imageView, FileDataStorageManager storageManager,
-                                       Account account, ArrayList<ThumbnailGenerationTask> asyncTasks)
+                                       Account account, List<ThumbnailGenerationTask> asyncTasks)
                 throws IllegalArgumentException {
             // Use a WeakReference to ensure the ImageView can be garbage collected
             mImageViewReference = new WeakReference<ImageView>(imageView);

File: src/main/java/com/owncloud/android/datastorage/DataStorageProvider.java
Patch:
@@ -42,7 +42,7 @@
  */
 public class DataStorageProvider {
 
-    private static final Vector<IStoragePointProvider> mStorageProviders = new Vector<>();
+    private static final List<IStoragePointProvider> mStorageProviders = new ArrayList<>();
     private static final UniqueStorageList mCachedStoragePoints = new UniqueStorageList();
     private static final DataStorageProvider sInstance = new DataStorageProvider() {{
         // There is no system wide way to get usb storage so we need to provide multiple

File: src/main/java/com/owncloud/android/features/FeatureList.java
Patch:
@@ -44,8 +44,8 @@ public class FeatureList {
     private static final int VERSION_3_3_0 = 30030099;
     private static final int BETA_VERSION_0 = 0;
 
-    static public ArrayList<FeatureItem> get(boolean isMultiAccount) {
-        ArrayList<FeatureItem> featuresList = new ArrayList<>();
+    static public List<FeatureItem> get(boolean isMultiAccount) {
+        List<FeatureItem> featuresList = new ArrayList<>();
         // Basic features showed on first install
         featuresList.add(new FeatureItem(R.drawable.whats_new_files,
                 R.string.welcome_feature_1_title, R.string.welcome_feature_1_text,

File: src/main/java/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -42,7 +42,6 @@
 import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
-import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -261,7 +260,7 @@ private void removeLocalFolder() {
      *
      * @param folderAndFiles Remote folder and children files in Folder
      */
-    private void synchronizeData(ArrayList<Object> folderAndFiles) throws OperationCancelledException {
+    private void synchronizeData(List<Object> folderAndFiles) throws OperationCancelledException {
         FileDataStorageManager storageManager = getStorageManager();
         
         // parse data from remote folder

File: src/main/java/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -34,7 +34,7 @@
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.operations.common.SyncOperation;
 
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Unshare file/folder
@@ -80,7 +80,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 } else if (ShareType.USER.equals(mShareType) || ShareType.GROUP.equals(mShareType)
                     || ShareType.FEDERATED.equals(mShareType)){
                     // Check if it is the last share
-                    ArrayList <OCShare> sharesWith = getStorageManager().
+                    List <OCShare> sharesWith = getStorageManager().
                             getSharesWithForAFile(mRemotePath,
                             getStorageManager().getAccount().name);
                     if (sharesWith.size() == 1) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -99,6 +99,7 @@
 import org.greenrobot.eventbus.ThreadMode;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Base class to handle setup of the drawer implementation including user switching and avatar fetching and fallback
@@ -824,7 +825,7 @@ protected void unsetAllDrawerMenuItems() {
     private void updateQuotaLink() {
         if (mQuotaTextLink != null) {
             if (getBaseContext().getResources().getBoolean(R.bool.show_external_links)) {
-                ArrayList<ExternalLink> quotas = externalLinksProvider.getExternalLink(ExternalLinkType.QUOTA);
+                List<ExternalLink> quotas = externalLinksProvider.getExternalLink(ExternalLinkType.QUOTA);
 
                 float density = getResources().getDisplayMetrics().density;
                 final int size = Math.round(24 * density);

File: src/main/java/com/owncloud/android/ui/activity/ErrorsWhileCopyingHandlerActivity.java
Patch:
@@ -48,7 +48,7 @@
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.io.File;
-import java.util.ArrayList;
+import java.util.List;
 
 
 /**
@@ -75,8 +75,8 @@ public class ErrorsWhileCopyingHandlerActivity  extends AppCompatActivity implem
     
     protected Account mAccount;
     protected FileDataStorageManager mStorageManager;
-    protected ArrayList<String> mLocalPaths;
-    protected ArrayList<String> mRemotePaths;
+    protected List<String> mLocalPaths;
+    protected List<String> mRemotePaths;
     protected ArrayAdapter<String> mAdapter;
     protected Handler mHandler;
     private DialogFragment mCurrentDialog;

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -134,7 +134,7 @@ public class ReceiveExternalFilesActivity extends FileActivity
 
     private AccountManager mAccountManager;
     private Stack<String> mParents = new Stack<>();
-    private ArrayList<Parcelable> mStreamsToUpload;
+    private List<Parcelable> mStreamsToUpload;
     private String mUploadPath;
     private OCFile mFile;
 

File: src/main/java/com/owncloud/android/ui/adapter/ActivityAndVersionListAdapter.java
Patch:
@@ -19,9 +19,9 @@
 import com.owncloud.android.ui.interfaces.VersionListInterface;
 import com.owncloud.android.utils.DisplayUtils;
 
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
+import java.util.List;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -39,7 +39,7 @@ public ActivityAndVersionListAdapter(Context context, ActivityListInterface acti
         this.versionListInterface = versionListInterface;
     }
 
-    public void setActivityAndVersionItems(ArrayList<Object> items, OwnCloudClient newClient, boolean clear) {
+    public void setActivityAndVersionItems(List<Object> items, OwnCloudClient newClient, boolean clear) {
         if (client == null) {
             client = newClient;
         }

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -330,7 +330,7 @@ public void updateDrawState(TextPaint ds) {
         return ssb;
     }
 
-    private RichObject searchObjectByName(ArrayList<RichObject> richObjectList, String name) {
+    private RichObject searchObjectByName(List<RichObject> richObjectList, String name) {
         for (RichObject richObject : richObjectList) {
             if (richObject.getTag().equalsIgnoreCase(name))
                 return richObject;

File: src/main/java/com/owncloud/android/ui/adapter/ShareUserListAdapter.java
Patch:
@@ -35,19 +35,19 @@
 import com.owncloud.android.ui.TextDrawable;
 
 import java.security.NoSuchAlgorithmException;
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Adapter to show a user/group in Share With List
  */
 public class ShareUserListAdapter extends ArrayAdapter {
 
     private Context mContext;
-    private ArrayList<OCShare> mShares;
+    private List<OCShare> mShares;
     private ShareUserAdapterListener mListener;
     private float mAvatarRadiusDimension;
 
-    public ShareUserListAdapter(Context context, int resource, ArrayList<OCShare>shares,
+    public ShareUserListAdapter(Context context, int resource, List<OCShare> shares,
                                 ShareUserAdapterListener listener) {
         super(context, resource);
         mContext= context;

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -67,7 +67,7 @@ public class TrashbinListAdapter extends RecyclerView.Adapter<RecyclerView.ViewH
     private Account account;
     private FileDataStorageManager storageManager;
 
-    private ArrayList<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();
+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();
 
     public TrashbinListAdapter(TrashbinActivityInterface trashbinActivityInterface,
                                FileDataStorageManager storageManager, Context context) {

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -55,7 +55,7 @@
 import java.io.IOException;
 import java.security.KeyPair;
 import java.security.PrivateKey;
-import java.util.ArrayList;
+import java.util.List;
 import java.util.Locale;
 
 /*
@@ -86,7 +86,7 @@ public class SetupEncryptionDialogFragment extends DialogFragment {
     private DownloadKeysAsyncTask task;
     private TextView passwordField;
     private String keyResult;
-    private ArrayList<String> keyWords;
+    private List<String> keyWords;
 
     /**
      * Public factory method to create new SetupEncryptionDialogFragment instance

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -63,7 +63,7 @@
 import com.owncloud.android.utils.ClipboardUtil;
 import com.owncloud.android.utils.ThemeUtils;
 
-import java.util.ArrayList;
+import java.util.List;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -76,7 +76,7 @@ public class FileDetailSharingFragment extends Fragment implements UserListAdapt
     private static final String ARG_ACCOUNT = "ACCOUNT";
 
     // to show share with users/groups info
-    private ArrayList<OCShare> shares;
+    private List<OCShare> shares;
 
     private OCFile file;
     private Account account;

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -43,7 +43,7 @@
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.adapter.ShareUserListAdapter;
 
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Fragment for Searching sharees (users and groups)
@@ -69,7 +69,7 @@ public class SearchShareesFragment extends Fragment implements ShareUserListAdap
     private Account mAccount;
 
     // other members
-    private ArrayList<OCShare> mShares;
+    private List<OCShare> mShares;
     private ShareFragmentListener mListener;
 
 

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -62,7 +62,7 @@
 import com.owncloud.android.utils.ThemeUtils;
 
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
+import java.util.List;
 import java.util.Date;
 
 /**
@@ -109,7 +109,7 @@ public class ShareFileFragment extends Fragment implements ShareUserListAdapter.
     /**
      * List of private shares bound to the file.
      */
-    private ArrayList<OCShare> mPrivateShares;
+    private List<OCShare> mPrivateShares;
 
     /**
      * Capabilities of the server.

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -139,7 +139,7 @@ public class ContactListFragment extends FileFragment {
 
     private ContactListAdapter contactListAdapter;
     private Account account;
-    private ArrayList<VCard> vCards = new ArrayList<>();
+    private List<VCard> vCards = new ArrayList<>();
     private OCFile ocFile;
 
     public static ContactListFragment newInstance(OCFile file, Account account) {

File: src/main/java/com/owncloud/android/ui/helpers/UriUploader.java
Patch:
@@ -52,7 +52,7 @@ public class UriUploader {
     private final String TAG = UriUploader.class.getSimpleName();
 
     private FileActivity mActivity;
-    private ArrayList<Parcelable> mUrisToUpload;
+    private List<Parcelable> mUrisToUpload;
     private CopyAndUploadContentUrisTask.OnCopyTmpFilesTaskListener mCopyTmpTaskListener;
 
     private int mBehaviour;
@@ -72,7 +72,7 @@ public enum UriUploaderResultCode {
 
     public UriUploader(
             FileActivity activity,
-            ArrayList<Parcelable> uris,
+            List<Parcelable> uris,
             String uploadPath,
             Account account,
             int behaviour,

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -281,16 +281,15 @@ private int deleteSyncFolderWithId(long id) {
      */
     public void updateAutoUploadPaths(Context context) {
         List<SyncedFolder> syncedFolders = getSyncedFolders();
-        for (int i = 0; i < syncedFolders.size(); i++) {
-            SyncedFolder syncedFolder = syncedFolders.get(i);
+        for (SyncedFolder syncedFolder : syncedFolders) {
             if (!new File(syncedFolder.getLocalPath()).exists()) {
                 String localPath = syncedFolder.getLocalPath();
                 if (localPath.endsWith("/")) {
                     localPath = localPath.substring(0, localPath.lastIndexOf('/'));
                 }
                 localPath = localPath.substring(0, localPath.lastIndexOf('/'));
                 if (new File(localPath).exists()) {
-                    syncedFolders.get(i).setLocalPath(localPath);
+                    syncedFolder.setLocalPath(localPath);
                     updateSyncFolder(syncedFolder);
                 } else {
                     deleteSyncFolderWithId(syncedFolder.getId());

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -99,7 +99,7 @@ public FileMenuFilter(OCFile targetFile, Account account, ComponentsGetter cg, C
      * @param inSingleFileFragment  True if this is not listing, but single file fragment, like preview or details.
      */
     public void filter(Menu menu, boolean inSingleFileFragment) {
-        if (mFiles == null || mFiles.size() <= 0) {
+        if (mFiles == null || mFiles.isEmpty()) {
             hideAll(menu);
         } else {
             List<Integer> toShow = new ArrayList<>();

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -98,7 +98,7 @@ protected Result onRunJob(@NonNull Params params) {
             imageMediaFolderPaths.removeAll(mediaFoldersModel.getImageMediaFolders());
             videoMediaFolderPaths.removeAll(mediaFoldersModel.getVideoMediaFolders());
 
-            if (imageMediaFolderPaths.size() > 0 || videoMediaFolderPaths.size() > 0) {
+            if (!imageMediaFolderPaths.isEmpty() || !videoMediaFolderPaths.isEmpty()) {
                 Account[] accounts = AccountUtils.getAccounts(getContext());
                 List<Account> accountList = new ArrayList<>();
                 for (Account account : accounts) {

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -1166,7 +1166,7 @@ private RemoteOperationResult copy(File sourceFile, File targetFile) throws IOEx
 
         RemoteOperationResult result = null;
 
-        if (FileStorageUtils.getUsableSpace(mAccount.name) < sourceFile.length()) {
+        if (FileStorageUtils.getUsableSpace() < sourceFile.length()) {
             result = new RemoteOperationResult(ResultCode.LOCAL_STORAGE_FULL);
             return result;  // error condition when the file should be copied
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -529,7 +529,7 @@ private void initFragmentsWithFile() {
     @Override
     protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
-        if (intent.getAction() != null && intent.getAction().equalsIgnoreCase(ACTION_DETAILS)) {
+        if (ACTION_DETAILS.equalsIgnoreCase(intent.getAction())) {
             setIntent(intent);
             setFile(intent.getParcelableExtra(EXTRA_FILE));
         } else if (RESTART.equals(intent.getAction())) {
@@ -1142,7 +1142,7 @@ public void onBackPressed() {
             // all closed
 
             //if PreviewImageActivity called this activity and mDualPane==false  then calls PreviewImageActivity again
-            if ((getIntent().getAction() != null && getIntent().getAction().equalsIgnoreCase(ACTION_DETAILS)) && !mDualPane) {
+            if (ACTION_DETAILS.equalsIgnoreCase(getIntent().getAction()) && !mDualPane) {
                 getIntent().setAction(null);
                 getIntent().putExtra(EXTRA_FILE, (OCFile) null);
                 startImagePreview(getFile(), false);

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -534,7 +534,7 @@ protected Boolean doInBackground(Boolean... params) {
                     File localFile = new File(localPath);
                     total += localFile.length();
                 }
-                return FileStorageUtils.getUsableSpace(mAccountOnCreation.name) >= total;
+                return FileStorageUtils.getUsableSpace() >= total;
             }
 
             return true;
@@ -597,7 +597,7 @@ protected void onPostExecute(Boolean result) {
     @Override
     public void onConfirmation(String callerTag) {
         Log_OC.d(TAG, "Positive button in dialog was clicked; dialog tag is " + callerTag);
-        if (callerTag.equals(QUERY_TO_MOVE_DIALOG_TAG)) {
+        if (QUERY_TO_MOVE_DIALOG_TAG.equals(callerTag)) {
             // return the list of selected files to the caller activity (success),
             // signaling that they should be moved to the ownCloud folder, instead of copied
             Intent data = new Intent();

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -243,7 +243,7 @@ private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
                     }
                 }
 
-                if (file.getMimeType().equalsIgnoreCase("image/png")) {
+                if ("image/png".equalsIgnoreCase(file.getMimeType())) {
                     thumbnailView.setBackgroundColor(context.getResources().getColor(R.color.background_color));
                 }
             } else {

File: src/main/java/com/owncloud/android/ui/components/CustomEditText.java
Patch:
@@ -42,10 +42,10 @@ public CustomEditText(Context context, AttributeSet attrs) {
 
         String serverInputType = getResources().getString(R.string.server_input_type);
 
-        if (serverInputType.equals(AuthenticatorActivity.DIRECTORY_SERVER_INPUT_TYPE)) {
+        if (AuthenticatorActivity.DIRECTORY_SERVER_INPUT_TYPE.equals(serverInputType)) {
             isPrefixFixed = true;
             fixedText = getResources().getString(R.string.server_url) + "/";
-        } else if (serverInputType.equals(AuthenticatorActivity.SUBDOMAIN_SERVER_INPUT_TYPE)) {
+        } else if (AuthenticatorActivity.SUBDOMAIN_SERVER_INPUT_TYPE.equals(serverInputType)) {
             isPrefixFixed = false;
             fixedText = "." + getResources().getString(R.string.server_url);
         }

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -150,7 +150,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
 
         List<SendButtonData> sendButtonDataList = setupSendButtonData(sendIntent);
 
-        if (getContext().getString(R.string.send_files_to_other_apps).equalsIgnoreCase("off")) {
+        if ("off".equalsIgnoreCase(getContext().getString(R.string.send_files_to_other_apps))) {
             sharePeopleText.setVisibility(View.GONE);
         }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -196,7 +196,7 @@ public void onError(int error) {
     @OnClick(R.id.submitComment)
     public void submitComment() {
         if (commentInput.getText().toString().trim().length() > 0) {
-            new SubmitCommentTask(commentInput.getText().toString(), userId, file.getLocalId(),
+            new SubmitCommentTask(commentInput.getText().toString().trim(), userId, file.getLocalId(),
                     callback, ownCloudClient).execute();
         }
     }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -716,7 +716,7 @@ private void toggleVCard(ContactListFragment.ContactItemViewHolder holder, int v
                 checkedVCards.remove(verifiedPosition);
             }
 
-            if (checkedVCards.size() == 0) {
+            if (checkedVCards.isEmpty()) {
                 EventBus.getDefault().post(new VCardToggleEvent(false));
             }
         }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -244,7 +244,7 @@ protected void onPostExecute(Boolean result) {
 
                     Collections.sort(backupFiles, new AlphanumComparator<>());
 
-                    if (backupFiles == null || backupFiles.size() == 0) {
+                    if (backupFiles == null || backupFiles.isEmpty()) {
                         contactsDatePickerBtn.setVisibility(View.GONE);
                     } else {
                         contactsDatePickerBtn.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -200,11 +200,11 @@ public static String beautifyURL(@Nullable String url) {
             return "";
         }
 
-        if (url.length() >= 7 && url.substring(0, 7).equalsIgnoreCase(HTTP_PROTOCOL)) {
+        if (url.length() >= 7 && HTTP_PROTOCOL.equalsIgnoreCase(url.substring(0, 7))) {
             return url.substring(HTTP_PROTOCOL.length()).trim();
         }
 
-        if (url.length() >= 8 && url.substring(0, 8).equalsIgnoreCase(HTTPS_PROTOCOL)) {
+        if (url.length() >= 8 && HTTPS_PROTOCOL.equalsIgnoreCase(url.substring(0, 8))) {
             return url.substring(HTTPS_PROTOCOL.length()).trim();
         }
 

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -254,7 +254,7 @@ public static void scheduleFilesSyncIfNeeded(Context context) {
 
     public static void scheduleOfflineSyncIfNeeded() {
         Set<JobRequest> jobRequests = JobManager.instance().getAllJobRequestsForTag(OfflineSyncJob.TAG);
-        if (jobRequests.size() == 0) {
+        if (jobRequests.isEmpty()) {
             new JobRequest.Builder(OfflineSyncJob.TAG)
                     .setPeriodic(TimeUnit.MINUTES.toMillis(15), TimeUnit.MINUTES.toMillis(5))
                     .setUpdateCurrent(false)

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -63,7 +63,7 @@ public static void registerPowerChangeReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (intent.getAction() != null && intent.getAction().equals(Intent.ACTION_POWER_CONNECTED)) {
+                if (Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -534,7 +534,7 @@ protected Boolean doInBackground(Boolean... params) {
                     File localFile = new File(localPath);
                     total += localFile.length();
                 }
-                return FileStorageUtils.getUsableSpace(mAccountOnCreation.name) >= total;
+                return FileStorageUtils.getUsableSpace() >= total;
             }
 
             return true;

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -94,11 +94,10 @@ public static String getTemporalPath(String accountName) {
 
     /**
      * Optimistic number of bytes available on sd-card. accountName is ignored.
-     *
-     * @param accountName not used. can thus be null.
+     * 
      * @return Optimistic number of available bytes (can be less)
      */
-    public static long getUsableSpace(String accountName) {
+    public static long getUsableSpace() {
         File savePath = new File(MainApp.getStoragePath());
         return savePath.getUsableSpace();
     }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1142,7 +1142,7 @@ public void onBackPressed() {
             // all closed
 
             //if PreviewImageActivity called this activity and mDualPane==false  then calls PreviewImageActivity again
-            if ((getIntent().getAction() != null && ACTION_DETAILS.equalsIgnoreCase(getIntent().getAction())) && !mDualPane) {
+            if (ACTION_DETAILS.equalsIgnoreCase(getIntent().getAction()) && !mDualPane) {
                 getIntent().setAction(null);
                 getIntent().putExtra(EXTRA_FILE, (OCFile) null);
                 startImagePreview(getFile(), false);

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -99,7 +99,7 @@ public FileMenuFilter(OCFile targetFile, Account account, ComponentsGetter cg, C
      * @param inSingleFileFragment  True if this is not listing, but single file fragment, like preview or details.
      */
     public void filter(Menu menu, boolean inSingleFileFragment) {
-        if (mFiles == null || mFiles.size() <= 0) {
+        if (mFiles == null || mFiles.isEmpty()) {
             hideAll(menu);
         } else {
             List<Integer> toShow = new ArrayList<>();

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -98,7 +98,7 @@ protected Result onRunJob(@NonNull Params params) {
             imageMediaFolderPaths.removeAll(mediaFoldersModel.getImageMediaFolders());
             videoMediaFolderPaths.removeAll(mediaFoldersModel.getVideoMediaFolders());
 
-            if (imageMediaFolderPaths.size() > 0 || videoMediaFolderPaths.size() > 0) {
+            if (!imageMediaFolderPaths.isEmpty() || !videoMediaFolderPaths.isEmpty()) {
                 Account[] accounts = AccountUtils.getAccounts(getContext());
                 List<Account> accountList = new ArrayList<>();
                 for (Account account : accounts) {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -890,7 +890,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
      * @return 'true' if the menu selection started any action, 'false' otherwise.
      */
     public boolean onFileActionChosen(int menuId, Set<OCFile> checkedFiles) {
-        if (checkedFiles.size() <= 0) {
+        if (checkedFiles.isEmpty()) {
             return false;
         }
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -716,7 +716,7 @@ private void toggleVCard(ContactListFragment.ContactItemViewHolder holder, int v
                 checkedVCards.remove(verifiedPosition);
             }
 
-            if (checkedVCards.size() == 0) {
+            if (checkedVCards.isEmpty()) {
                 EventBus.getDefault().post(new VCardToggleEvent(false));
             }
         }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -244,7 +244,7 @@ protected void onPostExecute(Boolean result) {
 
                     Collections.sort(backupFiles, new AlphanumComparator<>());
 
-                    if (backupFiles == null || backupFiles.size() == 0) {
+                    if (backupFiles == null || backupFiles.isEmpty()) {
                         contactsDatePickerBtn.setVisibility(View.GONE);
                     } else {
                         contactsDatePickerBtn.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -254,7 +254,7 @@ public static void scheduleFilesSyncIfNeeded(Context context) {
 
     public static void scheduleOfflineSyncIfNeeded() {
         Set<JobRequest> jobRequests = JobManager.instance().getAllJobRequestsForTag(OfflineSyncJob.TAG);
-        if (jobRequests.size() == 0) {
+        if (jobRequests.isEmpty()) {
             new JobRequest.Builder(OfflineSyncJob.TAG)
                     .setPeriodic(TimeUnit.MINUTES.toMillis(15), TimeUnit.MINUTES.toMillis(5))
                     .setUpdateCurrent(false)

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -196,7 +196,7 @@ public void onError(int error) {
     @OnClick(R.id.submitComment)
     public void submitComment() {
         if (commentInput.getText().toString().trim().length() > 0) {
-            new SubmitCommentTask(commentInput.getText().toString(), userId, file.getLocalId(),
+            new SubmitCommentTask(commentInput.getText().toString().trim(), userId, file.getLocalId(),
                     callback, ownCloudClient).execute();
         }
     }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -529,7 +529,7 @@ private void initFragmentsWithFile() {
     @Override
     protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
-        if (intent.getAction() != null && intent.getAction().equalsIgnoreCase(ACTION_DETAILS)) {
+        if (ACTION_DETAILS.equalsIgnoreCase(intent.getAction())) {
             setIntent(intent);
             setFile(intent.getParcelableExtra(EXTRA_FILE));
         } else if (RESTART.equals(intent.getAction())) {
@@ -1142,7 +1142,7 @@ public void onBackPressed() {
             // all closed
 
             //if PreviewImageActivity called this activity and mDualPane==false  then calls PreviewImageActivity again
-            if ((getIntent().getAction() != null && getIntent().getAction().equalsIgnoreCase(ACTION_DETAILS)) && !mDualPane) {
+            if ((getIntent().getAction() != null && ACTION_DETAILS.equalsIgnoreCase(getIntent().getAction())) && !mDualPane) {
                 getIntent().setAction(null);
                 getIntent().putExtra(EXTRA_FILE, (OCFile) null);
                 startImagePreview(getFile(), false);

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -597,7 +597,7 @@ protected void onPostExecute(Boolean result) {
     @Override
     public void onConfirmation(String callerTag) {
         Log_OC.d(TAG, "Positive button in dialog was clicked; dialog tag is " + callerTag);
-        if (callerTag.equals(QUERY_TO_MOVE_DIALOG_TAG)) {
+        if (QUERY_TO_MOVE_DIALOG_TAG.equals(callerTag)) {
             // return the list of selected files to the caller activity (success),
             // signaling that they should be moved to the ownCloud folder, instead of copied
             Intent data = new Intent();

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -402,7 +402,7 @@ private void setThumbnail(OCFile file, ImageView thumbnailView) {
                     }
                 }
 
-                if (file.getMimeType().equalsIgnoreCase("image/png")) {
+                if ("image/png".equalsIgnoreCase(file.getMimeType())) {
                     thumbnailView.setBackgroundColor(mContext.getResources().getColor(R.color.background_color));
                 }
             } else {

File: src/main/java/com/owncloud/android/ui/adapter/TrashbinListAdapter.java
Patch:
@@ -243,7 +243,7 @@ private void setThumbnail(TrashbinFile file, ImageView thumbnailView) {
                     }
                 }
 
-                if (file.getMimeType().equalsIgnoreCase("image/png")) {
+                if ("image/png".equalsIgnoreCase(file.getMimeType())) {
                     thumbnailView.setBackgroundColor(context.getResources().getColor(R.color.background_color));
                 }
             } else {

File: src/main/java/com/owncloud/android/ui/components/CustomEditText.java
Patch:
@@ -42,10 +42,10 @@ public CustomEditText(Context context, AttributeSet attrs) {
 
         String serverInputType = getResources().getString(R.string.server_input_type);
 
-        if (serverInputType.equals(AuthenticatorActivity.DIRECTORY_SERVER_INPUT_TYPE)) {
+        if (AuthenticatorActivity.DIRECTORY_SERVER_INPUT_TYPE.equals(serverInputType)) {
             isPrefixFixed = true;
             fixedText = getResources().getString(R.string.server_url) + "/";
-        } else if (serverInputType.equals(AuthenticatorActivity.SUBDOMAIN_SERVER_INPUT_TYPE)) {
+        } else if (AuthenticatorActivity.SUBDOMAIN_SERVER_INPUT_TYPE.equals(serverInputType)) {
             isPrefixFixed = false;
             fixedText = "." + getResources().getString(R.string.server_url);
         }

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -150,7 +150,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
 
         List<SendButtonData> sendButtonDataList = setupSendButtonData(sendIntent);
 
-        if (getContext().getString(R.string.send_files_to_other_apps).equalsIgnoreCase("off")) {
+        if ("off".equalsIgnoreCase(getContext().getString(R.string.send_files_to_other_apps))) {
             sharePeopleText.setVisibility(View.GONE);
         }
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -148,11 +148,11 @@ private Intent createIntentFromFile(String storagePath) {
         int lastIndexOfDot = storagePath.lastIndexOf('.');
         if (lastIndexOfDot >= 0) {
             String fileExt = storagePath.substring(lastIndexOfDot + 1);
-            if (fileExt.equalsIgnoreCase("url") || fileExt.equalsIgnoreCase("desktop")) {
+            if ("url".equalsIgnoreCase(fileExt) || "desktop".equalsIgnoreCase(fileExt)) {
                 // Windows internet shortcut file .url
                 // Ubuntu internet shortcut file .desktop
                 url = getUrlFromFile(storagePath, mPatternUrl);
-            } else if (fileExt.equalsIgnoreCase("webloc")) {
+            } else if ("webloc".equalsIgnoreCase(fileExt)) {
                 // mac internet shortcut file .webloc
                 url = getUrlFromFile(storagePath, mPatternString);
             }

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -200,11 +200,11 @@ public static String beautifyURL(@Nullable String url) {
             return "";
         }
 
-        if (url.length() >= 7 && url.substring(0, 7).equalsIgnoreCase(HTTP_PROTOCOL)) {
+        if (url.length() >= 7 && HTTP_PROTOCOL.equalsIgnoreCase(url.substring(0, 7))) {
             return url.substring(HTTP_PROTOCOL.length()).trim();
         }
 
-        if (url.length() >= 8 && url.substring(0, 8).equalsIgnoreCase(HTTPS_PROTOCOL)) {
+        if (url.length() >= 8 && HTTPS_PROTOCOL.equalsIgnoreCase(url.substring(0, 8))) {
             return url.substring(HTTPS_PROTOCOL.length()).trim();
         }
 

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -159,7 +159,7 @@ public static String getParentPath(String remotePath) {
     public static OCFile fillOCFile(RemoteFile remote) {
         OCFile file = new OCFile(remote.getRemotePath());
         file.setCreationTimestamp(remote.getCreationTimestamp());
-        if (remote.getMimeType().equalsIgnoreCase(MimeType.DIRECTORY)) {
+        if (MimeType.DIRECTORY.equalsIgnoreCase(remote.getMimeType())) {
             file.setFileLength(remote.getSize());
         } else {
             file.setFileLength(remote.getLength());

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -63,7 +63,7 @@ public static void registerPowerChangeReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (intent.getAction() != null && intent.getAction().equals(Intent.ACTION_POWER_CONNECTED)) {
+                if (intent.getAction() != null && Intent.ACTION_POWER_CONNECTED.equals(intent.getAction())) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -281,16 +281,15 @@ private int deleteSyncFolderWithId(long id) {
      */
     public void updateAutoUploadPaths(Context context) {
         List<SyncedFolder> syncedFolders = getSyncedFolders();
-        for (int i = 0; i < syncedFolders.size(); i++) {
-            SyncedFolder syncedFolder = syncedFolders.get(i);
+        for (SyncedFolder syncedFolder : syncedFolders) {
             if (!new File(syncedFolder.getLocalPath()).exists()) {
                 String localPath = syncedFolder.getLocalPath();
                 if (localPath.endsWith("/")) {
                     localPath = localPath.substring(0, localPath.lastIndexOf('/'));
                 }
                 localPath = localPath.substring(0, localPath.lastIndexOf('/'));
                 if (new File(localPath).exists()) {
-                    syncedFolders.get(i).setLocalPath(localPath);
+                    syncedFolder.setLocalPath(localPath);
                     updateSyncFolder(syncedFolder);
                 } else {
                     deleteSyncFolderWithId(syncedFolder.getId());

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -472,10 +472,13 @@ private void showShareIcon(OCFileListGridImageViewHolder gridViewHolder, OCFile
         
         if (file.isSharedWithSharee() || file.isSharedWithMe()) {
             sharedIconView.setImageResource(R.drawable.shared_via_users);
+            sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_shared));
         } else if (file.isSharedViaLink()) {
             sharedIconView.setImageResource(R.drawable.shared_via_link);
+            sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_shared_via_link));
         } else {
             sharedIconView.setImageResource(R.drawable.ic_unshared);
+            sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_share));
         }
         sharedIconView.setOnClickListener(new View.OnClickListener() {
             @Override

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -472,7 +472,7 @@ private void showShareIcon(OCFileListGridImageViewHolder gridViewHolder, OCFile
         
         if (file.isSharedWithSharee() || file.isSharedWithMe()) {
             sharedIconView.setImageResource(R.drawable.shared_via_users);
-            sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_share));
+            sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_shared));
         } else if (file.isSharedViaLink()) {
             sharedIconView.setImageResource(R.drawable.shared_via_link);
             sharedIconView.setContentDescription(mContext.getString(R.string.shared_icon_shared_via_link));

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -940,7 +940,7 @@ public boolean onFileActionChosen(int menuId, Set<OCFile> checkedFiles) {
         /// actions possible on a batch of files
         switch (menuId) {
             case R.id.action_remove_file: {
-                RemoveFilesDialogFragment dialog = RemoveFilesDialogFragment.newInstance(new ArrayList<>(checkedFiles));
+                RemoveFilesDialogFragment dialog = RemoveFilesDialogFragment.newInstance(new ArrayList<>(checkedFiles), mActiveActionMode);
                 dialog.show(getFragmentManager(), ConfirmationDialogFragment.FTAG_CONFIRMATION);
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -940,7 +940,7 @@ public boolean onFileActionChosen(int menuId, Set<OCFile> checkedFiles) {
         /// actions possible on a batch of files
         switch (menuId) {
             case R.id.action_remove_file: {
-                RemoveFilesDialogFragment dialog = RemoveFilesDialogFragment.newInstance(new ArrayList<>(checkedFiles));
+                RemoveFilesDialogFragment dialog = RemoveFilesDialogFragment.newInstance(new ArrayList<>(checkedFiles), mActiveActionMode);
                 dialog.show(getFragmentManager(), ConfirmationDialogFragment.FTAG_CONFIRMATION);
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/adapter/NotificationListAdapter.java
Patch:
@@ -160,9 +160,10 @@ private SpannableStringBuilder makeSpecialPartsBold(Notification notification) {
 
         int openingBrace = text.indexOf('{');
         int closingBrace;
+        String replaceablePart;
         while (openingBrace != -1) {
             closingBrace = text.indexOf('}', openingBrace) + 1;
-            String replaceablePart = text.substring(openingBrace + 1, closingBrace - 1);
+            replaceablePart = text.substring(openingBrace + 1, closingBrace - 1);
 
             RichObject richObject = notification.subjectRichParameters.get(replaceablePart);
             if (richObject != null) {

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -29,7 +29,7 @@ public class NCFirebaseMessagingService extends FirebaseMessagingService {
 
     @Override
     public void onMessageReceived(RemoteMessage remoteMessage) {
-        if (remoteMessage.getData() != null) {
+        if (remoteMessage != null && remoteMessage.getData() != null) {
             PersistableBundleCompat persistableBundleCompat = new PersistableBundleCompat();
             persistableBundleCompat.putString(NotificationJob.KEY_NOTIFICATION_SUBJECT, remoteMessage.getData().get
                     (NotificationJob.KEY_NOTIFICATION_SUBJECT));

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -79,7 +79,7 @@ public long storeUpload(OCUpload ocUpload) {
         cv.put(ProviderTableMeta.UPLOADS_FORCE_OVERWRITE, ocUpload.isForceOverwrite() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER, ocUpload.isCreateRemoteFolder() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_LAST_RESULT, ocUpload.getLastResult().getValue());
-        cv.put(ProviderTableMeta.UPLOADS_CREATED_BY, ocUpload.getCreadtedBy());
+        cv.put(ProviderTableMeta.UPLOADS_CREATED_BY, ocUpload.getCreatedBy());
         cv.put(ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY, ocUpload.isWhileChargingOnly() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_IS_WIFI_ONLY, ocUpload.isUseWifiOnly() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_FOLDER_UNLOCK_TOKEN, ocUpload.getFolderUnlockToken());

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -211,7 +211,7 @@ public UploadFileOperation(Account account,
         mOriginalStoragePath = mFile.getStoragePath();
         mContext = context;
         mOCUploadId = upload.getUploadId();
-        mCreatedBy = upload.getCreadtedBy();
+        mCreatedBy = upload.getCreatedBy();
         mRemoteFolderToBeCreated = upload.isCreateRemoteFolder();
         // Ignore power save mode only if user explicitly created this upload
         mIgnoringPowerSaveMode = (mCreatedBy == CREATED_BY_USER);

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -134,7 +134,7 @@ protected Result onRunJob(@NonNull Params params) {
 
         } else {
             mediaFoldersModel = new MediaFoldersModel(imageMediaFolderPaths, videoMediaFolderPaths);
-            arbitraryDataProvider.storeOrUpdateKeyValue("global", "media_folders", gson.toJson(mediaFoldersModel));
+            arbitraryDataProvider.storeOrUpdateKeyValue(ACCOUNT_NAME_GLOBAL, KEY_MEDIA_FOLDERS, gson.toJson(mediaFoldersModel));
         }
 
         return Result.SUCCESS;

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -148,6 +148,7 @@ private void sendNotification(String contentTitle, String subtitle,  Account acc
         intent.putExtra(NotificationJob.KEY_NOTIFICATION_ACCOUNT, account.name);
         intent.putExtra(KEY_MEDIA_FOLDER_PATH, path);
         intent.putExtra(KEY_MEDIA_FOLDER_TYPE, type);
+        intent.putExtra(SyncedFoldersActivity.EXTRA_SHOW_SIDEBAR, true);
         PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_ONE_SHOT);
 
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Nextcloud Android client application
  *
  * @author Mario Danic

File: src/main/java/com/owncloud/android/datamodel/MediaFoldersModel.java
Patch:
@@ -30,6 +30,7 @@ public class MediaFoldersModel {
      * default constructor.
      */
     public MediaFoldersModel() {
+        // keep default constructor for GSON
     }
 
     public MediaFoldersModel(List<String> imageMediaFolders, List<String> videoMediaFolders) {

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -103,7 +103,6 @@ protected Result onRunJob(@NonNull Params params) {
                     }
                 }
 
-
                 for (Account account : accountList) {
                     for (String imageMediaFolder : imageMediaFolderPaths) {
                         if (syncedFolderProvider.findByLocalPathAndAccount(imageMediaFolder,
@@ -158,7 +157,7 @@ private void sendNotification(String contentTitle, String subtitle,  Account acc
                 .setAutoCancel(true)
                 .setContentIntent(pendingIntent);
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             notificationBuilder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_GENERAL);
         }
 

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -72,8 +72,8 @@ public static List<MediaFolder> getImageFolders(ContentResolver contentResolver,
 
         // query media/image folders
         Cursor cursorFolders = null;
-        if ((activity != null && PermissionUtil.checkSelfPermission(activity.getApplicationContext(),
-                Manifest.permission.WRITE_EXTERNAL_STORAGE)) || getWithoutActivity) {
+        if (activity != null && PermissionUtil.checkSelfPermission(activity.getApplicationContext(),
+                Manifest.permission.WRITE_EXTERNAL_STORAGE) || getWithoutActivity) {
             cursorFolders = contentResolver.query(IMAGES_MEDIA_URI, IMAGES_FOLDER_PROJECTION, null, null,
                     IMAGES_FOLDER_SORT_ORDER);
         }

File: src/main/java/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -82,9 +82,9 @@ public int countEnabledSyncedFolders() {
         int count = 0;
         Cursor cursor = mContentResolver.query(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
-                new String[]{ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED},
-                ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED + " == 1",
                 null,
+                ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_ENABLED + " = ?",
+                new String[]{"1"},
                 null
         );
 

File: src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java
Patch:
@@ -121,7 +121,7 @@ protected Result onRunJob(@NonNull Params params) {
                                 account) == null) {
                             String videoMediaFolder = videoMediaFolderPaths.get(i);
                             sendNotification(String.format(context.getString(R.string.new_media_folder_detected),
-                                    context.getString(R.string.new_media_folder_photos)),
+                                    context.getString(R.string.new_media_folder_videos)),
                                     videoMediaFolder.substring(videoMediaFolder.lastIndexOf("/") + 1,
                                             videoMediaFolder.length()),
                                     account, videoMediaFolder, 2);

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -439,7 +439,7 @@ private String generateMnemonicString(boolean withWhitespace) {
         for (String string : keyWords) {
             stringBuilder.append(string);
             if (withWhitespace) {
-                stringBuilder.append(" ");
+                stringBuilder.append(' ');
             }
         }
 

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -472,7 +472,7 @@ protected void playMedia() {
 
         } catch (SecurityException | IOException | IllegalStateException | IllegalArgumentException e) {
             Log_OC.e(TAG, e.getClass().getSimpleName() + " playing " + mAccount.name + mFile.getRemotePath(), e);
-            Toast.makeText(this, String.format(getString(R.string.media_err_security_ex), mFile.getFileName()),
+            Toast.makeText(this, String.format(getString(R.string.media_err_unexpected), mFile.getFileName()),
                     Toast.LENGTH_LONG).show();
             processStopRequest(true);
         }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -545,7 +545,7 @@ private void initAuthTokenType() {
         mAuthTokenType = getIntent().getExtras().getString(AccountAuthenticator.KEY_AUTH_TOKEN_TYPE);
         if (mAuthTokenType == null) {
             if (mAccount != null) {
-                boolean oAuthRequired = (mAccountMgr.getUserData(mAccount, Constants.KEY_SUPPORTS_OAUTH2) != null);
+                boolean oAuthRequired = mAccountMgr.getUserData(mAccount, Constants.KEY_SUPPORTS_OAUTH2) != null;
                 boolean samlWebSsoRequired = (
                         mAccountMgr.getUserData
                                 (mAccount, Constants.KEY_SUPPORTS_SAML_WEB_SSO) != null

File: src/main/java/com/owncloud/android/authentication/AuthenticatorUrlUtils.java
Patch:
@@ -91,7 +91,7 @@ public static String normalizeUrl(String url, boolean sslWhenUnprefixed) {
 
             normalizedUrl = normalizeUrlSuffix(normalizedUrl);
         }
-        return (normalizedUrl != null ? normalizedUrl : "");
+        return normalizedUrl != null ? normalizedUrl : "";
     }
 
     public static String trimWebdavSuffix(String url) {

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -134,7 +134,7 @@ public void onCreate() {
                 .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.notification_icon))
                 .setColor(ThemeUtils.primaryColor(getApplicationContext(), true));
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             builder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_DOWNLOAD);
         }
 
@@ -528,7 +528,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
                                 new File(download.getSavePath()).getName())
                 );
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             mNotificationBuilder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_DOWNLOAD);
         }
         

File: src/main/java/com/owncloud/android/jobs/NotificationJob.java
Patch:
@@ -122,7 +122,7 @@ private void sendNotification(String contentTitle, Account account) {
                 .setAutoCancel(true)
                 .setContentIntent(pendingIntent);
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             notificationBuilder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_PUSH);
         }
 

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -538,7 +538,7 @@ private void updateNotification(String content) {
         mNotificationBuilder.setContentTitle(ticker);
         mNotificationBuilder.setContentText(content);
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             mNotificationBuilder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_MEDIA);
         }
 
@@ -575,7 +575,7 @@ private void setUpAsForeground(String content) {
         mNotificationBuilder.setContentTitle(ticker);
         mNotificationBuilder.setContentText(content);
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             mNotificationBuilder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_MEDIA);
         }
 

File: src/main/java/com/owncloud/android/media/MediaServiceBinder.java
Patch:
@@ -57,12 +57,10 @@ public MediaServiceBinder(MediaService service) {
         mService = service;
     }
 
-
     public boolean isPlaying(OCFile mFile) {
-        return (mFile != null && mFile.equals(mService.getCurrentFile()));
+        return mFile != null && mFile.equals(mService.getCurrentFile());
     }
 
-
     @Override
     public boolean canPause() {
         return true;

File: src/main/java/com/owncloud/android/operations/RemoveRemoteEncryptedFileOperation.java
Patch:
@@ -126,7 +126,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             int status = client.executeMethod(delete, REMOVE_READ_TIMEOUT, REMOVE_CONNECTION_TIMEOUT);
 
             delete.getResponseBodyAsString();   // exhaust the response, although not interesting
-            result = new RemoteOperationResult((delete.succeeded() || status == HttpStatus.SC_NOT_FOUND), delete);
+            result = new RemoteOperationResult(delete.succeeded() || status == HttpStatus.SC_NOT_FOUND, delete);
             Log_OC.i(TAG, "Remove " + remotePath + ": " + result.getLogMessage());
 
             // remove file from metadata

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -210,7 +210,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     serverChanged = mServerFile.getModificationTimestamp() !=
                             mLocalFile.getModificationTimestampAtLastSyncForData();
                 } else {
-                    serverChanged = (!mServerFile.getEtag().equals(mLocalFile.getEtag()));
+                    serverChanged = !mServerFile.getEtag().equals(mLocalFile.getEtag());
                 }
                 boolean localChanged = (
                         mLocalFile.getLocalModificationTimestamp() > mLocalFile.getLastSyncDateForData()

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -331,7 +331,7 @@ public void removeOperationListener(OnRemoteOperationListener listener) {
          *          in process.
          */
         public boolean isPerformingBlockingOperation() {
-            return (!mServiceHandler.mPendingOperations.isEmpty());
+            return !mServiceHandler.mPendingOperations.isEmpty();
         }
 
 

File: src/main/java/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -525,7 +525,7 @@ private void showNotification(int id, NotificationCompat.Builder builder) {
         NotificationManager notificationManager = ((NotificationManager) getContext().
                 getSystemService(Context.NOTIFICATION_SERVICE));
 
-        if ((android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O)) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             builder.setChannelId(NotificationUtils.NOTIFICATION_CHANNEL_FILE_SYNC);
         }
 

File: src/main/java/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -71,7 +71,7 @@ protected void onNewIntent (Intent intent) {
     protected void onRestart() {
         Log_OC.v(TAG, "onRestart() start");
         super.onRestart();
-        boolean validAccount = (mCurrentAccount != null && AccountUtils.exists(mCurrentAccount, this));
+        boolean validAccount = mCurrentAccount != null && AccountUtils.exists(mCurrentAccount, this);
         if (!validAccount) {
             swapToDefaultAccount();
         }

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -384,7 +384,7 @@ protected void requestCredentialsUpdate(Context context, Account account) {
             }
             OwnCloudClient client;
             OwnCloudAccount ocAccount = new OwnCloudAccount(account, context);
-            client = (OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(ocAccount));
+            client = OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(ocAccount);
             if (client != null) {
                 OwnCloudCredentials cred = client.getCredentials();
                 if (cred != null) {

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -379,7 +379,7 @@ protected void updateNavigationElementsInActionBar() {
         ActionBar actionBar = getSupportActionBar();
 
         if (actionBar != null) {
-            boolean atRoot = (currentDir == null || currentDir.getParentId() == 0);
+            boolean atRoot = currentDir == null || currentDir.getParentId() == 0;
             actionBar.setDisplayHomeAsUpEnabled(!atRoot);
             actionBar.setHomeButtonEnabled(!atRoot);
 

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -321,7 +321,7 @@ private boolean isSearchOpen() {
             return false;
         } else {
             View mSearchEditFrame = mSearchView.findViewById(android.support.v7.appcompat.R.id.search_edit_frame);
-            return (mSearchEditFrame != null && mSearchEditFrame.getVisibility() == View.VISIBLE);
+            return mSearchEditFrame != null && mSearchEditFrame.getVisibility() == View.VISIBLE;
         }
     }
     

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -457,7 +457,7 @@ public void onClick(View v) {
      * @return True when the fragment was created with the empty layout.
      */
     public boolean isEmpty() {
-        return (layout == R.layout.empty_list || getFile() == null || account == null);
+        return layout == R.layout.empty_list || getFile() == null || account == null;
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -695,9 +695,7 @@ public void refreshPublicShareFromDB() {
      * @return 'True' when public share is disabled in the server
      */
     private boolean isPublicShareDisabled() {
-        return (mCapabilities != null &&
-                mCapabilities.getFilesSharingPublicEnabled().isFalse()
-        );
+        return mCapabilities != null && mCapabilities.getFilesSharingPublicEnabled().isFalse();
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -361,7 +361,7 @@ private boolean checkAndAskForContactsReadPermission() {
         final ContactsPreferenceActivity contactsPreferenceActivity = (ContactsPreferenceActivity) getActivity();
 
         // check permissions
-        if ((PermissionUtil.checkSelfPermission(contactsPreferenceActivity, Manifest.permission.READ_CONTACTS))) {
+        if (PermissionUtil.checkSelfPermission(contactsPreferenceActivity, Manifest.permission.READ_CONTACTS)) {
             return true;
         } else {
             // Check if we should show an explanation

File: src/main/java/com/owncloud/android/ui/fragment/util/FileDetailSharingFragmentHelper.java
Patch:
@@ -71,6 +71,6 @@ public boolean onQueryTextChange(String newText) {
      * @return 'True' when public share is disabled in the server.
      */
     public static boolean isPublicShareDisabled(OCCapability capabilities) {
-        return (capabilities != null && capabilities.getFilesSharingPublicEnabled().isFalse());
+        return capabilities != null && capabilities.getFilesSharingPublicEnabled().isFalse();
     }
 }

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -266,7 +266,7 @@ public static String convertIdn(String url, boolean toASCII) {
         hostEnd = (hostEnd == -1 ? urlNoDots.length() : hostStart + hostEnd);
 
         String host = urlNoDots.substring(hostStart, hostEnd);
-        host = (toASCII ? IDN.toASCII(host) : IDN.toUnicode(host));
+        host = toASCII ? IDN.toASCII(host) : IDN.toUnicode(host);
 
         return dots + urlNoDots.substring(0, hostStart) + host + urlNoDots.substring(hostEnd);
     }

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -113,7 +113,6 @@ public static void insertAllDBEntriesForSyncedFolder(SyncedFolder syncedFolder)
 
         } else {
             try {
-
                 if (dryRun) {
                     arbitraryDataProvider.storeOrUpdateKeyValue(GLOBAL, syncedFolderInitiatedKey,
                             currentTimeString);
@@ -157,7 +156,7 @@ public static void insertAllDBEntries(boolean skipCustom) {
         SyncedFolderProvider syncedFolderProvider = new SyncedFolderProvider(contentResolver);
 
         for (SyncedFolder syncedFolder : syncedFolderProvider.getSyncedFolders()) {
-            if ((syncedFolder.isEnabled()) && ((MediaFolderType.CUSTOM != syncedFolder.getType()) || !skipCustom)) {
+            if (syncedFolder.isEnabled() && (MediaFolderType.CUSTOM != syncedFolder.getType() || !skipCustom)) {
                 insertAllDBEntriesForSyncedFolder(syncedFolder);
             }
         }

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -282,11 +282,10 @@ public static boolean isImage(ServerFileInterface file) {
      * @return 'True' if the file is simple text (e.g. not application-dependent, like .doc or .docx)
      */
     public static boolean isText(OCFile file) {
-        return (MimeTypeUtil.isText(file.getMimeType())
-                || MimeTypeUtil.isText(getMimeTypeFromPath(file.getRemotePath())));
+        return MimeTypeUtil.isText(file.getMimeType())
+                || MimeTypeUtil.isText(getMimeTypeFromPath(file.getRemotePath()));
     }
 
-
     /**
      * @param file the file to be analyzed
      * @return 'True' if the file is a vcard

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -222,8 +222,6 @@ private long getFileChecksum(String filepath) {
 
             return crc.getValue();
 
-        } catch (FileNotFoundException e) {
-            return -1;
         } catch (IOException e) {
             return -1;
         }

File: src/main/java/com/owncloud/android/utils/ConnectivityUtils.java
Patch:
@@ -91,9 +91,7 @@ public static boolean isInternetWalled(Context context) {
                 Log_OC.e(TAG, "Error checking internet connection", e);
             } catch (com.owncloud.android.lib.common.accounts.AccountUtils.AccountNotFoundException e) {
                 Log_OC.e(TAG, "Account not found", e);
-            } catch (OperationCanceledException e) {
-                Log_OC.e(TAG, e.getMessage());
-            } catch (AuthenticatorException e) {
+            } catch (OperationCanceledException | AuthenticatorException e) {
                 Log_OC.e(TAG, e.getMessage());
             }
         } else if (!Device.getNetworkType(context).equals(JobRequest.NetworkType.ANY)) {

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -632,9 +632,8 @@ private void parseVirtuals(ArrayList<Object> objects, ExtendedListFragment.Searc
                 // also sync folder content
                 if (ocFile.isFolder()) {
                     long currentSyncTime = System.currentTimeMillis();
-                    boolean shareSupported = AccountUtils.getServerVersion(mAccount).isSharedSupported();
                     RemoteOperation refreshFolderOperation = new RefreshFolderOperation(ocFile, currentSyncTime, false,
-                            shareSupported, false, mStorageManager, mAccount, mContext);
+                            false, mStorageManager, mAccount, mContext);
                     refreshFolderOperation.execute(mAccount, mContext);
                 }
 

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -67,7 +67,7 @@ public class SetupEncryptionDialogFragment extends DialogFragment {
     public static final String SUCCESS = "SUCCESS";
     public static final int SETUP_ENCRYPTION_RESULT_CODE = 101;
     public static final int SETUP_ENCRYPTION_REQUEST_CODE = 100;
-    public static String SETUP_ENCRYPTION_DIALOG_TAG = "SETUP_ENCRYPTION_DIALOG_TAG";
+    public static final String SETUP_ENCRYPTION_DIALOG_TAG = "SETUP_ENCRYPTION_DIALOG_TAG";
     public static final String ARG_POSITION = "ARG_POSITION";
 
     private static String ARG_ACCOUNT = "ARG_ACCOUNT";

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -774,8 +774,6 @@ public void onConfigurationChanged(Configuration newConfig) {
             maxColumnSize = maxColumnSizeLandscape;
         } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT) {
             maxColumnSize = maxColumnSizePortrait;
-        } else {
-            maxColumnSize = maxColumnSizePortrait;
         }
 
         if (isGridEnabled() && getColumnSize() > maxColumnSize) {

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -73,7 +73,7 @@ public class FilesSyncHelper {
     public static final String GLOBAL = "global";
     public static final String SYNCEDFOLDERINITIATED = "syncedFolderIntitiated_";
 
-    public static int ContentSyncJobId = 315;
+    public static final int ContentSyncJobId = 315;
 
     public static void insertAllDBEntriesForSyncedFolder(SyncedFolder syncedFolder) {
         final Context context = MainApp.getAppContext();
@@ -126,7 +126,7 @@ public static void insertAllDBEntriesForSyncedFolder(SyncedFolder syncedFolder)
 
                     Files.walkFileTree(path, new SimpleFileVisitor<Path>() {
                         @Override
-                        public FileVisitResult visitFile(Path path, BasicFileAttributes attrs) throws IOException {
+                        public FileVisitResult visitFile(Path path, BasicFileAttributes attrs) {
 
                             File file = path.toFile();
                             if (attrs.lastModifiedTime().toMillis() >= Long.parseLong(dateInitiated) * 1000) {

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -67,7 +67,7 @@ public class SetupEncryptionDialogFragment extends DialogFragment {
     public static final String SUCCESS = "SUCCESS";
     public static final int SETUP_ENCRYPTION_RESULT_CODE = 101;
     public static final int SETUP_ENCRYPTION_REQUEST_CODE = 100;
-    public static String SETUP_ENCRYPTION_DIALOG_TAG = "SETUP_ENCRYPTION_DIALOG_TAG";
+    public static final String SETUP_ENCRYPTION_DIALOG_TAG = "SETUP_ENCRYPTION_DIALOG_TAG";
     public static final String ARG_POSITION = "ARG_POSITION";
 
     private static String ARG_ACCOUNT = "ARG_ACCOUNT";

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -73,7 +73,7 @@ public class FilesSyncHelper {
     public static final String GLOBAL = "global";
     public static final String SYNCEDFOLDERINITIATED = "syncedFolderIntitiated_";
 
-    public static int ContentSyncJobId = 315;
+    public static final int ContentSyncJobId = 315;
 
     public static void insertAllDBEntriesForSyncedFolder(SyncedFolder syncedFolder) {
         final Context context = MainApp.getAppContext();
@@ -126,7 +126,7 @@ public static void insertAllDBEntriesForSyncedFolder(SyncedFolder syncedFolder)
 
                     Files.walkFileTree(path, new SimpleFileVisitor<Path>() {
                         @Override
-                        public FileVisitResult visitFile(Path path, BasicFileAttributes attrs) throws IOException {
+                        public FileVisitResult visitFile(Path path, BasicFileAttributes attrs) {
 
                             File file = path.toFile();
                             if (attrs.lastModifiedTime().toMillis() >= Long.parseLong(dateInitiated) * 1000) {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -206,7 +206,7 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
     private TextView mServerStatusView;
 
     private TextWatcher mHostUrlInputWatcher;
-    private String mServerStatusText;
+    private String mServerStatusText = "";
     private int mServerStatusIcon = 0;
 
     private boolean mServerIsChecked = false;
@@ -226,7 +226,7 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
 
     private WebView mLoginWebView;
 
-    private String mAuthStatusText;
+    private String mAuthStatusText = "";
     private int mAuthStatusIcon = 0;
 
     private String mAuthToken = "";
@@ -1963,7 +1963,7 @@ public void onRegisterClick(View view) {
      * to the last check on the ownCloud server.
      */
     private void showServerStatus() {
-        if (mServerStatusIcon == 0 && "".equals(mServerStatusText) || forceOldLoginMethod) {
+        if (mServerStatusIcon == 0 && "".equals(mServerStatusText)) {
             mServerStatusView.setVisibility(View.INVISIBLE);
         } else {
             mServerStatusView.setText(mServerStatusText);

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -558,7 +558,7 @@ private Bitmap doThumbnailFromOCFileInBackground() {
                                             pxW + "/" + pxH + Uri.encode(file.getRemotePath(), "/");
                                 } else {
                                     uri = mClient.getBaseUri() + "/index.php/apps/files_trashbin/preview?fileId=" +
-                                            file.getLocalId() + "x="+ pxW + "&y=" + pxH;
+                                            file.getLocalId() + "&x=" + pxW + "&y=" + pxH;
                                 }
                                 
                                 Log_OC.d(TAG, "generate thumbnail: " + file.getFileName() + " URI: " + uri);

File: src/main/java/com/owncloud/android/ui/trashbin/TrashbinContract.java
Patch:
@@ -32,7 +32,7 @@ public interface TrashbinContract {
     interface View {
         void showTrashbinFolder(List<Object> trashbinFiles);
 
-        void showError(int message, TrashbinFile file);
+        void showSnackbarError(int message, TrashbinFile file);
 
         void showError(int message);
 

File: src/main/java/com/owncloud/android/ui/trashbin/TrashbinPresenter.java
Patch:
@@ -85,7 +85,7 @@ public void restoreTrashbinFile(TrashbinFile file) {
             if (success) {
                 trashbinView.removeFile(file);
             } else {
-                trashbinView.showError(R.string.trashbin_file_not_restored, file);
+                trashbinView.showSnackbarError(R.string.trashbin_file_not_restored, file);
             }
         });
     }
@@ -96,7 +96,7 @@ public void removeTrashbinFile(TrashbinFile file) {
             if (success) {
                 trashbinView.removeFile(file);
             } else {
-                trashbinView.showError(R.string.trashbin_file_not_deleted, file);
+                trashbinView.showSnackbarError(R.string.trashbin_file_not_deleted, file);
             }
         });
     }

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -139,7 +139,7 @@ public void removeAllFilesFromCheckedFiles() {
     }
 
     public int getItemPosition(File file) {
-        return mFilesAll.indexOf(file);
+        return mFiles.indexOf(file);
     }
 
     public String[] getCheckedFilesPath() {

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -139,7 +139,7 @@ public void removeAllFilesFromCheckedFiles() {
     }
 
     public int getItemPosition(File file) {
-        return mFilesAll.indexOf(file);
+        return mFiles.indexOf(file);
     }
 
     public String[] getCheckedFilesPath() {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1419,7 +1419,8 @@ private void onGetServerInfoFinish(RemoteOperationResult result) {
             mServerInfo = (GetServerInfoOperation.ServerInfo) (result.getData().get(0));
 
             // show outdated warning
-            if (mServerInfo.mVersion.compareTo(MainApp.OUTDATED_SERVER_VERSION) < 0) {
+            if (getResources().getBoolean(R.bool.show_outdated_server_warning) &&
+                    mServerInfo.mVersion.compareTo(MainApp.OUTDATED_SERVER_VERSION) < 0) {
                 DisplayUtils.showServerOutdatedSnackbar(this);
             }
 

File: src/main/java/com/owncloud/android/ui/activity/CopyToClipboardActivity.java
Patch:
@@ -70,7 +70,7 @@ public void onCreate(Bundle savedInstanceState) {
             }
 
         } catch (Exception e) {
-            DisplayUtils.showSnackMessage(this, R.string.clipboard_uxexpected_error);
+            DisplayUtils.showSnackMessage(this, R.string.clipboard_unexpected_error);
             Log_OC.e(TAG, "Exception caught while copying to clipboard", e);
         }
 

File: src/main/java/com/owncloud/android/utils/ClipboardUtil.java
Patch:
@@ -27,7 +27,7 @@ public static void copyToClipboard(Activity activity, String text) {
 
                 Toast.makeText(activity, R.string.clipboard_text_copied, Toast.LENGTH_SHORT).show();
             } catch (Exception e) {
-                Toast.makeText(activity, R.string.clipboard_uxexpected_error, Toast.LENGTH_SHORT).show();
+                Toast.makeText(activity, R.string.clipboard_unexpected_error, Toast.LENGTH_SHORT).show();
                 Log_OC.e(TAG, "Exception caught while copying to clipboard", e);
             }
         } else {

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -53,7 +53,6 @@
 import com.owncloud.android.lib.resources.shares.SharePermissionsBuilder;
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.lib.resources.status.OCCapability;
-import com.owncloud.android.ui.activity.CopyToClipboardActivity;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.adapter.UserListAdapter;
 import com.owncloud.android.ui.decoration.SimpleListItemDividerDecoration;

File: src/main/java/com/owncloud/android/ui/activity/CopyToClipboardActivity.java
Patch:
@@ -23,6 +23,7 @@
 import android.app.Activity;
 import android.content.ClipData;
 import android.content.ClipboardManager;
+import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 
@@ -45,7 +46,7 @@ public void onCreate(Bundle savedInstanceState) {
         try {
 
             // get the clipboard system service
-            ClipboardManager clipboardManager = (ClipboardManager) this.getSystemService(CLIPBOARD_SERVICE);
+            ClipboardManager clipboardManager = (ClipboardManager) this.getSystemService(Context.CLIPBOARD_SERVICE);
 
             // get the text to copy into the clipboard
             Intent intent = getIntent();

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1937,6 +1937,7 @@ private void onCreateShareViaLinkOperationFinish(CreateShareViaLinkOperation ope
             chooserDialog.show(getSupportFragmentManager(), FTAG_CHOOSER_DIALOG);
 
             fileDetailFragment.getFileDetailSharingFragment().refreshPublicShareFromDB();
+            fileDetailFragment.getFileDetailSharingFragment().onUpdateShareInformation(result, getFile());
             refreshListOfFilesFragment(false);
         } else {
             // Detect Failure (403) --> maybe needs password

File: src/test/java/com/owncloud/android/utils/ErrorMessageAdapterUnitTest.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  *   ownCloud Android client application
  *
  *   @author David A. Velasco
@@ -58,7 +58,7 @@ public class ErrorMessageAdapterUnitTest {
     private final static String ACCOUNT_TYPE = "nextcloud";
 
     @Mock
-    Resources mMockResources;
+    private Resources mMockResources;
 
     @Test
     public void getErrorCauseMessageForForbiddenRemoval() {
@@ -73,7 +73,7 @@ public void getErrorCauseMessageForForbiddenRemoval() {
         // ... when method under test is called ...
         String errorMessage = ErrorMessageAdapter.getErrorCauseMessage(
             new RemoteOperationResult(RemoteOperationResult.ResultCode.FORBIDDEN),
-                new RemoveFileOperation(PATH_TO_DELETE, false, account, MainApp.getAppContext()),
+                new RemoveFileOperation(PATH_TO_DELETE, false, account, false, MainApp.getAppContext()),
             mMockResources
         );
 

File: src/main/java/com/owncloud/android/authentication/AccountAuthenticator.java
Patch:
@@ -176,7 +176,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
             }
 
             result.putString(AccountManager.KEY_ACCOUNT_NAME,  account.name);
-            result.putString(AccountManager.KEY_ACCOUNT_TYPE, MainApp.getAccountType());
+            result.putString(AccountManager.KEY_ACCOUNT_TYPE, MainApp.getAccountType(mContext));
             result.putString(AccountManager.KEY_AUTHTOKEN,     NEXTCLOUD_SSO);
             result.putString("username", userId);
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -869,6 +869,7 @@ public void removeFiles(Collection<OCFile> files, boolean onlyLocalCopy, boolean
             service.putExtra(OperationsService.EXTRA_ACCOUNT, mFileActivity.getAccount());
             service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
             service.putExtra(OperationsService.EXTRA_REMOVE_ONLY_LOCAL, onlyLocalCopy);
+            service.putExtra(OperationsService.EXTRA_IN_BACKGROUND, inBackground);
             mWaitingForOpId = mFileActivity.getOperationsServiceBinder().queueNewOperation(service);
         }
 

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -75,7 +75,6 @@
 /**
  * Adapter for the activity view
  */
-
 public class ActivityListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     protected static final int HEADER_TYPE = 100;
@@ -391,5 +390,4 @@ protected ActivityViewHeaderHolder(View itemView) {
 
         }
     }
-
 }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -34,7 +34,6 @@
 
 import org.apache.commons.codec.binary.Hex;
 
-import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.util.Locale;

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -186,7 +186,7 @@ public FileDetailSharingFragment getFileDetailSharingFragment() {
     /**
      * return the reference to the file detail activity fragment to communicate with it.
      *
-     * @return reference to the {@link FileDetailSharingFragment}
+     * @return reference to the {@link FileDetailActivitiesFragment}
      */
     public FileDetailActivitiesFragment getFileDetailActivitiesFragment() {
         return ((FileDetailTabAdapter) viewPager.getAdapter()).getFileDetailActivitiesFragment();

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1812,6 +1812,9 @@ private void onRestoreFileVersionOperationFinish(RestoreFileVersionOperation ope
                 FileDetailFragment fileDetailFragment = (FileDetailFragment) getSecondFragment();
                 fileDetailFragment.getFileDetailActivitiesFragment().reload();
             }
+        } else {
+            Snackbar.make(getSecondFragment().getView(), R.string.file_version_restored_error,
+                    Snackbar.LENGTH_LONG).show();
         }
 
     }

File: src/main/java/com/owncloud/android/ui/adapter/UserListAdapter.java
Patch:
@@ -57,6 +57,7 @@
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
+import java.util.ArrayList;
 
 /**
  * Adapter to show a user/group/email/remote in Sharing list in file details view.

File: src/main/java/com/owncloud/android/authentication/AccountAuthenticator.java
Patch:
@@ -176,7 +176,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
             }
 
             result.putString(AccountManager.KEY_ACCOUNT_NAME,  account.name);
-            result.putString(AccountManager.KEY_ACCOUNT_TYPE, MainApp.getAccountType());
+            result.putString(AccountManager.KEY_ACCOUNT_TYPE, MainApp.getAccountType(mContext));
             result.putString(AccountManager.KEY_AUTHTOKEN,     NEXTCLOUD_SSO);
             result.putString("username", userId);
 

File: src/main/java/com/owncloud/android/operations/UpdateSharePermissionsOperation.java
Patch:
@@ -21,6 +21,8 @@
 
 package com.owncloud.android.operations;
 
+import android.text.TextUtils;
+
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -136,9 +138,8 @@ private void updateData(OCShare share) {
             share.setIsFolder(false);
         }
 
-        share.setIsPasswordProtected((mPassword != null && mPassword.length() > 0));
+        share.setIsPasswordProtected(!TextUtils.isEmpty(mPassword));
         getStorageManager().saveShare(share);
     }
-
 }
 

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -997,7 +997,7 @@ public boolean saveShare(OCShare share) {
         cv.put(ProviderTableMeta.OCSHARES_ID_REMOTE_SHARED, share.getRemoteId());
         cv.put(ProviderTableMeta.OCSHARES_ACCOUNT_OWNER, mAccount.name);
 
-        cv.put(ProviderTableMeta.OCSHARES_IS_PASSWORD_PROTECTED, share.isPasswordProtected());
+        cv.put(ProviderTableMeta.OCSHARES_IS_PASSWORD_PROTECTED, share.isPasswordProtected() ? 1 : 0);
 
         if (shareExistsForRemoteId(share.getRemoteId())) {// for renamed files; no more delete and create
             overriden = true;

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -31,6 +31,7 @@
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.design.widget.Snackbar;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBar;
 import android.support.v7.widget.AppCompatButton;

File: src/main/java/com/owncloud/android/features/FeatureList.java
Patch:
@@ -41,7 +41,7 @@ public class FeatureList {
 
     private static final int VERSION_1_0_0 = 10000099;
     private static final int VERSION_3_0_0 = 30000099;
-    private static final int VERSION_3_2_0 = 30020000;
+    private static final int VERSION_3_3_0 = 30030099;
     private static final int BETA_VERSION_0 = 0;
 
     static public ArrayList<FeatureItem> get(boolean isMultiAccount) {
@@ -70,10 +70,10 @@ static public ArrayList<FeatureItem> get(boolean isMultiAccount) {
                 R.string.whats_new_ipv6_content, VERSION_3_0_0,
                 BETA_VERSION_0, SHOW_ON_UPGRADE, false, false));
 
-        // 3.2.0
+        // 3.3.0
         featuresList.add(new FeatureItem(R.drawable.whats_new_device_credentials,
                 R.string.whats_new_device_credentials_title, R.string.whats_new_device_credentials_content,
-                VERSION_3_2_0, BETA_VERSION_0, SHOW_ON_UPGRADE, false, false));
+                VERSION_3_3_0, BETA_VERSION_0, SHOW_ON_UPGRADE, false, false));
 
         return featuresList;
     }

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -892,8 +892,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
             }
         }
     }
-
-    @NonNull
+    
     @Override
     @NonNull
     public MenuInflater getMenuInflater() {

File: src/main/java/com/owncloud/android/ui/activity/RequestCredentialsActivity.java
Patch:
@@ -30,7 +30,6 @@
 
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;
-import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DeviceCredentialUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
@@ -66,7 +65,6 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     @Override
     protected void onResume() {
         super.onResume();
-        AnalyticsUtils.setCurrentScreenName(this, SCREEN_NAME, TAG);
 
         if (DeviceCredentialUtils.areCredentialsAvailable(this)) {
             DeviceCredentialUtils.createKey(getApplicationContext());

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -85,7 +85,7 @@ public void onActivityStarted(Activity activity) {
 
         if (!sExemptOfPasscodeActivites.contains(activity.getClass()) && Build.VERSION.SDK_INT >=
                 Build.VERSION_CODES.M && deviceCredentialsShouldBeRequested() &&
-                !DeviceCredentialUtils.tryEncrypt()) {
+                !DeviceCredentialUtils.tryEncrypt(activity)) {
             Intent i = new Intent(MainApp.getAppContext(), RequestCredentialsActivity.class);
             i.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
             activity.startActivity(i);
@@ -138,6 +138,6 @@ private boolean fingerprintIsEnabled() {
     private boolean deviceCredentialsAreEnabled() {
         SharedPreferences appPrefs = PreferenceManager
                 .getDefaultSharedPreferences(MainApp.getAppContext());
-        return (appPrefs.getBoolean(Preferences.PREFERENCE_USE_DEVICE_CREDENTIALS, false));
+        return appPrefs.getBoolean(Preferences.PREFERENCE_USE_DEVICE_CREDENTIALS, false);
     }
 }

File: src/main/java/com/owncloud/android/utils/FileSortOrderByName.java
Patch:
@@ -24,7 +24,6 @@
 
 import java.io.File;
 import java.util.Collections;
-import java.util.Comparator;
 import java.util.List;
 import java.util.Locale;
 

File: src/main/java/com/owncloud/android/utils/FileSortOrderBySize.java
Patch:
@@ -24,15 +24,12 @@
 
 import java.io.File;
 import java.util.Collections;
-import java.util.Comparator;
 import java.util.List;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 /**
  * Sorts files by sizes
  */
-
 public class FileSortOrderBySize extends FileSortOrder {
 
     FileSortOrderBySize(String name, boolean ascending) {

File: src/androidTest/java/com/owncloud/android/AbstractIT.java
Patch:
@@ -45,7 +45,7 @@ public static void beforeAll() {
         try {
             context = MainApp.getAppContext();
 
-            Account temp = new Account(username + "@" + baseUrl, MainApp.getAccountType());
+            Account temp = new Account(username + "@" + baseUrl, MainApp.getAccountType(context));
 
             if (!com.owncloud.android.authentication.AccountUtils.exists(temp, context)) {
                 AccountManager accountManager = AccountManager.get(context);

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -382,8 +382,8 @@ public static void setStoragePath(String path) {
     // Methods to obtain Strings referring app_name 
     //   From AccountAuthenticator 
     //   public static final String ACCOUNT_TYPE = "owncloud";    
-    public static String getAccountType() {
-        return getAppContext().getResources().getString(R.string.account_type);
+    public static String getAccountType(Context context) {
+        return context.getResources().getString(R.string.account_type);
     }
 
     // Non gradle build systems do not provide BuildConfig.VERSION_CODE

File: src/main/java/com/owncloud/android/authentication/AccountUtils.java
Patch:
@@ -97,7 +97,7 @@ private AccountUtils() {
 
     public static Account[] getAccounts(Context context) {
         AccountManager accountManager = AccountManager.get(context);
-        return accountManager.getAccountsByType(MainApp.getAccountType());
+        return accountManager.getAccountsByType(MainApp.getAccountType(context));
     }
 
     
@@ -144,8 +144,7 @@ public static String getAccountUsername(String accountName) {
      * @return owncloud account named accountName
      */
     public static Account getOwnCloudAccountByName(Context context, String accountName) {
-        Account[] ocAccounts = AccountManager.get(context).getAccountsByType(
-                MainApp.getAccountType());
+        Account[] ocAccounts = AccountManager.get(context).getAccountsByType(MainApp.getAccountType(context));
         for (Account account : ocAccounts) {
             if(account.name.equals(accountName)) {
                 return account;

File: src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java
Patch:
@@ -93,7 +93,7 @@ protected Result onRunJob(@NonNull Params params) {
                         accountName = cursorOnKeptInSync.getString(cursorOnKeptInSync
                                 .getColumnIndex(ProviderMeta.ProviderTableMeta.FILE_ACCOUNT_OWNER));
 
-                        account = new Account(accountName, MainApp.getAccountType());
+                        account = new Account(accountName, MainApp.getAccountType(getContext()));
                         if (!AccountUtils.exists(account, context) || localPath == null || localPath.length() <= 0) {
                             continue;
                         }

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -908,8 +908,7 @@ private void updateAccountName(SQLiteDatabase db) {
             // get accounts from AccountManager ;  we can't be sure if accounts in it are updated or not although
             // we know the update was previously done in {link @FileActivity#onCreate} because the changes through
             // AccountManager are not synchronous
-            Account[] accounts = AccountManager.get(getContext()).getAccountsByType(
-                    MainApp.getAccountType());
+            Account[] accounts = AccountManager.get(getContext()).getAccountsByType(MainApp.getAccountType(mContext));
             String serverUrl;
             String username;
             String oldAccountName;

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -212,7 +212,7 @@ public void onDestroy() {
         // Saving cookies
         try {
             OwnCloudClientManagerFactory.getDefaultSingleton().
-                    saveAllClients(this, MainApp.getAccountType());
+                    saveAllClients(this, MainApp.getAccountType(getApplicationContext()));
 
             // TODO - get rid of these exceptions
         } catch (AccountNotFoundException | IOException | OperationCanceledException | AuthenticatorException e) {

File: src/main/java/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -136,7 +136,7 @@ protected void swapToDefaultAccount() {
      */
     protected void createAccount(boolean mandatoryCreation) {
         AccountManager am = AccountManager.get(getApplicationContext());
-        am.addAccount(MainApp.getAccountType(),
+        am.addAccount(MainApp.getAccountType(this),
                 null,
                 null,
                 null,

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -616,7 +616,7 @@ public void setDrawerIndicatorEnabled(boolean enable) {
      * updates the account list in the drawer.
      */
     public void updateAccountList() {
-        Account[] accounts = AccountManager.get(this).getAccountsByType(MainApp.getAccountType());
+        Account[] accounts = AccountManager.get(this).getAccountsByType(MainApp.getAccountType(this));
 
         ArrayList<Account> persistingAccounts = new ArrayList<>();
 
@@ -1281,7 +1281,7 @@ protected void onAccountCreationSuccessful(AccountManagerFuture<Bundle> future)
      */
     private void populateDrawerOwnCloudAccounts() {
         mAvatars = new Account[3];
-        Account[] accountsAll = AccountManager.get(this).getAccountsByType(MainApp.getAccountType());
+        Account[] accountsAll = AccountManager.get(this).getAccountsByType(MainApp.getAccountType(this));
 
         ArrayList<Account> persistingAccounts = new ArrayList<>();
 

File: src/main/java/com/owncloud/android/ui/activity/StorageMigration.java
Patch:
@@ -183,7 +183,7 @@ public FileMigrationTaskBase(Context context,
             mListener = listener;
 
             mAuthority = mContext.getString(R.string.authority);
-            mOcAccounts = AccountManager.get(mContext).getAccountsByType(MainApp.getAccountType());
+            mOcAccounts = AccountManager.get(mContext).getAccountsByType(MainApp.getAccountType(context));
         }
 
         @Override

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -21,6 +21,7 @@
 package com.owncloud.android.ui.activity;
 
 import android.accounts.Account;
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Intent;
 import android.content.res.ColorStateList;
@@ -393,6 +394,7 @@ public CustomArrayAdapter(UploadFilesActivity ctx, int view) {
             super(ctx, view);
         }
 
+        @SuppressLint("RestrictedApi")
         public @NonNull View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {
             View v = super.getView(position, convertView, parent);
 

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -103,7 +103,7 @@ public static Drawable getFileTypeIcon(String mimetype, String filename, Account
             Drawable icon = ContextCompat.getDrawable(context, iconId);
 
             if (R.drawable.file_zip == iconId) {
-                ThemeUtils.tintDrawable(icon, ThemeUtils.elementColor(account, context));
+                ThemeUtils.tintDrawable(icon, ThemeUtils.primaryColor(account, true, context));
             }
 
             return icon;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1287,6 +1287,8 @@ private void setEmptyView(SearchEvent event) {
 
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onMessageEvent(ChangeMenuEvent changeMenuEvent) {
+        searchFragment = false;
+        
         menuItemAddRemoveValue = MenuItemAddRemove.ADD_GRID_AND_SORT_WITH_SEARCH;
         if (getActivity() != null) {
             getActivity().invalidateOptionsMenu();
@@ -1343,6 +1345,7 @@ public void onMessageEvent(FavoriteEvent event) {
 
     @Subscribe(threadMode = ThreadMode.BACKGROUND)
     public void onMessageEvent(final SearchEvent event) {
+        prepareCurrentSearch(event);
         searchFragment = true;
         setEmptyListLoadingMessage();
         mAdapter.setData(new ArrayList<>(), SearchType.NO_SEARCH, mContainerActivity.getStorageManager(), mFile);

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -846,7 +846,7 @@ public void onClick(View v) {
     }
 
 
-    // BEWARE: next methods will fail with NullPointerException if called before onCreateView() finishes
+    // BEWARE: following methods will fail with NullPointerException if called before onCreateView() finishes
 
     private SwitchCompat getShareViaLinkSwitch() {
         return (SwitchCompat) getView().findViewById(R.id.shareViaLinkSectionSwitch);

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -85,10 +85,10 @@ public class FileDetailSharingFragment extends Fragment implements UserListAdapt
     @BindView(R.id.searchView)
     SearchView searchView;
 
-    @BindView(R.id.fdshareUsersList)
+    @BindView(R.id.shareUsersList)
     RecyclerView usersList;
 
-    @BindView(R.id.fdShareNoUsers)
+    @BindView(R.id.shareNoUsers)
     TextView noList;
 
     @BindView(R.id.share_by_link)

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -846,7 +846,7 @@ public void onClick(View v) {
     }
 
 
-    // BEWARE: next methods will failed with NullPointerException if called before onCreateView() finishes
+    // BEWARE: next methods will fail with NullPointerException if called before onCreateView() finishes
 
     private SwitchCompat getShareViaLinkSwitch() {
         return (SwitchCompat) getView().findViewById(R.id.shareViaLinkSectionSwitch);

File: src/main/java/com/owncloud/android/ui/fragment/util/FileDetailSharingFragmentHelper.java
Patch:
@@ -115,7 +115,7 @@ public static void setupSearchView(SearchManager searchManager, SearchView searc
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String query) {
-                // return true to prevent the query is processed to be queried;
+                // return true to prevent the query from being processed;
                 return true;
             }
 

File: src/main/java/com/owncloud/android/ui/dialog/ExpirationDatePickerDialogFragment.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.app.DatePickerDialog;
 import android.app.Dialog;
+import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.v4.app.DialogFragment;
@@ -34,6 +35,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.ui.activity.FileActivity;
+import com.owncloud.android.utils.ThemeUtils;
 
 import java.util.Calendar;
 
@@ -121,6 +123,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         // Create a new instance of DatePickerDialog
         DatePickerDialog dialog = new DatePickerDialog(
                 getActivity(),
+                R.style.FallbackDatePickerDialogTheme,
                 this,
                 chosenDate.get(Calendar.YEAR),
                 chosenDate.get(Calendar.MONTH),

File: src/main/java/com/owncloud/android/ui/fragment/util/FileDetailSharingFragmentHelper.java
Patch:
@@ -23,7 +23,6 @@
 import android.app.SearchManager;
 import android.content.ComponentName;
 import android.content.res.Resources;
-import android.support.annotation.StringRes;
 import android.support.v7.widget.SearchView;
 import android.view.MenuItem;
 import android.view.inputmethod.EditorInfo;

File: src/main/java/com/owncloud/android/ui/decoration/SimpleListItemDividerDecoration.java
Patch:
@@ -45,9 +45,10 @@ public class SimpleListItemDividerDecoration extends DividerItemDecoration {
      */
     public SimpleListItemDividerDecoration(Context context) {
         super(context, DividerItemDecoration.VERTICAL);
-        final TypedArray a = context.obtainStyledAttributes(ATTRS);
-        divider = a.getDrawable(0);
+        final TypedArray styledAttributes = context.obtainStyledAttributes(ATTRS);
+        divider = styledAttributes.getDrawable(0);
         leftPadding = Math.round(72 * (context.getResources().getDisplayMetrics().xdpi / DisplayMetrics.DENSITY_DEFAULT));
+        styledAttributes.recycle();
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -362,6 +362,8 @@ private void prepareOptionsMenu(Menu menu) {
         if (!getResources().getBoolean(R.bool.large_land_layout)){
             FileMenuFilter.hideMenuItems(menu.findItem(R.id.action_sync_account));
         }
+
+
     }
 
     private boolean optionsItemSelected(MenuItem item) {

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -41,7 +41,6 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
-import android.widget.ListView;
 import android.widget.PopupMenu;
 import android.widget.TextView;
 

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -58,7 +58,6 @@
 import com.owncloud.android.ui.adapter.ShareUserListAdapter;
 import com.owncloud.android.ui.dialog.ExpirationDatePickerDialogFragment;
 import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
-import com.owncloud.android.ui.fragment.util.FileDetailSharingFragmentHelper;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 import com.owncloud.android.utils.ThemeUtils;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1912,7 +1912,7 @@ private void onUpdateShareInformation(RemoteOperationResult result, @StringRes i
 
         if (fileDetailFragment!=null && fileDetailFragment instanceof FileDetailFragment) {
             ((FileDetailFragment) fileDetailFragment).getFileDetailSharingFragment()
-                    .onUpdateShareInformations(result, getFile());
+                    .onUpdateShareInformation(result, getFile());
         }
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/ShareUserListAdapter.java
Patch:
@@ -107,7 +107,6 @@ public View getView(final int position, View convertView, @NonNull ViewGroup par
                 }
             } else {
                 try {
-
                     icon.setImageDrawable(TextDrawable.createNamedAvatar(name, mAvatarRadiusDimension));
                 } catch (UnsupportedEncodingException | NoSuchAlgorithmException e) {
                     icon.setImageResource(R.drawable.ic_user);
@@ -120,7 +119,6 @@ public View getView(final int position, View convertView, @NonNull ViewGroup par
 
             /// bind listener to unshare
             unshareButton.setOnClickListener(v -> mListener.unshareButtonPressed(mShares.get(position)));
-
         }
         return view;
     }

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -734,7 +734,6 @@ public void syncFile(OCFile file) {
             intent.putExtra(OperationsService.EXTRA_ACCOUNT, mFileActivity.getAccount());
             intent.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
             mFileActivity.startService(intent);
-
         }
     }
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -4,7 +4,9 @@
  * @author masensio
  * @author David A. Velasco
  * @author Juan Carlos González Cabrero
+ * @author Andy Scherzinger
  * Copyright (C) 2015 ownCloud Inc.
+ * Copyright (C) 2018 Andy Scherzinger
  * 
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2,

File: src/main/java/com/owncloud/android/ui/fragment/util/FileDetailSharingFragmentHelper.java
Patch:
@@ -22,7 +22,6 @@
 
 import android.app.SearchManager;
 import android.content.ComponentName;
-import android.content.Context;
 import android.content.res.Resources;
 import android.support.v7.widget.SearchView;
 import android.view.MenuItem;
@@ -33,7 +32,6 @@
 import android.widget.ListView;
 
 import com.owncloud.android.R;
-import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.lib.resources.status.OCCapability;
 

File: src/main/java/com/owncloud/android/ui/dialog/ExpirationDatePickerDialogFragment.java
Patch:
@@ -105,7 +105,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 getText(R.string.share_via_link_unset_password),
                 (dialog1, which) -> {
                     ((FileActivity) getActivity()).getFileOperationsHelper()
-                            .setExpirationDateToShareViaLink(file, 0);
+                            .setExpirationDateToShareViaLink(file, -1);
                 });
 
         // Prevent days in the past may be chosen

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailSharingFragment.java
Patch:
@@ -361,7 +361,7 @@ private boolean optionsItemSelected(MenuItem item) {
                     ((FileActivity) getActivity()).getFileOperationsHelper().
                             setHideFileListingPermissionsToShare(
                                     publicShare,
-                                    shareByLinkAllowEditing.isChecked()
+                                    item.isChecked()
                             );
                 } else {
                     // not supported in ownCloud

File: src/main/java/com/owncloud/android/ui/activity/ToolbarActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void setupToolbar(boolean useBackgroundImage) {
         }
     }
 
-    protected void setupToolbar() {
+    public void setupToolbar() {
         setupToolbar(false);
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -346,7 +346,7 @@ public void onStop() {
         if(activity != null) {
             activity.setPreviewImageVisibility(View.GONE);
             activity.setProgressBarVisibility(View.VISIBLE);
-            ThemeUtils.setStatusBarColor(activity, ThemeUtils.primaryColor(getContext()));
+            activity.setupToolbar();
         }
 
         super.onStop();

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -331,9 +331,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         searchEvent = Parcels.unwrap(getArguments().getParcelable(OCFileListFragment.SEARCH_EVENT));
         prepareCurrentSearch(searchEvent);
-        if (searchEvent != null && savedInstanceState == null) {
-            onMessageEvent(searchEvent);
-        }
 
         if (isGridViewPreferred(getCurrentFile())) {
             switchToGridView();

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -331,9 +331,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         searchEvent = Parcels.unwrap(getArguments().getParcelable(OCFileListFragment.SEARCH_EVENT));
         prepareCurrentSearch(searchEvent);
-        if (searchEvent != null && savedInstanceState == null) {
-            onMessageEvent(searchEvent);
-        }
 
         if (isGridViewPreferred(getCurrentFile())) {
             switchToGridView();

File: src/main/java/com/ortiz/touch/TouchImageView.java
Patch:
@@ -63,7 +63,7 @@ public class TouchImageView extends AppCompatImageView {
     //
 	private Matrix matrix, prevMatrix;
 
-    private static enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM };
+    private enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM };
     private State state;
 
     private float minScale;

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -38,6 +38,8 @@
 import java.util.Locale;
 import java.util.Map;
 
+import javax.annotation.Nullable;
+
 /**
  * <p>Helper class for detecting the right icon for a file or folder,
  * based on its mime type and file extension.</p>
@@ -94,6 +96,7 @@ public static Drawable getFileTypeIcon(String mimetype, String filename, Context
      * @param account account which color should be used
      * @return Drawable of an image resource.
      */
+    @Nullable
     public static Drawable getFileTypeIcon(String mimetype, String filename, Account account, Context context) {
         if (context != null) {
             int iconId = MimeTypeUtil.getFileTypeIconId(mimetype, filename);

File: src/main/java/com/owncloud/android/ui/activities/data/activities/ActivitiesServiceApiImpl.java
Patch:
@@ -25,6 +25,7 @@
 import android.os.AsyncTask;
 
 import com.owncloud.android.MainApp;
+import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
@@ -55,7 +56,6 @@ private static class GetActivityListTask extends AsyncTask<Void, Void, Boolean>
         private final ActivitiesServiceCallback<List<Object>> callback;
         private List<Object> activities;
         private String pageUrl;
-        private String noResultsMessage = "no results";
         private String errorMessage;
         private OwnCloudClient ownCloudClient;
 
@@ -95,7 +95,7 @@ protected Boolean doInBackground(Void... voids) {
                     // show error
                     errorMessage = result.getLogMessage();
                     if (result.getHttpCode() == 304) {
-                        errorMessage = noResultsMessage;
+                        errorMessage = context.getString(R.string.file_list_empty_headline_server_search);
                     }
                     return false;
 

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -701,7 +701,8 @@ protected void onPostExecute(Bitmap bitmap) {
                             if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);
                             } else {
-                                imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(null, mFile.getName(), null));
+                                imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(null, mFile.getName(),
+                                        mContext));
                             }
                         }
                     }

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -701,7 +701,8 @@ protected void onPostExecute(Bitmap bitmap) {
                             if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);
                             } else {
-                                imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(null, mFile.getName(), null));
+                                imageView.setImageDrawable(MimeTypeUtil.getFileTypeIcon(null, mFile.getName(),
+                                        mContext));
                             }
                         }
                     }

File: src/main/java/com/owncloud/android/utils/FileSortOrder.java
Patch:
@@ -42,7 +42,7 @@ public class FileSortOrder {
 
     public static final Map<String, FileSortOrder> sortOrders;
     static {
-        sortOrders = new HashMap<String, FileSortOrder>();
+        sortOrders = new HashMap<>();
         sortOrders.put(sort_a_to_z.mName, sort_a_to_z);
         sortOrders.put(sort_z_to_a.mName, sort_z_to_a);
         sortOrders.put(sort_old_to_new.mName, sort_old_to_new);

File: src/main/java/com/owncloud/android/utils/FileSortOrder.java
Patch:
@@ -42,7 +42,7 @@ public class FileSortOrder {
 
     public static final Map<String, FileSortOrder> sortOrders;
     static {
-        sortOrders = new HashMap<String, FileSortOrder>();
+        sortOrders = new HashMap<>();
         sortOrders.put(sort_a_to_z.mName, sort_a_to_z);
         sortOrders.put(sort_z_to_a.mName, sort_z_to_a);
         sortOrders.put(sort_old_to_new.mName, sort_old_to_new);

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -489,7 +489,7 @@ private static String getUserAgent(@StringRes int agent) {
     private static void updateToAutoUpload() {
             Context context = getAppContext();
             if (PreferenceManager.instantPictureUploadEnabled(context) ||
-                            PreferenceManager.instantPictureUploadEnabled(context)) {
+                    PreferenceManager.instantVideoUploadEnabled(context)){
 
                 // remove legacy shared preferences
                 SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit();

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -488,7 +488,8 @@ private static String getUserAgent(@StringRes int agent) {
 
     private static void updateToAutoUpload() {
             Context context = getAppContext();
-            if (PreferenceManager.instantPictureUploadEnabled(context)) {
+            if (PreferenceManager.instantPictureUploadEnabled(context) ||
+                    PreferenceManager.instantVideoUploadEnabled(context)){
 
                 // remove legacy shared preferences
                 SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit();

File: src/main/java/com/owncloud/android/authentication/AuthenticatorUrlUtils.java
Patch:
@@ -78,7 +78,7 @@ public static String normalizeUrl(String url, boolean sslWhenUnprefixed) {
             normalizedUrl = normalizedUrl.trim();
 
             if (!normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL) &&
-                    !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL)) {
+                    !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTPS_PROTOCOL)) {
                 if (sslWhenUnprefixed) {
                     normalizedUrl = HTTPS_PROTOCOL + normalizedUrl;
                 } else {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorUrlUtils.java
Patch:
@@ -78,7 +78,7 @@ public static String normalizeUrl(String url, boolean sslWhenUnprefixed) {
             normalizedUrl = normalizedUrl.trim();
 
             if (!normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL) &&
-                    !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL)) {
+                    !normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTPS_PROTOCOL)) {
                 if (sslWhenUnprefixed) {
                     normalizedUrl = HTTPS_PROTOCOL + normalizedUrl;
                 } else {

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -488,8 +488,7 @@ private static String getUserAgent(@StringRes int agent) {
 
     private static void updateToAutoUpload() {
             Context context = getAppContext();
-            if (PreferenceManager.instantPictureUploadEnabled(context) ||
-                            PreferenceManager.instantPictureUploadEnabled(context)) {
+            if (PreferenceManager.instantPictureUploadEnabled(context)) {
 
                 // remove legacy shared preferences
                 SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit();

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -250,6 +250,7 @@ private void setupViewPager(View view) {
         tabLayout.addTab(tabLayout.newTab().setText(R.string.share_dialog_title));
 
         tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
+        tabLayout.setSelectedTabIndicatorColor(ThemeUtils.primaryAccentColor(getContext()));
 
         final ViewPager viewPager = view.findViewById(R.id.pager);
         final FileDetailTabAdapter adapter = new FileDetailTabAdapter

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailActivitiesFragment.java
Patch:
@@ -148,6 +148,8 @@ public void onDestroy() {
 
     private void setupView() {
         FileDataStorageManager storageManager = new FileDataStorageManager(account, getActivity().getContentResolver());
+        emptyContentIcon.setImageDrawable(getResources().getDrawable(R.drawable.ic_activity_light_grey));
+        
         adapter = new ActivityListAdapter(getContext(), this, storageManager);
         recyclerView.setAdapter(adapter);
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -589,7 +589,7 @@ private void setFiletype(OCFile file) {
                                 );
                         iv.setVisibility(View.GONE);
                         v.setVisibility(View.GONE);
-                        previewImage.setImageBitmap(resizedImage);
+                        previewImage.setImageDrawable(asyncDrawable);
                         activatePreviewImage();
                         previewLoaded = true;
                         task.execute(getFile());

File: src/main/java/com/ortiz/touch/TouchImageView.java
Patch:
@@ -572,6 +572,7 @@ private void fitImageToView() {
         	
         case CENTER_INSIDE:
         	scaleX = scaleY = Math.min(1, Math.min(scaleX, scaleY));
+        	break;
         	
         case FIT_CENTER:
         	scaleX = scaleY = Math.min(scaleX, scaleY);

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -51,7 +51,6 @@
 import android.support.v7.app.AppCompatDelegate;
 import android.view.Menu;
 import android.view.MenuInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.webkit.URLUtil;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -513,8 +513,7 @@ private static void updateToAutoUpload() {
                             .setMessage(R.string.synced_folders_new_info)
                             .setPositiveButton(R.string.drawer_open, (dialog, which) -> {
                                 // show Auto Upload
-                                Intent folderSyncIntent = new Intent(context,
-                                        SyncedFoldersActivity.class);
+                                Intent folderSyncIntent = new Intent(context, SyncedFoldersActivity.class);
                                 dialog.dismiss();
                                 context.startActivity(folderSyncIntent);
                             })

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -272,7 +272,7 @@ private void populateUserInfoUi(UserInfo userInfo) {
         }
         
         if (userInfo.getPhone() == null && userInfo.getEmail() == null && userInfo.getAddress() == null
-                && userInfo.getTwitter() == null & userInfo.getWebsite() == null) {
+                && userInfo.getTwitter() == null && userInfo.getWebsite() == null) {
 
             setErrorMessageForMultiList(getString(R.string.userinfo_no_info_headline),
                     getString(R.string.userinfo_no_info_text), R.drawable.ic_user);

File: src/main/java/com/ortiz/touch/TouchImageView.java
Patch:
@@ -572,6 +572,7 @@ private void fitImageToView() {
         	
         case CENTER_INSIDE:
         	scaleX = scaleY = Math.min(1, Math.min(scaleX, scaleY));
+        	break;
         	
         case FIT_CENTER:
         	scaleX = scaleY = Math.min(scaleX, scaleY);

File: src/main/java/com/owncloud/android/ui/activities/ActivitiesActivity.java
Patch:
@@ -149,6 +149,7 @@ protected void onCreateSwipeToRefresh(SwipeRefreshLayout refreshLayout) {
         refreshLayout.setColorSchemeColors(accentColor, primaryColor, darkColor);
     }
 
+    @Override
     public void onDestroy() {
         super.onDestroy();
         unbinder.unbind();
@@ -251,7 +252,7 @@ public void showActivities(List<Object> activities, OwnCloudClient client, Strin
         adapter.setActivityItems(activities, client, clear);
         this.nextPageUrl = nextPageUrl;
         // Hide the recyclerView if list is empty
-        if (activities.size() == 0) {
+        if (activities.isEmpty()) {
             recyclerView.setVisibility(View.INVISIBLE);
 
             emptyContentMessage.setText(noResultsMessage);

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -110,7 +110,7 @@ private void setUnlockTimestamp() {
     }
 
     private boolean passCodeShouldBeRequested() {
-        return (hasAuthenticationTimeoutExpired() && passCodeIsEnabled());
+        return (passCodeIsEnabled() && hasAuthenticationTimeoutExpired());
     }
 
     private boolean passCodeIsEnabled() {
@@ -119,7 +119,7 @@ private boolean passCodeIsEnabled() {
     }
 
     private boolean fingerprintShouldBeRequested() {
-        return (hasAuthenticationTimeoutExpired() && fingerprintIsEnabled());
+        return (fingerprintIsEnabled() && hasAuthenticationTimeoutExpired());
     }
 
     private boolean hasAuthenticationTimeoutExpired() {

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -52,7 +52,7 @@ public class PassCodeManager {
 
     private static PassCodeManager passCodeManagerInstance = null;
 
-    private Long timestamp = 0l;
+    private Long timestamp = 0L;
     private int visibleActivitiesCounter = 0;
 
     public static PassCodeManager getPassCodeManager() {

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -41,7 +41,7 @@ public class PassCodeManager {
     private static final Set<Class> sExemptOfPasscodeActivites;
 
     static {
-        sExemptOfPasscodeActivites = new HashSet<Class>();
+        sExemptOfPasscodeActivites = new HashSet<>();
         sExemptOfPasscodeActivites.add(PassCodeActivity.class);
         sExemptOfPasscodeActivites.add(FingerprintActivity.class);
         // other activities may be exempted, if needed

File: src/main/java/com/owncloud/android/ui/activities/data/files/FilesServiceApiImpl.java
Patch:
@@ -130,11 +130,13 @@ protected void onPostExecute(Boolean success) {
             if (success) {
                 if (remoteOcFile != null) {
                     callback.onLoaded(remoteOcFile);
+                    return;
                 } else {
                     errorMessage = "File not found";
-                    callback.onError(errorMessage);
                 }
             }
+
+            callback.onError(errorMessage);
         }
     }
 }

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -100,7 +100,7 @@ public class ManageAccountsActivity extends FileActivity
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(this, R.drawable.ic_account_circle_white_18dp));
+        mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(this, R.drawable.account_circle_white));
         int tint = ThemeUtils.primaryColor(this);
         DrawableCompat.setTint(mTintedCheck, tint);
 

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -290,7 +290,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             AlertDialog.Builder builder = new Builder(parent);
 
             mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(parent,
-                    R.drawable.ic_account_circle_white_18dp));
+                    R.drawable.account_circle_white));
             int tint = ThemeUtils.primaryColor(getContext());
             DrawableCompat.setTint(mTintedCheck, tint);
 

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -462,7 +462,7 @@ public static void setAvatar(Account account, AvatarGenerationListener listener,
                     avatar = TextDrawable.createAvatar(account.name, avatarRadius);
                 } catch (Exception e) {
                     Log_OC.e(TAG, "Error calculating RGB value for active account icon.", e);
-                    avatar = resources.getDrawable(R.drawable.ic_account_circle);
+                    avatar = resources.getDrawable(R.drawable.account_circle_white);
                 }
             }
 

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -100,7 +100,7 @@ public class ManageAccountsActivity extends FileActivity
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(this, R.drawable.ic_account_circle_white_18dp));
+        mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(this, R.drawable.account_circle_white));
         int tint = ThemeUtils.primaryColor(this);
         DrawableCompat.setTint(mTintedCheck, tint);
 

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -290,7 +290,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             AlertDialog.Builder builder = new Builder(parent);
 
             mTintedCheck = DrawableCompat.wrap(ContextCompat.getDrawable(parent,
-                    R.drawable.ic_account_circle_white_18dp));
+                    R.drawable.account_circle_white));
             int tint = ThemeUtils.primaryColor(getContext());
             DrawableCompat.setTint(mTintedCheck, tint);
 

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -462,7 +462,7 @@ public static void setAvatar(Account account, AvatarGenerationListener listener,
                     avatar = TextDrawable.createAvatar(account.name, avatarRadius);
                 } catch (Exception e) {
                     Log_OC.e(TAG, "Error calculating RGB value for active account icon.", e);
-                    avatar = resources.getDrawable(R.drawable.ic_account_circle);
+                    avatar = resources.getDrawable(R.drawable.account_circle_white);
                 }
             }
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1562,8 +1562,8 @@ private void updateServerStatusIconAndText(RemoteOperationResult result) {
                 mServerStatusText = getResources().getString(R.string.auth_unknown_error_http_title);
                 break;
             case UNKNOWN_ERROR:
-                if (result.getException() != null && result.getException().getMessage() != null
-                        && !"".equals(result.getException().getMessage())) {
+                if (result.getException() != null &&
+                        !TextUtils.isEmpty(result.getException().getMessage())) {
                     mServerStatusText = getResources().getString(
                             R.string.auth_unknown_error_exception_title,
                             result.getException().getMessage()

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1562,7 +1562,8 @@ private void updateServerStatusIconAndText(RemoteOperationResult result) {
                 mServerStatusText = getResources().getString(R.string.auth_unknown_error_http_title);
                 break;
             case UNKNOWN_ERROR:
-                if (result.getException() != null) {
+                if (result.getException() != null && result.getException().getMessage() != null
+                        && !"".equals(result.getException().getMessage())) {
                     mServerStatusText = getResources().getString(
                             R.string.auth_unknown_error_exception_title,
                             result.getException().getMessage()

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1562,7 +1562,7 @@ private void updateServerStatusIconAndText(RemoteOperationResult result) {
                 mServerStatusText = getResources().getString(R.string.auth_unknown_error_http_title);
                 break;
             case UNKNOWN_ERROR:
-                if(result.getException() != null) {
+                if (result.getException() != null) {
                     mServerStatusText = getResources().getString(
                             R.string.auth_unknown_error_exception_title,
                             result.getException().getMessage()

File: src/main/java/com/owncloud/android/ui/activities/ActivitiesContract.java
Patch:
@@ -20,7 +20,7 @@ interface View {
     }
 
     interface ActionListener {
-        void loadActivites(String pageUrl);
+        void loadActivities(String pageUrl);
         void openActivity(String fileUrl, BaseActivity baseActivity, boolean isSharingSupported);
     }
 }

File: src/main/java/com/owncloud/android/ui/activities/ActivitiesPresenter.java
Patch:
@@ -27,7 +27,7 @@ public ActivitiesPresenter(@NonNull ActivitiesRepository activitiesRepository,
     }
 
     @Override
-    public void loadActivites(String pageUrl) {
+    public void loadActivities(String pageUrl) {
         mActivitiesView.setProgressIndicatorState(true);
         mActivitiesRepository.getActivities(pageUrl, new ActivitiesRepository.LoadActivitiesCallback() {
             @Override

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -254,7 +254,7 @@ private void setBitmap(OCFile file, ImageView fileIcon) {
                         .error(placeholder).into(fileIcon); // using custom fetcher
 
             } else {
-                fileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimetype(), file.getFileName(), null));
+                fileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimetype(), file.getFileName(), context));
             }
         } else {
             // Folder

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -254,7 +254,7 @@ private void setBitmap(OCFile file, ImageView fileIcon) {
                         .error(placeholder).into(fileIcon); // using custom fetcher
 
             } else {
-                fileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimetype(), file.getFileName(), null));
+                fileIcon.setImageDrawable(MimeTypeUtil.getFileTypeIcon(file.getMimetype(), file.getFileName(), context));
             }
         } else {
             // Folder

File: src/main/java/com/owncloud/android/ui/activities/data/activities/ActivitiesServiceApiImpl.java
Patch:
@@ -37,7 +37,7 @@ private static class GetActivityListTask extends AsyncTask<Void, Void, Boolean>
         private final ActivitiesServiceCallback<List<Object>> mCallback;
         private List<Object> mActivities;
         private String mPageUrl;
-        String noResultsMessage = "no results";
+        private String noResultsMessage = "no results";
         private String errorMessage;
         private OwnCloudClient ownCloudClient;
 
@@ -104,8 +104,9 @@ protected void onPostExecute(Boolean success) {
             super.onPostExecute(success);
             if (success) {
                 mCallback.onLoaded(mActivities, ownCloudClient, mPageUrl == null);
+            } else {
+                mCallback.onError(errorMessage);
             }
-            mCallback.onError(errorMessage);
         }
     }
 }

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -342,7 +342,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         public void onStart() {
             super.onStart();
 
-            int color = ThemeUtils.primaryAccentColor(getContext());
+            int color = ThemeUtils.primaryAccentColor(getActivity());
 
             AlertDialog alertDialog = (AlertDialog) getDialog();
 

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -165,7 +165,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         List<String> behaviours = new ArrayList<>();
         behaviours.add(getString(R.string.uploader_upload_files_behaviour_move_to_nextcloud_folder,
-                ThemeUtils.getDefaultDisplayNameForRootFolder()));
+                ThemeUtils.getDefaultDisplayNameForRootFolder(this)));
         behaviours.add(getString(R.string.uploader_upload_files_behaviour_only_upload));
         behaviours.add(getString(R.string.uploader_upload_files_behaviour_upload_and_delete_from_source));
 

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -370,7 +370,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         onCreateSwipeToRefresh(mRefreshListLayout);
 
         mFabMain = v.findViewById(R.id.fab_main);
-        ThemeUtils.tintFloatingActionButton(mFabMain, R.drawable.ic_plus);
+        ThemeUtils.tintFloatingActionButton(mFabMain, R.drawable.ic_plus, getContext());
 
         boolean searchSupported = AccountUtils.hasSearchSupport(AccountUtils.
                 getCurrentOwnCloudAccount(MainApp.getAppContext()));

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListBottomSheetDialog.java
Patch:
@@ -73,13 +73,13 @@ protected void onCreate(Bundle savedInstanceState) {
 
         unbinder = ButterKnife.bind(this, view);
 
-        int primaryColor = ThemeUtils.primaryColor();
+        int primaryColor = ThemeUtils.primaryColor(getContext());
         ThemeUtils.tintDrawable(iconUploadFiles.getDrawable(), primaryColor);
         ThemeUtils.tintDrawable(iconUploadFromApp.getDrawable(), primaryColor);
         ThemeUtils.tintDrawable(iconMakeDir.getDrawable(), primaryColor);
 
         headline.setText(getContext().getResources().getString(R.string.add_to_cloud,
-                ThemeUtils.getDefaultDisplayNameForRootFolder()));
+                ThemeUtils.getDefaultDisplayNameForRootFolder(getContext())));
 
         setOnShowListener(d ->
                 BottomSheetBehavior.from((View) view.getParent()).setPeekHeight(view.getMeasuredHeight())

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -128,11 +128,11 @@ public View onCreateView(final LayoutInflater inflater, ViewGroup container, Bun
         ActionBar actionBar = contactsPreferenceActivity != null ? contactsPreferenceActivity.getSupportActionBar() : null;
 
         if (actionBar != null) {
-            ThemeUtils.setColoredTitle(actionBar, getString(R.string.actionbar_contacts));
+            ThemeUtils.setColoredTitle(actionBar, getString(R.string.actionbar_contacts), getContext());
             actionBar.setDisplayHomeAsUpEnabled(true);
 
             Drawable backArrow = getResources().getDrawable(R.drawable.ic_arrow_back);
-            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor()));
+            actionBar.setHomeAsUpIndicator(ThemeUtils.tintDrawable(backArrow, ThemeUtils.fontColor(getContext())));
         }
 
         arbitraryDataProvider = new ArbitraryDataProvider(getContext().getContentResolver());
@@ -175,7 +175,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         }
 
         int accentColor = ThemeUtils.primaryAccentColor(getContext());
-        int fontColor = ThemeUtils.fontColor();
+        int fontColor = ThemeUtils.fontColor(getContext());
 
         backupNow.getBackground().setColorFilter(accentColor, PorterDuff.Mode.SRC_ATOP);
         backupNow.setTextColor(fontColor);

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -368,7 +368,8 @@ public static String colorToHexString(int color) {
         return String.format("#%06X", 0xFFFFFF & color);
     }
 
-    public static void tintFloatingActionButton(FloatingActionButton button, @DrawableRes int drawable) {
+    public static void tintFloatingActionButton(FloatingActionButton button, @DrawableRes int
+            drawable, Context context) {
         button.setBackgroundTintList(ColorStateList.valueOf(ThemeUtils.primaryColor(context)));
         button.setRippleColor(ThemeUtils.primaryDarkColor(context));
         button.setImageDrawable(ThemeUtils.tintDrawable(drawable, ThemeUtils.fontColor(context)));

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -201,9 +201,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 byte[] authenticationTag = EncryptionUtils.decodeStringToBase64Bytes(metadata.getFiles()
                         .get(mFile.getEncryptedFileName()).getAuthenticationTag());
 
-                try (FileOutputStream fileOutputStream = new FileOutputStream(tmpFile)){
+                try {
                     byte[] decryptedBytes = EncryptionUtils.decryptFile(tmpFile, key, iv, authenticationTag);
 
+                    FileOutputStream fileOutputStream = new FileOutputStream(tmpFile);
                     fileOutputStream.write(decryptedBytes);
                 } catch (Exception e) {
                     return new RemoteOperationResult(e);

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -201,9 +201,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 byte[] authenticationTag = EncryptionUtils.decodeStringToBase64Bytes(metadata.getFiles()
                         .get(mFile.getEncryptedFileName()).getAuthenticationTag());
 
-                try (FileOutputStream fileOutputStream = new FileOutputStream(tmpFile)){
+                try {
                     byte[] decryptedBytes = EncryptionUtils.decryptFile(tmpFile, key, iv, authenticationTag);
 
+                    FileOutputStream fileOutputStream = new FileOutputStream(tmpFile);
                     fileOutputStream.write(decryptedBytes);
                 } catch (Exception e) {
                     return new RemoteOperationResult(e);

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -373,7 +373,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         OCFile parent = getStorageManager().getFileByPath(remoteParentPath);
 
         // in case of a fresh upload with subfolder, where parent does not exist yet
-        if (parent == null && mFolderUnlockToken.isEmpty()) {
+        if (parent == null && (mFolderUnlockToken == null || mFolderUnlockToken.isEmpty())) {
             // try to create folder
             RemoteOperationResult result = grantFolderExistence(remoteParentPath, client);
 
@@ -396,7 +396,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
         // try to unlock folder with stored token, e.g. when upload needs to be resumed or app crashed
         // the parent folder should exist as it is a resume of a broken upload
-        if (!mFolderUnlockToken.isEmpty()) {
+        if (mFolderUnlockToken != null && !mFolderUnlockToken.isEmpty()) {
             UnlockFileOperation unlockFileOperation = new UnlockFileOperation(parent.getLocalId(), mFolderUnlockToken);
             RemoteOperationResult unlockFileOperationResult = unlockFileOperation.execute(client, true);
 

File: src/main/java/com/owncloud/android/ui/adapter/UploadListAdapter.java
Patch:
@@ -488,6 +488,9 @@ private String getStatusText(OCUpload upload) {
                         status = mParentActivity.getString(
                                 R.string.uploads_view_upload_status_waiting_exit_power_save_mode);
                         break;
+                    case VIRUS_DETECTED:
+                        status = mParentActivity.getString(R.string.uploads_view_upload_status_virus_detected);
+                        break;
                     default:
                         status = "New fail result but no description for the user";
                         break;

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -23,7 +23,6 @@
 
 import android.animation.LayoutTransition;
 import android.app.Activity;
-import android.content.res.ColorStateList;
 import android.content.res.Configuration;
 import android.graphics.PorterDuff;
 import android.os.Bundle;

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -423,7 +423,7 @@ public void setSortOrder(FileSortOrder sortOrder) {
     }
 
     private List<File> getFolders(final File directory) {
-        File[] folders = directory.listFiles(File::isFile);
+        File[] folders = directory.listFiles(File::isDirectory);
 
         if (folders != null && folders.length > 0) {
             return new ArrayList<>(Arrays.asList(folders));

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -121,6 +121,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 mContainerActivity.getInitialDirectory(), this, getActivity());
         setRecyclerViewAdapter(mAdapter);
 
+        listDirectory(mContainerActivity.getInitialDirectory());
+
         Log_OC.i(TAG, "onActivityCreated() stop");
     }
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -396,7 +396,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
         // try to unlock folder with stored token, e.g. when upload needs to be resumed or app crashed
         // the parent folder should exist as it is a resume of a broken upload
-        if (!mFolderUnlockToken.isEmpty()) {
+        if (mFolderUnlockToken != null && !mFolderUnlockToken.isEmpty()) {
             UnlockFileOperation unlockFileOperation = new UnlockFileOperation(parent.getLocalId(), mFolderUnlockToken);
             RemoteOperationResult unlockFileOperationResult = unlockFileOperation.execute(client, true);
 

File: src/main/java/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -423,7 +423,7 @@ public void setSortOrder(FileSortOrder sortOrder) {
     }
 
     private List<File> getFolders(final File directory) {
-        File[] folders = directory.listFiles(File::isFile);
+        File[] folders = directory.listFiles(File::isDirectory);
 
         if (folders != null && folders.length > 0) {
             return new ArrayList<>(Arrays.asList(folders));

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -121,6 +121,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 mContainerActivity.getInitialDirectory(), this, getActivity());
         setRecyclerViewAdapter(mAdapter);
 
+        listDirectory(mContainerActivity.getInitialDirectory());
+
         Log_OC.i(TAG, "onActivityCreated() stop");
     }
 

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -34,7 +34,7 @@
 import android.net.wifi.WifiManager.WifiLock;
 import android.os.IBinder;
 import android.os.PowerManager;
-import android.support.v7.app.NotificationCompat;
+import android.support.v4.app.NotificationCompat;
 import android.widget.Toast;
 
 import com.owncloud.android.R;

File: src/main/java/com/owncloud/android/widgets/ActionEditText.java
Patch:
@@ -138,6 +138,7 @@ private void getAttrs(AttributeSet attr) {
                 0xff0000);
         badgeClickCallback = a
                 .getString(R.styleable.ActionEditText_onBadgeClick);
+        a.recycle();
     }
 
 }

File: src/main/java/com/owncloud/android/widgets/ActionEditText.java
Patch:
@@ -138,6 +138,7 @@ private void getAttrs(AttributeSet attr) {
                 0xff0000);
         badgeClickCallback = a
                 .getString(R.styleable.ActionEditText_onBadgeClick);
+        a.recycle();
     }
 
 }

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -34,7 +34,7 @@
 import android.net.wifi.WifiManager.WifiLock;
 import android.os.IBinder;
 import android.os.PowerManager;
-import android.support.v7.app.NotificationCompat;
+import android.support.v4.app.NotificationCompat;
 import android.widget.Toast;
 
 import com.owncloud.android.R;

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -213,9 +213,7 @@ private FileSystemDataSet getFilesystemDataSet(String localPathParam, SyncedFold
 
     private long getFileChecksum(String filepath) {
 
-        InputStream inputStream;
-        try {
-            inputStream = new BufferedInputStream(new FileInputStream(filepath));
+        try (InputStream inputStream = new BufferedInputStream(new FileInputStream(filepath))){
             CRC32 crc = new CRC32();
             int cnt;
             while ((cnt = inputStream.read()) != -1) {

File: src/main/java/com/owncloud/android/jobs/ContactsImportJob.java
Patch:
@@ -115,8 +115,7 @@ private VCard getContactFromCursor(Cursor cursor) {
         String lookupKey = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.LOOKUP_KEY));
         Uri uri = Uri.withAppendedPath(ContactsContract.Contacts.CONTENT_VCARD_URI, lookupKey);
         VCard vCard = null;
-        try {
-            InputStream inputStream = getContext().getContentResolver().openInputStream(uri);
+        try (InputStream inputStream = getContext().getContentResolver().openInputStream(uri)){
             ArrayList<VCard> vCardList = new ArrayList<>();
             vCardList.addAll(Ezvcard.parse(inputStream).all());
             if (vCardList.size() > 0) {

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -201,12 +201,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 byte[] authenticationTag = EncryptionUtils.decodeStringToBase64Bytes(metadata.getFiles()
                         .get(mFile.getEncryptedFileName()).getAuthenticationTag());
 
-                try {
+                try (FileOutputStream fileOutputStream = new FileOutputStream(tmpFile)){
                     byte[] decryptedBytes = EncryptionUtils.decryptFile(tmpFile, key, iv, authenticationTag);
 
-                    FileOutputStream fileOutputStream = new FileOutputStream(tmpFile);
                     fileOutputStream.write(decryptedBytes);
-                    fileOutputStream.close();
                 } catch (Exception e) {
                     return new RemoteOperationResult(e);
                 }

File: src/main/java/com/owncloud/android/ui/preview/ImageViewCustom.java
Patch:
@@ -130,8 +130,7 @@ public void setImageBitmap(Bitmap bm) {
      * @param storagePath the storage path of the GIF image
      */
     public void setGIFImageFromStoragePath(String storagePath) {
-        try {
-            InputStream gifInputStream = new FileInputStream(storagePath);
+        try (InputStream gifInputStream = new FileInputStream(storagePath)){
             setLayerType(View.LAYER_TYPE_SOFTWARE, null);
             setFocusable(true);
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -182,7 +182,8 @@ public class FileDisplayActivity extends HookActivity
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         Log_OC.v(TAG, "onCreate() start");
-
+        // Set the default theme to replace the launch screen theme.
+        setTheme(R.style.Theme_ownCloud_Toolbar_Drawer);
         super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account
         // is valid
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -289,7 +289,7 @@ private Activity getActivity() {
     private void upgradeNotificationForInstantUpload() {
         // check for Android 6+ if legacy instant upload is activated --> disable + show info
         if (PreferenceManager.instantPictureUploadEnabled(this) ||
-                PreferenceManager.instantPictureUploadEnabled(this)) {
+                PreferenceManager.instantVideoUploadEnabled(this)) {
 
             // remove legacy shared preferences
             SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(this).edit();

File: src/test/java/com/owncloud/android/utils/IOHelperTest.java
Patch:
@@ -6,7 +6,6 @@
 
 import java.io.FileOutputStream;
 import java.io.IOException;
-import java.io.StringWriter;
 import java.nio.file.Files;
 import java.nio.file.Paths;
 
@@ -24,11 +23,9 @@ public class IOHelperTest {
     public void testInputStreamIsClosed() throws Exception {
         // Define FileOutputStream for testing.
         FileOutputStream mOutputStream = null;
-        StringWriter test = null;
         try {
             // init object
             mOutputStream = new FileOutputStream(outputFileName);
-            test = new StringWriter();
 
         } catch (Exception ex) {
             ex.printStackTrace();

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -742,7 +742,7 @@ private void createFilesTable(SQLiteDatabase db) {
                 + ProviderTableMeta.FILE_IS_ENCRYPTED + INTEGER // boolean
                 + ProviderTableMeta.FILE_ETAG_IN_CONFLICT + TEXT
                 + ProviderTableMeta.FILE_SHARED_WITH_SHAREE + INTEGER
-                + ProviderTableMeta.FILE_MOUNT_TYPE + "INTEGER);"
+                + ProviderTableMeta.FILE_MOUNT_TYPE + " INTEGER);"
         );
     }
 

File: src/main/java/com/owncloud/android/ui/adapter/OCFileListAdapter.java
Patch:
@@ -354,7 +354,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
     private void setThumbnail(OCFile file, ImageView thumbnailView) {
         if (file.isFolder()) {
             thumbnailView.setImageDrawable(MimeTypeUtil.getFolderTypeIcon(file.isSharedWithMe() ||
-                    file.isSharedWithSharee(), file.isSharedViaLink(), file.isEncrypted()));
+                    file.isSharedWithSharee(), file.isSharedViaLink(), file.isEncrypted(), file.getMountType()));
         } else {
             if ((MimeTypeUtil.isImage(file) || MimeTypeUtil.isVideo(file)) && file.getRemoteId() != null) {
                 // Thumbnail in cache?

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -884,7 +884,7 @@ public void onItemClicked(OCFile file) {
 
                     if (ocCapability.getEndToEndEncryption().isFalse() ||
                             ocCapability.getEndToEndEncryption().isUnknown()) {
-                        Snackbar.make(mCurrentListView, R.string.end_to_end_encryption_not_enabled,
+                        Snackbar.make(getRecyclerView(), R.string.end_to_end_encryption_not_enabled,
                                 Snackbar.LENGTH_LONG).show();
                         return;
                     }// check if keys are stored

File: src/main/java/com/owncloud/android/jobs/ContactsBackupJob.java
Patch:
@@ -54,6 +54,7 @@
 import java.io.InputStreamReader;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.List;
 
 /**
  * Job that backup contacts to /Contacts-Backup and deletes files older than x days
@@ -183,7 +184,7 @@ private void expireFiles(Integer daysToExpire, String backupFolderString, Accoun
                 Log_OC.d(TAG, "expire: " + daysToExpire + " " + backupFolder.getFileName());
             }
 
-            ArrayList<OCFile> backups = storageManager.getFolderContent(backupFolder, false);
+            List<OCFile> backups = storageManager.getFolderContent(backupFolder, false);
 
             for (OCFile backup : backups) {
                 if (timestampToExpire > backup.getModificationTimestamp()) {

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -628,7 +628,7 @@ public void onBackPressed() {
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
         // click on folder in the list
         Log_OC.d(TAG, "on item click");
-        ArrayList<OCFile> tmpFiles = getStorageManager().getFolderContent(mFile, false);
+        List<OCFile> tmpFiles = getStorageManager().getFolderContent(mFile, false);
         tmpFiles = sortFileList(tmpFiles);
 
         if (tmpFiles.size() <= 0) {
@@ -738,7 +738,7 @@ private void populateDirectoryList() {
 
         mFile = getStorageManager().getFileByPath(full_path);
         if (mFile != null) {
-            ArrayList<OCFile> files = getStorageManager().getFolderContent(mFile, false);
+            List<OCFile> files = getStorageManager().getFolderContent(mFile, false);
 
             if (files.size() == 0) {
                 setMessageForEmptyList(R.string.file_list_empty_headline, R.string.empty,
@@ -834,7 +834,7 @@ private void startSyncFolderOperation(OCFile folder) {
         syncFolderOp.execute(getAccount(), this, null, null);
     }
 
-    private ArrayList<OCFile> sortFileList(ArrayList<OCFile> files) {
+    private List<OCFile> sortFileList(List<OCFile> files) {
         FileSortOrder sortOrder = getSortOrder(this, mFile);
         return sortOrder.sortCloudFiles(files);
     }

File: src/main/java/com/owncloud/android/ui/dialog/RemoveFileDialogFragment.java
Patch:
@@ -36,6 +36,7 @@
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment.ConfirmationDialogFragmentListener;
 
 import java.util.ArrayList;
+import java.util.List;
 
 public class RemoveFileDialogFragment extends ConfirmationDialogFragment 
 implements ConfirmationDialogFragmentListener {
@@ -112,7 +113,7 @@ public void onCancel(String callerTag) {
         
         boolean containsFavorite = false;
         if (mTargetFile.isFolder()) {
-            ArrayList<OCFile> files = storageManager.getFolderContent(mTargetFile, false);
+            List<OCFile> files = storageManager.getFolderContent(mTargetFile, false);
             
             for(OCFile file: files) {
                 containsFavorite = file.isAvailableOffline() || containsFavorite;

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -35,8 +35,8 @@
 import com.owncloud.android.utils.FileSortOrder;
 import com.owncloud.android.utils.FileStorageUtils;
 
-import java.util.ArrayList;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Set;
 
 import javax.annotation.Nullable;
@@ -46,7 +46,7 @@
  */
 public class PreviewImagePagerAdapter extends FragmentStatePagerAdapter {
 
-    private ArrayList<OCFile> mImageFiles;
+    private List<OCFile> mImageFiles;
     private Account mAccount;
     private Set<Object> mObsoleteFragments;
     private Set<Integer> mObsoletePositions;

File: src/main/java/com/owncloud/android/utils/FileSortOrderByDate.java
Patch:
@@ -46,7 +46,7 @@ public FileSortOrderByDate(String name, boolean ascending) {
      *
      * @param files list of files to sort
      */
-    public ArrayList<OCFile> sortCloudFiles(ArrayList<OCFile> files) {
+    public List<OCFile> sortCloudFiles(List<OCFile> files) {
         final int multiplier = mAscending ? 1 : -1;
 
         Collections.sort(files, new Comparator<OCFile>() {

File: src/main/java/com/owncloud/android/utils/FileSortOrderByName.java
Patch:
@@ -48,7 +48,7 @@ public FileSortOrderByName(String name, boolean ascending) {
      * @param files files to sort
      */
     @SuppressFBWarnings(value = "Bx")
-    public ArrayList<OCFile> sortCloudFiles(ArrayList<OCFile> files) {
+    public List<OCFile> sortCloudFiles(List<OCFile> files) {
         final int multiplier = mAscending ? 1 : -1;
 
         Collections.sort(files, new Comparator<OCFile>() {

File: src/main/java/com/owncloud/android/utils/FileSortOrderBySize.java
Patch:
@@ -46,7 +46,7 @@ public FileSortOrderBySize(String name, boolean ascending) {
      *
      * @param files list of files to sort
      */
-    public ArrayList<OCFile> sortCloudFiles(ArrayList<OCFile> files) {
+    public List<OCFile> sortCloudFiles(List<OCFile> files) {
         final int multiplier = mAscending ? 1 : -1;
 
         Collections.sort(files, new Comparator<OCFile>() {

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -38,9 +38,9 @@
 import java.io.OutputStream;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
+import java.util.List;
 import java.util.Locale;
 import java.util.TimeZone;
 
@@ -196,7 +196,7 @@ public static RemoteFile fillRemoteFile(OCFile ocFile) {
         return file;
     }
 
-    public static ArrayList<OCFile> sortOcFolderDescDateModified(ArrayList<OCFile> files) {
+    public static List<OCFile> sortOcFolderDescDateModified(List<OCFile> files) {
         final int multiplier = -1;
         Collections.sort(files, (o1, o2) -> {
             @SuppressFBWarnings(value = "Bx", justification = "Would require stepping up API level")

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -283,7 +283,7 @@ public static String getAccountNameDisplayText(Context context, Account savedAcc
             fallbackString) {
         try {
             return new OwnCloudAccount(savedAccount, context).getDisplayName()
-                    + " @ "
+                    + "@"
                     + convertIdn(accountName.substring(accountName.lastIndexOf('@') + 1), false);
         } catch (Exception e) {
             Log_OC.w(TAG, "Couldn't get display name for account, using old style");

File: src/main/java/com/owncloud/android/ui/EmptyRecyclerView.java
Patch:
@@ -74,7 +74,7 @@ private void initEmptyView() {
         }
     }
 
-    final AdapterDataObserver observer = new AdapterDataObserver() {
+    private final AdapterDataObserver observer = new AdapterDataObserver() {
         @Override
         public void onChanged() {
             super.onChanged();

File: src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -152,7 +152,7 @@ public void onBindHeaderViewHolder(final MainViewHolder holder, final int sectio
 
     @Override
     public void onBindFooterViewHolder(MainViewHolder holder, int section) {
-
+        // not needed
     }
 
 

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -544,11 +544,9 @@ public void onOverflowIconClicked(OCFile file, View view) {
      * Also listens to changes in navigation drawer to hide and recover multiple selection when it's opened
      * and closed.
      */
-    private class MultiChoiceModeListener
-            implements AbsListView.MultiChoiceModeListener, DrawerLayout.DrawerListener {
+    private class MultiChoiceModeListener implements AbsListView.MultiChoiceModeListener, DrawerLayout.DrawerListener {
 
         private static final String KEY_ACTION_MODE_CLOSED_BY_DRAWER = "KILLED_ACTION_MODE";
-        private static final String KEY_SELECTION_WHEN_CLOSED_BY_DRAWER = "CHECKED_ITEMS";
 
         /**
          * True when action mode is finished because the drawer was opened

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseInstanceIDService.java
Patch:
@@ -39,4 +39,3 @@ public void onTokenRefresh() {
         }
     }
 }
-

File: src/main/java/com/owncloud/android/jobs/NCJobCreator.java
Patch:
@@ -41,6 +41,8 @@ public Job create(String tag) {
                 return new FilesSyncJob();
             case OfflineSyncJob.TAG:
                 return new OfflineSyncJob();
+            case NotificationJob.TAG:
+                return new NotificationJob();
             default:
                 return null;
         }

File: src/main/java/com/owncloud/android/datamodel/DecryptedPushMessage.java
Patch:
@@ -2,7 +2,7 @@
  * Nextcloud application
  *
  * @author Mario Danic
- * Copyright (C) 2017-2017 Mario Danic <mario@lovelyhq.com>
+ * Copyright (C) 2017-2018 Mario Danic <mario@lovelyhq.com>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -66,6 +66,7 @@
 import com.owncloud.android.ui.activity.WhatsNewActivity;
 import com.owncloud.android.ui.notifications.NotificationUtils;
 import com.owncloud.android.utils.AnalyticsUtils;
+import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ReceiversHelper;
@@ -116,6 +117,7 @@ public void onCreate() {
         MainApp.mContext = getApplicationContext();
 
         new SecurityUtils();
+        DisplayUtils.useCompatVectorIfNeeded();
 
         if (!getResources().getBoolean(R.bool.analytics_enabled)) {
             AnalyticsUtils.disableAnalytics();

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseInstanceIDService.java
Patch:
@@ -39,4 +39,3 @@ public void onTokenRefresh() {
         }
     }
 }
-

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -43,4 +43,4 @@ public void onMessageReceived(RemoteMessage remoteMessage) {
                     .schedule();
         }
     }
-}
\ No newline at end of file
+}

File: src/main/java/com/owncloud/android/jobs/NCJobCreator.java
Patch:
@@ -41,6 +41,8 @@ public Job create(String tag) {
                 return new FilesSyncJob();
             case OfflineSyncJob.TAG:
                 return new OfflineSyncJob();
+            case NotificationJob.TAG:
+                return new NotificationJob();
             default:
                 return null;
         }

File: src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java
Patch:
@@ -58,7 +58,7 @@ protected Result onRunJob(@NonNull Params params) {
         if (!PowerUtils.isPowerSaveMode(context) && !ConnectivityUtils.isInternetWalled(context)) {
             Set<Job> jobs = JobManager.instance().getAllJobsForTag(TAG);
             for (Job job : jobs) {
-                if (!job.isFinished()) {
+                if (!job.isFinished() && !job.equals(this)) {
                     return Result.SUCCESS;
                 }
             }

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -303,7 +303,7 @@ public static void scheduleFilesSyncIfNeeded(Context context) {
     public static void scheduleOfflineSyncIfNeeded() {
         Set<JobRequest> jobRequests = JobManager.instance().getAllJobRequestsForTag(OfflineSyncJob.TAG);
         if (jobRequests.size() == 0) {
-            new JobRequest.Builder(FilesSyncJob.TAG)
+            new JobRequest.Builder(OfflineSyncJob.TAG)
                     .setPeriodic(TimeUnit.MINUTES.toMillis(15), TimeUnit.MINUTES.toMillis(5))
                     .setUpdateCurrent(false)
                     .build()

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -23,6 +23,7 @@
 
 import android.accounts.Account;
 import android.content.ActivityNotFoundException;
+import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -594,12 +595,13 @@ public void syncFiles(Collection<OCFile> files) {
         }
     }
 
-    public void sendCachedImage(OCFile file) {
+    public void sendCachedImage(OCFile file, String packageName, String activityName) {
         if (file != null) {
             Context context = MainApp.getAppContext();
             Intent sendIntent = new Intent(Intent.ACTION_SEND);
             // set MimeType
             sendIntent.setType(file.getMimetype());
+            sendIntent.setComponent(new ComponentName(packageName, activityName));
             sendIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse("content://" +
                     context.getResources().getString(R.string.image_cache_provider_authority) +
                     file.getRemotePath()));

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -39,6 +39,7 @@ public class NotificationUtils {
     public static final String NOTIFICATION_CHANNEL_MEDIA = "NOTIFICATION_CHANNEL_MEDIA";
     public static final String NOTIFICATION_CHANNEL_FILE_SYNC = "NOTIFICATION_CHANNEL_FILE_SYNC";
     public static final String NOTIFICATION_CHANNEL_FILE_OBSERVER = "NOTIFICATION_CHANNEL_FILE_OBSERVER";
+    public static final String NOTIFICATION_CHANNEL_PUSH = "NOTIFICATION_CHANNEL_PUSH";
 
     /**
      * Factory method for {@link android.support.v4.app.NotificationCompat.Builder} instances.

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -39,6 +39,7 @@ public class NotificationUtils {
     public static final String NOTIFICATION_CHANNEL_MEDIA = "NOTIFICATION_CHANNEL_MEDIA";
     public static final String NOTIFICATION_CHANNEL_FILE_SYNC = "NOTIFICATION_CHANNEL_FILE_SYNC";
     public static final String NOTIFICATION_CHANNEL_FILE_OBSERVER = "NOTIFICATION_CHANNEL_FILE_OBSERVER";
+    public static final String NOTIFICATION_CHANNEL_PUSH = "NOTIFICATION_CHANNEL_PUSH";
 
     /**
      * Factory method for {@link android.support.v4.app.NotificationCompat.Builder} instances.

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -678,6 +678,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         inflater.inflate(R.menu.main_menu, menu);
         menu.findItem(R.id.action_create_dir).setVisible(false);
 
+        menu.findItem(R.id.action_select_all).setVisible(false);
         final MenuItem item = menu.findItem(R.id.action_search);
         searchView = (SearchView) MenuItemCompat.getActionView(item);
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -678,8 +678,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         inflater.inflate(R.menu.main_menu, menu);
         menu.findItem(R.id.action_create_dir).setVisible(false);
 
-        MenuItem selectAll = menu.findItem(R.id.action_select_all);
-        selectAll.setVisible(false);
+        MenuItem selectAll = menu.findItem(R.id.action_select_all).setVisible(false);
         final MenuItem item = menu.findItem(R.id.action_search);
         searchView = (SearchView) MenuItemCompat.getActionView(item);
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -212,7 +212,7 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
     private TextView mServerStatusView;
 
     private TextWatcher mHostUrlInputWatcher;
-    private String mServerStatusText;
+    private String mServerStatusText = "";
     private int mServerStatusIcon = 0;
 
     private boolean mServerIsChecked = false;
@@ -233,7 +233,7 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
 
     private WebView mLoginWebView;
 
-    private String mAuthStatusText;
+    private String mAuthStatusText = "";
     private int mAuthStatusIcon = 0;
 
     private String mAuthToken = "";
@@ -1977,7 +1977,7 @@ public void onRegisterClick(View view) {
      * to the last check on the ownCloud server.
      */
     private void showServerStatus() {
-        if (mServerStatusIcon == 0 && "".equals(mServerStatusText) || forceOldLoginMethod) {
+        if (mServerStatusIcon == 0 && "".equals(mServerStatusText)) {
             mServerStatusView.setVisibility(View.INVISIBLE);
         } else {
             mServerStatusView.setText(mServerStatusText);

File: src/main/java/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -62,11 +62,11 @@ public CreateFolderOperation(String remotePath, boolean createFullPath) {
     @Override
     protected RemoteOperationResult run(OwnCloudClient client) {
         CreateRemoteFolderOperation operation = new CreateRemoteFolderOperation(mRemotePath, mCreateFullPath);
-        RemoteOperationResult result =  operation.execute(client);
+        RemoteOperationResult result = operation.execute(client, true);
         
         if (result.isSuccess()) {
             ReadRemoteFolderOperation remoteFolderOperation = new ReadRemoteFolderOperation(mRemotePath);
-            RemoteOperationResult remoteFolderOperationResult = remoteFolderOperation.execute(client);
+            RemoteOperationResult remoteFolderOperationResult = remoteFolderOperation.execute(client, true);
 
             createdRemoteFolder = (RemoteFile) remoteFolderOperationResult.getData().get(0);
             saveFolderInDB();
@@ -118,6 +118,7 @@ private void saveFolderInDB() {
             newDir.setParentId(parentId);
             newDir.setRemoteId(createdRemoteFolder.getRemoteId());
             newDir.setModificationTimestamp(System.currentTimeMillis());
+            newDir.setEncrypted(FileStorageUtils.checkEncryptionStatus(newDir, getStorageManager()));
             getStorageManager().saveFile(newDir);
 
             Log_OC.d(TAG, "Create directory " + mRemotePath + " in Database");

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -175,7 +175,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         while (listener.hasNext()) {
             mDownloadOperation.addDatatransferProgressListener(listener.next());
         }
-        result = mDownloadOperation.execute(client);
+        result = mDownloadOperation.execute(client, client.useNextcloudUserAgent());
         
         if (result.isSuccess()) {
             mModificationTimestamp = mDownloadOperation.getModificationTimestamp();

File: src/main/java/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -62,11 +62,11 @@ public CreateFolderOperation(String remotePath, boolean createFullPath) {
     @Override
     protected RemoteOperationResult run(OwnCloudClient client) {
         CreateRemoteFolderOperation operation = new CreateRemoteFolderOperation(mRemotePath, mCreateFullPath);
-        RemoteOperationResult result =  operation.execute(client);
+        RemoteOperationResult result = operation.execute(client, true);
         
         if (result.isSuccess()) {
             ReadRemoteFolderOperation remoteFolderOperation = new ReadRemoteFolderOperation(mRemotePath);
-            RemoteOperationResult remoteFolderOperationResult = remoteFolderOperation.execute(client);
+            RemoteOperationResult remoteFolderOperationResult = remoteFolderOperation.execute(client, true);
 
             createdRemoteFolder = (RemoteFile) remoteFolderOperationResult.getData().get(0);
             saveFolderInDB();
@@ -118,6 +118,7 @@ private void saveFolderInDB() {
             newDir.setParentId(parentId);
             newDir.setRemoteId(createdRemoteFolder.getRemoteId());
             newDir.setModificationTimestamp(System.currentTimeMillis());
+            newDir.setEncrypted(FileStorageUtils.checkEncryptionStatus(newDir, getStorageManager()));
             getStorageManager().saveFile(newDir);
 
             Log_OC.d(TAG, "Create directory " + mRemotePath + " in Database");

File: src/main/java/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -175,7 +175,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         while (listener.hasNext()) {
             mDownloadOperation.addDatatransferProgressListener(listener.next());
         }
-        result = mDownloadOperation.execute(client);
+        result = mDownloadOperation.execute(client, client.useNextcloudUserAgent());
         
         if (result.isSuccess()) {
             mModificationTimestamp = mDownloadOperation.getModificationTimestamp();

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -129,7 +129,7 @@ public OCFile getFileById(long id) {
         c.close();
         return file;
     }
-
+    
     public OCFile getFileByLocalPath(String path) {
         Cursor c = getFileCursorForValue(ProviderTableMeta.FILE_STORAGE_PATH, path);
         OCFile file = null;

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -129,7 +129,7 @@ public OCFile getFileById(long id) {
         c.close();
         return file;
     }
-
+    
     public OCFile getFileByLocalPath(String path) {
         Cursor c = getFileCursorForValue(ProviderTableMeta.FILE_STORAGE_PATH, path);
         OCFile file = null;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -69,6 +69,7 @@
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ReceiversHelper;
+import com.owncloud.android.utils.SecurityUtils;
 
 import java.lang.reflect.Method;
 import java.util.ArrayList;
@@ -114,6 +115,8 @@ public void onCreate() {
         JobManager.create(this).addJobCreator(new NCJobCreator());
         MainApp.mContext = getApplicationContext();
 
+        new SecurityUtils();
+
         if (!getResources().getBoolean(R.bool.analytics_enabled)) {
             AnalyticsUtils.disableAnalytics();
         }

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -69,6 +69,7 @@
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ReceiversHelper;
+import com.owncloud.android.utils.SecurityUtils;
 
 import java.lang.reflect.Method;
 import java.util.ArrayList;
@@ -114,6 +115,8 @@ public void onCreate() {
         JobManager.create(this).addJobCreator(new NCJobCreator());
         MainApp.mContext = getApplicationContext();
 
+        new SecurityUtils();
+
         if (!getResources().getBoolean(R.bool.analytics_enabled)) {
             AnalyticsUtils.disableAnalytics();
         }

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -147,7 +147,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             Activity activity = (Activity) mValues.get(position);
             if (activity.getDatetime() != null) {
                 activityViewHolder.dateTime.setVisibility(View.VISIBLE);
-                activityViewHolder.dateTime.setText(DateFormat.format("HH:MM", activity.getDatetime().getTime()));
+                activityViewHolder.dateTime.setText(DateFormat.format("HH:mm", activity.getDatetime().getTime()));
             } else {
                 activityViewHolder.dateTime.setVisibility(View.GONE);
             }

File: src/main/java/com/owncloud/android/ui/adapter/ActivityListAdapter.java
Patch:
@@ -147,7 +147,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             Activity activity = (Activity) mValues.get(position);
             if (activity.getDatetime() != null) {
                 activityViewHolder.dateTime.setVisibility(View.VISIBLE);
-                activityViewHolder.dateTime.setText(DateFormat.format("HH:MM", activity.getDatetime().getTime()));
+                activityViewHolder.dateTime.setText(DateFormat.format("HH:mm", activity.getDatetime().getTime()));
             } else {
                 activityViewHolder.dateTime.setVisibility(View.GONE);
             }

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -209,7 +209,7 @@ private FileSystemDataSet getFilesystemDataSet(String localPathParam, SyncedFold
         return dataSet;
     }
 
-    private static long getFileChecksum(String filepath) {
+    private long getFileChecksum(String filepath) {
 
         InputStream inputStream = null;
         try {

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -209,7 +209,7 @@ private FileSystemDataSet getFilesystemDataSet(String localPathParam, SyncedFold
         return dataSet;
     }
 
-    private static long getFileChecksum(String filepath) {
+    private long getFileChecksum(String filepath) {
 
         InputStream inputStream = null;
         try {

File: src/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java
Patch:
@@ -96,7 +96,7 @@ public void init(){
     }
 
     @Test
-    public void check_login()
+    public void checkLogin()
         throws InterruptedException, NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
         Bundle arguments = InstrumentationRegistry.getArguments();
 

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -109,7 +109,6 @@ public class Preferences extends PreferenceActivity
     private SwitchPreference fPrint;
     private SwitchPreference mShowHiddenFiles;
     private SwitchPreference mExpertMode;
-    private Preference pAboutApp;
     private AppCompatDelegate mDelegate;
 
     private ListPreference mPrefStoragePath;
@@ -208,7 +207,7 @@ private void setupAboutCategory(int accentColor, String appVersion) {
                 accentColor));
 
         /* About App */
-        pAboutApp = findPreference("about_app");
+        Preference pAboutApp = findPreference("about_app");
         if (pAboutApp != null) {
             pAboutApp.setTitle(String.format(getString(R.string.about_android), getString(R.string.app_name)));
             pAboutApp.setSummary(String.format(getString(R.string.about_version), appVersion));

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -51,7 +51,6 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
-
 public class SendShareDialog extends BottomSheetDialogFragment {
 
     private static final String KEY_OCFILE = "KEY_OCFILE";
@@ -62,7 +61,6 @@ public class SendShareDialog extends BottomSheetDialogFragment {
     private View view;
     private OCFile file;
     private FileOperationsHelper fileOperationsHelper;
-    private FileDisplayActivity fileDisplayActivity;
 
     public static SendShareDialog newInstance(OCFile file) {
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -68,8 +68,7 @@ public class PreviewImageActivity extends FileActivity implements
         ViewPager.OnPageChangeListener, OnRemoteOperationListener {
 
     public static final String TAG = PreviewImageActivity.class.getSimpleName();
-    
-    public static final String KEY_WAITING_TO_PREVIEW = "WAITING_TO_PREVIEW";
+
     private static final String KEY_WAITING_FOR_BINDER = "WAITING_FOR_BINDER";
     private static final String KEY_SYSTEM_VISIBLE = "TRUE";
 

File: src/test/java/com/owncloud/android/authentication/AuthenticatorDataUrlTest.java
Patch:
@@ -166,6 +166,7 @@ public void tooLittleDataUrlElements() {
                 Assert.fail("Illegal Argument Exception expected!");
             } catch (IllegalArgumentException e) {
                 // all well
+                System.out.println("Expected Illegal Argument Exception caught.");
             }
         }
     }

File: src/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java
Patch:
@@ -96,7 +96,7 @@ public void init(){
     }
 
     @Test
-    public void check_login()
+    public void checkLogin()
         throws InterruptedException, NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
         Bundle arguments = InstrumentationRegistry.getArguments();
 

File: src/test/java/com/owncloud/android/authentication/AuthenticatorDataUrlTest.java
Patch:
@@ -166,6 +166,7 @@ public void tooLittleDataUrlElements() {
                 Assert.fail("Illegal Argument Exception expected!");
             } catch (IllegalArgumentException e) {
                 // all well
+                System.out.println("Expected Illegal Argument Exception caught.");
             }
         }
     }

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -209,7 +209,7 @@ private FileSystemDataSet getFilesystemDataSet(String localPathParam, SyncedFold
         return dataSet;
     }
 
-    private static long getFileChecksum(String filepath) {
+    private long getFileChecksum(String filepath) {
 
         InputStream inputStream = null;
         try {

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -503,6 +503,8 @@ private void resetData() {
         mEtagInConflict = null;
         mShareWithSharee = false;
         mIsFavorite = false;
+        mIsEncrypted = false;
+        mEncryptedFileName = null;
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -276,7 +276,7 @@ private void populateUserInfoUi(UserInfo userInfo) {
         }
         
         if (userInfo.getPhone() == null && userInfo.getEmail() == null && userInfo.getAddress() == null
-                && userInfo.getTwitter() == null & userInfo.getWebpage() == null) {
+                && userInfo.getTwitter() == null & userInfo.getWebsite() == null) {
 
             setErrorMessageForMultiList(getString(R.string.userinfo_no_info_headline),
                     getString(R.string.userinfo_no_info_text), R.drawable.ic_user);
@@ -296,7 +296,7 @@ private List<UserInfoDetailsItem> createUserInfoDetails(UserInfo userInfo) {
         addToListIfNeeded(result, R.drawable.ic_phone, userInfo.getPhone(), R.string.user_info_phone);
         addToListIfNeeded(result, R.drawable.ic_email, userInfo.getEmail(), R.string.user_info_email);
         addToListIfNeeded(result, R.drawable.ic_map_marker, userInfo.getAddress(), R.string.user_info_address);
-        addToListIfNeeded(result, R.drawable.ic_web, DisplayUtils.beautifyURL(userInfo.getWebpage()),
+        addToListIfNeeded(result, R.drawable.ic_web, DisplayUtils.beautifyURL(userInfo.getWebsite()),
                     R.string.user_info_website);
         addToListIfNeeded(result, R.drawable.ic_twitter, DisplayUtils.beautifyTwitterHandle(userInfo.getTwitter()),
                     R.string.user_info_twitter);

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -276,7 +276,7 @@ private void populateUserInfoUi(UserInfo userInfo) {
         }
         
         if (userInfo.getPhone() == null && userInfo.getEmail() == null && userInfo.getAddress() == null
-                && userInfo.getTwitter() == null & userInfo.getWebpage() == null) {
+                && userInfo.getTwitter() == null & userInfo.getWebsite() == null) {
 
             setErrorMessageForMultiList(getString(R.string.userinfo_no_info_headline),
                     getString(R.string.userinfo_no_info_text), R.drawable.ic_user);
@@ -296,7 +296,7 @@ private List<UserInfoDetailsItem> createUserInfoDetails(UserInfo userInfo) {
         addToListIfNeeded(result, R.drawable.ic_phone, userInfo.getPhone(), R.string.user_info_phone);
         addToListIfNeeded(result, R.drawable.ic_email, userInfo.getEmail(), R.string.user_info_email);
         addToListIfNeeded(result, R.drawable.ic_map_marker, userInfo.getAddress(), R.string.user_info_address);
-        addToListIfNeeded(result, R.drawable.ic_web, DisplayUtils.beautifyURL(userInfo.getWebpage()),
+        addToListIfNeeded(result, R.drawable.ic_web, DisplayUtils.beautifyURL(userInfo.getWebsite()),
                     R.string.user_info_website);
         addToListIfNeeded(result, R.drawable.ic_twitter, DisplayUtils.beautifyTwitterHandle(userInfo.getTwitter()),
                     R.string.user_info_twitter);

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -38,6 +38,7 @@ public class NotificationUtils {
     public static final String NOTIFICATION_CHANNEL_UPLOAD = "NOTIFICATION_CHANNEL_UPLOAD";
     public static final String NOTIFICATION_CHANNEL_MEDIA = "NOTIFICATION_CHANNEL_MEDIA";
     public static final String NOTIFICATION_CHANNEL_FILE_SYNC = "NOTIFICATION_CHANNEL_FILE_SYNC";
+    public static final String NOTIFICATION_CHANNEL_FILE_OBSERVER = "NOTIFICATION_CHANNEL_FILE_OBSERVER";
 
     /**
      * Factory method for {@link android.support.v4.app.NotificationCompat.Builder} instances.

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -38,6 +38,7 @@ public class NotificationUtils {
     public static final String NOTIFICATION_CHANNEL_UPLOAD = "NOTIFICATION_CHANNEL_UPLOAD";
     public static final String NOTIFICATION_CHANNEL_MEDIA = "NOTIFICATION_CHANNEL_MEDIA";
     public static final String NOTIFICATION_CHANNEL_FILE_SYNC = "NOTIFICATION_CHANNEL_FILE_SYNC";
+    public static final String NOTIFICATION_CHANNEL_FILE_OBSERVER = "NOTIFICATION_CHANNEL_FILE_OBSERVER";
 
     /**
      * Factory method for {@link android.support.v4.app.NotificationCompat.Builder} instances.

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -322,7 +322,9 @@ private static int saveKeyToFile(Key key, String path) {
         FileOutputStream keyFileOutputStream = null;
         try {
             if (!new File(path).exists()) {
-                new File(path).createNewFile();
+                File newFile = new File(path);
+                newFile.getParentFile().mkdirs();
+                newFile.createNewFile();
             }
             keyFileOutputStream = new FileOutputStream(path);
             keyFileOutputStream.write(encoded);

File: src/main/java/com/owncloud/android/datastorage/providers/EnvironmentStoragePointProvider.java
Patch:
@@ -53,7 +53,8 @@ private void addEntriesFromEnv(Vector<StoragePoint> result, String envName) {
         if (env != null) {
             for (String p : env.split(":")) {
                 if (canBeAddedToAvailableList(result, p)) {
-                    result.add(new StoragePoint(p, p));
+                    result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL,
+                            StoragePoint.PrivacyType.PUBLIC));
                 }
             }
         }

File: src/main/java/com/owncloud/android/datastorage/providers/HardcodedStoragePointProvider.java
Patch:
@@ -49,7 +49,7 @@ public Vector<StoragePoint> getAvailableStoragePoint() {
 
         for (String s : PATHS) {
             if (canBeAddedToAvailableList(result, s)) {
-                result.add(new StoragePoint(s, s));
+                result.add(new StoragePoint(s, s, StoragePoint.StorageType.EXTERNAL, StoragePoint.PrivacyType.PUBLIC));
             }
         }
 

File: src/main/java/com/owncloud/android/datastorage/providers/MountCommandStoragePointProvider.java
Patch:
@@ -47,7 +47,7 @@ public Vector<StoragePoint> getAvailableStoragePoint() {
 
         for (String p : getPotentialPaths(getCommandLineResult())) {
             if (canBeAddedToAvailableList(result, p)) {
-                result.add(new StoragePoint(p, p));
+                result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL, StoragePoint.PrivacyType.PUBLIC));
             }
         }
 

File: src/main/java/com/owncloud/android/datastorage/providers/VDCStoragePointProvider.java
Patch:
@@ -65,7 +65,8 @@ private Vector<StoragePoint> getPaths(String vdcResources) {
                 final String path = vdcLine[2];
 
                 if (canBeAddedToAvailableList(result, path)) {
-                    result.add(new StoragePoint(description, path));
+                    result.add(new StoragePoint(description, path, StoragePoint.StorageType.EXTERNAL,
+                            StoragePoint.PrivacyType.PRIVATE));
                 }
 
             } catch (NumberFormatException e) {

File: src/main/java/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -62,7 +62,7 @@
  */
 public class WhatsNewActivity extends FragmentActivity implements ViewPager.OnPageChangeListener {
 
-    private static final String KEY_LAST_SEEN_VERSION_CODE = "lastSeenVersionCode";
+    public static final String KEY_LAST_SEEN_VERSION_CODE = "lastSeenVersionCode";
 
     private static final String SCREEN_NAME = "What's new";
 

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -49,7 +49,6 @@ public boolean onStartJob(JobParameters params) {
                 persistableBundleCompat.putBoolean(FilesSyncJob.SKIP_CUSTOM, true);
 
                 new JobRequest.Builder(FilesSyncJob.TAG)
-                        .addExtras(persistableBundleCompat)
                         .startNow()
                         .setExtras(persistableBundleCompat)
                         .setUpdateCurrent(false)

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -322,7 +322,9 @@ private static int saveKeyToFile(Key key, String path) {
         FileOutputStream keyFileOutputStream = null;
         try {
             if (!new File(path).exists()) {
-                new File(path).createNewFile();
+                File newFile = new File(path);
+                newFile.getParentFile().mkdirs();
+                newFile.createNewFile();
             }
             keyFileOutputStream = new FileOutputStream(path);
             keyFileOutputStream.write(encoded);

File: src/main/java/com/owncloud/android/datastorage/providers/EnvironmentStoragePointProvider.java
Patch:
@@ -53,7 +53,8 @@ private void addEntriesFromEnv(Vector<StoragePoint> result, String envName) {
         if (env != null) {
             for (String p : env.split(":")) {
                 if (canBeAddedToAvailableList(result, p)) {
-                    result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL, StoragePoint.PrivacyType.PUBLIC));
+                    result.add(new StoragePoint(p, p, StoragePoint.StorageType.EXTERNAL,
+                            StoragePoint.PrivacyType.PUBLIC));
                 }
             }
         }

File: src/main/java/com/owncloud/android/datastorage/providers/VDCStoragePointProvider.java
Patch:
@@ -65,7 +65,8 @@ private Vector<StoragePoint> getPaths(String vdcResources) {
                 final String path = vdcLine[2];
 
                 if (canBeAddedToAvailableList(result, path)) {
-                    result.add(new StoragePoint(description, path, StoragePoint.StorageType.EXTERNAL, StoragePoint.PrivacyType.PRIVATE));
+                    result.add(new StoragePoint(description, path, StoragePoint.StorageType.EXTERNAL,
+                            StoragePoint.PrivacyType.PRIVATE));
                 }
 
             } catch (NumberFormatException e) {

File: src/main/java/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -62,7 +62,7 @@
  */
 public class WhatsNewActivity extends FragmentActivity implements ViewPager.OnPageChangeListener {
 
-    private static final String KEY_LAST_SEEN_VERSION_CODE = "lastSeenVersionCode";
+    public static final String KEY_LAST_SEEN_VERSION_CODE = "lastSeenVersionCode";
 
     private static final String SCREEN_NAME = "What's new";
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -761,7 +761,8 @@ private RemoteOperationResult checkConditions(File originalFile) {
         }
 
         // check if charging conditions are met and delays the upload otherwise
-        if (mWhileChargingOnly && !Device.getBatteryStatus(mContext).isCharging()) {
+        if (mWhileChargingOnly && (!Device.getBatteryStatus(mContext).isCharging() && Device.getBatteryStatus(mContext)
+                .getBatteryPercent() < 1)) {
             Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
             remoteOperationResult =  new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
             return remoteOperationResult;

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -49,7 +49,6 @@ public boolean onStartJob(JobParameters params) {
                 persistableBundleCompat.putBoolean(FilesSyncJob.SKIP_CUSTOM, true);
 
                 new JobRequest.Builder(FilesSyncJob.TAG)
-                        .addExtras(persistableBundleCompat)
                         .startNow()
                         .setExtras(persistableBundleCompat)
                         .setUpdateCurrent(false)

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -32,7 +32,7 @@
 public class ProviderMeta {
 
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 29;
+    public static final int DB_VERSION = 30;
 
     private ProviderMeta() {
     }

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -32,7 +32,7 @@
 public class ProviderMeta {
 
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 29;
+    public static final int DB_VERSION = 30;
 
     private ProviderMeta() {
     }

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -337,7 +337,7 @@ private static int saveKeyToFile(Key key, String path) {
         return -1;
     }
 
-    public static void migratePushKeys() {
+    private static void migratePushKeys() {
         Context context = MainApp.getAppContext();
 
         if (!PreferenceManager.getKeysMigration(context)) {

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -621,8 +621,8 @@ private Cursor query(
 
         // if both are null, let them pass to query
         if (selectionArgs == null && selection != null) {
-            selectionArgs = new String[]{selection};
             selection = "(?)";
+            selectionArgs = new String[]{selection};
         }
 
         sqlQuery.setStrict(true);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -79,6 +79,7 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.FolderPickerActivity;
 import com.owncloud.android.ui.activity.OnEnforceableRefreshListener;
+import com.owncloud.android.ui.activity.ToolbarActivity;
 import com.owncloud.android.ui.activity.UploadFilesActivity;
 import com.owncloud.android.ui.adapter.FileListListAdapter;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
@@ -1542,7 +1543,7 @@ protected Object doInBackground(Object[] params) {
                             mAdapter.setData(remoteOperationResult.getData(), currentSearchType, storageManager, mFile);
                         }
 
-                        final FileDisplayActivity fileDisplayActivity = (FileDisplayActivity) getActivity();
+                        final ToolbarActivity fileDisplayActivity = (ToolbarActivity) getActivity();
                         if (fileDisplayActivity != null) {
                             fileDisplayActivity.runOnUiThread(new Runnable() {
                                 @Override

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -1113,7 +1113,7 @@ public static class AsyncAvatarDrawable extends BitmapDrawable {
         private final WeakReference<AvatarGenerationTask> avatarWorkerTaskReference;
 
         public AsyncAvatarDrawable(Resources res, Drawable bitmap, AvatarGenerationTask avatarWorkerTask) {
-            super(res, bitmap);
+            super(res, BitmapUtils.drawableToBitmap(bitmap));
             avatarWorkerTaskReference = new WeakReference<>(avatarWorkerTask);
         }
 

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -30,6 +30,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.Resources;
+import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.Point;
 import android.graphics.drawable.Drawable;

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -318,7 +318,7 @@ private class GenerateNewKeysAsyncTask extends AsyncTask<Void, Void, String> {
         protected void onPreExecute() {
             super.onPreExecute();
 
-            textView.setText(R.string.end_to_end_encryption_storing_keys_on_server);
+            textView.setText(R.string.end_to_end_encryption_generating_keys);
         }
 
         @Override

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -64,16 +64,13 @@
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ReceiversHelper;
-import com.owncloud.android.utils.EncryptionUtils;
 
 import java.lang.reflect.Method;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import javax.crypto.Cipher;
-
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -52,7 +52,6 @@
 import android.support.v7.app.AlertDialog;
 import android.support.v7.widget.SearchView;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -64,16 +64,13 @@
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.PermissionUtil;
 import com.owncloud.android.utils.ReceiversHelper;
-import com.owncloud.android.utils.EncryptionUtils;
 
 import java.lang.reflect.Method;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import javax.crypto.Cipher;
-
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -52,7 +52,6 @@
 import android.support.v7.app.AlertDialog;
 import android.support.v7.widget.SearchView;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;

File: src/main/java/com/owncloud/android/ui/dialog/SetupEncryptionDialogFragment.java
Patch:
@@ -289,7 +289,7 @@ protected String doInBackground(Void... voids) {
 
                     publicKey = (String) result.getData().get(0);
                 } else {
-                    throw new Exception("Public key not stored!");
+                    throw new RuntimeException("Public key not stored!");
                 }
 
                 keyWords = EncryptionUtils.getRandomWords(12, getContext());

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -76,7 +76,6 @@ public void run() {
                  notificationManager.cancel(notificationId);
                  ((HandlerThread)Thread.currentThread()).getLooper().quit();
              } 
-        }, delayInMillis); 
-    
+        }, delayInMillis);
     }
 }

File: src/main/java/org/nextcloud/providers/cursors/FileCursor.java
Patch:
@@ -31,7 +31,7 @@
 @TargetApi(Build.VERSION_CODES.KITKAT)
 public class FileCursor extends MatrixCursor {
 
-    private static final String[] DEFAULT_DOCUMENT_PROJECTION = new String[] {
+    public static final String[] DEFAULT_DOCUMENT_PROJECTION = new String[] {
             Document.COLUMN_DOCUMENT_ID, Document.COLUMN_DISPLAY_NAME,
             Document.COLUMN_MIME_TYPE, Document.COLUMN_SIZE,
             Document.COLUMN_FLAGS, Document.COLUMN_LAST_MODIFIED

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -513,7 +513,7 @@ public void finishedFiltering() {
 
     @Override
     public void onShareIconClick(OCFile file) {
-        mContainerActivity.getFileOperationsHelper().sendShareFile(file, (FileDisplayActivity) mContainerActivity);
+        mContainerActivity.getFileOperationsHelper().sendShareFile(file);
     }
 
     @Override
@@ -944,8 +944,7 @@ public boolean onFileActionChosen(int menuId, ArrayList<OCFile> checkedFiles) {
             OCFile singleFile = checkedFiles.get(0);
             switch (menuId) {
                 case R.id.action_send_share_file: {
-                        mContainerActivity.getFileOperationsHelper().sendShareFile(singleFile,
-                    (FileDisplayActivity) mContainerActivity);
+                    mContainerActivity.getFileOperationsHelper().sendShareFile(singleFile);
                     return true;
                 }
                 case R.id.action_open_file_with: {

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -54,7 +54,6 @@
 import com.owncloud.android.services.observer.FileObserverService;
 import com.owncloud.android.ui.activity.ConflictsResolveActivity;
 import com.owncloud.android.ui.activity.FileActivity;
-import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.ShareActivity;
 import com.owncloud.android.ui.dialog.SendShareDialog;
 import com.owncloud.android.ui.events.FavoriteEvent;
@@ -543,15 +542,14 @@ public boolean isSearchUserSupportedSupported() {
         return false;
     }
 
-    public void sendShareFile(OCFile file, FileDisplayActivity fileDisplayActivity) {
+    public void sendShareFile(OCFile file) {
         // Show dialog
         FragmentManager fm = mFileActivity.getSupportFragmentManager();
         FragmentTransaction ft = fm.beginTransaction();
         ft.addToBackStack(null);
 
         SendShareDialog mSendShareDialog = SendShareDialog.newInstance(file);
         mSendShareDialog.setFileOperationsHelper(this);
-        mSendShareDialog.setFileDisplayActivity(fileDisplayActivity);
         mSendShareDialog.show(ft, "TAG_SEND_SHARE_DIALOG");
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -486,7 +486,7 @@ private void seeDetails() {
 
     private void sendShareFile() {
         stopPreview(false);
-        mContainerActivity.getFileOperationsHelper().sendShareFile(getFile(), (FileDisplayActivity) mContainerActivity);
+        mContainerActivity.getFileOperationsHelper().sendShareFile(getFile());
     }
 
     private void prepareVideo() {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -513,7 +513,7 @@ public void finishedFiltering() {
 
     @Override
     public void onShareIconClick(OCFile file) {
-        mContainerActivity.getFileOperationsHelper().sendShareFile(file, (FileDisplayActivity) mContainerActivity);
+        mContainerActivity.getFileOperationsHelper().sendShareFile(file);
     }
 
     @Override
@@ -944,8 +944,7 @@ public boolean onFileActionChosen(int menuId, ArrayList<OCFile> checkedFiles) {
             OCFile singleFile = checkedFiles.get(0);
             switch (menuId) {
                 case R.id.action_send_share_file: {
-                        mContainerActivity.getFileOperationsHelper().sendShareFile(singleFile,
-                    (FileDisplayActivity) mContainerActivity);
+                    mContainerActivity.getFileOperationsHelper().sendShareFile(singleFile);
                     return true;
                 }
                 case R.id.action_open_file_with: {

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -54,7 +54,6 @@
 import com.owncloud.android.services.observer.FileObserverService;
 import com.owncloud.android.ui.activity.ConflictsResolveActivity;
 import com.owncloud.android.ui.activity.FileActivity;
-import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.ShareActivity;
 import com.owncloud.android.ui.dialog.SendShareDialog;
 import com.owncloud.android.ui.events.FavoriteEvent;
@@ -543,15 +542,14 @@ public boolean isSearchUserSupportedSupported() {
         return false;
     }
 
-    public void sendShareFile(OCFile file, FileDisplayActivity fileDisplayActivity) {
+    public void sendShareFile(OCFile file) {
         // Show dialog
         FragmentManager fm = mFileActivity.getSupportFragmentManager();
         FragmentTransaction ft = fm.beginTransaction();
         ft.addToBackStack(null);
 
         SendShareDialog mSendShareDialog = SendShareDialog.newInstance(file);
         mSendShareDialog.setFileOperationsHelper(this);
-        mSendShareDialog.setFileDisplayActivity(fileDisplayActivity);
         mSendShareDialog.show(ft, "TAG_SEND_SHARE_DIALOG");
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -486,7 +486,7 @@ private void seeDetails() {
 
     private void sendShareFile() {
         stopPreview(false);
-        mContainerActivity.getFileOperationsHelper().sendShareFile(getFile(), (FileDisplayActivity) mContainerActivity);
+        mContainerActivity.getFileOperationsHelper().sendShareFile(getFile());
     }
 
     private void prepareVideo() {

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -63,6 +63,7 @@
 import java.security.spec.InvalidKeySpecException;
 import java.security.spec.PKCS8EncodedKeySpec;
 import java.security.spec.X509EncodedKeySpec;
+import java.util.Locale;
 
 public class PushUtils {
 
@@ -191,7 +192,7 @@ public static void pushRegistrationToServer() {
         if (!TextUtils.isEmpty(MainApp.getAppContext().getResources().getString(R.string.push_server_url)) &&
                 !TextUtils.isEmpty(token)) {
             PushUtils.generateRsa2048KeyPair();
-            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase();
+            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase(Locale.ROOT);
             PublicKey devicePublicKey = (PublicKey) PushUtils.readKeyFromFile(true);
             if (devicePublicKey != null) {
                 byte[] publicKeyBytes = Base64.encode(devicePublicKey.getEncoded(), Base64.NO_WRAP);

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -34,6 +34,7 @@
 import com.owncloud.android.utils.MimeType;
 
 import java.io.File;
+import java.util.Locale;
 
 import third_parties.daveKoeller.AlphanumComparator;
 
@@ -563,7 +564,7 @@ public int describeContents() {
     @Override
     public int compareTo(OCFile another) {
         if (isFolder() && another.isFolder()) {
-            return getRemotePath().toLowerCase().compareTo(another.getRemotePath().toLowerCase());
+            return getRemotePath().toLowerCase(Locale.ROOT).compareTo(another.getRemotePath().toLowerCase(Locale.ROOT));
         } else if (isFolder()) {
             return -1;
         } else if (another.isFolder()) {

File: src/main/java/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -32,6 +32,7 @@
 import org.apache.commons.httpclient.HttpStatus;
 
 import java.util.ArrayList;
+import java.util.Locale;
 
 /**
  * Operation to find out what authentication method requires the server to access files.
@@ -101,7 +102,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
             for (String header : authHeaders) {
                 // currently we only support basic auth
-                if (header.toLowerCase().startsWith("basic")) {
+                if (header.toLowerCase(Locale.ROOT).startsWith("basic")) {
                     authMethod = AuthenticationMethod.BASIC_HTTP_AUTH;
                     break;
                 }

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -51,6 +51,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 
 
 /**
@@ -148,7 +149,7 @@ private Cursor searchForUsersOrGroups(Uri uri) {
         MatrixCursor response = null;
 
 
-        String userQuery = uri.getLastPathSegment().toLowerCase();
+        String userQuery = uri.getLastPathSegment().toLowerCase(Locale.ROOT);
 
 
         /// need to trust on the AccountUtils to get the current account since the query in the client side is not

File: src/main/java/com/owncloud/android/ui/TextDrawable.java
Patch:
@@ -33,6 +33,7 @@
 
 import java.io.UnsupportedEncodingException;
 import java.security.NoSuchAlgorithmException;
+import java.util.Locale;
 
 /**
  * A Drawable object that draws text (1 character) on top of a circular/filled background.
@@ -116,7 +117,8 @@ public static TextDrawable createNamedAvatar(String name, float radiusInDp) thro
         int[] hsl = BitmapUtils.calculateHSL(name);
         int[] rgb = BitmapUtils.HSLtoRGB(hsl[0], hsl[1], hsl[2], 1);
 
-        return new TextDrawable(name.substring(0, 1).toUpperCase(), rgb[0], rgb[1], rgb[2], radiusInDp);
+        return new TextDrawable(name.substring(0, 1).toUpperCase(Locale.getDefault()), rgb[0], rgb[1], rgb[2],
+                radiusInDp);
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -71,6 +71,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Locale;
 import java.util.Vector;
 
 
@@ -686,7 +687,8 @@ protected FilterResults performFiltering(CharSequence constraint) {
                 for (int i = 0; i < mFilesAll.size(); i++) {
                     OCFile currentFile = mFilesAll.get(i);
                     if (currentFile.getParentRemotePath().equals(currentDirectory.getRemotePath()) &&
-                            currentFile.getFileName().toLowerCase().contains(constraint.toString().toLowerCase()) &&
+                            currentFile.getFileName().toLowerCase(Locale.getDefault()).contains(
+                                    constraint.toString().toLowerCase(Locale.getDefault())) && 
                             !filteredFiles.contains(currentFile)) {
                         filteredFiles.add(currentFile);
                     }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -34,6 +34,7 @@
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.util.Locale;
 
 /**
  * Utility class with methods for decoding Bitmaps.
@@ -277,7 +278,7 @@ public static int[] calculateHSL(String name) throws UnsupportedEncodingExceptio
         int lum = 68;
         int modulo = 16;
 
-        String hash = name.toLowerCase().replaceAll("[^0-9a-f]", "");
+        String hash = name.toLowerCase(Locale.ROOT).replaceAll("[^0-9a-f]", "");
 
         if (!hash.matches("^[0-9a-f]{32}")) {
             hash = md5(hash);

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -88,6 +88,7 @@
 import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
 
@@ -163,7 +164,7 @@ public static String convertMIMEtoPrettyPrint(String mimetype) {
             return mimeType2HumanReadable.get(mimetype);
         }
         if (mimetype.split("/").length >= 2) {
-            return mimetype.split("/")[1].toUpperCase() + " file";
+            return mimetype.split("/")[1].toUpperCase(Locale.getDefault()) + " file";
         }
         return MIME_TYPE_UNKNOWN;
     }

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -286,7 +286,7 @@ public static String getMimeTypeFromName(String path) {
         if (pos >= 0) {
             extension = path.substring(pos + 1);
         }
-        String result = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase());
+        String result = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase(Locale.ROOT));
         return (result != null) ? result : "";
     }
 

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -63,6 +63,7 @@
 import java.security.spec.InvalidKeySpecException;
 import java.security.spec.PKCS8EncodedKeySpec;
 import java.security.spec.X509EncodedKeySpec;
+import java.util.Locale;
 
 public class PushUtils {
 
@@ -191,7 +192,7 @@ public static void pushRegistrationToServer() {
         if (!TextUtils.isEmpty(MainApp.getAppContext().getResources().getString(R.string.push_server_url)) &&
                 !TextUtils.isEmpty(token)) {
             PushUtils.generateRsa2048KeyPair();
-            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase();
+            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase(Locale.ROOT);
             PublicKey devicePublicKey = (PublicKey) PushUtils.readKeyFromFile(true);
             if (devicePublicKey != null) {
                 byte[] publicKeyBytes = Base64.encode(devicePublicKey.getEncoded(), Base64.NO_WRAP);

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -63,6 +63,7 @@
 import java.security.spec.InvalidKeySpecException;
 import java.security.spec.PKCS8EncodedKeySpec;
 import java.security.spec.X509EncodedKeySpec;
+import java.util.Locale;
 
 public class PushUtils {
 
@@ -191,7 +192,7 @@ public static void pushRegistrationToServer() {
         if (!TextUtils.isEmpty(MainApp.getAppContext().getResources().getString(R.string.push_server_url)) &&
                 !TextUtils.isEmpty(token)) {
             PushUtils.generateRsa2048KeyPair();
-            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase();
+            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase(Locale.ROOT);
             PublicKey devicePublicKey = (PublicKey) PushUtils.readKeyFromFile(true);
             if (devicePublicKey != null) {
                 byte[] publicKeyBytes = Base64.encode(devicePublicKey.getEncoded(), Base64.NO_WRAP);

File: src/main/java/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -34,6 +34,7 @@
 import com.owncloud.android.utils.MimeType;
 
 import java.io.File;
+import java.util.Locale;
 
 import third_parties.daveKoeller.AlphanumComparator;
 
@@ -563,7 +564,7 @@ public int describeContents() {
     @Override
     public int compareTo(OCFile another) {
         if (isFolder() && another.isFolder()) {
-            return getRemotePath().toLowerCase().compareTo(another.getRemotePath().toLowerCase());
+            return getRemotePath().toLowerCase(Locale.ROOT).compareTo(another.getRemotePath().toLowerCase(Locale.ROOT));
         } else if (isFolder()) {
             return -1;
         } else if (another.isFolder()) {

File: src/main/java/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -32,6 +32,7 @@
 import org.apache.commons.httpclient.HttpStatus;
 
 import java.util.ArrayList;
+import java.util.Locale;
 
 /**
  * Operation to find out what authentication method requires the server to access files.
@@ -101,7 +102,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
             for (String header : authHeaders) {
                 // currently we only support basic auth
-                if (header.toLowerCase().startsWith("basic")) {
+                if (header.toLowerCase(Locale.ROOT).startsWith("basic")) {
                     authMethod = AuthenticationMethod.BASIC_HTTP_AUTH;
                     break;
                 }

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -51,6 +51,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 
 
 /**
@@ -148,7 +149,7 @@ private Cursor searchForUsersOrGroups(Uri uri) {
         MatrixCursor response = null;
 
 
-        String userQuery = uri.getLastPathSegment().toLowerCase();
+        String userQuery = uri.getLastPathSegment().toLowerCase(Locale.ROOT);
 
 
         /// need to trust on the AccountUtils to get the current account since the query in the client side is not

File: src/main/java/com/owncloud/android/ui/TextDrawable.java
Patch:
@@ -33,6 +33,7 @@
 
 import java.io.UnsupportedEncodingException;
 import java.security.NoSuchAlgorithmException;
+import java.util.Locale;
 
 /**
  * A Drawable object that draws text (1 character) on top of a circular/filled background.
@@ -116,7 +117,8 @@ public static TextDrawable createNamedAvatar(String name, float radiusInDp) thro
         int[] hsl = BitmapUtils.calculateHSL(name);
         int[] rgb = BitmapUtils.HSLtoRGB(hsl[0], hsl[1], hsl[2], 1);
 
-        return new TextDrawable(name.substring(0, 1).toUpperCase(), rgb[0], rgb[1], rgb[2], radiusInDp);
+        return new TextDrawable(name.substring(0, 1).toUpperCase(Locale.getDefault()), rgb[0], rgb[1], rgb[2],
+                radiusInDp);
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -71,6 +71,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Locale;
 import java.util.Vector;
 
 
@@ -686,7 +687,8 @@ protected FilterResults performFiltering(CharSequence constraint) {
                 for (int i = 0; i < mFilesAll.size(); i++) {
                     OCFile currentFile = mFilesAll.get(i);
                     if (currentFile.getParentRemotePath().equals(currentDirectory.getRemotePath()) &&
-                            currentFile.getFileName().toLowerCase().contains(constraint.toString().toLowerCase()) &&
+                            currentFile.getFileName().toLowerCase(Locale.getDefault()).contains(
+                                    constraint.toString().toLowerCase(Locale.getDefault())) && 
                             !filteredFiles.contains(currentFile)) {
                         filteredFiles.add(currentFile);
                     }

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -34,6 +34,7 @@
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.util.Locale;
 
 /**
  * Utility class with methods for decoding Bitmaps.
@@ -277,7 +278,7 @@ public static int[] calculateHSL(String name) throws UnsupportedEncodingExceptio
         int lum = 68;
         int modulo = 16;
 
-        String hash = name.toLowerCase().replaceAll("[^0-9a-f]", "");
+        String hash = name.toLowerCase(Locale.ROOT).replaceAll("[^0-9a-f]", "");
 
         if (!hash.matches("^[0-9a-f]{32}")) {
             hash = md5(hash);

File: src/main/java/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -88,6 +88,7 @@
 import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
 
@@ -163,7 +164,7 @@ public static String convertMIMEtoPrettyPrint(String mimetype) {
             return mimeType2HumanReadable.get(mimetype);
         }
         if (mimetype.split("/").length >= 2) {
-            return mimetype.split("/")[1].toUpperCase() + " file";
+            return mimetype.split("/")[1].toUpperCase(Locale.getDefault()) + " file";
         }
         return MIME_TYPE_UNKNOWN;
     }

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -286,7 +286,7 @@ public static String getMimeTypeFromName(String path) {
         if (pos >= 0) {
             extension = path.substring(pos + 1);
         }
-        String result = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase());
+        String result = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension.toLowerCase(Locale.ROOT));
         return (result != null) ? result : "";
     }
 

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -63,6 +63,7 @@
 import java.security.spec.InvalidKeySpecException;
 import java.security.spec.PKCS8EncodedKeySpec;
 import java.security.spec.X509EncodedKeySpec;
+import java.util.Locale;
 
 public class PushUtils {
 
@@ -191,7 +192,7 @@ public static void pushRegistrationToServer() {
         if (!TextUtils.isEmpty(MainApp.getAppContext().getResources().getString(R.string.push_server_url)) &&
                 !TextUtils.isEmpty(token)) {
             PushUtils.generateRsa2048KeyPair();
-            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase();
+            String pushTokenHash = PushUtils.generateSHA512Hash(token).toLowerCase(Locale.ROOT);
             PublicKey devicePublicKey = (PublicKey) PushUtils.readKeyFromFile(true);
             if (devicePublicKey != null) {
                 byte[] publicKeyBytes = Base64.encode(devicePublicKey.getEncoded(), Base64.NO_WRAP);

File: src/main/java/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -29,6 +29,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.datamodel.VirtualFolderType;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.FileSortOrderByName;
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.util.HashMap;
@@ -79,9 +80,7 @@ public PreviewImagePagerAdapter(FragmentManager fragmentManager, OCFile parentFo
         mAccount = account;
         mStorageManager = storageManager;
         mImageFiles = mStorageManager.getFolderImages(parentFolder, onlyOnDevice);
-        
-        mImageFiles = FileStorageUtils.sortOcFolder(mImageFiles);
-        
+        mImageFiles = FileSortOrderByName.sort_a_to_z.sortCloudFiles(mImageFiles);
         mObsoleteFragments = new HashSet<Object>();
         mObsoletePositions = new HashSet<Integer>();
         mDownloadErrors = new HashSet<Integer>();

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -396,6 +396,7 @@ public void retryFailedUploads(Context context, Account account, UploadResult up
                         currentAccount = failedUpload.getAccount(context);
                     }
 
+                    charging = charging || Device.getBatteryStatus(context).getBatteryPercent() == 1;
                     if (!isPowerSaving && gotNetwork && checkIfUploadCanBeRetried(failedUpload, gotWifi, charging)) {
                             retry(context, currentAccount, failedUpload);
                         }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -354,7 +354,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             }
 
             // Check if charging conditions are met and delays the upload otherwise
-            if (mWhileChargingOnly && !Device.getBatteryStatus(mContext).isCharging()) {
+            if (mWhileChargingOnly && (!Device.getBatteryStatus(mContext).isCharging() && Device.getBatteryStatus
+                    (mContext).getBatteryPercent() < 1)) {
                 Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
                 return new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
             }

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -396,6 +396,7 @@ public void retryFailedUploads(Context context, Account account, UploadResult up
                         currentAccount = failedUpload.getAccount(context);
                     }
 
+                    charging = charging || Device.getBatteryStatus(context).getBatteryPercent() == 1;
                     if (!isPowerSaving && gotNetwork && checkIfUploadCanBeRetried(failedUpload, gotWifi, charging)) {
                             retry(context, currentAccount, failedUpload);
                         }
@@ -942,7 +943,7 @@ public void onTransferProgress(long progressRate, long totalTransferredSoFar,
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_WIFI);
                     } else if (mCurrentUpload.getIsChargingRequired() &&
-                            !Device.getBatteryStatus(MainApp.getAppContext()).isCharging()) {
+                            (!Device.getBatteryStatus(MainApp.getAppContext()).isCharging())) {
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_CHARGING);
                     } else if (!mCurrentUpload.getIsIgnoringPowerSaveMode() &&

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -354,7 +354,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             }
 
             // Check if charging conditions are met and delays the upload otherwise
-            if (mWhileChargingOnly && !Device.getBatteryStatus(mContext).isCharging()) {
+            if (mWhileChargingOnly && (!Device.getBatteryStatus(mContext).isCharging() && Device.getBatteryStatus
+                    (mContext).getBatteryPercent() < 1)) {
                 Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
                 return new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
             }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1117,6 +1117,7 @@ private void checkOcServer() {
                 uri = DisplayUtils.convertIdn(uri, true);
             } catch (IllegalArgumentException ex) {
                 // Let Owncloud library check the error of the malformed URI
+                Log_OC.e(TAG, "Error converting internationalized domain name " + uri, ex);
             }
 
             if (mHostUrlInput != null) {

File: src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -39,6 +39,7 @@
 import android.widget.TextView;
 
 import com.owncloud.android.R;
+import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.utils.ThemeUtils;
 
 import java.util.Formatter;
@@ -56,6 +57,7 @@
  */
 
 public class MediaControlView extends FrameLayout /* implements OnLayoutChangeListener, OnTouchListener */ implements OnClickListener, OnSeekBarChangeListener {
+    private static final String TAG = MediaControlView.class.getSimpleName();
 
     private MediaPlayerControl mPlayer;
     private Context mContext;
@@ -256,6 +258,7 @@ private void disableUnsupportedButtons() {
             // the canPause/canSeekXYZ methods. This is OK, it just means we
             // assume the media can be paused and seeked, and so we don't disable
             // the buttons.
+            Log_OC.i(TAG, "Old media interface detected");
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1294,6 +1294,7 @@ public void onReceive(Context context, Intent intent) {
                     DataHolderUtil.getInstance().delete(intent.getStringExtra(FileSyncAdapter.EXTRA_RESULT));
                 } catch (RuntimeException re) {
                     // we did not send this intent, so ignoring
+                    Log_OC.i(TAG, "Ignoring error deleting data");
                 }
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -245,6 +245,7 @@ private String readLogFile() {
                         br.close();
                     } catch (IOException e) {
                         // ignore
+                        Log_OC.d(TAG, "Error closing log reader", e);
                     }
                 }
             }

File: src/main/java/com/owncloud/android/ui/adapter/DiskLruImageCache.java
Patch:
@@ -97,7 +97,8 @@ public void put(String key, Bitmap data) {
                 if (editor != null) {
                     editor.abort();
                 }
-            } catch (IOException ignored) {
+            } catch (IOException ex) {
+                Log_OC.d(TAG, "Error aborting editor", ex);
             }
         }
     }

File: src/test/java/com/owncloud/android/authentication/AuthenticatorDataUrlTest.java
Patch:
@@ -31,8 +31,8 @@
  */
 @RunWith(BlockJUnit4ClassRunner.class)
 public class AuthenticatorDataUrlTest {
-    public static final String URL_PARSING = " url parsing";
-    public static final String INCORRECT_USER_VALUE_IN = "Incorrect user value in ";
+    private static final String URL_PARSING = " url parsing";
+    private static final String INCORRECT_USER_VALUE_IN = "Incorrect user value in ";
     private String schemeUrl = "nextcloud://login/";
     private String plus = "&";
 
@@ -152,6 +152,7 @@ public void tooManyDataUrlElements() {
                 Assert.fail("Illegal Argument Exception expected!");
             } catch (IllegalArgumentException e) {
                 // all well
+                System.out.println("Error with " + urlStart + dataUrl);
             }
         }
     }

File: src/main/java/com/owncloud/android/ui/dialog/SendShareDialog.java
Patch:
@@ -104,7 +104,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
 
         // Share via link button
         TextView shareLinkText = view.findViewById(R.id.share_link_button);
-        shareLinkText.setOnClickListener(v -> fileOperationsHelper.showShareFile(file));
+        shareLinkText.setOnClickListener(v -> shareFile(file));
 
         ImageView shareLinkImageView = view.findViewById(R.id.share_link_icon);
         shareLinkImageView.getBackground().setColorFilter(ThemeUtils.elementColor(), PorterDuff.Mode.SRC_IN);

File: src/main/java/com/owncloud/android/utils/ConnectivityUtils.java
Patch:
@@ -68,7 +68,8 @@ public static boolean isInternetWalled(Context context) {
                     int status = client.executeMethod(get);
                     
                     if (serverVersion.compareTo(OwnCloudVersion.nextcloud_13) > 0) {
-                        return !(status == 204 && get.getResponseContentLength() == -1);
+                        return !(status == 204 &&
+                                (get.getResponseContentLength() == -1 || get.getResponseContentLength() == 0));
                     } else {
                         if (status == 200) {
                             try {

File: src/main/java/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -32,6 +32,8 @@
 
 import com.owncloud.android.lib.common.utils.Log_OC;
 
+import java.util.Locale;
+
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 
@@ -218,7 +220,7 @@ public static String getDisplayNameForUri(Uri uri, Context context) {
                 // Add best possible extension
                 int index = displayName.lastIndexOf('.');
                 if (index == -1 || MimeTypeMap.getSingleton().
-                        getMimeTypeFromExtension(displayName.substring(index + 1)) == null) {
+                        getMimeTypeFromExtension(displayName.substring(index + 1).toLowerCase(Locale.ROOT)) == null) {
                     String mimeType = context.getContentResolver().getType(uri);
                     String extension = MimeTypeMap.getSingleton().getExtensionFromMimeType(mimeType);
                     if (extension != null) {

File: src/main/java/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -32,6 +32,8 @@
 
 import com.owncloud.android.lib.common.utils.Log_OC;
 
+import java.util.Locale;
+
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 
@@ -218,7 +220,7 @@ public static String getDisplayNameForUri(Uri uri, Context context) {
                 // Add best possible extension
                 int index = displayName.lastIndexOf('.');
                 if (index == -1 || MimeTypeMap.getSingleton().
-                        getMimeTypeFromExtension(displayName.substring(index + 1)) == null) {
+                        getMimeTypeFromExtension(displayName.substring(index + 1).toLowerCase(Locale.ROOT)) == null) {
                     String mimeType = context.getContentResolver().getType(uri);
                     String extension = MimeTypeMap.getSingleton().getExtensionFromMimeType(mimeType);
                     if (extension != null) {

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -592,7 +592,8 @@ private Cursor query(
             sqlQuery.setProjectionMap(projectionMap);
         }
 
-        if (selectionArgs == null) {
+        // if both are null, let them pass to query
+        if (selectionArgs == null && selection != null) {
             selectionArgs = new String[]{selection};
             selection = "(?)";
         }

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -1190,7 +1190,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
             }
 
             if (oldVersion < 26 && newVersion >= 26) {
-                Log_OC.i(SQL, "Entering in the #25 Adding text and element color to capabilities");
+                Log_OC.i(SQL, "Entering in the #26 Adding CRC32 column to filesystem table");
                 db.beginTransaction();
                 try {
                     db.execSQL(ALTER_TABLE + ProviderTableMeta.FILESYSTEM_TABLE_NAME +

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -139,7 +139,7 @@ public void storeOrUpdateFileValue(String localPath, long modifiedAt, boolean is
 
             if (data.getModifiedAt() != modifiedAt) {
                 long newCrc32 = getFileChecksum(localPath);
-                if (data.getCrc32() == null || (newCrc32 != -1 && data.getCrc32().equals(Long.toString(newCrc32)))) {
+                if (data.getCrc32() == null || (newCrc32 != -1 && !data.getCrc32().equals(Long.toString(newCrc32)))) {
                     cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_CRC32, Long.toString(newCrc32));
                     cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_SENT_FOR_UPLOAD, 0);
                 }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -224,7 +224,7 @@ public void onAttach(Context context) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         Log_OC.i(TAG, "onCreateView() start");
         View v = super.onCreateView(inflater, container, savedInstanceState);
-        bottomNavigationView = (BottomNavigationView) v.findViewById(R.id.bottom_navigation_view);
+        bottomNavigationView = v.findViewById(R.id.bottom_navigation_view);
 
         if (savedInstanceState != null) {
             currentSearchType = Parcels.unwrap(savedInstanceState.getParcelable(KEY_CURRENT_SEARCH_TYPE));
@@ -901,9 +901,9 @@ public void onItemClick(AdapterView<?> l, View v, int position, long id) {
                                 type = VirtualFolderType.NONE;
                                 break;
                         }
-                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, type, false);
+                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, type, !file.isDown());
                     } else {
-                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, false);
+                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, !file.isDown());
                     }
                 } else if (file.isDown() && MimeTypeUtil.isVCard(file)) {
                     ((FileDisplayActivity) mContainerActivity).startContactListFragment(file);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -224,7 +224,7 @@ public void onAttach(Context context) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         Log_OC.i(TAG, "onCreateView() start");
         View v = super.onCreateView(inflater, container, savedInstanceState);
-        bottomNavigationView = (BottomNavigationView) v.findViewById(R.id.bottom_navigation_view);
+        bottomNavigationView = v.findViewById(R.id.bottom_navigation_view);
 
         if (savedInstanceState != null) {
             currentSearchType = Parcels.unwrap(savedInstanceState.getParcelable(KEY_CURRENT_SEARCH_TYPE));
@@ -901,9 +901,9 @@ public void onItemClick(AdapterView<?> l, View v, int position, long id) {
                                 type = VirtualFolderType.NONE;
                                 break;
                         }
-                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, type, false);
+                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, type, !file.isDown());
                     } else {
-                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, false);
+                        ((FileDisplayActivity) mContainerActivity).startImagePreview(file, !file.isDown());
                     }
                 } else if (file.isDown() && MimeTypeUtil.isVCard(file)) {
                     ((FileDisplayActivity) mContainerActivity).startContactListFragment(file);

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -247,6 +247,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         // service when the upload finishes
                     } else {
                         // TODO CHECK: is this really useful in some point in the code?
+                        mServerFile.setFavorite(mLocalFile.getIsFavorite());
                         mServerFile.setAvailableOffline(mLocalFile.isAvailableOffline());
                         mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
                         mServerFile.setStoragePath(mLocalFile.getStoragePath());

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -352,7 +352,7 @@ protected void onPostExecute(Bitmap bitmap) {
                         }
                     }
                 } else {
-                    if (ConnectivityUtils.isAppConnected(MainApp.getAppContext())) {
+                    if (!ConnectivityUtils.isInternetWalled(MainApp.getAppContext())) {
                         previewImageFragment.setErrorPreviewMessage();
                     } else {
                         previewImageFragment.setNoConnectionErrorMessage();

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -229,7 +229,7 @@ public static void restartJobsIfNeeded() {
             }
         }
 
-        if (!Device.getNetworkType(context).equals(JobRequest.NetworkType.ANY) ||
+        if (!Device.getNetworkType(context).equals(JobRequest.NetworkType.ANY) &&
                 !ConnectivityUtils.isInternetWalled(context)) {
             uploadRequester.retryFailedUploads(
                     context,

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -592,7 +592,8 @@ private Cursor query(
             sqlQuery.setProjectionMap(projectionMap);
         }
 
-        if (selectionArgs == null) {
+        // if both are null, let them pass to query
+        if (selectionArgs == null && selection != null) {
             selectionArgs = new String[]{selection};
             selection = "(?)";
         }

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -47,7 +47,7 @@
 import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.FilesSyncHelper;
 import com.owncloud.android.utils.MimeTypeUtil;
-import com.owncloud.android.utils.UploadUtils;
+import com.owncloud.android.utils.PowerUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -86,7 +86,7 @@ protected Result onRunJob(Params params) {
         final boolean overridePowerSaving = bundle.getBoolean(OVERRIDE_POWER_SAVING, false);
 
         // If we are in power save mode, better to postpone upload
-        if (UploadUtils.isPowerSaveMode(context) && !overridePowerSaving) {
+        if (PowerUtils.isPowerSaveMode(context) && !overridePowerSaving) {
             return Result.SUCCESS;
         }
 

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -29,7 +29,7 @@
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.support.PersistableBundleCompat;
 import com.owncloud.android.utils.FilesSyncHelper;
-import com.owncloud.android.utils.UploadUtils;
+import com.owncloud.android.utils.PowerUtils;
 
 /*
     Job that triggers new FilesSyncJob in case new photo or video were detected
@@ -43,7 +43,7 @@ public boolean onStartJob(JobParameters params) {
             if (params.getJobId() == FilesSyncHelper.ContentSyncJobId && params.getTriggeredContentAuthorities()
                     != null && params.getTriggeredContentUris() != null
                     && params.getTriggeredContentUris().length > 0
-                    && !UploadUtils.isPowerSaveMode(getApplicationContext())) {
+                    && !PowerUtils.isPowerSaveMode(getApplicationContext())) {
 
                 PersistableBundleCompat persistableBundleCompat = new PersistableBundleCompat();
                 persistableBundleCompat.putBoolean(FilesSyncJob.SKIP_CUSTOM, true);

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -63,7 +63,7 @@ public static void registerPowerChangeReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (intent.getAction().equals(Intent.ACTION_POWER_CONNECTED)) {
+                if (intent.getAction() != null && intent.getAction().equals(Intent.ACTION_POWER_CONNECTED)) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -48,7 +48,7 @@
 import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.MimeType;
 import com.owncloud.android.utils.MimeTypeUtil;
-import com.owncloud.android.utils.UploadUtils;
+import com.owncloud.android.utils.PowerUtils;
 import com.owncloud.android.utils.UriUtils;
 
 import org.apache.commons.httpclient.HttpStatus;
@@ -354,7 +354,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             }
 
             // Check that device is not in power save mode
-            if (!mIgnoringPowerSaveMode && UploadUtils.isPowerSaveMode(mContext)) {
+            if (!mIgnoringPowerSaveMode && PowerUtils.isPowerSaveMode(mContext)) {
                 Log_OC.d(TAG, "Upload delayed because device is in power save mode: " + getRemotePath());
                 return new RemoteOperationResult(ResultCode.DELAYED_IN_POWER_SAVE_MODE);
             }

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -81,7 +81,7 @@ public static void registerPowerSaveReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (!UploadUtils.isPowerSaveMode(context)) {
+                if (!PowerUtils.isPowerSaveMode(context)) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -34,6 +34,7 @@
 import com.evernote.android.job.JobManager;
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.support.PersistableBundleCompat;
+import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -113,10 +114,10 @@ public static void startContactBackupJob(Account account) {
         PersistableBundleCompat bundle = new PersistableBundleCompat();
         bundle.putString(ContactsBackupJob.ACCOUNT, account.name);
 
+        cancelContactBackupJobForAccount(MainApp.getAppContext(), account);
+
         new JobRequest.Builder(ContactsBackupJob.TAG)
                 .setExtras(bundle)
-                .setRequiresCharging(false)
-                .setUpdateCurrent(true)
                 .setPeriodic(24 * 60 * 60 * 1000)
                 .build()
                 .schedule();

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -316,7 +316,6 @@ private void startContactsBackupJob() {
         new JobRequest.Builder(ContactsBackupJob.TAG)
                 .setExtras(bundle)
                 .startNow()
-                .setRequiresCharging(false)
                 .setUpdateCurrent(false)
                 .build()
                 .schedule();

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -922,7 +922,7 @@ public void onTransferProgress(long progressRate, long totalTransferredSoFar,
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_WIFI);
                     } else if (mCurrentUpload.getIsChargingRequired() &&
-                            !Device.isCharging(MainApp.getAppContext())) {
+                            !Device.getBatteryStatus(MainApp.getAppContext()).isCharging()) {
                         cancel(mCurrentUpload.getAccount().name, mCurrentUpload.getFile().getRemotePath()
                                 , ResultCode.DELAYED_FOR_CHARGING);
                     } else if (

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -348,7 +348,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             }
 
             // Check if charging conditions are met and delays the upload otherwise
-            if (mWhileChargingOnly && !Device.isCharging(mContext)) {
+            if (mWhileChargingOnly && !Device.getBatteryStatus(mContext).isCharging()) {
                 Log_OC.d(TAG, "Upload delayed until the device is charging: " + getRemotePath());
                 return new RemoteOperationResult(ResultCode.DELAYED_FOR_CHARGING);
             }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -2015,7 +2015,7 @@ public void startImagePreview(OCFile file, boolean showPreview) {
         Intent showDetailsIntent = new Intent(this, PreviewImageActivity.class);
         showDetailsIntent.putExtra(EXTRA_FILE, file);
         showDetailsIntent.putExtra(EXTRA_ACCOUNT, getAccount());
-        if (showPreview && file.isDown() && !file.isDownloading()) {
+        if (showPreview) {
             startActivity(showDetailsIntent);
         } else {
             FileOperationsHelper fileOperationsHelper = new FileOperationsHelper(this);
@@ -2034,7 +2034,7 @@ public void startImagePreview(OCFile file, VirtualFolderType type, boolean showP
         showDetailsIntent.putExtra(EXTRA_ACCOUNT, getAccount());
         showDetailsIntent.putExtra(PreviewImageActivity.EXTRA_VIRTUAL_TYPE, type);
 
-        if (showPreview && file.isDown() && !file.isDownloading()) {
+        if (showPreview) {
             startActivity(showDetailsIntent);
         } else {
             FileOperationsHelper fileOperationsHelper = new FileOperationsHelper(this);
@@ -2074,7 +2074,7 @@ public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean au
      * @param file Text {@link OCFile} to preview.
      */
     public void startTextPreview(OCFile file, boolean showPreview) {
-        if (showPreview && file.isDown() && !file.isDownloading()) {
+        if (showPreview) {
             Bundle args = new Bundle();
             args.putParcelable(EXTRA_FILE, file);
             args.putParcelable(EXTRA_ACCOUNT, getAccount());

File: src/main/java/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -247,6 +247,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         // service when the upload finishes
                     } else {
                         // TODO CHECK: is this really useful in some point in the code?
+                        mServerFile.setFavorite(mLocalFile.getIsFavorite());
                         mServerFile.setAvailableOffline(mLocalFile.isAvailableOffline());
                         mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
                         mServerFile.setStoragePath(mLocalFile.getStoragePath());

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -62,6 +62,7 @@
 import com.owncloud.android.media.MediaService;
 import com.owncloud.android.media.MediaServiceBinder;
 import com.owncloud.android.ui.activity.FileActivity;
+import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
@@ -692,6 +693,8 @@ private void bindMediaService() {
                                     mMediaServiceConnection,
                                     Context.BIND_AUTO_CREATE);
             // follow the flow in MediaServiceConnection#onServiceConnected(...)
+
+        ((FileDisplayActivity) getActivity()).setMediaServiceConnection();
     }
 
     /** Defines callbacks for service binding, passed to bindService() */

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -171,9 +171,6 @@ public class FileDisplayActivity extends HookActivity
     private MediaServiceBinder mMediaServiceBinder =  null;
     private MediaServiceConnection mMediaServiceConnection = null;
 
-    private MediaServiceBinder mMediaServiceBinder =  null;
-    private MediaServiceConnection mMediaServiceConnection = null;
-
     private String searchQuery;
 
     private SearchView searchView;

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -268,7 +268,7 @@ private void setupDrawerHeader() {
         mAccountMiddleAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_middle);
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 
-        mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toogle);
+        mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toggle);
         mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor());
 
         if (getResources().getBoolean(R.bool.allow_profile_click)) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -268,7 +268,7 @@ private void setupDrawerHeader() {
         mAccountMiddleAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_middle);
         mAccountEndAccountAvatar = (ImageView) findNavigationViewChildById(R.id.drawer_account_end);
 
-        mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toogle);
+        mAccountChooserToggle = (ImageView) findNavigationViewChildById(R.id.drawer_account_chooser_toggle);
         mAccountChooserToggle.setColorFilter(ThemeUtils.fontColor());
 
         if (getResources().getBoolean(R.bool.allow_profile_click)) {

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -57,7 +57,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.webkit.URLUtil;
-import android.widget.Toast;
 
 import com.owncloud.android.BuildConfig;
 import com.owncloud.android.MainApp;

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -291,6 +291,8 @@ public int compare(SyncedFolderDisplayItem f1, SyncedFolderDisplayItem f2) {
                     return -1;
                 } else if (f2.getFolderName() == null) {
                     return 1;
+                } else if (PRIORITIZED_FOLDER.equals(f1.getFolderName()) && PRIORITIZED_FOLDER.equals(f2.getFolderName())) {
+                    return 0;
                 } else if (PRIORITIZED_FOLDER.equals(f1.getFolderName())) {
                     return -1;
                 } else if (PRIORITIZED_FOLDER.equals(f2.getFolderName())) {

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -291,6 +291,8 @@ public int compare(SyncedFolderDisplayItem f1, SyncedFolderDisplayItem f2) {
                     return -1;
                 } else if (f2.getFolderName() == null) {
                     return 1;
+                } else if (PRIORITIZED_FOLDER.equals(f1.getFolderName()) && PRIORITIZED_FOLDER.equals(f2.getFolderName())) {
+                    return 0;
                 } else if (PRIORITIZED_FOLDER.equals(f1.getFolderName())) {
                     return -1;
                 } else if (PRIORITIZED_FOLDER.equals(f2.getFolderName())) {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -443,7 +443,6 @@ public void onClick(View v) {
                                 // initialize general UI elements
                                 initOverallUi();
 
-                                mHostUrlInput.setText(baseURL);
                                 mPasswordInputLayout.setVisibility(View.VISIBLE);
                                 mUsernameInputLayout.setVisibility(View.VISIBLE);
                                 mUsernameInput.requestFocus();
@@ -456,11 +455,13 @@ public void onClick(View v) {
 
                                 initServerPreFragment(null);
 
+                                mHostUrlInput.setText(baseURL);
+
                                 checkOcServer();
                             }
                         }).show();
             }
-        }, 60000);
+        }, 1000);
     }
 
     private void parseAndLoginFromWebView(String dataString) {

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -220,7 +220,6 @@ public static void colorHorizontalSeekBar(SeekBar seekBar) {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             seekBar.getThumb().setColorFilter(color, PorterDuff.Mode.SRC_IN);
-            seekBar.getThumb().setColorFilter(color, PorterDuff.Mode.SRC_IN);
         }
     }
 

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -123,7 +123,7 @@ public void onCreate() {
 
 
         if (BuildConfig.DEBUG || getApplicationContext().getResources().getBoolean(R.bool.logger_enabled) ||
-                appPrefs.getBoolean(Preferences.EXPERT_MODE, false)) {
+                appPrefs.getBoolean(Preferences.PREFERENCE_EXPERT_MODE, false)) {
             // use app writable dir, no permissions needed
             Log_OC.startLogging(getAppContext());
             Log_OC.d("Debug", "start logging");

File: src/main/java/com/owncloud/android/operations/UpdateOCVersionOperation.java
Patch:
@@ -24,7 +24,6 @@
 import android.accounts.AccountManager;
 import android.content.Context;
 
-import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.accounts.AccountUtils.Constants;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
@@ -46,6 +45,8 @@ public class UpdateOCVersionOperation extends RemoteOperation {
 
     private static final String TAG = UpdateOCVersionOperation.class.getSimpleName();
 
+    private static final String STATUS_PATH = "/status.php";
+
     private Account mAccount;
     private Context mContext;
     private OwnCloudVersion mOwnCloudVersion;
@@ -62,7 +63,7 @@ public UpdateOCVersionOperation(Account account, Context context) {
     protected RemoteOperationResult run(OwnCloudClient client) {
         AccountManager accountMngr = AccountManager.get(mContext); 
         String statUrl = accountMngr.getUserData(mAccount, Constants.KEY_OC_BASE_URL);
-        statUrl += AccountUtils.STATUS_PATH;
+        statUrl += STATUS_PATH;
         RemoteOperationResult result = null;
         GetMethod getMethod = null;
 

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -1348,8 +1348,6 @@ private void createFileSystemTable(SQLiteDatabase db) {
      * structure to include in it the path to the server instance. Updating the account names and path to local files
      * in the files table is a must to keep the existing account working and the database clean.
      *
-     * See {@link com.owncloud.android.authentication.AccountUtils#updateAccountVersion(android.content.Context)}
-     *
      * @param db Database where table of files is included.
      */
     private void updateAccountName(SQLiteDatabase db) {

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -125,7 +125,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
 
         findViewById(R.id.toolbar).post(() -> {
-            if (!appPrefs.getBoolean("expert_mode", false)) {
+            if (!appPrefs.getBoolean(Preferences.PREFERENCE_EXPERT_MODE, false)) {
                 findViewById(R.id.app_bar).getLayoutParams().height = findViewById(R.id.toolbar).getHeight();
 
                 AppBarLayout.LayoutParams p = (AppBarLayout.LayoutParams) mCollapsingToolbarLayout.getLayoutParams();

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -79,7 +79,6 @@ public class UploadFilesActivity extends FileActivity implements
     private boolean mSelectAll = false;
     private boolean mLocalFolderPickerMode = false;
     private LocalFileListFragment mFileListFragment;
-    private Button mCancelBtn;
     protected Button mUploadBtn;
     private Spinner mBehaviourSpinner;
     private Account mAccountOnCreation;
@@ -151,8 +150,8 @@ public void onCreate(Bundle savedInstanceState) {
         mFileListFragment = (LocalFileListFragment) getSupportFragmentManager().findFragmentById(R.id.local_files_list);
         
         // Set input controllers
-        mCancelBtn = (Button) findViewById(R.id.upload_files_btn_cancel);
-        mCancelBtn.setOnClickListener(this);
+        findViewById(R.id.upload_files_btn_cancel).setOnClickListener(this);
+
         mUploadBtn = (AppCompatButton) findViewById(R.id.upload_files_btn_upload);
         mUploadBtn.getBackground().setColorFilter(ThemeUtils.primaryAccentColor(), PorterDuff.Mode.SRC_ATOP);
         mUploadBtn.setOnClickListener(this);

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -61,7 +61,7 @@
 
 import java.io.File;
 
-import static com.owncloud.android.ui.activity.Preferences.EXPERT_MODE;
+import static com.owncloud.android.ui.activity.Preferences.PREFERENCE_EXPERT_MODE;
 
 /**
  * Activity listing pending, active, and completed uploads. User can delete
@@ -255,7 +255,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public boolean onCreateOptionsMenu(Menu menu) {
         SharedPreferences appPrefs =
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        if (appPrefs.getBoolean(EXPERT_MODE, false)) {
+        if (appPrefs.getBoolean(PREFERENCE_EXPERT_MODE, false)) {
             MenuInflater inflater = getMenuInflater();
             inflater.inflate(R.menu.upload_list_menu, menu);
             mMenu = menu;

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -72,7 +72,6 @@ public class SearchShareesFragment extends Fragment implements ShareUserListAdap
 
     // other members
     private ArrayList<OCShare> mShares;
-    private ShareUserListAdapter mUserGroupsAdapter = null;
     private ShareFragmentListener mListener;
 
 
@@ -183,7 +182,7 @@ public void refreshUsersOrGroupsListFromDB (){
     private void updateListOfUserGroups() {
         // Update list of users/groups
         // TODO Refactoring: create a new {@link ShareUserListAdapter} instance with every call should not be needed
-        mUserGroupsAdapter = new ShareUserListAdapter(
+        ShareUserListAdapter userGroupsAdapter = new ShareUserListAdapter(
                 getActivity().getApplicationContext(),
                 R.layout.share_user_item, mShares, this
         );
@@ -193,7 +192,7 @@ private void updateListOfUserGroups() {
 
         if (mShares.size() > 0) {
             usersList.setVisibility(View.VISIBLE);
-            usersList.setAdapter(mUserGroupsAdapter);
+            usersList.setAdapter(userGroupsAdapter);
 
         } else {
             usersList.setVisibility(View.GONE);

File: src/main/java/com/owncloud/android/operations/GetServerInfoOperation.java
Patch:
@@ -119,7 +119,7 @@ private String trimWebdavSuffix(String url) {
             if (trimmedUrl.endsWith("/")) {
                 trimmedUrl = trimmedUrl.substring(0, trimmedUrl.length() - 1);
             }
-            if(trimmedUrl.toLowerCase().endsWith(AuthenticatorUrlUtils.WEBDAV_PATH_4_0_AND_LATER)){
+            if (trimmedUrl.toLowerCase().endsWith(AuthenticatorUrlUtils.WEBDAV_PATH_4_0_AND_LATER)) {
                 trimmedUrl = trimmedUrl.substring(0,
                         trimmedUrl.length() - AuthenticatorUrlUtils.WEBDAV_PATH_4_0_AND_LATER.length());
             }

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -150,8 +150,8 @@ public void onCreate(Bundle savedInstanceState) {
         mFileListFragment = (LocalFileListFragment) getSupportFragmentManager().findFragmentById(R.id.local_files_list);
         
         // Set input controllers
-        Button mCancelBtn = (Button) findViewById(R.id.upload_files_btn_cancel);
-        mCancelBtn.setOnClickListener(this);
+        findViewById(R.id.upload_files_btn_cancel).setOnClickListener(this);
+
         mUploadBtn = (AppCompatButton) findViewById(R.id.upload_files_btn_upload);
         mUploadBtn.getBackground().setColorFilter(ThemeUtils.primaryAccentColor(), PorterDuff.Mode.SRC_ATOP);
         mUploadBtn.setOnClickListener(this);

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -182,7 +182,7 @@ public void refreshUsersOrGroupsListFromDB (){
     private void updateListOfUserGroups() {
         // Update list of users/groups
         // TODO Refactoring: create a new {@link ShareUserListAdapter} instance with every call should not be needed
-        ShareUserListAdapter mUserGroupsAdapter = new ShareUserListAdapter(
+        ShareUserListAdapter userGroupsAdapter = new ShareUserListAdapter(
                 getActivity().getApplicationContext(),
                 R.layout.share_user_item, mShares, this
         );
@@ -192,7 +192,7 @@ private void updateListOfUserGroups() {
 
         if (mShares.size() > 0) {
             usersList.setVisibility(View.VISIBLE);
-            usersList.setAdapter(mUserGroupsAdapter);
+            usersList.setAdapter(userGroupsAdapter);
 
         } else {
             usersList.setVisibility(View.GONE);

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -443,14 +443,14 @@ protected void playMedia() {
             createMediaPlayerIfNeeded();
             mPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
             String url = mFile.getStoragePath();
-            boolean mIsStreaming = false;
+
             /* Streaming is not possible right now
             if (url == null || url.length() <= 0) {
                 url = AccountUtils.constructFullURLForAccount(this, mAccount) + mFile.getRemotePath();
             }
             mIsStreaming = url.startsWith("http:") || url.startsWith("https:");
             */
-
+            //mIsStreaming = false;
             mPlayer.setDataSource(url);
 
             mState = State.PREPARING;

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -119,8 +119,7 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell
             } while (!file.isDown());
         }
 
-        return ParcelFileDescriptor.open(
-                new File(file.getStoragePath()), ParcelFileDescriptor.MODE_READ_ONLY);
+        return ParcelFileDescriptor.open(new File(file.getStoragePath()), ParcelFileDescriptor.parseMode(mode));
     }
 
     @Override

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -129,11 +129,11 @@ public void onCreate() {
             Log_OC.d("Debug", "start logging");
         }
 
-        if (Build.VERSION.SDK_INT >= 24){
+        if (Build.VERSION.SDK_INT >= 24) {
             try {
                 Method m = StrictMode.class.getMethod("disableDeathOnFileUriExposure");
                 m.invoke(null);
-            } catch(Exception e){
+            } catch (Exception e) {
                 Log_OC.d("Debug", "Failed to disable uri exposure");
             }
         }

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -119,8 +119,7 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell
             } while (!file.isDown());
         }
 
-        return ParcelFileDescriptor.open(
-                new File(file.getStoragePath()), ParcelFileDescriptor.parseMode(mode));
+        return ParcelFileDescriptor.open(new File(file.getStoragePath()), ParcelFileDescriptor.parseMode(mode));
     }
 
     @Override

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -134,7 +134,7 @@ public void onCreate() {
                 Method m = StrictMode.class.getMethod("disableDeathOnFileUriExposure");
                 m.invoke(null);
             } catch(Exception e){
-                e.printStackTrace();
+                Log_OC.d("Debug", "Failed to disable uri exposure");
             }
         }
 

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -120,7 +120,7 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell
         }
 
         return ParcelFileDescriptor.open(
-                new File(file.getStoragePath()), ParcelFileDescriptor.MODE_READ_ONLY);
+                new File(file.getStoragePath()), ParcelFileDescriptor.parseMode(mode));
     }
 
     @Override

File: src/main/java/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -118,16 +118,15 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         Log_OC.d(TAG, "Authentication method found: " + authenticationMethodToString(authMethod));
         
         if (!authMethod.equals(AuthenticationMethod.UNKNOWN)) {
-            result = new RemoteOperationResult(true, result.getHttpCode(), null);
+            result = new RemoteOperationResult(true, result.getHttpCode(), result.getHttpPhrase(), null);
         }
-        ArrayList<Object> data = new ArrayList<Object>();
+        ArrayList<Object> data = new ArrayList<>();
         data.add(authMethod);
         result.setData(data);
         return result;  // same result instance, so that other errors
                         // can be handled by the caller transparently
 	}
 	
-	
 	private String authenticationMethodToString(AuthenticationMethod value) {
 	    switch (value){
 	    case NONE:

File: src/main/java/com/owncloud/android/operations/OAuth2GetAccessToken.java
Patch:
@@ -100,15 +100,15 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         result = new RemoteOperationResult(ResultCode.OAUTH2_ERROR);
                     
                     } else {
-                        result = new RemoteOperationResult(true, status, postMethod.getResponseHeaders());
-                        ArrayList<Object> data = new ArrayList<Object>();
+                        result = new RemoteOperationResult(true, postMethod);
+                        ArrayList<Object> data = new ArrayList<>();
                         data.add(mResultTokenMap);
                         result.setData(data);
                     }
                     
                 } else {
+                    result = new RemoteOperationResult(false, postMethod);
                     client.exhaustResponse(postMethod.getResponseBodyAsStream());
-                    result = new RemoteOperationResult(false, status, postMethod.getResponseHeaders());
                 }
             }
             

File: src/main/java/com/owncloud/android/ui/dialog/CredentialsDialogFragment.java
Patch:
@@ -139,7 +139,7 @@ public void onClick(DialogInterface dialog, int which) {
 
         } else if (which == AlertDialog.BUTTON_NEGATIVE) {
             mWebView.stopLoading();
-            ((AuthenticatorActivity)getActivity()).doNegativeAuthenticatioDialogClick();
+            ((AuthenticatorActivity)getActivity()).doNegativeAuthenticationDialogClick();
         }
 
         dialog.dismiss();

File: src/main/java/com/owncloud/android/ui/dialog/CredentialsDialogFragment.java
Patch:
@@ -139,7 +139,7 @@ public void onClick(DialogInterface dialog, int which) {
 
         } else if (which == AlertDialog.BUTTON_NEGATIVE) {
             mWebView.stopLoading();
-            ((AuthenticatorActivity)getActivity()).doNegativeAuthenticatioDialogClick();
+            ((AuthenticatorActivity)getActivity()).doNegativeAuthenticationDialogClick();
         }
 
         dialog.dismiss();

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1999,7 +1999,7 @@ public void onRegisterClick(View view) {
      * to the last check on the ownCloud server.
      */
     private void showServerStatus() {
-        if (mServerStatusIcon == 0 && mServerStatusText == 0 || forceOldLoginMethod) {
+        if (mServerStatusIcon == 0 && "".equals(mServerStatusText) || forceOldLoginMethod) {
             mServerStatusView.setVisibility(View.INVISIBLE);
         } else {
             mServerStatusView.setText(mServerStatusText);

File: src/main/java/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -42,6 +42,7 @@
 import com.owncloud.android.datamodel.UploadsStorageManager;
 import com.owncloud.android.datamodel.UploadsStorageManager.UploadStatus;
 import com.owncloud.android.db.OCUpload;
+import com.owncloud.android.db.UploadResult;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -359,7 +360,7 @@ public void onClick(View v) {
             // retry
             if (upload.getUploadStatus() == UploadStatus.UPLOAD_FAILED) {
                 if (UploadResult.CREDENTIAL_ERROR.equals(upload.getLastResult())) {
-                    view.setOnClickListener(new OnClickListener() {
+                    view.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View v) {
                             mParentActivity.getFileOperationsHelper().checkCurrentCredentials(
@@ -370,7 +371,7 @@ public void onClick(View v) {
 
                 } else {
                     // not a credentials error
-                    view.setOnClickListener(new OnClickListener() {
+                    view.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View v) {
                         File file = new File(upload.getLocalPath());

File: src/main/java/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -118,16 +118,15 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         Log_OC.d(TAG, "Authentication method found: " + authenticationMethodToString(authMethod));
         
         if (!authMethod.equals(AuthenticationMethod.UNKNOWN)) {
-            result = new RemoteOperationResult(true, result.getHttpCode(), null);
+            result = new RemoteOperationResult(true, result.getHttpCode(), result.getHttpPhrase(), null);
         }
-        ArrayList<Object> data = new ArrayList<Object>();
+        ArrayList<Object> data = new ArrayList<>();
         data.add(authMethod);
         result.setData(data);
         return result;  // same result instance, so that other errors
                         // can be handled by the caller transparently
 	}
 	
-	
 	private String authenticationMethodToString(AuthenticationMethod value) {
 	    switch (value){
 	    case NONE:

File: src/main/java/com/owncloud/android/operations/OAuth2GetAccessToken.java
Patch:
@@ -100,15 +100,15 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         result = new RemoteOperationResult(ResultCode.OAUTH2_ERROR);
                     
                     } else {
-                        result = new RemoteOperationResult(true, status, postMethod.getResponseHeaders());
-                        ArrayList<Object> data = new ArrayList<Object>();
+                        result = new RemoteOperationResult(true, postMethod);
+                        ArrayList<Object> data = new ArrayList<>();
                         data.add(mResultTokenMap);
                         result.setData(data);
                     }
                     
                 } else {
+                    result = new RemoteOperationResult(false, postMethod);
                     client.exhaustResponse(postMethod.getResponseBodyAsStream());
-                    result = new RemoteOperationResult(false, status, postMethod.getResponseHeaders());
                 }
             }
             

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -119,7 +119,9 @@ public void onCreate() {
         // initialise thumbnails cache on background thread
         new ThumbnailsCacheManager.InitDiskCacheTask().execute();
 
-        if (BuildConfig.DEBUG) {
+
+        if (BuildConfig.DEBUG || getApplicationContext().getResources().getBoolean(R.bool.logger_enabled) ||
+                appPrefs.getBoolean(Preferences.EXPERT_MODE, false)) {
             // use app writable dir, no permissions needed
             Log_OC.startLogging(getAppContext());
             Log_OC.d("Debug", "start logging");

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -62,6 +62,8 @@
 
 import java.io.File;
 
+import static com.owncloud.android.ui.activity.Preferences.EXPERT_MODE;
+
 /**
  * Activity listing pending, active, and completed uploads. User can delete
  * completed uploads from view. Content of this list of coming from
@@ -76,8 +78,6 @@ public class UploadListActivity extends FileActivity implements UploadListFragme
 
     private static final String SCREEN_NAME = "Uploads";
 
-    private static final String EXPERT_MODE = "expert_mode";
-
     private UploadMessagesReceiver mUploadMessagesReceiver;
 
     private Menu mMenu;

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -62,6 +62,8 @@
 
 import java.io.File;
 
+import static com.owncloud.android.ui.activity.Preferences.EXPERT_MODE;
+
 /**
  * Activity listing pending, active, and completed uploads. User can delete
  * completed uploads from view. Content of this list of coming from

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -51,7 +51,6 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.Preferences;
 import com.owncloud.android.ui.activity.SyncedFoldersActivity;
-import com.owncloud.android.ui.activity.UploadListActivity;
 import com.owncloud.android.ui.activity.WhatsNewActivity;
 import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.FilesSyncHelper;
@@ -122,7 +121,7 @@ public void onCreate() {
 
 
         if (BuildConfig.DEBUG || getApplicationContext().getResources().getBoolean(R.bool.logger_enabled) ||
-                appPrefs.getBoolean(UploadListActivity.EXPERT_MODE, false)) {
+                appPrefs.getBoolean(Preferences.EXPERT_MODE, false)) {
             // use app writable dir, no permissions needed
             Log_OC.startLogging(getAppContext());
             Log_OC.d("Debug", "start logging");

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -76,8 +76,6 @@ public class UploadListActivity extends FileActivity implements UploadListFragme
 
     private static final String SCREEN_NAME = "Uploads";
 
-    public static final String EXPERT_MODE = "expert_mode";
-
     private UploadMessagesReceiver mUploadMessagesReceiver;
 
     private Menu mMenu;

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -76,7 +76,7 @@ public class UploadListActivity extends FileActivity implements UploadListFragme
 
     private static final String SCREEN_NAME = "Uploads";
 
-    private static final String EXPERT_MODE = "expert_mode";
+    public static final String EXPERT_MODE = "expert_mode";
 
     private UploadMessagesReceiver mUploadMessagesReceiver;
 

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -701,7 +701,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     private void setupActionBarSubtitle() {
         if (isHaveMultipleAccount()) {
             ActionBar actionBar = getSupportActionBar();
-            if(actionBar != null){
+            if (actionBar != null) {
                 actionBar.setSubtitle(getAccount().name);
             }
         }

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -532,7 +532,7 @@ public void onOverflowIconClick(View view, OCFile file) {
                 getActivity(),
                 true
         );
-        mf.filter(popup.getMenu(), false);
+        mf.filter(popup.getMenu(), true);
         popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
             @Override
             public boolean onMenuItemClick(MenuItem item) {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -532,7 +532,7 @@ public void onOverflowIconClick(View view, OCFile file) {
                 getActivity(),
                 true
         );
-        mf.filter(popup.getMenu());
+        mf.filter(popup.getMenu(), false);
         popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
             @Override
             public boolean onMenuItemClick(MenuItem item) {

File: src/main/java/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -85,8 +85,7 @@ public FileMenuFilter(int numberOfAllFiles, Collection<OCFile> targetFiles, Acco
      */
     public FileMenuFilter(OCFile targetFile, Account account, ComponentsGetter cg, Context context,
                           boolean overflowMenu) {
-        this(1, Collections.singletonList(targetFile), account, cg, context,
-                overflowMenu);
+        this(1, Collections.singletonList(targetFile), account, cg, context, overflowMenu);
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -141,7 +141,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (mContainerActivity.isFolderPickerMode()) {
-            menu.removeItem(R.id.action_select_all);
+            menu.removeItem(R.id.action_select_all_action_menu);
             menu.removeItem(R.id.action_search);
         } else {
             super.onCreateOptionsMenu(menu, inflater);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -634,7 +634,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                     mContainerActivity,
                     getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, false);
             return true;
         }
 
@@ -1006,11 +1006,11 @@ public boolean onFileActionChosen(int menuId) {
                 getActivity().startActivityForResult(action, FileDisplayActivity.REQUEST_CODE__COPY_FILES);
                 return true;
             }
-            case R.id.action_select_all: {
+            case R.id.action_select_all_action_menu: {
                 selectAllFiles(true);
                 return true;
             }
-            case R.id.action_deselect_all: {
+            case R.id.action_deselect_all_action_menu: {
                 selectAllFiles(false);
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -218,7 +218,7 @@ public void onPrepareOptionsMenu(Menu menu) {
                 mContainerActivity,
                 getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, true);
         }
 
         // additional restriction for this fragment 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -141,7 +141,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (mContainerActivity.isFolderPickerMode()) {
-            menu.removeItem(R.id.action_select_all);
+            menu.removeItem(R.id.action_select_all_action_menu);
             menu.removeItem(R.id.action_search);
         } else {
             super.onCreateOptionsMenu(menu, inflater);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -634,7 +634,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                     mContainerActivity,
                     getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, false);
             return true;
         }
 
@@ -1006,11 +1006,11 @@ public boolean onFileActionChosen(int menuId) {
                 getActivity().startActivityForResult(action, FileDisplayActivity.REQUEST_CODE__COPY_FILES);
                 return true;
             }
-            case R.id.action_select_all: {
+            case R.id.action_select_all_action_menu: {
                 selectAllFiles(true);
                 return true;
             }
-            case R.id.action_deselect_all: {
+            case R.id.action_deselect_all_action_menu: {
                 selectAllFiles(false);
                 return true;
             }

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -277,7 +277,7 @@ public void onPrepareOptionsMenu(Menu menu) {
                     mContainerActivity,
                     getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, true);
         }
 
         // additional restriction for this fragment 

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -377,7 +377,7 @@ public void onPrepareOptionsMenu(Menu menu) {
                 mContainerActivity,
                 getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, true);
         }
 
         // additional restriction for this fragment 

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -287,7 +287,7 @@ public void onPrepareOptionsMenu(Menu menu) {
                     mContainerActivity,
                     getActivity()
             );
-            mf.filter(menu);
+            mf.filter(menu, true);
         }
 
         // additional restriction for this fragment

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -44,7 +44,7 @@ public static void registerNetworkChangeReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (Device.getNetworkType(context).equals(JobRequest.NetworkType.UNMETERED)) {
+                if (!Device.getNetworkType(context).equals(JobRequest.NetworkType.ANY)) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -44,7 +44,7 @@ public static void registerNetworkChangeReceiver() {
         BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
-                if (Device.getNetworkType(context).equals(JobRequest.NetworkType.UNMETERED)) {
+                if (!Device.getNetworkType(context).equals(JobRequest.NetworkType.ANY)) {
                     FilesSyncHelper.restartJobsIfNeeded();
                 }
             }

File: src/main/java/com/owncloud/android/db/PreferenceManager.java
Patch:
@@ -295,7 +295,7 @@ public static void setUploaderBehaviour(Context context, int uploaderBehaviour)
      * @return grid columns     grid columns
      */
     public static float getGridColumns(Context context) {
-        return getDefaultSharedPreferences(context).getFloat(AUTO_PREF__GRID_COLUMNS, -1.0f);
+        return getDefaultSharedPreferences(context).getFloat(AUTO_PREF__GRID_COLUMNS, 4.0f);
     }
 
     /**

File: src/main/java/com/owncloud/android/db/PreferenceManager.java
Patch:
@@ -295,7 +295,7 @@ public static void setUploaderBehaviour(Context context, int uploaderBehaviour)
      * @return grid columns     grid columns
      */
     public static float getGridColumns(Context context) {
-        return getDefaultSharedPreferences(context).getFloat(AUTO_PREF__GRID_COLUMNS, -1.0f);
+        return getDefaultSharedPreferences(context).getFloat(AUTO_PREF__GRID_COLUMNS, 3.0f);
     }
 
     /**

File: src/main/java/com/owncloud/android/authentication/AccountUtils.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
@@ -61,7 +62,8 @@ public class AccountUtils {
      *                      {@link Account} available, if valid (still registered in the system as ownCloud 
      *                      account). If none is available and valid, returns null.
      */
-    public static Account getCurrentOwnCloudAccount(Context context) {
+    public static @Nullable
+    Account getCurrentOwnCloudAccount(Context context) {
         Account[] ocAccounts = getAccounts(context);
         Account defaultAccount = null;
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -28,7 +28,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
-import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
@@ -1060,8 +1059,7 @@ public void onResourceReady(Drawable resource, GlideAnimation glideAnimation) {
                             .into(target);
                 } else {
                     // plain color
-                    int color = Color.parseColor(background);
-                    navigationHeader.setBackgroundColor(color);
+                    navigationHeader.setBackgroundColor(ThemeUtils.primaryColor(getAccount()));
                 }
             }
         }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -772,6 +772,8 @@ public void run() {
 
                     if (tintIcon) {
                         mEmptyListIcon.setImageDrawable(ThemeUtils.tintDrawable(icon, ThemeUtils.primaryColor()));
+                    } else {
+                        mEmptyListIcon.setImageResource(icon);
                     }
 
                     mEmptyListIcon.setVisibility(View.VISIBLE);

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -186,7 +186,7 @@ public static void initAutoUpload() {
 
         initiateExistingAutoUploadEntries();
 
-        FilesSyncHelper.scheduleFilesSyncIfNeeded();
+        FilesSyncHelper.scheduleFilesSyncIfNeeded(mContext);
         FilesSyncHelper.restartJobsIfNeeded();
 
         ReceiversHelper.registerNetworkChangeReceiver();

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -56,7 +56,7 @@ public boolean onStartJob(JobParameters params) {
                         .schedule();
             }
 
-            FilesSyncHelper.scheduleNJobs(true);
+            FilesSyncHelper.scheduleNJobs(true, getApplicationContext());
         }
 
         return true;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -186,7 +186,7 @@ public static void initAutoUpload() {
 
         initiateExistingAutoUploadEntries();
 
-        FilesSyncHelper.scheduleFilesSyncIfNeeded();
+        FilesSyncHelper.scheduleFilesSyncIfNeeded(mContext);
         FilesSyncHelper.restartJobsIfNeeded();
 
         ReceiversHelper.registerNetworkChangeReceiver();

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -56,7 +56,7 @@ public boolean onStartJob(JobParameters params) {
                         .schedule();
             }
 
-            FilesSyncHelper.scheduleNJobs(true);
+            FilesSyncHelper.scheduleNJobs(true, getApplicationContext());
         }
 
         return true;

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -323,7 +323,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         UploadsStorageManager uploadsStorageManager = new UploadsStorageManager(mContext.getContentResolver(),
                 mContext);
 
-        long size = new File(mFile.getStoragePath()).length();
+        long size = 0;
 
         for (OCUpload ocUpload : uploadsStorageManager.getAllStoredUploads()) {
             if (ocUpload.getUploadId() == getOCUploadId()) {
@@ -332,7 +332,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 break;
             }
         }
-        
+
         try {
 
             /// Check that connectivity conditions are met and delays the upload otherwise

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -129,6 +129,7 @@ public void onCreate() {
 
         mNotification = new NotificationCompat.Builder(this).setContentTitle(getApplicationContext().
                 getResources().getString(R.string.app_name))
+                .setContentText(getApplicationContext().getResources().getString(R.string.foreground_service_download))
                 .setSmallIcon(R.drawable.notification_icon)
                 .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.notification_icon))
                 .setColor(ThemeUtils.primaryColor())

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -420,6 +420,7 @@ public void onCreate() {
 
         mNotification = new NotificationCompat.Builder(this).setContentTitle(getApplicationContext().
                 getResources().getString(R.string.app_name))
+                .setContentText(getApplicationContext().getResources().getString(R.string.foreground_service_upload))
                 .setSmallIcon(R.drawable.notification_icon)
                 .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.notification_icon))
                 .setColor(ThemeUtils.primaryColor())

File: src/main/java/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -28,6 +28,7 @@
 import android.app.PendingIntent;
 import android.app.Service;
 import android.content.Intent;
+import android.graphics.BitmapFactory;
 import android.os.Binder;
 import android.os.Handler;
 import android.os.HandlerThread;
@@ -127,6 +128,8 @@ public void onCreate() {
 
         mNotification = new NotificationCompat.Builder(this).setContentTitle(getApplicationContext().
                 getResources().getString(R.string.app_name))
+                .setSmallIcon(R.mipmap.ic_launcher)
+                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))
                 .build();
 
         // add AccountsUpdatedListener

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -33,6 +33,7 @@
 import android.app.Service;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.BitmapFactory;
 import android.os.Binder;
 import android.os.Handler;
 import android.os.HandlerThread;
@@ -418,6 +419,8 @@ public void onCreate() {
 
         mNotification = new NotificationCompat.Builder(this).setContentTitle(getApplicationContext().
                 getResources().getString(R.string.app_name))
+                .setSmallIcon(R.mipmap.ic_launcher)
+                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))
                 .build();
 
         int failedCounter = mUploadsStorageManager.failInProgressUploads(

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -479,8 +479,6 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 while (listener.hasNext()) {
                     mUploadOperation.addDatatransferProgressListener(listener.next());
                 }
-            } else {
-                result = new RemoteOperationResult(ResultCode.UNKNOWN_ERROR);
             }
 
             if (mCancellationRequested.get()) {

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -428,8 +428,6 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                             channel = new RandomAccessFile(temporalFile.getAbsolutePath(), "rw").
                                     getChannel();
                             fileLock = channel.tryLock();
-                        } else {
-                            result = new RemoteOperationResult(ResultCode.LOCK_FAILED);
                         }
                     }
                 }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -453,10 +453,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if (mChunked &&
                     (size > ChunkedUploadRemoteFileOperation.CHUNK_SIZE)) {
                 mUploadOperation = new ChunkedUploadRemoteFileOperation(mContext, mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp);
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp, size);
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp);
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp, size);
             }
 
             Iterator<OnDatatransferProgressListener> listener = mDataTransferListeners.iterator();

File: src/main/java/com/owncloud/android/ui/activity/ActivitiesListActivity.java
Patch:
@@ -222,12 +222,14 @@ public void run() {
                         runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
+                                populateList(activities, ownCloudClient);
                                 if (activities.size() > 0) {
-                                    populateList(activities, ownCloudClient);
                                     swipeEmptyListRefreshLayout.setVisibility(View.GONE);
                                     swipeListRefreshLayout.setVisibility(View.VISIBLE);
                                 } else {
                                     setEmptyContent(noResultsHeadline, noResultsMessage);
+                                    swipeListRefreshLayout.setVisibility(View.GONE);
+                                    swipeEmptyListRefreshLayout.setVisibility(View.VISIBLE);
                                 }
                             }
                         });

File: src/main/java/com/owncloud/android/ui/activity/NotificationsActivity.java
Patch:
@@ -213,12 +213,14 @@ public void run() {
                         runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
+                                populateList(notifications);
                                 if (notifications.size() > 0) {
-                                    populateList(notifications);
                                     swipeEmptyListRefreshLayout.setVisibility(View.GONE);
                                     swipeListRefreshLayout.setVisibility(View.VISIBLE);
                                 } else {
                                     setEmptyContent(noResultsHeadline, noResultsMessage);
+                                    swipeListRefreshLayout.setVisibility(View.GONE);
+                                    swipeEmptyListRefreshLayout.setVisibility(View.VISIBLE);
                                 }
                             }
                         });

File: src/main/java/com/owncloud/android/ui/activity/ParticipateActivity.java
Patch:
@@ -83,7 +83,7 @@ private void setupContent() {
 
         TextView contributeForumView = (TextView) findViewById(R.id.participate_contribute_forum_text);
         contributeForumView.setMovementMethod(LinkMovementMethod.getInstance());
-        contributeForumView.setText(Html.fromHtml(getString(R.string.participate_contribute_irc_text) + " " +
+        contributeForumView.setText(Html.fromHtml(getString(R.string.participate_contribute_forum_text) + " " +
                 getString(R.string.participate_contribute_forum_text_link,
                         ThemeUtils.colorToHexString(ThemeUtils.primaryColor()),
                         getString(R.string.help_link), getString(R.string.participate_contribute_forum_forum))));

File: src/main/java/com/owncloud/android/ui/activity/ParticipateActivity.java
Patch:
@@ -83,7 +83,7 @@ private void setupContent() {
 
         TextView contributeForumView = (TextView) findViewById(R.id.participate_contribute_forum_text);
         contributeForumView.setMovementMethod(LinkMovementMethod.getInstance());
-        contributeForumView.setText(Html.fromHtml(getString(R.string.participate_contribute_irc_text) + " " +
+        contributeForumView.setText(Html.fromHtml(getString(R.string.participate_contribute_forum_text) + " " +
                 getString(R.string.participate_contribute_forum_text_link,
                         ThemeUtils.colorToHexString(ThemeUtils.primaryColor()),
                         getString(R.string.help_link), getString(R.string.participate_contribute_forum_forum))));

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -127,7 +127,7 @@ public static boolean darkTheme() {
         int primaryColor = primaryColor();
         float[] hsl = colorToHSL(primaryColor);
 
-        return (hsl[2] / 100) <= 0.5;
+        return hsl[2] <= 0.5;
     }
 
     /**

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseInstanceIDService.java
Patch:
@@ -29,7 +29,6 @@
 import com.owncloud.android.utils.PushUtils;
 
 public class NCFirebaseInstanceIDService extends FirebaseInstanceIdService {
-    private static final String TAG = "NCFirebaseInstanceID";
 
     @Override
     public void onTokenRefresh() {

File: src/modified/java/com/owncloud/android/services/firebase/NCFirebaseInstanceIDService.java
Patch:
@@ -29,7 +29,6 @@
 import com.owncloud.android.utils.PushUtils;
 
 public class NCFirebaseInstanceIDService extends FirebaseInstanceIdService {
-    private static final String TAG = "NCFirebaseInstanceID";
 
     @Override
     public void onTokenRefresh() {

File: src/modified/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -32,6 +32,7 @@
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.ui.activity.NotificationsActivity;
+import com.owncloud.android.utils.ThemeUtils;
 
 public class NCFirebaseMessagingService extends FirebaseMessagingService {
 

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -52,7 +52,7 @@ private void sendNotification(String contentTitle) {
 
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
                 .setSmallIcon(R.drawable.notification_icon)
-                .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.notification_icon))
+                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.notification_icon))
                 .setContentTitle(contentTitle)
                 .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
                 .setAutoCancel(true)

File: src/modified/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -52,7 +52,7 @@ private void sendNotification(String contentTitle) {
 
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
                 .setSmallIcon(R.drawable.notification_icon)
-                .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.notification_icon))
+                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.drawable.notification_icon))
                 .setContentTitle(contentTitle)
                 .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
                 .setAutoCancel(true)

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -26,7 +26,6 @@
 import android.content.Context;
 import android.text.TextUtils;
 import android.util.Base64;
-import android.util.Log;
 
 import com.google.gson.Gson;
 import com.owncloud.android.MainApp;

File: src/gplay/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -50,12 +50,11 @@ private void sendNotification(String contentTitle) {
         PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent,
                 PendingIntent.FLAG_ONE_SHOT);
 
-        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
                 .setSmallIcon(R.drawable.notification_icon)
                 .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.notification_icon))
                 .setContentTitle(contentTitle)
-                .setSound(defaultSoundUri)
+                .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
                 .setAutoCancel(true)
                 .setContentIntent(pendingIntent);
 

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -227,7 +227,6 @@ public static void pushRegistrationToServer() {
                                             publicKey,
                                             context.getResources().getString(R.string.push_server_url));
 
-                            Log.d(TAG, pushTokenHash);
                             RemoteOperationResult remoteOperationResult = registerAccountDeviceForNotificationsOperation.
                                     execute(mClient);
 

File: src/modified/java/com/owncloud/android/services/firebase/NCFirebaseMessagingService.java
Patch:
@@ -50,12 +50,11 @@ private void sendNotification(String contentTitle) {
         PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent,
                 PendingIntent.FLAG_ONE_SHOT);
 
-        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
                 .setSmallIcon(R.drawable.notification_icon)
                 .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.notification_icon))
                 .setContentTitle(contentTitle)
-                .setSound(defaultSoundUri)
+                .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
                 .setAutoCancel(true)
                 .setContentIntent(pendingIntent);
 

File: src/main/java/com/owncloud/android/ui/activity/FingerprintActivity.java
Patch:
@@ -166,7 +166,9 @@ public void onResume(){
     @Override
     public void onStop(){
         super.onStop();
-        cancellationSignal.cancel();
+        if(cancellationSignal != null) {
+            cancellationSignal.cancel();
+        }
     }
 
     /**

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -363,6 +363,9 @@ private OCUpload createOCUploadFromCursor(Cursor c) {
             upload.setLastResult(UploadResult.fromValue(
                     c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_LAST_RESULT))));
             upload.setCreatedBy(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_CREATED_BY)));
+            upload.setUseWifiOnly(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_IS_WIFI_ONLY)) == 1);
+            upload.setWhileChargingOnly(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY))
+                    == 1);
         }
         return upload;
     }

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -363,6 +363,9 @@ private OCUpload createOCUploadFromCursor(Cursor c) {
             upload.setLastResult(UploadResult.fromValue(
                     c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_LAST_RESULT))));
             upload.setCreatedBy(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_CREATED_BY)));
+            upload.setUseWifiOnly(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_IS_WIFI_ONLY)) == 1);
+            upload.setWhileChargingOnly(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY))
+                    == 1);
         }
         return upload;
     }

File: src/main/java/com/owncloud/android/authentication/SsoWebViewClient.java
Patch:
@@ -63,7 +63,7 @@ public class SsoWebViewClient extends WebViewClient {
     private String mLastReloadedUrlAtError;
     
     public interface SsoWebViewClientListener {
-        public void onSsoFinished(String sessionCookie);
+        void onSsoFinished(String sessionCookie);
     }
 
     public SsoWebViewClient (Context context, Handler listenerHandler, SsoWebViewClientListener listener) {
@@ -148,7 +148,7 @@ public void onReceivedSslError (final WebView view, final SslErrorHandler handle
         
         if (x509Certificate != null) {
             try {
-                isKnownServer = NetworkUtils.isCertInKnownServersStore((Certificate) x509Certificate, mContext);
+                isKnownServer = NetworkUtils.isCertInKnownServersStore(x509Certificate, mContext);
             } catch (Exception e) {
                 Log_OC.e(TAG, "Exception: " + e.getMessage());
             }
@@ -166,7 +166,7 @@ public void onReceivedSslError (final WebView view, final SslErrorHandler handle
      * @param   error     SslError
      * @return  X509Certificate from error
      */
-    public X509Certificate getX509CertificateFromError (SslError error) {
+    public static X509Certificate getX509CertificateFromError(SslError error) {
         Bundle bundle = SslCertificate.saveState(error.getCertificate());
         X509Certificate x509Certificate;
         byte[] bytes = bundle.getByteArray("x509-certificate");

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -32,7 +32,7 @@
 public class ProviderMeta {
 
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 23;
+    public static final int DB_VERSION = 24;
 
     private ProviderMeta() {
     }

File: src/main/java/com/owncloud/android/authentication/SsoWebViewClient.java
Patch:
@@ -63,7 +63,7 @@ public class SsoWebViewClient extends WebViewClient {
     private String mLastReloadedUrlAtError;
     
     public interface SsoWebViewClientListener {
-        public void onSsoFinished(String sessionCookie);
+        void onSsoFinished(String sessionCookie);
     }
 
     public SsoWebViewClient (Context context, Handler listenerHandler, SsoWebViewClientListener listener) {
@@ -148,7 +148,7 @@ public void onReceivedSslError (final WebView view, final SslErrorHandler handle
         
         if (x509Certificate != null) {
             try {
-                isKnownServer = NetworkUtils.isCertInKnownServersStore((Certificate) x509Certificate, mContext);
+                isKnownServer = NetworkUtils.isCertInKnownServersStore(x509Certificate, mContext);
             } catch (Exception e) {
                 Log_OC.e(TAG, "Exception: " + e.getMessage());
             }
@@ -166,7 +166,7 @@ public void onReceivedSslError (final WebView view, final SslErrorHandler handle
      * @param   error     SslError
      * @return  X509Certificate from error
      */
-    public X509Certificate getX509CertificateFromError (SslError error) {
+    public static X509Certificate getX509CertificateFromError(SslError error) {
         Bundle bundle = SslCertificate.saveState(error.getCertificate());
         X509Certificate x509Certificate;
         byte[] bytes = bundle.getByteArray("x509-certificate");

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -486,7 +486,7 @@ private Fragment chooseInitialSecondFragment(OCFile file) {
             if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)) {
                 int startPlaybackPosition = getIntent().getIntExtra(PreviewVideoActivity.EXTRA_START_POSITION, 0);
                 boolean autoplay = getIntent().getBooleanExtra(PreviewVideoActivity.EXTRA_AUTOPLAY, true);
-                secondFragment = new PreviewMediaFragment(file, getAccount(), startPlaybackPosition, autoplay);
+                secondFragment = PreviewMediaFragment.newInstance(file, getAccount(), startPlaybackPosition, autoplay);
             } else if (file.isDown() && PreviewTextFragment.canBePreviewed(file)) {
                 secondFragment = null;
             } else {
@@ -1996,8 +1996,7 @@ public void startImagePreview(OCFile file, VirtualFolderType type) {
      *                              interactions.
      */
     public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean autoplay) {
-        Fragment mediaFragment = new PreviewMediaFragment(file, getAccount(), startPlaybackPosition,
-                autoplay);
+        Fragment mediaFragment = PreviewMediaFragment.newInstance(file, getAccount(), startPlaybackPosition, autoplay);
         setSecondFragment(mediaFragment);
         updateFragmentsVisibility(true);
         updateActionBarTitleAndHomeButton(file);

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -486,7 +486,7 @@ private Fragment chooseInitialSecondFragment(OCFile file) {
             if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)) {
                 int startPlaybackPosition = getIntent().getIntExtra(PreviewVideoActivity.EXTRA_START_POSITION, 0);
                 boolean autoplay = getIntent().getBooleanExtra(PreviewVideoActivity.EXTRA_AUTOPLAY, true);
-                secondFragment = new PreviewMediaFragment(file, getAccount(), startPlaybackPosition, autoplay);
+                secondFragment = PreviewMediaFragment.newInstance(file, getAccount(), startPlaybackPosition, autoplay);
             } else if (file.isDown() && PreviewTextFragment.canBePreviewed(file)) {
                 secondFragment = null;
             } else {
@@ -1996,8 +1996,7 @@ public void startImagePreview(OCFile file, VirtualFolderType type) {
      *                              interactions.
      */
     public void startMediaPreview(OCFile file, int startPlaybackPosition, boolean autoplay) {
-        Fragment mediaFragment = new PreviewMediaFragment(file, getAccount(), startPlaybackPosition,
-                autoplay);
+        Fragment mediaFragment = PreviewMediaFragment.newInstance(file, getAccount(), startPlaybackPosition, autoplay);
         setSecondFragment(mediaFragment);
         updateFragmentsVisibility(true);
         updateActionBarTitleAndHomeButton(file);

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -167,7 +167,7 @@ private static void deleteRegistrationForAccount(Account account) {
                     remoteOperationResult = unregisterAccountDeviceForProxyOperation.execute(mClient);
 
                     if (remoteOperationResult.isSuccess()) {
-                        arbitraryDataProvider.deleteKeyForAccount(account, KEY_PUSH);
+                        arbitraryDataProvider.deleteKeyForAccount(account.name, KEY_PUSH);
                     }
                 }
             }
@@ -244,7 +244,7 @@ public static void pushRegistrationToServer() {
                                     PushConfigurationState pushArbitraryData = new PushConfigurationState(token,
                                             pushResponse.getDeviceIdentifier(), pushResponse.getSignature(),
                                             pushResponse.getPublicKey(), false);
-                                    arbitraryDataProvider.storeOrUpdateKeyValue(account, KEY_PUSH,
+                                    arbitraryDataProvider.storeOrUpdateKeyValue(account.name, KEY_PUSH,
                                             gson.toJson(pushArbitraryData));
                                 }
                             }

File: src/main/java/com/afollestad/sectionedrecyclerview/SectionedRecyclerViewAdapter.java
Patch:
@@ -35,7 +35,6 @@ public abstract class SectionedRecyclerViewAdapter<VH extends RecyclerView.ViewH
 
     private final ArrayMap<Integer, Integer> mHeaderLocationMap;
     private GridLayoutManager mLayoutManager;
-    private ArrayMap<Integer, Integer> mSpanMap;
     private boolean mShowHeadersForEmptySections;
 
     public SectionedRecyclerViewAdapter() {

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -31,6 +31,7 @@
 import com.owncloud.android.MainApp;
 import com.owncloud.android.ui.activity.FingerprintActivity;
 import com.owncloud.android.ui.activity.PassCodeActivity;
+import com.owncloud.android.ui.activity.Preferences;
 
 import java.util.HashSet;
 import java.util.Set;
@@ -131,6 +132,7 @@ private boolean fingerprintShouldBeRequested() {
 
     private boolean fingerprintIsEnabled() {
         SharedPreferences appPrefs = PreferenceManager.getDefaultSharedPreferences(MainApp.getAppContext());
-        return (appPrefs.getBoolean(FingerprintActivity.PREFERENCE_USE_FINGERPRINT, false));
+        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
+                appPrefs.getBoolean(Preferences.PREFERENCE_USE_FINGERPRINT, false);
     }
 }

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -593,7 +593,6 @@ private boolean removeLocalFolder(File localFolder) {
                 if (localFile.isDirectory()) {
                     success &= removeLocalFolder(localFile);
                 } else {
-                    String path = localFile.getAbsolutePath();
                     success &= localFile.delete();
                 }
             }
@@ -602,7 +601,6 @@ private boolean removeLocalFolder(File localFolder) {
         return success;
     }
 
-
     /**
      * Updates database and file system for a file or folder that was moved to a different location.
      *

File: src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java
Patch:
@@ -19,7 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.owncloud.android.services;
+package com.owncloud.android.jobs;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;
@@ -76,7 +76,7 @@ protected Result onRunJob(Params params) {
 
             // remove pending account removal
             ArbitraryDataProvider arbitraryDataProvider = new ArbitraryDataProvider(context.getContentResolver());
-            arbitraryDataProvider.deleteKeyForAccount(account, PENDING_FOR_REMOVAL);
+            arbitraryDataProvider.deleteKeyForAccount(account.name, PENDING_FOR_REMOVAL);
 
             return Result.SUCCESS;
         } else {

File: src/main/java/com/owncloud/android/jobs/ContactsImportJob.java
Patch:
@@ -19,7 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.owncloud.android.services;
+package com.owncloud.android.jobs;
 
 import android.database.Cursor;
 import android.net.Uri;

File: src/main/java/com/owncloud/android/jobs/NCJobCreator.java
Patch:
@@ -18,7 +18,7 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-package com.owncloud.android.services;
+package com.owncloud.android.jobs;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
@@ -31,14 +31,14 @@ public class NCJobCreator implements JobCreator {
     @Override
     public Job create(String tag) {
         switch (tag) {
-            case AutoUploadJob.TAG:
-                return new AutoUploadJob();
             case ContactsBackupJob.TAG:
                 return new ContactsBackupJob();
             case ContactsImportJob.TAG:
                 return new ContactsImportJob();
             case AccountRemovalJob.TAG:
                 return new AccountRemovalJob();
+            case FilesSyncJob.TAG:
+                return new FilesSyncJob();
             default:
                 return null;
         }

File: src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java
Patch:
@@ -18,7 +18,7 @@
  *
  */
 
-package org.nextcloud.providers;
+package com.owncloud.android.providers;
 
 import android.accounts.Account;
 import android.annotation.TargetApi;

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -678,7 +678,7 @@ remotePath, account, syncFileContents, getApplicationContext()
                     // Move file/folder
                     String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
                     String newParentPath = operationIntent.getStringExtra(EXTRA_NEW_PARENT_PATH);
-                    operation = new MoveFileOperation(remotePath, newParentPath, account);
+                    operation = new MoveFileOperation(remotePath, newParentPath);
 
                 } else if (action.equals(ACTION_COPY_FILE)) {
                     // Copy file/folder

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -37,7 +37,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
-import com.owncloud.android.services.ContactsBackupJob;
+import com.owncloud.android.jobs.ContactsBackupJob;
 import com.owncloud.android.ui.fragment.FileFragment;
 import com.owncloud.android.ui.fragment.contactsbackup.ContactListFragment;
 import com.owncloud.android.ui.fragment.contactsbackup.ContactsBackupFragment;

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -21,7 +21,6 @@
 
 package com.owncloud.android.ui.activity;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.widget.DrawerLayout;
@@ -113,7 +112,6 @@ protected void onCreate(Bundle savedInstanceState) {
         webSettings.setJavaScriptEnabled(true);
         webSettings.setDomStorageEnabled(true);
 
-        final Activity activity = this;
         final ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar);
 
         webview.setWebChromeClient(new WebChromeClient() {
@@ -124,7 +122,8 @@ public void onProgressChanged(WebView view, int progress) {
 
         webview.setWebViewClient(new WebViewClient() {
             public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
-                webview.loadData(DisplayUtils.getData(getResources().openRawResource(R.raw.custom_error)),"text/html; charset=UTF-8", null);
+                webview.loadData(DisplayUtils.getData(getResources().openRawResource(R.raw.custom_error)),
+                        "text/html; charset=UTF-8", null);
             }
         });
 

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -476,7 +476,7 @@ public void showLoadingDialog(String message) {
         Fragment frag = getSupportFragmentManager().findFragmentByTag(DIALOG_WAIT_TAG);
         if (frag == null) {
             Log_OC.d(TAG, "show loading dialog");
-            LoadingDialog loading = new LoadingDialog(message);
+            LoadingDialog loading = LoadingDialog.newInstance(message);
             FragmentManager fm = getSupportFragmentManager();
             FragmentTransaction ft = fm.beginTransaction();
             loading.show(ft, DIALOG_WAIT_TAG);

File: src/main/java/com/owncloud/android/ui/activity/FingerprintActivity.java
Patch:
@@ -77,7 +77,6 @@ public class FingerprintActivity extends AppCompatActivity {
 
     public final static String KEY_CHECK_RESULT = "KEY_CHECK_RESULT";
 
-    public final static String PREFERENCE_USE_FINGERPRINT = "use_fingerprint";
     public static final String ANDROID_KEY_STORE = "AndroidKeyStore";
 
     private KeyStore keyStore;
@@ -286,7 +285,7 @@ static public boolean isFingerprintReady(Context context) {
     }
 }
 
-@RequiresApi(Build.VERSION_CODES.M)
+@RequiresApi(api = Build.VERSION_CODES.M)
 class FingerprintHandler extends FingerprintManager.AuthenticationCallback {
 
     private TextView text;

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -302,6 +302,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             retval = super.onOptionsItemSelected(item);
             break;
         }
+
         return retval;
     }
 

File: src/main/java/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -273,9 +273,7 @@ private String readLogFile() {
      */
     public void showLoadingDialog() {
         // Construct dialog
-        LoadingDialog loading = new LoadingDialog(
-                getResources().getString(R.string.log_progress_dialog_text)
-        );
+        LoadingDialog loading = LoadingDialog.newInstance(getResources().getString(R.string.log_progress_dialog_text));
         FragmentManager fm = getSupportFragmentManager();
         FragmentTransaction ft = fm.beginTransaction();
         loading.show(ft, DIALOG_WAIT_TAG);

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -913,7 +913,9 @@ public void uploadFile(String tmpname, String filename) {
             FileUploader.LOCAL_BEHAVIOUR_COPY,
             null,
             true,
-            UploadFileOperation.CREATED_BY_USER
+            UploadFileOperation.CREATED_BY_USER,
+            false,
+            false
             );
         finish();
     }

File: src/main/java/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -228,7 +228,9 @@ private void requestUpload(Account account, String localPath, String remotePath,
             behaviour,
             mimeType,
             false,      // do not create parent folder if not existent
-            UploadFileOperation.CREATED_BY_USER
+            UploadFileOperation.CREATED_BY_USER,
+            false,
+             false
         );
     }
 

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -955,7 +955,7 @@ public void onConfigurationChanged(Configuration newConfig) {
             maxColumnSize = maxColumnSizePortrait;
         }
 
-        if (mGridView.getNumColumns() > maxColumnSize) {
+        if (mGridView != null && mGridView.getNumColumns() > maxColumnSize) {
             mGridView.setNumColumns(maxColumnSize);
             mGridView.invalidateViews();
         }

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -67,7 +67,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.lib.common.utils.Log_OC;
-import com.owncloud.android.services.ContactsImportJob;
+import com.owncloud.android.jobs.ContactsImportJob;
 import com.owncloud.android.ui.TextDrawable;
 import com.owncloud.android.ui.activity.ContactsPreferenceActivity;
 import com.owncloud.android.ui.events.VCardToggleEvent;

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -49,9 +49,9 @@
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
+import com.owncloud.android.jobs.ContactsBackupJob;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.operations.RefreshFolderOperation;
-import com.owncloud.android.services.ContactsBackupJob;
 import com.owncloud.android.ui.activity.ContactsPreferenceActivity;
 import com.owncloud.android.ui.activity.Preferences;
 import com.owncloud.android.ui.fragment.FileFragment;
@@ -338,7 +338,7 @@ private void setAutomaticBackup(final boolean bool) {
                     contactsPreferenceActivity.getAccount());
         }
 
-        arbitraryDataProvider.storeOrUpdateKeyValue(account, PREFERENCE_CONTACTS_AUTOMATIC_BACKUP,
+        arbitraryDataProvider.storeOrUpdateKeyValue(account.name, PREFERENCE_CONTACTS_AUTOMATIC_BACKUP,
                 String.valueOf(bool));
     }
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -176,7 +176,7 @@ public void openFile(OCFile file) {
             openFileWithIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
 
             List<ResolveInfo> launchables = mFileActivity.getPackageManager().
-                    queryIntentActivities(openFileWithIntent, PackageManager.GET_INTENT_FILTERS);
+                    queryIntentActivities(openFileWithIntent, PackageManager.GET_RESOLVED_FILTER);
 
             if (launchables != null && launchables.size() > 0) {
                 try {

File: src/main/java/com/owncloud/android/ui/helpers/UriUploader.java
Patch:
@@ -166,7 +166,9 @@ private void requestUpload(String localPath, String remotePath) {
                 mBehaviour,
                 null,       // MIME type will be detected from file name
                 false,      // do not create parent folder if not existent
-                UploadFileOperation.CREATED_BY_USER
+                UploadFileOperation.CREATED_BY_USER,
+                false,
+                false
         );
     }
 

File: src/main/java/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -147,7 +147,7 @@ public static Drawable getFolderTypeIcon(boolean isSharedViaUsers, boolean isSha
         } else if (isSharedViaUsers) {
             drawableId = R.drawable.shared_with_me_folder;
         } else {
-            drawableId = R.drawable.ic_menu_archive;
+            drawableId = R.drawable.folder;
         }
 
         return ThemeUtils.tintDrawable(drawableId, ThemeUtils.primaryColor(account));
@@ -442,7 +442,7 @@ private static void populateMimeTypeIconMapping() {
         MIMETYPE_TO_ICON_MAPPING.put("application/yaml", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("application/zip", R.drawable.file_zip);
         MIMETYPE_TO_ICON_MAPPING.put("database", R.drawable.file);
-        MIMETYPE_TO_ICON_MAPPING.put("httpd/unix-directory", R.drawable.ic_menu_archive);
+        MIMETYPE_TO_ICON_MAPPING.put("httpd/unix-directory", R.drawable.folder);
         MIMETYPE_TO_ICON_MAPPING.put("image/svg+xml", R.drawable.file_image);
         MIMETYPE_TO_ICON_MAPPING.put("image/vector", R.drawable.file_image);
         MIMETYPE_TO_ICON_MAPPING.put("text/calendar", R.drawable.file_calendar);
@@ -456,7 +456,7 @@ private static void populateMimeTypeIconMapping() {
         MIMETYPE_TO_ICON_MAPPING.put("text/x-python", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("text/x-shellscript", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("web", R.drawable.file_code);
-        MIMETYPE_TO_ICON_MAPPING.put(MimeType.DIRECTORY, R.drawable.ic_menu_archive);
+        MIMETYPE_TO_ICON_MAPPING.put(MimeType.DIRECTORY, R.drawable.folder);
     }
 
     /**

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -37,6 +37,7 @@
 import android.support.v4.content.res.ResourcesCompat;
 import android.support.v4.graphics.ColorUtils;
 import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.widget.CompoundButtonCompat;
 import android.support.v7.app.ActionBar;
 import android.support.v7.widget.AppCompatCheckBox;
 import android.support.v7.widget.SwitchCompat;
@@ -254,7 +255,7 @@ public static void colorToolbarProgressBar(FragmentActivity activity, int progre
     }
 
     public static void tintCheckbox(AppCompatCheckBox checkBox, int color) {
-        checkBox.setSupportButtonTintList(new ColorStateList(
+        CompoundButtonCompat.setButtonTintList(checkBox, new ColorStateList(
                 new int[][]{
                         new int[]{-android.R.attr.state_checked},
                         new int[]{android.R.attr.state_checked},

File: src/main/java/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -273,7 +273,9 @@ private int getColumnWidthCompatible() {
                 Field numColumns = getClass().getSuperclass().getDeclaredField("mColumnWidth");
                 numColumns.setAccessible(true);
                 return numColumns.getInt(this);
-            } catch (NoSuchFieldException | IllegalAccessException e) {
+            } catch (NoSuchFieldException e) {
+                throw new RuntimeException(e);
+            } catch (IllegalAccessException e) {
                 throw new RuntimeException(e);
             }
         }

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -476,7 +476,7 @@ public void showLoadingDialog(String message) {
         Fragment frag = getSupportFragmentManager().findFragmentByTag(DIALOG_WAIT_TAG);
         if (frag == null) {
             Log_OC.d(TAG, "show loading dialog");
-            LoadingDialog loading = new LoadingDialog(message);
+            LoadingDialog loading = LoadingDialog.newInstance(message);
             FragmentManager fm = getSupportFragmentManager();
             FragmentTransaction ft = fm.beginTransaction();
             loading.show(ft, DIALOG_WAIT_TAG);

File: src/main/java/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -273,9 +273,7 @@ private String readLogFile() {
      */
     public void showLoadingDialog() {
         // Construct dialog
-        LoadingDialog loading = new LoadingDialog(
-                getResources().getString(R.string.log_progress_dialog_text)
-        );
+        LoadingDialog loading = LoadingDialog.newInstance(getResources().getString(R.string.log_progress_dialog_text));
         FragmentManager fm = getSupportFragmentManager();
         FragmentTransaction ft = fm.beginTransaction();
         loading.show(ft, DIALOG_WAIT_TAG);

File: src/main/java/com/owncloud/android/utils/ThemeUtils.java
Patch:
@@ -37,6 +37,7 @@
 import android.support.v4.content.res.ResourcesCompat;
 import android.support.v4.graphics.ColorUtils;
 import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.widget.CompoundButtonCompat;
 import android.support.v7.app.ActionBar;
 import android.support.v7.widget.AppCompatCheckBox;
 import android.support.v7.widget.SwitchCompat;
@@ -254,7 +255,7 @@ public static void colorToolbarProgressBar(FragmentActivity activity, int progre
     }
 
     public static void tintCheckbox(AppCompatCheckBox checkBox, int color) {
-        checkBox.setSupportButtonTintList(new ColorStateList(
+        CompoundButtonCompat.setButtonTintList(checkBox, new ColorStateList(
                 new int[][]{
                         new int[]{-android.R.attr.state_checked},
                         new int[]{android.R.attr.state_checked},

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -306,7 +306,7 @@ private void updateToAutoUpload() {
                 // show info pop-up
                 new AlertDialog.Builder(this, R.style.Theme_ownCloud_Dialog)
                         .setTitle(R.string.drawer_synced_folders)
-                        .setMessage(R.string.folder_sync_new_info)
+                        .setMessage(R.string.synced_folders_new_info)
                         .setPositiveButton(R.string.drawer_open, new DialogInterface.OnClickListener() {
                             public void onClick(DialogInterface dialog, int which) {
                                 // show Auto Upload

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -24,7 +24,7 @@
 import android.accounts.Account;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.media.ExifInterface;
+import android.support.media.ExifInterface;
 import android.os.PowerManager;
 import android.support.annotation.NonNull;
 import android.text.TextUtils;
@@ -69,7 +69,7 @@ protected Result onRunJob(Params params) {
         final Context context = MainApp.getAppContext();
         final ContentResolver contentResolver = context.getContentResolver();
 
-        PowerManager powerManager = (PowerManager) context.getSystemService(context.POWER_SERVICE);
+        PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
         FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
         PowerManager.WakeLock wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                 TAG);

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -31,6 +31,7 @@
 import com.owncloud.android.MainApp;
 import com.owncloud.android.ui.activity.FingerprintActivity;
 import com.owncloud.android.ui.activity.PassCodeActivity;
+import com.owncloud.android.ui.activity.Preferences;
 
 import java.util.HashSet;
 import java.util.Set;
@@ -131,6 +132,7 @@ private boolean fingerprintShouldBeRequested() {
 
     private boolean fingerprintIsEnabled() {
         SharedPreferences appPrefs = PreferenceManager.getDefaultSharedPreferences(MainApp.getAppContext());
-        return (appPrefs.getBoolean(FingerprintActivity.PREFERENCE_USE_FINGERPRINT, false));
+        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
+                appPrefs.getBoolean(Preferences.PREFERENCE_USE_FINGERPRINT, false);
     }
 }

File: src/main/java/com/owncloud/android/ui/activity/FingerprintActivity.java
Patch:
@@ -77,7 +77,6 @@ public class FingerprintActivity extends AppCompatActivity {
 
     public final static String KEY_CHECK_RESULT = "KEY_CHECK_RESULT";
 
-    public final static String PREFERENCE_USE_FINGERPRINT = "use_fingerprint";
     public static final String ANDROID_KEY_STORE = "AndroidKeyStore";
 
     private KeyStore keyStore;

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -88,6 +88,8 @@ public class Preferences extends PreferenceActivity
 
     private static final String TAG = Preferences.class.getSimpleName();
 
+    public final static String PREFERENCE_USE_FINGERPRINT = "use_fingerprint";
+
     private static final String SCREEN_NAME = "Settings";
 
     private static final int ACTION_SELECT_UPLOAD_PATH = 1;
@@ -267,7 +269,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
         }
 
         boolean fPrintEnabled = getResources().getBoolean(R.bool.fingerprint_enabled);
-        fPrint = (SwitchPreference) findPreference(FingerprintActivity.PREFERENCE_USE_FINGERPRINT);
+        fPrint = (SwitchPreference) findPreference(PREFERENCE_USE_FINGERPRINT);
         if (fPrint != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 if (FingerprintActivity.isFingerprintCapable(MainApp.getAppContext()) && fPrintEnabled) {

File: src/main/java/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -273,7 +273,9 @@ private int getColumnWidthCompatible() {
                 Field numColumns = getClass().getSuperclass().getDeclaredField("mColumnWidth");
                 numColumns.setAccessible(true);
                 return numColumns.getInt(this);
-            } catch (NoSuchFieldException | IllegalAccessException e) {
+            } catch (NoSuchFieldException e) {
+                throw new RuntimeException(e);
+            } catch (IllegalAccessException e) {
                 throw new RuntimeException(e);
             }
         }

File: src/main/java/com/owncloud/android/datamodel/FileSystemDataSet.java
Patch:
@@ -20,7 +20,9 @@
  */
 package com.owncloud.android.datamodel;
 
-
+/*
+    Model for filesystem data from the database
+ */
 public class FileSystemDataSet {
 
     private int id;

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -30,6 +30,9 @@
 import java.util.HashSet;
 import java.util.Set;
 
+/*
+    Provider for stored filesystem data
+ */
 public class FilesystemDataProvider {
 
     static private final String TAG = FilesystemDataProvider.class.getSimpleName();

File: src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java
Patch:
@@ -19,7 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.owncloud.android.services;
+package com.owncloud.android.jobs;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;

File: src/main/java/com/owncloud/android/jobs/NCJobCreator.java
Patch:
@@ -22,7 +22,6 @@
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
-import com.owncloud.android.services.AccountRemovalJob;
 
 /**
  * Job creator for android-job
@@ -32,8 +31,6 @@ public class NCJobCreator implements JobCreator {
     @Override
     public Job create(String tag) {
         switch (tag) {
-            case AutoUploadJob.TAG:
-                return new AutoUploadJob();
             case ContactsBackupJob.TAG:
                 return new ContactsBackupJob();
             case ContactsImportJob.TAG:

File: src/main/java/com/owncloud/android/jobs/NContentObserverJob.java
Patch:
@@ -32,6 +32,9 @@
 
 import java.util.concurrent.TimeUnit;
 
+/*
+    Job that triggers new FilesSyncJob in case new photo or video were detected
+ */
 @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 public class NContentObserverJob extends JobService {
     @Override

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -479,7 +479,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 try {
                     fileLock.release();
                 } catch (IOException e) {
-                    Log_OC.d(TAG, "Failed to unlock file with path " + mOriginalStoragePath);
+                    Log_OC.e(TAG, "Failed to unlock file with path " + mOriginalStoragePath);
                 }
             }
 

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -48,10 +48,9 @@
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileUploader;
-import com.owncloud.android.jobs.AutoUploadJob;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.utils.Log_OC;
-import com.owncloud.android.services.AccountRemovalJob;
+import com.owncloud.android.jobs.AccountRemovalJob;
 import com.owncloud.android.services.OperationsService;
 import com.owncloud.android.ui.adapter.AccountListAdapter;
 import com.owncloud.android.ui.adapter.AccountListItem;
@@ -419,7 +418,7 @@ private void performAccountRemoval(Account account) {
 
         // schedule job
         PersistableBundleCompat bundle = new PersistableBundleCompat();
-        bundle.putString(AutoUploadJob.ACCOUNT, account.name);
+        bundle.putString(AccountRemovalJob.ACCOUNT, account.name);
 
         new JobRequest.Builder(AccountRemovalJob.TAG)
                 .setExecutionWindow(1_000L, 10_000L)

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -76,6 +76,8 @@ public class UploadListActivity extends FileActivity implements UploadListFragme
 
     private static final String SCREEN_NAME = "Uploads";
 
+    private static final String EXPERT_MODE = "expert_mode";
+
     private UploadMessagesReceiver mUploadMessagesReceiver;
 
     private Menu mMenu;
@@ -267,7 +269,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public boolean onCreateOptionsMenu(Menu menu) {
         SharedPreferences appPrefs =
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        if (appPrefs.getBoolean("expert_mode", false)) {
+        if (appPrefs.getBoolean(EXPERT_MODE, false)) {
             MenuInflater inflater = getMenuInflater();
             inflater.inflate(R.menu.upload_list_menu, menu);
             mMenu = menu;

File: src/main/java/com/owncloud/android/ui/adapter/SyncedFolderAdapter.java
Patch:
@@ -4,17 +4,17 @@
  * @author Andy Scherzinger
  * Copyright (C) 2016 Andy Scherzinger
  * Copyright (C) 2016 Nextcloud
- * <p>
+ *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
  * License as published by the Free Software Foundation; either
  * version 3 of the License, or any later version.
- * <p>
+ *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU AFFERO GENERAL PUBLIC LICENSE for more details.
- * <p>
+ *
  * You should have received a copy of the GNU Affero General Public
  * License along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */

File: src/main/java/com/owncloud/android/utils/ReceiversHelper.java
Patch:
@@ -29,6 +29,9 @@
 import com.evernote.android.job.util.Device;
 import com.owncloud.android.MainApp;
 
+/*
+    Helper for setting up network and power receivers
+ */
 public class ReceiversHelper {
 
     public static void registerNetworkChangeReceiver() {

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -167,7 +167,7 @@ private static void deleteRegistrationForAccount(Account account) {
                     remoteOperationResult = unregisterAccountDeviceForProxyOperation.execute(mClient);
 
                     if (remoteOperationResult.isSuccess()) {
-                        arbitraryDataProvider.deleteKeyForAccount(account, KEY_PUSH);
+                        arbitraryDataProvider.deleteKeyForAccount(account.name, KEY_PUSH);
                     }
                 }
             }

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -167,7 +167,7 @@ private static void deleteRegistrationForAccount(Account account) {
                     remoteOperationResult = unregisterAccountDeviceForProxyOperation.execute(mClient);
 
                     if (remoteOperationResult.isSuccess()) {
-                        arbitraryDataProvider.deleteKeyForAccount(account, KEY_PUSH);
+                        arbitraryDataProvider.deleteKeyForAccount(account.name, KEY_PUSH);
                     }
                 }
             }

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -457,7 +457,7 @@ public void onSyncStatusToggleClick(int section, SyncedFolderDisplayItem syncedF
         if (syncedFolderDisplayItem.getId() > UNPERSISTED_ID) {
             mSyncedFolderProvider.updateSyncedFolderEnabled(syncedFolderDisplayItem.getId(),
                     syncedFolderDisplayItem.isEnabled());
-            FilesSyncHelper.scheduleNJobs();
+            FilesSyncHelper.scheduleNJobs(false);
         } else {
             long storedId = mSyncedFolderProvider.storeSyncedFolder(syncedFolderDisplayItem);
             if (storedId != -1) {
@@ -534,7 +534,7 @@ public void onSaveSyncedFolderPreference(SyncedFolderParcelable syncedFolder) {
             } else {
                 // existing synced folder setup to be updated
                 mSyncedFolderProvider.updateSyncFolder(item);
-                FilesSyncHelper.scheduleNJobs();
+                FilesSyncHelper.scheduleNJobs(false);
             }
 
             mAdapter.setSyncFolderItem(syncedFolder.getSection(), item);
@@ -609,7 +609,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String permissi
     @Subscribe(threadMode = ThreadMode.BACKGROUND)
     public void onMessageEvent(InitiateSyncedFolder event) {
         FilesSyncHelper.insertAllDBEntriesForSyncedFolder(event.getSyncedFolder());
-        FilesSyncHelper.scheduleNJobs();
+        FilesSyncHelper.scheduleNJobs(false);
     }
 
     public void onAddCustomFolderClick(View view) {

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -374,7 +374,7 @@ public void retryFailedUploads(Context context, Account account, UploadResult up
             boolean accountMatch;
             for ( OCUpload failedUpload: failedUploads) {
                 accountMatch = (account == null || account.name.equals(failedUpload.getAccountName()));
-                resultMatch = ((uploadResult == null || uploadResult.equals(failedUpload.getLastResult()))));
+                resultMatch = ((uploadResult == null || uploadResult.equals(failedUpload.getLastResult())));
                 if (accountMatch && resultMatch) {
                     if (currentAccount == null ||
                             !currentAccount.name.equals(failedUpload.getAccountName())) {

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1160,7 +1160,8 @@ private void notifyUploadResult(UploadFileOperation upload,
         if (!uploadResult.isCancelled() &&
             !ResultCode.LOCAL_FILE_NOT_FOUND.equals(uploadResult.getCode()) &&
             !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_WIFI) &&
-            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_CHARGING)) {
+            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_CHARGING) &&
+            !uploadResult.getCode().equals(ResultCode.LOCK_FAILED)    ) {
 
             int tickerId = (uploadResult.isSuccess()) ? R.string.uploader_upload_succeeded_ticker :
                     R.string.uploader_upload_failed_ticker;

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -174,7 +174,7 @@ private static void insertContentIntoDB(Uri uri, boolean dryRun, SyncedFolder sy
             while (cursor.moveToNext()) {
                 contentPath = cursor.getString(column_index_data);
                 isFolder = new File(contentPath).isDirectory();
-                filesystemDataProvider.storeOrUpdateFileValue(cursor.getString(column_index_data),
+                filesystemDataProvider.storeOrUpdateFileValue(contentPath,
                         cursor.getLong(column_index_date_modified), isFolder, syncedFolder, dryRun);
             }
             cursor.close();

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -375,7 +375,7 @@ public void retryFailedUploads(Context context, Account account, UploadResult up
             for ( OCUpload failedUpload: failedUploads) {
                 accountMatch = (account == null || account.name.equals(failedUpload.getAccountName()));
                 resultMatch = ((uploadResult == null || uploadResult.equals(failedUpload.getLastResult())) &&
-                        !uploadResult.equals(UploadResult.FILE_NOT_FOUND));
+                        !failedUpload.getLastResult().equals(UploadResult.FILE_NOT_FOUND));
                 if (accountMatch && resultMatch) {
                     if (currentAccount == null ||
                             !currentAccount.name.equals(failedUpload.getAccountName())) {

File: src/main/java/com/owncloud/android/ui/activity/FingerprintActivity.java
Patch:
@@ -20,6 +20,7 @@
 package com.owncloud.android.ui.activity;
 
 import android.Manifest;
+import android.annotation.TargetApi;
 import android.app.KeyguardManager;
 import android.content.Context;
 import android.content.Intent;
@@ -286,7 +287,7 @@ static public boolean isFingerprintReady(Context context) {
     }
 }
 
-@RequiresApi(Build.VERSION_CODES.M)
+@RequiresApi(api = Build.VERSION_CODES.M)
 class FingerprintHandler extends FingerprintManager.AuthenticationCallback {
 
     private TextView text;

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -427,10 +427,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
         } catch (FileNotFoundException e) {
             Log_OC.d(TAG, mOriginalStoragePath + " not exists anymore");
-            return new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
+            result = new RemoteOperationResult(ResultCode.LOCAL_FILE_NOT_FOUND);
         } catch (OverlappingFileLockException e) {
             Log_OC.d(TAG, "Overlapping file lock exception");
-            return new RemoteOperationResult(ResultCode.LOCK_FAILED);
+            result = new RemoteOperationResult(ResultCode.LOCK_FAILED);
         } catch (Exception e) {
             result = new RemoteOperationResult(e);
 

File: src/main/java/com/owncloud/android/ui/activity/SyncedFoldersActivity.java
Patch:
@@ -113,7 +113,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // setup toolbar
         setupToolbar();
         ((CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar)).setTitle(this.getString(R.string.drawer_synced_folders));
-        findViewById(R.id.app_bar).setBackgroundColor(this.getResources().getColor(R.color.listItemHighlighted));
+        findViewById(R.id.app_bar).setBackgroundColor(this.getResources().getColor(R.color.filelist_icon_backgorund));
 
         // setup drawer
         setupDrawer(R.id.nav_synced_folders);

File: src/main/java/com/owncloud/android/jobs/NCJobCreator.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
+import com.owncloud.android.services.AccountRemovalJob;
 
 /**
  * Job creator for android-job

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -48,10 +48,10 @@
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileUploader;
+import com.owncloud.android.jobs.AutoUploadJob;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.services.AccountRemovalJob;
-import com.owncloud.android.services.AutoUploadJob;
 import com.owncloud.android.services.OperationsService;
 import com.owncloud.android.ui.adapter.AccountListAdapter;
 import com.owncloud.android.ui.adapter.AccountListItem;
@@ -407,7 +407,7 @@ private void performAccountRemoval(Account account) {
 
         // store pending account removal
         ArbitraryDataProvider arbitraryDataProvider = new ArbitraryDataProvider(getContentResolver());
-        arbitraryDataProvider.storeOrUpdateKeyValue(account, PENDING_FOR_REMOVAL, String.valueOf(true));
+        arbitraryDataProvider.storeOrUpdateKeyValue(account.name, PENDING_FOR_REMOVAL, String.valueOf(true));
 
         // Cancel transfers
         if (mUploaderBinder != null) {

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -32,7 +32,7 @@
 public class ProviderMeta {
 
     public static final String DB_NAME = "filelist";
-    public static final int DB_VERSION = 22;
+    public static final int DB_VERSION = 23;
 
     private ProviderMeta() {
     }

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -192,7 +192,7 @@ public void onCreate(Bundle savedInstanceState) {
         // Synced folders
         PreferenceCategory preferenceCategorySyncedFolders =
                 (PreferenceCategory) findPreference("synced_folders_category");
-        preferenceCategoryFolderSync.setTitle(ThemeUtils.getColoredTitle(getString(R.string.drawer_folder_sync),
+        preferenceCategorySyncedFolders.setTitle(ThemeUtils.getColoredTitle(getString(R.string.drawer_synced_folders),
                 accentColor));
         PreferenceScreen preferenceScreen = (PreferenceScreen) findPreference("preference_screen");
 

File: src/main/java/com/owncloud/android/ui/dialog/SyncedFolderPreferencesDialogFragment.java
Patch:
@@ -164,7 +164,7 @@ private void setupDialogElements(View view) {
         mEnabledSwitch = (SwitchCompat) view.findViewById(R.id.sync_enabled);
         ThemeUtils.tintSwitch(mEnabledSwitch, accentColor);
 
-        mLocalFolderPath = (TextView) view.findViewById(R.id.folder_sync_settings_local_folder_path);
+        mLocalFolderPath = (TextView) view.findViewById(R.id.synced_folders_settings_local_folder_path);
 
         mLocalFolderSummary = (TextView) view.findViewById(R.id.local_folder_summary);
         mRemoteFolderSummary = (TextView) view.findViewById(R.id.remote_folder_summary);

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -106,11 +106,11 @@ public void storeOrUpdateFileValue(String localPath, long modifiedAt, boolean is
 
         ContentValues cv = new ContentValues();
         cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_FOUND_RECENTLY, System.currentTimeMillis());
+        cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_MODIFIED, modifiedAt);
 
         if (data == null) {
 
             cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_LOCAL_PATH, localPath);
-            cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_MODIFIED, modifiedAt);
             cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_IS_FOLDER, isFolderValue);
             cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_SENT_FOR_UPLOAD, dryRun);
             cv.put(ProviderMeta.ProviderTableMeta.FILESYSTEM_SYNCED_FOLDER_ID, syncedFolder.getId());

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -124,7 +124,7 @@ protected Result onRunJob(Params params) {
                                     .setExecutionWindow(10_000L, 10_000L)
                                     .setRequiresCharging(needsCharging)
                                     .setRequiredNetworkType(syncedFolder.getWifiOnly() ? JobRequest.NetworkType.UNMETERED :
-                                            JobRequest.NetworkType.ANY)
+                                            JobRequest.NetworkType.CONNECTED)
                                     .setExtras(bundle)
                                     .setRequirementsEnforced(true)
                                     .setUpdateCurrent(false)

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -124,7 +124,7 @@ protected Result onRunJob(Params params) {
                                     .setExecutionWindow(10_000L, 10_000L)
                                     .setRequiresCharging(needsCharging)
                                     .setRequiredNetworkType(syncedFolder.getWifiOnly() ? JobRequest.NetworkType.UNMETERED :
-                                            JobRequest.NetworkType.CONNECTED)
+                                            JobRequest.NetworkType.ANY)
                                     .setExtras(bundle)
                                     .setRequirementsEnforced(true)
                                     .setUpdateCurrent(false)

File: src/main/java/com/owncloud/android/datamodel/FilesystemDataProvider.java
Patch:
@@ -161,7 +161,7 @@ private FileSystemDataSet getFilesystemDataSet(String localPathParam, SyncedFold
                         ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_MODIFIED));
                 boolean isFolder = false;
                 if (cursor.getInt(cursor.getColumnIndex(
-                        ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_MODIFIED)) != 0) {
+                        ProviderMeta.ProviderTableMeta.FILESYSTEM_FILE_IS_FOLDER)) != 0) {
                     isFolder = true;
                 }
                 long foundAt = cursor.getLong(cursor.getColumnIndex(ProviderMeta.

File: src/main/java/com/owncloud/android/utils/FilesSyncHelper.java
Patch:
@@ -153,7 +153,8 @@ private static void insertContentIntoDB(Uri uri, boolean dryRun, SyncedFolder sy
         final ContentResolver contentResolver = context.getContentResolver();
 
         Cursor cursor;
-        int column_index_data, column_index_date_modified;
+        int column_index_data;
+        int column_index_date_modified;
 
         final FilesystemDataProvider filesystemDataProvider = new FilesystemDataProvider(contentResolver);
 

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -955,7 +955,7 @@ public void onConfigurationChanged(Configuration newConfig) {
             maxColumnSize = maxColumnSizePortrait;
         }
 
-        if (mGridView.getNumColumns() > maxColumnSize) {
+        if (mGridView != null && mGridView.getNumColumns() > maxColumnSize) {
             mGridView.setNumColumns(maxColumnSize);
             mGridView.invalidateViews();
         }

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -294,7 +294,7 @@ private void splitOutAutoUploadEntries() {
 
             SyncedFolderProvider syncedFolderProvider = new SyncedFolderProvider(contentResolver);
 
-            final List<MediaFolder> imageMediaFolders = MediaProvider.getImageFolders(contentResolver, 1);
+            final List<MediaFolder> imageMediaFolders = MediaProvider.getImageFolders(contentResolver, 1, null);
             final List<MediaFolder> videoMediaFolders = MediaProvider.getVideoFolders(contentResolver, 1);
 
             ArrayList<Long> idsToDelete = new ArrayList<>();

File: src/main/java/com/owncloud/android/jobs/FilesSyncJob.java
Patch:
@@ -125,7 +125,7 @@ protected Result onRunJob(Params params) {
                                     .build()
                                     .schedule();
 
-                            filesystemDataProvider.updateFilesInList(new Object[]{path},
+                            filesystemDataProvider.updateFilesystemFileAsSentForUpload(path,
                                     Long.toString(syncedFolder.getId()));
                         }
                     }

File: src/main/java/com/owncloud/android/jobs/NewAutoUploadJob.java
Patch:
@@ -188,7 +188,7 @@ public FileVisitResult visitFileFailed(Path file, IOException exc) {
         }
 
         // set them as sent for upload
-        //filesystemDataProvider.updateFilesInList(pathsToSet.toArray());
+        //filesystemDataProvider.updateFilesystemFileAsSentForUpload(pathsToSet.toArray());
 
         wakeLock.release();*/
         return Result.SUCCESS;

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -482,7 +482,7 @@ public void onSaveSyncedFolderPreference(SyncedFolderParcelable syncedFolder) {
             }
             mAdapter.addSyncFolderItem(newCustomFolder);
         } else {
-            SyncedFolderDisplayItem item = syncFolderItems.get(syncedFolder.getSection());
+            SyncedFolderDisplayItem item = syncFolderItems.get(syncedFolder.getSection()-1);
             boolean dirty = item.isEnabled() != syncedFolder.getEnabled();
             item = updateSyncedFolderItem(item, syncedFolder.getLocalPath(), syncedFolder.getRemotePath(), syncedFolder
                     .getWifiOnly(), syncedFolder.getChargingOnly(), syncedFolder.getSubfolderByDate(), syncedFolder

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -153,7 +153,7 @@ private static void deleteRegistrationForAccount(Account account) {
 
             if (remoteOperationResult.getHttpCode() == HttpStatus.SC_ACCEPTED) {
                 String arbitraryValue;
-                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account.name, KEY_PUSH))) {
+                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
                             PushConfigurationState.class);
@@ -244,7 +244,7 @@ public static void pushRegistrationToServer() {
                                     PushConfigurationState pushArbitraryData = new PushConfigurationState(token,
                                             pushResponse.getDeviceIdentifier(), pushResponse.getSignature(),
                                             pushResponse.getPublicKey(), false);
-                                    arbitraryDataProvider.storeOrUpdateKeyValue(account, KEY_PUSH,
+                                    arbitraryDataProvider.storeOrUpdateKeyValue(account.name, KEY_PUSH,
                                             gson.toJson(pushArbitraryData));
                                 }
                             }

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -153,7 +153,7 @@ private static void deleteRegistrationForAccount(Account account) {
 
             if (remoteOperationResult.getHttpCode() == HttpStatus.SC_ACCEPTED) {
                 String arbitraryValue;
-                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account.name, KEY_PUSH))) {
+                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
                             PushConfigurationState.class);
@@ -244,7 +244,7 @@ public static void pushRegistrationToServer() {
                                     PushConfigurationState pushArbitraryData = new PushConfigurationState(token,
                                             pushResponse.getDeviceIdentifier(), pushResponse.getSignature(),
                                             pushResponse.getPublicKey(), false);
-                                    arbitraryDataProvider.storeOrUpdateKeyValue(account, KEY_PUSH,
+                                    arbitraryDataProvider.storeOrUpdateKeyValue(account.name, KEY_PUSH,
                                             gson.toJson(pushArbitraryData));
                                 }
                             }

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -153,7 +153,7 @@ private static void deleteRegistrationForAccount(Account account) {
 
             if (remoteOperationResult.getHttpCode() == HttpStatus.SC_ACCEPTED) {
                 String arbitraryValue;
-                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
+                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account.name, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
                             PushConfigurationState.class);

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -153,7 +153,7 @@ private static void deleteRegistrationForAccount(Account account) {
 
             if (remoteOperationResult.getHttpCode() == HttpStatus.SC_ACCEPTED) {
                 String arbitraryValue;
-                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
+                if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account.name, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
                             PushConfigurationState.class);

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -49,9 +49,9 @@
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
+import com.owncloud.android.jobs.ContactsBackupJob;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.operations.RefreshFolderOperation;
-import com.owncloud.android.services.ContactsBackupJob;
 import com.owncloud.android.ui.activity.ContactsPreferenceActivity;
 import com.owncloud.android.ui.activity.Preferences;
 import com.owncloud.android.ui.fragment.FileFragment;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -116,6 +116,7 @@ public void onCreate() {
 
         cleanOldEntries();
         updateAutoUploadEntries();
+        splitOutAutoUploadEntries();
 
         // register global protection with pass code
         registerActivityLifecycleCallbacks(new ActivityLifecycleCallbacks() {

File: src/main/java/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -1018,6 +1018,9 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                     Log_OC.i(SQL, "Create filesystem table");
                     createFileSystemTable(db);
 
+                    upgraded = true;
+                    db.setTransactionSuccessful();
+
                     // magic to split out existing synced folders in two when needed
                     // otherwise, we migrate them to their proper type (image or video)
                     Log_OC.i(SQL, "Migrate synced_folders records for image/video split");
@@ -1059,8 +1062,6 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 
                     syncedFolderProvider.deleteSyncedFoldersInList(idsToDelete);
 
-                    upgraded = true;
-                    db.setTransactionSuccessful();
                 } catch (Throwable t) {
                     Log_OC.e(TAG, "ERROR!", t);
                 } finally {

File: src/main/java/com/owncloud/android/ui/adapter/FolderSyncAdapter.java
Patch:
@@ -157,7 +157,7 @@ public void onClick(View v) {
     @Override
     public void onBindViewHolder(MainViewHolder holder, int section, int relativePosition, int absolutePosition) {
 
-        if (section != 0 && mSyncFolderItems.get(section - 1).getFilePaths() != null) {
+        if (section != 0 && mSyncFolderItems.get(section).getFilePaths() != null) {
             File file = new File(mSyncFolderItems.get(section).getFilePaths().get(relativePosition));
 
             ThumbnailsCacheManager.MediaThumbnailGenerationTask task =

File: src/main/java/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -176,6 +176,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String SYNCED_FOLDER_WIFI_ONLY = "wifi_only";
         public static final String SYNCED_FOLDER_CHARGING_ONLY = "charging_only";
         public static final String SYNCED_FOLDER_ENABLED = "enabled";
+        public static final String SYNCED_FOLDER_TYPE = "type";
         public static final String SYNCED_FOLDER_SUBFOLDER_BY_DATE = "subfolder_by_date";
         public static final String SYNCED_FOLDER_ACCOUNT = "account";
         public static final String SYNCED_FOLDER_UPLOAD_ACTION = "upload_option";

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -294,7 +294,8 @@ private SyncedFolderDisplayItem createSyncedFolderWithoutMediaFolder(@NonNull Sy
                 syncedFolder.getAccount(),
                 syncedFolder.getUploadAction(),
                 syncedFolder.isEnabled(),
-                new File(syncedFolder.getLocalPath()).getName());
+                new File(syncedFolder.getLocalPath()).getName(),
+                syncedFolder.getType());
     }
 
     /**

File: src/main/java/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -120,8 +120,7 @@ public static Bitmap scaleBitmap(Bitmap bitmap, float px, int width, int height,
         float scale = px / max;
         int w = Math.round(scale * width);
         int h = Math.round(scale * height);
-        bitmap = Bitmap.createScaledBitmap(bitmap, w, h, true);
-        return bitmap;
+        return Bitmap.createScaledBitmap(bitmap, w, h, true);
     }
     
     /**

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -112,7 +112,7 @@ public void onClick(View v) {
                 MediaFolder mediaFolder = new MediaFolder();
                 folderName = cursorFolders.getString(cursorFolders.getColumnIndex(
                         MediaStore.Images.Media.BUCKET_DISPLAY_NAME));
-                mediaFolder.type = MediaFolder.FOLDER_TYPE.IMAGE;
+                mediaFolder.type = MediaFolder.IMAGE;
                 mediaFolder.folderName = folderName;
                 mediaFolder.filePaths = new ArrayList<>();
 
@@ -181,7 +181,7 @@ public static List<MediaFolder> getVideoFolders(ContentResolver contentResolver,
                 MediaFolder mediaFolder = new MediaFolder();
                 folderName = cursorFolders.getString(cursorFolders.getColumnIndex(
                         MediaStore.Video.Media.BUCKET_DISPLAY_NAME));
-                mediaFolder.type = MediaFolder.FOLDER_TYPE.VIDEO;
+                mediaFolder.type = MediaFolder.VIDEO;
                 mediaFolder.folderName = folderName;
                 mediaFolder.filePaths = new ArrayList<>();
 

File: src/main/java/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -512,7 +512,7 @@ private Bitmap doFileInBackground(File file) {
         }
 
         private Bitmap doVideoInBackground(File file) {
-            Bitmap bitmap = null;
+            Bitmap bitmap;
             final String imageKey;
 
             if (mImageKey != null) {
@@ -522,10 +522,10 @@ private Bitmap doVideoInBackground(File file) {
             }
 
             // Check disk cache in background thread
-            Bitmap thumbnail = getBitmapFromDiskCache(imageKey);
+            bitmap = getBitmapFromDiskCache(imageKey);
 
             // Not found in disk cache
-            if (thumbnail == null) {
+            if (bitmap == null) {
                 MediaMetadataRetriever retriever = new MediaMetadataRetriever();
                 try {
                     retriever.setDataSource(file.getAbsolutePath());

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -34,6 +34,7 @@
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
 import android.support.v4.content.FileProvider;
+import android.util.Log;
 import android.webkit.MimeTypeMap;
 import android.widget.Toast;
 

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
 import android.support.v4.content.FileProvider;
-import android.util.Log;
 import android.webkit.MimeTypeMap;
 import android.widget.Toast;
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -563,7 +563,7 @@ private void initOverallUi() {
         /// step 2 - set properties of UI elements (text, visibility, enabled...)
         Button welcomeLink = (Button) findViewById(R.id.welcome_link);
         welcomeLink.setVisibility(isWelcomeLinkVisible ? View.VISIBLE : View.GONE);
-        welcomeLink.setText(String.format(getString(R.string.auth_register), getString(R.string.app_name)));
+        welcomeLink.setText(getString(R.string.auth_register));
 
         TextView instructionsView = (TextView) findViewById(R.id.instructions_message);
         if (instructionsMessageText != null) {

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -224,7 +224,7 @@ public void onCreate() {
         super.onCreate();
         Log_OC.d(TAG, "Creating ownCloud media service");
 
-        mWifiLock = ((WifiManager) getSystemService(Context.WIFI_SERVICE)).
+        mWifiLock = ((WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE)).
                 createWifiLock(WifiManager.WIFI_MODE_FULL, MEDIA_WIFI_LOCK_TAG);
 
         mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
@@ -499,7 +499,7 @@ protected void playMedia() {
 
     /** Called when media player is done playing current song. */
     public void onCompletion(MediaPlayer player) {
-        Toast.makeText(this, String.format(getString(R.string.media_event_done, mFile.getFileName())), Toast.LENGTH_LONG).show();
+        Toast.makeText(this, String.format(getString(R.string.media_event_done), mFile.getFileName()), Toast.LENGTH_LONG).show();
         if (mMediaController != null) {
             // somebody is still bound to the service
             player.seekTo(0);

File: src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -95,7 +95,7 @@ protected void onAccountSet(boolean stateWasRecovered) {
                 // current Account
                 if (file != null) {
                     setFile(file);
-                    ConflictsResolveDialog d = ConflictsResolveDialog.newInstance(file.getRemotePath(), this);
+                    ConflictsResolveDialog d = ConflictsResolveDialog.newInstance(this);
                     d.showDialog(this);
 
                 } else {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -237,7 +237,7 @@ public void onDrawerClosed(View view) {
                 if (mIsAccountChooserActive) {
                     toggleAccountList();
                 }
-                invalidateOptionsMenu();
+                supportInvalidateOptionsMenu();
                 mDrawerToggle.setDrawerIndicatorEnabled(isDrawerIndicatorAvailable());
 
                 if (pendingRunnable != null) {
@@ -250,7 +250,7 @@ public void onDrawerClosed(View view) {
             public void onDrawerOpened(View drawerView) {
                 super.onDrawerOpened(drawerView);
                 mDrawerToggle.setDrawerIndicatorEnabled(true);
-                invalidateOptionsMenu();
+                supportInvalidateOptionsMenu();
             }
         };
 

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -40,7 +40,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
-import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
@@ -448,7 +447,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
                         operation, getResources()), Toast.LENGTH_LONG);
                 msg.show();
             }
-            invalidateOptionsMenu();
+            supportInvalidateOptionsMenu();
         }
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -195,7 +195,7 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
     private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation,
                                                   RemoteOperationResult result) {
         if (result.isSuccess()) {
-            invalidateOptionsMenu();
+            supportInvalidateOptionsMenu();
         }
 
     }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -367,6 +367,7 @@ private void initWebViewLogin(String baseURL) {
 
         mLoginWebView.getSettings().setAllowFileAccess(false);
         mLoginWebView.getSettings().setJavaScriptEnabled(true);
+        mLoginWebView.getSettings().setDomStorageEnabled(true);
         mLoginWebView.getSettings().setUserAgentString(getWebLoginUserAgent());
         mLoginWebView.getSettings().setSaveFormData(false);
         mLoginWebView.getSettings().setSavePassword(false);

File: src/main/java/com/owncloud/android/ui/activity/ExternalSiteWebView.java
Patch:
@@ -110,7 +110,8 @@ protected void onCreate(Bundle savedInstanceState) {
         webSettings.setAllowFileAccess(false);
 
         // enable javascript
-        webview.getSettings().setJavaScriptEnabled(true);
+        webSettings.setJavaScriptEnabled(true);
+        webSettings.setDomStorageEnabled(true);
 
         final Activity activity = this;
         final ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar);

File: src/main/java/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -271,6 +271,7 @@ public View onCreateView(LayoutInflater inflater,
 
             WebView webView = (WebView) v.findViewById(R.id.whatsNewWebView);
             webView.getSettings().setJavaScriptEnabled(true);
+            webView.getSettings().setDomStorageEnabled(true);
             webView.getSettings().setAllowFileAccess(false);
             webView.setWebViewClient(new WebViewClient());
             webView.loadUrl(mWebUrl);

File: src/main/java/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -138,6 +138,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             
             WebSettings webSettings = mSsoWebView.getSettings();
             webSettings.setJavaScriptEnabled(true);
+            webSettings.setDomStorageEnabled(true);
             webSettings.setSavePassword(false);
             webSettings.setUserAgentString(MainApp.getUserAgent());
             webSettings.setSaveFormData(false);
@@ -184,8 +185,8 @@ public void onSaveInstanceState(Bundle outState) {
     @Override
     public void onDestroyView() {
         Log_OC.v(TAG, "onDestroyView");
-        
-        if ((ViewGroup)mSsoWebView.getParent() != null) {
+
+        if (mSsoWebView.getParent() != null) {
             ((ViewGroup)mSsoWebView.getParent()).removeView(mSsoWebView);
         }
         

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -499,7 +499,7 @@ protected void playMedia() {
 
     /** Called when media player is done playing current song. */
     public void onCompletion(MediaPlayer player) {
-        Toast.makeText(this, String.format(getString(R.string.media_event_done, mFile.getFileName())), Toast.LENGTH_LONG).show();
+        Toast.makeText(this, String.format(getString(R.string.media_event_done), mFile.getFileName()), Toast.LENGTH_LONG).show();
         if (mMediaController != null) {
             // somebody is still bound to the service
             player.seekTo(0);

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -237,7 +237,7 @@ public void onDrawerClosed(View view) {
                 if (mIsAccountChooserActive) {
                     toggleAccountList();
                 }
-                invalidateOptionsMenu();
+                supportInvalidateOptionsMenu();
                 mDrawerToggle.setDrawerIndicatorEnabled(isDrawerIndicatorAvailable());
 
                 if (pendingRunnable != null) {
@@ -250,7 +250,7 @@ public void onDrawerClosed(View view) {
             public void onDrawerOpened(View drawerView) {
                 super.onDrawerOpened(drawerView);
                 mDrawerToggle.setDrawerIndicatorEnabled(true);
-                invalidateOptionsMenu();
+                supportInvalidateOptionsMenu();
             }
         };
 

File: src/main/java/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -40,7 +40,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
-import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
@@ -448,7 +447,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
                         operation, getResources()), Toast.LENGTH_LONG);
                 msg.show();
             }
-            invalidateOptionsMenu();
+            supportInvalidateOptionsMenu();
         }
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -195,7 +195,7 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
     private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation,
                                                   RemoteOperationResult result) {
         if (result.isSuccess()) {
-            invalidateOptionsMenu();
+            supportInvalidateOptionsMenu();
         }
 
     }

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -224,7 +224,7 @@ public void onCreate() {
         super.onCreate();
         Log_OC.d(TAG, "Creating ownCloud media service");
 
-        mWifiLock = ((WifiManager) getSystemService(Context.WIFI_SERVICE)).
+        mWifiLock = ((WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE)).
                 createWifiLock(WifiManager.WIFI_MODE_FULL, MEDIA_WIFI_LOCK_TAG);
 
         mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -242,11 +242,11 @@ public void listDirectory(File directory) {
      * @return      File paths to the files checked by the user.
      */
     public String[] getCheckedFilePaths() {
-        ArrayList<String> result = new ArrayList<String>();
+        ArrayList<String> result = new ArrayList<>();
         SparseBooleanArray positions = mCurrentListView.getCheckedItemPositions();
         if (positions.size() > 0) {
             for (int i = 0; i < positions.size(); i++) {
-                if (positions.get(positions.keyAt(i)) == true) {
+                if (positions.get(positions.keyAt(i))) {
                     result.add(((File) mCurrentListView.getItemAtPosition(
                             positions.keyAt(i))).getAbsolutePath());
                 }

File: src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -223,10 +223,10 @@ private void initControllerView(View v) {
         if (mProgress != null) {
             if (mProgress instanceof SeekBar) {
                 SeekBar seeker = (SeekBar) mProgress;
-                ThemeUtils.colorPreLollipopHorizontalSeekBar(seeker);
+                ThemeUtils.colorHorizontalSeekBar(seeker);
                 seeker.setOnSeekBarChangeListener(this);
             } else {
-                ThemeUtils.colorPreLollipopHorizontalProgressBar(mProgress);
+                ThemeUtils.colorHorizontalProgressBar(mProgress, ThemeUtils.primaryAccentColor());
             }
             mProgress.setMax(1000);
         }

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -294,7 +294,7 @@ private void setupQuotaElement() {
         mQuotaProgressBar = (ProgressBar) findQuotaViewById(R.id.drawer_quota_ProgressBar);
         mQuotaTextPercentage = (TextView) findQuotaViewById(R.id.drawer_quota_percentage);
         mQuotaTextLink = (TextView) findQuotaViewById(R.id.drawer_quota_link);
-        ThemeUtils.colorPreLollipopHorizontalProgressBar(mQuotaProgressBar);
+        ThemeUtils.colorHorizontalProgressBar(mQuotaProgressBar, ThemeUtils.primaryAccentColor());
     }
 
     /**

File: src/main/java/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -281,6 +281,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             String status = getStatusText(upload);
             switch (upload.getUploadStatus()) {
                 case UPLOAD_IN_PROGRESS:
+                    ThemeUtils.colorHorizontalProgressBar(progressBar, ThemeUtils.primaryAccentColor());
                     progressBar.setProgress(0);
                     progressBar.setVisibility(View.VISIBLE);
 

File: src/main/java/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -138,7 +138,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mView = inflater.inflate(R.layout.file_download_fragment, container, false);
         
         ProgressBar progressBar = (ProgressBar)mView.findViewById(R.id.progressBar);
-        ThemeUtils.colorPreLollipopHorizontalProgressBar(progressBar);
+        ThemeUtils.colorHorizontalProgressBar(progressBar, ThemeUtils.primaryAccentColor());
         mProgressListener = new ProgressListener(progressBar);
 
         (mView.findViewById(R.id.cancelBtn)).setOnClickListener(this);

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -519,14 +519,16 @@ public boolean removeFile(OCFile file, boolean removeDBData, boolean removeLocal
 
 
     public boolean removeFolder(OCFile folder, boolean removeDBData, boolean removeLocalContent) {
-        boolean success = false;
+        boolean success = true;
         if (folder != null && folder.isFolder()) {
             if (removeDBData && folder.getFileId() != -1) {
                 success = removeFolderInDb(folder);
             }
             if (removeLocalContent && success) {
                 success = removeLocalFolder(folder);
             }
+        } else {
+            success = false;
         }
 
         return success;

File: src/main/java/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -519,14 +519,16 @@ public boolean removeFile(OCFile file, boolean removeDBData, boolean removeLocal
 
 
     public boolean removeFolder(OCFile folder, boolean removeDBData, boolean removeLocalContent) {
-        boolean success = false;
+        boolean success = true;
         if (folder != null && folder.isFolder()) {
             if (removeDBData && folder.getFileId() != -1) {
                 success = removeFolderInDb(folder);
             }
             if (removeLocalContent && success) {
                 success = removeLocalFolder(folder);
             }
+        } else {
+            success = false;
         }
 
         return success;

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -538,6 +538,8 @@ private void parseShares(ArrayList<Object> objects) {
                 RemoteOperationResult result = operation.execute(mAccount, mContext);
                 if (result.isSuccess()) {
                     OCFile file = FileStorageUtils.fillOCFile((RemoteFile) result.getData().get(0));
+                    searchForLocalFileInDefaultPath(file);
+                    file = mStorageManager.saveFileWithParent(file, mContext);
 
                     ShareType newShareType = ocShare.getShareType();
                     if (newShareType == ShareType.PUBLIC_LINK) {

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -538,6 +538,8 @@ private void parseShares(ArrayList<Object> objects) {
                 RemoteOperationResult result = operation.execute(mAccount, mContext);
                 if (result.isSuccess()) {
                     OCFile file = FileStorageUtils.fillOCFile((RemoteFile) result.getData().get(0));
+                    searchForLocalFileInDefaultPath(file);
+                    file = mStorageManager.saveFileWithParent(file, mContext);
 
                     ShareType newShareType = ocShare.getShareType();
                     if (newShareType == ShareType.PUBLIC_LINK) {

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -234,6 +234,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
         if (file != null) {
             ImageView fileIcon = (ImageView) view.findViewById(R.id.thumbnail);
             ImageView sharedIconV = (ImageView) view.findViewById(R.id.sharedIcon);
+            if (file.isSharedWithSharee() || file.isSharedWithMe()) {
+                sharedIconV.setImageResource(R.drawable.shared_via_users);
+            }
 
             fileIcon.setTag(file.getFileId());
             TextView fileName;
@@ -255,7 +258,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
 
                     // Shared icon clickable
-
                     if (file.isSharedViaLink() || file.isSharedWithSharee()) {
                         final OCFile temp = file;
                         sharedIconV.setOnClickListener(new View.OnClickListener() {
@@ -283,11 +285,9 @@ public void onClick(View view) {
                 case GRID_IMAGE:
                     // sharedIcon
                     if (file.isSharedViaLink()) {
-                        sharedIconV.setImageResource(R.drawable.shared_via_link);
                         sharedIconV.setVisibility(View.VISIBLE);
                         sharedIconV.bringToFront();
                     } else if (file.isSharedWithSharee() || file.isSharedWithMe()) {
-                        sharedIconV.setImageResource(R.drawable.shared_via_users);
                         sharedIconV.setVisibility(View.VISIBLE);
                         sharedIconV.bringToFront();
                     } else {

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -33,8 +33,8 @@
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
-import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.PermissionUtil;
+import com.owncloud.android.utils.ThemeUtils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -79,7 +79,7 @@ public void onClick(View v) {
                             }
                         });
 
-                DisplayUtils.colorSnackbar(activity.getApplicationContext(), snackbar);
+                ThemeUtils.colorSnackbar(activity.getApplicationContext(), snackbar);
 
                 snackbar.show();
             } else {

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -251,7 +251,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     fileSizeV.setVisibility(View.VISIBLE);
                     fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
 
-                    break;
+
                 case GRID_ITEM:
                     // filename
                     fileName = (TextView) view.findViewById(R.id.Filename);
@@ -264,7 +264,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         fileName.setVisibility(View.GONE);
                     }
 
-                    break;
                 case GRID_IMAGE:
                     // sharedIcon
                     ImageView sharedIconV = (ImageView) view.findViewById(R.id.sharedIcon);

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -251,7 +251,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     fileSizeV.setVisibility(View.VISIBLE);
                     fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
 
-                    break;
+
                 case GRID_ITEM:
                     // filename
                     fileName = (TextView) view.findViewById(R.id.Filename);
@@ -264,7 +264,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         fileName.setVisibility(View.GONE);
                     }
 
-                    break;
                 case GRID_IMAGE:
                     // sharedIcon
                     ImageView sharedIconV = (ImageView) view.findViewById(R.id.sharedIcon);

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1460,6 +1460,7 @@ private void updateServerStatusIconAndText(RemoteOperationResult result) {
             default:
                 mServerStatusText = 0;
                 mServerStatusIcon = 0;
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -521,6 +521,7 @@ private void selectNavigationItem(final MenuItem menuItem) {
                 break;
             default:
                 Log_OC.i(TAG, "Unknown drawer menu item clicked: " + menuItem.getTitle());
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -777,6 +777,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -298,6 +298,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         }
         default:
             retval = super.onOptionsItemSelected(item);
+            break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -376,6 +376,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             default:
                 result = super.onOptionsItemSelected(item);
+                break;
         }
         return result;
     }

File: src/main/java/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -135,6 +135,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -237,6 +237,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/ManageSpaceActivity.java
Patch:
@@ -85,6 +85,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             default:
                 Log_OC.w(TAG, "Unknown menu item triggered");
                 retval =  super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/ParticipateActivity.java
Patch:
@@ -117,18 +117,20 @@ public void onGetBetaApkClick(View view) {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        boolean retval;
+        boolean retval = true;
         switch (item.getItemId()) {
             case android.R.id.home: {
                 if (isDrawerOpen()) {
                     closeDrawer();
                 } else {
                     openDrawer();
                 }
+                break;
             }
 
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -996,6 +996,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -236,10 +236,10 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     item.setIcon(R.drawable.ic_view_list);
                     mFileListFragment.switchToGridView();
                 }
-                return true;
             }
             default:
                 retval = super.onOptionsItemSelected(item);
+                break;
         }
         return retval;
     }

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -251,7 +251,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     fileSizeV.setVisibility(View.VISIBLE);
                     fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
 
-
+                    break;
                 case GRID_ITEM:
                     // filename
                     fileName = (TextView) view.findViewById(R.id.Filename);
@@ -264,6 +264,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         fileName.setVisibility(View.GONE);
                     }
 
+                    break;
                 case GRID_IMAGE:
                     // sharedIcon
                     ImageView sharedIconV = (ImageView) view.findViewById(R.id.sharedIcon);

File: src/main/java/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -255,6 +255,7 @@ protected void onPostExecute(ResultCode result) {
                         break;
                     default:
                         messageId = R.string.common_error_unknown;
+                        break;
                 }
                 String message = String.format(
                     mAppContext.getString(messageId),

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -334,6 +334,7 @@ public void onClick(View v) {
             }
             default:
                 Log_OC.e(TAG, "Incorrect view clicked!");
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -218,6 +218,7 @@ public void onClick(View v) {
             }
             default:
                 Log_OC.e(TAG, "Incorrect view clicked!");
+                break;
         }
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -272,6 +272,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             break;
         default:
         	returnValue = super.onOptionsItemSelected(item);
+            break;
         }
         
         return returnValue;

File: src/main/java/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -34,6 +34,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.res.Resources.NotFoundException;
+import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.os.Parcelable;
@@ -764,6 +765,7 @@ private void populateDirectoryList() {
             mListView.setAdapter(sa);
             Button btnChooseFolder = (Button) findViewById(R.id.uploader_choose_folder);
             btnChooseFolder.setOnClickListener(this);
+            btnChooseFolder.getBackground().setColorFilter(ThemeUtils.primaryColor(), PorterDuff.Mode.SRC_ATOP);
 
             Button btnNewFolder = (Button) findViewById(R.id.uploader_cancel);
             btnNewFolder.setOnClickListener(this);

File: src/main/java/com/owncloud/android/ui/activity/ParticipateActivity.java
Patch:
@@ -34,7 +34,6 @@
 
 import com.owncloud.android.R;
 import com.owncloud.android.utils.AnalyticsUtils;
-import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.ThemeUtils;
 
 /**

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -219,7 +219,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if ((activity = getActivity()) != null) {
             activity.getWindowManager().getDefaultDisplay().getMetrics(displaymetrics);
             int width = displaymetrics.widthPixels;
-            if (getResources().getConfiguration().orientation == ORIENTATION_LANDSCAPE) {
+            if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
                 searchView.setMaxWidth((int) (width * 0.4));
             } else {
                 if (activity instanceof FolderPickerActivity) {

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -171,7 +171,8 @@ private void setBackgroundText() {
                 listFragment.setMessageForEmptyList(
                         R.string.file_list_empty_headline,
                         R.string.file_list_empty_moving,
-                        R.drawable.ic_list_empty_create_folder
+                        R.drawable.ic_list_empty_create_folder,
+                        true
                 );
             } else {
                 listFragment.setEmptyListLoadingMessage();

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -99,7 +99,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         setSwipeEnabled(false); // Disable pull-to-refresh
         setFabEnabled(false); // Disable FAB
         setMessageForEmptyList(R.string.file_list_empty_headline, R.string.local_file_list_empty,
-                R.drawable.ic_list_empty_folder);
+                R.drawable.ic_list_empty_folder, true);
         Log_OC.i(TAG, "onCreateView() end");
         return v;
     }

File: src/main/java/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -67,7 +67,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
         setMessageForEmptyList(
                 R.string.upload_list_empty_headline, R.string.upload_list_empty_text_auto_upload,
-                R.drawable.ic_list_empty_upload
+                R.drawable.ic_list_empty_upload, true
         );
         setOnRefreshListener(this);
         return v;

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -1017,7 +1017,7 @@ public void updateHeaderBackground() {
             if (navigationHeader != null) {
                 String background = getStorageManager().getCapability(getAccount().name).getServerBackground();
 
-                if (URLUtil.isValidUrl(background)) {
+                if (URLUtil.isValidUrl(background) || background.isEmpty()) {
                     // background image
                     SimpleTarget target = new SimpleTarget<Drawable>() {
                         @Override

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -574,7 +574,7 @@ protected void cleanSecondFragment() {
             tr.commit();
         }
         updateFragmentsVisibility(false);
-        //updateActionBarTitleAndHomeButton(null);
+        updateActionBarTitleAndHomeButton(null);
     }
 
     public void refreshListOfFilesFragment(boolean fromSearch) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -574,7 +574,7 @@ protected void cleanSecondFragment() {
             tr.commit();
         }
         updateFragmentsVisibility(false);
-        //updateActionBarTitleAndHomeButton(null);
+        updateActionBarTitleAndHomeButton(null);
     }
 
     public void refreshListOfFilesFragment(boolean fromSearch) {

File: src/main/java/com/owncloud/android/ui/adapter/RichObjectAdapter.java
Patch:
@@ -133,13 +133,12 @@ private int getThumbnailDimension(){
 
     static class RichObjectViewHolder extends RecyclerView.ViewHolder {
 
-        ImageView image;
+        public ImageView image;
 
         RichObjectViewHolder(View v) {
             super(v);
             image = (ImageView) v.findViewById(R.id.image);
         }
 
     }
-
 }

File: src/main/java/com/owncloud/android/ui/activity/ActivitiesListActivity.java
Patch:
@@ -19,7 +19,6 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package com.owncloud.android.ui.activity;
 
 import android.accounts.Account;
@@ -105,7 +104,7 @@ public class ActivitiesListActivity extends FileActivity implements ActivityList
 
     private ActivityListAdapter adapter;
     private Unbinder unbinder;
-    private OwnCloudClient mClient;
+
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -185,7 +185,6 @@ public void onCreate(Bundle savedInstanceState) {
             searchEvent = Parcels.unwrap(savedInstanceState.getParcelable(OCFileListFragment.SEARCH_EVENT));
         }
 
-        setEmptyView(searchEvent);
         searchFragment = currentSearchType != null;
     }
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -575,7 +575,7 @@ protected void cleanSecondFragment() {
             tr.commit();
         }
         updateFragmentsVisibility(false);
-        updateActionBarTitleAndHomeButton(null);
+        //updateActionBarTitleAndHomeButton(null);
     }
 
     public void refreshListOfFilesFragment(boolean fromSearch) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -39,6 +39,7 @@
 import android.content.res.Resources.NotFoundException;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.os.IBinder;
 import android.os.Parcelable;
 import android.support.design.widget.BottomNavigationView;
@@ -232,6 +233,7 @@ protected void onCreate(Bundle savedInstanceState) {
     protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
 
+
         if (!PermissionUtil.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
             // Check if we should show an explanation
             if (PermissionUtil.shouldShowRequestPermissionRationale(this,
@@ -270,8 +272,6 @@ public void onClick(View v) {
         setIndeterminate(mSyncInProgress);
         // always AFTER setContentView(...) in onCreate(); to work around bug in its implementation
 
-        setBackgroundText();
-
         upgradeNotificationForInstantUpload();
     }
 
@@ -1274,7 +1274,7 @@ private boolean checkForRemoteOperationError(RemoteOperationResult syncResult) {
      * loading or folder is empty
      */
     private void setBackgroundText() {
-        OCFileListFragment ocFileListFragment = getListOfFilesFragment();
+        final OCFileListFragment ocFileListFragment = getListOfFilesFragment();
         if (ocFileListFragment != null) {
             if (!mSyncInProgress) {
                 ocFileListFragment.setEmptyListMessage(ExtendedListFragment.SearchType.NO_SEARCH);

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -282,8 +282,8 @@ public void onGlobalLayout() {
     }
 
     public boolean onQueryTextChange(final String query) {
-        if (getFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_SECOND_FRAGMENT)
-                instanceof ExtendedListFragment){
+        if (getFragmentManager() != null && getFragmentManager().
+                findFragmentByTag(FileDisplayActivity.TAG_SECOND_FRAGMENT) instanceof ExtendedListFragment) {
             performSearch(query, false);
             return true;
         } else {

File: src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -115,7 +115,8 @@ public void clearPayload() {
             String currentPath = remotePath;
             String parentPath = null;
             String parentKey = null;
-            Node<V> currentNode = valuedNode, parentNode = null;
+            Node<V> currentNode = valuedNode;
+            Node<V> parentNode = null;
             boolean linked = false;
             while (!OCFile.ROOT_PATH.equals(currentPath) && !linked) {
                 parentPath = new File(currentPath).getParent();

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -508,7 +508,6 @@ public void onCompletion(MediaPlayer player) {
             // nobody is bound
             processStopRequest(true);
         }
-        return;
     }
 
 

File: src/main/java/com/owncloud/android/ui/CustomPopup.java
Patch:
@@ -136,7 +136,8 @@ public void showLikeQuickAction(int x, int y) {
                 LayoutParams.WRAP_CONTENT));
         root.measure(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
 
-        int rootW = root.getWidth(), rootH = root.getHeight();
+        int rootW = root.getWidth();
+        int rootH = root.getHeight();
         int screenW = mWManager.getDefaultDisplay().getWidth();
 
         int xpos = ((screenW - rootW) / 2) + x;

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -508,6 +508,7 @@ private void selectNavigationItem(final MenuItem menuItem) {
             case Menu.NONE:
                 // account clicked
                 accountClicked(menuItem.getTitle().toString());
+                break;
             default:
                 Log_OC.i(TAG, "Unknown drawer menu item clicked: " + menuItem.getTitle());
         }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -757,7 +757,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                             R.drawable.ic_view_list));
                     getListOfFilesFragment().setGridAsPreferred();
                 }
-                return true;
+                break;
             }
             default:
                 retval = super.onOptionsItemSelected(item);

File: src/main/java/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -49,6 +49,8 @@ public class CreateFolderDialogFragment
     
     public static final String CREATE_FOLDER_FRAGMENT = "CREATE_FOLDER_FRAGMENT";
 
+    private OCFile mParentFolder;
+
     /**
      * Public factory method to create new CreateFolderDialogFragment instances.
      *
@@ -63,9 +65,6 @@ public static CreateFolderDialogFragment newInstance(OCFile parentFolder) {
         return frag;
         
     }
-
-    private OCFile mParentFolder;
-    
     
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -54,6 +54,8 @@ public class RenameFileDialogFragment
 
     private static final String ARG_TARGET_FILE = "TARGET_FILE";
 
+    private OCFile mTargetFile;
+
     /**
      * Public factory method to create new RenameFileDialogFragment instances.
      * 
@@ -69,8 +71,6 @@ public static RenameFileDialogFragment newInstance(OCFile file) {
         
     }
 
-    private OCFile mTargetFile;
-    
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         mTargetFile = getArguments().getParcelable(ARG_TARGET_FILE);

File: src/main/java/com/owncloud/android/authentication/AccountUtils.java
Patch:
@@ -156,7 +156,7 @@ public static boolean setCurrentOwnCloudAccount(Context context, String accountN
                             .getDefaultSharedPreferences(context).edit();
                     appPrefs.putString("select_oc_account", accountName);
     
-                    appPrefs.commit();
+                    appPrefs.apply();
                     result = true;
                     break;
                 }

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -60,7 +60,7 @@ public static PassCodeManager getPassCodeManager() {
         return mPassCodeManagerInstance;
     }
 
-    protected PassCodeManager() {};
+    protected PassCodeManager() {}
 
     public void onActivityCreated(Activity activity) {
         if (passCodeIsEnabled() || fingerprintIsEnabled()) {

File: src/main/java/com/owncloud/android/db/OCUpload.java
Patch:
@@ -393,7 +393,4 @@ public void writeToParcel(Parcel dest, int flags) {
     }
 
     enum CanUploadFileNowStatus {NOW, LATER, FILE_GONE, ERROR}
-
-    ;
-
 }

File: src/main/java/com/owncloud/android/db/PreferenceManager.java
Patch:
@@ -274,7 +274,7 @@ private static void saveStringPreference(Context context, String key, String val
     private static void saveStringPreferenceNow(Context context, String key, String value) {
         SharedPreferences.Editor appPreferences = getDefaultSharedPreferences(context.getApplicationContext()).edit();
         appPreferences.putString(key, value);
-        appPreferences.commit();
+        appPreferences.apply();
     }
 
     private static void saveIntPreference(Context context, String key, int value) {

File: src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -61,7 +61,7 @@ public Node(String key, V payload) {
 
         public Node<V> getParent() {
             return mParent;
-        };
+        }
 
         public Set<Node<V>> getChildren() {
             return mChildren;
@@ -143,7 +143,7 @@ public void clearPayload() {
 
             return new Pair<String, String>(targetKey, linkedTo);
         }
-    };
+    }
 
 
     public Pair<V, String> removePayload(String accountName, String remotePath) {

File: src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -89,6 +89,7 @@ public MediaControlView(Context context, AttributeSet attrs) {
 
     @Override
     public void onFinishInflate() {
+        super.onFinishInflate();
         /*
         if (mRoot != null)
             initControllerView(mRoot);

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -98,9 +98,6 @@ enum State {
         PAUSED
     }
 
-    ;
-
-
     /** Current state */
     private State mState = State.STOPPED;
 

File: src/main/java/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -89,8 +89,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
                 getStorageManager().saveFile(file);
                 getStorageManager().removeShare(share);
-                
-            } else if (!existsFile(client, file.getRemotePath())) {
+
+            } else if (result.getCode() != ResultCode.MAINTENANCE_MODE && !existsFile(client, file.getRemotePath())) {
                 // unshare failed because file was deleted before
                 getStorageManager().removeFile(file, true, true);
             }

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -265,6 +265,7 @@ public void run() {
                 // The Toast must be shown in the main thread to grant that will be hidden correctly; otherwise
                 // the thread may die before, an exception will occur, and the message will be left on the screen
                 // until the app dies
+
                 Toast.makeText(
                         getContext().getApplicationContext(),
                         ErrorMessageAdapter.getErrorCauseMessage(

File: src/main/java/com/owncloud/android/ui/CustomPopup.java
Patch:
@@ -63,9 +63,11 @@ public boolean onTouch(View v, MotionEvent event) {
     }
 
     public void onCreate() {
+        // not used at the moment
     }
 
     public void onShow() {
+        // not used at the moment
     }
 
     public void preShow() {

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -334,7 +334,7 @@ public void onServiceDisconnected(ComponentName component) {
                 mUploaderBinder = null;
             }
         }
-    };
+    }
 
     /**
      * Once the file upload has changed its status -> update uploads list view

File: src/main/java/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -82,7 +82,6 @@ public static SslValidatorDialog newInstance(Context context, RemoteOperationRes
      * Instances have to be created through static {@link SslValidatorDialog#newInstance}.
      * 
      * @param context       Android context where the dialog will live
-     * @param e             Exception causing the need of prompt the user about the server certificate.
      * @param listener      Object to notice when the server certificate was added to the local certificates store.
      */
     private SslValidatorDialog(Context context, OnSslValidatorListener listener) {

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -118,11 +118,10 @@ public void onResume() {
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
+        super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(true);
     }
 
-
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
@@ -308,7 +307,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 // Obtain the file
                 if (!getFile().isDown()) {  // Download the file                    
                     Log_OC.d(TAG, getFile().getRemotePath() + " : File must be downloaded");
-                    ((FileDisplayActivity) mContainerActivity).startDownloadForSending(getFile());
+                    ((FileDisplayActivity) mContainerActivity).startDownloadForSending(getFile(),
+                            OCFileListFragment.DOWNLOAD_SEND);
                 }
                 else {
                     mContainerActivity.getFileOperationsHelper().sendDownloadedFile(getFile());

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -74,6 +74,4 @@ public void run() {
         }, delayInMillis); 
     
     }
-    
-
 }

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -358,6 +358,7 @@ public void onPageSelected(int position) {
      */
     @Override
     public void onPageScrollStateChanged(int state) {
+        // not used at the moment
     }
 
     /**
@@ -367,15 +368,14 @@ public void onPageScrollStateChanged(int state) {
      * @param   position                Position index of the first page currently being displayed. 
      *                                  Page position+1 will be visible if positionOffset is
      *                                  nonzero.
-     *                                  
      * @param   positionOffset          Value from [0, 1) indicating the offset from the page
      *                                  at position.
      * @param   positionOffsetPixels    Value in pixels indicating the offset from position. 
      */
     @Override
     public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+        // not used at the moment
     }
-    
 
     /**
      * Class waiting for broadcast events from the {@link FileDownloader} service.

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -611,6 +611,7 @@ private void startFullScreenVideo() {
 
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
         Log_OC.v(TAG, "onConfigurationChanged " + this);
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -202,6 +202,7 @@ private TextLoadAsyncTask(WeakReference<TextView> textView) {
 
         @Override
         protected void onPreExecute() {
+            // not used at the moment
         }
 
         @Override

File: src/main/java/com/owncloud/android/utils/DialogMenuItem.java
Patch:
@@ -191,7 +191,7 @@ public ContextMenu.ContextMenuInfo getMenuInfo() {
 
     @Override
     public void setShowAsAction(int actionEnum) {
-
+        // not used at the moment
     }
 
     @Override

File: src/main/java/third_parties/michaelOrtiz/TouchImageViewCustom.java
Patch:
@@ -64,7 +64,7 @@ public class TouchImageViewCustom extends ImageViewCustom {
     //
 	private Matrix matrix, prevMatrix;
 
-    private static enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM };
+    private static enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM }
     private State state;
 
     private float minScale;

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -563,6 +563,7 @@ public void afterTextChanged(Editable s) {
 
                 @Override
                 public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+                    // not used at the moment
                 }
 
                 @Override

File: src/main/java/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -60,7 +60,7 @@ public static PassCodeManager getPassCodeManager() {
         return mPassCodeManagerInstance;
     }
 
-    protected PassCodeManager() {};
+    protected PassCodeManager() {}
 
     public void onActivityCreated(Activity activity) {
         if (passCodeIsEnabled() || fingerprintIsEnabled()) {

File: src/main/java/com/owncloud/android/db/OCUpload.java
Patch:
@@ -393,7 +393,4 @@ public void writeToParcel(Parcel dest, int flags) {
     }
 
     enum CanUploadFileNowStatus {NOW, LATER, FILE_GONE, ERROR}
-
-    ;
-
 }

File: src/main/java/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -61,7 +61,7 @@ public Node(String key, V payload) {
 
         public Node<V> getParent() {
             return mParent;
-        };
+        }
 
         public Set<Node<V>> getChildren() {
             return mChildren;
@@ -143,7 +143,7 @@ public void clearPayload() {
 
             return new Pair<String, String>(targetKey, linkedTo);
         }
-    };
+    }
 
 
     public Pair<V, String> removePayload(String accountName, String remotePath) {

File: src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -89,6 +89,7 @@ public MediaControlView(Context context, AttributeSet attrs) {
 
     @Override
     public void onFinishInflate() {
+        super.onFinishInflate();
         /*
         if (mRoot != null)
             initControllerView(mRoot);

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -98,9 +98,6 @@ enum State {
         PAUSED
     }
 
-    ;
-
-
     /** Current state */
     private State mState = State.STOPPED;
 

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -2,7 +2,7 @@
  *   ownCloud Android client application
  *
  *   @author David A. Velasco
- *   Copyright (C) 2016 ownCloud Inc.
+ *   Copyright (C) 2016 ownCloud GmbH.
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,
@@ -383,7 +383,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                         mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp);
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict(), timeStamp);
             }
             Iterator <OnDatatransferProgressListener> listener = mDataTransferListeners.iterator();
             while (listener.hasNext()) {

File: src/main/java/com/owncloud/android/ui/CustomPopup.java
Patch:
@@ -63,9 +63,11 @@ public boolean onTouch(View v, MotionEvent event) {
     }
 
     public void onCreate() {
+        // not used at the moment
     }
 
     public void onShow() {
+        // not used at the moment
     }
 
     public void preShow() {

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -869,7 +869,7 @@ private void saveStoragePath(String newStoragePath) {
         MainApp.setStoragePath(mStoragePath);
         SharedPreferences.Editor editor = appPrefs.edit();
         editor.putString(PreferenceKeys.STORAGE_PATH, mStoragePath);
-        editor.commit();
+        editor.apply();
         String storageDescription = DataStorageProvider.getInstance().getStorageDescriptionByPath(mStoragePath);
         mPrefStoragePath.setSummary(storageDescription);
         mPrefStoragePath.setValue(newStoragePath);
@@ -895,7 +895,7 @@ private void saveInstantUploadPathOnPreferences() {
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
         SharedPreferences.Editor editor = appPrefs.edit();
         editor.putString(PreferenceKeys.INSTANT_UPLOAD_PATH, mUploadPath);
-        editor.commit();
+        editor.apply();
     }
 
     /**
@@ -916,7 +916,7 @@ private void saveInstantUploadVideoPathOnPreferences() {
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
         SharedPreferences.Editor editor = appPrefs.edit();
         editor.putString(PreferenceKeys.INSTANT_VIDEO_UPLOAD_PATH, mUploadVideoPath);
-        editor.commit();
+        editor.apply();
     }
 
     @Override

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -334,7 +334,7 @@ public void onServiceDisconnected(ComponentName component) {
                 mUploaderBinder = null;
             }
         }
-    };
+    }
 
     /**
      * Once the file upload has changed its status -> update uploads list view

File: src/main/java/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -82,7 +82,6 @@ public static SslValidatorDialog newInstance(Context context, RemoteOperationRes
      * Instances have to be created through static {@link SslValidatorDialog#newInstance}.
      * 
      * @param context       Android context where the dialog will live
-     * @param e             Exception causing the need of prompt the user about the server certificate.
      * @param listener      Object to notice when the server certificate was added to the local certificates store.
      */
     private SslValidatorDialog(Context context, OnSslValidatorListener listener) {

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -118,11 +118,10 @@ public void onResume() {
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
+        super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(true);
     }
 
-
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -358,6 +358,7 @@ public void onPageSelected(int position) {
      */
     @Override
     public void onPageScrollStateChanged(int state) {
+        // not used at the moment
     }
 
     /**
@@ -367,15 +368,14 @@ public void onPageScrollStateChanged(int state) {
      * @param   position                Position index of the first page currently being displayed. 
      *                                  Page position+1 will be visible if positionOffset is
      *                                  nonzero.
-     *                                  
      * @param   positionOffset          Value from [0, 1) indicating the offset from the page
      *                                  at position.
      * @param   positionOffsetPixels    Value in pixels indicating the offset from position. 
      */
     @Override
     public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+        // not used at the moment
     }
-    
 
     /**
      * Class waiting for broadcast events from the {@link FileDownloader} service.

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -620,6 +620,7 @@ private void startFullScreenVideo() {
 
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
         Log_OC.v(TAG, "onConfigurationChanged " + this);
     }
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -202,6 +202,7 @@ private TextLoadAsyncTask(WeakReference<TextView> textView) {
 
         @Override
         protected void onPreExecute() {
+            // not used at the moment
         }
 
         @Override

File: src/main/java/com/owncloud/android/utils/DialogMenuItem.java
Patch:
@@ -191,7 +191,7 @@ public ContextMenu.ContextMenuInfo getMenuInfo() {
 
     @Override
     public void setShowAsAction(int actionEnum) {
-
+        // not used at the moment
     }
 
     @Override

File: src/main/java/third_parties/michaelOrtiz/TouchImageViewCustom.java
Patch:
@@ -64,7 +64,7 @@ public class TouchImageViewCustom extends ImageViewCustom {
     //
 	private Matrix matrix, prevMatrix;
 
-    private static enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM };
+    private static enum State { NONE, DRAG, ZOOM, FLING, ANIMATE_ZOOM }
     private State state;
 
     private float minScale;

File: src/main/java/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -82,7 +82,6 @@ public static SslValidatorDialog newInstance(Context context, RemoteOperationRes
      * Instances have to be created through static {@link SslValidatorDialog#newInstance}.
      * 
      * @param context       Android context where the dialog will live
-     * @param e             Exception causing the need of prompt the user about the server certificate.
      * @param listener      Object to notice when the server certificate was added to the local certificates store.
      */
     private SslValidatorDialog(Context context, OnSslValidatorListener listener) {

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -478,8 +478,7 @@ public void setHideFileListingPermissionsToShare(OCShare share, boolean hideFile
         if (hideFileListing) {
             updateShareIntent.putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.CREATE_PERMISSION_FLAG);
         } else {
-            OwnCloudVersion serverVersion =
-                    com.owncloud.android.authentication.AccountUtils.getServerVersion(mFileActivity.getAccount());
+            OwnCloudVersion serverVersion = AccountUtils.getServerVersion(mFileActivity.getAccount());
 
             if (serverVersion != null && serverVersion.isNotReshareableFederatedSupported()) {
                 updateShareIntent.

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,6 +43,7 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
+import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -51,10 +52,8 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
-import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
-
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,7 +43,6 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
-import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -52,8 +51,10 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
+import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
+
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -174,7 +174,7 @@ private void refreshUiFromState(View editShareView) {
             boolean areEditOptionsAvailable = !isFederated || isNotReshareableFederatedSupported;
 
             if (mFile.isFolder() && areEditOptionsAvailable) {
-                /// TODO change areEditOptionsAllowed in order to delete !isFederated
+                /// TODO change areEditOptionsAvailable in order to delete !isFederated
                 // from checking when iOS is ready
                 compound = (CompoundButton) editShareView.findViewById(R.id.canEditCreateCheckBox);
                 compound.setChecked((sharePermissions & OCShare.CREATE_PERMISSION_FLAG) > 0);

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -478,8 +478,7 @@ public void setHideFileListingPermissionsToShare(OCShare share, boolean hideFile
         if (hideFileListing) {
             updateShareIntent.putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.CREATE_PERMISSION_FLAG);
         } else {
-            OwnCloudVersion serverVersion =
-                    com.owncloud.android.authentication.AccountUtils.getServerVersion(mFileActivity.getAccount());
+            OwnCloudVersion serverVersion = AccountUtils.getServerVersion(mFileActivity.getAccount());
 
             if (serverVersion != null && serverVersion.isNotReshareableFederatedSupported()) {
                 updateShareIntent.

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,6 +43,7 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
+import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -51,10 +52,8 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
-import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
-
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,7 +43,6 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
-import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -52,8 +51,10 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
+import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
+
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -174,7 +174,7 @@ private void refreshUiFromState(View editShareView) {
             boolean areEditOptionsAvailable = !isFederated || isNotReshareableFederatedSupported;
 
             if (mFile.isFolder() && areEditOptionsAvailable) {
-                /// TODO change areEditOptionsAllowed in order to delete !isFederated
+                /// TODO change areEditOptionsAvailable in order to delete !isFederated
                 // from checking when iOS is ready
                 compound = (CompoundButton) editShareView.findViewById(R.id.canEditCreateCheckBox);
                 compound.setChecked((sharePermissions & OCShare.CREATE_PERMISSION_FLAG) > 0);

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -478,8 +478,7 @@ public void setHideFileListingPermissionsToShare(OCShare share, boolean hideFile
         if (hideFileListing) {
             updateShareIntent.putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.CREATE_PERMISSION_FLAG);
         } else {
-            OwnCloudVersion serverVersion =
-                    com.owncloud.android.authentication.AccountUtils.getServerVersion(mFileActivity.getAccount());
+            OwnCloudVersion serverVersion = AccountUtils.getServerVersion(mFileActivity.getAccount());
 
             if (serverVersion != null && serverVersion.isNotReshareableFederatedSupported()) {
                 updateShareIntent.

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,6 +43,7 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
+import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -51,10 +52,8 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
-import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
-
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,7 +43,6 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
-import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -52,8 +51,10 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
+import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
+
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -174,7 +174,7 @@ private void refreshUiFromState(View editShareView) {
             boolean areEditOptionsAvailable = !isFederated || isNotReshareableFederatedSupported;
 
             if (mFile.isFolder() && areEditOptionsAvailable) {
-                /// TODO change areEditOptionsAllowed in order to delete !isFederated
+                /// TODO change areEditOptionsAvailable in order to delete !isFederated
                 // from checking when iOS is ready
                 compound = (CompoundButton) editShareView.findViewById(R.id.canEditCreateCheckBox);
                 compound.setChecked((sharePermissions & OCShare.CREATE_PERMISSION_FLAG) > 0);

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -478,8 +478,7 @@ public void setHideFileListingPermissionsToShare(OCShare share, boolean hideFile
         if (hideFileListing) {
             updateShareIntent.putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.CREATE_PERMISSION_FLAG);
         } else {
-            OwnCloudVersion serverVersion =
-                    com.owncloud.android.authentication.AccountUtils.getServerVersion(mFileActivity.getAccount());
+            OwnCloudVersion serverVersion = AccountUtils.getServerVersion(mFileActivity.getAccount());
 
             if (serverVersion != null && serverVersion.isNotReshareableFederatedSupported()) {
                 updateShareIntent.

File: src/main/java/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -43,6 +43,7 @@
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
+import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
@@ -51,10 +52,8 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
-import org.nextcloud.providers.UsersAndGroupsSearchProvider;
 import java.util.ArrayList;
 
-
 /**
  * Activity for sharing files
  */

File: src/main/java/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -479,7 +479,8 @@ public void setHideFileListingPermissionsToShare(OCShare share, boolean hideFile
             updateShareIntent.putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.CREATE_PERMISSION_FLAG);
         } else {
             updateShareIntent.
-                    putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS, OCShare.FEDERATED_PERMISSIONS_FOR_FOLDER);
+                    putExtra(OperationsService.EXTRA_SHARE_PERMISSIONS,
+                            OCShare.FEDERATED_PERMISSIONS_FOR_FOLDER_UP_TO_OC9);
         }
 
         queueShareIntent(updateShareIntent);

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -164,7 +164,7 @@ private void refreshUiFromState(View editShareView) {
             boolean areEditOptionsAvailable = !isFederated || isNotReshareableFederatedSupported;
 
             if (mFile.isFolder() && areEditOptionsAvailable) {
-                /// TODO change areEditOptionsAllowed in order to delete !isFederated
+                /// TODO change areEditOptionsAvailable in order to delete !isFederated
                 // from checking when iOS is ready
                 compound = (CompoundButton) editShareView.findViewById(R.id.canEditCreateCheckBox);
                 compound.setChecked((sharePermissions & OCShare.CREATE_PERMISSION_FLAG) > 0);

File: src/main/java/com/owncloud/android/db/UploadResult.java
Patch:
@@ -36,7 +36,6 @@ public enum UploadResult {
     SERVICE_INTERRUPTED(10),
     DELAYED_FOR_CHARGING(11),
     MAINTENANCE_MODE(12);
-    MAINTENANCE_MODE(12);
 
     private final int value;
 

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -30,7 +30,6 @@
 import com.owncloud.android.operations.CreateShareViaLinkOperation;
 import com.owncloud.android.operations.CreateShareWithShareeOperation;
 import com.owncloud.android.operations.DownloadFileOperation;
-import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
 import com.owncloud.android.operations.RenameFileOperation;

File: src/main/java/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -90,7 +90,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 getStorageManager().saveFile(file);
                 getStorageManager().removeShare(share);
 
-            } else if (result.getCode() != ResultCode.MAINTENANCE_MODE && !existsFile(client, file.getRemotePath())) {
+            } else if (!existsFile(client, file.getRemotePath()) && result.getCode() != ResultCode.MAINTENANCE_MODE) {
                 // unshare failed because file was deleted before
                 getStorageManager().removeFile(file, true, true);
             }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1553,7 +1553,7 @@ private void updateStatusIconFailUserName(int failedStatusText){
 
     private void updateFailedAuthStatusIconAndText(int failedStatusText){
         mAuthStatusIcon = R.drawable.ic_alert;
-        mAuthStatusText = failedStatusText;
+        mAuthStatusText = statusText;
     }
 
     private void updateServerStatusIconNoRegularAuth() {

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -84,6 +84,9 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 } else if (result.getCode() == ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER) {
                     message = res.getString(R.string.filename_forbidden_charaters_from_server);
 
+                } else if (result.getCode() == ResultCode.MAINTENANCE_MODE) {
+                    message = res.getString(R.string.maintenance_mode);
+
                 } else {
                     message = String.format(
                             res.getString(R.string.uploader_upload_failed_content_single),

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -30,7 +30,6 @@
 import com.owncloud.android.operations.CreateShareViaLinkOperation;
 import com.owncloud.android.operations.CreateShareWithShareeOperation;
 import com.owncloud.android.operations.DownloadFileOperation;
-import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
 import com.owncloud.android.operations.RenameFileOperation;

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1545,9 +1545,10 @@ private void updateAuthStatusIconAndText(RemoteOperationResult result) {
         }
     }
 
-    private void updateStatusIconFailUserName(int statusText) {
+
+    private void updateStatusIconFailUserName(int failedStatusText){
         mAuthStatusIcon = R.drawable.ic_alert;
-        mAuthStatusText = statusText;
+        mAuthStatusText = failedStatusText;
     }
 
     private void updateFailedAuthStatusIconAndText(int failedStatusText){

File: src/main/java/com/owncloud/android/db/UploadResult.java
Patch:
@@ -36,6 +36,7 @@ public enum UploadResult {
     SERVICE_INTERRUPTED(10),
     DELAYED_FOR_CHARGING(11),
     MAINTENANCE_MODE(12);
+    MAINTENANCE_MODE(12);
 
     private final int value;
 

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -84,6 +84,9 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 } else if (result.getCode() == ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER) {
                     message = res.getString(R.string.filename_forbidden_charaters_from_server);
 
+                } else if (result.getCode() == ResultCode.MAINTENANCE_MODE) {
+                    message = res.getString(R.string.maintenance_mode);
+
                 } else {
                     message = String.format(
                             res.getString(R.string.uploader_upload_failed_content_single),

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -30,7 +30,6 @@
 import com.owncloud.android.operations.CreateShareViaLinkOperation;
 import com.owncloud.android.operations.CreateShareWithShareeOperation;
 import com.owncloud.android.operations.DownloadFileOperation;
-import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
 import com.owncloud.android.operations.RenameFileOperation;

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1546,9 +1546,9 @@ private void updateAuthStatusIconAndText(RemoteOperationResult result) {
     }
 
 
-    private void updateStatusIconFailUserName(int statusText){
+    private void updateFailedAuthStatusIconAndText(int failedStatusText){
         mAuthStatusIcon = R.drawable.ic_alert;
-        mAuthStatusText = statusText;
+        mAuthStatusText = failedStatusText;
     }
 
     private void updateServerStatusIconNoRegularAuth() {

File: src/main/java/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -90,7 +90,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 getStorageManager().saveFile(file);
                 getStorageManager().removeShare(share);
 
-            } else if (result.getCode() != ResultCode.MAINTENANCE_MODE && !existsFile(client, file.getRemotePath())) {
+            } else if (!existsFile(client, file.getRemotePath()) && result.getCode() != ResultCode.MAINTENANCE_MODE) {
                 // unshare failed because file was deleted before
                 getStorageManager().removeFile(file, true, true);
             }

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1546,9 +1546,9 @@ private void updateAuthStatusIconAndText(RemoteOperationResult result) {
     }
 
 
-    private void updateFailedAuthStatusIconAndText(int failedStatusText){
+    private void updateStatusIconFailUserName(int statusText){
         mAuthStatusIcon = R.drawable.ic_alert;
-        mAuthStatusText = failedStatusText;
+        mAuthStatusText = statusText;
     }
 
     private void updateServerStatusIconNoRegularAuth() {

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -84,6 +84,9 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 } else if (result.getCode() == ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER) {
                     message = res.getString(R.string.filename_forbidden_charaters_from_server);
 
+                } else if (result.getCode() == ResultCode.MAINTENANCE_MODE) {
+                    message = res.getString(R.string.maintenance_mode);
+
                 } else {
                     message = String.format(
                             res.getString(R.string.uploader_upload_failed_content_single),

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -30,7 +30,6 @@
 import com.owncloud.android.operations.CreateShareViaLinkOperation;
 import com.owncloud.android.operations.CreateShareWithShareeOperation;
 import com.owncloud.android.operations.DownloadFileOperation;
-import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.MoveFileOperation;
 import com.owncloud.android.operations.RemoveFileOperation;
 import com.owncloud.android.operations.RenameFileOperation;

File: src/main/java/com/owncloud/android/db/UploadResult.java
Patch:
@@ -34,7 +34,7 @@ public enum UploadResult {
     FILE_NOT_FOUND(8),
     DELAYED_FOR_WIFI(9),
     SERVICE_INTERRUPTED(10),
-    DELAYED_FOR_CHARGING(11);
+    DELAYED_FOR_CHARGING(11),
     MAINTENANCE_MODE(12);
 
     private final int value;

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1546,9 +1546,9 @@ private void updateAuthStatusIconAndText(RemoteOperationResult result) {
     }
 
 
-    private void updateStatusIconFailUserName(int statusText){
+    private void updateFailedAuthStatusIconAndText(int failedStatusText){
         mAuthStatusIcon = R.drawable.ic_alert;
-        mAuthStatusText = statusText;
+        mAuthStatusText = failedStatusText;
     }
 
     private void updateServerStatusIconNoRegularAuth() {

File: src/main/java/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -89,8 +89,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
                 getStorageManager().saveFile(file);
                 getStorageManager().removeShare(share);
-                
-            } else if (!existsFile(client, file.getRemotePath())) {
+
+            } else if (!existsFile(client, file.getRemotePath()) && result.getCode() != ResultCode.MAINTENANCE_MODE) {
                 // unshare failed because file was deleted before
                 getStorageManager().removeFile(file, true, true);
             }

File: src/main/java/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -323,6 +323,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             remoteParentPath = remoteParentPath.endsWith(OCFile.PATH_SEPARATOR) ?
                     remoteParentPath : remoteParentPath + OCFile.PATH_SEPARATOR;
             result = grantFolderExistence(remoteParentPath, client);
+
             if (!result.isSuccess()) {
 
                 return result;

File: src/main/java/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -74,6 +74,4 @@ public void run() {
         }, delayInMillis); 
     
     }
-    
-
 }

File: src/main/java/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -85,6 +85,9 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 } else if (result.getCode() == ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER) {
                     message = res.getString(R.string.filename_forbidden_charaters_from_server);
 
+                } else if (result.getCode() == ResultCode.MAINTENANCE_MODE) {
+                    message = res.getString(R.string.maintenance_mode);
+
                 } else {
                     message = String.format(
                             res.getString(R.string.uploader_upload_failed_content_single),

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -466,9 +466,7 @@ protected void onNewIntent(Intent intent) {
     private Fragment chooseInitialSecondFragment(OCFile file) {
         Fragment secondFragment = null;
         if (file != null && !file.isFolder()) {
-            if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)
-                    && file.getLastSyncDateForProperties() > 0  // temporal fix
-                    ) {
+            if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)) {
                 int startPlaybackPosition =
                         getIntent().getIntExtra(PreviewVideoActivity.EXTRA_START_POSITION, 0);
                 boolean autoplay =

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -84,7 +84,7 @@
  *
  * On next invocation of {@link FileUploader} uploaded files which
  * previously failed will be uploaded again until either upload succeeded or a
- * fatal error occured.
+ * fatal error occurred.
  *
  * Every file passed to this service is uploaded. No filtering is performed.
  * However, Intent keys (e.g., KEY_WIFI_ONLY) are obeyed.

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -135,7 +135,7 @@ enum AudioFocus {
     /** Flag signaling if the audio should be played immediately when the file is prepared */
     protected boolean mPlayOnPrepared;
 
-    /** Position, in miliseconds, where the audio should be started */
+    /** Position, in milliseconds, where the audio should be started */
     private int mStartPosition;
 
     /** Interface to access the service through binding */
@@ -568,7 +568,7 @@ private void updateNotification(String content) {
      *
      * The system will avoid finishing the service as much as possible when resources as low.
      *
-     * A notification must be created to keep the user aware of the existance of the service.
+     * A notification must be created to keep the user aware of the existence of the service.
      */
     private void setUpAsForeground(String content) {
         String ticker = String.format(getString(R.string.media_notif_ticker), getString(R.string.app_name));

File: src/main/java/com/owncloud/android/services/observer/FileObserverService.java
Patch:
@@ -177,7 +177,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     (Account) intent.getParcelableExtra(ARG_ACCOUNT));
 
         } else {
-            Log_OC.e(TAG, "Unknown action recieved; ignoring it: " + intent.getAction());
+            Log_OC.e(TAG, "Unknown action received; ignoring it: " + intent.getAction());
         }
 
         return Service.START_STICKY;

File: src/main/java/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -72,7 +72,7 @@ public boolean accept(File pathname) {
                     observer.addListener(new AdvancedFileAlterationListener(syncedFolder));
                     monitor.addObserver(observer);
                 } catch (Exception e) {
-                    Log_OC.d(TAG, "Failed getting an observer to intialize " + e);
+                    Log_OC.d(TAG, "Failed getting an observer to initialize " + e);
                 }
 
             }
@@ -138,7 +138,7 @@ public void restartObserver(SyncedFolder syncedFolder) {
                         advancedFileAlterationObserver.addListener(new AdvancedFileAlterationListener(syncedFolder));
                         monitor.addObserver(advancedFileAlterationObserver);
                     } catch (Exception e) {
-                        Log_OC.d(TAG, "Failed getting an observer to intialize");
+                        Log_OC.d(TAG, "Failed getting an observer to initialize");
                     }
                 } else {
                     monitor.removeObserver(fileAlterationObserver);
@@ -155,7 +155,7 @@ public void restartObserver(SyncedFolder syncedFolder) {
                 advancedFileAlterationObserver.addListener(new AdvancedFileAlterationListener(syncedFolder));
                 monitor.addObserver(advancedFileAlterationObserver);
             } catch (Exception e) {
-                Log_OC.d(TAG, "Failed getting an observer to intialize");
+                Log_OC.d(TAG, "Failed getting an observer to initialize");
             }
 
         }

File: src/main/java/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -180,7 +180,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
                 
             } else {
                 Log_OC.d(TAG, "Leaving synchronization before synchronizing the root folder " +
-                        "because cancelation request");
+                        "because cancellation request");
             }
             
             
@@ -351,7 +351,7 @@ private void syncChildren(List<OCFile> files) {
         if (mCancellation && i <files.size()) {
             Log_OC.d(TAG,
                     "Leaving synchronization before synchronizing " + files.get(i).getRemotePath() +
-                            " due to cancelation request");
+                            " due to cancellation request");
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -222,7 +222,7 @@ public class AccountCreationCallback implements AccountManagerCallback<Bundle> {
         boolean mMandatoryCreation;
 
         /**
-         * Constuctor
+         * Constructor
          *
          * @param mandatoryCreation     When 'true', if an account was not created, the app is closed.
          */

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -171,7 +171,7 @@ public void onClick(View v) {
 
 
     /**
-     * Binds the appropiate listeners to the input boxes receiving each digit of the pass code.
+     * Binds the appropriate listeners to the input boxes receiving each digit of the pass code.
      */
     protected void setTextListeners() {
     

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -90,7 +90,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(R.layout.upload_list_layout);
 
-        // this activity has no file really bound, it's for mulitple accounts at the same time; should no inherit
+        // this activity has no file really bound, it's for multiple accounts at the same time; should no inherit
         // from FileActivity; moreover, some behaviours inherited from FileActivity should be delegated to Fragments;
         // but that's other story
         setFile(null);

File: src/main/java/com/owncloud/android/ui/fragment/ExpandableListFragment.java
Patch:
@@ -82,8 +82,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     @Override
     public boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {
-        // to be @overriden
-        Log_OC.e(TAG, "onChildClick(). This method should be overriden!");
+        // to be @overridden
+        Log_OC.e(TAG, "onChildClick(). This method should be overridden!");
         return false;
     }
 }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -549,7 +549,7 @@ protected void saveIndexAndTopPosition(int index) {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        // to be @overriden
+        // to be @overridden
     }
 
     @Override

File: src/main/java/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -84,7 +84,7 @@
  *
  * On next invocation of {@link FileUploader} uploaded files which
  * previously failed will be uploaded again until either upload succeeded or a
- * fatal error occured.
+ * fatal error occurred.
  *
  * Every file passed to this service is uploaded. No filtering is performed.
  * However, Intent keys (e.g., KEY_WIFI_ONLY) are obeyed.

File: src/main/java/com/owncloud/android/media/MediaService.java
Patch:
@@ -135,7 +135,7 @@ enum AudioFocus {
     /** Flag signaling if the audio should be played immediately when the file is prepared */
     protected boolean mPlayOnPrepared;
 
-    /** Position, in miliseconds, where the audio should be started */
+    /** Position, in milliseconds, where the audio should be started */
     private int mStartPosition;
 
     /** Interface to access the service through binding */
@@ -568,7 +568,7 @@ private void updateNotification(String content) {
      *
      * The system will avoid finishing the service as much as possible when resources as low.
      *
-     * A notification must be created to keep the user aware of the existance of the service.
+     * A notification must be created to keep the user aware of the existence of the service.
      */
     private void setUpAsForeground(String content) {
         String ticker = String.format(getString(R.string.media_notif_ticker), getString(R.string.app_name));

File: src/main/java/com/owncloud/android/services/observer/FileObserverService.java
Patch:
@@ -177,7 +177,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     (Account) intent.getParcelableExtra(ARG_ACCOUNT));
 
         } else {
-            Log_OC.e(TAG, "Unknown action recieved; ignoring it: " + intent.getAction());
+            Log_OC.e(TAG, "Unknown action received; ignoring it: " + intent.getAction());
         }
 
         return Service.START_STICKY;

File: src/main/java/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -72,7 +72,7 @@ public boolean accept(File pathname) {
                     observer.addListener(new AdvancedFileAlterationListener(syncedFolder));
                     monitor.addObserver(observer);
                 } catch (Exception e) {
-                    Log_OC.d(TAG, "Failed getting an observer to intialize " + e);
+                    Log_OC.d(TAG, "Failed getting an observer to initialize " + e);
                 }
 
             }
@@ -138,7 +138,7 @@ public void restartObserver(SyncedFolder syncedFolder) {
                         advancedFileAlterationObserver.addListener(new AdvancedFileAlterationListener(syncedFolder));
                         monitor.addObserver(advancedFileAlterationObserver);
                     } catch (Exception e) {
-                        Log_OC.d(TAG, "Failed getting an observer to intialize");
+                        Log_OC.d(TAG, "Failed getting an observer to initialize");
                     }
                 } else {
                     monitor.removeObserver(fileAlterationObserver);
@@ -155,7 +155,7 @@ public void restartObserver(SyncedFolder syncedFolder) {
                 advancedFileAlterationObserver.addListener(new AdvancedFileAlterationListener(syncedFolder));
                 monitor.addObserver(advancedFileAlterationObserver);
             } catch (Exception e) {
-                Log_OC.d(TAG, "Failed getting an observer to intialize");
+                Log_OC.d(TAG, "Failed getting an observer to initialize");
             }
 
         }

File: src/main/java/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -180,7 +180,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
                 
             } else {
                 Log_OC.d(TAG, "Leaving synchronization before synchronizing the root folder " +
-                        "because cancelation request");
+                        "because cancellation request");
             }
             
             
@@ -351,7 +351,7 @@ private void syncChildren(List<OCFile> files) {
         if (mCancellation && i <files.size()) {
             Log_OC.d(TAG,
                     "Leaving synchronization before synchronizing " + files.get(i).getRemotePath() +
-                            " due to cancelation request");
+                            " due to cancellation request");
         }
     }
 

File: src/main/java/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -222,7 +222,7 @@ public class AccountCreationCallback implements AccountManagerCallback<Bundle> {
         boolean mMandatoryCreation;
 
         /**
-         * Constuctor
+         * Constructor
          *
          * @param mandatoryCreation     When 'true', if an account was not created, the app is closed.
          */

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -171,7 +171,7 @@ public void onClick(View v) {
 
 
     /**
-     * Binds the appropiate listeners to the input boxes receiving each digit of the pass code.
+     * Binds the appropriate listeners to the input boxes receiving each digit of the pass code.
      */
     protected void setTextListeners() {
     

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -90,7 +90,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(R.layout.upload_list_layout);
 
-        // this activity has no file really bound, it's for mulitple accounts at the same time; should no inherit
+        // this activity has no file really bound, it's for multiple accounts at the same time; should no inherit
         // from FileActivity; moreover, some behaviours inherited from FileActivity should be delegated to Fragments;
         // but that's other story
         setFile(null);

File: src/main/java/com/owncloud/android/ui/fragment/ExpandableListFragment.java
Patch:
@@ -82,8 +82,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     @Override
     public boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {
-        // to be @overriden
-        Log_OC.e(TAG, "onChildClick(). This method should be overriden!");
+        // to be @overridden
+        Log_OC.e(TAG, "onChildClick(). This method should be overridden!");
         return false;
     }
 }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -549,7 +549,7 @@ protected void saveIndexAndTopPosition(int index) {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        // to be @overriden
+        // to be @overridden
     }
 
     @Override

File: src/gplay/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -156,7 +156,7 @@ private static void deleteRegistrationForAccount(Account account) {
                 if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
-                            PushArbitraryData.class);
+                            PushConfigurationState.class);
                     RemoteOperation unregisterAccountDeviceForProxyOperation =
                             new UnregisterAccountDeviceForProxyOperation(context.getResources().
                                     getString(R.string.push_server_url),

File: src/modified/java/com/owncloud/android/services/firebase/NCFirebaseInstanceIDService.java
Patch:
@@ -36,8 +36,6 @@ public void onTokenRefresh() {
         //You can implement this method to store the token on your server
         if (!TextUtils.isEmpty(getResources().getString(R.string.push_server_url))) {
             PreferenceManager.setPushToken(MainApp.getAppContext(), FirebaseInstanceId.getInstance().getToken());
-            PreferenceManager.setPushTokenUpdateTime(MainApp.getAppContext(), System.currentTimeMillis());
-
             PushUtils.pushRegistrationToServer();
         }
     }

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -93,7 +93,7 @@ public class ExtendedListFragment extends Fragment
     private static final String KEY_IS_GRID_VISIBLE = "IS_GRID_VISIBLE";
 
     protected SwipeRefreshLayout mRefreshListLayout;
-    private SwipeRefreshLayout mRefreshGridLayout;
+    protected SwipeRefreshLayout mRefreshGridLayout;
     protected SwipeRefreshLayout mRefreshEmptyLayout;
     protected LinearLayout mEmptyListContainer;
     protected TextView mEmptyListMessage;

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -156,7 +156,7 @@ private static void deleteRegistrationForAccount(Account account) {
                 if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
-                            PushArbitraryData.class);
+                            PushConfigurationState.class);
                     RemoteOperation unregisterAccountDeviceForProxyOperation =
                             new UnregisterAccountDeviceForProxyOperation(context.getResources().
                                     getString(R.string.push_server_url),

File: src/modified/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -156,7 +156,7 @@ private static void deleteRegistrationForAccount(Account account) {
                 if (!TextUtils.isEmpty(arbitraryValue = arbitraryDataProvider.getValue(account, KEY_PUSH))) {
                     Gson gson = new Gson();
                     PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryValue,
-                            PushArbitraryData.class);
+                            PushConfigurationState.class);
                     RemoteOperation unregisterAccountDeviceForProxyOperation =
                             new UnregisterAccountDeviceForProxyOperation(context.getResources().
                                     getString(R.string.push_server_url),

File: src/main/java/com/owncloud/android/datamodel/PushConfigurationState.java
Patch:
@@ -20,17 +20,17 @@
 
 package com.owncloud.android.datamodel;
 
-public class PushArbitraryData {
+public class PushConfigurationState {
     public String pushToken;
     public String deviceIdentifier;
     public String deviceIdentifierSignature;
     public String userPublicKey;
     public boolean shouldBeDeleted;
 
-    public PushArbitraryData() {
+    public PushConfigurationState() {
     }
 
-    public PushArbitraryData(String pushToken, String deviceIdentifier, String deviceIdentifierSignature,
+    public PushConfigurationState(String pushToken, String deviceIdentifier, String deviceIdentifierSignature,
                              String userPublicKey, boolean shouldBeDeleted) {
         this.pushToken = pushToken;
         this.deviceIdentifier = deviceIdentifier;

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -52,7 +52,7 @@
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
-import com.owncloud.android.datamodel.PushArbitraryData;
+import com.owncloud.android.datamodel.PushConfigurationState;
 import com.owncloud.android.lib.common.UserInfo;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -361,8 +361,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                             account, PushUtils.KEY_PUSH)) &&
                                             !TextUtils.isEmpty(getResources().getString(R.string.push_server_url))) {
                                         Gson gson = new Gson();
-                                        PushArbitraryData pushArbitraryData = gson.fromJson(arbitraryDataPushString,
-                                                PushArbitraryData.class);
+                                        PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryDataPushString,
+                                                PushConfigurationState.class);
                                         pushArbitraryData.setShouldBeDeleted(true);
                                         arbitraryDataProvider.storeOrUpdateKeyValue(account, PushUtils.KEY_PUSH,
                                                 gson.toJson(pushArbitraryData));

File: src/main/java/com/owncloud/android/datamodel/PushConfigurationState.java
Patch:
@@ -20,17 +20,17 @@
 
 package com.owncloud.android.datamodel;
 
-public class PushArbitraryData {
+public class PushConfigurationState {
     public String pushToken;
     public String deviceIdentifier;
     public String deviceIdentifierSignature;
     public String userPublicKey;
     public boolean shouldBeDeleted;
 
-    public PushArbitraryData() {
+    public PushConfigurationState() {
     }
 
-    public PushArbitraryData(String pushToken, String deviceIdentifier, String deviceIdentifierSignature,
+    public PushConfigurationState(String pushToken, String deviceIdentifier, String deviceIdentifierSignature,
                              String userPublicKey, boolean shouldBeDeleted) {
         this.pushToken = pushToken;
         this.deviceIdentifier = deviceIdentifier;

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -52,7 +52,7 @@
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.ArbitraryDataProvider;
-import com.owncloud.android.datamodel.PushArbitraryData;
+import com.owncloud.android.datamodel.PushConfigurationState;
 import com.owncloud.android.lib.common.UserInfo;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -361,8 +361,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                             account, PushUtils.KEY_PUSH)) &&
                                             !TextUtils.isEmpty(getResources().getString(R.string.push_server_url))) {
                                         Gson gson = new Gson();
-                                        PushArbitraryData pushArbitraryData = gson.fromJson(arbitraryDataPushString,
-                                                PushArbitraryData.class);
+                                        PushConfigurationState pushArbitraryData = gson.fromJson(arbitraryDataPushString,
+                                                PushConfigurationState.class);
                                         pushArbitraryData.setShouldBeDeleted(true);
                                         arbitraryDataProvider.storeOrUpdateKeyValue(account, PushUtils.KEY_PUSH,
                                                 gson.toJson(pushArbitraryData));

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -466,9 +466,7 @@ protected void onNewIntent(Intent intent) {
     private Fragment chooseInitialSecondFragment(OCFile file) {
         Fragment secondFragment = null;
         if (file != null && !file.isFolder()) {
-            if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)
-                    && file.getLastSyncDateForProperties() > 0  // temporal fix
-                    ) {
+            if (file.isDown() && PreviewMediaFragment.canBePreviewed(file)) {
                 int startPlaybackPosition =
                         getIntent().getIntExtra(PreviewVideoActivity.EXTRA_START_POSITION, 0);
                 boolean autoplay =

File: src/main/java/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -358,7 +358,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                     String arbitraryDataPushString;
 
                                     if (!TextUtils.isEmpty(arbitraryDataPushString = arbitraryDataProvider.getValue(
-                                            account, PushUtils.KEY_PUSH))) {
+                                            account, PushUtils.KEY_PUSH)) &&
+                                            !TextUtils.isEmpty(getResources().getString(R.string.push_server_url))) {
                                         Gson gson = new Gson();
                                         PushArbitraryData pushArbitraryData = gson.fromJson(arbitraryDataPushString,
                                                 PushArbitraryData.class);

File: src/main/java/com/owncloud/android/services/ContactsImportJob.java
Patch:
@@ -64,9 +64,7 @@ protected Result onRunJob(Params params) {
             vCards.addAll(Ezvcard.parse(file).all());
 
             for (int i = 0; i < intArray.length; i++ ){
-                if (intArray[i] == 1){
-                    operations.insertContact(vCards.get(i));
-                }
+                operations.insertContact(vCards.get(intArray[i]));
             }
         } catch (Exception e) {
             Log_OC.e(TAG, e.getMessage());

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -1199,7 +1199,8 @@ && getStorageManager() != null) {
 
                     Account account = AccountUtils.getCurrentOwnCloudAccount(DrawerActivity.this);
 
-                    if (account != null && getStorageManager().getCapability(account.name) != null &&
+                    if (account != null && getStorageManager() != null &&
+                            getStorageManager().getCapability(account.name) != null &&
                             getStorageManager().getCapability(account.name).getExternalLinks().isTrue()) {
 
                         int count = sharedPreferences.getInt(EXTERNAL_LINKS_COUNT, -1);

File: src/main/java/com/owncloud/android/datamodel/ArbitraryDataProvider.java
Patch:
@@ -1,9 +1,10 @@
 /**
  * Nextcloud Android client application
- * <p>
+ *
  * Copyright (C) 2017 Tobias Kaminsky
+ * Copyright (C) 2017 Mario Danic
  * Copyright (C) 2017 Nextcloud.
- * <p>
+ *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
  * License as published by the Free Software Foundation; either

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -33,7 +33,6 @@
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.support.PersistableBundleCompat;
 import com.owncloud.android.R;
-import com.owncloud.android.datamodel.ArbitraryDataProvider;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.services.ContactsBackupJob;
@@ -56,8 +55,6 @@ public class ContactsPreferenceActivity extends FileActivity implements FileFrag
     public static final String PREFERENCE_CONTACTS_AUTOMATIC_BACKUP = "PREFERENCE_CONTACTS_AUTOMATIC_BACKUP";
     public static final String PREFERENCE_CONTACTS_LAST_BACKUP = "PREFERENCE_CONTACTS_LAST_BACKUP";
 
-    private ArbitraryDataProvider arbitraryDataProvider;
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -117,7 +117,7 @@ public View onCreateView(final LayoutInflater inflater, ViewGroup container, Bun
         onCheckedChangeListener = new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                if (checkAndAskForContactsReadPermission(PermissionUtil.PERMISSIONS_READ_CONTACTS_AUTOMATIC)) {
+                if (checkAndAskForContactsReadPermission()) {
                     if (isChecked) {
                         setAutomaticBackup(true);
                     } else {
@@ -243,7 +243,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
 
     @OnClick(R.id.contacts_backup_now)
     public void backupContacts() {
-        if (checkAndAskForContactsReadPermission(PermissionUtil.PERMISSIONS_READ_CONTACTS_MANUALLY)) {
+        if (checkAndAskForContactsReadPermission()) {
             startContactsBackupJob();
         }
     }
@@ -284,7 +284,7 @@ private void setAutomaticBackup(final boolean bool) {
                 String.valueOf(bool));
     }
 
-    private boolean checkAndAskForContactsReadPermission(final int permission) {
+    private boolean checkAndAskForContactsReadPermission() {
         final ContactsPreferenceActivity contactsPreferenceActivity = (ContactsPreferenceActivity) getActivity();
 
         // check permissions

File: src/main/java/com/owncloud/android/services/AutoUploadJob.java
Patch:
@@ -52,7 +52,7 @@ protected Result onRunJob(Params params) {
         final String filePath = bundle.getString(LOCAL_PATH, "");
         final String remotePath = bundle.getString(REMOTE_PATH, "");
         final Account account = AccountUtils.getOwnCloudAccountByName(context, bundle.getString(ACCOUNT, ""));
-        final Integer uploadBehaviour = bundle.getInt(UPLOAD_BEHAVIOUR, -1);
+        final Integer uploadBehaviour = bundle.getInt(UPLOAD_BEHAVIOUR, FileUploader.LOCAL_BEHAVIOUR_FORGET);
 
 
         File file = new File(filePath);

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -45,12 +45,13 @@
 import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
 import com.owncloud.android.datamodel.SyncedFolderProvider;
+import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.ui.adapter.FolderSyncAdapter;
 import com.owncloud.android.ui.decoration.MediaGridItemDecoration;
 import com.owncloud.android.ui.dialog.SyncedFolderPreferencesDialogFragment;
 import com.owncloud.android.ui.dialog.parcel.SyncedFolderParcelable;
-import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.AnalyticsUtils;
+import com.owncloud.android.utils.DisplayUtils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -303,7 +304,7 @@ private SyncedFolderDisplayItem createSyncedFolderFromMediaFolder(@NonNull Media
                 false,
                 false,
                 AccountUtils.getCurrentOwnCloudAccount(this).name,
-                0,
+                FileUploader.LOCAL_BEHAVIOUR_FORGET,
                 false,
                 mediaFolder.filePaths,
                 mediaFolder.folderName,

File: src/main/java/com/owncloud/android/services/AutoUploadJob.java
Patch:
@@ -52,7 +52,7 @@ protected Result onRunJob(Params params) {
         final String filePath = bundle.getString(LOCAL_PATH, "");
         final String remotePath = bundle.getString(REMOTE_PATH, "");
         final Account account = AccountUtils.getOwnCloudAccountByName(context, bundle.getString(ACCOUNT, ""));
-        final Integer uploadBehaviour = bundle.getInt(UPLOAD_BEHAVIOUR, -1);
+        final Integer uploadBehaviour = bundle.getInt(UPLOAD_BEHAVIOUR, FileUploader.LOCAL_BEHAVIOUR_FORGET);
 
 
         File file = new File(filePath);

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -45,12 +45,13 @@
 import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderDisplayItem;
 import com.owncloud.android.datamodel.SyncedFolderProvider;
+import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.ui.adapter.FolderSyncAdapter;
 import com.owncloud.android.ui.decoration.MediaGridItemDecoration;
 import com.owncloud.android.ui.dialog.SyncedFolderPreferencesDialogFragment;
 import com.owncloud.android.ui.dialog.parcel.SyncedFolderParcelable;
-import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.AnalyticsUtils;
+import com.owncloud.android.utils.DisplayUtils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -303,7 +304,7 @@ private SyncedFolderDisplayItem createSyncedFolderFromMediaFolder(@NonNull Media
                 false,
                 false,
                 AccountUtils.getCurrentOwnCloudAccount(this).name,
-                0,
+                FileUploader.LOCAL_BEHAVIOUR_FORGET,
                 false,
                 mediaFolder.filePaths,
                 mediaFolder.folderName,

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactListFragment.java
Patch:
@@ -377,7 +377,8 @@ public void onClick(DialogInterface dialog, int which) {
     private boolean checkAndAskForContactsWritePermission() {
         // check permissions
         if (!PermissionUtil.checkSelfPermission(getContext(), Manifest.permission.WRITE_CONTACTS)) {
-            PermissionUtil.requestWriteContactPermission(this);
+            requestPermissions(new String[]{Manifest.permission.WRITE_CONTACTS},
+                    PermissionUtil.PERMISSIONS_WRITE_CONTACTS);
             return false;
         } else {
             return true;

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -87,13 +87,11 @@ public class ContactsBackupFragment extends FileFragment implements DatePickerDi
 
     private DatePickerDialog datePickerDialog;
 
-
     private static final String KEY_CALENDAR_PICKER_OPEN = "IS_CALENDAR_PICKER_OPEN";
     private static final String KEY_CALENDAR_DAY = "CALENDAR_DAY";
     private static final String KEY_CALENDAR_MONTH = "CALENDAR_MONTH";
     private static final String KEY_CALENDAR_YEAR = "CALENDAR_YEAR";
 
-
     @Override
     public View onCreateView(final LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 

File: src/main/java/com/owncloud/android/ui/fragment/contactsbackup/ContactsBackupFragment.java
Patch:
@@ -177,8 +177,7 @@ public void onResume() {
         Vector<OCFile> backupFiles = contactsPreferenceActivity.getStorageManager().getFolderContent(backupFolder,
                 false);
 
-        if (backupFiles == null || backupFiles.size() == 0 ||
-                sharedPreferences.getLong(PREFERENCE_CONTACTS_LAST_BACKUP, -1) == -1) {
+        if (backupFiles == null || backupFiles.size() == 0) {
             contactsRestoreHeader.setVisibility(View.GONE);
             contactsDatePickerBtn.setVisibility(View.GONE);
         } else {

File: src/main/java/com/owncloud/android/services/ContactsImportJob.java
Patch:
@@ -64,9 +64,7 @@ protected Result onRunJob(Params params) {
             vCards.addAll(Ezvcard.parse(file).all());
 
             for (int i = 0; i < intArray.length; i++ ){
-                if (intArray[i] == 1){
-                    operations.insertContact(vCards.get(i));
-                }
+                operations.insertContact(vCards.get(intArray[i]));
             }
         } catch (Exception e) {
             Log_OC.e(TAG, e.getMessage());

File: src/main/java/com/owncloud/android/ui/fragment/ContactsBackup/ContactsBackupFragment.java
Patch:
@@ -67,7 +67,7 @@ public class ContactsBackupFragment extends FileFragment {
     private SharedPreferences sharedPreferences;
 
     @BindView(R.id.contacts_automatic_backup)
-    private SwitchCompat backupSwitch;
+    public SwitchCompat backupSwitch;
 
     @Override
     public View onCreateView(final LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -38,7 +38,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.services.ContactsBackupJob;
-import com.owncloud.android.ui.fragment.contactsBackup.ContactsBackupFragment;
+import com.owncloud.android.ui.fragment.contactsbackup.ContactsBackupFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
 
 import java.util.Set;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -83,7 +83,7 @@
 import com.owncloud.android.syncadapter.FileSyncAdapter;
 import com.owncloud.android.ui.dialog.SortingOrderDialogFragment;
 import com.owncloud.android.ui.events.TokenPushEvent;
-import com.owncloud.android.ui.fragment.contactsBackup.ContactListFragment;
+import com.owncloud.android.ui.fragment.contactsbackup.ContactListFragment;
 import com.owncloud.android.ui.fragment.ExtendedListFragment;
 import com.owncloud.android.ui.fragment.FileDetailFragment;
 import com.owncloud.android.ui.fragment.FileFragment;

File: src/main/java/com/owncloud/android/ui/fragment/ContactsBackup/ContactListFragment.java
Patch:
@@ -19,7 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.owncloud.android.ui.fragment.contactsBackup;
+package com.owncloud.android.ui.fragment.contactsbackup;
 
 import android.Manifest;
 import android.accounts.Account;

File: src/main/java/com/owncloud/android/ui/fragment/ContactsBackup/ContactsBackupFragment.java
Patch:
@@ -18,7 +18,7 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-package com.owncloud.android.ui.fragment.contactsBackup;
+package com.owncloud.android.ui.fragment.contactsbackup;
 
 import android.Manifest;
 import android.app.DatePickerDialog;

File: src/main/java/com/owncloud/android/ui/activity/ContactsPreferenceActivity.java
Patch:
@@ -38,7 +38,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.services.ContactsBackupJob;
-import com.owncloud.android.ui.fragment.ContactsBackup.ContactsBackupFragment;
+import com.owncloud.android.ui.fragment.contactsBackup.ContactsBackupFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
 
 import java.util.Set;

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -83,7 +83,7 @@
 import com.owncloud.android.syncadapter.FileSyncAdapter;
 import com.owncloud.android.ui.dialog.SortingOrderDialogFragment;
 import com.owncloud.android.ui.events.TokenPushEvent;
-import com.owncloud.android.ui.fragment.ContactsBackup.ContactListFragment;
+import com.owncloud.android.ui.fragment.contactsBackup.ContactListFragment;
 import com.owncloud.android.ui.fragment.ExtendedListFragment;
 import com.owncloud.android.ui.fragment.FileDetailFragment;
 import com.owncloud.android.ui.fragment.FileFragment;

File: src/main/java/com/owncloud/android/ui/fragment/ContactsBackup/ContactListFragment.java
Patch:
@@ -19,7 +19,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.owncloud.android.ui.fragment.ContactsBackup;
+package com.owncloud.android.ui.fragment.contactsBackup;
 
 import android.Manifest;
 import android.accounts.Account;

File: src/main/java/com/owncloud/android/ui/fragment/ContactsBackup/ContactsBackupFragment.java
Patch:
@@ -18,7 +18,7 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-package com.owncloud.android.ui.fragment.ContactsBackup;
+package com.owncloud.android.ui.fragment.contactsBackup;
 
 import android.Manifest;
 import android.app.DatePickerDialog;
@@ -67,7 +67,7 @@ public class ContactsBackupFragment extends FileFragment {
     private SharedPreferences sharedPreferences;
 
     @BindView(R.id.contacts_automatic_backup)
-    SwitchCompat backupSwitch;
+    private SwitchCompat backupSwitch;
 
     @Override
     public View onCreateView(final LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -74,8 +74,6 @@
 import android.view.inputmethod.EditorInfo;
 import android.webkit.HttpAuthHandler;
 import android.webkit.SslErrorHandler;
-import android.webkit.WebResourceRequest;
-import android.webkit.WebResourceResponse;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 import android.widget.Button;

File: src/zstore/java/com/owncloud/android/utils/PushUtils.java
Patch:
@@ -184,7 +184,7 @@ public static void pushRegistrationToServer() {
     public static Key readKeyFromFile(boolean readPublicKey) {
         String keyPath = MainApp.getStoragePath() + File.separator + MainApp.getDataFolder() + File.separator
                 + KEYPAIR_FOLDER;
-        ;
+        
         String privateKeyPath = keyPath + File.separator + KEYPAIR_FILE_NAME + KEYPAIR_PRIV_EXTENSION;
         String publicKeyPath = keyPath + File.separator + KEYPAIR_FILE_NAME + KEYPAIR_PUB_EXTENSION;
 

File: src/main/java/com/owncloud/android/ui/activity/ErrorsWhileCopyingHandlerActivity.java
Patch:
@@ -44,6 +44,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.dialog.IndeterminateProgressDialog;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.io.File;

File: src/main/java/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -52,6 +52,7 @@
 import com.owncloud.android.ui.dialog.CreateFolderDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
 import com.owncloud.android.ui.fragment.OCFileListFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DataHolderUtil;
 import com.owncloud.android.utils.ErrorMessageAdapter;
 

File: src/main/java/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -50,6 +50,7 @@
 import com.owncloud.android.ui.dialog.SyncedFolderPreferencesDialogFragment;
 import com.owncloud.android.ui.dialog.parcel.SyncedFolderParcelable;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 import java.io.File;
 import java.util.ArrayList;

File: src/main/java/com/owncloud/android/ui/activity/GenericExplanationActivity.java
Patch:
@@ -33,6 +33,7 @@
 import android.widget.TextView;
 
 import com.owncloud.android.R;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 import java.util.ArrayList;
 

File: src/main/java/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.dialog.LoadingDialog;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.io.BufferedReader;

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -51,6 +51,7 @@
 import com.owncloud.android.ui.adapter.AccountListAdapter;
 import com.owncloud.android.ui.adapter.AccountListItem;
 import com.owncloud.android.ui.helpers.FileOperationsHelper;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
 import org.parceler.Parcels;

File: src/main/java/com/owncloud/android/ui/activity/ManageSpaceActivity.java
Patch:
@@ -34,6 +34,7 @@
 
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 import java.io.File;
 

File: src/main/java/com/owncloud/android/ui/activity/ParticipateActivity.java
Patch:
@@ -31,6 +31,7 @@
 import android.widget.TextView;
 
 import com.owncloud.android.R;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 /**
  * Activity providing information about ways to participate in the app's development.

File: src/main/java/com/owncloud/android/ui/activity/PassCodeActivity.java
Patch:
@@ -40,6 +40,7 @@
 
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 import java.util.Arrays;
 

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -67,6 +67,7 @@
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
 import java.io.IOException;

File: src/main/java/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -50,6 +50,7 @@
 import com.owncloud.android.ui.dialog.SortingOrderDialogFragment;
 import com.owncloud.android.ui.fragment.ExtendedListFragment;
 import com.owncloud.android.ui.fragment.LocalFileListFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.io.File;

File: src/main/java/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -55,6 +55,7 @@
 import com.owncloud.android.operations.CheckCurrentCredentialsOperation;
 import com.owncloud.android.ui.fragment.UploadListFragment;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;

File: src/main/java/com/owncloud/android/ui/activity/UploadPathActivity.java
Patch:
@@ -26,6 +26,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.ui.fragment.FileFragment;
 import com.owncloud.android.ui.fragment.OCFileListFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 public class UploadPathActivity extends FolderPickerActivity implements FileFragment.ContainerActivity,
         OnClickListener, OnEnforceableRefreshListener {

File: src/main/java/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -51,6 +51,7 @@
 import com.owncloud.android.features.FeatureList;
 import com.owncloud.android.features.FeatureList.FeatureItem;
 import com.owncloud.android.ui.whatsnew.ProgressIndicator;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 /**
  * Activity displaying general feature after a fresh install and new features after an update.

File: src/main/java/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -41,6 +41,7 @@
 import com.owncloud.android.lib.resources.shares.SharePermissionsBuilder;
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.ui.activity.FileActivity;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 public class EditShareFragment extends Fragment {
 

File: src/main/java/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -50,6 +50,7 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 

File: src/main/java/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -35,6 +35,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.adapter.LocalFileListAdapter;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 
 import java.io.File;

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -89,6 +89,7 @@
 import com.owncloud.android.ui.preview.PreviewImageFragment;
 import com.owncloud.android.ui.preview.PreviewMediaFragment;
 import com.owncloud.android.ui.preview.PreviewTextFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.MimeTypeUtil;

File: src/main/java/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -41,6 +41,7 @@
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.adapter.ShareUserListAdapter;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 import java.util.ArrayList;
 

File: src/main/java/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -56,6 +56,7 @@
 import com.owncloud.android.ui.adapter.ShareUserListAdapter;
 import com.owncloud.android.ui.dialog.ExpirationDatePickerDialogFragment;
 import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 

File: src/main/java/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -32,6 +32,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.adapter.ExpandableUploadListAdapter;
+import com.owncloud.android.utils.AnalyticsUtils;
 
 /**
  * A Fragment that lists all files and folders in a given LOCAL path.

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -58,6 +58,7 @@
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimeTypeUtil;

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -65,6 +65,7 @@
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 
 

File: src/main/java/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -42,6 +42,7 @@
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.BufferedWriter;

File: src/main/java/com/owncloud/android/ui/preview/PreviewVideoActivity.java
Patch:
@@ -40,6 +40,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.media.MediaService;
 import com.owncloud.android.ui.activity.FileActivity;
+import com.owncloud.android.utils.AnalyticsUtils;
 import com.owncloud.android.utils.MimeTypeUtil;
 
 /**

File: src/zstore/java/com/owncloud/android/utils/AnalyticsUtils.java
Patch:
@@ -26,4 +26,7 @@ public static void setCurrentScreenName(Activity activity, String s, String s1)
         // do nothing
     }
 
+    public static void disableAnalytics() {
+        // do nothing
+    }
 }

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -304,9 +304,11 @@ public void showDetails(OCFile file) {
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, file);
         showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT,
                 AccountUtils.getCurrentOwnCloudAccount(this));
+        showDetailsIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
         startActivity(showDetailsIntent);
         int pos = mPreviewImagePagerAdapter.getFilePosition(file);
         file = mPreviewImagePagerAdapter.getFileAt(pos);
+        finish();
     }
 
     private void requestForDownload(OCFile file) {

File: src/main/java/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -304,9 +304,11 @@ public void showDetails(OCFile file) {
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, file);
         showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT,
                 AccountUtils.getCurrentOwnCloudAccount(this));
+        showDetailsIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
         startActivity(showDetailsIntent);
         int pos = mPreviewImagePagerAdapter.getFilePosition(file);
         file = mPreviewImagePagerAdapter.getFileAt(pos);
+        finish();
     }
 
     private void requestForDownload(OCFile file) {

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -658,7 +658,7 @@ public void run() {
                             R.string.file_list_empty, R.drawable.ic_search_light_grey);
                 } else if (searchType == SearchType.FAVORITE_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_favorite_headline,
-                            R.string.file_list_empty_favorites_filter_list, R.drawable.ic_star_light_grey);
+                            R.string.file_list_empty_favorites_filter_list, R.drawable.ic_star_light_yellow);
                 } else if (searchType == SearchType.VIDEO_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search_videos,
                             R.string.file_list_empty_text_videos, R.drawable.ic_list_empty_video);
@@ -676,7 +676,7 @@ public void run() {
                             R.string.file_list_empty_search, R.drawable.ic_search_light_grey);
                 } else if (searchType == SearchType.FAVORITE_SEARCH_FILTER) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search,
-                            R.string.file_list_empty_favorites_filter, R.drawable.ic_star_light_grey);
+                            R.string.file_list_empty_favorites_filter, R.drawable.ic_star_light_yellow);
                 } else if (searchType == SearchType.VIDEO_SEARCH_FILTER) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search_videos,
                             R.string.file_list_empty_text_videos_filter, R.drawable.ic_list_empty_video);

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -658,7 +658,7 @@ public void run() {
                             R.string.file_list_empty, R.drawable.ic_search_light_grey);
                 } else if (searchType == SearchType.FAVORITE_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_favorite_headline,
-                            R.string.file_list_empty_favorites_filter_list, R.drawable.ic_star_light_grey);
+                            R.string.file_list_empty_favorites_filter_list, R.drawable.ic_star_light_yellow);
                 } else if (searchType == SearchType.VIDEO_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search_videos,
                             R.string.file_list_empty_text_videos, R.drawable.ic_list_empty_video);
@@ -676,7 +676,7 @@ public void run() {
                             R.string.file_list_empty_search, R.drawable.ic_search_light_grey);
                 } else if (searchType == SearchType.FAVORITE_SEARCH_FILTER) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search,
-                            R.string.file_list_empty_favorites_filter, R.drawable.ic_star_light_grey);
+                            R.string.file_list_empty_favorites_filter, R.drawable.ic_star_light_yellow);
                 } else if (searchType == SearchType.VIDEO_SEARCH_FILTER) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search_videos,
                             R.string.file_list_empty_text_videos_filter, R.drawable.ic_list_empty_video);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,6 +681,8 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
+            mMultiView.setVisibility(View.GONE);
+            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,6 +681,8 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
+            mMultiView.setVisibility(View.GONE);
+            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -512,7 +512,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
             pAboutApp.setSummary(String.format(getString(R.string.about_version), appVersion));
         }
 
-        loadExternalSettingLinks(preferenceCategory);
+        loadExternalSettingLinks(preferenceCategoryMore);
 
         loadStoragePath();
     }

File: src/main/java/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -512,7 +512,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
             pAboutApp.setSummary(String.format(getString(R.string.about_version), appVersion));
         }
 
-        loadExternalSettingLinks(preferenceCategory);
+        loadExternalSettingLinks(preferenceCategoryMore);
 
         loadStoragePath();
     }

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -396,6 +396,7 @@ private void switchToSearchFragment() {
 
         args.putParcelable(OCFileListFragment.SEARCH_EVENT,
                 getIntent().getParcelableExtra(OCFileListFragment.SEARCH_EVENT));
+        args.putBoolean(OCFileListFragment.ARG_ALLOW_CONTEXTUAL_ACTIONS, true);
 
         listOfFiles.setArguments(args);
         FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -393,6 +393,7 @@ private void switchToSearchFragment() {
 
         args.putParcelable(OCFileListFragment.SEARCH_EVENT,
                 getIntent().getParcelableExtra(OCFileListFragment.SEARCH_EVENT));
+        args.putBoolean(OCFileListFragment.ARG_ALLOW_CONTEXTUAL_ACTIONS, true);
 
         listOfFiles.setArguments(args);
         FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();

File: src/main/java/com/owncloud/android/ui/activity/NotificationsActivity.java
Patch:
@@ -167,7 +167,6 @@ private void setupContent() {
         recyclerView.addItemDecoration(dividerItemDecoration);
 
         fetchAndSetData();
-        fetchAndSetData();
     }
 
     private void populateList(List<Notification> notifications) {

File: src/main/java/com/owncloud/android/operations/GetServerInfoOperation.java
Patch:
@@ -21,7 +21,7 @@
 
 package com.owncloud.android.operations;
 
-import java.util.ArrayList;
+import android.content.Context;
 
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.lib.common.OwnCloudClient;
@@ -33,7 +33,7 @@
 import com.owncloud.android.lib.resources.status.OwnCloudVersion;
 import com.owncloud.android.operations.DetectAuthenticationMethodOperation.AuthenticationMethod;
 
-import android.content.Context;
+import java.util.ArrayList;
 
 /**
  * Get basic information from an ownCloud server given its URL.
@@ -78,6 +78,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 	    
 	    // first: check the status of the server (including its version)
 	    GetRemoteStatusOperation getStatus = new GetRemoteStatusOperation(mContext);
+
 	    RemoteOperationResult result = getStatus.execute(client);
 	    
         if (result.isSuccess()) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -315,7 +315,7 @@ public void onRequestPermissionsResult(int requestCode,
                 if (grantResults.length > 0
                         && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                     // permission was granted
-                    startSynchronization();
+                    refreshList(true);
                     // toggle on is save since this is the only scenario this code gets accessed
                 } else {
                     // permission denied --> do nothing

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,8 +681,6 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
-            mMultiView.setVisibility(View.GONE);
-            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,8 +681,6 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
-            mMultiView.setVisibility(View.GONE);
-            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,6 +681,8 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
+            mMultiView.setVisibility(View.GONE);
+            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -38,6 +38,7 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.UploadFileOperation;
+import com.owncloud.android.services.AutoUploadJob;
 
 import java.util.ArrayList;
 import java.util.Calendar;
@@ -396,7 +397,7 @@ public OCUpload[] getCurrentAndPendingUploads() {
 
     @RequiresApi(Build.VERSION_CODES.LOLLIPOP)
     private List<OCUpload> getPendingJobs() {
-        Set<JobRequest> jobRequests = JobManager.create(mContext).getAllJobRequests();
+        Set<JobRequest> jobRequests = JobManager.create(mContext).getAllJobRequestsForTag(AutoUploadJob.TAG);
 
         ArrayList<OCUpload> list = new ArrayList<>();
 

File: src/main/java/com/owncloud/android/ui/activity/ContactListFragment.java
Patch:
@@ -339,6 +339,8 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
                 Drawable drawable = new BitmapDrawable(BitmapFactory.decodeByteArray(data, 0, data.length));
 
                 viewHolder.badge.setImageDrawable(drawable);
+            } else {
+                viewHolder.badge.setImageToDefault();
             }
 
             // name

File: src/main/java/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -38,6 +38,7 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.UploadFileOperation;
+import com.owncloud.android.services.AutoUploadJob;
 
 import java.util.ArrayList;
 import java.util.Calendar;
@@ -396,7 +397,7 @@ public OCUpload[] getCurrentAndPendingUploads() {
 
     @RequiresApi(Build.VERSION_CODES.LOLLIPOP)
     private List<OCUpload> getPendingJobs() {
-        Set<JobRequest> jobRequests = JobManager.create(mContext).getAllJobRequests();
+        Set<JobRequest> jobRequests = JobManager.create(mContext).getAllJobRequestsForTag(AutoUploadJob.TAG);
 
         ArrayList<OCUpload> list = new ArrayList<>();
 

File: src/main/java/com/owncloud/android/ui/activity/ContactListFragment.java
Patch:
@@ -339,6 +339,8 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
                 Drawable drawable = new BitmapDrawable(BitmapFactory.decodeByteArray(data, 0, data.length));
 
                 viewHolder.badge.setImageDrawable(drawable);
+            } else {
+                viewHolder.badge.setImageToDefault();
             }
 
             // name

File: src/main/java/com/owncloud/android/ui/activity/NotificationsActivity.java
Patch:
@@ -167,7 +167,6 @@ private void setupContent() {
         recyclerView.addItemDecoration(dividerItemDecoration);
 
         fetchAndSetData();
-        fetchAndSetData();
     }
 
     private void populateList(List<Notification> notifications) {

File: src/main/java/com/owncloud/android/operations/GetServerInfoOperation.java
Patch:
@@ -21,7 +21,7 @@
 
 package com.owncloud.android.operations;
 
-import java.util.ArrayList;
+import android.content.Context;
 
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.lib.common.OwnCloudClient;
@@ -33,7 +33,7 @@
 import com.owncloud.android.lib.resources.status.OwnCloudVersion;
 import com.owncloud.android.operations.DetectAuthenticationMethodOperation.AuthenticationMethod;
 
-import android.content.Context;
+import java.util.ArrayList;
 
 /**
  * Get basic information from an ownCloud server given its URL.
@@ -78,6 +78,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 	    
 	    // first: check the status of the server (including its version)
 	    GetRemoteStatusOperation getStatus = new GetRemoteStatusOperation(mContext);
+
 	    RemoteOperationResult result = getStatus.execute(client);
 	    
         if (result.isSuccess()) {

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -315,7 +315,7 @@ public void onRequestPermissionsResult(int requestCode,
                 if (grantResults.length > 0
                         && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                     // permission was granted
-                    startSynchronization();
+                    refreshList(true);
                     // toggle on is save since this is the only scenario this code gets accessed
                 } else {
                     // permission denied --> do nothing

File: src/main/java/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -681,6 +681,8 @@ public void onServiceConnected(ComponentName component, IBinder service) {
         }
 
         private void prepareMediaController() {
+            mMultiView.setVisibility(View.GONE);
+            mPreviewContainer.setVisibility(View.VISIBLE);
             mMediaServiceBinder.registerMediaController(mMediaController);
             if (mMediaController != null) {
                 mMediaController.setMediaPlayer(mMediaServiceBinder);

File: src/main/java/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -39,12 +39,12 @@
 import android.widget.SeekBar.OnSeekBarChangeListener;
 import android.widget.TextView;
 
-import java.util.Formatter;
-import java.util.Locale;
-
 import com.owncloud.android.R;
 import com.owncloud.android.utils.DisplayUtils;
 
+import java.util.Formatter;
+import java.util.Locale;
+
 
 /**
  * View containing controls for a {@link MediaPlayer}. 

File: src/main/java/third_parties/michaelOrtiz/TouchImageViewCustom.java
Patch:
@@ -10,8 +10,6 @@
 
 package third_parties.michaelOrtiz;
 
-import com.owncloud.android.ui.preview.ImageViewCustom;
-
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.Configuration;
@@ -37,6 +35,8 @@
 import android.widget.OverScroller;
 import android.widget.Scroller;
 
+import com.owncloud.android.ui.preview.ImageViewCustom;
+
 /**
  * Extends Android ImageView to include pinch zooming, panning, fling and double tap zoom.
  */

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -86,8 +86,7 @@ public static List<MediaFolder> getMediaFolders(ContentResolver contentResolver,
                         filePath = cursorImages.getString(cursorImages.getColumnIndexOrThrow(
                                 MediaStore.MediaColumns.DATA));
                         mediaFolder.filePaths.add(filePath);
-                        mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf(folderName)
-                                + folderName.length());
+                        mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf("/"));
                     }
                     cursorImages.close();
 

File: src/main/java/com/owncloud/android/ui/activity/ActivitiesListActivity.java
Patch:
@@ -253,7 +253,7 @@ private void populateList(List<Object> activities) {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        boolean retval;
+        boolean retval = true;
 
         switch (item.getItemId()) {
             case android.R.id.home:
@@ -262,8 +262,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 } else {
                     openDrawer();
                 }
-
+                break;
             default:
+                Log_OC.w(TAG, "Unknown menu item triggered");
                 retval = super.onOptionsItemSelected(item);
         }
 

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -307,6 +307,7 @@ private void selectNavigationItem(final MenuItem menuItem) {
                 break;
             case R.id.nav_activity:
                 Intent activityIntent = new Intent(getApplicationContext(), ActivitiesListActivity.class);
+                activityIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                 startActivity(activityIntent);
                 break;
             case R.id.nav_folder_sync:

File: src/main/java/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -646,7 +646,7 @@ public void run() {
                             R.string.file_list_empty, R.drawable.ic_search_light_grey);
                 } else if (searchType == SearchType.FAVORITE_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search,
-                            R.string.file_list_empty_favorites, R.drawable.ic_favorite_grey);
+                            R.string.file_list_empty_favorites, R.drawable.ic_star_light_grey);
                 } else if (searchType == SearchType.VIDEO_SEARCH) {
                     setMessageForEmptyList(R.string.file_list_empty_headline_server_search_videos,
                             R.string.file_list_empty_text_videos, R.drawable.ic_list_empty_video);

File: src/main/java/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -86,8 +86,7 @@ public static List<MediaFolder> getMediaFolders(ContentResolver contentResolver,
                         filePath = cursorImages.getString(cursorImages.getColumnIndexOrThrow(
                                 MediaStore.MediaColumns.DATA));
                         mediaFolder.filePaths.add(filePath);
-                        mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf(folderName)
-                                + folderName.length());
+                        mediaFolder.absolutePath = filePath.substring(0, filePath.lastIndexOf("/"));
                     }
                     cursorImages.close();
 

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -520,7 +520,7 @@ private void initServerPreFragment(Bundle savedInstanceState) {
 
         if (!webViewLoginMethod) {
             /// step 2 - set properties of UI elements (text, visibility, enabled...)
-            mHostUrlInput = (EditText) findViewById(R.id.hostUrlInput);
+            mHostUrlInput = (CustomEditText) findViewById(R.id.hostUrlInput);
             // Convert IDN to Unicode
             mHostUrlInput.setText(DisplayUtils.convertIdn(mServerInfo.mBaseUrl, false));
             if (mAction != ACTION_CREATE) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -306,10 +306,10 @@ public void run() {
             if (getResources().getBoolean(R.bool.bottom_toolbar_enabled)) {
                 navigationView.getMenu().removeItem(R.id.nav_all_files);
                 navigationView.getMenu().removeItem(R.id.nav_settings);
+                navigationView.getMenu().removeItem(R.id.nav_favorites);
             }
             if (!searchSupported) {
                 navigationView.getMenu().removeItem(R.id.nav_videos);
-                navigationView.getMenu().removeItem(R.id.nav_favorites);
             }
         }
 

File: src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1075,7 +1075,7 @@ public void onSortingOrderChosen(int selection) {
                 sortByName(true);
                 break;
             case SortingOrderDialogFragment.BY_NAME_DESC:
-                sortByDate(false);
+                sortByName(false);
                 break;
             case SortingOrderDialogFragment.BY_MODIFICATION_DATE_ASC:
                 sortByDate(true);

File: src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -464,7 +464,6 @@ private void initServerPreFragment(Bundle savedInstanceState) {
                     serverInputType.equals(SUBDOMAIN_SERVER_INPUT_TYPE)) {
                 mHostUrlInput.setText("");
             }
-
         } else {
             findViewById(R.id.hostUrlFrame).setVisibility(View.GONE);
             mRefreshButton = findViewById(R.id.centeredRefreshButton);
@@ -486,7 +485,7 @@ private void initServerPreFragment(Bundle savedInstanceState) {
             public void afterTextChanged(Editable s) {
                 if (mOkButton.isEnabled() &&
                         !mServerInfo.mBaseUrl.equals(
-                                normalizeUrl(s.toString(), mServerInfo.mIsSslConn))) {
+                                normalizeUrl(mHostUrlInput.getFullServerUrl(), mServerInfo.mIsSslConn))) {
                     mOkButton.setEnabled(false);
                 }
             }
@@ -867,7 +866,7 @@ private void onUrlInputFocusLost() {
 
 
     private void checkOcServer() {
-        String uri = mHostUrlInput.getText().toString().trim();
+        String uri = mHostUrlInput.getFullServerUrl().trim();
         mServerIsValid = false;
         mServerIsChecked = false;
         mOkButton.setEnabled(false);

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.IBinder;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
-import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
@@ -56,7 +55,6 @@
 
 import org.parceler.Parcels;
 
-import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Set;
 
@@ -147,6 +145,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                     }
                 }
                 break;
+            default:
+                break;
         }
     }
 

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -143,8 +143,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (userInfo != null) {
             adapter = new UserInfoAdapter(userInfo, UserInfoActivity.this);
-            multiView.setVisibility(View.VISIBLE);
-            genericRecyclerView.setVisibility(View.GONE);
+            genericRecyclerView.setAdapter(adapter);
+            multiView.setVisibility(View.GONE);
+            genericRecyclerView.setVisibility(View.VISIBLE);
         } else {
             setMultiListLoadingMessage();
             fetchAndSetData();

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -174,8 +174,8 @@ public void run() {
                     });
                 } else {
                     // show error
-                    RemoteOperationResult remoteOperationResult = (RemoteOperationResult) result.getData().get(0);
-                    setMessageForMultiList(remoteOperationResult.getLogMessage(), sorryMessage);
+                    setMessageForMultiList(result.getLogMessage(), sorryMessage);
+                    Log_OC.d(TAG, result.getLogMessage());
                 }
             }
         });

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.IBinder;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
-import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
@@ -56,7 +55,6 @@
 
 import org.parceler.Parcels;
 
-import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Set;
 
@@ -147,6 +145,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                     }
                 }
                 break;
+            default:
+                break;
         }
     }
 

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -143,8 +143,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (userInfo != null) {
             adapter = new UserInfoAdapter(userInfo, UserInfoActivity.this);
-            multiView.setVisibility(View.VISIBLE);
-            genericRecyclerView.setVisibility(View.GONE);
+            genericRecyclerView.setAdapter(adapter);
+            multiView.setVisibility(View.GONE);
+            genericRecyclerView.setVisibility(View.VISIBLE);
         } else {
             setMultiListLoadingMessage();
             fetchAndSetData();

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -174,8 +174,8 @@ public void run() {
                     });
                 } else {
                     // show error
-                    RemoteOperationResult remoteOperationResult = (RemoteOperationResult) result.getData().get(0);
-                    setMessageForMultiList(remoteOperationResult.getLogMessage(), sorryMessage);
+                    setMessageForMultiList(result.getLogMessage(), sorryMessage);
+                    Log_OC.d(TAG, result.getLogMessage());
                 }
             }
         });

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -143,8 +143,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (userInfo != null) {
             adapter = new UserInfoAdapter(userInfo, UserInfoActivity.this);
-            multiView.setVisibility(View.VISIBLE);
-            genericRecyclerView.setVisibility(View.GONE);
+            genericRecyclerView.setAdapter(adapter);
+            multiView.setVisibility(View.GONE);
+            genericRecyclerView.setVisibility(View.VISIBLE);
         } else {
             setMultiListLoadingMessage();
             fetchAndSetData();

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -174,8 +174,8 @@ public void run() {
                     });
                 } else {
                     // show error
-                    RemoteOperationResult remoteOperationResult = (RemoteOperationResult) result.getData().get(0);
-                    setMessageForMultiList(remoteOperationResult.getLogMessage(), sorryMessage);
+                    setMessageForMultiList(result.getLogMessage(), sorryMessage);
+                    Log_OC.d(TAG, result.getLogMessage());
                 }
             }
         });

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -93,6 +93,8 @@ public class UserInfoActivity extends FileActivity {
 
     private RecyclerView.Adapter adapter;
 
+    private RecyclerView.Adapter adapter;
+
     private Unbinder unbinder;
 
     private UserInfo userInfo;

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.IBinder;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
-import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
@@ -56,7 +55,6 @@
 
 import org.parceler.Parcels;
 
-import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Set;
 

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -30,7 +30,6 @@
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.support.v7.widget.DividerItemDecoration;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.text.TextUtils;

File: src/main/java/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -34,7 +34,6 @@
 import android.os.IBinder;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
-import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
@@ -56,7 +55,6 @@
 
 import org.parceler.Parcels;
 
-import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Set;
 
@@ -147,6 +145,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                     }
                 }
                 break;
+            default:
+                break;
         }
     }
 

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -141,8 +141,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (userInfo != null) {
             adapter = new UserInfoAdapter(userInfo, UserInfoActivity.this);
-            multiView.setVisibility(View.VISIBLE);
-            genericRecyclerView.setVisibility(View.GONE);
+            genericRecyclerView.setAdapter(adapter);
+            multiView.setVisibility(View.GONE);
+            genericRecyclerView.setVisibility(View.VISIBLE);
         } else {
             setMultiListLoadingMessage();
             fetchAndSetData();

File: src/com/owncloud/android/ui/activity/UserInfoActivity.java
Patch:
@@ -172,8 +172,8 @@ public void run() {
                     });
                 } else {
                     // show error
-                    RemoteOperationResult remoteOperationResult = (RemoteOperationResult) result.getData().get(0);
-                    setMessageForMultiList(remoteOperationResult.getLogMessage(), sorryMessage);
+                    setMessageForMultiList(result.getLogMessage(), sorryMessage);
+                    Log_OC.d(TAG, result.getLogMessage());
                 }
             }
         });

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -200,7 +200,7 @@ public static String getInstantVideoUploadFilePath(Context context, String fileN
         if (com.owncloud.android.db.PreferenceManager.instantVideoUploadPathUseSubfolders(context)) {
             subPath = getSubpathFromDate(dateTaken);
         }
-        return uploadVideoPath + subPath + (fileName == null ? "" : fileName);
+        return uploadVideoPath + OCFile.PATH_SEPARATOR + subPath + (fileName == null ? "" : fileName);
     }
     
     public static String getParentPath(String remotePath) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -56,6 +56,7 @@
 import com.owncloud.android.lib.resources.files.SearchOperation;
 import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation;
 import com.owncloud.android.ui.TextDrawable;
+import com.owncloud.android.ui.events.ChangeMenuEvent;
 import com.owncloud.android.ui.events.DummyDrawerEvent;
 import com.owncloud.android.ui.events.MenuItemClickEvent;
 import com.owncloud.android.ui.events.SearchEvent;
@@ -376,6 +377,7 @@ private void selectNavigationItem(final MenuItem menuItem) {
                 menuItem.setChecked(true);
                 mCheckedMenuItem = menuItem.getItemId();
                 showFiles(false);
+                EventBus.getDefault().post(new ChangeMenuEvent());
                 break;
             case R.id.nav_favorites:
                 menuItem.setChecked(true);

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -760,6 +760,7 @@ public int onBrowseUp() {
     @Override
     public void onItemClick(AdapterView<?> l, View v, int position, long id) {
         OCFile file = (OCFile) mAdapter.getItem(position);
+
         if (file != null) {
             if (file.isFolder()) {
                 // update state and view of this fragment

File: src/main/java/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -200,7 +200,7 @@ public static String getInstantVideoUploadFilePath(Context context, String fileN
         if (com.owncloud.android.db.PreferenceManager.instantVideoUploadPathUseSubfolders(context)) {
             subPath = getSubpathFromDate(dateTaken);
         }
-        return uploadVideoPath + subPath + (fileName == null ? "" : fileName);
+        return uploadVideoPath + OCFile.PATH_SEPARATOR + subPath + (fileName == null ? "" : fileName);
     }
     
     public static String getParentPath(String remotePath) {

File: src/main/java/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -357,6 +357,7 @@ public void onMessageEvent(MenuItemClickEvent event) {
             case R.id.nav_bar_settings:
                 Intent settingsIntent = new Intent(getApplicationContext(), Preferences.class);
                 startActivity(settingsIntent);
+                break;
             default:
                 break;
         }

File: src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -414,7 +414,6 @@ private void synchronizeData(ArrayList<Object> folderAndFiles) {
                 updatedFile.setShareViaLink(localFile.isSharedViaLink());
                 updatedFile.setShareWithSharee(localFile.isSharedWithSharee());
                 updatedFile.setEtagInConflict(localFile.getEtagInConflict());
-                updatedFile.setFavorite(localFile.getIsFavorite());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");

File: src/main/java/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -197,7 +197,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if (mRemoteFolderChanged) {
                 result = fetchAndSyncRemoteFolder(client);
             } else {
-                fetchFavoritesToSyncFromLocalData();
+                fetchKeptInSyncFilesToSyncFromLocalData();
                 mChildren = mStorageManager.getFolderContent(mLocalFolder, false);
             }
 
@@ -414,6 +414,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles) {
                 updatedFile.setShareViaLink(localFile.isSharedViaLink());
                 updatedFile.setShareWithSharee(localFile.isSharedWithSharee());
                 updatedFile.setEtagInConflict(localFile.getEtagInConflict());
+                updatedFile.setFavorite(localFile.getIsFavorite());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");
@@ -536,7 +537,7 @@ private void sendLocalBroadcast(
     }
 
 
-    private void fetchFavoritesToSyncFromLocalData() {
+    private void fetchKeptInSyncFilesToSyncFromLocalData() {
         List<OCFile> children = mStorageManager.getFolderContent(mLocalFolder, false);
         for (OCFile child : children) {
             if (!child.isFolder() && child.isAvailableOffline() && !child.isInConflict()) {

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -489,7 +489,7 @@ private void searchForLocalFileInDefaultPath(OCFile file) {
     public void setData(ArrayList<Object> objects, ExtendedListFragment.SearchType searchType) {
         isSpecialFilter = true;
 
-        
+
         mFiles = new Vector<>();
         for (int i = 0; i < objects.size(); i++) {
             OCFile ocFile = FileStorageUtils.fillOCFile((RemoteFile) objects.get(i));

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -489,6 +489,7 @@ private void searchForLocalFileInDefaultPath(OCFile file) {
     public void setData(ArrayList<Object> objects, ExtendedListFragment.SearchType searchType) {
         isSpecialFilter = true;
 
+        
         mFiles = new Vector<>();
         for (int i = 0; i < objects.size(); i++) {
             OCFile ocFile = FileStorageUtils.fillOCFile((RemoteFile) objects.get(i));

File: src/main/java/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -1213,6 +1213,7 @@ public void onMessageEvent(FavoriteEvent event) {
     @Subscribe(threadMode = ThreadMode.BACKGROUND)
     public void onMessageEvent(SearchEvent event) {
         setEmptyListLoadingMessage();
+        mAdapter.setData(new ArrayList<Object>(), SearchType.NO_SEARCH);
 
         if (event.getUnsetType().equals(SearchEvent.UnsetType.UNSET_BOTTOM_NAV_BAR)) {
             unsetAllMenuItems(false);

File: src/main/java/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -72,8 +72,8 @@ private static class FixedViewInfo {
     private int mRowHeight = -1;
     private static final String LOG_TAG = "grid-view-with-header-and-footer";
 
-    private ArrayList<FixedViewInfo> mHeaderViewInfos = new ArrayList<FixedViewInfo>();
-    private ArrayList<FixedViewInfo> mFooterViewInfos = new ArrayList<FixedViewInfo>();
+    private ArrayList<FixedViewInfo> mHeaderViewInfos = new ArrayList<>();
+    private ArrayList<FixedViewInfo> mFooterViewInfos = new ArrayList<>();
 
     private void initHeaderGridView() {
     }

File: src/main/java/com/owncloud/android/services/OperationsService.java
Patch:
@@ -553,6 +553,7 @@ private void nextOperation() {
                 );
                 
                 String action = operationIntent.getAction();
+
                 if (action.equals(ACTION_CREATE_SHARE_VIA_LINK)) {  // Create public share via link
                     String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
                     String password = operationIntent.getStringExtra(EXTRA_SHARE_PASSWORD);

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -448,8 +448,8 @@ public void setData(ArrayList<Object> objects, ExtendedListFragment.SearchType s
             mFiles.add(ocFile);
         }
 
-        if (!searchType.equals(ExtendedListFragment.SearchType.FAVORITE_SEARCH) &&
-                !searchType.equals(ExtendedListFragment.SearchType.FAVORITE_SEARCH_FILTER) &&
+        if (!searchType.equals(ExtendedListFragment.SearchType.PHOTO_SEARCH) &&
+                !searchType.equals(ExtendedListFragment.SearchType.PHOTOS_SEARCH_FILTER) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH_FILTER)) {
             Integer tempSortOrder = FileStorageUtils.mSortOrder;

File: src/main/java/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -448,8 +448,8 @@ public void setData(ArrayList<Object> objects, ExtendedListFragment.SearchType s
             mFiles.add(ocFile);
         }
 
-        if (!searchType.equals(ExtendedListFragment.SearchType.FAVORITE_SEARCH) &&
-                !searchType.equals(ExtendedListFragment.SearchType.FAVORITE_SEARCH_FILTER) &&
+        if (!searchType.equals(ExtendedListFragment.SearchType.PHOTO_SEARCH) &&
+                !searchType.equals(ExtendedListFragment.SearchType.PHOTOS_SEARCH_FILTER) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH) &&
                 !searchType.equals(ExtendedListFragment.SearchType.RECENTLY_MODIFIED_SEARCH_FILTER)) {
             Integer tempSortOrder = FileStorageUtils.mSortOrder;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -52,6 +52,8 @@
 import java.util.List;
 import java.util.Map;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -293,6 +293,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         mCancellationRequested.set(false);
         mUploadStarted.set(true);
         RemoteOperationResult result = null;
+        String expectedPath = null;
         File temporalFile = null, originalFile = new File(mOriginalStoragePath), expectedFile = null;
 
         try {
@@ -346,7 +347,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 throw new OperationCancelledException();
             }
 
-            String expectedPath = FileStorageUtils.getDefaultSavePathFor(mAccount.name, mFile);
+            expectedPath = FileStorageUtils.getDefaultSavePathFor(mAccount.name, mFile);
             expectedFile = new File(expectedPath);
 
             /// copy the file locally before uploading

File: src/com/owncloud/android/services/FileAlterationMagicListener.java
Patch:
@@ -92,7 +92,7 @@ public void onFileCreate(final File file) {
     }
 
     public void onFileCreate(final File file, int delay) {
-        if (file != null && !uploadMap.containsKey(file.getAbsolutePath())) {
+        if (file != null) {
             uploadMap.put(file.getAbsolutePath(), null);
 
             String mimetypeString = FileStorageUtils.getMimeTypeFromName(file.getAbsolutePath());

File: src/com/owncloud/android/services/FileAlterationMagicListener.java
Patch:
@@ -92,7 +92,7 @@ public void onFileCreate(final File file) {
     }
 
     public void onFileCreate(final File file, int delay) {
-        if (file != null) {
+        if (file != null && !uploadMap.containsKey(file.getAbsolutePath())) {
             uploadMap.put(file.getAbsolutePath(), null);
 
             String mimetypeString = FileStorageUtils.getMimeTypeFromName(file.getAbsolutePath());

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -50,7 +50,7 @@ public class SyncedFolderObserverService extends Service {
     public void onCreate() {
         SyncedFolderProvider syncedFolderProvider = new SyncedFolderProvider(MainApp.getAppContext().
                 getContentResolver());
-        monitor = new FileAlterationMonitor();
+        monitor = new FileAlterationMonitor(1000);
 
         fileFilter = new FileFilter() {
             @Override

File: src/com/owncloud/android/services/AutoUploadJob.java
Patch:
@@ -2,6 +2,7 @@
  * Nextcloud Android client application
  *
  * @author Tobias Kaminsky
+ * Copyright (C) 2017 Mario Danic
  * Copyright (C) 2016 Tobias Kaminsky
  * Copyright (C) 2016 Nextcloud
  * <p>

File: src/com/owncloud/android/services/ShutdownReceiver.java
Patch:
@@ -31,8 +31,6 @@
  */
 
 public class ShutdownReceiver extends BroadcastReceiver {
-    private static final String TAG = "ShutdownReceiver";
-
     @Override
     public void onReceive(final Context context, final Intent intent) {
         if (MainApp.getSyncedFolderObserverService() != null) {

File: src/com/owncloud/android/services/AutoUploadJob.java
Patch:
@@ -38,7 +38,7 @@
 public class AutoUploadJob extends Job {
     public static final String TAG = "AutoUploadJob";
 
-    private static final String LOCAL_PATH = "filePath";
+    public static final String LOCAL_PATH = "filePath";
     public static final String REMOTE_PATH = "remotePath";
     public static final String ACCOUNT = "account";
     public static final String UPLOAD_BEHAVIOUR = "uploadBehaviour";

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -135,6 +135,7 @@ public void restartObserver(SyncedFolder syncedFolder) {
                 fileAlterationMagicObserver = new FileAlterationMagicObserver(syncedFolder, fileFilter);
                 fileAlterationMagicObserver.init();
                 fileAlterationMagicObserver.addListener(new FileAlterationMagicListener(syncedFolder));
+                monitor.addObserver(fileAlterationMagicObserver);
             } catch (Exception e) {
                 Log_OC.d(TAG, "Failed getting an observer to intialize");
             }

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -26,7 +26,6 @@
 import android.content.Intent;
 import android.os.Binder;
 import android.os.IBinder;
-import android.util.Log;
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.SyncedFolder;
@@ -88,7 +87,6 @@ public boolean accept(File pathname) {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        Log.d("MARIO", "DESTROY");
         for(FileAlterationObserver fileAlterationObserver : monitor.getObservers()) {
             FileAlterationMagicObserver fileAlterationMagicObserver = (FileAlterationMagicObserver)
                     fileAlterationObserver;

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -167,7 +167,7 @@ public static String getInstantUploadFilePath(Locale current, String remotePath,
         if (subfolderByDate) {
            subPath = getSubpathFromDate(dateTaken, current);
         }
-        return remotePath + OCFile.PATH_SEPARATOR + subPath + (fileName == null ? "" : fileName);
+        return remotePath + subPath + (fileName == null ? "" : fileName);
     }
 
     public static String getInstantUploadFilePath(String remotePath, String fileName, long dateTaken,
@@ -176,7 +176,7 @@ public static String getInstantUploadFilePath(String remotePath, String fileName
         if (subfolderByDate) {
             subPath = getSubpathFromDate(dateTaken);
         }
-        return remotePath + OCFile.PATH_SEPARATOR + subPath + (fileName == null ? "" : fileName);
+        return remotePath + subPath + (fileName == null ? "" : fileName);
     }
 
 
@@ -194,7 +194,7 @@ public static String getInstantVideoUploadFilePath(Context context, String fileN
         if (com.owncloud.android.db.PreferenceManager.instantVideoUploadPathUseSubfolders(context)) {
             subPath = getSubpathFromDate(dateTaken);
         }
-        return uploadVideoPath + OCFile.PATH_SEPARATOR + subPath
+        return uploadVideoPath + subPath
                 + (fileName == null ? "" : fileName);
     }
     

File: src/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -193,7 +193,7 @@ public int deleteSyncFolders(Context context, ArrayList<SyncedFolder> syncedFold
 
         int result = mContentResolver.delete(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
-                ProviderMeta.ProviderTableMeta._ID + " IN (?)",
+                ProviderMeta.ProviderTableMeta._ID + " NOT IN (?)",
                 new String[]{String.valueOf(ids)}
         );
 

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -50,6 +50,8 @@
 import java.util.List;
 import java.util.Map;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -135,7 +135,9 @@ public void onActivityResumed(Activity activity) {
             @Override
             public void onActivityPaused(Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onPause() ending");
-                MainApp.getSyncedFolderObserverService().syncToDisk(false);
+                if (MainApp.getSyncedFolderObserverService() != null) {
+                    MainApp.getSyncedFolderObserverService().syncToDisk(false);
+                }
             }
 
             @Override

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -135,6 +135,7 @@ public void onActivityResumed(Activity activity) {
             @Override
             public void onActivityPaused(Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onPause() ending");
+                MainApp.getSyncedFolderObserverService().syncToDisk(false);
             }
 
             @Override
@@ -151,7 +152,6 @@ public void onActivitySaveInstanceState(Activity activity, Bundle outState) {
             @Override
             public void onActivityDestroyed(Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onDestroy() ending" );
-                MainApp.getSyncedFolderObserverService().syncToDisk(false);
             }
         });
     }

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -151,6 +151,7 @@ public void onActivitySaveInstanceState(Activity activity, Bundle outState) {
             @Override
             public void onActivityDestroyed(Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onDestroy() ending" );
+                MainApp.getSyncedFolderObserverService().syncToDisk(false);
             }
         });
     }

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -116,7 +116,7 @@ public boolean accept(File pathname) {
         Log_OC.d(TAG, "start");
         if (pairArrayList.size() == 0) {
             for (SyncedFolder syncedFolder : mProvider.getSyncedFolders()) {
-                if (syncedFolder.isEnabled() && !syncedFolderMap.containsKey(syncedFolder.getLocalPath())) {
+                if (syncedFolder.isEnabled() && !syncedFolderMap.containsKey(syncedFolder)) {
                     Log_OC.d(TAG, "start observer: " + syncedFolder.getLocalPath());
                     FileAlterationMagicObserver observer = new FileAlterationMagicObserver(new File(
                             syncedFolder.getLocalPath()), fileFilter);

File: src/com/owncloud/android/services/FileAlterationMagicListener.java
Patch:
@@ -128,15 +128,13 @@ public void onFileChange(File file) {
         if (fileRunnable.containsKey(file.getAbsolutePath())) {
             handler.removeCallbacks(fileRunnable.get(file.getAbsolutePath()));
             handler.postDelayed(fileRunnable.get(file.getAbsolutePath()), 500);
-            fileRunnable.remove(file.getAbsolutePath());
         }
     }
 
     @Override
     public void onFileDelete(File file) {
         if (fileRunnable.containsKey(file.getAbsolutePath())) {
             handler.removeCallbacks(fileRunnable.get(file.getAbsolutePath()));
-            fileRunnable.remove(file.getAbsolutePath());
         }
     }
 

File: src/com/owncloud/android/services/FileAlterationMagicListener.java
Patch:
@@ -128,13 +128,15 @@ public void onFileChange(File file) {
         if (fileRunnable.containsKey(file.getAbsolutePath())) {
             handler.removeCallbacks(fileRunnable.get(file.getAbsolutePath()));
             handler.postDelayed(fileRunnable.get(file.getAbsolutePath()), 500);
+            fileRunnable.remove(file.getAbsolutePath());
         }
     }
 
     @Override
     public void onFileDelete(File file) {
         if (fileRunnable.containsKey(file.getAbsolutePath())) {
             handler.removeCallbacks(fileRunnable.get(file.getAbsolutePath()));
+            fileRunnable.remove(file.getAbsolutePath());
         }
     }
 

File: src/com/owncloud/android/services/FileAlterationMagicListener.java
Patch:
@@ -133,7 +133,9 @@ public void onFileChange(File file) {
 
     @Override
     public void onFileDelete(File file) {
-        // This method is intentionally empty
+        if (fileRunnable.containsKey(file.getAbsolutePath())) {
+            handler.removeCallbacks(fileRunnable.get(file.getAbsolutePath()));
+        }
     }
 
     @Override

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -23,7 +23,6 @@
 package com.owncloud.android.services.observer;
 
 import android.app.Service;
-import android.content.Context;
 import android.content.Intent;
 import android.os.Binder;
 import android.os.IBinder;
@@ -76,7 +75,8 @@ public boolean accept(File pathname) {
             }
         };
 
-        file = new File(MainApp.getAppContext().getExternalFilesDir(null).getAbsolutePath() + "/nc_persistence");
+        file = new File(MainApp.getAppContext().getExternalFilesDir(null).getAbsolutePath() + File.separator +
+                "nc_persistence");
 
         boolean readPerstistanceEntries = false;
 
@@ -157,7 +157,7 @@ private void writePersistenceEntries(boolean readPerstistanceEntries, File file)
 
         try {
             if (pairArrayList.size() > 0 && !readPerstistanceEntries) {
-                fos = MainApp.getAppContext().openFileOutput(file.getAbsolutePath(), Context.MODE_PRIVATE);
+                fos = new FileOutputStream (new File(file.getAbsolutePath()), false);
                 ObjectOutputStream os = new ObjectOutputStream(fos);
                 for (int i = 0; i < pairArrayList.size(); i++) {
                     os.writeObject(pairArrayList.get(i));

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -72,7 +72,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         fileFilter = new FileFilter() {
             @Override
             public boolean accept(File pathname) {
-                return !pathname.getName().startsWith(".") && !pathname.getAbsolutePath().endsWith(".tmp");
+                return !pathname.getName().startsWith(".") && !pathname.getName().endsWith(".tmp");
             }
         };
 

File: src/com/owncloud/android/datamodel/SyncedFolderProvider.java
Patch:
@@ -165,7 +165,7 @@ public SyncedFolder findByLocalPath(String localPath) {
         Cursor cursor = mContentResolver.query(
                 ProviderMeta.ProviderTableMeta.CONTENT_URI_SYNCED_FOLDERS,
                 null,
-                ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + "==" + localPath,
+                ProviderMeta.ProviderTableMeta.SYNCED_FOLDER_LOCAL_PATH + "== \"" + localPath + "\"",
                 null,
                 null
         );

File: src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java
Patch:
@@ -72,7 +72,7 @@ public class UsersAndGroupsSearchProvider extends ContentProvider {
     private static final int RESULTS_PER_PAGE = 50;
     private static final int REQUESTED_PAGE = 1;
 
-    public static final String AUTHORITY = "com.nextcloud.android.providers.UsersAndGroupsSearchProvider";
+    public static String AUTHORITY;
     public static final String ACTION_SHARE_WITH = AUTHORITY + ".action.SHARE_WITH";
 
     public static final String CONTENT = "content";
@@ -106,6 +106,7 @@ public String getType(Uri uri) {
 
     @Override
     public boolean onCreate() {
+        AUTHORITY = getContext().getResources().getString(R.string.users_and_groups_search_authority);
         mUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
         mUriMatcher.addURI(AUTHORITY, SearchManager.SUGGEST_URI_PATH_QUERY + "/*", SEARCH);
         return true;

File: src/main/java/com/owncloud/android/MainApp.java
Patch:
@@ -45,8 +45,6 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -407,6 +407,7 @@ public void swapDirectory(OCFile directory, FileDataStorageManager updatedStorag
                 mFiles = filterHiddenFiles(mFiles);
             }
             mFiles = FileStorageUtils.sortOcFolder(mFiles);
+            mFilesAll.clear();
             mFilesAll.addAll(mFiles);
 
             currentDirectory = directory;

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -747,7 +747,7 @@ public OCFile getCurrentFile() {
     }
 
     /**
-     * Calls {@link OCFileListFragment#listDirectory(OCFile, boolean)} with a null parameter
+     * Calls {@link OCFileListFragment#listDirectory(OCFile, boolean, boolean)} with a null parameter
      */
     public void listDirectory(boolean onlyOnDevice, boolean fromSearch){
         listDirectory(null, onlyOnDevice, fromSearch);

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -507,8 +507,10 @@ protected void updateActionBarTitleAndHomeButton(OCFile chosenFile) {
         super.updateActionBarTitleAndHomeButton(chosenFile);
 
         /// set home button properties
-        if (mDrawerToggle != null) {
+        if (mDrawerToggle != null && chosenFile != null) {
             mDrawerToggle.setDrawerIndicatorEnabled(isRoot(chosenFile));
+        } else {
+            mDrawerToggle.setDrawerIndicatorEnabled(false);
         }
     }
 

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -92,7 +92,7 @@ public abstract class DrawerActivity extends ToolbarActivity implements DisplayU
     /**
      * Reference to the drawer toggle.
      */
-    private ActionBarDrawerToggle mDrawerToggle;
+    protected ActionBarDrawerToggle mDrawerToggle;
 
     /**
      * Reference to the navigation view.

File: src/com/owncloud/android/ui/activity/UploadPathActivity.java
Patch:
@@ -67,7 +67,7 @@ protected void onAccountSet(boolean stateWasRecovered) {
 
             if (!stateWasRecovered) {
                 OCFileListFragment listOfFolders = getListOfFilesFragment();
-                listOfFolders.listDirectory(folder, false);
+                listOfFolders.listDirectory(folder, false, false);
 
                 startSyncFolderOperation(folder, false);
             }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -93,13 +93,10 @@
 import com.owncloud.android.utils.ErrorMessageAdapter;
 import com.owncloud.android.utils.PermissionUtil;
 
-import org.w3c.dom.Text;
-
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Collection;
 
-import static com.owncloud.android.R.id.searchView;
 import static com.owncloud.android.db.PreferenceManager.getSortOrder;
 
 /**

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -101,7 +101,6 @@ public class ExtendedListFragment extends Fragment
     private FilterableListAdapter mAdapter;
 
     private SearchView searchView;
-    private String searchQuery;
     private Handler handler = new Handler();
 
     protected void setListAdapter(FilterableListAdapter listAdapter) {
@@ -187,7 +186,6 @@ public boolean onQueryTextChange(final String query) {
         handler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                searchQuery = query;
                 mAdapter.filter(query);
             }
         }, 500);
@@ -196,7 +194,6 @@ public void run() {
 
     @Override
     public boolean onQueryTextSubmit(String query) {
-        searchQuery = query;
         mAdapter.filter(query);
         return true;
     }

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -399,7 +399,7 @@ private class LoadBitmapTask extends AsyncTask<OCFile, Void, LoadImage> {
 
         /**
          * Weak reference to the target {@link ImageView} where the bitmap will be loaded into.
-         * <p>
+         *
          * Using a weak reference will avoid memory leaks if the target ImageView is retired from
          * memory before the load finishes.
          */
@@ -469,7 +469,7 @@ protected LoadImage doInBackground(OCFile... params) {
                             Log_OC.e(TAG, "File could not be loaded as a bitmap: " + storagePath);
                             break;
                         } else {
-                            if (ocFile.getFileName().endsWith(".jpg") || ocFile.getFileName().endsWith(".jpeg")) {
+                            if (ocFile.getMimetype().equalsIgnoreCase("image/jpeg")) {
                                 // Rotate image, obeying exif tag.
                                 result = BitmapUtils.rotateImage(result, storagePath);
                             }

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -507,8 +507,10 @@ protected void updateActionBarTitleAndHomeButton(OCFile chosenFile) {
         super.updateActionBarTitleAndHomeButton(chosenFile);
 
         /// set home button properties
-        if (mDrawerToggle != null) {
+        if (mDrawerToggle != null && chosenFile != null) {
             mDrawerToggle.setDrawerIndicatorEnabled(isRoot(chosenFile));
+        } else {
+            mDrawerToggle.setDrawerIndicatorEnabled(false);
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -632,6 +632,7 @@ && getActivity() instanceof PreviewImageActivity && getResources() != null) {
             layerDrawable.setDrawableByLayerId(layerDrawable.getId(0), layerOne);
 
             mImageView.setImageDrawable(layerDrawable);
+            mImageView.invalidate();
         }
     }
 

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -631,6 +631,7 @@ private void sendBroadcastDownloadFinished(
         if (unlinkedFromRemotePath != null) {
             end.putExtra(EXTRA_LINKED_TO_PATH, unlinkedFromRemotePath);
         }
+        end.setPackage(getPackageName());
         sendStickyBroadcast(end);
     }
 
@@ -648,6 +649,7 @@ private void sendBroadcastNewDownload(DownloadFileOperation download,
         added.putExtra(EXTRA_REMOTE_PATH, download.getRemotePath());
         added.putExtra(EXTRA_FILE_PATH, download.getSavePath());
         added.putExtra(EXTRA_LINKED_TO_PATH, linkedToRemotePath);
+        added.setPackage(getPackageName());
         sendStickyBroadcast(added);
     }
 

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -523,6 +523,7 @@ private void sendLocalBroadcast(
             intent.putExtra(FileSyncAdapter.EXTRA_FOLDER_PATH, dirRemotePath);
         }
         intent.putExtra(FileSyncAdapter.EXTRA_RESULT, result);
+        intent.setPackage(mContext.getPackageName());
         mContext.sendStickyBroadcast(intent);
         //LocalBroadcastManager.getInstance(mContext).sendBroadcast(intent);
     }

File: src/com/owncloud/android/services/SyncFolderHandler.java
Patch:
@@ -182,6 +182,7 @@ private void sendBroadcastNewSyncFolder(Account account, String remotePath) {
         added.putExtra(FileDownloader.EXTRA_REMOTE_PATH, remotePath);
         added.putExtra(FileDownloader.EXTRA_FILE_PATH, FileStorageUtils.getSavePath(account.name)
                 + remotePath);
+        added.setPackage(mService.getPackageName());
         mService.sendStickyBroadcast(added);
     }
 
@@ -197,6 +198,7 @@ private void sendBroadcastFinishedSyncFolder(Account account, String remotePath,
         finished.putExtra(FileDownloader.EXTRA_FILE_PATH,
                 FileStorageUtils.getSavePath(account.name) + remotePath);
         finished.putExtra(FileDownloader.EXTRA_DOWNLOAD_RESULT, success);
+        finished.setPackage(mService.getPackageName());
         mService.sendStickyBroadcast(finished);
     }
 }

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -120,6 +120,7 @@ public void onCreate(Bundle savedInstanceState) {
         mSystemBarColor = getResources().getColor(R.color.primary_dark);
         mProgressBarActionModeColor = getResources().getColor(R.color.action_mode_background);
         mProgressBarColor = getResources().getColor(R.color.primary);
+        mMultiChoiceModeListener = new MultiChoiceModeListener();
     }
 
     /**
@@ -529,7 +530,6 @@ public void loadStateFrom(Bundle savedInstanceState) {
      */
     private void setChoiceModeAsMultipleModal(Bundle savedInstanceState) {
         setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
-        mMultiChoiceModeListener = new MultiChoiceModeListener();
         if (savedInstanceState != null) {
             mMultiChoiceModeListener.loadStateFrom(savedInstanceState);
         }

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -120,6 +120,7 @@ public void onCreate(Bundle savedInstanceState) {
         mSystemBarColor = getResources().getColor(R.color.primary_dark);
         mProgressBarActionModeColor = getResources().getColor(R.color.action_mode_background);
         mProgressBarColor = getResources().getColor(R.color.primary);
+        mMultiChoiceModeListener = new MultiChoiceModeListener();
     }
 
     /**
@@ -529,7 +530,6 @@ public void loadStateFrom(Bundle savedInstanceState) {
      */
     private void setChoiceModeAsMultipleModal(Bundle savedInstanceState) {
         setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
-        mMultiChoiceModeListener = new MultiChoiceModeListener();
         if (savedInstanceState != null) {
             mMultiChoiceModeListener.loadStateFrom(savedInstanceState);
         }

File: src/com/owncloud/android/operations/GetUserProfileOperation.java
Patch:
@@ -24,10 +24,10 @@
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.UserInfo;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation;
-import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.UserInfo;
 import com.owncloud.android.operations.common.SyncOperation;
 
 /**
@@ -63,7 +63,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             accountManager.setUserData(
                 storedAccount,
                 AccountUtils.Constants.KEY_DISPLAY_NAME,
-                userInfo.mDisplayName
+                userInfo.getDisplayName()
             );
         }
         return result;

File: src/com/owncloud/android/operations/GetUserProfileOperation.java
Patch:
@@ -24,10 +24,10 @@
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.UserInfo;
 import com.owncloud.android.lib.common.accounts.AccountUtils;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation;
-import com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.UserInfo;
 import com.owncloud.android.operations.common.SyncOperation;
 
 /**
@@ -63,7 +63,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             accountManager.setUserData(
                 storedAccount,
                 AccountUtils.Constants.KEY_DISPLAY_NAME,
-                userInfo.mDisplayName
+                userInfo.getDisplayName()
             );
         }
         return result;

File: src/com/owncloud/android/authentication/AccountUtils.java
Patch:
@@ -40,6 +40,7 @@ public class AccountUtils {
     private static final String TAG = AccountUtils.class.getSimpleName();
 
     public static final String WEBDAV_PATH_4_0_AND_LATER = "/remote.php/webdav";
+    public static final String DAV_PATH = "/remote.php/dav";
     private static final String ODAV_PATH = "/remote.php/odav";
     private static final String SAML_SSO_PATH = "/remote.php/webdav";
     public static final String STATUS_PATH = "/status.php";

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -476,7 +476,7 @@ private void launchDavDroidLogin()
         if (getPackageManager().resolveActivity(davDroidLoginIntent, 0) != null) {
             // arguments
             if (mUri != null) {
-                davDroidLoginIntent.putExtra("url", mUri.toString());
+                davDroidLoginIntent.putExtra("url", mUri.toString() + AccountUtils.DAV_PATH);
             }
             davDroidLoginIntent.putExtra("username", AccountUtils.getAccountUsername(account.name));
             //loginIntent.putExtra("password", "...");

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -476,7 +476,7 @@ private void launchDavDroidLogin()
         if (getPackageManager().resolveActivity(davDroidLoginIntent, 0) != null) {
             // arguments
             if (mUri != null) {
-                davDroidLoginIntent.putExtra("url", mUri.toString());
+                davDroidLoginIntent.putExtra("url", mUri.toString() + "/remote.php/dav");
             }
             davDroidLoginIntent.putExtra("username", AccountUtils.getAccountUsername(account.name));
             //loginIntent.putExtra("password", "...");

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -548,7 +548,7 @@ public void syncFile(OCFile file) {
 
     public void toggleFavorites(Collection<OCFile> files, boolean isFavorite){
         List<OCFile> alreadyRightStateList = new ArrayList<>();
-        for(OCFile file : files){
+        for(OCFile file : files) {
             if(file.isFavorite() == isFavorite) {
                 alreadyRightStateList.add(file);
             }

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -549,7 +549,7 @@ public void syncFile(OCFile file) {
     public void toggleFavorites(Collection<OCFile> files, boolean isFavorite){
         List<OCFile> alreadyRightStateList = new ArrayList<>();
         for(OCFile file : files){
-            if(file.isFavorite() == isFavorite){
+            if(file.isFavorite() == isFavorite) {
                 alreadyRightStateList.add(file);
             }
         }

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -547,14 +547,14 @@ public void syncFile(OCFile file) {
     }
 
     public void toggleFavorites(Collection<OCFile> files, boolean isFavorite){
-        List<OCFile> found = new ArrayList<>();
+        List<OCFile> alreadyRightStateList = new ArrayList<>();
         for(OCFile file : files){
             if(file.isFavorite() == isFavorite){
-                found.add(file);
+                alreadyRightStateList.add(file);
             }
         }
 
-        files.removeAll(found);
+        files.removeAll(alreadyRightStateList);
 
         for (OCFile file: files) {
             toggleFavorite(file, isFavorite);

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -674,7 +674,6 @@ private void cancel(String accountName, String remotePath) {
                 upload = mCurrentUpload;
             }
             if (upload != null) {
-                boolean pending = !upload.isUploadInProgress();
                 upload.cancel();
                 // need to update now table in mUploadsStorageManager,
                 // since the operation will not get to be run by FileUploader#uploadFile
@@ -686,7 +685,7 @@ private void cancel(String accountName, String remotePath) {
         }
 
         /**
-         * Cancels all the uploads for an account
+         * Cancels all the uploads for an account.
          *
          * @param account ownCloud account.
          */

File: src/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -32,7 +32,7 @@
 import com.owncloud.android.operations.common.SyncOperation;
 
 /**
- * Creates a new private share for a given file
+ * Creates a new private share for a given file.
  */
 public class CreateShareWithShareeOperation extends SyncOperation {
 

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -63,7 +63,6 @@
  */
 public class FolderSyncActivity extends FileActivity implements FolderSyncAdapter.ClickListener,
         SyncedFolderPreferencesDialogFragment.OnSyncedFolderPreferenceListener {
-    private static final String TAG = FolderSyncActivity.class.getSimpleName();
 
     private static final String SYNCED_FOLDER_PREFERENCES_DIALOG_TAG = "SYNCED_FOLDER_PREFERENCES_DIALOG";
     public static final String PRIORITIZED_FOLDER = "Camera";

File: src/com/owncloud/android/ui/activity/HookActivity.java
Patch:
@@ -21,6 +21,4 @@
 
 public abstract class HookActivity extends FileActivity {
 
-    private static final String TAG = HookActivity.class.getName();
-    
 }

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -148,7 +148,7 @@ private void sendMail() {
             emailAddress = "";
         }
         
-        ArrayList<Uri> uris = new ArrayList<Uri>();
+        ArrayList<Uri> uris = new ArrayList<>();
 
         // Convert from paths to Android friendly Parcelable Uri's
         for (String file : Log_OC.getLogFileNames()) {
@@ -193,7 +193,7 @@ private class LoadingLogTask extends AsyncTask<String, Void, String> {
 
         public LoadingLogTask(TextView logTV){
             // Use of a WeakReference to ensure the TextView can be garbage collected
-            textViewReference  = new WeakReference<TextView>(logTV);
+            textViewReference  = new WeakReference<>(logTV);
         }
 
         protected String doInBackground(String... args) {

File: src/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -60,7 +60,6 @@
 import com.owncloud.android.utils.DisplayUtils;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.Set;
 
 /**

File: src/com/owncloud/android/ui/adapter/FolderSyncAdapter.java
Patch:
@@ -45,8 +45,6 @@
  */
 public class FolderSyncAdapter extends SectionedRecyclerViewAdapter<FolderSyncAdapter.MainViewHolder> {
 
-    private static final String TAG = FolderSyncAdapter.class.getSimpleName();
-
     private final Context mContext;
     private final int mGridWidth;
     private final int mGridTotal;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -674,7 +674,6 @@ private void cancel(String accountName, String remotePath) {
                 upload = mCurrentUpload;
             }
             if (upload != null) {
-                boolean pending = !upload.isUploadInProgress();
                 upload.cancel();
                 // need to update now table in mUploadsStorageManager,
                 // since the operation will not get to be run by FileUploader#uploadFile
@@ -686,7 +685,7 @@ private void cancel(String accountName, String remotePath) {
         }
 
         /**
-         * Cancels all the uploads for an account
+         * Cancels all the uploads for an account.
          *
          * @param account ownCloud account.
          */

File: src/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -32,7 +32,7 @@
 import com.owncloud.android.operations.common.SyncOperation;
 
 /**
- * Creates a new private share for a given file
+ * Creates a new private share for a given file.
  */
 public class CreateShareWithShareeOperation extends SyncOperation {
 

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -63,7 +63,6 @@
  */
 public class FolderSyncActivity extends FileActivity implements FolderSyncAdapter.ClickListener,
         SyncedFolderPreferencesDialogFragment.OnSyncedFolderPreferenceListener {
-    private static final String TAG = FolderSyncActivity.class.getSimpleName();
 
     private static final String SYNCED_FOLDER_PREFERENCES_DIALOG_TAG = "SYNCED_FOLDER_PREFERENCES_DIALOG";
     public static final String PRIORITIZED_FOLDER = "Camera";

File: src/com/owncloud/android/ui/activity/HookActivity.java
Patch:
@@ -21,6 +21,4 @@
 
 public abstract class HookActivity extends FileActivity {
 
-    private static final String TAG = HookActivity.class.getName();
-    
 }

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -148,7 +148,7 @@ private void sendMail() {
             emailAddress = "";
         }
         
-        ArrayList<Uri> uris = new ArrayList<Uri>();
+        ArrayList<Uri> uris = new ArrayList<>();
 
         // Convert from paths to Android friendly Parcelable Uri's
         for (String file : Log_OC.getLogFileNames()) {
@@ -193,7 +193,7 @@ private class LoadingLogTask extends AsyncTask<String, Void, String> {
 
         public LoadingLogTask(TextView logTV){
             // Use of a WeakReference to ensure the TextView can be garbage collected
-            textViewReference  = new WeakReference<TextView>(logTV);
+            textViewReference  = new WeakReference<>(logTV);
         }
 
         protected String doInBackground(String... args) {

File: src/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -60,7 +60,6 @@
 import com.owncloud.android.utils.DisplayUtils;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.Set;
 
 /**

File: src/com/owncloud/android/ui/adapter/FolderSyncAdapter.java
Patch:
@@ -45,8 +45,6 @@
  */
 public class FolderSyncAdapter extends SectionedRecyclerViewAdapter<FolderSyncAdapter.MainViewHolder> {
 
-    private static final String TAG = FolderSyncAdapter.class.getSimpleName();
-
     private final Context mContext;
     private final int mGridWidth;
     private final int mGridTotal;

File: src/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -32,6 +32,7 @@
 import com.owncloud.android.lib.resources.status.OCCapability;
 import com.owncloud.android.services.OperationsService.OperationsServiceBinder;
 import com.owncloud.android.ui.activity.ComponentsGetter;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -305,7 +306,7 @@ private boolean isSingleFile() {
     }
 
     private boolean isSingleImage() {
-        return isSingleSelection() && mFiles.iterator().next().isImage();
+        return isSingleSelection() && MimeTypeUtil.isImage(mFiles.iterator().next());
     }
 
     private boolean allFiles() {

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -227,7 +227,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.file_actions_menu, menu);
 
-        if(getFile().isDown() && getFile().isImage()) {
+        if(getFile().isDown() && MimeTypeUtil.isImage(getFile())) {
             menu.findItem(R.id.action_set_as_wallpaper).setVisible(false);
         }
     }

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1582,10 +1582,12 @@ public ArrayList<OCShare> getSharesWithForAFile(String filePath, String accountN
                 + ProviderTableMeta.OCSHARES_ACCOUNT_OWNER + AND
                 + " (" + ProviderTableMeta.OCSHARES_SHARE_TYPE + "=? OR "
                 + ProviderTableMeta.OCSHARES_SHARE_TYPE +  "=? OR "
+                + ProviderTableMeta.OCSHARES_SHARE_TYPE +  "=? OR "
                 + ProviderTableMeta.OCSHARES_SHARE_TYPE + "=? ) ";
         String [] whereArgs = new String[]{ filePath, accountName ,
                 Integer.toString(ShareType.USER.getValue()),
                 Integer.toString(ShareType.GROUP.getValue()),
+                Integer.toString(ShareType.EMAIL.getValue()),
                 Integer.toString(ShareType.FEDERATED.getValue())};
 
         Cursor cursor = null;

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -336,6 +336,7 @@ private void updateFilesTableAccordingToShareInsertion(
         } else if (
                 newShareType == ShareType.USER.getValue() ||
                 newShareType == ShareType.GROUP.getValue() ||
+                newShareType == ShareType.EMAIL.getValue() ||
                 newShareType == ShareType.FEDERATED.getValue() ) {
             fileValues.put(ProviderTableMeta.FILE_SHARED_WITH_SHAREE, 1);
         }

File: src/com/owncloud/android/operations/CopyFileOperation.java
Patch:
@@ -18,7 +18,6 @@
 package com.owncloud.android.operations;
 
 import android.accounts.Account;
-import android.content.Context;
 
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudClient;

File: src/com/owncloud/android/operations/MoveFileOperation.java
Patch:
@@ -20,16 +20,15 @@
 
 package com.owncloud.android.operations;
 
-import com.owncloud.android.MainApp;
+import android.accounts.Account;
+
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.resources.files.MoveRemoteFileOperation;
 import com.owncloud.android.operations.common.SyncOperation;
 
-import android.accounts.Account;
-
 
 /**
  * Operation mmoving an {@link OCFile} to a different folder.

File: src/com/owncloud/android/operations/RemoveFileOperation.java
Patch:
@@ -21,7 +21,6 @@
 
 package com.owncloud.android.operations;
 
-import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -71,7 +71,6 @@
 
 import java.io.IOException;
 import java.util.Iterator;
-import java.util.List;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.ConcurrentMap;

File: src/com/owncloud/android/ui/activity/GenericExplanationActivity.java
Patch:
@@ -20,8 +20,6 @@
 
 package com.owncloud.android.ui.activity;
 
-import java.util.ArrayList;
-
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
@@ -35,7 +33,8 @@
 import android.widget.TextView;
 
 import com.owncloud.android.R;
-import com.owncloud.android.utils.DisplayUtils;
+
+import java.util.ArrayList;
 
 
 /**

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -44,7 +44,6 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.lang.ref.WeakReference;

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -44,7 +44,6 @@
 import com.owncloud.android.operations.UpdateSharePermissionsOperation;
 import com.owncloud.android.providers.UsersAndGroupsSearchProvider;
 import com.owncloud.android.ui.dialog.ShareLinkToDialog;
-import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
 import com.owncloud.android.ui.fragment.ShareFileFragment;

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -159,7 +159,7 @@ public boolean onUploadItemClick(OCUpload file) {
      * Open file with app associates with its MIME type. If MIME type unknown, show list with all apps.
      */
     private void openFileWithDefault(String localPath) {
-        Intent myIntent = new Intent(android.content.Intent.ACTION_VIEW);
+        Intent myIntent = new Intent(Intent.ACTION_VIEW);
         File file = new File(localPath);
         String mimetype = MimeTypeUtil.getBestMimeTypeByFilename(localPath);
         if ("application/octet-stream".equals(mimetype)) {

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -27,7 +27,6 @@
 import android.webkit.WebView;
 
 import com.owncloud.android.R;
-import com.owncloud.android.utils.DisplayUtils;
 
 
 /**

File: src/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -31,7 +31,6 @@
 import android.support.v7.app.AppCompatActivity;
 
 import com.owncloud.android.R;
-import com.owncloud.android.utils.DisplayUtils;
 
 
 /**

File: src/com/owncloud/android/ui/dialog/ExpirationDatePickerDialogFragment.java
Patch:
@@ -23,18 +23,15 @@
 
 import android.app.DatePickerDialog;
 import android.app.Dialog;
-import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.text.format.DateUtils;
 import android.widget.DatePicker;
-import android.widget.Toast;
 
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.ui.activity.FileActivity;
 
 import java.util.Calendar;
-import java.util.Date;
 
 /**
  *  Dialog requesting a date after today.

File: src/com/owncloud/android/ui/preview/ImageViewCustom.java
Patch:
@@ -10,7 +10,6 @@
 import android.view.View;
 import android.widget.ImageView;
 
-import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.utils.Log_OC;
 
 import java.io.FileInputStream;

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -109,7 +109,7 @@ public class ReceiveExternalFilesActivity extends FileActivity
     private static final String FTAG_ERROR_FRAGMENT = "ERROR_FRAGMENT";
     public static final String TEXT_FILE_SUFFIX = ".txt";
     public static final String URL_FILE_SUFFIX = ".url";
-    public static final String WEBLOC_FILE_SUFFIX = ".weboc";
+    public static final String WEBLOC_FILE_SUFFIX = ".webloc";
 
     private AccountManager mAccountManager;
     private Stack<String> mParents;

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -142,7 +142,6 @@ public void onActivityPaused(Activity activity) {
             @Override
             public void onActivityStopped(Activity activity) {
                 Log_OC.d(activity.getClass().getSimpleName(), "onStop() ending" );
-                WhatsNewActivity.runIfNeeded(activity);
                 PassCodeManager.getPassCodeManager().onActivityStopped(activity);
             }
 

File: src/com/owncloud/android/features/FeatureList.java
Patch:
@@ -37,8 +37,7 @@
  * @author Bartosz Przybylski
  */
 public class FeatureList {
-    static final private boolean SHOW_ON_FIRST_RUN = true;
-    static final private boolean SHOW_ON_UPGRADE = false;
+    private static final boolean SHOW_ON_FIRST_RUN = true;
 
     private static final String VERSION_1_0_0 = "1.0.0";
     private static final String BETA_VERSION_0 = "0";
@@ -153,7 +152,7 @@ public Object[] newArray(int size) {
                 };
     }
 
-    static int versionCodeFromString(String version) {
+    private static int versionCodeFromString(String version) {
         String v[] = version.split(Pattern.quote("."));
         if (v.length != 3) {
             Log_OC.e("FeatureList", "Version string is incorrect " + version);

File: src/com/owncloud/android/ui/activity/WhatsNewActivity.java
Patch:
@@ -1,8 +1,9 @@
 /**
  *   ownCloud Android client application
  *
- *   Copyright (C) 2015 Bartosz Przybylski
+ *   Copyright (C) 2015-2016 Bartosz Przybylski
  *   Copyright (C) 2015 ownCloud Inc.
+ *   Copyright (C) 2016 nextCloud
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,
@@ -98,7 +99,7 @@ public void onClick(View view) {
         });
 
         TextView tv = (TextView)findViewById(R.id.welcomeText);
-        tv.setText(isFirstRun() ? R.string.welcome_to_oc_title : R.string.whats_new_title);
+        tv.setText(isFirstRun() ? R.string.welcome_to_nc_title : R.string.whats_new_title);
 
         updateNextButtonIfNeeded();
     }

File: src/com/owncloud/android/features/FeatureList.java
Patch:
@@ -52,7 +52,7 @@ static public FeatureItem[] get() {
 	}
 
 	static public FeatureItem[] getFiltered(final int lastSeenVersionCode, final boolean isFirstRun) {
-		List<FeatureItem> features = new LinkedList<>();
+		List<FeatureItem> features = new LinkedList<FeatureItem>();
 
 		for (FeatureItem item : get()) {
 			if (isFirstRun && item.shouldShowOnFirstRun()) {

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -164,7 +164,7 @@ private Integer getUploadBehaviour(Context context) {
             Log_OC.d(TAG, "upload file and delete original file");
             return FileUploader.LOCAL_BEHAVIOUR_DELETE;
         }
-        return null;
+        return FileUploader.LOCAL_BEHAVIOUR_FORGET;
     }
 
     private void handleNewVideoAction(Context context, Intent intent) {

File: src/com/owncloud/android/utils/RecursiveFileObserver.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.owncloud.android.utils;
 
+import android.os.FileObserver;
+
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Stack;
 
-import android.os.FileObserver;
-
 public class RecursiveFileObserver extends FileObserver {
 
     private final List<SingleFileObserver> mObservers =  new ArrayList<>();
@@ -38,7 +38,7 @@ public RecursiveFileObserver(String path) {
         this(path, ALL_EVENTS);
     }
     
-    RecursiveFileObserver(String path, int mask) {
+    public RecursiveFileObserver(String path, int mask) {
         super(path, mask);
         mPath = path;
         mMask = mask;

File: src/com/owncloud/android/services/SyncedFolderJobService.java
Patch:
@@ -51,8 +51,6 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
     @Override
     public boolean onStartJob(JobParameters params) {
-        Log_OC.d(TAG, "startJob: " + params.getJobId());
-
         Context context = MainApp.getAppContext();
         PersistableBundle bundle = params.getExtras();
         String filePath = bundle.getString("filePath");
@@ -62,6 +60,8 @@ public boolean onStartJob(JobParameters params) {
         Account account = AccountUtils.getOwnCloudAccountByName(context, bundle.getString("account"));
         Integer uploadBehaviour = bundle.getInt("uploadBehaviour");
 
+        Log_OC.d(TAG, "startJob: " + params.getJobId() + ", filePath: " + filePath);
+
         File file = new File(filePath);
         String mimeType = MimeTypeUtil.getBestMimeTypeByFilename(file.getAbsolutePath());
 

File: src/com/owncloud/android/services/observer/SyncedFolderObserver.java
Patch:
@@ -23,7 +23,6 @@ class SyncedFolderObserver extends RecursiveFileObserver {
 
     private Context context;
 
-    private static final int MY_BACKGROUND_JOB = 0;
     public static final String TAG = "SyncedFolderObserver";
     private SyncedFolder syncedFolder;
 
@@ -55,8 +54,9 @@ public void onEvent(int event, String path) {
             bundle.putInt("subfolderByDate", syncedFolder.getSubfolderByDate() ? 1 : 0);
 
             JobScheduler js = (JobScheduler) context.getSystemService(Context.JOB_SCHEDULER_SERVICE);
+            Long date = new Date().getTime();
             JobInfo job = new JobInfo.Builder(
-                    MY_BACKGROUND_JOB,
+                    date.intValue(),
                     new ComponentName(context, SyncedFolderJobService.class))
                     .setRequiresCharging(syncedFolder.getChargingOnly())
                     .setRequiredNetworkType(syncedFolder.getWifiOnly() ? JobInfo.NETWORK_TYPE_UNMETERED : JobInfo.NETWORK_TYPE_ANY)

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -63,7 +63,6 @@
 /**
  * This Adapter populates a ListView with following types of uploads: pending,
  * active, completed. Filtering possible.
- *
  */
 public class ExpandableUploadListAdapter extends BaseExpandableListAdapter implements Observer {
 

File: src/com/owncloud/android/authentication/AuthenticatorAsyncTask.java
Patch:
@@ -40,8 +40,8 @@
  */
 public class AuthenticatorAsyncTask  extends AsyncTask<Object, Void, RemoteOperationResult> {
 
-    private static String REMOTE_PATH = "/";
-    private static boolean SUCCESS_IF_ABSENT = false;
+    private static final String REMOTE_PATH = "/";
+    private static final boolean SUCCESS_IF_ABSENT = false;
 
     private Context mContext;
     private final WeakReference<OnAuthenticatorTaskListener> mListener;

File: src/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -43,7 +43,7 @@ public class PassCodeManager {
         // other activities may be exempted, if needed
     }
 
-    private static int PASS_CODE_TIMEOUT = 1000;
+    private static final int PASS_CODE_TIMEOUT = 1000;
         // keeping a "low" positive value is the easiest way to prevent the pass code is requested on rotations
 
     public static PassCodeManager mPassCodeManagerInstance = null;

File: src/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class BootupBroadcastReceiver extends BroadcastReceiver {
 
-    private static String TAG = BootupBroadcastReceiver.class.getSimpleName();
+    private static final String TAG = BootupBroadcastReceiver.class.getSimpleName();
     
     /**
      * Receives broadcast intent reporting that the system was just boot up.

File: src/com/owncloud/android/files/services/IndexedForest.java
Patch:
@@ -43,6 +43,7 @@ public class IndexedForest<V> {
 
     private ConcurrentMap<String, Node<V>> mMap = new ConcurrentHashMap<String, Node<V>>();
 
+    @SuppressWarnings("PMD.ShortClassName")
     private class Node<V> {
         String mKey = null;
         Node<V> mParent = null;
@@ -168,7 +169,6 @@ public Pair<V, String> removePayload(String accountName, String remotePath) {
             /// remove ancestors if only here due to firstRemoved
             Node<V> removed = firstRemoved;
             Node<V> parent = removed.getParent();
-            boolean unlinked = false;
             while (parent != null) {
                 parent.removeChild(removed);
                 if (!parent.hasChildren()) {

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -58,6 +58,7 @@
  *  
  *  Does NOT enter in the child folders to synchronize their contents also.
  */
+@SuppressWarnings("PMD.AvoidDuplicateLiterals")
 public class RefreshFolderOperation extends RemoteOperation {
 
     private static final String TAG = RefreshFolderOperation.class.getSimpleName();
@@ -319,8 +320,9 @@ private RemoteOperationResult fetchAndSyncRemoteFolder(OwnCloudClient client) {
                     // should be a different result code, but will do the job
             }
         } else {
-            if (result.getCode() == ResultCode.FILE_NOT_FOUND)
+            if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
                 removeLocalFolder();
+            }
         }
         
         return result;

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -233,8 +233,9 @@ private RemoteOperationResult fetchAndSyncRemoteFolder(OwnCloudClient client)
                     // should be a different result code, but will do the job
             }
         } else {
-            if (result.getCode() == ResultCode.FILE_NOT_FOUND)
+            if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
                 removeLocalFolder();
+            }
         }
         
 

File: src/com/owncloud/android/operations/UpdateOCVersionOperation.java
Patch:
@@ -107,8 +107,9 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             Log_OC.e(TAG, "Check for update of ownCloud server version at " + client.getWebdavUri() + ": " + result.getLogMessage(), e);
             
         } finally {
-            if (get != null) 
+            if (get != null) {
                 get.releaseConnection();
+            }
         }
         return result;
     }

File: src/com/owncloud/android/operations/common/SyncOperation.java
Patch:
@@ -85,9 +85,10 @@ public RemoteOperationResult execute(FileDataStorageManager storageManager, Cont
 	 */
 	public RemoteOperationResult execute(OwnCloudClient client,
                                          FileDataStorageManager storageManager) {
-        if (storageManager == null)
+        if (storageManager == null) {
             throw new IllegalArgumentException("Trying to execute a sync operation with a " +
                     "NULL storage manager");
+        }
         mStorageManager = storageManager;
 		return super.execute(client);
 	}

File: src/com/owncloud/android/services/observer/FileObserverService.java
Patch:
@@ -68,7 +68,7 @@ public class FileObserverService extends Service {
     private final static String ARG_FILE = "ARG_FILE";
     private final static String ARG_ACCOUNT = "ARG_ACCOUNT";
 
-    private static String TAG = FileObserverService.class.getSimpleName();
+    private static final String TAG = FileObserverService.class.getSimpleName();
 
     private Map<String, FolderObserver> mFolderObserversMap;
     private DownloadCompletedReceiver mDownloadReceiver;

File: src/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -39,7 +39,7 @@
  */
 public class ConflictsResolveActivity extends FileActivity implements OnConflictDecisionMadeListener {
 
-    private String TAG = ConflictsResolveActivity.class.getSimpleName();
+    private static final String TAG = ConflictsResolveActivity.class.getSimpleName();
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -256,8 +256,9 @@ public boolean onNavigationItemSelected(int itemPosition, long itemId) {
         // the next operation triggers a new call to this method, but it's necessary to 
         // ensure that the name exposed in the action bar is the current directory when the 
         // user selected it in the navigation list
-        if (itemPosition != 0)
+        if (itemPosition != 0) {
             getSupportActionBar().setSelectedNavigationItem(0);
+        }
         return true;
     }
 

File: src/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -63,8 +63,9 @@ public UploaderAdapter(Context context,
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         View vi = convertView;
-        if (convertView == null)
+        if (convertView == null) {
             vi = inflater.inflate(R.layout.uploader_list_item_layout, null);
+        }
 
         HashMap<String, OCFile> data = (HashMap<String, OCFile>) getItem(position);
         OCFile file = data.get("dirname");

File: src/com/owncloud/android/ui/adapter/X509CertificateViewAdapter.java
Patch:
@@ -128,7 +128,7 @@ private final String getDigestHexBytesWithColonsAndNewLines(View dialogView, fin
            final int loVal = b & 0x0F;
            hex.append((char) ('0' + (hiVal + (hiVal / 10 * 7))));
            hex.append((char) ('0' + (loVal + (loVal / 10 * 7))));
-           hex.append(":");
+           hex.append(':');
         }
         return digestType + ":" + newLine + hex.toString().replaceFirst("\\:$","") + newLine + newLine;
      }    

File: src/com/owncloud/android/ui/dialog/CredentialsDialogFragment.java
Patch:
@@ -148,8 +148,9 @@ public void onClick(DialogInterface dialog, int which) {
     
     @Override
     public void onDestroyView() {
-      if (getDialog() != null && getRetainInstance())
-        getDialog().setDismissMessage(null);
+      if (getDialog() != null && getRetainInstance()) {
+          getDialog().setDismissMessage(null);
+      }
       super.onDestroyView();
     }
 

File: src/com/owncloud/android/ui/dialog/LoadingDialog.java
Patch:
@@ -76,8 +76,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
     @Override
     public void onDestroyView() {
-        if (getDialog() != null && getRetainInstance())
+        if (getDialog() != null && getRetainInstance()) {
             getDialog().setDismissMessage(null);
+        }
         super.onDestroyView();
     }
 }

File: src/com/owncloud/android/ui/dialog/RemoveFileDialogFragment.java
Patch:
@@ -117,8 +117,9 @@ public void onCancel(String callerTag) {
             for(OCFile file: files) {
                 containsFavorite = file.isFavorite() || containsFavorite;
 
-                if (containsFavorite)
+                if (containsFavorite) {
                     break;
+                }
             }
         }
 

File: src/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -83,7 +83,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         EditText inputText = ((EditText)v.findViewById(R.id.user_input));
         inputText.setText(currentName);
         int selectionStart = 0;
-        int extensionStart = mTargetFile.isFolder() ? -1 : currentName.lastIndexOf(".");
+        int extensionStart = mTargetFile.isFolder() ? -1 : currentName.lastIndexOf('.');
         int selectionEnd = (extensionStart >= 0) ? extensionStart : currentName.length();
         if (selectionStart >= 0 && selectionEnd >= 0) {
             inputText.setSelection(

File: src/com/owncloud/android/ui/dialog/SslUntrustedCertDialog.java
Patch:
@@ -179,8 +179,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
     @Override
     public void onDestroyView() {
         Log_OC.d(TAG, "onDestroyView");
-        if (getDialog() != null && getRetainInstance())
+        if (getDialog() != null && getRetainInstance()) {
             getDialog().setDismissMessage(null);
+        }
         super.onDestroyView();
     }
     

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -137,7 +137,7 @@ public void switchToListView() {
     }
 
     public boolean isGridEnabled(){
-        return (mCurrentListView == mGridView);
+        return (mCurrentListView != null && mCurrentListView.equals(mGridView));
     }
 
     @Override
@@ -283,7 +283,7 @@ protected void restoreIndexAndTopPosition() {
             Log_OC.v(TAG, "Setting selection to position: " + firstPosition + "; top: "
                     + top + "; index: " + index);
 
-            if (mCurrentListView == mListView) {
+            if (mCurrentListView!= null && mCurrentListView.equals(mListView)) {
                 if (mHeightCell*index <= mListView.getHeight()) {
                     mListView.setSelectionFromTop(firstPosition, top);
                 } else {

File: src/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -195,7 +195,9 @@ public void listDirectory(File directory) {
             } else {
                 directory = Environment.getExternalStorageDirectory();
                 // TODO be careful with the state of the storage; could not be available
-                if (directory == null) return; // no files to show
+                if (directory == null) {
+                    return; // no files to show
+                }
             }
         }
         

File: src/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -38,7 +38,7 @@
  * 
  */
 public class UploadListFragment extends ExpandableListFragment {
-    static private String TAG = UploadListFragment.class.getSimpleName();
+    private static final String TAG = UploadListFragment.class.getSimpleName();
 
     /**
      * Reference to the Activity which this fragment is attached to. For

File: src/com/owncloud/android/ui/helpers/SparseBooleanArrayParcelable.java
Patch:
@@ -30,6 +30,7 @@
  */
 public class SparseBooleanArrayParcelable implements Parcelable {
 
+    @SuppressWarnings("PMD.SuspiciousConstantFieldName")
     public static Parcelable.Creator<SparseBooleanArrayParcelable> CREATOR =
         new Parcelable.Creator<SparseBooleanArrayParcelable>() {
 

File: src/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -27,7 +27,7 @@
 import android.os.HandlerThread;
 import android.os.Process;
 import android.support.v4.app.NotificationCompat;
-
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import com.owncloud.android.R;
 
 public class NotificationUtils {
@@ -52,7 +52,7 @@ public static NotificationCompat.Builder newNotificationBuilder(Context context)
             setColor(context.getResources().getColor(R.color.primary));
     }
 
-
+    @SuppressFBWarnings("DMI")
     public static void cancelWithDelay(
             final NotificationManager notificationManager,
             final int notificationId,

File: src/com/owncloud/android/utils/MimeTypeUtil.java
Patch:
@@ -55,6 +55,7 @@
  *     </li>
  * </ol>
  */
+@SuppressWarnings("PMD.AvoidDuplicateLiterals")
 public class MimeTypeUtil {
     /** Mapping: icon for mime type */
     private static final Map<String, Integer> MIMETYPE_TO_ICON_MAPPING = new HashMap<>();
@@ -291,7 +292,7 @@ public static String getMimeTypeFromPath(String path) {
      * @return the file extension
      */
     private static String getExtension(String filename) {
-        return filename.substring(filename.lastIndexOf(".") + 1).toLowerCase();
+        return filename.substring(filename.lastIndexOf('.') + 1).toLowerCase();
     }
 
     /**

File: src/org/nextcloud/providers/cursors/FileCursor.java
Patch:
@@ -42,7 +42,9 @@ public FileCursor(String[] projection) {
     }
 
     public void addFile(OCFile file) {
-        if (file == null) return;
+        if (file == null) {
+            return;
+        }
 
         final int iconRes = MimeTypeUtil.getFileTypeIconId(file.getMimetype(), file.getFileName());
         final String mimeType = file.isFolder() ? Document.MIME_TYPE_DIR : file.getMimetype();

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -24,7 +24,6 @@
 import android.accounts.Account;
 import android.content.Context;
 import android.content.Intent;
-import android.util.Log;
 
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;

File: src/com/owncloud/android/services/SyncFolderHandler.java
Patch:
@@ -78,7 +78,7 @@ public SyncFolderHandler(Looper looper, OperationsService service) {
      * @param account       ownCloud account where the remote folder is stored.
      * @param remotePath    The path to a folder that could be in the queue of synchronizations.
      */
-    boolean isSynchronizing(Account account, String remotePath) {
+    private boolean isSynchronizing(Account account, String remotePath) {
         if (account == null || remotePath == null) {
             return false;
         }

File: src/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -104,7 +104,7 @@ public void onCreate(Bundle savedInstanceState) {
             mShare = getArguments().getParcelable(ARG_SHARE);
             mFile = getArguments().getParcelable(ARG_FILE);
             /* OC account holding the shared file, received as a parameter in construction time */
-            Account mAccount = getArguments().getParcelable(ARG_ACCOUNT);
+            //Account mAccount = getArguments().getParcelable(ARG_ACCOUNT);
         }
     }
 

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -52,10 +52,8 @@
 
 import java.io.BufferedReader;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
-import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.List;
 import java.util.regex.Matcher;

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -311,7 +311,5 @@ private static boolean isNetworkError(RemoteOperationResult.ResultCode code) {
         return code == ResultCode.WRONG_CONNECTION ||
                 code == ResultCode.TIMEOUT ||
                 code == ResultCode.HOST_NOT_AVAILABLE;
-        }
-        }
     }
 }

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -748,7 +748,8 @@ public void migrateStoredFiles(String srcPath, String dstPath) throws Exception
             do {
                 ContentValues cv = new ContentValues();
                 long fileId = cursor.getLong(cursor.getColumnIndex(ProviderTableMeta._ID));
-                String oldFileStoragePath = cursor.getString(cursor.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
+                String oldFileStoragePath =
+                        cursor.getString(cursor.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
 
                 if (oldFileStoragePath.startsWith(srcPath)) {
 

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,6 +39,8 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/datastorage/providers/AbstractCommandLineStoragePoint.java
Patch:
@@ -46,7 +46,7 @@ public boolean canProvideStoragePoints() {
             return false;
         }
         return process != null && process.exitValue() == COMMAND_LINE_OK_RETURN_VALUE;
-    }#
+    }
 
     String getCommandLineResult() {
         StringBuilder s = new StringBuilder();

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,8 +39,6 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -42,6 +42,7 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
+import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.lang.ref.WeakReference;

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -52,8 +52,10 @@
 
 import java.io.BufferedReader;
 import java.io.FileInputStream;
+import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.List;
 import java.util.regex.Matcher;

File: src/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -30,7 +30,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.v4.content.FileProvider;
-import android.webkit.MimeTypeMap;
 
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.network.WebdavUtils;

File: src/com/owncloud/android/datastorage/providers/AbstractCommandLineStoragePoint.java
Patch:
@@ -46,7 +46,7 @@ public boolean canProvideStoragePoints() {
             return false;
         }
         return process != null && process.exitValue() == COMMAND_LINE_OK_RETURN_VALUE;
-    }
+    }#
 
     String getCommandLineResult() {
         StringBuilder s = new StringBuilder();

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -42,7 +42,6 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.lang.ref.WeakReference;

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -60,7 +60,6 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.PreferenceManager;
 import com.owncloud.android.files.services.FileUploader;
-import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -383,7 +383,7 @@ public boolean onPreferenceClick(Preference preference) {
         }
 
         mPrefInstantUploadCategory = (PreferenceCategory) findPreference("instant_uploading_category");
-        
+
         mPrefInstantUploadUseSubfolders = findPreference("instant_upload_path_use_subfolders");
         mPrefInstantUploadPathWiFi =  findPreference("instant_upload_on_wifi");
         mPrefInstantPictureUploadOnlyOnCharging = findPreference("instant_upload_on_charging");

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,6 +39,8 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -70,7 +70,7 @@ public void onCreate(){
 
         SharedPreferences appPrefs =
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        MainApp.storagePath = appPrefs.getString(Preferences.Keys.STORAGE_PATH, Environment.
+        MainApp.storagePath = appPrefs.getString(Preferences.PreferenceKeys.STORAGE_PATH, Environment.
                               getExternalStorageDirectory().getAbsolutePath());
 
         boolean isSamlAuth = AUTH_ON.equals(getString(R.string.auth_method_saml_web_sso));

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -65,7 +65,7 @@ public class MediaService extends Service implements OnCompletionListener, OnPre
     public static final String ACTION_PLAY_FILE = MY_PACKAGE + ".action.PLAY_FILE";
     public static final String ACTION_STOP_ALL = MY_PACKAGE + ".action.STOP_ALL";
 
-    /// Keys to add extras to the action
+    /// PreferenceKeys to add extras to the action
     public static final String EXTRA_FILE = MY_PACKAGE + ".extra.FILE";
     public static final String EXTRA_ACCOUNT = MY_PACKAGE + ".extra.ACCOUNT";
     public static final String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -137,7 +137,7 @@ public void switchToListView() {
     }
 
     public boolean isGridEnabled(){
-        return mCurrentListView.equals(mGridView);
+        return (mCurrentListView != null && mCurrentListView.equals(mGridView));
     }
 
     @Override
@@ -283,7 +283,7 @@ protected void restoreIndexAndTopPosition() {
             Log_OC.v(TAG, "Setting selection to position: " + firstPosition + "; top: "
                     + top + "; index: " + index);
 
-            if (mCurrentListView.equals(mListView)) {
+            if (mCurrentListView!= null && mCurrentListView.equals(mListView)) {
                 if (mHeightCell*index <= mListView.getHeight()) {
                     mListView.setSelectionFromTop(firstPosition, top);
                 } else {

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -386,7 +386,7 @@ public boolean isEmpty() {
      */
     public void swapDirectory(OCFile directory, FileDataStorageManager updatedStorageManager
             , boolean onlyOnDevice) {
-        if (updatedStorageManager != null && updatedStorageManager.equals(mStorageManager)) {
+        if (updatedStorageManager != null && !updatedStorageManager.equals(mStorageManager)) {
             mStorageManager = updatedStorageManager;
             mAccount = AccountUtils.getCurrentOwnCloudAccount(mContext);
         }

File: src/com/owncloud/android/ui/helpers/SparseBooleanArrayParcelable.java
Patch:
@@ -30,6 +30,7 @@
  */
 public class SparseBooleanArrayParcelable implements Parcelable {
 
+    @SuppressWarnings("PMD.SuspiciousConstantFieldName")
     public static Parcelable.Creator<SparseBooleanArrayParcelable> CREATOR =
         new Parcelable.Creator<SparseBooleanArrayParcelable>() {
 

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -37,6 +37,8 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.Preferences;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project
@@ -61,7 +63,7 @@ public class MainApp extends Application {
 
     private static boolean mOnlyOnDevice = false;
 
-    
+    @SuppressFBWarnings("ST")
     public void onCreate(){
         super.onCreate();
         MainApp.mContext = getApplicationContext();

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -91,7 +91,7 @@
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog;
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog.OnSslUntrustedCertListener;
 import com.owncloud.android.utils.DisplayUtils;
-
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import java.security.cert.X509Certificate;
 import java.util.Map;
 
@@ -1576,6 +1576,7 @@ private void updateAccountAuthentication() throws AccountNotFoundException {
      *
      * TODO Decide how to name the OAuth accounts
      */
+    @SuppressFBWarnings("DMI")
     private boolean createAccount(RemoteOperationResult authResult) {
         /// create and save new ownCloud account
         boolean isOAuth = AccountTypeUtils.

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -68,7 +68,7 @@ public class MediaService extends Service implements OnCompletionListener, OnPre
     /// Keys to add extras to the action
     public static final String EXTRA_FILE = MY_PACKAGE + ".extra.FILE";
     public static final String EXTRA_ACCOUNT = MY_PACKAGE + ".extra.ACCOUNT";
-    public static String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";
+    public static final String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";
     public static final String EXTRA_PLAY_ON_LOAD = MY_PACKAGE + ".extra.PLAY_ON_LOAD";
 
 

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -361,7 +361,7 @@ public void onClick(DialogInterface dialog,int id) {
                                             PrintWriter out;
                                             try {
                                                 File f = File.createTempFile("nextcloud", TEXT_FILE_SUFFIX);
-                                                out = new PrintWriter(f);
+                                                out = new PrintWriter(f, "UTF8");
                                                 out.println(getIntent().getStringExtra(Intent.EXTRA_TEXT));
                                                 out.close();
 

File: src/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -27,7 +27,7 @@
 import android.os.HandlerThread;
 import android.os.Process;
 import android.support.v4.app.NotificationCompat;
-
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import com.owncloud.android.R;
 
 public class NotificationUtils {
@@ -52,7 +52,7 @@ public static NotificationCompat.Builder newNotificationBuilder(Context context)
             setColor(context.getResources().getColor(R.color.primary));
     }
 
-
+    @SuppressFBWarnings("DMI")
     public static void cancelWithDelay(
             final NotificationManager notificationManager,
             final int notificationId,

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -52,6 +52,7 @@
 
 import java.lang.ref.WeakReference;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import third_parties.michaelOrtiz.TouchImageViewCustom;
 
 
@@ -340,6 +341,7 @@ public void onPause() {
         super.onPause();
     }
 
+    @SuppressFBWarnings("Dm")
     @Override
     public void onDestroy() {
         if (mBitmap != null) {

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -47,6 +47,7 @@
 import java.io.BufferedWriter;
 import java.io.FileInputStream;
 import java.io.IOException;
+import java.io.InputStreamReader;
 import java.io.StringWriter;
 import java.lang.ref.WeakReference;
 import java.util.LinkedList;
@@ -175,12 +176,12 @@ protected StringWriter doInBackground(java.lang.Object... params) {
             }
             final String location = (String) params[0];
 
-            FileInputStream inputStream = null;
+            InputStreamReader inputStream = null;
             Scanner sc = null;
             StringWriter source = new StringWriter();
             BufferedWriter bufferedWriter = new BufferedWriter(source);
             try {
-                inputStream = new FileInputStream(location);
+                inputStream = new InputStreamReader(new FileInputStream(location), "UTF8");
                 sc = new Scanner(inputStream);
                 while (sc.hasNextLine()) {
                     bufferedWriter.append(sc.nextLine());

File: src/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -33,6 +33,8 @@
 
 import com.owncloud.android.lib.common.utils.Log_OC;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * A helper class for some Uri operations.
@@ -123,6 +125,7 @@ public static boolean isContentDocument(Uri uri) {
      * @return          The path in the file system to the content or null if it could not be found (not a file)
      */
     @TargetApi(Build.VERSION_CODES.KITKAT)
+    @SuppressFBWarnings("Bx")
     public static String getLocalPath(Uri uri, Context context) {
         final boolean isKitKatOrLater = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
 
@@ -246,7 +249,6 @@ private static String getDisplayNameFromContentResolver(Uri uri, Context context
 
             } else if (MimeTypeUtil.isAudio(mimeType)) {
                 displayNameColumn = MediaStore.Audio.AudioColumns.DISPLAY_NAME;
-
             } else {
                 displayNameColumn = MediaStore.Files.FileColumns.DISPLAY_NAME;
             }

File: src/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -45,7 +45,7 @@
  */
 public class GridViewWithHeaderAndFooter extends GridView {
 
-    public static boolean DEBUG = false;
+    public static final boolean DEBUG = false;
 
     /**
      * A class that represents a fixed view in a list, for example a header at the top

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -24,7 +24,6 @@
 import android.accounts.Account;
 import android.content.Context;
 import android.content.Intent;
-import android.util.Log;
 
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;

File: src/com/owncloud/android/services/SyncFolderHandler.java
Patch:
@@ -78,7 +78,7 @@ public SyncFolderHandler(Looper looper, OperationsService service) {
      * @param account       ownCloud account where the remote folder is stored.
      * @param remotePath    The path to a folder that could be in the queue of synchronizations.
      */
-    boolean isSynchronizing(Account account, String remotePath) {
+    private boolean isSynchronizing(Account account, String remotePath) {
         if (account == null || remotePath == null) {
             return false;
         }

File: src/com/owncloud/android/ui/fragment/EditShareFragment.java
Patch:
@@ -104,7 +104,7 @@ public void onCreate(Bundle savedInstanceState) {
             mShare = getArguments().getParcelable(ARG_SHARE);
             mFile = getArguments().getParcelable(ARG_FILE);
             /* OC account holding the shared file, received as a parameter in construction time */
-            Account mAccount = getArguments().getParcelable(ARG_ACCOUNT);
+            //Account mAccount = getArguments().getParcelable(ARG_ACCOUNT);
         }
     }
 

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -52,10 +52,8 @@
 
 import java.io.BufferedReader;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
-import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.List;
 import java.util.regex.Matcher;

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -311,7 +311,5 @@ private static boolean isNetworkError(RemoteOperationResult.ResultCode code) {
         return code == ResultCode.WRONG_CONNECTION ||
                 code == ResultCode.TIMEOUT ||
                 code == ResultCode.HOST_NOT_AVAILABLE;
-        }
-        }
     }
 }

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -748,7 +748,8 @@ public void migrateStoredFiles(String srcPath, String dstPath) throws Exception
             do {
                 ContentValues cv = new ContentValues();
                 long fileId = cursor.getLong(cursor.getColumnIndex(ProviderTableMeta._ID));
-                String oldFileStoragePath = cursor.getString(cursor.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
+                String oldFileStoragePath =
+                        cursor.getString(cursor.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
 
                 if (oldFileStoragePath.startsWith(srcPath)) {
 

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,6 +39,8 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/datastorage/providers/AbstractCommandLineStoragePoint.java
Patch:
@@ -46,7 +46,7 @@ public boolean canProvideStoragePoints() {
             return false;
         }
         return process != null && process.exitValue() == COMMAND_LINE_OK_RETURN_VALUE;
-    }#
+    }
 
     String getCommandLineResult() {
         StringBuilder s = new StringBuilder();

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,8 +39,6 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -42,6 +42,7 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
+import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.lang.ref.WeakReference;

File: src/com/owncloud/android/ui/helpers/FileOperationsHelper.java
Patch:
@@ -52,8 +52,10 @@
 
 import java.io.BufferedReader;
 import java.io.FileInputStream;
+import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.List;
 import java.util.regex.Matcher;

File: src/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -30,7 +30,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.v4.content.FileProvider;
-import android.webkit.MimeTypeMap;
 
 import com.owncloud.android.R;
 import com.owncloud.android.lib.common.network.WebdavUtils;

File: src/com/owncloud/android/datastorage/providers/AbstractCommandLineStoragePoint.java
Patch:
@@ -46,7 +46,7 @@ public boolean canProvideStoragePoints() {
             return false;
         }
         return process != null && process.exitValue() == COMMAND_LINE_OK_RETURN_VALUE;
-    }
+    }#
 
     String getCommandLineResult() {
         StringBuilder s = new StringBuilder();

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -42,7 +42,6 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.lang.ref.WeakReference;

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -60,7 +60,6 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.PreferenceManager;
 import com.owncloud.android.files.services.FileUploader;
-import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -383,7 +383,7 @@ public boolean onPreferenceClick(Preference preference) {
         }
 
         mPrefInstantUploadCategory = (PreferenceCategory) findPreference("instant_uploading_category");
-        
+
         mPrefInstantUploadUseSubfolders = findPreference("instant_upload_path_use_subfolders");
         mPrefInstantUploadPathWiFi =  findPreference("instant_upload_on_wifi");
         mPrefInstantPictureUploadOnlyOnCharging = findPreference("instant_upload_on_charging");

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -39,6 +39,8 @@
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -70,7 +70,7 @@ public void onCreate(){
 
         SharedPreferences appPrefs =
                 PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        MainApp.storagePath = appPrefs.getString(Preferences.Keys.STORAGE_PATH, Environment.
+        MainApp.storagePath = appPrefs.getString(Preferences.PreferenceKeys.STORAGE_PATH, Environment.
                               getExternalStorageDirectory().getAbsolutePath());
 
         boolean isSamlAuth = AUTH_ON.equals(getString(R.string.auth_method_saml_web_sso));

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -65,7 +65,7 @@ public class MediaService extends Service implements OnCompletionListener, OnPre
     public static final String ACTION_PLAY_FILE = MY_PACKAGE + ".action.PLAY_FILE";
     public static final String ACTION_STOP_ALL = MY_PACKAGE + ".action.STOP_ALL";
 
-    /// Keys to add extras to the action
+    /// PreferenceKeys to add extras to the action
     public static final String EXTRA_FILE = MY_PACKAGE + ".extra.FILE";
     public static final String EXTRA_ACCOUNT = MY_PACKAGE + ".extra.ACCOUNT";
     public static final String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -137,7 +137,7 @@ public void switchToListView() {
     }
 
     public boolean isGridEnabled(){
-        return mCurrentListView.equals(mGridView);
+        return (mCurrentListView != null && mCurrentListView.equals(mGridView));
     }
 
     @Override
@@ -283,7 +283,7 @@ protected void restoreIndexAndTopPosition() {
             Log_OC.v(TAG, "Setting selection to position: " + firstPosition + "; top: "
                     + top + "; index: " + index);
 
-            if (mCurrentListView.equals(mListView)) {
+            if (mCurrentListView!= null && mCurrentListView.equals(mListView)) {
                 if (mHeightCell*index <= mListView.getHeight()) {
                     mListView.setSelectionFromTop(firstPosition, top);
                 } else {

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -386,7 +386,7 @@ public boolean isEmpty() {
      */
     public void swapDirectory(OCFile directory, FileDataStorageManager updatedStorageManager
             , boolean onlyOnDevice) {
-        if (updatedStorageManager != null && updatedStorageManager.equals(mStorageManager)) {
+        if (updatedStorageManager != null && !updatedStorageManager.equals(mStorageManager)) {
             mStorageManager = updatedStorageManager;
             mAccount = AccountUtils.getCurrentOwnCloudAccount(mContext);
         }

File: src/com/owncloud/android/ui/helpers/SparseBooleanArrayParcelable.java
Patch:
@@ -30,6 +30,7 @@
  */
 public class SparseBooleanArrayParcelable implements Parcelable {
 
+    @SuppressWarnings("PMD.SuspiciousConstantFieldName")
     public static Parcelable.Creator<SparseBooleanArrayParcelable> CREATOR =
         new Parcelable.Creator<SparseBooleanArrayParcelable>() {
 

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -37,6 +37,8 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.Preferences;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * Main Application of the project
@@ -61,7 +63,7 @@ public class MainApp extends Application {
 
     private static boolean mOnlyOnDevice = false;
 
-    
+    @SuppressFBWarnings("ST")
     public void onCreate(){
         super.onCreate();
         MainApp.mContext = getApplicationContext();

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -91,7 +91,7 @@
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog;
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog.OnSslUntrustedCertListener;
 import com.owncloud.android.utils.DisplayUtils;
-
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import java.security.cert.X509Certificate;
 import java.util.Map;
 
@@ -1576,6 +1576,7 @@ private void updateAccountAuthentication() throws AccountNotFoundException {
      *
      * TODO Decide how to name the OAuth accounts
      */
+    @SuppressFBWarnings("DMI")
     private boolean createAccount(RemoteOperationResult authResult) {
         /// create and save new ownCloud account
         boolean isOAuth = AccountTypeUtils.

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -68,7 +68,7 @@ public class MediaService extends Service implements OnCompletionListener, OnPre
     /// Keys to add extras to the action
     public static final String EXTRA_FILE = MY_PACKAGE + ".extra.FILE";
     public static final String EXTRA_ACCOUNT = MY_PACKAGE + ".extra.ACCOUNT";
-    public static String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";
+    public static final String EXTRA_START_POSITION = MY_PACKAGE + ".extra.START_POSITION";
     public static final String EXTRA_PLAY_ON_LOAD = MY_PACKAGE + ".extra.PLAY_ON_LOAD";
 
 

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -361,7 +361,7 @@ public void onClick(DialogInterface dialog,int id) {
                                             PrintWriter out;
                                             try {
                                                 File f = File.createTempFile("nextcloud", TEXT_FILE_SUFFIX);
-                                                out = new PrintWriter(f);
+                                                out = new PrintWriter(f, "UTF8");
                                                 out.println(getIntent().getStringExtra(Intent.EXTRA_TEXT));
                                                 out.close();
 

File: src/com/owncloud/android/ui/notifications/NotificationUtils.java
Patch:
@@ -27,7 +27,7 @@
 import android.os.HandlerThread;
 import android.os.Process;
 import android.support.v4.app.NotificationCompat;
-
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import com.owncloud.android.R;
 
 public class NotificationUtils {
@@ -52,7 +52,7 @@ public static NotificationCompat.Builder newNotificationBuilder(Context context)
             setColor(context.getResources().getColor(R.color.primary));
     }
 
-
+    @SuppressFBWarnings("DMI")
     public static void cancelWithDelay(
             final NotificationManager notificationManager,
             final int notificationId,

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -52,6 +52,7 @@
 
 import java.lang.ref.WeakReference;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import third_parties.michaelOrtiz.TouchImageViewCustom;
 
 
@@ -340,6 +341,7 @@ public void onPause() {
         super.onPause();
     }
 
+    @SuppressFBWarnings("Dm")
     @Override
     public void onDestroy() {
         if (mBitmap != null) {

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -47,6 +47,7 @@
 import java.io.BufferedWriter;
 import java.io.FileInputStream;
 import java.io.IOException;
+import java.io.InputStreamReader;
 import java.io.StringWriter;
 import java.lang.ref.WeakReference;
 import java.util.LinkedList;
@@ -175,12 +176,12 @@ protected StringWriter doInBackground(java.lang.Object... params) {
             }
             final String location = (String) params[0];
 
-            FileInputStream inputStream = null;
+            InputStreamReader inputStream = null;
             Scanner sc = null;
             StringWriter source = new StringWriter();
             BufferedWriter bufferedWriter = new BufferedWriter(source);
             try {
-                inputStream = new FileInputStream(location);
+                inputStream = new InputStreamReader(new FileInputStream(location), "UTF8");
                 sc = new Scanner(inputStream);
                 while (sc.hasNextLine()) {
                     bufferedWriter.append(sc.nextLine());

File: src/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -33,6 +33,8 @@
 
 import com.owncloud.android.lib.common.utils.Log_OC;
 
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+
 
 /**
  * A helper class for some Uri operations.
@@ -123,6 +125,7 @@ public static boolean isContentDocument(Uri uri) {
      * @return          The path in the file system to the content or null if it could not be found (not a file)
      */
     @TargetApi(Build.VERSION_CODES.KITKAT)
+    @SuppressFBWarnings("Bx")
     public static String getLocalPath(Uri uri, Context context) {
         final boolean isKitKatOrLater = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
 
@@ -246,7 +249,6 @@ private static String getDisplayNameFromContentResolver(Uri uri, Context context
 
             } else if (MimeTypeUtil.isAudio(mimeType)) {
                 displayNameColumn = MediaStore.Audio.AudioColumns.DISPLAY_NAME;
-
             } else {
                 displayNameColumn = MediaStore.Files.FileColumns.DISPLAY_NAME;
             }

File: src/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -45,7 +45,7 @@
  */
 public class GridViewWithHeaderAndFooter extends GridView {
 
-    public static boolean DEBUG = false;
+    public static final boolean DEBUG = false;
 
     /**
      * A class that represents a fixed view in a list, for example a header at the top

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -67,6 +67,7 @@ public class MainApp extends Application {
     private static boolean mOnlyOnDevice = false;
 
     private static SyncedFolderObserverService mObserverService;
+    @SuppressWarnings("unused")
     private boolean mBound;
 
     

File: src/com/owncloud/android/datamodel/MediaProvider.java
Patch:
@@ -40,7 +40,6 @@ public class MediaProvider {
     private static final Uri MEDIA_URI = android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
     private static final String[] FILE_PROJECTION = new String[]{MediaStore.MediaColumns.DATA};
     private static final String FILE_SELECTION = MediaStore.Images.Media.BUCKET_ID + "=";
-    private static final Uri uri1 = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
     private static final String[] FOLDER_PROJECTION = { "Distinct " + MediaStore.Images.Media.BUCKET_ID,
             MediaStore.Images.Media.BUCKET_DISPLAY_NAME };
     private static final String FOLDER_SORT_ORDER = MediaStore.Images.Media.BUCKET_DISPLAY_NAME + " ASC";

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -132,7 +132,7 @@ private void handleNewPictureAction(Context context, Intent intent) {
         new FileUploader.UploadRequester();
 
         int behaviour = getUploadBehaviour(context);
-        Boolean subfolderByDate = com.owncloud.android.db.PreferenceManager.instantPictureUploadPathUseSubfolders(context);
+        Boolean subfolderByDate = PreferenceManager.instantPictureUploadPathUseSubfolders(context);
             SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(context);
         String uploadPathdef = context.getString(R.string.instant_upload_path);
         String uploadPath = pref.getString("instant_upload_path", uploadPathdef);

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -356,7 +356,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     @Override
     public void onSaveSyncedFolderPreference(SyncedFolderParcelable syncedFolder) {
         SyncedFolderDisplayItem item = syncFolderItems.get(syncedFolder.getSection());
-        boolean dirty = !(item.isEnabled() == syncedFolder.getEnabled());
+        boolean dirty = item.isEnabled() != syncedFolder.getEnabled();
         item = updateSyncedFolderItem(item, syncedFolder.getLocalPath(), syncedFolder.getRemotePath(), syncedFolder
                 .getWifiOnly(), syncedFolder.getChargingOnly(), syncedFolder.getSubfolderByDate(), syncedFolder
                 .getUploadAction(), syncedFolder.getEnabled());

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -28,6 +28,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         Log_OC.d(TAG, "start");
         for (SyncedFolder syncedFolder : mProvider.getSyncedFolders()) {
             if (syncedFolder.isEnabled()) {
+                Log_OC.d(TAG, "start observer: " + syncedFolder.getLocalPath());
                 SyncedFolderObserver observer = new SyncedFolderObserver(syncedFolder);
                 observer.startWatching();
                 syncedFolderMap.put(syncedFolder.getLocalPath(), observer);

File: src/com/owncloud/android/ui/activity/ManageAccountsActivity.java
Patch:
@@ -50,13 +50,13 @@
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.FileDataStorageManager;
-import com.owncloud.android.files.FileOperationsHelper;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.services.OperationsService;
 import com.owncloud.android.ui.adapter.AccountListAdapter;
 import com.owncloud.android.ui.adapter.AccountListItem;
+import com.owncloud.android.ui.helpers.FileOperationsHelper;
 
 import java.util.ArrayList;
 import java.util.HashSet;

File: src/com/owncloud/android/ui/activity/ComponentsGetter.java
Patch:
@@ -21,7 +21,7 @@
 package com.owncloud.android.ui.activity;
 
 import com.owncloud.android.datamodel.FileDataStorageManager;
-import com.owncloud.android.files.FileOperationsHelper;
+import com.owncloud.android.ui.helpers.FileOperationsHelper;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.files.services.FileUploader.FileUploaderBinder;
 import com.owncloud.android.services.OperationsService.OperationsServiceBinder;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -41,7 +41,7 @@
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.files.FileOperationsHelper;
+import com.owncloud.android.ui.helpers.FileOperationsHelper;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.files.services.FileUploader;

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -21,10 +21,10 @@
  */
 package com.owncloud.android.ui.activity;
 
+import android.accounts.Account;
 import android.accounts.AuthenticatorException;
 import android.accounts.OperationCanceledException;
 import android.content.Intent;
-import android.content.ServiceConnection;
 import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager.NameNotFoundException;
@@ -55,11 +55,10 @@
 import com.owncloud.android.BuildConfig;
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.datastorage.DataStorageProvider;
 import com.owncloud.android.datastorage.StoragePoint;
-import com.owncloud.android.files.services.FileDownloader;
-import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.utils.Log_OC;

File: src/com/owncloud/android/datastorage/DataStorageProvider.java
Patch:
@@ -40,9 +40,9 @@
  */
 public class DataStorageProvider {
 
-    private static Vector<IStoragePointProvider> mStorageProviders = new Vector<>();
-    private static UniqueStorageList mCachedStoragePoints = new UniqueStorageList();
-    private static DataStorageProvider sInstance = new DataStorageProvider() {{
+    private static final Vector<IStoragePointProvider> mStorageProviders = new Vector<>();
+    private static final UniqueStorageList mCachedStoragePoints = new UniqueStorageList();
+    private static final DataStorageProvider sInstance = new DataStorageProvider() {{
         // There is no system wide way to get usb storage so we need to provide multiple
         // handcrafted ways to add those.
         addStoragePointProvider(new SystemDefaultStoragePointProvider());

File: src/com/owncloud/android/ui/activity/StorageMigration.java
Patch:
@@ -394,6 +394,7 @@ void updateIndex(Context context) throws MigrationException {
             try {
                 manager.migrateStoredFiles(mStorageSource, mStorageTarget);
             } catch (Exception e) {
+                Log_OC.e(TAG,e.getMessage(),e);
                 throw new MigrationException(R.string.file_migration_failed_while_updating_index);
             }
         }

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -68,7 +68,7 @@ public class UploadFilesActivity extends FileActivity implements
     private boolean mSelectAll = false;
     private LocalFileListFragment mFileListFragment;
     private Button mCancelBtn;
-    private Button mUploadBtn;
+    protected Button mUploadBtn;
     private Spinner mBehaviourSpinner;
     private Account mAccountOnCreation;
     private DialogFragment mCurrentDialog;

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -60,6 +60,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.os.Environment;
 import android.preference.PreferenceManager;
 import android.net.Uri;
 import android.os.StatFs;

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -339,7 +339,7 @@ public boolean onPreferenceClick(Preference preference) {
             }
         }
 
-        mPrefStoragePath =  findPreference("storage_path");
+        mPrefStoragePath =  (PreferenceWithLongSummary)findPreference("storage_path");
         if (mPrefStoragePath != null) {
 
             mPrefStoragePath.setOnPreferenceClickListener(new OnPreferenceClickListener() {
@@ -361,7 +361,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 });
         }
 
-        mPrefInstantUploadPath =  findPreference("instant_upload_path");
+        mPrefInstantUploadPath = (PreferenceWithLongSummary)findPreference("instant_upload_path");
         if (mPrefInstantUploadPath != null){
 
             mPrefInstantUploadPath.setOnPreferenceClickListener(new OnPreferenceClickListener() {

File: src/com/owncloud/android/services/SyncedFolderJobService.java
Patch:
@@ -36,7 +36,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.UploadFileOperation;
 import com.owncloud.android.utils.FileStorageUtils;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
 
@@ -63,7 +63,7 @@ public boolean onStartJob(JobParameters params) {
         Integer uploadBehaviour = bundle.getInt("uploadBehaviour");
 
         File file = new File(filePath);
-        String mimeType = MimetypeIconUtil.getBestMimeTypeByFilename(file.getAbsolutePath());
+        String mimeType = MimeTypeUtil.getBestMimeTypeByFilename(file.getAbsolutePath());
 
         FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
         requester.uploadNewFile(

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -416,7 +416,7 @@ protected Bitmap doInBackground(Object... params) {
                         mImageKey = (String) params[1];
                     }
 
-                    if (BitmapUtils.isImage(mFile)) {
+                    if (MimeTypeUtil.isImage(mFile)) {
                         thumbnail = doFileInBackground(mFile);
                     }
                 }
@@ -448,10 +448,10 @@ protected void onPostExecute(Bitmap bitmap) {
                         if (mFile.isDirectory()) {
                             imageView.setImageResource(R.drawable.ic_menu_archive);
                         } else {
-                            if (BitmapUtils.isVideo(mFile)) {
+                            if (MimeTypeUtil.isVideo(mFile)) {
                                 imageView.setImageBitmap(ThumbnailsCacheManager.mDefaultVideo);
                             } else {
-                                imageView.setImageResource(MimetypeIconUtil.getFileTypeIconId(null, mFile.getName()));
+                                imageView.setImageResource(MimeTypeUtil.getFileTypeIconId(null, mFile.getName()));
                             }
                         }
                     }

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -277,7 +277,7 @@ public boolean onNavigationItemSelected(MenuItem menuItem) {
                                 startActivity(participateIntent);
                                 break;
                             case R.id.drawer_menu_account_add:
-                                createAccount();
+                                createAccount(false);
                                 break;
                             case R.id.drawer_menu_account_manage:
                                 Intent manageAccountsIntent = new Intent(getApplicationContext(),

File: src/com/owncloud/android/db/OCUpload.java
Patch:
@@ -34,7 +34,7 @@
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.UploadFileOperation;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
 
@@ -235,7 +235,7 @@ public void setFileSize(long fileSize) {
      * @return the mimeType
      */
     public String getMimeType() {
-        return MimetypeIconUtil.getBestMimeTypeByFilename(mLocalPath);
+        return MimeTypeUtil.getBestMimeTypeByFilename(mLocalPath);
     }
 
     /**

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.syncadapter.FileSyncAdapter;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -404,7 +405,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 updatedFile.setEtag(localFile.getEtag());
                 if (updatedFile.isFolder()) {
                     updatedFile.setFileLength(remoteFile.getFileLength());
-                } else if (mRemoteFolderChanged && remoteFile.isImage() &&
+                } else if (mRemoteFolderChanged && MimeTypeUtil.isImage(remoteFile) &&
                         remoteFile.getModificationTimestamp() !=
                                 localFile.getModificationTimestamp()) {
                     updatedFile.setNeedsUpdateThumbnail(true);

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -47,7 +47,7 @@
 import com.owncloud.android.utils.ConnectivityUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.MimeType;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 import com.owncloud.android.utils.UriUtils;
 
 import org.apache.commons.httpclient.HttpStatus;
@@ -80,7 +80,7 @@ public static OCFile obtainNewOCFileToUpload(String remotePath, String localPath
 
         // MIME type
         if (mimeType == null || mimeType.length() <= 0) {
-            mimeType = MimetypeIconUtil.getBestMimeTypeByFilename(localPath);
+            mimeType = MimeTypeUtil.getBestMimeTypeByFilename(localPath);
         }
 
         OCFile newFile = new OCFile(remotePath);

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -52,7 +52,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.CheckCurrentCredentialsOperation;
 import com.owncloud.android.ui.fragment.UploadListFragment;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
 
@@ -161,7 +161,7 @@ public boolean onUploadItemClick(OCUpload file) {
     private void openFileWithDefault(String localPath) {
         Intent myIntent = new Intent(android.content.Intent.ACTION_VIEW);
         File file = new File(localPath);
-        String mimetype = MimetypeIconUtil.getBestMimeTypeByFilename(localPath);
+        String mimetype = MimeTypeUtil.getBestMimeTypeByFilename(localPath);
         if ("application/octet-stream".equals(mimetype)) {
             mimetype = "*/*";
         }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -51,7 +51,7 @@
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.lang.ref.WeakReference;
 
@@ -426,7 +426,7 @@ private void setFiletype(OCFile file) {
             Bitmap thumbnail;
             iv.setTag(file.getFileId());
 
-            if (file.isImage()) {
+            if (MimeTypeUtil.isImage(file)) {
                 String tagId = String.valueOf(file.getRemoteId());
                 thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(tagId);
 
@@ -455,7 +455,7 @@ private void setFiletype(OCFile file) {
             } else {
 				// Name of the file, to deduce the icon to use in case the MIME type is not precise enough
 				String filename = file.getFileName();
-                iv.setImageResource(MimetypeIconUtil.getFileTypeIconId(mimetype, filename));
+                iv.setImageResource(MimeTypeUtil.getFileTypeIconId(mimetype, filename));
 			}
         }
     }

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -57,7 +57,7 @@
 import com.owncloud.android.ui.dialog.ExpirationDatePickerDialogFragment;
 import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -193,9 +193,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         // Setup layout
         // Image
         ImageView icon = (ImageView) view.findViewById(R.id.shareFileIcon);
-        icon.setImageResource(MimetypeIconUtil.getFileTypeIconId(mFile.getMimetype(),
+        icon.setImageResource(MimeTypeUtil.getFileTypeIconId(mFile.getMimetype(),
                 mFile.getFileName()));
-        if (mFile.isImage()) {
+        if (MimeTypeUtil.isImage(mFile)) {
             String remoteId = String.valueOf(mFile.getRemoteId());
             Bitmap thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(remoteId);
             if (thumbnail != null) {

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -57,6 +57,7 @@
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 
 /**
@@ -514,7 +515,7 @@ protected void onAccountSet(boolean stateWasRecovered) {
             if (file == null) {
                 throw new IllegalStateException("Instanced with a NULL OCFile");
             }
-            if (!file.isImage()) {
+            if (!MimeTypeUtil.isImage(file)) {
                 throw new IllegalArgumentException("Non-image file passed as argument");
             }
             

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -42,6 +42,7 @@
 import com.owncloud.android.ui.dialog.LoadingDialog;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.BufferedWriter;
 import java.io.FileInputStream;
@@ -430,9 +431,9 @@ public static boolean canBePreviewed(OCFile file) {
         unsupportedTypes.add("text/vnd.rn-realtext");
         unsupportedTypes.add("text/vnd.wap.wml");
         unsupportedTypes.add("text/vnd.wap.wmlscript");
-        return (file != null && file.isDown() && file.isText() &&
+        return (file != null && file.isDown() && MimeTypeUtil.isText(file) &&
                 !unsupportedTypes.contains(file.getMimetype()) &&
-                !unsupportedTypes.contains(file.getMimeTypeFromName())
+                !unsupportedTypes.contains(MimeTypeUtil.getMimeTypeFromPath(file.getRemotePath()))
         );
     }
 

File: src/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -238,13 +238,13 @@ private static String getDisplayNameFromContentResolver(Uri uri, Context context
         String mimeType = context.getContentResolver().getType(uri);
         if (mimeType != null) {
             String displayNameColumn;
-            if (mimeType.toLowerCase().startsWith("image/")) {
+            if (MimeTypeUtil.isImage(mimeType)) {
                 displayNameColumn = MediaStore.Images.ImageColumns.DISPLAY_NAME;
 
-            } else if (mimeType.toLowerCase().startsWith("video/")) {
+            } else if (MimeTypeUtil.isVideo(mimeType)) {
                 displayNameColumn = MediaStore.Video.VideoColumns.DISPLAY_NAME;
 
-            } else if (mimeType.toLowerCase().startsWith("audio/")) {
+            } else if (MimeTypeUtil.isAudio(mimeType)) {
                 displayNameColumn = MediaStore.Audio.AudioColumns.DISPLAY_NAME;
 
             } else {

File: src/org/nextcloud/providers/cursors/FileCursor.java
Patch:
@@ -26,7 +26,7 @@
 import android.provider.DocumentsContract.Document;
 
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 @TargetApi(Build.VERSION_CODES.KITKAT)
 public class FileCursor extends MatrixCursor {
@@ -44,9 +44,9 @@ public FileCursor(String[] projection) {
     public void addFile(OCFile file) {
         if (file == null) return;
 
-        final int iconRes = MimetypeIconUtil.getFileTypeIconId(file.getMimetype(), file.getFileName());
+        final int iconRes = MimeTypeUtil.getFileTypeIconId(file.getMimetype(), file.getFileName());
         final String mimeType = file.isFolder() ? Document.MIME_TYPE_DIR : file.getMimetype();
-        final String imagePath = file.isImage() && file.isDown() ? file.getStoragePath() : null;
+        final String imagePath = MimeTypeUtil.isImage(file) && file.isDown() ? file.getStoragePath() : null;
         int flags = imagePath != null ? Document.FLAG_SUPPORTS_THUMBNAIL : 0;
 
         newRow().add(Document.COLUMN_DOCUMENT_ID, Long.toString(file.getFileId()))

File: src/com/owncloud/android/db/OCUpload.java
Patch:
@@ -34,7 +34,7 @@
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.UploadFileOperation;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
 
@@ -235,7 +235,7 @@ public void setFileSize(long fileSize) {
      * @return the mimeType
      */
     public String getMimeType() {
-        return MimetypeIconUtil.getBestMimeTypeByFilename(mLocalPath);
+        return MimeTypeUtil.getBestMimeTypeByFilename(mLocalPath);
     }
 
     /**

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.lib.resources.shares.OCShare;
 import com.owncloud.android.syncadapter.FileSyncAdapter;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -404,7 +405,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 updatedFile.setEtag(localFile.getEtag());
                 if (updatedFile.isFolder()) {
                     updatedFile.setFileLength(remoteFile.getFileLength());
-                } else if (mRemoteFolderChanged && remoteFile.isImage() &&
+                } else if (mRemoteFolderChanged && MimeTypeUtil.isImage(remoteFile) &&
                         remoteFile.getModificationTimestamp() !=
                                 localFile.getModificationTimestamp()) {
                     updatedFile.setNeedsUpdateThumbnail(true);

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -47,7 +47,7 @@
 import com.owncloud.android.utils.ConnectivityUtils;
 import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.MimeType;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 import com.owncloud.android.utils.UriUtils;
 
 import org.apache.commons.httpclient.HttpStatus;
@@ -80,7 +80,7 @@ public static OCFile obtainNewOCFileToUpload(String remotePath, String localPath
 
         // MIME type
         if (mimeType == null || mimeType.length() <= 0) {
-            mimeType = MimetypeIconUtil.getBestMimeTypeByFilename(localPath);
+            mimeType = MimeTypeUtil.getBestMimeTypeByFilename(localPath);
         }
 
         OCFile newFile = new OCFile(remotePath);

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -52,7 +52,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.operations.CheckCurrentCredentialsOperation;
 import com.owncloud.android.ui.fragment.UploadListFragment;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.File;
 
@@ -161,7 +161,7 @@ public boolean onUploadItemClick(OCUpload file) {
     private void openFileWithDefault(String localPath) {
         Intent myIntent = new Intent(android.content.Intent.ACTION_VIEW);
         File file = new File(localPath);
-        String mimetype = MimetypeIconUtil.getBestMimeTypeByFilename(localPath);
+        String mimetype = MimeTypeUtil.getBestMimeTypeByFilename(localPath);
         if ("application/octet-stream".equals(mimetype)) {
             mimetype = "*/*";
         }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -51,7 +51,7 @@
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.lang.ref.WeakReference;
 
@@ -426,7 +426,7 @@ private void setFiletype(OCFile file) {
             Bitmap thumbnail;
             iv.setTag(file.getFileId());
 
-            if (file.isImage()) {
+            if (MimeTypeUtil.isImage(file)) {
                 String tagId = String.valueOf(file.getRemoteId());
                 thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(tagId);
 
@@ -455,7 +455,7 @@ private void setFiletype(OCFile file) {
             } else {
 				// Name of the file, to deduce the icon to use in case the MIME type is not precise enough
 				String filename = file.getFileName();
-                iv.setImageResource(MimetypeIconUtil.getFileTypeIconId(mimetype, filename));
+                iv.setImageResource(MimeTypeUtil.getFileTypeIconId(mimetype, filename));
 			}
         }
     }

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -57,7 +57,7 @@
 import com.owncloud.android.ui.dialog.ExpirationDatePickerDialogFragment;
 import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -193,9 +193,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         // Setup layout
         // Image
         ImageView icon = (ImageView) view.findViewById(R.id.shareFileIcon);
-        icon.setImageResource(MimetypeIconUtil.getFileTypeIconId(mFile.getMimetype(),
+        icon.setImageResource(MimeTypeUtil.getFileTypeIconId(mFile.getMimetype(),
                 mFile.getFileName()));
-        if (mFile.isImage()) {
+        if (MimeTypeUtil.isImage(mFile)) {
             String remoteId = String.valueOf(mFile.getRemoteId());
             Bitmap thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(remoteId);
             if (thumbnail != null) {

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -57,6 +57,7 @@
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 
 /**
@@ -514,7 +515,7 @@ protected void onAccountSet(boolean stateWasRecovered) {
             if (file == null) {
                 throw new IllegalStateException("Instanced with a NULL OCFile");
             }
-            if (!file.isImage()) {
+            if (!MimeTypeUtil.isImage(file)) {
                 throw new IllegalArgumentException("Non-image file passed as argument");
             }
             

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -42,6 +42,7 @@
 import com.owncloud.android.ui.dialog.LoadingDialog;
 import com.owncloud.android.ui.dialog.RemoveFilesDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 import java.io.BufferedWriter;
 import java.io.FileInputStream;
@@ -430,9 +431,9 @@ public static boolean canBePreviewed(OCFile file) {
         unsupportedTypes.add("text/vnd.rn-realtext");
         unsupportedTypes.add("text/vnd.wap.wml");
         unsupportedTypes.add("text/vnd.wap.wmlscript");
-        return (file != null && file.isDown() && file.isText() &&
+        return (file != null && file.isDown() && MimeTypeUtil.isText(file) &&
                 !unsupportedTypes.contains(file.getMimetype()) &&
-                !unsupportedTypes.contains(file.getMimeTypeFromName())
+                !unsupportedTypes.contains(MimeTypeUtil.getMimeTypeFromPath(file.getRemotePath()))
         );
     }
 

File: src/com/owncloud/android/utils/UriUtils.java
Patch:
@@ -238,13 +238,13 @@ private static String getDisplayNameFromContentResolver(Uri uri, Context context
         String mimeType = context.getContentResolver().getType(uri);
         if (mimeType != null) {
             String displayNameColumn;
-            if (mimeType.toLowerCase().startsWith("image/")) {
+            if (MimeTypeUtil.isImage(mimeType)) {
                 displayNameColumn = MediaStore.Images.ImageColumns.DISPLAY_NAME;
 
-            } else if (mimeType.toLowerCase().startsWith("video/")) {
+            } else if (MimeTypeUtil.isVideo(mimeType)) {
                 displayNameColumn = MediaStore.Video.VideoColumns.DISPLAY_NAME;
 
-            } else if (mimeType.toLowerCase().startsWith("audio/")) {
+            } else if (MimeTypeUtil.isAudio(mimeType)) {
                 displayNameColumn = MediaStore.Audio.AudioColumns.DISPLAY_NAME;
 
             } else {

File: src/org/nextcloud/providers/cursors/FileCursor.java
Patch:
@@ -26,7 +26,7 @@
 import android.provider.DocumentsContract.Document;
 
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.utils.MimetypeIconUtil;
+import com.owncloud.android.utils.MimeTypeUtil;
 
 @TargetApi(Build.VERSION_CODES.KITKAT)
 public class FileCursor extends MatrixCursor {
@@ -44,9 +44,9 @@ public FileCursor(String[] projection) {
     public void addFile(OCFile file) {
         if (file == null) return;
 
-        final int iconRes = MimetypeIconUtil.getFileTypeIconId(file.getMimetype(), file.getFileName());
+        final int iconRes = MimeTypeUtil.getFileTypeIconId(file.getMimetype(), file.getFileName());
         final String mimeType = file.isFolder() ? Document.MIME_TYPE_DIR : file.getMimetype();
-        final String imagePath = file.isImage() && file.isDown() ? file.getStoragePath() : null;
+        final String imagePath = MimeTypeUtil.isImage(file) && file.isDown() ? file.getStoragePath() : null;
         int flags = imagePath != null ? Document.FLAG_SUPPORTS_THUMBNAIL : 0;
 
         newRow().add(Document.COLUMN_DOCUMENT_ID, Long.toString(file.getFileId()))

File: src/com/owncloud/android/datamodel/MediaFolder.java
Patch:
@@ -12,19 +12,19 @@
  * <p>
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  * GNU AFFERO GENERAL PUBLIC LICENSE for more details.
  * <p>
  * You should have received a copy of the GNU Affero General Public
- * License along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * License along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 package com.owncloud.android.datamodel;
 
 import java.util.ArrayList;
 import java.util.List;
 
 /**
- * Created by scherzia on 22.09.2016.
+ * Business object representing a media folder with all information that are gathered via media queries.
  */
 public class MediaFolder {
     public String folderName;

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -334,8 +334,8 @@ public void onSyncFolderSettingsClick(int section, SyncedFolderDisplayItem synce
         FragmentTransaction ft = fm.beginTransaction();
         ft.addToBackStack(null);
 
-        mSyncedFolderPreferencesDialogFragment = SyncedFolderPreferencesDialogFragment.newInstance(syncedFolderDisplayItem,
-                section);
+        mSyncedFolderPreferencesDialogFragment = SyncedFolderPreferencesDialogFragment.newInstance(
+                syncedFolderDisplayItem, section);
         mSyncedFolderPreferencesDialogFragment.show(ft, SYNCED_FOLDER_PREFERENCES_DIALOG_TAG);
     }
 

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -252,7 +252,7 @@ private SyncedFolderItem createSyncedFolderFromMediaFolder(@NonNull MediaFolder
                 false,
                 false,
                 AccountUtils.getCurrentOwnCloudAccount(this).name,
-                1,
+                0,
                 false,
                 mediaFolder.filePaths,
                 mediaFolder.folderName,

File: src/com/owncloud/android/services/SyncedFolderJobService.java
Patch:
@@ -55,7 +55,7 @@ public class SyncedFolderJobService extends JobService {
 
     @Override
     public int onStartCommand(Intent intent, int flags, int startId) {
-        return START_NOT_STICKY;
+        return START_REDELIVER_INTENT;
     }
 
     @Override

File: src/com/owncloud/android/services/observer/SyncedFolderObserver.java
Patch:
@@ -54,8 +54,7 @@ public void onEvent(int event, String path) {
                 MY_BACKGROUND_JOB,
                 new ComponentName(context, SyncedFolderJobService.class))
                 .setRequiresCharging(syncedFolder.getChargingOnly())
-                // TODO change to UNMETERED after developing
-                .setRequiredNetworkType(JobInfo.NETWORK_TYPE_ANY)
+                .setRequiredNetworkType(syncedFolder.getWifiOnly() ? JobInfo.NETWORK_TYPE_UNMETERED : JobInfo.NETWORK_TYPE_ANY)
                 .setExtras(bundle)
                 .build();
 

File: src/com/owncloud/android/services/observer/SyncedFolderObserverService.java
Patch:
@@ -7,6 +7,7 @@
 import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.SyncedFolder;
 import com.owncloud.android.datamodel.SyncedFolderProvider;
+import com.owncloud.android.lib.common.utils.Log_OC;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -23,6 +24,7 @@ public void onCreate() {
 
     @Override
     public int onStartCommand(Intent intent, int flags, int startId) {
+        Log_OC.d(TAG, "start");
         for (SyncedFolder syncedFolder : mProvider.getSyncedFolders()) {
             SyncedFolderObserver observer = new SyncedFolderObserver(syncedFolder);
 

File: src/com/owncloud/android/ui/activity/FolderSyncActivity.java
Patch:
@@ -319,7 +319,7 @@ public void showFiles(boolean onDeviceOnly) {
     @Override
     public void onSyncStatusToggleClick(int section, SyncedFolderItem syncedFolderItem) {
         if (syncedFolderItem.getId() > UNPERSISTED_ID) {
-            mSyncedFolderProvider.updateFolderSyncEnabled(syncedFolderItem.getId(), !syncedFolderItem.isEnabled());
+            mSyncedFolderProvider.updateFolderSyncEnabled(syncedFolderItem.getId(), syncedFolderItem.isEnabled());
         } else {
             mSyncedFolderProvider.storeFolderSync(syncedFolderItem);
         }

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -113,16 +113,16 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                 if (upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0) {
                     return compareUploadId(upload1, upload2);
                 } else {
-                    return compareUpdateTime(upload1, upload2);
+                     return compareUpdateTime(upload1, upload2);
                 }
             }
 
             private int compareUploadId(OCUpload upload1, OCUpload upload2) {
-                return Long.valueOf(upload1.getUploadId()).compareTo(upload2.getUploadId());
+                return Long.compare(upload1.getUploadId(), upload2.getUploadId());
             }
 
             private int compareUpdateTime(OCUpload upload1, OCUpload upload2) {
-                return Long.valueOf(upload2.getUploadEndTimestamp()).compareTo(upload1.getUploadEndTimestamp());
+                return Long.compare(upload2.getUploadEndTimestamp(), upload1.getUploadEndTimestamp());
             }
         };
 

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -327,7 +327,7 @@ public static Vector<OCFile> sortOCFilesBySize(Vector<OCFile> files){
             public int compare(OCFile o1, OCFile o2) {
                 if (o1.isFolder() && o2.isFolder()) {
                     Long obj1 = o1.getFileLength();
-                    return multiplier * obj1.compareTo(o2.getFileLength());
+                    return multiplier * obj1., o2.getFileLength());
                 }
                 else if (o1.isFolder()) {
                     return -1;
@@ -337,7 +337,7 @@ else if (o1.isFolder()) {
                     return 0;
                 } else {
                     Long obj1 = o1.getFileLength();
-                    return multiplier * obj1.compareTo(o2.getFileLength());
+                    return multiplier * Long.compare(obj1, o2.getFileLength());
                 }
             }
         });

File: src/com/owncloud/android/ui/adapter/FolderSyncAdapter.java
Patch:
@@ -89,9 +89,9 @@ public void onBindHeaderViewHolder(final MainViewHolder holder, final int sectio
         holder.syncStatusButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                mListener.onSyncStatusToggleClick(section, mSyncFolderItems.get(section));
                 mSyncFolderItems.get(section).setEnabled(!mSyncFolderItems.get(section).isEnabled());
                 setSyncButtonActiveIcon(holder.syncStatusButton, mSyncFolderItems.get(section).isEnabled());
+                mListener.onSyncStatusToggleClick(section, mSyncFolderItems.get(section));
             }
         });
         setSyncButtonActiveIcon(holder.syncStatusButton, mSyncFolderItems.get(section).isEnabled());

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -110,7 +110,7 @@ private String getUrlFromFile(String storagePath, Pattern pattern) {
                 }
             }
 
-            if (br != null) {
+            if (fr != null) {
                 try {
                     fr.close();
                 } catch (IOException e) {

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -482,7 +482,7 @@ public void dismissLoadingDialog() {
         if (frag != null) {
             Log_OC.d(TAG, "dismiss loading dialog");
             LoadingDialog loading = (LoadingDialog) frag;
-            loading.dismiss();
+            loading.dismissAllowingStateLoss();
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -246,7 +246,7 @@ public void dismissLoadingDialog() {
             final Fragment frag = getActivity().getSupportFragmentManager().findFragmentByTag(DIALOG_WAIT_TAG);
             if (frag != null) {
                 LoadingDialog loading = (LoadingDialog) frag;
-                loading.dismiss();
+                loading.dismissAllowingStateLoss();
             }
         }
     }

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -246,7 +246,7 @@ public void dismissLoadingDialog() {
             final Fragment frag = getActivity().getSupportFragmentManager().findFragmentByTag(DIALOG_WAIT_TAG);
             if (frag != null) {
                 LoadingDialog loading = (LoadingDialog) frag;
-                loading.dismiss();
+                loading.dismissAllowingStateLoss();
             }
         }
     }

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -482,7 +482,7 @@ public void dismissLoadingDialog() {
         if (frag != null) {
             Log_OC.d(TAG, "dismiss loading dialog");
             LoadingDialog loading = (LoadingDialog) frag;
-            loading.dismiss();
+            loading.dismissAllowingStateLoss();
         }
     }
 

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -544,8 +544,8 @@ private boolean somethingToUpload() {
         return (mStreamsToUpload != null && mStreamsToUpload.get(0) != null || uploadTextSnippet());
     }
 
-    private boolean uploadTextSnippet(){
-        return getIntent().getStringExtra(Intent.EXTRA_TEXT) != null;
+    private boolean uploadTextSnippet() {
+        return getIntent().getStringExtra(Intent.EXTRA_TEXT) != null && getIntent().getExtras().keySet().size() == 1;
     }
 
     @SuppressLint("NewApi")

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -544,8 +544,8 @@ private boolean somethingToUpload() {
         return (mStreamsToUpload != null && mStreamsToUpload.get(0) != null || uploadTextSnippet());
     }
 
-    private boolean uploadTextSnippet(){
-        return getIntent().getStringExtra(Intent.EXTRA_TEXT) != null;
+    private boolean uploadTextSnippet() {
+        return getIntent().getStringExtra(Intent.EXTRA_TEXT) != null && getIntent().getExtras().keySet().size() == 1;
     }
 
     @SuppressLint("NewApi")

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -524,10 +524,12 @@ private void showMenu() {
                 mAccountChooserToggle.setImageResource(R.drawable.ic_up);
                 mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_accounts, true);
                 mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_standard, false);
+                mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_bottom, false);
             } else {
                 mAccountChooserToggle.setImageResource(R.drawable.ic_down);
                 mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_accounts, false);
                 mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_standard, true);
+                mNavigationView.getMenu().setGroupVisible(R.id.drawer_menu_bottom, true);
             }
         }
     }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -574,7 +574,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(this);
                 builder.setTitle(R.string.actionbar_sort_title)
-                        .setSingleChoiceItems(R.array.actionbar_sortby, sortOrder,
+                        .setSingleChoiceItems(R.array.menu_items_sort_by_options, sortOrder,
                                 new DialogInterface.OnClickListener() {
                                     public void onClick(DialogInterface dialog, int which) {
                                         switch (which) {

File: src/com/owncloud/android/db/PreferenceManager.java
Patch:
@@ -143,7 +143,7 @@ public static void setSortAscending(Context context, boolean ascending) {
      */
     public static int getUploaderBehaviour(Context context) {
         return getDefaultSharedPreferences(context)
-                .getInt(AUTO_PREF__UPLOADER_BEHAVIOR, 0);
+                .getInt(AUTO_PREF__UPLOADER_BEHAVIOR, 1);
     }
 
     /**

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -841,6 +841,7 @@ public void onClick(View v) {
             getExpirationDateSection().setVisibility(View.GONE);
             getPasswordSection().setVisibility(View.GONE);
             getEditPermissionSection().setVisibility(View.GONE);
+            getHideFileListingPermissionSection().setVisibility(View.GONE);
             getGetLinkButton().setVisibility(View.GONE);
         }
     }

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -327,7 +327,7 @@ else if (o1.isDirectory()) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
 
@@ -386,7 +386,7 @@ else if (o1.isDirectory()) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
 
@@ -436,7 +436,7 @@ public int compare(File o1, File o2) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
     

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -26,6 +26,7 @@
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.os.Environment;
 
 import com.owncloud.android.authentication.PassCodeManager;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
@@ -79,7 +80,8 @@ public void onCreate(){
             // Set folder for store logs
             Log_OC.setLogDataFolder(dataFolder);
 
-            Log_OC.startLogging();
+            //TODO: to be changed/fixed whenever SD card support gets merged.
+            Log_OC.startLogging(Environment.getExternalStorageDirectory().getAbsolutePath());
             Log_OC.d("Debug", "start logging");
         }
 

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -362,7 +362,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if ( mChunked &&
                     (new File(mFile.getStoragePath())).length() >
                             ChunkedUploadRemoteFileOperation.CHUNK_SIZE ) {
-                mUploadOperation = new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),
+                mUploadOperation = new ChunkedUploadRemoteFileOperation(mContext, mFile.getStoragePath(),
                         mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -122,6 +122,8 @@ public class FileDisplayActivity extends HookActivity
     public static final int REQUEST_CODE__MOVE_FILES = REQUEST_CODE__LAST_SHARED + 3;
     public static final int REQUEST_CODE__COPY_FILES = REQUEST_CODE__LAST_SHARED + 4;
 
+    protected static final long DELAY_TO_REQUEST_REFRESH_OPERATION_LATER = DELAY_TO_REQUEST_OPERATIONS_LATER + 350;
+
     private static final String TAG = FileDisplayActivity.class.getSimpleName();
 
     private static final String TAG_LIST_OF_FILES = "LIST_OF_FILES";
@@ -1638,7 +1640,7 @@ public void run() {
                         // another window floating over
                     }
                 },
-                DELAY_TO_REQUEST_OPERATIONS_LATER
+                DELAY_TO_REQUEST_REFRESH_OPERATION_LATER
         );
 
     }

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -98,6 +98,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                     if (!upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                         return -1;
                     }
+                    // both are in progress
                     FileUploader.FileUploaderBinder binder = mParentActivity.getFileUploaderBinder();
                     if (binder != null) {
                         if (binder.isUploadingNow(upload1)) {
@@ -109,7 +110,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                 } else if (upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                     return 1;
                 }
-                if (upload1.getUploadEndTimestamp() == 0) {
+                if (upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0) {
                     return compareUploadId(upload1, upload2);
                 } else {
                     return compareUpdateTime(upload1, upload2);

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -327,7 +327,7 @@ else if (o1.isDirectory()) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
 
@@ -386,7 +386,7 @@ else if (o1.isDirectory()) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
 
@@ -436,7 +436,7 @@ public int compare(File o1, File o2) {
             }
         });
 
-        File[] returnArray = new File[1];
+        File[] returnArray = new File[files.size()];
         return files.toArray(returnArray);
     }
     

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -98,6 +98,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                     if (!upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                         return -1;
                     }
+                    // both are in progress
                     FileUploader.FileUploaderBinder binder = mParentActivity.getFileUploaderBinder();
                     if (binder != null) {
                         if (binder.isUploadingNow(upload1)) {
@@ -109,7 +110,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                 } else if (upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                     return 1;
                 }
-                if (upload1.getUploadEndTimestamp() == 0) {
+                if (upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0) {
                     return compareUploadId(upload1, upload2);
                 } else {
                     return compareUpdateTime(upload1, upload2);

File: src/com/owncloud/android/files/services/ConnectivityActionReceiver.java
Patch:
@@ -140,7 +140,7 @@ public void onReceive(final Context context, Intent intent) {
                     networkType == ConnectivityManager.TYPE_WIFI;
 
             if (couldBeWifiAction) {
-                if (ConnectivityUtils.isAppConnectedViaWiFi(context)) {
+                if (ConnectivityUtils.isAppConnectedViaUnmeteredWiFi(context)) {
                     Log_OC.d(TAG, "WiFi connected");
                     wifiConnected(context);
                 } else {

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -464,7 +464,7 @@ private boolean delayForWifi() {
         );
         return (
             (delayInstantPicture || delayInstantVideo) &&
-            !ConnectivityUtils.isAppConnectedViaWiFi(mContext)
+            !ConnectivityUtils.isAppConnectedViaUnmeteredWiFi(mContext)
         );
     }
 

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -98,6 +98,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                     if (!upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                         return -1;
                     }
+                    // both are in progress
                     FileUploader.FileUploaderBinder binder = mParentActivity.getFileUploaderBinder();
                     if (binder != null) {
                         if (binder.isUploadingNow(upload1)) {
@@ -109,7 +110,7 @@ public int compare(OCUpload upload1, OCUpload upload2) {
                 } else if (upload2.getUploadStatus().equals(UploadStatus.UPLOAD_IN_PROGRESS)) {
                     return 1;
                 }
-                if (upload1.getUploadEndTimestamp() == 0) {
+                if (upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0) {
                     return compareUploadId(upload1, upload2);
                 } else {
                     return compareUpdateTime(upload1, upload2);

File: src/com/owncloud/android/ui/adapter/FilterableListAdapter.java
Patch:
@@ -5,7 +5,7 @@
  *   Copyright (C) 2016 Nextcloud.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License version 2,
+ *   it under the terms of the GNU General Public License version 3,
  *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -368,7 +368,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if ( mChunked &&
                     (new File(mFile.getStoragePath())).length() >
                             ChunkedUploadRemoteFileOperation.CHUNK_SIZE ) {
-                mUploadOperation = new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),
+                mUploadOperation = new ChunkedUploadRemoteFileOperation(mContext, mFile.getStoragePath(),
                         mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -26,6 +26,7 @@
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.os.Environment;
 
 import com.owncloud.android.authentication.PassCodeManager;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
@@ -79,7 +80,8 @@ public void onCreate(){
             // Set folder for store logs
             Log_OC.setLogDataFolder(dataFolder);
 
-            Log_OC.startLogging();
+            //TODO: to be changed/fixed whenever SD card support gets merged.
+            Log_OC.startLogging(Environment.getExternalStorageDirectory().getAbsolutePath());
             Log_OC.d("Debug", "start logging");
         }
 

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1031,7 +1031,8 @@ private void notifyUploadResult(UploadFileOperation upload,
 
         // Show the result: success or fail notification
         if (!uploadResult.isCancelled() &&
-            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_WIFI)) {
+            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_WIFI) &&
+            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_CHARGING)) {
 
             int tickerId = (uploadResult.isSuccess()) ? R.string.uploader_upload_succeeded_ticker :
                     R.string.uploader_upload_failed_ticker;

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -203,7 +203,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             case R.id.action_clear_failed_uploads:
                 storageManager = new UploadsStorageManager(getContentResolver());
-                storageManager.clearFailedButNotDelayedForWifiUploads();
+                storageManager.clearFailedButNotDelayedUploads();
                 uploadListFragment.updateUploads();
                 break;
 
@@ -215,7 +215,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             case R.id.action_clear_finished_uploads:
                 storageManager = new UploadsStorageManager(getContentResolver());
-                storageManager.clearAllFinishedButNotDelayedForWifiUploads();
+                storageManager.clearAllFinishedButNotDelayedUploads();
                 uploadListFragment.updateUploads();
                 break;
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1042,8 +1042,8 @@ private void onGetUserNameFinish(RemoteOperationResult result) {
         if (result.isSuccess()) {
             boolean success = false;
             String username;
-            if (result.getData().get(0) instanceof UserInfo) {
-                username = ((UserInfo) result.getData().get(0)).mDisplayName;
+            if (result.getData().get(0) instanceof GetRemoteUserInfoOperation.UserInfo) {
+                username = ((GetRemoteUserInfoOperation.UserInfo) result.getData().get(0)).mDisplayName;
             } else {
                 username = (String) result.getData().get(0);
             }

File: src/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -48,7 +48,7 @@ public class BootupBroadcastReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         if (!intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) {
-            Log_OC.wtf(TAG, "Incorrect action sent " + intent.getAction());
+            Log_OC.e(TAG, "Incorrect action sent " + intent.getAction());
             return;
         }
         Log_OC.d(TAG, "Starting file observer service...");

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -366,7 +366,7 @@ public boolean dispatchResultIfFinished(int operationId,
             if (undispatched != null) {
                 listener.onRemoteOperationFinish(undispatched.first, undispatched.second);
                 return true;
-                //Log_OC.wtf(TAG, "Sending callback later");
+                //Log_OC.e(TAG, "Sending callback later");
             } else {
                 return (!mServiceHandler.mPendingOperations.isEmpty());
             }
@@ -433,7 +433,7 @@ public void handleMessage(Message msg) {
          */
         private void nextOperation() {
             
-            //Log_OC.wtf(TAG, "nextOperation init" );
+            //Log_OC.e(TAG, "nextOperation init" );
             
             Pair<Target, RemoteOperation> next = null;
             synchronized(mPendingOperations) {

File: src/com/owncloud/android/ui/activity/BaseActivity.java
Patch:
@@ -152,7 +152,7 @@ protected void onAccountSet(boolean stateWasRecovered) {
             mStorageManager = new FileDataStorageManager(getAccount(), getContentResolver());
             mCapabilities = mStorageManager.getCapability(mCurrentAccount.name);
         } else {
-            Log_OC.wtf(TAG, "onAccountChanged was called with NULL account associated!");
+            Log_OC.e(TAG, "onAccountChanged was called with NULL account associated!");
         }
     }
 

File: src/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -72,7 +72,7 @@ public void conflictDecisionMade(Decision decision) {
                 finish();
                 return;
             default:
-                Log_OC.wtf(TAG, "Unhandled conflict decision " + decision);
+                Log_OC.e(TAG, "Unhandled conflict decision " + decision);
                 return;
         }
 

File: src/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -171,7 +171,7 @@ protected OCFileListFragment getListOfFilesFragment() {
         if (listOfFiles != null) {
             return (OCFileListFragment)listOfFiles;
         }
-        Log_OC.wtf(TAG, "Access to unexisting list of files fragment!!");
+        Log_OC.e(TAG, "Access to unexisting list of files fragment!!");
         return null;
     }
 

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -117,7 +117,7 @@ protected void onNewIntent(Intent intent) {
             );
 
         } else {
-            Log_OC.wtf(TAG, "Unexpected intent " + intent.toString());
+            Log_OC.e(TAG, "Unexpected intent " + intent.toString());
         }
     }
 

File: src/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -48,7 +48,7 @@ public class BootupBroadcastReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         if (!intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) {
-            Log_OC.wtf(TAG, "Incorrect action sent " + intent.getAction());
+            Log_OC.e(TAG, "Incorrect action sent " + intent.getAction());
             return;
         }
         Log_OC.d(TAG, "Starting file observer service...");

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -365,7 +365,7 @@ public boolean dispatchResultIfFinished(int operationId,
             if (undispatched != null) {
                 listener.onRemoteOperationFinish(undispatched.first, undispatched.second);
                 return true;
-                //Log_OC.wtf(TAG, "Sending callback later");
+                //Log_OC.e(TAG, "Sending callback later");
             } else {
                 return (!mServiceHandler.mPendingOperations.isEmpty());
             }
@@ -432,7 +432,7 @@ public void handleMessage(Message msg) {
          */
         private void nextOperation() {
             
-            //Log_OC.wtf(TAG, "nextOperation init" );
+            //Log_OC.e(TAG, "nextOperation init" );
             
             Pair<Target, RemoteOperation> next = null;
             synchronized(mPendingOperations) {

File: src/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -72,7 +72,7 @@ public void conflictDecisionMade(Decision decision) {
                 finish();
                 return;
             default:
-                Log_OC.wtf(TAG, "Unhandled conflict decision " + decision);
+                Log_OC.e(TAG, "Unhandled conflict decision " + decision);
                 return;
         }
 

File: src/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -171,7 +171,7 @@ protected OCFileListFragment getListOfFilesFragment() {
         if (listOfFiles != null) {
             return (OCFileListFragment)listOfFiles;
         }
-        Log_OC.wtf(TAG, "Access to unexisting list of files fragment!!");
+        Log_OC.e(TAG, "Access to unexisting list of files fragment!!");
         return null;
     }
 

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -117,7 +117,7 @@ protected void onNewIntent(Intent intent) {
             );
 
         } else {
-            Log_OC.wtf(TAG, "Unexpected intent " + intent.toString());
+            Log_OC.e(TAG, "Unexpected intent " + intent.toString());
         }
     }
 

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -399,7 +399,7 @@ private void repopulateAccountList(Account[] accounts) {
                 getResources().getString(R.string.prefs_add_account)).setIcon(R.drawable.ic_account_plus);
         mNavigationView.getMenu().add(R.id.drawer_menu_accounts, R.id.drawer_menu_account_manage,
                 MENU_ORDER_ACCOUNT_FUNCTION,
-                getResources().getString(R.string.drawer_manage_accounts)).setIcon(R.drawable.ic_action_settings);
+                getResources().getString(R.string.drawer_manage_accounts)).setIcon(R.drawable.ic_settings);
 
         // adding sets menu group back to visible, so safety check and setting invisible
         showMenu();

File: src/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -77,7 +77,7 @@ public PreviewImagePagerAdapter(FragmentManager fragmentManager, OCFile parentFo
 
         mAccount = account;
         mStorageManager = storageManager;
-        mImageFiles = mStorageManager.getFolderImages(parentFolder, false);
+        mImageFiles = mStorageManager.getFolderImages(parentFolder, onlyOnDevice);
         
         mImageFiles = FileStorageUtils.sortOcFolder(mImageFiles);
         

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -21,6 +21,7 @@
 package com.owncloud.android.ui.activity;
 
 import android.accounts.Account;
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -32,7 +33,6 @@
 import android.support.v4.app.DialogFragment;
 import android.support.v7.app.ActionBar;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.View.OnClickListener;

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.io.File;
 import java.util.Arrays;

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -37,11 +37,14 @@
 import com.owncloud.android.lib.resources.files.RemoteFile;
 
 import java.io.File;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Comparator;
+import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.Vector;
 
 import third_parties.daveKoeller.AlphanumComparator;

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -42,6 +42,7 @@
 import com.owncloud.android.lib.resources.status.CapabilityBooleanType;
 import com.owncloud.android.lib.resources.status.OCCapability;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeType;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -811,7 +812,7 @@ private Vector<OCFile> getFolderContent(long parentId/*, boolean onlyOnDevice*/)
 
     private OCFile createRootDir() {
         OCFile file = new OCFile(OCFile.ROOT_PATH);
-        file.setMimetype("DIR");
+        file.setMimetype(MimeType.DIRECTORY);
         file.setParentId(FileDataStorageManager.ROOT_PARENT_ID);
         saveFile(file);
         return file;

File: src/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -21,16 +21,16 @@
 
 package com.owncloud.android.operations;
 
-import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudClient;
-import com.owncloud.android.lib.resources.files.CreateRemoteFolderOperation;
 import com.owncloud.android.lib.common.operations.OnRemoteOperationListener;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.lib.resources.files.CreateRemoteFolderOperation;
 import com.owncloud.android.operations.common.SyncOperation;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeType;
 
 
 /**
@@ -111,7 +111,7 @@ public void saveFolderInDB() {
             }
         } else { // Create directory on DB
             OCFile newDir = new OCFile(mRemotePath);
-            newDir.setMimetype("DIR");
+            newDir.setMimetype(MimeType.DIRECTORY);
             long parentId = getStorageManager().
                     getFileByPath(FileStorageUtils.getParentPath(mRemotePath)).getFileId();
             newDir.setParentId(parentId);

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -45,6 +45,7 @@
 import com.owncloud.android.operations.common.SyncOperation;
 import com.owncloud.android.utils.ConnectivityUtils;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeType;
 import com.owncloud.android.utils.MimetypeIconUtil;
 import com.owncloud.android.utils.UriUtils;
 
@@ -509,7 +510,7 @@ private OCFile createLocalFolder(String remotePath) {
         }
         if (parent != null) {
             OCFile createdFolder = new OCFile(remotePath);
-            createdFolder.setMimetype("DIR");
+            createdFolder.setMimetype(MimeType.DIRECTORY);
             createdFolder.setParentId(parent.getFileId());
             getStorageManager().saveFile(createdFolder);
             return createdFolder;

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -51,6 +51,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimeType;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -127,7 +128,7 @@ private int delete(SQLiteDatabase db, Uri uri, String where, String[] whereArgs)
                     boolean isDir;
                     while (!children.isAfterLast()) {
                         childId = children.getLong(children.getColumnIndex(ProviderTableMeta._ID));
-                        isDir = "DIR".equals(children.getString(
+                        isDir = MimeType.DIRECTORY.equals(children.getString(
                                 children.getColumnIndex(ProviderTableMeta.FILE_CONTENT_TYPE)
                         ));
                         //remotePath = children.getString(children.getColumnIndex(ProviderTableMeta.FILE_PATH));

File: src/com/owncloud/android/utils/MimetypeIconUtil.java
Patch:
@@ -276,7 +276,7 @@ private static void populateMimeTypeIconMapping() {
         MIMETYPE_TO_ICON_MAPPING.put("text/x-python", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("text/x-shellscript", R.drawable.file_code);
         MIMETYPE_TO_ICON_MAPPING.put("web", R.drawable.file_code);
-        MIMETYPE_TO_ICON_MAPPING.put("DIR", R.drawable.ic_menu_archive);
+        MIMETYPE_TO_ICON_MAPPING.put(MimeType.DIRECTORY, R.drawable.ic_menu_archive);
     }
 
     /**

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -328,7 +328,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             ImageButton rightButton = (ImageButton) view.findViewById(R.id.upload_right_button);
             if (upload.getUploadStatus() == UploadStatus.UPLOAD_IN_PROGRESS) {
                 //Cancel
-                rightButton.setImageResource(R.drawable.ic_cancel);
+                rightButton.setImageResource(R.drawable.ic_action_cancel_grey);
                 rightButton.setVisibility(View.VISIBLE);
                 rightButton.setOnClickListener(new OnClickListener() {
                     @Override
@@ -343,7 +343,7 @@ public void onClick(View v) {
 
             } else if (upload.getUploadStatus() == UploadStatus.UPLOAD_FAILED) {
                 //Delete
-                rightButton.setImageResource(R.drawable.ic_action_delete);
+                rightButton.setImageResource(R.drawable.ic_action_delete_grey);
                 rightButton.setVisibility(View.VISIBLE);
                 rightButton.setOnClickListener(new OnClickListener() {
                     @Override

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1806,7 +1806,7 @@ private void sortByName(boolean ascending) {
     }
 
     private boolean isGridView() {
-        return getListOfFilesFragment().isGridView();
+        return getListOfFilesFragment().isGridEnabled();
     }
 
     public void allFilesOption() {

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -115,15 +115,15 @@ public void onClick(View v) {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        super.onOptionsItemSelected(item);
+        boolean retval = true;
         switch (item.getItemId()) {
             case android.R.id.home:
                 finish();
                 break;
             default:
-                return false;
+                retval = super.onOptionsItemSelected(item);
         }
-        return true;
+        return retval;
     }
 
 

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -293,7 +293,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             }
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -319,7 +319,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             }
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -382,7 +382,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             }
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -358,7 +358,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
 
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
     }
 

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -427,7 +427,7 @@ protected void registerForContextMenu() {
      */
     protected void setFooterEnabled(boolean enabled) {
         if (enabled) {
-            if (mGridView.getFooterViewCount() == 0) {
+            if (mGridView.getFooterViewCount() == 0 && mGridView.isCorrectAdapter()) {
                 if (mGridFooterView.getParent() != null ) {
                     ((ViewGroup) mGridFooterView.getParent()).removeView(mGridFooterView);
                 }

File: src/third_parties/in/srain/cube/GridViewWithHeaderAndFooter.java
Patch:
@@ -413,8 +413,7 @@ public void setNumColumns(int numColumns) {
     }
 
     public boolean isCorrectAdapter(){
-        return getAdapter() == null ||
-               (getAdapter() != null && getAdapter() instanceof HeaderViewGridAdapter);
+        return getAdapter() == null || getAdapter() instanceof HeaderViewGridAdapter;
     }
 
     /**

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -386,7 +386,7 @@ private void populateDirectoryList() {
 
         String current_dir = mParents.peek();
         if (current_dir.equals("")) {
-            actionBar.setTitle(getString(R.string.default_display_name_for_root_folder));
+            actionBar.setTitle(getString(R.string.uploader_top_message));
         } else {
             actionBar.setTitle(current_dir);
         }

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -156,7 +156,6 @@ protected void onCreate(Bundle savedInstanceState) {
             fm.beginTransaction()
                     .add(taskRetainerFragment, TaskRetainerFragment.FTAG_TASK_RETAINER_FRAGMENT).commit();
         }   // else, Fragment already created and retained across configuration change
-
     }
 
     @Override
@@ -384,7 +383,6 @@ private void populateDirectoryList() {
         ActionBar actionBar = getSupportActionBar();
 
         ListView mListView = (ListView) findViewById(android.R.id.list);
-        ActionBar actionBar = getSupportActionBar();
 
         String current_dir = mParents.peek();
         if (current_dir.equals("")) {

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -580,4 +580,3 @@ public void onCancelCertificate() {
     }
 
 }
-}

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -50,7 +50,7 @@
 import com.owncloud.android.utils.FileStorageUtils;
 
 
-public class LogHistoryActivity extends AppCompatActivity {
+public class LogHistoryActivity extends ToolbarActivity {
 
     private static final String MAIL_ATTACHMENT_TYPE = "text/plain";
 
@@ -70,6 +70,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.log_send_file);
+        setupToolbar();
+
         setTitle(getText(R.string.actionbar_logger));
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
         Button deleteHistoryButton = (Button) findViewById(R.id.deleteLogHistoryButton);

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -398,7 +398,8 @@ private void showMenu() {
      * @param menuItemId the menu item to be highlighted
      */
     protected void setDrawerMenuItemChecked(int menuItemId) {
-        if (mNavigationView.getMenu() != null && mNavigationView.getMenu().findItem(menuItemId) != null) {
+        if (mNavigationView != null && mNavigationView.getMenu() != null && mNavigationView.getMenu().findItem
+                (menuItemId) != null) {
             mNavigationView.getMenu().findItem(menuItemId).setChecked(true);
             mCheckedMenuItem = menuItemId;
         } else {

File: src/com/owncloud/android/ui/activity/DrawerActivity.java
Patch:
@@ -268,7 +268,7 @@ public void setDrawerIndicatorEnabled(boolean enable) {
      */
     public void updateAccountList() {
         Account[] accounts = AccountManager.get(this).getAccountsByType(MainApp.getAccountType());
-        if(accounts.length > 0) {
+        if(accounts.length > 0 && mNavigationView != null) {
             repopulateAccountList(accounts);
             setUsernameInDrawer(AccountUtils.getCurrentOwnCloudAccount(this).name);
         }

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -380,13 +380,15 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
     private void populateDirectoryList() {
         setContentView(R.layout.uploader_layout);
+        setupToolbar();
+        ActionBar actionBar = getSupportActionBar();
 
         ListView mListView = (ListView) findViewById(android.R.id.list);
         ActionBar actionBar = getSupportActionBar();
 
         String current_dir = mParents.peek();
         if (current_dir.equals("")) {
-            actionBar.setTitle(getString(R.string.uploader_top_message));
+            actionBar.setTitle(getString(R.string.default_display_name_for_root_folder));
         } else {
             actionBar.setTitle(current_dir);
         }

File: src/com/owncloud/android/ui/adapter/NavigationDrawerListAdapter.java
Patch:
@@ -40,6 +40,7 @@
 
 import java.util.ArrayList;
 
+// TODO remove complete class as soon as account switcher v2 is implemented, keep it until then for inspiration
 public class NavigationDrawerListAdapter extends BaseAdapter {
 
     private final static String TAG  = NavigationDrawerListAdapter.class.getSimpleName();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -39,6 +39,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.IBinder;
+import android.os.Parcelable;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -50,10 +50,10 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.files.FileUtils;
-import com.owncloud.android.ui.notifications.NotificationUtils;
 import com.owncloud.android.operations.DownloadFileOperation;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
+import com.owncloud.android.ui.notifications.NotificationUtils;
 import com.owncloud.android.ui.preview.PreviewImageActivity;
 import com.owncloud.android.ui.preview.PreviewImageFragment;
 import com.owncloud.android.utils.ErrorMessageAdapter;

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -382,7 +382,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         }
 
         if (mSelection.get(position) != null) {
-            view.setBackgroundColor(Color.rgb(248, 248, 248));
+            view.setBackgroundColor(mContext.getResources().getColor(R.color.selected_item_background));
         } else {
             view.setBackgroundColor(Color.WHITE);
         }

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -110,7 +110,7 @@ public class OCFileListFragment extends ExtendedListFragment {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setHasOptionsMenu(true);
-        mStatusBarColorActionMode = getResources().getColor(R.color.actionModeStatusBarBackground);
+        mStatusBarColorActionMode = getResources().getColor(R.color.action_mode_status_bar_background);
         mStatusBarColor = getResources().getColor(R.color.primary_dark);
     }
 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -639,9 +639,9 @@ public boolean onFileActionChosen(int menuId) {
                 }
                 case R.id.action_copy:
                     Intent action = new Intent(getActivity(), FolderPickerActivity.class);
-
-                    // Pass mTargetFile that contains info of selected file/folder
-                    action.putExtra(FolderPickerActivity.EXTRA_FILE, mTargetFile);
+                    ArrayList files = new ArrayList();
+                    files.add(mTargetFile);
+                    action.putExtra(FolderPickerActivity.EXTRA_FILES, files);
                     getActivity().startActivityForResult(action, FileDisplayActivity.REQUEST_CODE__COPY_FILES);
                     return true;
                 default:

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -323,8 +323,7 @@ public View getDropDownView(int position, View convertView,
     public void onDirectoryClick(File directory) {
         // invalidate checked state when navigating directories
         MenuItem selectAll = mOptionsMenu.findItem(R.id.action_select_all);
-        selectAll.setChecked(false);
-        selectAll.setIcon(R.drawable.ic_select_all);
+        setSelectAllMenuItem(selectAll, false);
 
         pushDirname(directory);
         ActionBar actionBar = getSupportActionBar();

File: src/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -113,7 +113,7 @@ public void onItemClick(AdapterView<?> l, View v, int position, long id) {
                 listDirectory(file);
                 // notify the click to container Activity
                 mContainerActivity.onDirectoryClick(file);
-                Log_OC.e(TAG, "onItemClick directory");
+
                 // save index and top position
                 saveIndexAndTopPosition(position);
             

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -285,6 +285,8 @@ private Bitmap doOCFileInBackground() {
                                         px + "/" + px + Uri.encode(file.getRemotePath(), "/");
                                 Log_OC.d("Thumbnail", "URI: " + uri);
                                 get = new GetMethod(uri);
+                                get.setRequestHeader("Cookie",
+                                        "nc_sameSiteCookielax=true;nc_sameSiteCookiestrict=true");
                                 int status = mClient.executeMethod(get);
                                 if (status == HttpStatus.SC_OK) {
                                     InputStream inputStream = get.getResponseBodyAsStream();

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -285,6 +285,7 @@ private Bitmap doOCFileInBackground() {
                                         px + "/" + px + Uri.encode(file.getRemotePath(), "/");
                                 Log_OC.d("Thumbnail", "URI: " + uri);
                                 get = new GetMethod(uri);
+                                get.setRequestHeader("Cookie", "nc_sameSiteCookielax=true;nc_sameSiteCookiestrict=true");
                                 int status = mClient.executeMethod(get);
                                 if (status == HttpStatus.SC_OK) {
                                     InputStream inputStream = get.getResponseBodyAsStream();

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -66,7 +66,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.SsoWebViewClient.SsoWebViewClientListener;
 import com.owncloud.android.lib.common.OwnCloudAccount;
-import com.owncloud.android.lib.common.OwnCloudAccountStorageManager;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.OwnCloudCredentials;
 import com.owncloud.android.lib.common.OwnCloudCredentialsFactory;
@@ -1503,7 +1502,7 @@ private void updateAccountAuthentication() throws AccountNotFoundException {
         }
 
         // remove managed clients for this account to enforce creation with fresh credentials
-        OwnCloudAccount ocAccount = OwnCloudAccountStorageManager.getOwnCloudAccount(mAccount, this);
+        OwnCloudAccount ocAccount = new OwnCloudAccount(mAccount, this);
         OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(ocAccount);
 
         setAccountAuthenticatorResult(response);

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -46,7 +46,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.lib.common.OwnCloudAccount;
-import com.owncloud.android.lib.common.OwnCloudAccountStorageManager;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -169,7 +168,7 @@ protected Bitmap doInBackground(Object... params) {
 
             try {
                 if (mAccount != null) {
-                    OwnCloudAccount ocAccount = OwnCloudAccountStorageManager.getOwnCloudAccount(
+                    OwnCloudAccount ocAccount = new OwnCloudAccount(
                             mAccount,
                             MainApp.getAppContext()
                     );

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -43,7 +43,6 @@
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudAccount;
-import com.owncloud.android.lib.common.OwnCloudAccountStorageManager;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
@@ -412,7 +411,7 @@ private void downloadFile(String downloadKey) {
 
                     // always get client from client manager, to get fresh credentials in case
                     // of update
-                    OwnCloudAccount ocAccount = OwnCloudAccountStorageManager.getOwnCloudAccount(
+                    OwnCloudAccount ocAccount = new OwnCloudAccount(
                             mCurrentAccount,
                             this
                     );

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -53,7 +53,6 @@
 import com.owncloud.android.db.OCUpload;
 import com.owncloud.android.db.UploadResult;
 import com.owncloud.android.lib.common.OwnCloudAccount;
-import com.owncloud.android.lib.common.OwnCloudAccountStorageManager;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
@@ -908,7 +907,7 @@ public void uploadFile(String uploadKey) {
                 }   // else, reuse storage manager from previous operation
 
                 // always get client from client manager, to get fresh credentials in case of update
-                OwnCloudAccount ocAccount = OwnCloudAccountStorageManager.getOwnCloudAccount(
+                OwnCloudAccount ocAccount = new OwnCloudAccount(
                         mCurrentAccount,
                         this
                 );

File: src/com/owncloud/android/utils/GetShareWithUsersAsyncTask.java
Patch:
@@ -28,7 +28,6 @@
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.lib.common.OwnCloudAccount;
-import com.owncloud.android.lib.common.OwnCloudAccountStorageManager;
 import com.owncloud.android.lib.common.OwnCloudClient;
 import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.lib.common.operations.OnRemoteOperationListener;
@@ -65,7 +64,7 @@ protected Pair<RemoteOperation, RemoteOperationResult> doInBackground(Object...
             try {
                 // Get shares request
                 operation = new GetSharesForFileOperation(file.getRemotePath(), false, false);
-                OwnCloudAccount ocAccount = OwnCloudAccountStorageManager.getOwnCloudAccount(
+                OwnCloudAccount ocAccount = new OwnCloudAccount(
                         account,
                         MainApp.getAppContext()
                 );

File: src/com/owncloud/android/ui/preview/ImageViewCustom.java
Patch:
@@ -82,6 +82,8 @@ protected void onDraw(Canvas canvas) {
 
             mLastTick = nowTick;
             invalidate();
+        } else {
+            super.onDraw(canvas);
         }
     }
 

File: src/com/owncloud/android/db/PreferenceManager.java
Patch:
@@ -117,19 +117,19 @@ public static void setSortAscending(boolean ascending, Context context) {
         saveBooleanPreference(AUTO_PREF__SORT_ASCENDING, ascending, context);
     }
 
-    public static void saveBooleanPreference(String key, boolean value, Context context) {
+    private static void saveBooleanPreference(String key, boolean value, Context context) {
         SharedPreferences.Editor appPreferences = getDefaultSharedPreferences(context.getApplicationContext()).edit();
         appPreferences.putBoolean(key, value);
         appPreferences.apply();
     }
 
-    public static void saveStringPreference(String key, String value, Context context) {
+    private static void saveStringPreference(String key, String value, Context context) {
         SharedPreferences.Editor appPreferences = getDefaultSharedPreferences(context.getApplicationContext()).edit();
         appPreferences.putString(key, value);
         appPreferences.apply();
     }
 
-    public static void saveIntPreference(String key, int value, Context context) {
+    private static void saveIntPreference(String key, int value, Context context) {
         SharedPreferences.Editor appPreferences = getDefaultSharedPreferences(context.getApplicationContext()).edit();
         appPreferences.putInt(key, value);
         appPreferences.apply();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -40,7 +40,6 @@
 import android.os.Bundle;
 import android.os.IBinder;
 import android.os.Parcelable;
-import android.preference.PreferenceManager;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -95,6 +94,8 @@
 import java.io.File;
 import java.util.ArrayList;
 
+import static com.owncloud.android.db.PreferenceManager.*;
+
 /**
  * Displays, what files the user has available in his ownCloud. This is the main view.
  */
@@ -563,7 +564,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             case R.id.action_sort: {
-                Integer sortOrder = PreferenceManager.getSortOrder(this);
+                Integer sortOrder = getSortOrder(this);
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(this);
                 builder.setTitle(R.string.actionbar_sort_title)

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -35,6 +35,7 @@
 import android.content.DialogInterface.OnCancelListener;
 import android.content.DialogInterface.OnClickListener;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.res.Resources.NotFoundException;
 import android.os.Bundle;
 import android.os.Parcelable;
@@ -456,7 +457,7 @@ private void startSyncFolderOperation(OCFile folder) {
     }
 
     private Vector<OCFile> sortFileList(Vector<OCFile> files) {
-        SharedPreferences sharedPreferences = PreferenceManager
+        SharedPreferences sharedPreferences = android.preference.PreferenceManager
                 .getDefaultSharedPreferences(this);
 
         // Read sorting order, default to sort by name ascending

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -597,6 +597,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         MenuInflater inflater = getMenuInflater();
         inflater.inflate(R.menu.main_menu, menu);
         menu.findItem(R.id.action_sort).setVisible(false);
+        menu.findItem(R.id.action_switch_view).setVisible(false);
         menu.findItem(R.id.action_sync_account).setVisible(false);
         return true;
     }

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -409,16 +409,16 @@ private void populateDirectoryList() {
             for (OCFile f : files) {
                 if (f.isFolder()) {
                     HashMap<String, Object> h = new HashMap<>();
-                    h.put("dirname", f.getFileName());
-                    h.put("last_mod", DisplayUtils.getRelativeTimestamp(this, f));
+                    h.put("dirname", f);
                     data.add(h);
+                }
             }
 
             UploaderAdapter sa = new UploaderAdapter(this,
                                                 data,
                                                 R.layout.uploader_list_item_layout,
                                                 new String[] {"dirname"},
-                                                new int[] {R.id.filename, R.id.last_mod});
+                                                new int[] {R.id.filename},
                                                 getStorageManager(), getAccount());
 
             mListView.setAdapter(sa);

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -251,6 +251,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             accountNameTextView.setVisibility(View.VISIBLE);
             statusTextView.setVisibility(View.VISIBLE);
             progressBar.setVisibility(View.GONE);
+            progressBar.setVisibility(View.GONE);
 
             /// Update information depending of upload details
             String status = getStatusText(upload);

File: src/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -35,6 +35,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager.AsyncDrawable;
+import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.util.HashMap;
@@ -74,9 +75,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
         ImageView fileIcon = (ImageView) vi.findViewById(R.id.thumbnail);
         fileIcon.setTag(file.getFileId());
 
-        // TODO enable after #1277 is merged
-//        TextView lastModV = (TextView) vi.findViewById(R.id.last_mod);
-//        lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file));
+        TextView lastModV = (TextView) vi.findViewById(R.id.last_mod);
+        lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file));
         
         // get Thumbnail if file is image
         if (file.isImage() && file.getRemoteId() != null){

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -178,7 +178,7 @@ public static CharSequence getRelativeTimestamp(Context context, OCFile file) {
     }
 
     @SuppressWarnings("deprecation")
-    private static CharSequence getRelativeDateTimeString (
+    public static CharSequence getRelativeDateTimeString (
             Context c, long time, long minResolution, long transitionResolution, int flags
             ){
         

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -94,8 +94,6 @@
 import java.io.File;
 import java.util.ArrayList;
 
-import static com.owncloud.android.db.PreferenceManager.*;
-
 /**
  * Displays, what files the user has available in his ownCloud. This is the main view.
  */
@@ -564,7 +562,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             case R.id.action_sort: {
-                Integer sortOrder = getSortOrder(this);
+                Integer sortOrder = PreferenceManager.getSortOrder(this);
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(this);
                 builder.setTitle(R.string.actionbar_sort_title)

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -500,7 +500,7 @@ public void uploadFiles() {
         UriUploader.UriUploaderResultCode resultCode = uploader.uploadUris();
 
         // Save the path to shared preferences; even if upload is not possible, user chose the folder
-        PreferenceManager.setLastUploadPath(mUploadPath, this);
+        PreferenceManager.setLastUploadPath(this, mUploadPath);
 
         if (resultCode == UriUploader.UriUploaderResultCode.OK) {
             finish();

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -191,7 +191,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     ImageView checkBoxV = (ImageView) view.findViewById(R.id.custom_checkbox);
 
                     lastModV.setVisibility(View.VISIBLE);
-                    lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file));
+                    lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file.getModificationTimestamp()));
 
                     checkBoxV.setVisibility(View.GONE);
 
@@ -422,8 +422,8 @@ public Vector<OCFile> getFolders(Vector<OCFile> files) {
     
     
     public void setSortOrder(Integer order, boolean ascending) {
-        PreferenceManager.setSortOrder(order, mContext);
-        PreferenceManager.setSortAscending(ascending, mContext);
+        PreferenceManager.setSortOrder(mContext, order);
+        PreferenceManager.setSortAscending(mContext, ascending);
         
         FileStorageUtils.mSortOrder = order;
         FileStorageUtils.mSortAscending = ascending;

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -124,13 +124,14 @@ public View getView(int position, View convertView, ViewGroup parent) {
             TextView fileSizeSeparatorV = (TextView) view.findViewById(R.id.file_separator);
             TextView lastModV = (TextView) view.findViewById(R.id.last_mod);
             ImageView checkBoxV = (ImageView) view.findViewById(R.id.custom_checkbox);
+            lastModV.setVisibility(View.VISIBLE);
+            lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file.lastModified()));
+
             if (!file.isDirectory()) {
                 fileSizeSeparatorV.setVisibility(View.VISIBLE);
                 fileSizeV.setVisibility(View.VISIBLE);
                 fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.length()));
 
-                lastModV.setVisibility(View.VISIBLE);
-                lastModV.setText(DisplayUtils.unixTimeToHumanReadable(file.lastModified()));
                 ListView parentList = (ListView) parent;
                 if (parentList.getChoiceMode() == ListView.CHOICE_MODE_NONE) { 
                     checkBoxV.setVisibility(View.GONE);
@@ -179,7 +180,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
             } else {
                 fileSizeSeparatorV.setVisibility(View.GONE);
                 fileSizeV.setVisibility(View.GONE);
-                lastModV.setVisibility(View.GONE);
                 checkBoxV.setVisibility(View.GONE);
             }
 

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -412,13 +412,14 @@ private void populateDirectoryList() {
                     HashMap<String, Object> h = new HashMap<>();
                     h.put("dirname", f);
                     data.add(h);
+                }
             }
 
             UploaderAdapter sa = new UploaderAdapter(this,
                                                 data,
                                                 R.layout.uploader_list_item_layout,
                                                 new String[] {"dirname"},
-                                                new int[] {R.id.filename, R.id.last_mod});
+                                                new int[] {R.id.filename},
                                                 getStorageManager(), getAccount());
 
             mListView.setAdapter(sa);

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -251,6 +251,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             accountNameTextView.setVisibility(View.VISIBLE);
             statusTextView.setVisibility(View.VISIBLE);
             progressBar.setVisibility(View.GONE);
+            progressBar.setVisibility(View.GONE);
 
             /// Update information depending of upload details
             String status = getStatusText(upload);

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -169,7 +169,7 @@ public static CharSequence getRelativeTimestamp(Context context, OCFile file) {
     }
 
     @SuppressWarnings("deprecation")
-    private static CharSequence getRelativeDateTimeString (
+    public static CharSequence getRelativeDateTimeString (
             Context c, long time, long minResolution, long transitionResolution, int flags
             ){
         

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -40,7 +40,6 @@
 import android.os.Bundle;
 import android.os.IBinder;
 import android.os.Parcelable;
-import android.preference.PreferenceManager;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -95,6 +94,8 @@
 import java.io.File;
 import java.util.ArrayList;
 
+import static com.owncloud.android.db.PreferenceManager.*;
+
 /**
  * Displays, what files the user has available in his ownCloud. This is the main view.
  */
@@ -563,7 +564,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             case R.id.action_sort: {
-                Integer sortOrder = PreferenceManager.getSortOrder(this);
+                Integer sortOrder = getSortOrder(this);
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(this);
                 builder.setTitle(R.string.actionbar_sort_title)

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -35,6 +35,7 @@
 import android.content.DialogInterface.OnCancelListener;
 import android.content.DialogInterface.OnClickListener;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.res.Resources.NotFoundException;
 import android.os.Bundle;
 import android.os.Parcelable;
@@ -456,7 +457,7 @@ private void startSyncFolderOperation(OCFile folder) {
     }
 
     private Vector<OCFile> sortFileList(Vector<OCFile> files) {
-        SharedPreferences sharedPreferences = PreferenceManager
+        SharedPreferences sharedPreferences = android.preference.PreferenceManager
                 .getDefaultSharedPreferences(this);
 
         // Read sorting order, default to sort by name ascending

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -597,6 +597,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         MenuInflater inflater = getMenuInflater();
         inflater.inflate(R.menu.main_menu, menu);
         menu.findItem(R.id.action_sort).setVisible(false);
+        menu.findItem(R.id.action_switch_view).setVisible(false);
         menu.findItem(R.id.action_sync_account).setVisible(false);
         return true;
     }

File: src/com/owncloud/android/ui/activity/ReceiveExternalFilesActivity.java
Patch:
@@ -409,16 +409,16 @@ private void populateDirectoryList() {
             for (OCFile f : files) {
                 if (f.isFolder()) {
                     HashMap<String, Object> h = new HashMap<>();
-                    h.put("dirname", f.getFileName());
-                    h.put("last_mod", DisplayUtils.getRelativeTimestamp(this, f));
+                    h.put("dirname", f);
                     data.add(h);
+                }
             }
 
             UploaderAdapter sa = new UploaderAdapter(this,
                                                 data,
                                                 R.layout.uploader_list_item_layout,
                                                 new String[] {"dirname"},
-                                                new int[] {R.id.filename, R.id.last_mod});
+                                                new int[] {R.id.filename},
                                                 getStorageManager(), getAccount());
 
             mListView.setAdapter(sa);

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -251,6 +251,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             accountNameTextView.setVisibility(View.VISIBLE);
             statusTextView.setVisibility(View.VISIBLE);
             progressBar.setVisibility(View.GONE);
+            progressBar.setVisibility(View.GONE);
 
             /// Update information depending of upload details
             String status = getStatusText(upload);

File: src/com/owncloud/android/ui/adapter/UploaderAdapter.java
Patch:
@@ -35,6 +35,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager.AsyncDrawable;
+import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.util.HashMap;
@@ -74,9 +75,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
         ImageView fileIcon = (ImageView) vi.findViewById(R.id.thumbnail);
         fileIcon.setTag(file.getFileId());
 
-        // TODO enable after #1277 is merged
-//        TextView lastModV = (TextView) vi.findViewById(R.id.last_mod);
-//        lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file));
+        TextView lastModV = (TextView) vi.findViewById(R.id.last_mod);
+        lastModV.setText(DisplayUtils.getRelativeTimestamp(mContext, file));
         
         // get Thumbnail if file is image
         if (file.isImage() && file.getRemoteId() != null){

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -169,7 +169,7 @@ public static CharSequence getRelativeTimestamp(Context context, OCFile file) {
     }
 
     @SuppressWarnings("deprecation")
-    private static CharSequence getRelativeDateTimeString (
+    public static CharSequence getRelativeDateTimeString (
             Context c, long time, long minResolution, long transitionResolution, int flags
             ){
         

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -199,7 +199,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             case R.id.action_clear_failed_uploads:
                 storageManager = new UploadsStorageManager(getContentResolver());
-                storageManager.clearFailedUploads();
+                storageManager.clearFailedButNotDelayedForWifiUploads();
                 uploadListFragment.updateUploads();
                 break;
 
@@ -211,7 +211,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             case R.id.action_clear_finished_uploads:
                 storageManager = new UploadsStorageManager(getContentResolver());
-                storageManager.clearAllFinishedUploads();
+                storageManager.clearAllFinishedButNotDelayedForWifiUploads();
                 uploadListFragment.updateUploads();
                 break;
 

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1012,7 +1012,9 @@ private void notifyUploadResult(UploadFileOperation upload,
         mNotificationManager.cancel(R.string.uploader_upload_in_progress_ticker);
 
         // Show the result: success or fail notification
-        if (!uploadResult.isCancelled()) {
+        if (!uploadResult.isCancelled() &&
+            !uploadResult.getCode().equals(ResultCode.DELAYED_FOR_WIFI)) {
+
             int tickerId = (uploadResult.isSuccess()) ? R.string.uploader_upload_succeeded_ticker :
                     R.string.uploader_upload_failed_ticker;
 

File: androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java
Patch:
@@ -21,7 +21,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.graphics.Point;
 import android.os.Bundle;
 import android.os.RemoteException;
 import android.support.test.InstrumentationRegistry;
@@ -84,11 +83,11 @@ protected Intent getActivityIntent() {
     @Before
     public void init(){
         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-        Point[] coordinates = new Point[4];
+        /*Point[] coordinates = new Point[4];
         coordinates[0] = new Point(248, 1020);
         coordinates[1] = new Point(248, 429);
         coordinates[2] = new Point(796, 1020);
-        coordinates[3] = new Point(796, 429);
+        coordinates[3] = new Point(796, 429);*/
         try {
             if (!uiDevice.isScreenOn()) {
                 uiDevice.wakeUp();

File: androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java
Patch:
@@ -57,6 +57,7 @@ public class AuthenticatorActivityTest {
     public static final String EXTRA_ACTION = "ACTION";
     public static final String EXTRA_ACCOUNT = "ACCOUNT";
 
+
     private int mResultCode = -2;
     private int WAIT_LOGIN = 5000;
 

File: src/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -66,7 +66,7 @@ public class CopyAndUploadContentUrisTask extends AsyncTask<Object, Void, Result
      * But we really, really, really want that the files are copied to temporary files in the OC folder and then
      * uploaded, even if the user gets bored of waiting while the copy finishes. And we can't forward the job to
      * another {@link Context}, because if any of the content:// URIs is constrained by a TEMPORARY READ PERMISSION,
-     * trying to open it will fail with a {@link SecurityException} after the user leaves the Uploader Activity. We
+     * trying to open it will fail with a {@link SecurityException} after the user leaves the ReceiveExternalFilesActivity Activity. We
      * really tried it.
      *
      * So we are doomed to leak here for the best interest of the user. Please, don't do similar in other places.
@@ -238,7 +238,7 @@ protected void onPostExecute(ResultCode result) {
             listener.onTmpFilesCopied(result);
 
         } else {
-            Log_OC.i(TAG, "User left Uploader activity before the temporal copies were finished ");
+            Log_OC.i(TAG, "User left the caller activity before the temporal copies were finished ");
             if (result != ResultCode.OK) {
                 // if the user left the app, report background error in a Toast
                 int messageId;

File: src/com/owncloud/android/ui/dialog/UploadSourceDialogFragment.java
Patch:
@@ -77,12 +77,12 @@ public void onClick(DialogInterface dialog, int item) {
                             UploadFilesActivity.EXTRA_ACCOUNT,
                             ((FileActivity)getActivity()).getAccount()
                     );
-                    //startActivityForResult(action, REQUEST_CODE__SELECT_MULTIPLE_FILES);
+                    //startActivityForResult(action, REQUEST_CODE__SELECT_FILES_FROM_FILE_SYSTEM);
                     // this flow seems broken;
                     // Actionbarsherlock, maybe?
                     getActivity().startActivityForResult(
                             action,
-                            FileDisplayActivity.REQUEST_CODE__SELECT_MULTIPLE_FILES
+                            FileDisplayActivity.REQUEST_CODE__SELECT_FILES_FROM_FILE_SYSTEM
                     );
 
                 } else if (item == 1) {

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -229,7 +229,7 @@ private void registerFabUploadListeners() {
             @Override
             public void onClick(View v) {
                 UploadFilesActivity.startUploadActivityForResult(getActivity(), ((FileActivity)getActivity())
-                        .getAccount(), FileDisplayActivity.REQUEST_CODE__SELECT_MULTIPLE_FILES);
+                        .getAccount(), FileDisplayActivity.REQUEST_CODE__SELECT_FILES_FROM_FILE_SYSTEM);
                 getFabMain().collapse();
                 recordMiniFabClick();
             }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -774,8 +774,8 @@ this, getString(R.string.filedisplay_unexpected_bad_get_content),
                             OpenableColumns.DISPLAY_NAME));
                     Log_OC.v(TAG, "Display Name: " + displayName);
 
-                    displayName.replace(File.separatorChar, '_');
-                    displayName.replace(File.pathSeparatorChar, '_');
+                    displayName = displayName.replace(File.separatorChar, '_');
+                    displayName = displayName.replace(File.pathSeparatorChar, '_');
 
                     remotePath += displayName;
 

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -270,7 +270,8 @@ public boolean onPreferenceClick(Preference preference) {
             
         }
 
-        if (BuildConfig.DEBUG) {
+        boolean loggerEnabled = getResources().getBoolean(R.bool.logger_enabled) || BuildConfig.DEBUG;
+        if (loggerEnabled) {
             Preference pLog =  findPreference("log");
             if (pLog != null ){
                 pLog.setOnPreferenceClickListener(new OnPreferenceClickListener() {
@@ -347,7 +348,6 @@ public boolean onPreferenceClick(Preference preference) {
             }
         }
 
-        boolean loggerEnabled = getResources().getBoolean(R.bool.logger_enabled);
         Preference pLogger =  findPreference("logger");
         if (pLogger != null){
             if (loggerEnabled) {

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -493,6 +493,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
                     newUpload = new UploadFileOperation(
                             account,
+                            files[i],
                             ocUpload,
                             chunked,
                             forceOverwrite,
@@ -546,6 +547,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
             UploadFileOperation newUpload = new UploadFileOperation(
                     account,
+                    null,
                     upload,
                     chunked,
                     upload.isForceOverwrite(),  // TODO should be read from DB?

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -493,6 +493,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
                     newUpload = new UploadFileOperation(
                             account,
+                            files[i],
                             ocUpload,
                             chunked,
                             forceOverwrite,
@@ -546,6 +547,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
             UploadFileOperation newUpload = new UploadFileOperation(
                     account,
+                    null,
                     upload,
                     chunked,
                     upload.isForceOverwrite(),  // TODO should be read from DB?

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -765,8 +765,8 @@ private void saveUploadedFile(OwnCloudClient client) {
         }
 
         if (mWasRenamed) {
-            OCFile oldFile = mOldFile;
-            if (oldFile.fileExists()) {
+            OCFile oldFile = getStorageManager().getFileByPath(mOldFile.getRemotePath());
+            if (oldFile != null) {
                 oldFile.setStoragePath(null);
                 getStorageManager().saveFile(oldFile);
                 getStorageManager().saveConflict(oldFile, null);

File: src/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -443,7 +443,8 @@ public long getParentId() {
      * @return remote path
      */
     public String getParentRemotePath() {
-        return new File(getRemotePath()).getParent();
+        String parentPath = new File(getRemotePath()).getParent();
+        return (parentPath.substring(parentPath.length() - 1).equals("/")) ? parentPath : (parentPath + "/");
     }
 
     /**

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -73,7 +73,6 @@
 import com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.lib.resources.status.OCCapability;
-import com.owncloud.android.operations.CreateShareViaLinkOperation;
 import com.owncloud.android.operations.CreateShareWithShareeOperation;
 import com.owncloud.android.operations.GetSharesForFileOperation;
 import com.owncloud.android.operations.SynchronizeFileOperation;
@@ -87,7 +86,6 @@
 import com.owncloud.android.ui.adapter.NavigationDrawerListAdapter;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.LoadingDialog;
-import com.owncloud.android.ui.dialog.SharePasswordDialogFragment;
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog;
 import com.owncloud.android.utils.ErrorMessageAdapter;
 
@@ -1002,6 +1000,7 @@ public FileUploaderBinder getFileUploaderBinder() {
     public void restart(){
         Intent i = new Intent(this, FileDisplayActivity.class);
         i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+        i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
         startActivity(i);
     }
 

File: src/com/owncloud/android/authentication/AccountUtils.java
Patch:
@@ -194,7 +194,8 @@ public static void updateAccountVersion(Context context) {
                 for (Account account : ocAccounts) {
                     // build new account name
                     serverUrl = accountMgr.getUserData(account, Constants.KEY_OC_BASE_URL);
-                    username = account.name.substring(0, account.name.lastIndexOf('@'));
+                    username = com.owncloud.android.lib.common.accounts.AccountUtils.
+                            getUsernameForAccount(account);
                     newAccountName = com.owncloud.android.lib.common.accounts.AccountUtils.
                             buildAccountName(Uri.parse(serverUrl), username);
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -494,7 +494,9 @@ private void initAuthorizationPreFragment(Bundle savedInstanceState) {
         boolean isPasswordExposed = false;
         if (savedInstanceState == null) {
             if (mAccount != null) {
-                presetUserName = mAccount.name.substring(0, mAccount.name.lastIndexOf('@'));
+                presetUserName =
+                    com.owncloud.android.lib.common.accounts.AccountUtils.
+                        getUsernameForAccount(mAccount);
             }
             
         } else {

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -897,7 +897,7 @@ private void updateAccountName(SQLiteDatabase db){
 			for (Account account : accounts) {
                 // build both old and new account name
                 serverUrl = ama.getUserData(account, AccountUtils.Constants.KEY_OC_BASE_URL);
-                username = account.name.substring(0, account.name.lastIndexOf('@'));
+                username = AccountUtils.getUsernameForAccount(account);
                 oldAccountName = AccountUtils.buildAccountNameOld(Uri.parse(serverUrl), username);
                 newAccountName = AccountUtils.buildAccountName(Uri.parse(serverUrl), username);
 

File: src/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -55,8 +55,9 @@ public class SharePasswordDialogFragment extends DialogFragment
      * Public factory method to create new SharePasswordDialogFragment instances.
      *
      * @param   file            OCFile bound to the public share that which password will be set or updated
-     * @param   createShare     When 'true', the public share will be created; when 'false', will be assumed
-     *                          that the public share already exists, and its state will be directly updated.
+     * @param   createShare     When 'true', the request for password will be followed by the creation of a new
+     *                          public link; when 'false', a public share is assumed to exist, and the password
+     *                          is bound to it.
      * @return                  Dialog ready to show.
      */
     public static SharePasswordDialogFragment newInstance(OCFile file, boolean createShare) {

File: src/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -166,8 +166,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         
         // add the webview into the layout
         RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(
-                RelativeLayout.LayoutParams.WRAP_CONTENT, 
-                RelativeLayout.LayoutParams.WRAP_CONTENT
+                RelativeLayout.LayoutParams.MATCH_PARENT,
+                RelativeLayout.LayoutParams.MATCH_PARENT
                 );
         ssoRootView.addView(mSsoWebView, layoutParams);
         ssoRootView.requestLayout();

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -1074,7 +1074,7 @@ public void onSavedCertificate() {
     @Override
     public void onFailedSavingCertificate() {
         ConfirmationDialogFragment dialog = ConfirmationDialogFragment.newInstance(
-            R.string.ssl_validator_not_saved, new String[]{}, R.string.common_ok, -1, -1
+            R.string.ssl_validator_not_saved, new String[]{}, 0, R.string.common_ok, -1, -1
         );
         dialog.show(getSupportFragmentManager(), DIALOG_CERT_NOT_SAVED);
     }

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -398,7 +398,7 @@ protected void onPostExecute(Boolean result) {
                 // to the ownCloud folder instead of copying
                 String[] args = {getString(R.string.app_name)};
                 ConfirmationDialogFragment dialog = ConfirmationDialogFragment.newInstance(
-                    R.string.upload_query_move_foreign_files, args, R.string.common_yes, -1,
+                    R.string.upload_query_move_foreign_files, args, 0, R.string.common_yes, -1,
                         R.string.common_no
                 );
                 dialog.setOnConfirmationListener(UploadFilesActivity.this);

File: src/com/owncloud/android/ui/asynctasks/CopyAndUploadContentUrisTask.java
Patch:
@@ -242,13 +242,13 @@ protected void onPostExecute(ResultCode result) {
                 int messageId;
                 switch (result) {
                     case LOCAL_FILE_NOT_FOUND:
-                        messageId = R.string.copy_file_not_found;
+                        messageId = R.string.uploader_error_message_source_file_not_found;
                         break;
                     case LOCAL_STORAGE_NOT_COPIED:
-                        messageId = R.string.copy_file_error;
+                        messageId = R.string.uploader_error_message_source_file_not_copied;
                         break;
                     case FORBIDDEN:
-                        messageId = R.string.uploader_error_forbidden_content;
+                        messageId = R.string.uploader_error_message_read_permission_not_granted;
                         break;
                     default:
                         messageId = R.string.common_error_unknown;

File: src/com/owncloud/android/ui/dialog/RemoveFileDialogFragment.java
Patch:
@@ -62,8 +62,8 @@ public static RemoveFileDialogFragment newInstance(OCFile file) {
             negBtn = R.string.confirmation_remove_local;
         }
         
-        args.putInt(ARG_CONF_RESOURCE_ID, messageStringId);
-        args.putStringArray(ARG_CONF_ARGUMENTS, new String[]{file.getFileName()});
+        args.putInt(ARG_MESSAGE_RESOURCE_ID, messageStringId);
+        args.putStringArray(ARG_MESSAGE_ARGUMENTS, new String[]{file.getFileName()});
         args.putInt(ARG_POSITIVE_BTN_RES, R.string.common_yes);
         args.putInt(ARG_NEUTRAL_BTN_RES, R.string.common_no);
         args.putInt(ARG_NEGATIVE_BTN_RES, negBtn);

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -575,7 +575,7 @@ public void uploadFiles() {
                         // Add extension if it does not exists in the file name
                         int index = displayName.lastIndexOf(".");
                         if(index == -1 || MimeTypeMap.getSingleton().
-                                getMimeTypeFromExtension(displayName.substring(index)) == null) {
+                                getMimeTypeFromExtension(displayName.substring(index + 1)) == null) {
                             String extension = MimeTypeMap.getSingleton().getExtensionFromMimeType(mimeType);
                             displayName += (extension != null) ? "." + extension : "";
                         }

File: src/com/owncloud/android/utils/CopyTmpFileAsyncTask.java
Patch:
@@ -129,6 +129,8 @@ protected void onPostExecute(String result) {
         if (listener!= null)
         {
             listener.onTmpFileCopied(result, mIndex);
+        } else {
+            Log_OC.e(TAG, "Lost upload because of lost context.");
         }
     }
 

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -243,7 +243,7 @@ public void onShow(DialogInterface dialog) {
             });
             return pDialog;
         case DIALOG_NO_ACCOUNT:
-            builder.setIcon(android.R.drawable.ic_dialog_alert);
+            builder.setIcon(R.drawable.ic_warning);
             builder.setTitle(R.string.uploader_wrn_no_account_title);
             builder.setMessage(String.format(
                     getString(R.string.uploader_wrn_no_account_text),
@@ -309,7 +309,7 @@ public void onCancel(DialogInterface dialog) {
             });
             return builder.create();
         case DIALOG_NO_STREAM:
-            builder.setIcon(android.R.drawable.ic_dialog_alert);
+            builder.setIcon(R.drawable.ic_warning);
             builder.setTitle(R.string.uploader_wrn_no_content_title);
             builder.setMessage(R.string.uploader_wrn_no_content_text);
             builder.setCancelable(false);

File: src/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -83,7 +83,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         inputText.requestFocus();
 
         // Build the dialog
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
+                R.style.Theme_ownCloud_Dialog_NoButtonBarStyle);
         builder.setView(v)
                .setPositiveButton(R.string.common_ok, this)
                .setNegativeButton(R.string.common_cancel, this)

File: src/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -27,13 +27,13 @@
 import android.content.Context;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
+import android.support.v7.widget.SearchView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.inputmethod.EditorInfo;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.ListView;
-import android.widget.SearchView;
 
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
@@ -147,7 +147,7 @@ public boolean onQueryTextChange(String newText) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        getActivity().setTitle(R.string.share_dialog_title);
+        getActivity().setTitle(R.string.share_with_title);
 
         // Load data into the list
         refreshUsersOrGroupsListFromDB();

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -211,7 +211,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
             fileTextView.setText(fileName);
 
             // remote path to parent folder
-            TextView pathTextView = (TextView) view.findViewById(R.id.upload_local_path);
+            TextView pathTextView = (TextView) view.findViewById(R.id.upload_remote_path);
             String remoteParentPath = upload.getRemotePath();
             remoteParentPath = new File(remoteParentPath).getParent();
             pathTextView.setText(mParentActivity.getString(R.string.app_name) + remoteParentPath);

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -242,7 +242,7 @@ public void onShow(DialogInterface dialog) {
             });
             return pDialog;
         case DIALOG_NO_ACCOUNT:
-            builder.setIcon(android.R.drawable.ic_dialog_alert);
+            builder.setIcon(R.drawable.ic_warning);
             builder.setTitle(R.string.uploader_wrn_no_account_title);
             builder.setMessage(String.format(
                     getString(R.string.uploader_wrn_no_account_text), getString(R.string.app_name)));

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -307,7 +307,7 @@ public void onCancel(DialogInterface dialog) {
             });
             return builder.create();
         case DIALOG_NO_STREAM:
-            builder.setIcon(android.R.drawable.ic_dialog_alert);
+            builder.setIcon(R.drawable.ic_warning);
             builder.setTitle(R.string.uploader_wrn_no_content_title);
             builder.setMessage(R.string.uploader_wrn_no_content_text);
             builder.setCancelable(false);

File: src/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -83,7 +83,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         inputText.requestFocus();
 
         // Build the dialog
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
+                R.style.Theme_ownCloud_Dialog_NoButtonBarStyle);
         builder.setView(v)
                .setPositiveButton(R.string.common_ok, this)
                .setNegativeButton(R.string.common_cancel, this)

File: src/com/owncloud/android/ui/fragment/SearchShareesFragment.java
Patch:
@@ -147,7 +147,7 @@ public boolean onQueryTextChange(String newText) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        getActivity().setTitle(R.string.share_dialog_title);
+        getActivity().setTitle(R.string.share_with_title);
 
         // Load data into the list
         refreshUsersOrGroupsListFromDB();

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -343,7 +343,7 @@ public void onCreate() {
         mUploadsStorageManager = new UploadsStorageManager(getContentResolver());
 
         int failedCounter = mUploadsStorageManager.failInProgressUploads(
-            UploadResult.UNKNOWN    // Add UploadResult.KILLED?
+            UploadResult.SERVICE_INTERRUPTED    // Add UploadResult.KILLED?
         );
         if (failedCounter > 0) {
             resurrection();

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -37,7 +37,6 @@
 import android.widget.Toast;
 
 import com.owncloud.android.R;
-import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.datamodel.UploadsStorageManager;
@@ -48,7 +47,6 @@
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.FileActivity;
-import com.owncloud.android.ui.activity.UploadListActivity;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.MimetypeIconUtil;
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1500,6 +1500,7 @@ private void updateAccountAuthentication() throws AccountNotFoundException {
         OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(ocAccount);
 
         setAccountAuthenticatorResult(response);
+        setResult(RESULT_OK);
 
     }
 

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -224,7 +224,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         Log_OC.e(TAG, "onActivityResult " + resultCode);
-        if (requestCode == UPDATE_CREDENTIALS_REQUEST_CODE && resultCode == FileActivity.RESULT_OK) {
+        if (requestCode == UPDATE_CREDENTIALS_REQUEST_CODE && resultCode == RESULT_OK) {
             // Retry uploads of this account
             FileUploader.UploadRequester requester = new FileUploader.UploadRequester();
             requester.retryFailedUploads(this, getAccount(), UploadResult.CREDENTIAL_ERROR);

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -145,8 +145,6 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String UPLOADS_UPLOAD_TIME = "upload_time";
         public static final String UPLOADS_FORCE_OVERWRITE = "force_overwrite";
         public static final String UPLOADS_IS_CREATE_REMOTE_FOLDER = "is_create_remote_folder";
-        public static final String UPLOADS_IS_WHILE_CHARGING_ONLY = "is_while_charging_only";
-        public static final String UPLOADS_IS_WIFI_ONLY = "is_wifi_only";
         public static final String UPLOADS_UPLOAD_END_TIMESTAMP = "upload_end_timestamp";
         public static final String UPLOADS_LAST_RESULT = "last_result";
         public static final String UPLOADS_CREATED_BY = "created_by";

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -853,8 +853,6 @@ private void createUploadsTable(SQLiteDatabase db){
                 + ProviderTableMeta.UPLOADS_UPLOAD_TIME + " INTEGER, "
                 + ProviderTableMeta.UPLOADS_FORCE_OVERWRITE + " INTEGER, "  // boolean
                 + ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + " INTEGER, "  // boolean
-                + ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + " INTEGER, "  // boolean
-                + ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + " INTEGER, " // boolean
                 + ProviderTableMeta.UPLOADS_UPLOAD_END_TIMESTAMP + " INTEGER, "
                 + ProviderTableMeta.UPLOADS_LAST_RESULT + " INTEGER, "     // Upload LastResult
                 + ProviderTableMeta.UPLOADS_CREATED_BY + " INTEGER );"    // Upload createdBy

File: src/com/owncloud/android/operations/UnshareOperation.java
Patch:
@@ -75,10 +75,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             if (result.isSuccess()) {
                 Log_OC.d(TAG, "Share id = " + share.getRemoteId() + " deleted");
 
-                if (mShareType == ShareType.PUBLIC_LINK) {
+                if (ShareType.PUBLIC_LINK.equals(mShareType)) {
                     file.setShareViaLink(false);
                     file.setPublicLink("");
-                } else if (mShareType == ShareType.USER || mShareType == ShareType.GROUP){
+                } else if (ShareType.USER.equals(mShareType) || ShareType.GROUP.equals(mShareType) || ShareType.FEDERATED.equals(mShareType)){
                     // Check if it is the last share
                     ArrayList <OCShare> sharesWith = getStorageManager().
                             getSharesWithForAFile(mRemotePath,

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1525,6 +1525,7 @@ public void saveSharesInFolder(ArrayList<OCShare> shares, OCFile folder) {
                     getContentResolver().applyBatch(MainApp.getAuthority(), operations);
 
                 } else {
+
                     getContentProviderClient().applyBatch(operations);
                 }
 

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -85,7 +85,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String OCSHARES_FILE_SOURCE = "file_source";
         public static final String OCSHARES_ITEM_SOURCE = "item_source";
         public static final String OCSHARES_SHARE_TYPE = "share_type";
-        public static final String OCSHARES_SHARE_WITH = "share_with";
+        public static final String OCSHARES_SHARE_WITH = "shate_with";
         public static final String OCSHARES_PATH = "path";
         public static final String OCSHARES_PERMISSIONS = "permissions";
         public static final String OCSHARES_SHARED_DATE = "shared_date";

File: src/com/owncloud/android/operations/CreateShareWithShareeOperation.java
Patch:
@@ -60,7 +60,7 @@ public class CreateShareWithShareeOperation extends SyncOperation {
      *                      https://doc.owncloud.org/server/8.2/developer_manual/core/ocs-share-api.html .
      */
     public CreateShareWithShareeOperation(String path, String shareeName, ShareType shareType, int permissions) {
-        if (!ShareType.USER.equals(shareType) && !ShareType.GROUP.equals(shareType)) {
+        if (!ShareType.USER.equals(shareType) && !ShareType.GROUP.equals(shareType) && !ShareType.FEDERATED.equals(shareType)) {
             throw new IllegalArgumentException("Illegal share type " + shareType);
         }
         mPath = path;

File: src/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -34,6 +34,8 @@
 import android.content.Context;
 import android.net.Uri;
 
+import org.apache.commons.httpclient.HttpStatus;
+
 /**
  * Operation to find out what authentication method requires
  * the server to access files.
@@ -99,7 +101,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         } 
 
         // analyze response  
-        if (result.getCode() == ResultCode.UNAUTHORIZED) {
+        if (result.getHttpCode() == HttpStatus.SC_UNAUTHORIZED) {
             String authRequest = ((result.getAuthenticateHeader()).trim()).toLowerCase();
             if (authRequest.startsWith("basic")) {
                 authMethod = AuthenticationMethod.BASIC_HTTP_AUTH;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -743,7 +743,6 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
 
         if (!result.isSuccess() && (
                 result.getCode() == ResultCode.UNAUTHORIZED ||
-                result.isIdPRedirection() ||
                 (result.isException() && result.getException() instanceof AuthenticatorException)
                 )) {
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1028,8 +1028,7 @@ public void onReceive(Context context, Intent intent) {
                                 equals(event) &&/// TODO refactor and make common
 
                                 synchResult != null && !synchResult.isSuccess() &&
-                                (synchResult.getCode() == ResultCode.UNAUTHORIZED ||
-                                        synchResult.isIdPRedirection() ||
+                                (ResultCode.UNAUTHORIZED.equals(synchResult.getCode()) ||
                                         (synchResult.isException() && synchResult.getException()
                                                 instanceof AuthenticatorException))) {
 

File: src/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -481,9 +481,8 @@ public void onReceive(Context context, Intent intent) {
                                     equals(event) &&
                                 /// TODO refactor and make common
                                 synchResult != null && !synchResult.isSuccess() &&  
-                                (synchResult.getCode() == ResultCode.UNAUTHORIZED   || 
-                                    synchResult.isIdPRedirection()                  ||
-                                    (synchResult.isException() && synchResult.getException() 
+                                (ResultCode.UNAUTHORIZED.equals(synchResult.getCode()) ||
+                                    (synchResult.isException() && synchResult.getException()
                                             instanceof AuthenticatorException))) {
 
                             requestCredentialsUpdate(context);

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -85,6 +85,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setHomeButtonEnabled(true);
         mDrawerToggle.setDrawerIndicatorEnabled(true);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setTitle(R.string.uploads_view_title);
 
     }
 

File: src/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -106,6 +106,7 @@ public long storeUpload(OCUpload ocUpload) {
         cv.put(ProviderTableMeta.UPLOADS_LOCAL_PATH, ocUpload.getLocalPath());
         cv.put(ProviderTableMeta.UPLOADS_REMOTE_PATH, ocUpload.getRemotePath());
         cv.put(ProviderTableMeta.UPLOADS_ACCOUNT_NAME, ocUpload.getAccountName());
+        cv.put(ProviderTableMeta.UPLOADS_FILE_SIZE, ocUpload.getFileSize());
         cv.put(ProviderTableMeta.UPLOADS_STATUS, ocUpload.getUploadStatus().value);
         cv.put(ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR, ocUpload.getLocalAction());
         cv.put(ProviderTableMeta.UPLOADS_FORCE_OVERWRITE, ocUpload.isForceOverwrite() ? 1 : 0);
@@ -391,6 +392,7 @@ private OCUpload createOCUploadFromCursor(Cursor c) {
             String accountName = c.getString(c.getColumnIndex(ProviderTableMeta.UPLOADS_ACCOUNT_NAME));
             upload = new OCUpload(localPath, remotePath, accountName);
 
+            upload.setFileSize(c.getLong(c.getColumnIndex(ProviderTableMeta.UPLOADS_FILE_SIZE)));
             upload.setUploadId(c.getLong(c.getColumnIndex(ProviderTableMeta._ID)));
             upload.setUploadStatus(
                     UploadStatus.fromValue(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_STATUS)))

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -139,6 +139,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String UPLOADS_LOCAL_PATH = "local_path";
         public static final String UPLOADS_REMOTE_PATH = "remote_path";
         public static final String UPLOADS_ACCOUNT_NAME = "account_name";
+        public static final String UPLOADS_FILE_SIZE = "file_size";
         public static final String UPLOADS_STATUS = "status";
         public static final String UPLOADS_LOCAL_BEHAVIOUR = "local_behaviour";
         public static final String UPLOADS_UPLOAD_TIME = "upload_time";

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -453,6 +453,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
                     // Save upload in database
                     OCUpload ocUpload = new OCUpload(files[i], account);
+                    ocUpload.setFileSize(files[i].getFileLength());
                     ocUpload.setForceOverwrite(forceOverwrite);
                     ocUpload.setCreateRemoteFolder(isCreateRemoteFolder);
                     ocUpload.setCreatedBy(createdBy);

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -847,6 +847,7 @@ private void createUploadsTable(SQLiteDatabase db){
                 + ProviderTableMeta.UPLOADS_LOCAL_PATH + " TEXT, "
                 + ProviderTableMeta.UPLOADS_REMOTE_PATH + " TEXT, "
                 + ProviderTableMeta.UPLOADS_ACCOUNT_NAME + " TEXT, "
+                + ProviderTableMeta.UPLOADS_FILE_SIZE + " LONG, "
                 + ProviderTableMeta.UPLOADS_STATUS + " INTEGER, "               // UploadStatus
                 + ProviderTableMeta.UPLOADS_LOCAL_BEHAVIOUR + " INTEGER, "      // Upload LocalBehaviour
                 + ProviderTableMeta.UPLOADS_UPLOAD_TIME + " INTEGER, "

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -229,7 +229,7 @@ private View getView(OCUpload[] uploadsItems, int position, View convertView, Vi
 
             // file size
             TextView fileSizeTextView = (TextView) view.findViewById(R.id.upload_file_size);
-            fileSizeTextView.setText(DisplayUtils.bytesToHumanReadable(remoteFile.length()) + ", ");
+            fileSizeTextView.setText(DisplayUtils.bytesToHumanReadable(upload.getFileSize()) + ", ");
 
             //* upload date
             TextView uploadDateTextView = (TextView) view.findViewById(R.id.upload_date);

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -354,8 +354,6 @@ public void setSwipeEnabled(boolean enabled) {
     }
 
     /**
-     * Disables FAB.
-     *
      * Sets the 'visibility' state of the FAB contained in the fragment.
      *
      * When 'false' is set, FAB visibility is set to View.GONE programatically,

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -144,7 +144,7 @@ public class FileDisplayActivity extends HookActivity
     private boolean mSyncInProgress = false;
 
     private static String DIALOG_UNTRUSTED_CERT = "DIALOG_UNTRUSTED_CERT";
-    private static String DIALOG_CREATE_FOLDER = "DIALOG_CREATE_FOLDER";
+    public static String DIALOG_CREATE_FOLDER = "DIALOG_CREATE_FOLDER";
     private static String DIALOG_UPLOAD_SOURCE = "DIALOG_UPLOAD_SOURCE";
     private static String DIALOG_CERT_NOT_SAVED = "DIALOG_CERT_NOT_SAVED";
 

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -22,6 +22,7 @@
 
 import java.util.ArrayList;
 
+import android.app.Activity;
 import android.os.Build;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -45,6 +46,7 @@
 import com.owncloud.android.ui.ExtendedListView;
 import com.owncloud.android.ui.activity.OnEnforceableRefreshListener;
 import com.owncloud.android.ui.adapter.FileListListAdapter;
+import com.owncloud.android.ui.dialog.CreateFolderDialogFragment;
 
 import third_parties.in.srain.cube.GridViewWithHeaderAndFooter;
 

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -36,7 +36,9 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.OCFile;
+import com.owncloud.android.datamodel.UploadsStorageManager;
 import com.owncloud.android.db.OCUpload;
+import com.owncloud.android.db.UploadResult;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.files.services.FileUploader.FileUploaderBinder;
 import com.owncloud.android.lib.common.network.WebdavUtils;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -35,7 +35,6 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
-
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
@@ -114,7 +113,6 @@ public class FileActivity extends AppCompatActivity
 
     protected static final long DELAY_TO_REQUEST_OPERATIONS_LATER = 200;
 
-
     /** OwnCloud {@link Account} where the main {@link OCFile} handled by the activity is located.*/
     private Account mAccount;
 
@@ -1062,4 +1060,5 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             }
         }
     }
+
 }

File: src/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -19,9 +19,7 @@
  */
 package com.owncloud.android.ui.fragment;
 
-import android.accounts.Account;
 import android.app.Activity;
-import android.content.Intent;
 import android.os.Bundle;
 import android.view.ContextMenu;
 import android.view.ContextMenu.ContextMenuInfo;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -1128,6 +1128,7 @@ uploadResult, upload, getResources()
                         AuthenticatorActivity.EXTRA_ACTION,
                         AuthenticatorActivity.ACTION_UPDATE_EXPIRED_TOKEN
                 );
+
                 updateAccountCredentials.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 updateAccountCredentials.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
                 updateAccountCredentials.addFlags(Intent.FLAG_FROM_BACKGROUND);
@@ -1171,7 +1172,7 @@ uploadResult, upload, getResources()
 //                }
             }
 
-            if (!uploadResult.isSuccess()) {
+            if (!uploadResult.isSuccess() && !needsToUpdateCredentials ) {
                 //in case of failure, do not show details file view (because there is no file!)
                 Intent showUploadListIntent = new Intent(this, UploadListActivity.class);
                 showUploadListIntent.putExtra(FileActivity.EXTRA_FILE, upload.getFile());
@@ -1266,5 +1267,4 @@ private void cancelUploadsForAccount(Account account) {
 //        retry(context, null);
 //    }
 
-
 }

File: src/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -19,9 +19,7 @@
  */
 package com.owncloud.android.ui.fragment;
 
-import android.accounts.Account;
 import android.app.Activity;
-import android.content.Intent;
 import android.os.Bundle;
 import android.view.ContextMenu;
 import android.view.ContextMenu.ContextMenuInfo;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -508,7 +508,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     ocUpload.setLocalAction(localAction);
                     /*ocUpload.setUseWifiOnly(isUseWifiOnly);
                     ocUpload.setWhileChargingOnly(isWhileChargingOnly);*/
-                    ocUpload.setUploadStatus(UploadStatus.UPLOAD_LATER);
+                    ocUpload.setUploadStatus(UploadStatus.UPLOAD_IN_PROGRESS);
 
                     // storagePath inside upload is the temporary path. file
                     // contains the correct path used as db reference.
@@ -572,7 +572,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 requestedUploads.add(uploadKey);
 
                 // Update upload in database
-                upload.setUploadStatus(UploadStatus.UPLOAD_LATER);
+                upload.setUploadStatus(UploadStatus.UPLOAD_IN_PROGRESS);
                 mUploadsStorageManager.updateUpload(upload);
             }
         }
@@ -680,7 +680,7 @@ private void cancel(String accountName, String remotePath, String localPath) {
                     OCUpload ocUpload =
                             mUploadsStorageManager.getUploadByLocalPath(localPath)[0];
                     // TODO bad idea, should search for account + remoteName, or uploadId
-                    ocUpload.setUploadStatus(UploadStatus.UPLOAD_CANCELLED);
+                    ocUpload.setUploadStatus(UploadStatus.UPLOAD_FAILED);
                     ocUpload.setLastResult(UploadResult.CANCELLED);
                     mUploadsStorageManager.updateUploadStatus(ocUpload);
                 }

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -337,8 +337,9 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             String remoteParentPath = new File(getRemotePath()).getParent();
             remoteParentPath = remoteParentPath.endsWith(OCFile.PATH_SEPARATOR) ?
                     remoteParentPath : remoteParentPath + OCFile.PATH_SEPARATOR;
-            RemoteOperationResult grantResult = grantFolderExistence(remoteParentPath, client);
-            if (!grantResult.isSuccess()) {
+            result = grantFolderExistence(remoteParentPath, client);
+            if (!result.isSuccess()) {
+
                 return result;
             }
 

File: src/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -33,6 +33,7 @@
 import com.owncloud.android.operations.UploadFileOperation;
 
 import java.io.File;
+import java.security.Provider;
 import java.util.Observable;
 
 /**
@@ -135,6 +136,7 @@ public long storeUpload(OCUpload ocUpload) {
         cv.put(ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY, ocUpload.isWhileChargingOnly() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_IS_WIFI_ONLY, ocUpload.isUseWifiOnly() ? 1 : 0);
         cv.put(ProviderTableMeta.UPLOADS_LAST_RESULT, ocUpload.getLastResult().getValue());
+        cv.put(ProviderTableMeta.UPLOADS_CREATED_BY, ocUpload.getCreadtedBy());
 
         Uri result = getDB().insert(ProviderTableMeta.CONTENT_URI_UPLOADS, cv);
 
@@ -459,6 +461,7 @@ private OCUpload createOCUploadFromCursor(Cursor c) {
                     c.getColumnIndex(ProviderTableMeta.UPLOADS_IS_WIFI_ONLY)) == 1);
             upload.setLastResult(UploadResult.fromValue(
                     c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_LAST_RESULT))));
+            upload.setCreatedBy(c.getInt(c.getColumnIndex(ProviderTableMeta.UPLOADS_CREATED_BY)));
         }
         return upload;
     }

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -147,8 +147,10 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String UPLOADS_IS_WIFI_ONLY = "is_wifi_only";
         public static final String UPLOADS_UPLOAD_TIMESTAMP = "upload_timestamp";
         public static final String UPLOADS_LAST_RESULT = "last_result";
+        public static final String UPLOADS_CREATED_BY = "created_by";
 
         //public static final String UPLOADS_DEFAULT_SORT_ORDER = UPLOADS_FILE_ID  + " collate nocase asc";
         public static final String UPLOADS_DEFAULT_SORT_ORDER = ProviderTableMeta._ID  + " collate nocase desc";
+
     }
 }

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -858,7 +858,9 @@ private void createUploadsTable(SQLiteDatabase db){
                 + ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + " INTEGER, "  // boolean
                 + ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + " INTEGER, " // boolean
                 + ProviderTableMeta.UPLOADS_UPLOAD_TIMESTAMP + " INTEGER, "
-                + ProviderTableMeta.UPLOADS_LAST_RESULT + " INTEGER );" );     // Upload LastResult
+                + ProviderTableMeta.UPLOADS_LAST_RESULT + " INTEGER, "     // Upload LastResult
+                + ProviderTableMeta.UPLOADS_CREATED_BY + " INTEGER );"    // Upload createdBy
+        );
 
 
         /* before:

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -172,8 +172,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 newDownload.addDatatransferProgressListener(this);
                 newDownload.addDatatransferProgressListener((FileDownloaderBinder) mBinder);
                 Pair<String, String> putResult = mPendingDownloads.putIfAbsent(
-                        account.name, file.getRemotePath(), newDownload, null
-                );
+                        account.name, file.getRemotePath(), newDownload);
                 if (putResult != null) {
                     String downloadKey = putResult.first;
                     requestedDownloads.add(downloadKey);

File: src/com/owncloud/android/services/SyncFolderHandler.java
Patch:
@@ -139,7 +139,7 @@ private void doOperation(Account account, String remotePath) {
     public void add(Account account, String remotePath,
                     SynchronizeFolderOperation syncFolderOperation){
         Pair<String, String> putResult =
-                mPendingOperations.putIfAbsent(account.name, remotePath, syncFolderOperation, null);
+                mPendingOperations.putIfAbsent(account.name, remotePath, syncFolderOperation);
         if (putResult != null) {
             sendBroadcastNewSyncFolder(account, remotePath);    // TODO upgrade!
         }

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -40,7 +40,6 @@
 import android.os.Process;
 import android.support.v4.app.NotificationCompat;
 import android.util.Pair;
-import android.webkit.MimeTypeMap;
 
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -203,7 +203,7 @@ public UploadFileOperation(Account account,
         mFile = obtainNewOCFileToUpload(
                 upload.getRemotePath(),
                 upload.getLocalPath(),
-                getMimeType()
+                upload.getMimeType()
         );
         mRemotePath = upload.getRemotePath();
         mChunked = chunked;

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -90,7 +90,7 @@ private void handleNewPictureAction(Context context, Intent intent) {
 
         Account account = AccountUtils.getCurrentOwnCloudAccount(context);
         if (account == null) {
-            Log_OC.w(TAG, "No ownCloud account found for instant upload, aborting");
+            Log_OC.w(TAG, "No account found for instant upload, aborting");
             return;
         }
 
@@ -159,7 +159,7 @@ private void handleNewVideoAction(Context context, Intent intent) {
 
         Account account = AccountUtils.getCurrentOwnCloudAccount(context);
         if (account == null) {
-            Log_OC.w(TAG, "No owncloud account found for instant upload, aborting");
+            Log_OC.w(TAG, "No account found for instant upload, aborting");
             return;
         }
 
@@ -203,7 +203,7 @@ private void handleConnectivityAction(Context context, Intent intent) {
         if (instantPictureUploadViaWiFiOnly(context) && !isConnectedViaWiFi(context)){
             Account account = AccountUtils.getCurrentOwnCloudAccount(context);
             if (account == null) {
-                Log_OC.w(TAG, "No owncloud account found for instant upload, aborting");
+                Log_OC.w(TAG, "No account found for instant upload, aborting");
                 return;
             }
 

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -394,7 +394,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 temporalFile.delete();
             }
             if (result == null){
-                return new RemoteOperationResult(false, 404, null);
+                result = new RemoteOperationResult(ResultCode.UNKNOWN_ERROR);
             }
             if (result.isSuccess()) {
                 Log_OC.i(TAG, "Upload of " + mOriginalStoragePath + " to " + mRemotePath + ": " +

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -231,7 +231,7 @@ public void onClick(View v) {
 
                 // Changing action button text color
                 View sbView = snackbar.getView();
-                TextView textView = (TextView) sbView.findViewById(android.support.design.R.id.snackbar_text);
+                TextView textView = (TextView) sbView.findViewById(android.support.design.R.id.snackbar_action);
                 textView.setTextColor(ContextCompat.getColor(this, R.color.white));
                 snackbar.show();
             } else {

File: src/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -109,7 +109,7 @@ private boolean passCodeShouldBeRequested(){
 
     private boolean passCodeIsEnabled() {
         SharedPreferences appPrefs = PreferenceManager.getDefaultSharedPreferences(MainApp.getAppContext());
-        return (appPrefs.getBoolean("set_pincode", false));
+        return (appPrefs.getBoolean(PassCodeActivity.PREFERENCE_SET_PASSCODE, false));
     }
 
 }

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -233,7 +233,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
 
-        if (mContainerActivity.getStorageManager() != null) {
+        if (mContainerActivity.getStorageManager() != null && getFile() != null) {
             // Update the file
             setFile(mContainerActivity.getStorageManager().getFileById(getFile().getFileId()));
 

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -233,7 +233,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
 
-        if (mContainerActivity.getStorageManager() != null) {
+        if (mContainerActivity.getStorageManager() != null && getFile() != null) {
             // Update the file
             setFile(mContainerActivity.getStorageManager().getFileById(getFile().getFileId()));
 

File: src/com/owncloud/android/authentication/PassCodeManager.java
Patch:
@@ -74,7 +74,7 @@ public void onActivityStarted(Activity activity) {
                 ){
 
             Intent i = new Intent(MainApp.getAppContext(), PassCodeActivity.class);
-            i.setAction(PassCodeActivity.ACTION_REQUEST);
+            i.setAction(PassCodeActivity.ACTION_CHECK);
             i.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
             activity.startActivity(i);
 

File: src/com/owncloud/android/datamodel/UploadsStorageManager.java
Patch:
@@ -503,7 +503,7 @@ public void setAllCurrentToUploadLater() {
                 },
                 null
         );
-        updateUploadInternal(c, UploadStatus.UPLOAD_LATER, null);
+        updateUploadInternal(c, UploadStatus.UPLOAD_LATER, UploadResult.UNKNOWN);
     }
 
 }

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -229,6 +229,9 @@ public void onClick(View v) {
                                     mParentActivity.startActivity(updateAccountCredentials);
                                 }
                             });
+                        } else  if (upload.getLastResult() == UploadResult.FOLDER_ERROR) {
+                            status = mParentActivity.getString(
+                                    R.string.uploads_view_upload_status_failed_folder_error);
                         } else {
                             status = "Upload failed: " + upload.getLastResult().toString();
                         }

File: src/com/owncloud/android/db/OCUpload.java
Patch:
@@ -341,7 +341,7 @@ public boolean userCanRetryUpload() {
 
 
     /****
-     * PARCELABLE METHODS
+     *
      */
     public static final Parcelable.Creator<OCUpload> CREATOR = new Parcelable.Creator<OCUpload>() {
 

File: src/com/owncloud/android/db/UploadResult.java
Patch:
@@ -78,15 +78,16 @@ public static UploadResult fromOperationResult(RemoteOperationResult result){
             case WRONG_CONNECTION:
                 return NETWORK_CONNECTION;
             case ACCOUNT_EXCEPTION:
+            case UNAUTHORIZED:
                 return CREDENTIAL_ERROR;
 //            case
 //                return FOLDER_ERROR;
             case CONFLICT:
                 return CONFLICT_ERROR;
             case FILE_NOT_FOUND:
                 return FILE_ERROR;
-            case UNAUTHORIZED:
-                return PRIVILEDGES_ERROR;
+//            case UNAUTHORIZED:
+//                return PRIVILEDGES_ERROR;
             case CANCELLED:
                 return CANCELLED;
         }

File: src/com/owncloud/android/files/services/FileUploadService.java
Patch:
@@ -871,7 +871,7 @@ public void uploadFile(String uploadKey) {
                 notifyUploadStart(mCurrentUpload);
 
                 RemoteOperationResult uploadResult = null, grantResult;
-                
+
                 try {
                     /// prepare client object to send the request to the ownCloud server
                     if (mCurrentAccount == null || !mCurrentAccount.equals(mCurrentUpload.getAccount())) {

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -46,6 +46,7 @@
 import com.owncloud.android.ui.fragment.EditShareFragment;
 import com.owncloud.android.ui.fragment.SearchShareesFragment;
 import com.owncloud.android.ui.fragment.ShareFileFragment;
+import com.owncloud.android.ui.fragment.ShareFragmentListener;
 import com.owncloud.android.utils.GetShareWithUsersAsyncTask;
 
 import org.apache.http.protocol.HTTP;
@@ -56,8 +57,7 @@
  */
 
 public class ShareActivity extends FileActivity
-        implements ShareFileFragment.OnShareFragmentInteractionListener,
-        SearchShareesFragment.OnSearchFragmentInteractionListener {
+        implements ShareFragmentListener {
 
     private static final String TAG = ShareActivity.class.getSimpleName();
 

File: src/com/owncloud/android/files/services/FileUploadService.java
Patch:
@@ -152,7 +152,7 @@ public class FileUploadService extends Service implements OnDatatransferProgress
     
     public static final String KEY_LOCAL_BEHAVIOUR = "BEHAVIOUR";
 
-    public static final String KEY_INSTANT_UPLOAD = "INSTANT_UPLOAD";
+    //public static final String KEY_INSTANT_UPLOAD = "INSTANT_UPLOAD";
 
     public static final int LOCAL_BEHAVIOUR_COPY = 0;
     public static final int LOCAL_BEHAVIOUR_MOVE = 1;
@@ -401,7 +401,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         mStorageManager = new FileDataStorageManager(account, getContentResolver());
 
         boolean forceOverwrite = intent.getBooleanExtra(KEY_FORCE_OVERWRITE, false);
-        boolean isInstant = intent.getBooleanExtra(KEY_INSTANT_UPLOAD, false);
+     //   boolean isInstant = intent.getBooleanExtra(KEY_INSTANT_UPLOAD, false);
         int localAction = intent.getIntExtra(KEY_LOCAL_BEHAVIOUR, LOCAL_BEHAVIOUR_FORGET);
 
         boolean isCreateRemoteFolder = intent.getBooleanExtra(KEY_CREATE_REMOTE_FOLDER, false);
@@ -461,7 +461,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                         localAction, // Change for compilation
                         getApplicationContext()
                 );
-                if (isInstant) {
+                if (isCreateRemoteFolder) {
                     newUpload.setRemoteFolderToBeCreated();
                 }
                 newUpload.addDatatransferProgressListener(this);

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.operations.SynchronizeFileOperation;
 import com.owncloud.android.operations.SynchronizeFolderOperation;
 import com.owncloud.android.operations.UnshareOperation;
+import com.owncloud.android.operations.UpdateSharePermissionsOperation;
 import com.owncloud.android.operations.UpdateShareViaLinkOperation;
 import com.owncloud.android.operations.UploadFileOperation;
 
@@ -204,7 +205,8 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 message = res.getString(R.string.unshare_link_file_error);
             }
 
-        } else if (operation instanceof UpdateShareViaLinkOperation) {
+        } else if (operation instanceof UpdateShareViaLinkOperation ||
+                    operation instanceof UpdateSharePermissionsOperation) {
 
             if (result.getData() != null && result.getData().size() > 0) {
                 message = (String) result.getData().get(0);     // share API sends its own error messages

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -53,7 +53,7 @@ public class DisplayUtils {
     private static final String OWNCLOUD_APP_NAME = "ownCloud";
     
     private static final String[] sizeSuffixes = { "B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB" };
-    private static final int[] sizeScales = { 0, 0, 0, 1, 1, 2, 2, 2, 2 };
+    private static final int[] sizeScales = { 0, 0, 1, 1, 1, 2, 2, 2, 2 };
 
     private static Map<String, String> mimeType2HumanReadable;
 

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -852,7 +852,7 @@ private void createUploadsTable(SQLiteDatabase db){
                 + ProviderTableMeta.UPLOADS_FORCE_OVERWRITE + " INTEGER, "  // boolean
                 + ProviderTableMeta.UPLOADS_IS_CREATE_REMOTE_FOLDER + " INTEGER, "  // boolean
                 + ProviderTableMeta.UPLOADS_IS_WHILE_CHARGING_ONLY + " INTEGER, "  // boolean
-                + ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + "INTEGER, " // boolean
+                + ProviderTableMeta.UPLOADS_IS_WIFI_ONLY + " INTEGER, " // boolean
                 + ProviderTableMeta.UPLOADS_UPLOAD_TIMESTAMP + " INTEGER, "
                 + ProviderTableMeta.UPLOADS_LAST_RESULT + " INTEGER );" );     // Upload LastResult
 

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -154,7 +154,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
         mForgottenLocalFiles = new HashMap<String, String>();
         mSyncResult = syncResult;
         mSyncResult.fullSyncRequested = false;
-        mSyncResult.delayUntil = 60*60*24; // avoid too many automatic synchronizations
+        mSyncResult.delayUntil = (System.currentTimeMillis()/1000) + 3*60*60; // avoid too many automatic synchronizations
 
         this.setAccount(account);
         this.setContentProviderClient(providerClient);

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -332,9 +332,9 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             // location in the ownCloud local folder
             if (result.isSuccess()) {
                 if (mLocalBehaviour == FileUploader.LOCAL_BEHAVIOUR_FORGET) {
-                    mFile.setStoragePath(null);
+                    mFile.setStoragePath("");
                 } else if (mLocalBehaviour == FileUploader.LOCAL_BEHAVIOUR_REMOVE){
-                    mFile.setStoragePath(null);
+                    mFile.setStoragePath("");
                     originalFile.delete();
                 } else {
                     mFile.setStoragePath(expectedPath);

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -172,7 +172,7 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
             refreshSharesFromStorageManager();
         }
 
-        if (operation instanceof CreateShareViaLinkOperation) {
+        if (operation instanceof CreateShareViaLinkOperation && result.isSuccess()) {
             // Send link to the app
             String link = ((OCShare) (result.getData().get(0))).getShareLink();
             Log_OC.d(TAG, "Share link = " + link);

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -102,8 +102,10 @@ protected void onNewIntent(Intent intent) {
 
         } else if (UsersAndGroupsSearchProvider.ACTION_SHARE_WITH.equals(intent.getAction())) {
             Uri data = intent.getData();
+            String dataString = intent.getDataString();
+            String shareWith = dataString.substring(dataString.lastIndexOf('/') + 1);
             doShareWith(
-                    data.getLastPathSegment(),
+                    shareWith,
                     UsersAndGroupsSearchProvider.DATA_GROUP.equals(data.getAuthority())
             );
 

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -21,6 +21,7 @@
 
 import android.accounts.Account;
 import android.app.Activity;
+import android.content.ContentResolver;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.media.MediaMetadataRetriever;
@@ -439,8 +440,7 @@ private void playVideo() {
 
         // load the video file in the video player ; 
         // when done, VideoHelper#onPrepared() will be called
-        Uri uri = Uri.parse(getFile().getStoragePath());
-        mVideoPreview.setVideoPath(uri.encode(getFile().getStoragePath()));
+        mVideoPreview.setVideoURI(getFile().getStorageUri());
     }
 
 
@@ -491,7 +491,7 @@ public void onCompletion(MediaPlayer mp) {
                         mVideoPreview.stopPlayback();
                         mAutoplay = false;
                         mSavedPlaybackPosition = 0;
-                        mVideoPreview.setVideoPath(getFile().getStoragePath());
+                        mVideoPreview.setVideoURI(getFile().getStorageUri());
                     }
                 }
             } // else : called from onError()

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -225,8 +225,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         }
 
                     } else { //Folder
-                        fileSizeSeparatorV.setVisibility(View.INVISIBLE);
-                        fileSizeV.setVisibility(View.INVISIBLE);
+                        fileSizeSeparatorV.setVisibility(View.GONE);
+                        fileSizeV.setVisibility(View.GONE);
                     }
 
                 case GRID_ITEM:

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -120,9 +120,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             }
             fileIcon.setTag(file.hashCode());
 
-            TextView fileSizeV = (TextView) view.findViewById(R.id.file_size);
+            TextView fileSizeV = (TextView) view.findViewById(R.id.last_size);
             TextView fileSizeSeparatorV = (TextView) view.findViewById(R.id.file_separator);
-            TextView lastModV = (TextView) view.findViewById(R.id.last_mod);
+            TextView lastModV = (TextView) view.findViewById(R.id.file_mod);
             ImageView checkBoxV = (ImageView) view.findViewById(R.id.custom_checkbox);
             if (!file.isDirectory()) {
                 fileSizeSeparatorV.setVisibility(View.VISIBLE);

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -193,9 +193,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             switch (viewType){
                 case LIST_ITEM:
-                    TextView fileSizeV = (TextView) view.findViewById(R.id.file_size);
+                    TextView fileSizeV = (TextView) view.findViewById(R.id.last_size);
                     TextView fileSizeSeparatorV = (TextView) view.findViewById(R.id.file_separator);
-                    TextView lastModV = (TextView) view.findViewById(R.id.last_mod);
+                    TextView lastModV = (TextView) view.findViewById(R.id.file_mod);
                     ImageView checkBoxV = (ImageView) view.findViewById(R.id.custom_checkbox);
 
                     lastModV.setVisibility(View.VISIBLE);

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -147,9 +147,9 @@ protected void onSaveInstanceState(Bundle outState) {
     }
 
     @Override
-    public void showSearchUsersAndGroups(ArrayList<OCShare> shares) {
+    public void showSearchUsersAndGroups() {
         FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
-        mSearchFragment = SearchShareesFragment.newInstance(getFile(), getAccount(), shares);
+        mSearchFragment = SearchShareesFragment.newInstance(getFile(), getAccount());
         ft.hide(mShareFileFragment);
         ft.add(R.id.share_fragment_container, mSearchFragment, TAG_SEARCH_FRAGMENT);
         ft.addToBackStack(TAG_SEARCH_FRAGMENT);

File: src/com/owncloud/android/ui/activity/FolderPickerActivity.java
Patch:
@@ -408,10 +408,8 @@ private void onCreateFolderOperationFinish(
             ) {
         
         if (result.isSuccess()) {
-            dismissLoadingDialog();
             refreshListOfFilesFragment();
         } else {
-            dismissLoadingDialog();
             try {
                 Toast msg = Toast.makeText(FolderPickerActivity.this, 
                         ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()), 

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -607,10 +607,8 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
     private void onCreateFolderOperationFinish(CreateFolderOperation operation,
                                                RemoteOperationResult result) {
         if (result.isSuccess()) {
-            dismissLoadingDialog();
             populateDirectoryList();
         } else {
-            dismissLoadingDialog();
             try {
                 Toast msg = Toast.makeText(this, 
                         ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()), 

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1348,9 +1348,9 @@ public void saveSharesDB(ArrayList<OCShare> shares) {
         String filePath = "";
         for (OCShare share: shares) {
             if (filePath != share.getPath()){
+                filePath = share.getPath();
                 resetShareFlagInAFile(filePath);
                 operations = prepareRemoveSharesInFile(filePath, operations);
-                filePath = share.getPath();
             }
         }
 
@@ -1453,7 +1453,7 @@ public void saveSharesInFolder(ArrayList<OCShare> shares, OCFile folder) {
                 Log_OC.e(TAG, "Exception in batch of operations " + e.getMessage());
 
             } catch (RemoteException e) {
-                Log_OC.e(TAG, "Exception in batch of operations  " + e.getMessage());
+
             }
         }
 

File: src/com/owncloud/android/ui/activity/ShareActivity.java
Patch:
@@ -163,7 +163,7 @@ public void onBackPressed() {
         if (mSearchFragment != null){
             getSupportFragmentManager().popBackStackImmediate();
             mSearchFragment = null;
-            mShareFileFragment.refreshUsersOrGroupsList();
+            mShareFileFragment.refreshUsersOrGroupsListFromDB();
         }
     }
 

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -218,8 +218,6 @@ private void updateListOfUserGroups() {
      * Get users and groups from the server to fill in the "share with" list
      */
     public void refreshUsersOrGroupsListFromServer(){
-        mShares = new ArrayList<>();
-
         // Show loading
         ((ShareActivity) getActivity()).showLoadingDialog(getString(R.string.common_loading));
         // Get Users and Groups

File: src/com/owncloud/android/operations/CreateShareViaLinkOperation.java
Patch:
@@ -116,7 +116,8 @@ public Intent getSendIntent() {
 
     public Intent getSendIntentWithSubject(Context context) {
         if (context != null && mSendIntent != null && mSendIntent.getStringExtra(Intent.EXTRA_SUBJECT) != null) {
-            if (getClient() == null || getClient().getCredentials().getUsername() == null) {
+            if (getClient() == null || getClient().getCredentials() == null ||
+                    getClient().getCredentials().getUsername() == null) {
                 mSendIntent.putExtra(
                         Intent.EXTRA_SUBJECT,
                         context.getString(R.string.subject_shared_with_you, mFileName)

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.files.services.FileUploader.FileUploaderBinder;
 import com.owncloud.android.lib.common.network.WebdavUtils;
 import com.owncloud.android.lib.common.utils.Log_OC;
+import com.owncloud.android.lib.resources.shares.ShareType;
 import com.owncloud.android.lib.resources.status.OwnCloudVersion;
 import com.owncloud.android.services.OperationsService;
 import com.owncloud.android.services.observer.FileObserverService;
@@ -212,6 +213,8 @@ public void unshareFileWithLink(OCFile file) {
             service.setAction(OperationsService.ACTION_UNSHARE);
             service.putExtra(OperationsService.EXTRA_ACCOUNT, mFileActivity.getAccount());
             service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
+            service.putExtra(OperationsService.EXTRA_SHARE_TYPE, ShareType.PUBLIC_LINK);
+            service.putExtra(OperationsService.EXTRA_SHARE_WITH, "");
             mWaitingForOpId = mFileActivity.getOperationsServiceBinder().queueNewOperation(service);
             
             mFileActivity.showLoadingDialog(mFileActivity.getApplicationContext().

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -36,7 +36,7 @@
 import com.owncloud.android.operations.RenameFileOperation;
 import com.owncloud.android.operations.SynchronizeFileOperation;
 import com.owncloud.android.operations.SynchronizeFolderOperation;
-import com.owncloud.android.operations.UnshareLinkOperation;
+import com.owncloud.android.operations.UnshareOperation;
 import com.owncloud.android.operations.UploadFileOperation;
 
 import org.apache.commons.httpclient.ConnectTimeoutException;
@@ -187,7 +187,7 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
                 message = res.getString(R.string.share_link_file_error);
             }
 
-        } else if (operation instanceof UnshareLinkOperation) {
+        } else if (operation instanceof UnshareOperation) {
 
             if (result.getCode() == ResultCode.SHARE_NOT_FOUND)  {      // Error --> SHARE_NOT_FOUND
                 message = res.getString(R.string.unshare_link_file_no_exist);

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -252,7 +252,8 @@ public void onClick(View v) {
     }
 
     private void unshareWith(int shareId){
-        ( (ShareActivity) getActivity()).showWaitingLoadDialog();
+        ( (ShareActivity) getActivity()).showLoadingDialog(getActivity().getApplicationContext().
+                getString(R.string.common_loading));
         // Remove Share with id
         UnshareWithUserAsyncTask unshareTask = new UnshareWithUserAsyncTask(this);
         FileDataStorageManager fileDataStorageManager =
@@ -264,7 +265,7 @@ private void unshareWith(int shareId){
     @Override
     public void onUnshareWithFinish(RemoteOperationResult result) {
         // Remove loading
-        ((ShareActivity) getActivity()).dismissWaitingLoadDialog();
+        ((ShareActivity) getActivity()).dismissLoadingDialog();
 
         if (result != null && result.isSuccess()) {
             // Refresh data

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -1435,7 +1435,7 @@ public ArrayList<OCShare> getSharesWithForAFile(String filePath, String accountN
                 c = null;
             }
         }
-        ArrayList<OCShare> shares = new ArrayList<>();
+        ArrayList<OCShare> shares = new ArrayList<OCShare>();
         OCShare share = null;
         if (c.moveToFirst()) {
             do {

File: src/com/owncloud/android/ui/fragment/ShareFileFragment.java
Patch:
@@ -189,8 +189,8 @@ public void onDetach() {
     }
 
     // Get users and groups to fill the "share with" list
-    private void getShares() {
-        mShares = new ArrayList<>();
+    private void getShares(){
+        mShares = new ArrayList<OCShare>();
 
         // Get Users and Groups
         FileDataStorageManager fileDataStorageManager =

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -72,7 +72,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String FILE_REMOTE_ID = "remote_id";
         public static final String FILE_UPDATE_THUMBNAIL = "update_thumbnail";
         public static final String FILE_IS_DOWNLOADING= "is_downloading";
-        public static final String FILE_IN_CONFLICT = "in_conflict";
+        public static final String FILE_ETAG_IN_CONFLICT = "etag_in_conflict";
 
         public static final String FILE_DEFAULT_SORT_ORDER = FILE_NAME
                 + " collate nocase asc";

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -471,7 +471,7 @@ private void saveDownloadedFile() {
         file.setRemoteId(mCurrentDownload.getFile().getRemoteId());
         mStorageManager.saveFile(file);
         mStorageManager.triggerMediaScan(file.getStoragePath());
-        mStorageManager.saveConflict(file, false);
+        mStorageManager.saveConflict(file, null);
     }
 
     /**

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -392,7 +392,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 }
                 updatedFile.setPublicLink(localFile.getPublicLink());
                 updatedFile.setShareByLink(localFile.isShareByLink());
-                updatedFile.setInConflict(localFile.isInConflict());
+                updatedFile.setEtagInConflict(localFile.getEtagInConflict());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -222,7 +222,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 //if (!mLocalFile.getEtag().isEmpty() && localChanged && serverChanged) {
                 if (localChanged && serverChanged) {
                     result = new RemoteOperationResult(ResultCode.SYNC_CONFLICT);
-                    getStorageManager().saveConflict(mLocalFile, true);
+                    getStorageManager().saveConflict(mLocalFile, mServerFile.getEtag());
 
                 } else if (localChanged) {
                     if (mSyncFileContents && mAllowUploads) {
@@ -265,7 +265,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
                 // safe blanket: sync'ing a not in-conflict file will clean wrong conflict markers in ancestors
                 if (result.getCode() != ResultCode.SYNC_CONFLICT) {
-                    getStorageManager().saveConflict(mLocalFile, false);
+                    getStorageManager().saveConflict(mLocalFile, null);
                 }
             }
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -340,7 +340,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 }
                 updatedFile.setPublicLink(localFile.getPublicLink());
                 updatedFile.setShareByLink(localFile.isShareByLink());
-                updatedFile.setInConflict(localFile.isInConflict());
+                updatedFile.setEtagInConflict(localFile.getEtagInConflict());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");
@@ -404,7 +404,7 @@ private void prepareOpsFromLocalKnowledge() throws OperationCancelledException {
                     /// this should result in direct upload of files that were locally modified
                     SynchronizeFileOperation operation = new SynchronizeFileOperation(
                             child,
-                            (child.isInConflict() ? null : child),
+                            (child.getEtagInConflict() != null ? child : null),
                             mAccount,
                             true,
                             mContext

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -311,10 +311,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     (new File(mFile.getStoragePath())).length() >
                             ChunkedUploadRemoteFileOperation.CHUNK_SIZE ) {
                 mUploadOperation = new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtag());
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtag());
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             }
             Iterator <OnDatatransferProgressListener> listener = mDataTransferListeners.iterator();
             while (listener.hasNext()) {

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -283,7 +283,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         );
                         localStateView.setVisibility(View.VISIBLE);
 
-                    } else if (file.isInConflict()) {   // conflict
+                    } else if (file.getEtagInConflict() != null) {   // conflict
                         localStateView.setImageResource(R.drawable.conflict_file_indicator);
                         localStateView.setVisibility(View.VISIBLE);
 

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -72,7 +72,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String FILE_REMOTE_ID = "remote_id";
         public static final String FILE_UPDATE_THUMBNAIL = "update_thumbnail";
         public static final String FILE_IS_DOWNLOADING= "is_downloading";
-        public static final String FILE_IN_CONFLICT = "in_conflict";
+        public static final String FILE_ETAG_IN_CONFLICT = "etag_in_conflict";
 
         public static final String FILE_DEFAULT_SORT_ORDER = FILE_NAME
                 + " collate nocase asc";

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -471,7 +471,7 @@ private void saveDownloadedFile() {
         file.setRemoteId(mCurrentDownload.getFile().getRemoteId());
         mStorageManager.saveFile(file);
         mStorageManager.triggerMediaScan(file.getStoragePath());
-        mStorageManager.saveConflict(file, false);
+        mStorageManager.saveConflict(file, null);
     }
 
     /**

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -392,7 +392,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 }
                 updatedFile.setPublicLink(localFile.getPublicLink());
                 updatedFile.setShareByLink(localFile.isShareByLink());
-                updatedFile.setInConflict(localFile.isInConflict());
+                updatedFile.setEtagInConflict(localFile.getEtagInConflict());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -222,7 +222,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 //if (!mLocalFile.getEtag().isEmpty() && localChanged && serverChanged) {
                 if (localChanged && serverChanged) {
                     result = new RemoteOperationResult(ResultCode.SYNC_CONFLICT);
-                    getStorageManager().saveConflict(mLocalFile, true);
+                    getStorageManager().saveConflict(mLocalFile, mServerFile.getEtag());
 
                 } else if (localChanged) {
                     if (mSyncFileContents && mAllowUploads) {
@@ -265,7 +265,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
                 // safe blanket: sync'ing a not in-conflict file will clean wrong conflict markers in ancestors
                 if (result.getCode() != ResultCode.SYNC_CONFLICT) {
-                    getStorageManager().saveConflict(mLocalFile, false);
+                    getStorageManager().saveConflict(mLocalFile, null);
                 }
             }
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -340,7 +340,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 }
                 updatedFile.setPublicLink(localFile.getPublicLink());
                 updatedFile.setShareByLink(localFile.isShareByLink());
-                updatedFile.setInConflict(localFile.isInConflict());
+                updatedFile.setEtagInConflict(localFile.getEtagInConflict());
             } else {
                 // remote eTag will not be updated unless file CONTENTS are synchronized
                 updatedFile.setEtag("");
@@ -404,7 +404,7 @@ private void prepareOpsFromLocalKnowledge() throws OperationCancelledException {
                     /// this should result in direct upload of files that were locally modified
                     SynchronizeFileOperation operation = new SynchronizeFileOperation(
                             child,
-                            (child.isInConflict() ? null : child),
+                            (child.getEtagInConflict() != null ? null : child),
                             mAccount,
                             true,
                             mContext

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -311,10 +311,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     (new File(mFile.getStoragePath())).length() >
                             ChunkedUploadRemoteFileOperation.CHUNK_SIZE ) {
                 mUploadOperation = new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtag());
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             } else {
                 mUploadOperation = new UploadRemoteFileOperation(mFile.getStoragePath(),
-                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtag());
+                        mFile.getRemotePath(), mFile.getMimetype(), mFile.getEtagInConflict());
             }
             Iterator <OnDatatransferProgressListener> listener = mDataTransferListeners.iterator();
             while (listener.hasNext()) {

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -283,7 +283,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         );
                         localStateView.setVisibility(View.VISIBLE);
 
-                    } else if (file.isInConflict()) {   // conflict
+                    } else if (file.getEtagInConflict() != null) {   // conflict
                         localStateView.setImageResource(R.drawable.conflict_file_indicator);
                         localStateView.setVisibility(View.VISIBLE);
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1541,6 +1541,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
                 OCFile syncedFile = operation.getLocalFile();
                 onTransferStateChanged(syncedFile, true, true);
                 invalidateOptionsMenu();
+                refreshShowDetails();
             }
         }
     }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1541,6 +1541,7 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
                 OCFile syncedFile = operation.getLocalFile();
                 onTransferStateChanged(syncedFile, true, true);
                 invalidateOptionsMenu();
+                refreshShowDetails();
             }
         }
     }

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -238,7 +238,7 @@ public static String getErrorCauseMessage(RemoteOperationResult result,
 
                 } else {    // Generic error
                     // Show a Message, operation finished without success
-                    message = String.format(res.getString(R.string.download_folder_failed_content),
+                    message = String.format(res.getString(R.string.sync_folder_failed_content),
                             folderPathName);
                 }
             }

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1373,6 +1373,7 @@ private void onGetOAuthAccessTokenFinish(RemoteOperationResult result) {
     public void onAuthenticatorTaskCallback(RemoteOperationResult result) {
         mWaitingForOpId = Long.MAX_VALUE;
         dismissDialog(WAIT_DIALOG_TAG);
+        mAsyncTask = null;
 
         if (result.isSuccess()) {
             Log_OC.d(TAG, "Successful access - time to save the account");

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -476,7 +476,7 @@ protected LoadImage doInBackground(OCFile... params) {
 
         @Override
         protected void onCancelled(LoadImage result) {
-            if (result.bitmap != null) {
+            if (result != null && result.bitmap != null) {
                 result.bitmap.recycle();
             }
         }

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -46,12 +46,12 @@
  * Static methods to help in access to local file system.
  */
 public class FileStorageUtils {
-    public static Integer mSortOrder;
-    public static Boolean mSortAscending;
     public static final Integer SORT_NAME = 0;
     public static final Integer SORT_DATE = 1;
     public static final Integer SORT_SIZE = 2;
-  
+    public static Integer mSortOrder = SORT_NAME;
+    public static Boolean mSortAscending = true;
+
     
     //private static final String LOG_TAG = "FileStorageUtils";
 

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -46,12 +46,12 @@
  * Static methods to help in access to local file system.
  */
 public class FileStorageUtils {
-    public static Integer mSortOrder;
-    public static Boolean mSortAscending;
     public static final Integer SORT_NAME = 0;
     public static final Integer SORT_DATE = 1;
     public static final Integer SORT_SIZE = 2;
-  
+    public static Integer mSortOrder = SORT_NAME;
+    public static Boolean mSortAscending = true;
+
     
     //private static final String LOG_TAG = "FileStorageUtils";
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1373,6 +1373,7 @@ private void onGetOAuthAccessTokenFinish(RemoteOperationResult result) {
     public void onAuthenticatorTaskCallback(RemoteOperationResult result) {
         mWaitingForOpId = Long.MAX_VALUE;
         dismissDialog(WAIT_DIALOG_TAG);
+        mAsyncTask = null;
 
         if (result.isSuccess()) {
             Log_OC.d(TAG, "Successful access - time to save the account");

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -476,7 +476,7 @@ protected LoadImage doInBackground(OCFile... params) {
 
         @Override
         protected void onCancelled(LoadImage result) {
-            if (result.bitmap != null) {
+            if (result != null && result.bitmap != null) {
                 result.bitmap.recycle();
             }
         }

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -74,8 +74,8 @@ public class ThumbnailsCacheManager {
 
     public static Bitmap mDefaultImg = 
             BitmapFactory.decodeResource(
-                    MainApp.getAppContext().getResources(), 
-                    DisplayUtils.getFileTypeIconId("image/png", "default.png")
+                    MainApp.getAppContext().getResources(),
+                    R.drawable.file_image
             );
 
     

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 /**
  * This Adapter populates a ListView with all files and directories contained
@@ -159,7 +160,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         }
                     }
                 } else {
-                    fileIcon.setImageResource(DisplayUtils.getFileTypeIconId(null, file.getName()));
+                    fileIcon.setImageResource(MimetypeIconUtil.getFileTypeIconId(null, file.getName()));
                 }  
 
             } else {

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -48,6 +48,7 @@
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.lang.ref.WeakReference;
 
@@ -403,7 +404,7 @@ private void setFiletype(String mimetype, String filename) {
         }
         ImageView iv = (ImageView) getView().findViewById(R.id.fdIcon);
         if (iv != null) {
-            iv.setImageResource(DisplayUtils.getFileTypeIconId(mimetype, filename));
+            iv.setImageResource(MimetypeIconUtil.getFileTypeIconId(mimetype, filename));
         }
     }
 

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -74,8 +74,8 @@ public class ThumbnailsCacheManager {
 
     public static Bitmap mDefaultImg = 
             BitmapFactory.decodeResource(
-                    MainApp.getAppContext().getResources(), 
-                    DisplayUtils.getFileTypeIconId("image/png", "default.png")
+                    MainApp.getAppContext().getResources(),
+                    R.drawable.file_image
             );
 
     

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 /**
  * This Adapter populates a ListView with all files and directories contained
@@ -161,7 +162,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         }
                     }
                 } else {
-                    fileIcon.setImageResource(DisplayUtils.getFileTypeIconId(null, file.getName()));
+                    fileIcon.setImageResource(MimetypeIconUtil.getFileTypeIconId(null, file.getName()));
                 }  
 
             } else {

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -48,6 +48,7 @@
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.lang.ref.WeakReference;
 
@@ -403,7 +404,7 @@ private void setFiletype(String mimetype, String filename) {
         }
         ImageView iv = (ImageView) getView().findViewById(R.id.fdIcon);
         if (iv != null) {
-            iv.setImageResource(DisplayUtils.getFileTypeIconId(mimetype, filename));
+            iv.setImageResource(MimetypeIconUtil.getFileTypeIconId(mimetype, filename));
         }
     }
 

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -55,6 +55,7 @@
 import com.owncloud.android.ui.activity.ComponentsGetter;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.FileStorageUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 
 /**
@@ -329,7 +330,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
 
                 } else {
-                    fileIcon.setImageResource(DisplayUtils.getFileTypeIconId(file.getMimetype(),
+                    fileIcon.setImageResource(MimetypeIconUtil.getFileTypeIconId(file.getMimetype(),
                             file.getFileName()));
                 }
 
@@ -344,7 +345,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     fileIcon.setImageResource(R.drawable.folder_public);
                 } else {
                     fileIcon.setImageResource(
-                            DisplayUtils.getFileTypeIconId(file.getMimetype(), file.getFileName())
+                            MimetypeIconUtil.getFileTypeIconId(file.getMimetype(), file.getFileName())
                     );
                 }
             }

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 /**
  * This Adapter populates a ListView with all files and directories contained
@@ -159,7 +160,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         }
                     }
                 } else {
-                    fileIcon.setImageResource(DisplayUtils.getFileTypeIconId(null, file.getName()));
+                    fileIcon.setImageResource(MimetypeIconUtil.getFileTypeIconId(null, file.getName()));
                 }  
 
             } else {

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -48,6 +48,7 @@
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;
 import com.owncloud.android.ui.dialog.RenameFileDialogFragment;
 import com.owncloud.android.utils.DisplayUtils;
+import com.owncloud.android.utils.MimetypeIconUtil;
 
 import java.lang.ref.WeakReference;
 
@@ -403,7 +404,7 @@ private void setFiletype(String mimetype, String filename) {
         }
         ImageView iv = (ImageView) getView().findViewById(R.id.fdIcon);
         if (iv != null) {
-            iv.setImageResource(DisplayUtils.getFileTypeIconId(mimetype, filename));
+            iv.setImageResource(MimetypeIconUtil.getFileTypeIconId(mimetype, filename));
         }
     }
 

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -254,7 +254,7 @@ public static Vector<OCFile> sortByName(Vector<OCFile> files){
         Collections.sort(files, new Comparator<OCFile>() {
             public int compare(OCFile o1, OCFile o2) {
                 if (o1.isFolder() && o2.isFolder()) {
-                    return val * o1.getRemotePath().toLowerCase().compareTo(o2.getRemotePath().toLowerCase());
+                    return val * new AlphanumComparator().compare(o1, o2);
                 } else if (o1.isFolder()) {
                     return -1;
                 } else if (o2.isFolder()) {

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -335,6 +335,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             } else {
                 // Folder
+                fileIcon.setBackground(null);
+
                 if (checkIfFileIsSharedWithMe(file)) {
                     fileIcon.setImageResource(R.drawable.shared_with_me_folder);
                 } else if (file.isShareByLink()) {

File: src/com/owncloud/android/ui/dialog/parcel/MenuItemParcelable.java
Patch:
@@ -13,7 +13,6 @@ public MenuItemParcelable() {}
     public MenuItemParcelable(MenuItem menuItem) {
         mMenuItemId = menuItem.getItemId();
         mMenuText = menuItem.getTitle().toString();
-        menuItem.getMenuInfo();
     }
 
     public MenuItemParcelable(Parcel read) {

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -193,7 +193,6 @@ private void showFileAction(int fileIndex) {
                 }
             }
 
-            MenuItem menuItem = new DialogMenuItem(item.getItemId());
             FileActionsDialogFragment dialog = FileActionsDialogFragment.newInstance(menu, fileIndex);
             dialog.setTargetFragment(this, 0);
             dialog.show(getFragmentManager(), FileActionsDialogFragment.FTAG_FILE_ACTIONS);

File: src/com/owncloud/android/operations/CopyFileOperation.java
Patch:
@@ -71,7 +71,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
         /// 1. check copy validity
         if (mTargetParentPath.startsWith(mSrcPath)) {
-            return new RemoteOperationResult(ResultCode.INVALID_MOVE_INTO_DESCENDANT);
+            return new RemoteOperationResult(ResultCode.INVALID_COPY_INTO_DESCENDANT);
         }
         mFile = getStorageManager().getFileByPath(mSrcPath);
         if (mFile == null) {

File: src/com/owncloud/android/ui/activity/CopyActivity.java
Patch:
@@ -60,6 +60,7 @@
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.ErrorMessageAdapter;
 
+
 public class CopyActivity extends HookActivity implements FileFragment.ContainerActivity,
         OnClickListener, SwipeRefreshLayout.OnRefreshListener {
 

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -72,7 +72,7 @@ public class ExtendedListFragment extends Fragment
     private int mHeightCell = 0;
 
     private SwipeRefreshLayout.OnRefreshListener mOnRefreshListener = null;
-    
+
     protected AbsListView mCurrentListView;
     private ExtendedListView mListView;
     private View mListFooterView;

File: src/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -60,8 +60,8 @@ public static ConflictsResolveDialog newInstance(String path, OnConflictDecision
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         String remotepath = getArguments().getString("remotepath");
-        return new AlertDialog.Builder(getActivity())
-                   .setIcon(DisplayUtils.getSeasonalIconId())
+        return new AlertDialog.Builder(getActivity(), R.style.Theme_ownCloud_Dialog)
+                   .setIcon(R.drawable.ic_warning)
                    .setTitle(R.string.conflict_title)
                    .setMessage(String.format(getString(R.string.conflict_message), remotepath))
                    .setPositiveButton(R.string.conflict_use_local_version,

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -201,7 +201,7 @@ protected Dialog onCreateDialog(final int id) {
         final AlertDialog.Builder builder = new Builder(this);
         switch (id) {
         case DIALOG_WAITING:
-            ProgressDialog pDialog = new ProgressDialog(this);
+            ProgressDialog pDialog = new ProgressDialog(this, R.style.ProgressDialogTheme);
             pDialog.setIndeterminate(false);
             pDialog.setCancelable(false);
             pDialog.setMessage(getResources().getString(R.string.uploader_info_uploading));

File: src/com/owncloud/android/ui/dialog/IndeterminateProgressDialog.java
Patch:
@@ -59,7 +59,7 @@ public static IndeterminateProgressDialog newInstance(int messageId, boolean can
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         /// create indeterminate progress dialog
-        final ProgressDialog dialog = new ProgressDialog(getActivity());
+        final ProgressDialog dialog = new ProgressDialog(getActivity(), R.style.ProgressDialogTheme);
         dialog.setIndeterminate(true);
         
         /// set message

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -71,7 +71,7 @@ public class ExtendedListFragment extends Fragment
     private ArrayList<Integer> mTops;
     private int mHeightCell = 0;
 
-    private OnEnforceableRefreshListener mOnRefreshListener = null;
+    private SwipeRefreshLayout.OnRefreshListener mOnRefreshListener = null;
     
     protected AbsListView mCurrentListView;
     private ExtendedListView mListView;
@@ -352,7 +352,7 @@ public void onRefresh(boolean ignoreETag) {
         mRefreshEmptyLayout.setRefreshing(false);
 
         if (mOnRefreshListener != null) {
-            mOnRefreshListener.onRefresh(ignoreETag);
+            mOnRefreshListener.onRefresh();
         }
     }
 

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -133,6 +133,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (mLayout == R.layout.file_details_fragment) {
             mView.findViewById(R.id.fdFavorite).setOnClickListener(this);
             ProgressBar progressBar = (ProgressBar)mView.findViewById(R.id.fdProgressBar);
+            DisplayUtils.colorPreLollipopHorizontalProgressBar(progressBar);
             mProgressListener = new ProgressListener(progressBar);
             mView.findViewById(R.id.fdCancelBtn).setOnClickListener(this);
         }

File: src/com/owncloud/android/authentication/AccountAuthenticatorActivity.java
Patch:
@@ -19,7 +19,6 @@
 import android.accounts.AccountAuthenticatorResponse;
 import android.accounts.AccountManager;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AppCompatActivity;
 
 /*

File: src/com/owncloud/android/ui/activity/ErrorsWhileCopyingHandlerActivity.java
Patch:
@@ -30,7 +30,7 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.support.v4.app.DialogFragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.text.method.ScrollingMovementMethod;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -61,7 +61,7 @@
  * 
  * Shown when the error notification summarizing the list of errors is clicked by the user.
  */
-public class ErrorsWhileCopyingHandlerActivity  extends ActionBarActivity
+public class ErrorsWhileCopyingHandlerActivity  extends AppCompatActivity
         implements OnClickListener {
 
     private static final String TAG = ErrorsWhileCopyingHandlerActivity.class.getSimpleName();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -26,7 +26,7 @@
 import android.accounts.AccountManager;
 import android.accounts.AuthenticatorException;
 import android.annotation.TargetApi;
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
 import android.content.ContentResolver;

File: src/com/owncloud/android/ui/activity/GenericExplanationActivity.java
Patch:
@@ -25,8 +25,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.text.method.ScrollingMovementMethod;
 import android.view.View;
 import android.view.ViewGroup;
@@ -45,7 +44,7 @@
  * Added to show explanations for notifications when the user clicks on them, and there no place
  * better to show them.
  */
-public class GenericExplanationActivity  extends ActionBarActivity {
+public class GenericExplanationActivity  extends AppCompatActivity {
 
     public static final String EXTRA_LIST = GenericExplanationActivity.class.getCanonicalName() +
             ".EXTRA_LIST";

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -35,8 +35,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.View.OnClickListener;
@@ -51,7 +50,7 @@
 import com.owncloud.android.utils.FileStorageUtils;
 
 
-public class LogHistoryActivity extends ActionBarActivity {
+public class LogHistoryActivity extends AppCompatActivity {
 
     private static final String MAIL_ATTACHMENT_TYPE = "text/plain";
 

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -33,8 +33,8 @@
 
 import android.accounts.Account;
 import android.accounts.AccountManager;
-import android.app.AlertDialog;
-import android.app.AlertDialog.Builder;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AlertDialog.Builder;
 import android.app.Dialog;
 import android.app.ProgressDialog;
 import android.content.Context;

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -19,7 +19,7 @@
 
 package com.owncloud.android.ui.dialog;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.os.Bundle;

File: src/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -21,7 +21,7 @@
 
 package com.owncloud.android.ui.dialog;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.os.Bundle;

File: src/com/owncloud/android/ui/dialog/CreateFolderDialogFragment.java
Patch:
@@ -25,7 +25,7 @@
 import com.owncloud.android.lib.resources.files.FileUtils;
 import com.owncloud.android.ui.activity.ComponentsGetter;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.os.Bundle;

File: src/com/owncloud/android/ui/dialog/CredentialsDialogFragment.java
Patch:
@@ -22,9 +22,9 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
-import android.app.AlertDialog.Builder;
+import android.support.v7.app.AlertDialog.Builder;
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;

File: src/com/owncloud/android/ui/dialog/RenameFileDialogFragment.java
Patch:
@@ -25,7 +25,7 @@
  * 
  *  Triggers the rename operation. 
  */
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.os.Bundle;

File: src/com/owncloud/android/ui/dialog/ShareLinkToDialog.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Iterator;
 import java.util.List;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.ComponentName;
 import android.content.Context;

File: src/com/owncloud/android/ui/dialog/SharePasswordDialogFragment.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.owncloud.android.ui.dialog;
 
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.content.Intent;

File: src/com/owncloud/android/ui/dialog/UploadSourceDialogFragment.java
Patch:
@@ -20,7 +20,7 @@
 package com.owncloud.android.ui.dialog;
 
 import android.accounts.Account;
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
 import android.content.Intent;

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -338,9 +338,9 @@ public String getEmptyViewText() {
     }
 
     private void onCreateSwipeToRefresh(SwipeRefreshLayout refreshLayout) {
-        // Colors in animations: background
-        refreshLayout.setColorScheme(R.color.background_color, R.color.background_color,
-                R.color.background_color, R.color.background_color);
+        // Colors in animations
+        refreshLayout.setColorSchemeResources(R.color.color_accent, R.color.primary,
+                R.color.primary_dark);
 
         refreshLayout.setOnRefreshListener(this);
     }

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -21,7 +21,7 @@
 
 import android.accounts.Account;
 import android.app.Activity;
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.DialogInterface;

File: src/com/owncloud/android/ui/preview/PreviewVideoActivity.java
Patch:
@@ -26,7 +26,7 @@
 import com.owncloud.android.ui.activity.FileActivity;
 
 import android.accounts.Account;
-import android.app.AlertDialog;
+import android.support.v7.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.media.MediaPlayer;

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -338,9 +338,9 @@ public String getEmptyViewText() {
     }
 
     private void onCreateSwipeToRefresh(SwipeRefreshLayout refreshLayout) {
-        // Colors in animations: background
-        refreshLayout.setColorScheme(R.color.background_color, R.color.background_color,
-                R.color.background_color, R.color.background_color);
+        // Colors in animations
+        refreshLayout.setColorSchemeResources(R.color.color_accent, R.color.primary,
+                R.color.primary_dark);
 
         refreshLayout.setOnRefreshListener(this);
     }

File: src/com/owncloud/android/operations/RefreshFolderOperation.java
Patch:
@@ -365,7 +365,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
             if (localFile != null) {
                 // some properties of local state are kept unmodified
                 remoteFile.setFileId(localFile.getFileId());
-                remoteFile.setKeepInSync(localFile.keepInSync());
+                remoteFile.setFavorite(localFile.isFavorite());
                 remoteFile.setLastSyncDateForData(localFile.getLastSyncDateForData());
                 remoteFile.setModificationTimestampAtLastSyncForData(
                         localFile.getModificationTimestampAtLastSyncForData()
@@ -397,7 +397,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
             searchForLocalFileInDefaultPath(remoteFile);    // legacy   
 
             /// prepare content synchronization for kept-in-sync files
-            if (remoteFile.keepInSync()) {
+            if (remoteFile.isFavorite()) {
                 SynchronizeFileOperation operation = new SynchronizeFileOperation(  localFile,        
                                                                                     remoteFile, 
                                                                                     mAccount, 

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -245,12 +245,12 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     
                     if (mSyncFileContents) {
                         requestForDownload(mLocalFile); // local, not server; we won't to keep
-                        // the value of keepInSync!
+                        // the value of favorite!
                         // the update of local data will be done later by the FileUploader
                         // service when the upload finishes
                     } else {
                         // TODO CHECK: is this really useful in some point in the code?
-                        mServerFile.setKeepInSync(mLocalFile.keepInSync());
+                        mServerFile.setFavorite(mLocalFile.isFavorite());
                         mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
                         mServerFile.setStoragePath(mLocalFile.getStoragePath());
                         mServerFile.setParentId(mLocalFile.getParentId());
@@ -285,7 +285,7 @@ private void requestForUpload(OCFile file) {
         i.putExtra(FileUploader.KEY_ACCOUNT, mAccount);
         i.putExtra(FileUploader.KEY_FILE, file);
         /*i.putExtra(FileUploader.KEY_REMOTE_FILE, mRemotePath);
-        // doing this we would lose the value of keepInSync in the road, and maybe
+        // doing this we would lose the value of isFavorite in the road, and maybe
         // it's not updated in the database when the FileUploader service gets it!
         i.putExtra(FileUploader.KEY_LOCAL_FILE, localFile.getStoragePath());*/
         i.putExtra(FileUploader.KEY_UPLOAD_TYPE, FileUploader.UPLOAD_SINGLE_FILE);

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -321,7 +321,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
             if (localFile != null) {
                 // some properties of local state are kept unmodified
                 remoteFile.setFileId(localFile.getFileId());
-                remoteFile.setKeepInSync(localFile.keepInSync());
+                remoteFile.setFavorite(localFile.isFavorite());
                 remoteFile.setLastSyncDateForData(localFile.getLastSyncDateForData());
                 remoteFile.setModificationTimestampAtLastSyncForData(
                         localFile.getModificationTimestampAtLastSyncForData()
@@ -360,7 +360,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                     startSyncFolderOperation(remoteFile.getRemotePath());
                 }
 
-            } else if (remoteFile.keepInSync()) {
+            } else if (remoteFile.isFavorite()) {
                 /// prepare content synchronization for kept-in-sync files
                 SynchronizeFileOperation operation = new SynchronizeFileOperation(
                         localFile,

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -407,7 +407,7 @@ private void createNewOCFile(String newRemotePath) {
         newFile.setModificationTimestampAtLastSyncForData(
                 mFile.getModificationTimestampAtLastSyncForData());
         // newFile.setEtag(mFile.getEtag())
-        newFile.setKeepInSync(mFile.keepInSync());
+        newFile.setFavorite(mFile.isFavorite());
         newFile.setLastSyncDateForProperties(mFile.getLastSyncDateForProperties());
         newFile.setLastSyncDateForData(mFile.getLastSyncDateForData());
         newFile.setStoragePath(mFile.getStoragePath());

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -457,7 +457,8 @@ private void nextOperation() {
                                 // TODO refactor to run GetUserName as AsyncTask in the context of
                                 // AuthenticatorActivity
                                 credentials = OwnCloudCredentialsFactory.newSamlSsoCredentials(
-                                        mLastTarget.mCookie); // SAML SSO
+                                        null,                   // unknown
+                                        mLastTarget.mCookie);   // SAML SSO
                             }
                             OwnCloudAccount ocAccount = new OwnCloudAccount(
                                     mLastTarget.mServerUrl, credentials);

File: src/com/owncloud/android/ui/dialog/ConfirmationDialogFragment.java
Patch:
@@ -83,7 +83,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         }
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.Theme_ownCloud_Dialog)
-            .setIcon(android.R.drawable.ic_dialog_alert)
+            .setIcon(R.drawable.ic_warning)
             .setMessage(String.format(getString(resourceId), confirmationTarget))
             .setTitle(android.R.string.dialog_alert_title);
         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -48,6 +48,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.view.GravityCompat;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -188,8 +189,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mProgressBar = (ProgressBar) findViewById(R.id.progressBar);
         mProgressBar.setIndeterminateDrawable(
-                getResources().getDrawable(
-                    R.drawable.actionbar_progress_indeterminate_horizontal));
+                ContextCompat.getDrawable(this,
+                        R.drawable.actionbar_progress_indeterminate_horizontal));
 
         mDualPane = getResources().getBoolean(R.bool.large_land_layout);
         mLeftFragmentContainer = findViewById(R.id.left_fragment_container);

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -779,14 +779,15 @@ private void onSynchronizeFileOperationFinish(SynchronizeFileOperation operation
                 i.putExtra(ConflictsResolveActivity.EXTRA_FILE, syncedFile);
                 i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, getAccount());
                 startActivity(i);
-
             }
+
         } else {
             if (!operation.transferWasRequested()) {
                 Toast msg = Toast.makeText(this, ErrorMessageAdapter.getErrorCauseMessage(result,
                         operation, getResources()), Toast.LENGTH_LONG);
                 msg.show();
             }
+            invalidateOptionsMenu();
         }
     }
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -58,6 +58,7 @@
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
+import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
@@ -729,7 +730,8 @@ private void requestMoveOperation(Intent data, int resultCode) {
     public void onBackPressed() {
         OCFileListFragment listOfFiles = getListOfFilesFragment(); 
         if (mDualPane || getSecondFragment() == null) {
-            if (getFile() != null && getFile().getParentId() == 0) {
+            OCFile currentDir = getCurrentDir();
+            if (currentDir == null || currentDir.getParentId() == FileDataStorageManager.ROOT_PARENT_ID) {
                 finish();
                 return;
             }

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -638,6 +638,7 @@ private void initTargetFolder() {
             mParents.add("");
         } else{
             String[] dir_names = last_path.split("/");
+            mParents.clear();
             for (String dir : dir_names)
                 mParents.add(dir);
         }

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -397,8 +397,8 @@ protected void setFooterEnabled(boolean enabled) {
             mListFooterView.invalidate();
 
         } else {
-//            mGridView.removeFooterView(mGridFooterView);
-//            mListView.removeFooterView(mListFooterView);
+            mGridView.removeFooterView(mGridFooterView);
+            mListView.removeFooterView(mListFooterView);
         }
     }
 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -430,9 +430,10 @@ private void updateLayout() {
             setFooterText(generateFooterText(filesCount, foldersCount));
 
             // decide grid vs list view
-            OwnCloudVersion version = AccountUtils.getServerVersion(((FileActivity)mContainerActivity).getAccount());
+            OwnCloudVersion version = AccountUtils.getServerVersion(
+                    ((FileActivity)mContainerActivity).getAccount());
             if (version != null && version.supportsRemoteThumbnails() &&
-                    imagesCount == filesCount) {
+                imagesCount > 0 && imagesCount == filesCount) {
                 switchToGridView();
             } else {
                 switchToListView();

File: src/com/owncloud/android/operations/CreateShareOperation.java
Patch:
@@ -27,7 +27,6 @@
 import android.content.Context;
 import android.content.Intent;
 
-import com.owncloud.android.MainApp;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
@@ -162,7 +161,8 @@ private void updateData(OCShare share) {
         OCFile file = getStorageManager().getFileByPath(mPath);
         if (file!=null) {
             mSendIntent.putExtra(Intent.EXTRA_TEXT, share.getShareLink());
-            mSendIntent.putExtra(Intent.EXTRA_SUBJECT, String.format(mContext.getString(R.string.subject_token),
+            mSendIntent.putExtra(Intent.EXTRA_SUBJECT,
+                    String.format(mContext.getString(R.string.subject_token),
                     getClient().getCredentials().getUsername(), file.getFileName()));
             file.setPublicLink(share.getShareLink());
             file.setShareByLink(true);

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -426,7 +426,7 @@ private void populateDirectoryList() {
                                                 data,
                                                 R.layout.uploader_list_item_layout,
                                                 new String[] {"dirname"},
-                                                new int[] {R.id.textView1});
+                                                new int[] {R.id.filename});
             
             mListView.setAdapter(sa);
             Button btnChooseFolder = (Button) findViewById(R.id.uploader_choose_folder);

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -271,7 +271,7 @@ private void setNavigationListWithFolder(OCFile file) {
         mDirectories.clear();
         OCFile fileIt = file;
         String parentPath;
-        while(fileIt != null && fileIt.getFileName() != OCFile.ROOT_PATH) {
+        while(fileIt != null && !OCFile.ROOT_PATH.equals(fileIt.getFileName())) {
             if (fileIt.isFolder()) {
                 mDirectories.add(fileIt.getFileName());
             }

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -92,9 +92,10 @@ public class PreviewImageActivity extends FileActivity implements
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        requestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
+
         super.onCreate(savedInstanceState);
 
-        //requestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
         setContentView(R.layout.preview_image_activity);
 
         // Navigation Drawer
@@ -505,7 +506,6 @@ public void toggleFullScreen() {
 
             if (visible) {
                 hideSystemUI(mFullScreenAnchorView);
-                mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
                 // actionBar.hide(); // propagated through
                 // OnSystemUiVisibilityChangeListener()
             } else {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1160,7 +1160,7 @@ public void showDetails(OCFile file) {
     protected void updateActionBarTitleAndHomeButton(OCFile chosenFile) {
         if (mDualPane) {
             // in dual pane mode, keep the focus of title an action bar in the current folder
-            super.updateActionBarTitleAndHomeButton(null);
+            super.updateActionBarTitleAndHomeButton(getCurrentDir());
 
         } else {
             super.updateActionBarTitleAndHomeButton(chosenFile);

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -216,7 +216,7 @@ protected void onCreate(Bundle savedInstanceState) {
             getSupportActionBar().setDisplayShowHomeEnabled(false);
             getSupportActionBar().setDisplayShowTitleEnabled(false);
         }
-        
+
         mIsFirstAuthAttempt = true;
 
         // bind to Operations Service

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -92,7 +92,7 @@ public class PreviewImageActivity extends FileActivity implements
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        requestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
+        //requestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
         setContentView(R.layout.preview_image_activity);
 
         // Navigation Drawer
@@ -104,6 +104,8 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.hide();
 
+        updateActionBarTitleAndHomeButton();
+
         // Make sure we're running on Honeycomb or higher to use FullScreen and
         // Immersive Mode
         if (isHoneycombOrHigher()) {

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -152,6 +152,8 @@ public static String getErrorCauseMessage(RemoteOperationResult result, RemoteOp
             } else if (isNetworkError(result.getCode())) {
                 message = getErrorMessage(result, res);
                 
+            } else if (result.getCode() == ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER) {
+                message = res.getString(R.string.filename_forbidden_charaters_from_server);
             } else {
                 message = res.getString(R.string.create_dir_fail_msg);
             }

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -99,6 +99,7 @@ public class FileActivity extends ActionBarActivity
     private static final String KEY_WAITING_FOR_OP_ID = "WAITING_FOR_OP_ID";
     private static final String DIALOG_SHARE_PASSWORD = "DIALOG_SHARE_PASSWORD";
     private static final String KEY_TRY_SHARE_AGAIN = "TRY_SHARE_AGAIN";
+    private static final String KEY_ACTION_BAR_TITLE = "ACTION_BAR_TITLE";
     
     protected static final long DELAY_TO_REQUEST_OPERATION_ON_ACTIVITY_RESULTS = 200;
     
@@ -176,6 +177,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     savedInstanceState.getLong(KEY_WAITING_FOR_OP_ID, Long.MAX_VALUE)
                     );
             mTryShareAgain = savedInstanceState.getBoolean(KEY_TRY_SHARE_AGAIN);
+            getSupportActionBar().setTitle(savedInstanceState.getString(KEY_ACTION_BAR_TITLE));
         } else {
             account = getIntent().getParcelableExtra(FileActivity.EXTRA_ACCOUNT);
             mFile = getIntent().getParcelableExtra(FileActivity.EXTRA_FILE);
@@ -472,6 +474,7 @@ protected void onSaveInstanceState(Bundle outState) {
         outState.putBoolean(FileActivity.EXTRA_FROM_NOTIFICATION, mFromNotification);
         outState.putLong(KEY_WAITING_FOR_OP_ID, mFileOperationsHelper.getOpIdWaitingFor());
         outState.putBoolean(KEY_TRY_SHARE_AGAIN, mTryShareAgain);
+        outState.putString(KEY_ACTION_BAR_TITLE, getSupportActionBar().getTitle().toString());
     }
     
     

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -860,7 +860,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                     startActivity(settingsIntent);
                     break;
 
-                case 3: // Logs
+                case 2: // Logs
                     Intent loggerIntent = new Intent(getApplicationContext(),
                             LogHistoryActivity.class);
                     startActivity(loggerIntent);

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1139,6 +1139,7 @@ public void browseToRoot() {
     @Override
     public void onBrowsedDownTo(OCFile directory) {
         cleanSecondFragment();
+        setFile(directory);
         updateActionBarTitle();
         // Sync Folder
         startSyncFolderOperation(directory, false);

File: src/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -95,7 +95,9 @@ private static int calculateSampleFactor(Options options, int reqWidth, int reqH
         if (height > reqHeight || width > reqWidth) {
             final int halfHeight = height / 2;
             final int halfWidth = width / 2;
-    
+
+            // calculates the largest inSampleSize value (for smallest sample) that is a power of 2 and keeps both
+            // height and width **larger** than the requested height and width.
             while ((halfHeight / inSampleSize) > reqHeight
                     && (halfWidth / inSampleSize) > reqWidth) {
                 inSampleSize *= 2;

File: src/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -95,7 +95,9 @@ private static int calculateSampleFactor(Options options, int reqWidth, int reqH
         if (height > reqHeight || width > reqWidth) {
             final int halfHeight = height / 2;
             final int halfWidth = width / 2;
-    
+
+            // calculates the largest inSampleSize value (for smallest sample) that is a power of 2 and keeps both
+            // height and width **larger** than the requested height and width.
             while ((halfHeight / inSampleSize) > reqHeight
                     && (halfWidth / inSampleSize) > reqWidth) {
                 inSampleSize *= 2;

File: automationTest/src/test/java/com/owncloud/android/test/ui/testSuites/Common.java
Patch:
@@ -67,7 +67,7 @@ protected boolean isElementPresent(AndroidElement element, By by) {
 		}
 	}
 
-	protected boolean isElementPresent(AndroidElement element) {
+	public static boolean isElementPresent(AndroidElement element) {
 		try{
 			element.isDisplayed();
 		} catch (NoSuchElementException e){

File: src/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -217,7 +217,7 @@ private void filter(List<Integer> toShow, List <Integer> toHide) {
         // SHARE FILE 
         // TODO add check on SHARE available on server side?
         boolean shareAllowed = (mContext != null  &&
-                mContext.getString(R.string.share_link).equalsIgnoreCase("on"));
+                mContext.getString(R.string.share_feature).equalsIgnoreCase("on"));
         if (!shareAllowed || mFile == null) {
             toHide.add(R.id.action_share_file);
         } else {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -154,8 +154,6 @@ public class FileDisplayActivity extends HookActivity implements
 
     private OCFile mWaitingToSend;
     
-    private Boolean mUnlocked = false;
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         Log_OC.v(TAG, "onCreate() start");

File: src/com/owncloud/android/utils/CopyTmpFileAsyncTask.java
Patch:
@@ -60,7 +60,7 @@ protected String doInBackground(Object[] params) {
         if (params.length == 3) {
             Uri uri = (Uri) params[0];
             String filePath = (String) params[1];
-            mIndex = (int) params[2];
+            mIndex = ((Integer) params[2]).intValue();
 
             String fullTempPath = FileStorageUtils.getTemporalPath(mAccountName) + filePath;
             InputStream inputStream = null;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -136,9 +136,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mHandler = new Handler();
         mFileOperationsHelper = new FileOperationsHelper(this);
-        Account account;
+        Account account = null;
         if(savedInstanceState != null) {
-            account = savedInstanceState.getParcelable(FileActivity.EXTRA_ACCOUNT);
             mFile = savedInstanceState.getParcelable(FileActivity.EXTRA_FILE);
             mFromNotification = savedInstanceState.getBoolean(FileActivity.EXTRA_FROM_NOTIFICATION);
             mFileOperationsHelper.setOpIdWaitingFor(
@@ -325,7 +324,6 @@ private void createFirstAccount() {
     protected void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putParcelable(FileActivity.EXTRA_FILE, mFile);
-        outState.putParcelable(FileActivity.EXTRA_ACCOUNT, mAccount);
         outState.putBoolean(FileActivity.EXTRA_FROM_NOTIFICATION, mFromNotification);
         outState.putLong(KEY_WAITING_FOR_OP_ID, mFileOperationsHelper.getOpIdWaitingFor());
         outState.putBoolean(KEY_TRY_SHARE_AGAIN, mTryShareAgain);

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -380,7 +380,7 @@ private void initServerPreFragment(Bundle savedInstanceState) {
             findViewById(R.id.hostUrlFrame).setVisibility(View.GONE);
             mRefreshButton = findViewById(R.id.centeredRefreshButton);
         }
-        showRefreshButton(mServerIsChecked && !mServerIsValid && 
+        showRefreshButton(mServerIsChecked && !mServerIsValid &&
                 mWaitingForOpId > Integer.MAX_VALUE);
         mServerStatusView = (TextView) findViewById(R.id.server_status_text);
         showServerStatus();
@@ -773,10 +773,11 @@ private void checkOcServer() {
         mOkButton.setEnabled(false);
         mServerInfo = new GetServerInfoOperation.ServerInfo();
         showRefreshButton(false);
-        
+
         if (uri.length() != 0) {
             // Handle internationalized domain names
             uri = DisplayUtils.convertIdn(uri, true);
+
             mServerStatusText = R.string.auth_testing_connection;
             mServerStatusIcon = R.drawable.progress_small;
             showServerStatus();

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -616,6 +616,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                                             FileDisplayActivity.class
                                     );
                                     i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                                    i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
                                     startActivity(i);
                                 } else {
                                     finish();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -29,8 +29,6 @@
 import android.accounts.AuthenticatorException;
 import android.annotation.TargetApi;
 import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
 import android.content.ContentResolver;
@@ -219,7 +217,9 @@ protected void onStart() {
 
     @Override
     protected void onDestroy() {
+        Log_OC.d(TAG, "onDestroy() start");
         super.onDestroy();
+        Log_OC.d(TAG, "onDestroy() end");
     }
 
     /**

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -616,6 +616,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                                             FileDisplayActivity.class
                                     );
                                     i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                                    i.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
                                     startActivity(i);
                                 } else {
                                     finish();

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -266,14 +266,14 @@ public static String convertIdn(String url, boolean toASCII) {
             } else if (url.indexOf("@") != -1) {
                 hostStart = url.indexOf("@") + "@".length();
             }
-            
+
             int hostEnd = url.substring(hostStart).indexOf("/");
             // Handle URL which doesn't have a path (path is implicitly '/')
             hostEnd = (hostEnd == -1 ? url.length() : hostStart + hostEnd);
-            
+
             String host = url.substring(hostStart, hostEnd);
             host = (toASCII ? IDN.toASCII(host) : IDN.toUnicode(host));
-            
+
             return url.substring(0, hostStart) + host + url.substring(hostEnd);
         } else {
             return url;

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -40,8 +40,6 @@
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
-import third_parties.in.srain.cube.GridViewWithHeaderAndFooter;
-
 /**
  * This Adapter populates a ListView with all files and directories contained
  * in a local directory

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -396,8 +396,8 @@ protected void setFooterEnabled(boolean enabled) {
             mListFooterView.invalidate();
 
         } else {
-            mGridView.removeFooterView(mGridFooterView);
-            mListView.removeFooterView(mListFooterView);
+//            mGridView.removeFooterView(mGridFooterView);
+//            mListView.removeFooterView(mListFooterView);
         }
     }
 

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -40,8 +40,6 @@
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
-import third_parties.in.srain.cube.GridViewWithHeaderAndFooter;
-
 /**
  * This Adapter populates a ListView with all files and directories contained
  * in a local directory

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -119,7 +119,7 @@ public void shareFileWithLink(OCFile file) {
     }
     
     
-    public void shareFileWithLinkToApp(OCFile file, Intent sendIntent) {
+    public void shareFileWithLinkToApp(OCFile file, String password, Intent sendIntent) {
         
         if (file != null) {
             mFileActivity.showLoadingDialog();
@@ -128,6 +128,7 @@ public void shareFileWithLinkToApp(OCFile file, Intent sendIntent) {
             service.setAction(OperationsService.ACTION_CREATE_SHARE);
             service.putExtra(OperationsService.EXTRA_ACCOUNT, mFileActivity.getAccount());
             service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
+            service.putExtra(OperationsService.EXTRA_PASSWORD_SHARE, password);
             service.putExtra(OperationsService.EXTRA_SEND_INTENT, sendIntent);
             mWaitingForOpId = mFileActivity.getOperationsServiceBinder().queueNewOperation(service);
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -23,13 +23,10 @@
 package com.owncloud.android.ui.activity;
 
 import java.io.File;
-import java.io.IOException;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;
 import android.accounts.AuthenticatorException;
-import android.accounts.OperationCanceledException;
-import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
 import android.app.AlertDialog;
 import android.app.Dialog;

File: src/com/owncloud/android/ui/dialog/ShareLinkToDialog.java
Patch:
@@ -147,7 +147,7 @@ public void onClick(DialogInterface dialog, int which) {
                             } else {
                                 // Create a new share resource
                                 ((ComponentsGetter)getSherlockActivity()).getFileOperationsHelper()
-                                    .shareFileWithLinkToApp(mFile, mIntent);
+                                    .shareFileWithLinkToApp(mFile, "", mIntent);
                             }
                         }
         })

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -470,6 +470,7 @@ operation, getResources()),
                         Toast.LENGTH_LONG);
                 t.show();
             }
+            mTryShareAgain = false;
 
         } else if (operation instanceof CreateShareOperation) {
             onCreateShareOperationFinish((CreateShareOperation) operation, result);

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -516,6 +516,7 @@ private void onCreateShareOperationFinish(CreateShareOperation operation,
                         ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()),
                         Toast.LENGTH_LONG);
                     t.show();
+                    mTryShareAgain = false;
                 }
             } else {
                 Toast t = Toast.makeText(this,

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -304,7 +304,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     }
                 }
             }
-            localCopyPassed = result.isSuccess();
+            localCopyPassed = (result == null);
 
             /// perform the upload
             if ( mChunked &&

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1461,9 +1461,9 @@ private void onAuthorizationCheckFinish(RemoteOperationResult result) {
      */
     private void updateAccountAuthentication() throws AccountNotFoundException {
         
-        OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(
-                new OwnCloudAccount(mAccount, this)
-        );
+//        OwnCloudClientManagerFactory.getDefaultSingleton().removeClientFor(
+//                new OwnCloudAccount(mAccount, this)
+//        );
 
         Bundle response = new Bundle();
         response.putString(AccountManager.KEY_ACCOUNT_NAME, mAccount.name);

File: src/com/owncloud/android/authentication/AuthenticatorAsyncTask.java
Patch:
@@ -33,7 +33,7 @@ public class AuthenticatorAsyncTask  extends AsyncTask<String, Void, RemoteOpera
 
     public AuthenticatorAsyncTask(Activity activity) {
         mContext = activity.getApplicationContext();
-        mListener = new WeakReference<>((OnAuthenticatorTaskListener)activity);
+        mListener = new WeakReference<OnAuthenticatorTaskListener>((OnAuthenticatorTaskListener)activity);
     }
 
     @Override

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -103,7 +103,7 @@ protected void switchFileView(){
     
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        Log_OC.e(TAG, "onCreateView");
+        Log_OC.d(TAG, "onCreateView");
 
         View v = inflater.inflate(R.layout.list_fragment, null);
         
@@ -154,7 +154,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onSaveInstanceState(Bundle savedInstanceState) {
         super.onSaveInstanceState(savedInstanceState);
-        Log_OC.e(TAG, "onSaveInstanceState()");
+        Log_OC.d(TAG, "onSaveInstanceState()");
         savedInstanceState.putInt(KEY_SAVED_LIST_POSITION, getReferencePosition());
         savedInstanceState.putIntegerArrayList(KEY_INDEXES, mIndexes);
         savedInstanceState.putIntegerArrayList(KEY_FIRST_POSITIONS, mFirstPositions);

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1020,12 +1020,11 @@ private void onSamlBasedFederatedSingleSignOnAuthorizationStart(RemoteOperationR
         dismissDialog(WAIT_DIALOG_TAG);
 
         if (result.isIdPRedirection()) {
-            String url = result.getRedirectedLocation();
             String targetUrl = mServerInfo.mBaseUrl 
                     + AccountUtils.getWebdavPath(mServerInfo.mVersion, mAuthTokenType);
 
             // Show dialog
-            SamlWebViewDialog dialog = SamlWebViewDialog.newInstance(url, targetUrl);            
+            SamlWebViewDialog dialog = SamlWebViewDialog.newInstance(targetUrl, targetUrl);            
             dialog.show(getSupportFragmentManager(), SAML_DIALOG_TAG);
 
             mAuthStatusIcon = 0;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1262,7 +1262,7 @@ public void onReceive(Context context, Intent intent) {
      */
     private class DownloadFinishReceiver extends BroadcastReceiver {
 
-        int refreshCounter = 0;
+        //int refreshCounter = 0;
         @Override
         public void onReceive(Context context, Intent intent) {
             try {
@@ -1273,7 +1273,7 @@ public void onReceive(Context context, Intent intent) {
                 if (sameAccount && isDescendant) {
                     String linkedToRemotePath = intent.getStringExtra(FileDownloader.EXTRA_LINKED_TO_PATH);
                     if (linkedToRemotePath == null || isAscendant(linkedToRemotePath)) {
-                        Log_OC.v(TAG, "NOW: refresh #" + ++refreshCounter);
+                        //Log_OC.v(TAG, "refresh #" + ++refreshCounter);
                         refreshListOfFilesFragment();
                     }
                     refreshSecondFragment(

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -91,6 +91,7 @@ public int getFooterViewCount() {
     
     protected void switchImageView(){
        imageView.setNumColumns(GridView.AUTO_FIT);
+       imageView.invalidateRowHeight();  // Force to recalculate mRowHeight of imageView
        imageView.invalidate();
     }
     

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -316,7 +316,7 @@ public boolean onPreferenceClick(Preference preference) {
         
         mPrefInstantVideoUploadPathWiFi =  findPreference("instant_video_upload_on_wifi");
         mPrefInstantVideoUpload = findPreference("instant_video_uploading");
-        toggleInstantVideoOptions(((CheckBoxPreference) mPrefInstantUpload).isChecked());
+        toggleInstantVideoOptions(((CheckBoxPreference) mPrefInstantVideoUpload).isChecked());
         
         mPrefInstantVideoUpload.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
             

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -37,6 +37,8 @@
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
+import third_parties.in.srain.cube.GridViewWithHeaderAndFooter;
+
 /**
  * This Adapter populates a ListView with all files and directories contained
  * in a local directory
@@ -117,7 +119,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 
                 lastModV.setVisibility(View.VISIBLE);
                 lastModV.setText(DisplayUtils.unixTimeToHumanReadable(file.lastModified()));
-                ListView parentList = (ListView)parent;
+                GridViewWithHeaderAndFooter parentList = (GridViewWithHeaderAndFooter)parent;
                 if (parentList.getChoiceMode() == ListView.CHOICE_MODE_NONE) { 
                     checkBoxV.setVisibility(View.GONE);
                 } else {

File: src/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -225,11 +225,11 @@ public void listDirectory(File directory) {
      */
     public String[] getCheckedFilePaths() {
         ArrayList<String> result = new ArrayList<String>();
-        SparseBooleanArray positions = mList.getCheckedItemPositions();
+        SparseBooleanArray positions = imageView.getCheckedItemPositions();
         if (positions.size() > 0) {
             for (int i = 0; i < positions.size(); i++) {
                 if (positions.get(positions.keyAt(i)) == true) {
-                    result.add(((File) mList.getItemAtPosition(positions.keyAt(i))).getAbsolutePath());
+                    result.add(((File) imageView.getItemAtPosition(positions.keyAt(i))).getAbsolutePath());
                 }
             }
 

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -249,7 +249,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     } else {
                         sharedWithMeIconV.setVisibility(View.GONE);
                     }
-                } else {
+                } else { //Folder
+                    fileSizeV.setVisibility(View.INVISIBLE);
                     localStateView.setVisibility(View.INVISIBLE);
                 }
                 break;

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -37,6 +37,8 @@
 import com.owncloud.android.utils.BitmapUtils;
 import com.owncloud.android.utils.DisplayUtils;
 
+import third_parties.liaohuqiu.GridViewWithHeaderAndFooter;
+
 /**
  * This Adapter populates a ListView with all files and directories contained
  * in a local directory
@@ -117,7 +119,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 
                 lastModV.setVisibility(View.VISIBLE);
                 lastModV.setText(DisplayUtils.unixTimeToHumanReadable(file.lastModified()));
-                ListView parentList = (ListView)parent;
+                GridViewWithHeaderAndFooter parentList = (GridViewWithHeaderAndFooter)parent;
                 if (parentList.getChoiceMode() == ListView.CHOICE_MODE_NONE) { 
                     checkBoxV.setVisibility(View.GONE);
                 } else {

File: src/com/owncloud/android/ui/fragment/LocalFileListFragment.java
Patch:
@@ -225,11 +225,11 @@ public void listDirectory(File directory) {
      */
     public String[] getCheckedFilePaths() {
         ArrayList<String> result = new ArrayList<String>();
-        SparseBooleanArray positions = mList.getCheckedItemPositions();
+        SparseBooleanArray positions = imageView.getCheckedItemPositions();
         if (positions.size() > 0) {
             for (int i = 0; i < positions.size(); i++) {
                 if (positions.get(positions.keyAt(i)) == true) {
-                    result.add(((File) mList.getItemAtPosition(positions.keyAt(i))).getAbsolutePath());
+                    result.add(((File) imageView.getItemAtPosition(positions.keyAt(i))).getAbsolutePath());
                 }
             }
 

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -499,7 +499,7 @@ public void cancel(Account account, OCFile file){
                     boolean found = false;
                     while (it.hasNext()) {
                         String keySyncOperation = it.next();
-                        found = keySyncOperation.contains(targetKey);
+                        found = keySyncOperation.startsWith(targetKey);
                         if (found) {
                             keyItems.add(keySyncOperation);
                         }

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -222,7 +222,7 @@ public static int getFileTypeIconId(String mimetype, String filename) {
 
     
     private static String getExtension(String filename) {
-        String extension = filename.substring(filename.lastIndexOf(".") + 1);
+        String extension = filename.toLowerCase().substring(filename.lastIndexOf(".") + 1);
         return extension;
     }
     

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -80,7 +80,8 @@ public class DisplayUtils {
         "msword",
         "vnd.openxmlformats-officedocument.wordprocessingml.document",
         "vnd.oasis.opendocument.text",
-        "rtf"
+        "rtf",
+        "javascript"
     };
     private static Set<String> SUBTYPES_DOCUMENT_SET = new HashSet<String>(Arrays.asList(SUBTYPES_DOCUMENT));
     private static final String[] SUBTYPES_SPREADSHEET = {

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -512,7 +512,7 @@ private void onUnshareLinkOperationFinish(UnshareLinkOperation operation, Remote
     }
 
     private void onSynchronizeFolderOperationFinish(SynchronizeFolderOperation operation, RemoteOperationResult result) {
-        if (!result.isSuccess()){
+        if (!result.isSuccess() && result.getCode() != ResultCode.CANCELLED){
             Toast t = Toast.makeText(this, ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()),
                     Toast.LENGTH_LONG);
             t.show();

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -175,10 +175,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
 
             // Needed in case that cancellation occurs before starting any download.
             // If not, yellow arrow continues being shown.
-            sendBroadcastForNotifyingUIUpdate(result.isSuccess());
+            sendBroadcastForNotifyingUIUpdate(false);
 
-            /// cancellation of download needs to be done separately in any case; a SynchronizeFolderOperation
-            //  may finish much sooner than the real download of the files in the folder 
             Intent intent = new Intent(mContext, FileDownloader.class);
             intent.setAction(FileDownloader.ACTION_CANCEL_FILE_DOWNLOAD);
             intent.putExtra(FileDownloader.EXTRA_ACCOUNT, mAccount);

File: src/com/owncloud/android/datamodel/ThumbnailsCacheManager.java
Patch:
@@ -74,7 +74,7 @@ public class ThumbnailsCacheManager {
     public static Bitmap mDefaultImg = 
             BitmapFactory.decodeResource(
                     MainApp.getAppContext().getResources(), 
-                    DisplayUtils.getResourceId("image/png", "default.png")
+                    DisplayUtils.getFileTypeIconId("image/png", "default.png")
             );
 
     

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -234,7 +234,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         }
                     }
                 } else {
-                    fileIcon.setImageResource(DisplayUtils.getResourceId(file.getMimetype(), file.getFileName()));
+                    fileIcon.setImageResource(DisplayUtils.getFileTypeIconId(file.getMimetype(), file.getFileName()));
                 }
 
                 if (checkIfFileIsSharedWithMe(file)) {
@@ -260,7 +260,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     sharedWithMeIconV.setVisibility(View.VISIBLE);
                 } else {
                     fileIcon.setImageResource(
-                            DisplayUtils.getResourceId(file.getMimetype(), file.getFileName())
+                            DisplayUtils.getFileTypeIconId(file.getMimetype(), file.getFileName())
                     );
                 }
 

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -396,7 +396,7 @@ private void setFiletype(String mimetype, String filename) {
         }
         ImageView iv = (ImageView) getView().findViewById(R.id.fdIcon);
         if (iv != null) {
-            iv.setImageResource(DisplayUtils.getResourceId(mimetype, filename));
+            iv.setImageResource(DisplayUtils.getFileTypeIconId(mimetype, filename));
         }
     }
 

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -512,7 +512,7 @@ private void onUnshareLinkOperationFinish(UnshareLinkOperation operation, Remote
     }
 
     private void onSynchronizeFolderOperationFinish(SynchronizeFolderOperation operation, RemoteOperationResult result) {
-        if (!result.isSuccess()){
+        if (!result.isSuccess() && result.getCode() != ResultCode.CANCELLED){
             Toast t = Toast.makeText(this, ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()),
                     Toast.LENGTH_LONG);
             t.show();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -109,6 +109,7 @@
 import com.owncloud.android.ui.preview.PreviewVideoActivity;
 import com.owncloud.android.utils.DisplayUtils;
 import com.owncloud.android.utils.ErrorMessageAdapter;
+import com.owncloud.android.utils.FileStorageUtils;
 import com.owncloud.android.utils.UriUtils;
 
 
@@ -519,7 +520,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             
             // Read sorting order, default to sort by name ascending
             Integer sortOrder = appPreferences
-                    .getInt("sortOrder", FileListListAdapter.SORT_NAME);
+                    .getInt("sortOrder", FileStorageUtils.SORT_NAME);
             
             AlertDialog.Builder builder = new AlertDialog.Builder(this);
             builder.setTitle(R.string.actionbar_sort_title)

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -213,7 +213,7 @@ public static String getErrorCauseMessage(RemoteOperationResult result, RemoteOp
                 String folderPathName = new File(
                         ((SynchronizeFolderOperation) operation).getFolderPath()).getName();
                 if (result.getCode() == ResultCode.FILE_NOT_FOUND) {
-                    message = String.format(res.getString(R.string.download_folder_not_found),
+                    message = String.format(res.getString(R.string.sync_current_folder_was_removed),
                             folderPathName);
 
                 } else {    // Generic error

File: src/com/owncloud/android/ui/activity/PinCodeActivity.java
Patch:
@@ -366,7 +366,7 @@ public void afterTextChanged(Editable s) {
                     }
                     
                     if (mPinCodeChecked && 
-                       (mActivity.equals("FileDisplayActivity") || mActivity.equals("PreviewImageActivity"))){
+                       (mActivity.equals("FileDisplayActivity") || mActivity.equals("PreviewImageActivity") || mActivity.equals("ownCloudUploader"))){
                         PinCheck.setUnlockTimestamp();
                         finish();
                     } else if (mPinCodeChecked){

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -160,7 +160,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     }
                 } else {
                     Uri selectedUri = Uri.fromFile(file);
-                    String fileExtension = MimeTypeMap.getFileExtensionFromUrl(selectedUri.toString());
+                    String fileExtension = MimeTypeMap.getFileExtensionFromUrl(selectedUri.toString().toLowerCase());
                     String mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(fileExtension);
                     fileIcon.setImageResource(DisplayUtils.getResourceId(mimeType, file.getName()));
                 }  

File: src/com/owncloud/android/utils/BitmapUtils.java
Patch:
@@ -181,7 +181,7 @@ else if (orientation == ExifInterface.ORIENTATION_ROTATE_270)
      */
     public static boolean isImage(File file) {
         Uri selectedUri = Uri.fromFile(file);
-        String fileExtension = MimeTypeMap.getFileExtensionFromUrl(selectedUri.toString());
+        String fileExtension = MimeTypeMap.getFileExtensionFromUrl(selectedUri.toString().toLowerCase());
         String mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(fileExtension);
 
         return (mimeType != null && mimeType.startsWith("image/"));

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -50,6 +50,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
+import com.owncloud.android.authentication.PinCheck;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.DbHandler;
 import com.owncloud.android.lib.common.utils.Log_OC;
@@ -308,6 +309,8 @@ public boolean onPreferenceClick(Preference preference) {
     @Override
     protected void onPause() {
         super.onPause();
+        
+        PinCheck.setUnlockTimestamp();
     }
 
     @Override

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -55,7 +55,7 @@ public void onCreate(){
         } else {
             OwnCloudClientManagerFactory.setDefaultPolicy(Policy.ALWAYS_NEW_CLIENT);
         }
-        
+
         // initialise thumbnails cache on background thread
         new ThumbnailsCacheManager.InitDiskCacheTask().execute();
         

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -161,7 +161,7 @@ private void handleNewVideoAction(Context context, Intent intent) {
         Intent i = new Intent(context, FileUploader.class);
         i.putExtra(FileUploader.KEY_ACCOUNT, account);
         i.putExtra(FileUploader.KEY_LOCAL_FILE, file_path);
-        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantUploadFilePath(context, file_name));
+        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantVideoUploadFilePath(context, file_name));
         i.putExtra(FileUploader.KEY_UPLOAD_TYPE, FileUploader.UPLOAD_SINGLE_FILE);
         i.putExtra(FileUploader.KEY_MIME_TYPE, mime_type);
         i.putExtra(FileUploader.KEY_INSTANT_UPLOAD, true);

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -400,6 +400,7 @@ private void saveDownloadedFile() {
         file.setFileLength((new File(mCurrentDownload.getSavePath()).length()));
         file.setRemoteId(mCurrentDownload.getFile().getRemoteId());
         mStorageManager.saveFile(file);
+        mStorageManager.triggerMediaScan(file.getStoragePath());
     }
 
 

File: src/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -36,7 +36,6 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.util.Log;
 
 /**
  * Operation to find out what authentication method requires

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -150,13 +150,11 @@ protected RemoteOperationResult run(OwnCloudClient client) {
             newFile = new File(getSavePath());
             newFile.getParentFile().mkdirs();
             moved = tmpFile.renameTo(newFile);
-        
             if (!moved)
                 result = new RemoteOperationResult(RemoteOperationResult.ResultCode.LOCAL_STORAGE_NOT_MOVED);
         }
         Log_OC.i(TAG, "Download of " + mFile.getRemotePath() + " to " + getSavePath() + ": " + result.getLogMessage());
         
-        
         return result;
     }
 

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -22,7 +22,6 @@
 import java.util.HashMap;
 
 import com.owncloud.android.R;
-import com.owncloud.android.datamodel.ThumbnailsCacheManager;
 import com.owncloud.android.db.ProviderMeta;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
 import com.owncloud.android.lib.common.utils.Log_OC;

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -319,7 +319,7 @@ public long newOperation(Intent operationIntent) {
                         String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
                         Intent sendIntent = operationIntent.getParcelableExtra(EXTRA_SEND_INTENT);
                         if (remotePath.length() > 0) {
-                            operation = new CreateShareOperation(remotePath, ShareType.PUBLIC_LINK, 
+                            operation = new CreateShareOperation(OperationsService.this, remotePath, ShareType.PUBLIC_LINK,
                                     "", false, "", 1, sendIntent);
                         }
                         
@@ -359,7 +359,7 @@ public long newOperation(Intent operationIntent) {
                         // Rename file or folder
                         String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
                         String newName = operationIntent.getStringExtra(EXTRA_NEWNAME);
-                        operation = new RenameFileOperation(remotePath, account, newName);
+                        operation = new RenameFileOperation(remotePath, newName);
                         
                     } else if (action.equals(ACTION_REMOVE)) {
                         // Remove file or folder

File: src/com/owncloud/android/operations/CreateShareOperation.java
Patch:
@@ -133,9 +133,9 @@ private void updateData(OCShare share) {
         OCFile file = getStorageManager().getFileByPath(mPath);
         if (file!=null) {
             mSendIntent.putExtra(Intent.EXTRA_TEXT, share.getShareLink());
-            mSendIntent.putExtra(Intent.EXTRA_SUBJECT, getClient().getCredentials().getUsername() + " " +
-                    mContext.getString(R.string.shared_subject_header) + " >>" + file.getFileName() + "<< " +
-                    mContext.getString(R.string.with_you_subject_header));
+            mSendIntent.putExtra(Intent.EXTRA_SUBJECT, String.format("%s %s >>%s<< %s",
+                    getClient().getCredentials().getUsername(), mContext.getString(R.string.shared_subject_header),
+                    file.getFileName(), mContext.getString(R.string.with_you_subject_header)));
             file.setPublicLink(share.getShareLink());
             file.setShareByLink(true);
             getStorageManager().saveFile(file);

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -319,7 +319,7 @@ public long newOperation(Intent operationIntent) {
                         String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
                         Intent sendIntent = operationIntent.getParcelableExtra(EXTRA_SEND_INTENT);
                         if (remotePath.length() > 0) {
-                            operation = new CreateShareOperation(getApplicationContext(), remotePath, ShareType.PUBLIC_LINK,
+                            operation = new CreateShareOperation(OperationsService.this, remotePath, ShareType.PUBLIC_LINK,
                                     "", false, "", 1, sendIntent);
                         }
                         

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -158,13 +158,13 @@ public void onServiceConnected(ComponentName component, IBinder service) {
                 if(mUploaderBinder == null)
                 {
                     mUploaderBinder = (FileUploaderBinder) service;
-                    Log_OC.e(TAG, "UploadListActivity connected to Upload service. component: " + component + " service: "
+                    Log_OC.d(TAG, "UploadListActivity connected to Upload service. component: " + component + " service: "
                             + service);
                 } else {
-                    Log_OC.e(TAG, "mUploaderBinder already set. mUploaderBinder: " + mUploaderBinder + " service:" + service);
+                    Log_OC.d(TAG, "mUploaderBinder already set. mUploaderBinder: " + mUploaderBinder + " service:" + service);
                 }
             } else {
-                Log_OC.e(TAG, "UploadListActivity not connected to Upload service. component: " + component
+                Log_OC.d(TAG, "UploadListActivity not connected to Upload service. component: " + component
                         + " service: " + service);
                 return;
             }            

File: src/com/owncloud/android/files/services/FileUploadService.java
Patch:
@@ -692,10 +692,13 @@ public void cancel(Account account, OCFile file) {
             // after upload finishes. Following cancel call makes sure that is
             // does finish right now.
             if (mCurrentUpload != null && mCurrentUpload.isUploadInProgress()) {
+                Log_OC.d(TAG, "Calling cancel for " + file.getRemotePath() + " during upload operation.");
                 mCurrentUpload.cancel();
             } else if(mCancellationPossible.get()){
+                Log_OC.d(TAG, "Calling cancel for " + file.getRemotePath() + " during preparing for upload.");
                 mCancellationRequested.set(true);
             } else {
+                Log_OC.d(TAG, "Calling cancel for " + file.getRemotePath() + " while upload is pending.");                
                 // upload not in progress, but pending.
                 // in this case we have to update the db here.
                 UploadDbObject upload = mPendingUploads.remove(buildRemoteName(account, file));

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -116,6 +116,7 @@ public SynchronizeFolderOperation(Context context, String remotePath, Account ac
         mAccount = account;
         mContext = context;
         mRemoteFolderChanged = false;
+        mFilesForDirectDownload = new Vector<OCFile>();
         mFilesToSyncContentsWithoutUpload = new Vector<SyncOperation>();
         mFavouriteFilesToSyncContents = new Vector<SyncOperation>();
         mFoldersToWalkDown = new Vector<SyncOperation>();
@@ -269,6 +270,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 + " changed - starting update of local data ");
 
         List<OCFile> updatedFiles = new Vector<OCFile>(folderAndFiles.size() - 1);
+        mFilesForDirectDownload.clear();
         mFilesToSyncContentsWithoutUpload.clear();
         mFavouriteFilesToSyncContents.clear();
         mFoldersToWalkDown.clear();

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -340,7 +340,7 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 requestForDownloadFile(remoteFile);
             } else {
                 // Run new SyncFolderOperation for download children files recursively from a folder
-                RemoteOperation synchFolderOp =  new SyncFolderOperation( mContext,
+                SynchronizeFolderOperation synchFolderOp =  new SynchronizeFolderOperation( mContext,
                         remoteFile.getRemotePath(),
                         mAccount,
                         mCurrentSyncTime);

File: src/com/owncloud/android/db/UploadDbObject.java
Patch:
@@ -307,6 +307,6 @@ public void setUploadTimestamp(long uploadTimestamp) {
      * For debugging purposes only.
      */
     public String toFormattedString() {
-        return getLocalPath() + " status:"+getUploadStatus() + " result:" + getLastResult();
+        return getLocalPath() + " status:"+getUploadStatus() + " result:" + (getLastResult()==null?"null":getLastResult().getCode());
     }
 }

File: src/com/owncloud/android/files/services/FileUploadService.java
Patch:
@@ -289,7 +289,9 @@ public void onCreate() {
      * 
      * Note: We use an IntentService here. It does not provide simultaneous
      * requests, but instead internally queues them and gets them to this
-     * onHandleIntent method one after another.
+     * onHandleIntent method one after another. This makes implementation less
+     * error-prone but prevents files to be added to list while another upload
+     * is active. If everything else works fine, fixing this should be a TODO.
      * 
      * Entry point to add one or several files to the queue of uploads.
      * 

File: src/com/owncloud/android/db/UploadDbHandler.java
Patch:
@@ -228,7 +228,7 @@ public int updateUploadInternal(Cursor c, UploadStatus status, RemoteOperationRe
             UploadDbObject uploadObject = UploadDbObject.fromString(uploadObjectString);
             
             String path = c.getString(c.getColumnIndex("path"));
-            Log_OC.e(
+            Log_OC.d(
                     TAG,
                     "Updating " + path + ": " + uploadObject.getLocalPath() + " with uploadStatus=" + status + "(old:"
                             + uploadObject.getUploadStatus() + ") and result=" + result + "(old:"

File: src/com/owncloud/android/ui/fragment/UploadListFragment.java
Patch:
@@ -137,6 +137,7 @@ private boolean userCanCancelUpload(UploadDbObject uploadFile) {
         switch (uploadFile.getUploadStatus()) {
         case UPLOAD_IN_PROGRESS:
         case UPLOAD_LATER:
+        case UPLOAD_FAILED_RETRY:
             return true;
         default:
             return false;
@@ -152,7 +153,7 @@ private boolean userCanCancelUpload(UploadDbObject uploadFile) {
     private boolean userCanRetryUpload(UploadDbObject uploadFile) {
         switch (uploadFile.getUploadStatus()) {
         case UPLOAD_CANCELLED:
-        case UPLOAD_FAILED_RETRY:
+        //case UPLOAD_FAILED_RETRY://automatically retried. no need for user option.
         case UPLOAD_FAILED_GIVE_UP:
             return true;
         default:

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -47,7 +47,7 @@
  */
 public class FileOperationsHelper {
 
-    private static final String TAG = FileOperationsHelper.class.getName();
+    private static final String TAG = FileOperationsHelper.class.getSimpleName();
     
     private static final String FTAG_CHOOSER_DIALOG = "CHOOSER_DIALOG"; 
 

File: src/com/owncloud/android/ui/adapter/ExpandableUploadListAdapter.java
Patch:
@@ -239,7 +239,7 @@ public Object getChild(int groupPosition, int childPosition) {
 
     @Override
     public long getChildId(int groupPosition, int childPosition) {
-        return groupPosition * 1000l + childPosition;
+        return childPosition;
     }
 
     @Override
@@ -291,6 +291,6 @@ public View getGroupView(int groupPosition, boolean isExpanded, View convertView
 
     @Override
     public boolean isChildSelectable(int groupPosition, int childPosition) {
-        return false;
+        return true;
     }
 }

File: src/com/owncloud/android/files/services/ConnectivityActionReceiver.java
Patch:
@@ -61,7 +61,7 @@ public void onReceive(final Context context, Intent intent) {
             ConnectivityManager cm =
                     (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
             NetworkInfo networkInfo = cm.getActiveNetworkInfo();
-            if(networkInfo.getType() == ConnectivityManager.TYPE_WIFI &&
+            if(networkInfo == null || networkInfo.getType() == ConnectivityManager.TYPE_WIFI &&
                 ! networkInfo.isConnected()) {
                 Log.d(TAG, "Wifi is disconnected: " + String.valueOf(networkInfo));
                 wifiDisconnected(context);

File: src/com/owncloud/android/files/services/FileUploadService.java
Patch:
@@ -253,6 +253,7 @@ public void onCreate() {
             mDb.updateUpload(uploadDbObject);   
         }
         
+        //TODO This service can be instantiated at any time. Move this retry call to start of app.
         if(InstantUploadBroadcastReceiver.isOnline(getApplicationContext())) {
             Log_OC.d(TAG, "FileUploadService.retry() called by onCreate()");
             FileUploadService.retry(getApplicationContext());

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1221,6 +1221,8 @@ public void onReceive(Context context, Intent intent) {
                 if (sameAccount && sameFile && detailFragmentIsShown) {
                     if (uploadWasFine) {
                         setFile(getStorageManager().getFileByPath(uploadedRemotePath));
+                    } else {
+                        //TODO remove upload progress bar after upload failed.
                     }
                     if (renamedInUpload) {
                         String newName = (new File(uploadedRemotePath)).getName();

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -70,6 +70,7 @@ public void onUploadItemClick(UploadDbObject file) {
             // no break; to start upload immediately.
         case UPLOAD_LATER:
         case UPLOAD_FAILED_RETRY:
+            Log_OC.d(TAG, "FileUploadService.retry() called by onUploadItemClick()");
             FileUploadService.retry(this);
             break;
         default:
@@ -89,6 +90,7 @@ public boolean onMenuItemSelected(int featureId, MenuItem item) {
         boolean retval = true;
         switch (item.getItemId()) {
         case R.id.action_retry_uploads: {
+            Log_OC.d(TAG, "FileUploadService.retry() called by onMenuItemSelected()");
             FileUploadService.retry(this);
             break;
         }

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -52,7 +52,6 @@ public class InstantUploadBroadcastReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        android.os.Debug.waitForDebugger();
         Log_OC.d(TAG, "Received: " + intent.getAction());
         if (intent.getAction().equals(NEW_PHOTO_ACTION_UNOFFICIAL)) {
             handleNewPictureAction(context, intent); 

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -170,7 +170,7 @@ public void onClick(DialogInterface dialog, int which) {
         case DIALOG_MULTIPLE_ACCOUNT:
             CharSequence ac[] = new CharSequence[mAccountManager.getAccountsByType(MainApp.getAccountType()).length];
             for (int i = 0; i < ac.length; ++i) {
-                ac[i] = mAccountManager.getAccountsByType(MainApp.getAccountType())[i].name;
+                ac[i] = DisplayUtils.convertIdn(mAccountManager.getAccountsByType(MainApp.getAccountType())[i].name, false);
             }
             builder.setTitle(R.string.common_choose_account);
             builder.setItems(ac, new OnClickListener() {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -710,6 +710,8 @@ private void requestSimpleUpload(Intent data, int resultCode) {
                             cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME));
                     Log.i(TAG, "Display Name: " + displayName + "; mimeType: " + mimeType);
 
+                    displayName.replace(File.separatorChar, '_');
+                    displayName.replace(File.pathSeparatorChar, '_');
                     remotepath += displayName + DisplayUtils.getComposedFileExtension(filepath);
 
                 }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -906,10 +906,10 @@ public void onClick(DialogInterface dialog, int which) {
      * @return The path to the content or null if it could not be found
      */
     public String getPath(Uri uri) {
-        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
+        final boolean isKitKatOrLater = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
 
         // DocumentProvider
-        if (isKitKat && DocumentsContract.isDocumentUri(getApplicationContext(), uri)) {
+        if (isKitKatOrLater && DocumentsContract.isDocumentUri(getApplicationContext(), uri)) {
             // ExternalStorageProvider
             if (UriUtils.isExternalStorageDocument(uri)) {
                 final String docId = DocumentsContract.getDocumentId(uri);

File: src/com/owncloud/android/ui/activity/UploadListActivity.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.owncloud.android.R;
 import com.owncloud.android.db.UploadDbHandler;
+import com.owncloud.android.db.UploadDbObject;
 import com.owncloud.android.ui.errorhandling.ExceptionHandler;
 import com.owncloud.android.ui.fragment.UploadListFragment;
 
@@ -32,7 +33,7 @@ protected void onCreate(Bundle savedInstanceState) {
     // UploadListFragment.ContainerActivity
     // ////////////////////////////////////////
     @Override
-    public void onUploadItemClick(File file) {
+    public void onUploadItemClick(UploadDbObject file) {
         // TODO Auto-generated method stub
 
     }

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -170,7 +170,7 @@ public void onClick(DialogInterface dialog, int which) {
         case DIALOG_MULTIPLE_ACCOUNT:
             CharSequence ac[] = new CharSequence[mAccountManager.getAccountsByType(MainApp.getAccountType()).length];
             for (int i = 0; i < ac.length; ++i) {
-                ac[i] = mAccountManager.getAccountsByType(MainApp.getAccountType())[i].name;
+                ac[i] = DisplayUtils.convertIdn(mAccountManager.getAccountsByType(MainApp.getAccountType())[i].name, false);
             }
             builder.setTitle(R.string.common_choose_account);
             builder.setItems(ac, new OnClickListener() {

File: src/com/owncloud/android/utils/DisplayUtils.java
Patch:
@@ -289,7 +289,7 @@ public static CharSequence getRelativeDateTimeString(Context c, long time, long
         else if ((System.currentTimeMillis() - time) < 60 * 1000) {
             return c.getString(R.string.file_list_seconds_ago);
         } else {
-            // Workaround 2.x bug
+            // Workaround 2.x bug (see https://github.com/owncloud/android/issues/716)
             if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.HONEYCOMB && (System.currentTimeMillis() - time) > 24 * 60 * 60 * 1000){
                 Date date = new Date(time);
                 date.setHours(0);

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -476,11 +476,9 @@ private void initTargetFolder() {
                 mParents.add(dir);
         }
         //Make sure that path still exists, if it doesn't pop the stack and try the previous path
-        if (mParents.size() > 1) {
-            while(!mStorageManager.fileExists(generatePath(mParents))){
+            while(!mStorageManager.fileExists(generatePath(mParents)) && mParents.size() > 1){
                 mParents.pop();
             }
-        }
     }
 
     

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -112,7 +112,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mParents = new Stack<String>();
 
-        ActionBar actionBar = getSherlock().getActionBar();
+        ActionBar actionBar = getSupportActionBar();
         actionBar.setIcon(DisplayUtils.getSeasonalIconId());
 
         if (prepareStreamsToUpload()) {
@@ -332,10 +332,10 @@ private void populateDirectoryList() {
 
         String current_dir = mParents.peek();
         if(current_dir.equals("")){
-            getActionBar().setTitle(getString(R.string.default_display_name_for_root_folder));
+            getSupportActionBar().setTitle(getString(R.string.default_display_name_for_root_folder));
         }
         else{
-            getActionBar().setTitle(current_dir);
+            getSupportActionBar().setTitle(current_dir);
         }
 
         String full_path = generatePath(mParents);

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -22,7 +22,7 @@
 
 import com.owncloud.android.MainApp;
 import com.owncloud.android.authentication.AccountUtils;
-import com.owncloud.android.db.DbHandler;
+import com.owncloud.android.db.UploadDbHandler;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.utils.FileStorageUtils;
@@ -105,7 +105,7 @@ private void handleNewPictureAction(Context context, Intent intent) {
         Log_OC.d(TAG, file_path + "");
 
         // save always temporally the picture to upload
-        DbHandler db = new DbHandler(context);
+        UploadDbHandler db = new UploadDbHandler(context);
         db.putFileForLater(file_path, account.name, null);
         db.close();
 
@@ -178,7 +178,7 @@ private void handleConnectivityAction(Context context, Intent intent) {
         if (!intent.hasExtra(ConnectivityManager.EXTRA_NO_CONNECTIVITY)
                 && isOnline(context)
                 && (!instantPictureUploadViaWiFiOnly(context) || (instantPictureUploadViaWiFiOnly(context) == isConnectedViaWiFi(context) == true))) {
-            DbHandler db = new DbHandler(context);
+            UploadDbHandler db = new UploadDbHandler(context);
             Cursor c = db.getAwaitingFiles();
             if (c.moveToFirst()) {
                 do {

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -50,7 +50,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.authentication.AuthenticatorActivity;
-import com.owncloud.android.db.DbHandler;
+import com.owncloud.android.db.UploadDbHandler;
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.LongClickableCheckBoxPreference;
 import com.owncloud.android.utils.DisplayUtils;
@@ -66,7 +66,7 @@ public class Preferences extends SherlockPreferenceActivity implements AccountMa
     
     private static final String TAG = "OwnCloudPreferences";
 
-    private DbHandler mDbHandler;
+    private UploadDbHandler mDbHandler;
     private CheckBoxPreference pCode;
     private Preference pAboutApp;
 
@@ -81,7 +81,7 @@ public class Preferences extends SherlockPreferenceActivity implements AccountMa
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        mDbHandler = new DbHandler(getBaseContext());
+        mDbHandler = new UploadDbHandler(getBaseContext());
         addPreferencesFromResource(R.xml.preferences);
 
         ActionBar actionBar = getSherlock().getActionBar();

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -300,6 +300,7 @@ public void saveFolder(
             cv.put(ProviderTableMeta.FILE_PUBLIC_LINK, file.getPublicLink());
             cv.put(ProviderTableMeta.FILE_PERMISSIONS, file.getPermissions());
             cv.put(ProviderTableMeta.FILE_REMOTE_ID, file.getRemoteId());
+            cv.put(ProviderTableMeta.FILE_UPDATE_THUMBNAIL, file.needsUpdateThumbnail());
 
             boolean existsByPath = fileExists(file.getRemotePath());
             if (existsByPath || fileExists(file.getFileId())) {

File: src/com/owncloud/android/MainApp.java
Patch:
@@ -58,8 +58,7 @@ public void onCreate(){
         }
 
         // initialise thumbnails cache on background thread
-        new ThumbnailsCacheManager.InitDiskCacheTask(AccountUtils.getCurrentOwnCloudAccount(mContext),
-                mContext).execute();
+        new ThumbnailsCacheManager.InitDiskCacheTask(mContext).execute();
         
         if (BuildConfig.DEBUG) {
 

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -98,7 +98,7 @@ public FileListListAdapter(
         mSortAscending = mAppPreferences.getBoolean("sortAscending", true);
         
         // initialise thumbnails cache on background thread
-        new ThumbnailsCacheManager.InitDiskCacheTask(mAccount, mContext).execute();
+        new ThumbnailsCacheManager.InitDiskCacheTask(mContext).execute();
 
     }
     
@@ -219,7 +219,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                         if (ThumbnailsCacheManager.cancelPotentialWork(file, fileIcon)) {
                             final ThumbnailsCacheManager.ThumbnailGenerationTask task = 
                                     new ThumbnailsCacheManager.ThumbnailGenerationTask(
-                                            fileIcon, mStorageManager
+                                            fileIcon, mStorageManager, mAccount
                                     );
                             if (thumbnail == null) {
                                 thumbnail = ThumbnailsCacheManager.mDefaultImg;

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -193,7 +193,7 @@ protected void onPostExecute(Void aVoid) {
 
     private class TextLineAdapter extends BaseAdapter {
         private static final int LIST_ITEM_LAYOUT = R.layout.text_file_preview_list_item;
-        private final List<String> items = new ArrayList<>();
+        private final List<String> items = new ArrayList<String>();
 
         private void add(String line) {
             items.add(line);
@@ -351,7 +351,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     /**
      * Update the file of the fragment with file value
      *
-     * @param file
+     * @param file The new file to set
      */
     public void updateFile(OCFile file) {
         setFile(file);

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -264,7 +264,7 @@ private void synchronizeFolder(OCFile folder) {
                                                                                     mCurrentSyncTime, 
                                                                                     true,
                                                                                     mIsShareSupported,
-                                                                                    true,
+                                                                                    false,
                                                                                     getStorageManager(), 
                                                                                     getAccount(), 
                                                                                     getContext()

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -242,6 +242,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 }
             } 
             else {
+                  // TODO Re-enable when server supports folder-size calculation
 //                if (FileStorageUtils.getDefaultSavePathFor(mAccount.name, file) != null){
 //                    fileSizeV.setVisibility(View.VISIBLE);
 //                    fileSizeV.setText(getFolderSizeHuman(FileStorageUtils.getDefaultSavePathFor(mAccount.name, file)));

File: src/com/owncloud/android/ui/activity/Uploader.java
Patch:
@@ -71,7 +71,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.utils.DisplayUtils;
-import com.owncloud.android.utils.Log_OC;
+import com.owncloud.android.lib.common.utils.Log_OC;
 
 import java.io.File;
 import java.util.ArrayList;

File: src/com/owncloud/android/files/FileMenuFilter.java
Patch:
@@ -148,7 +148,7 @@ private void filter(List<Integer> toShow, List <Integer> toHide) {
         /// decision is taken for each possible action on a file in the menu
         
         // DOWNLOAD 
-        if (mFile == null || mFile.isFolder() || mFile.isDown() || downloading || uploading) {
+        if (mFile == null || mFile.isDown() || downloading || uploading) {
             toHide.add(R.id.action_download_file);
             
         } else {

File: src/com/owncloud/android/ui/preview/PreviewTextFragment.java
Patch:
@@ -193,7 +193,7 @@ protected void onPostExecute(Void aVoid) {
 
     private class TextLineAdapter extends BaseAdapter {
         private static final int LIST_ITEM_LAYOUT = R.layout.text_file_preview_list_item;
-        private final List<String> items = new ArrayList<>();
+        private final List<String> items = new ArrayList<String>();
 
         private void add(String line) {
             items.add(line);
@@ -351,7 +351,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     /**
      * Update the file of the fragment with file value
      *
-     * @param file
+     * @param file The new file to set
      */
     public void updateFile(OCFile file) {
         setFile(file);

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -641,6 +641,7 @@ private void updateOCFile(OCFile file, RemoteFile remoteFile) {
         file.setModificationTimestamp(remoteFile.getModifiedTimestamp());
         file.setModificationTimestampAtLastSyncForData(remoteFile.getModifiedTimestamp());
         // file.setEtag(remoteFile.getEtag());    // TODO Etag, where available
+        file.setRemoteId(remoteFile.getRemoteId());
     }
 
     private OCFile obtainNewOCFileToUpload(String remotePath, String localPath, String mimeType,

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -168,7 +168,7 @@ private int delete(SQLiteDatabase db, Uri uri, String where, String[] whereArgs)
             String remoteId = "";
             if (c != null && c.moveToFirst()) {
                 remoteId = c.getString(c.getColumnIndex(ProviderTableMeta.FILE_REMOTE_ID));
-                ThumbnailsCacheManager.removeFileFromCache(remoteId);
+                //ThumbnailsCacheManager.removeFileFromCache(remoteId);
             }
             Log_OC.d(TAG, "Removing FILE " + remoteId);
 

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -398,6 +398,7 @@ private void saveDownloadedFile() {
         file.setMimetype(mCurrentDownload.getMimeType());
         file.setStoragePath(mCurrentDownload.getSavePath());
         file.setFileLength((new File(mCurrentDownload.getSavePath()).length()));
+        file.setRemoteId(mCurrentDownload.getFile().getRemoteId());
         mStorageManager.saveFile(file);
     }
 

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -170,6 +170,8 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                     result = new RemoteOperationResult(ResultCode.OK);
 
                 } else if (serverChanged) {
+                    mLocalFile.setRemoteId(mServerFile.getRemoteId());
+                    
                     if (mSyncFileContents) {
                         requestForDownload(mLocalFile); // local, not server; we won't to keep the value of keepInSync!
                         // the update of local data will be done later by the FileUploader service when the upload finishes

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -183,7 +183,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 }               
                 
                 // get Thumbnail if file is image
-                if (file.isImage()){
+                if (file.isImage() && file.getRemoteId() != null){
                      // Thumbnail in Cache?
                     Bitmap thumbnail = ThumbnailsCacheManager.getBitmapFromDiskCache(
                             String.valueOf(file.getRemoteId())

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -630,7 +630,7 @@ private void saveUploadedFile() {
               // coincidence; nothing else is needed, the storagePath is right
               // in the instance returned by mCurrentUpload.getFile()
         }
-
+        file.setNeedsUpdateThumbnail(true);
         mStorageManager.saveFile(file);
     }
 

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -264,6 +264,7 @@ private void synchronizeFolder(OCFile folder) {
                                                                                     mCurrentSyncTime, 
                                                                                     true,
                                                                                     mIsShareSupported,
+                                                                                    true,
                                                                                     getStorageManager(), 
                                                                                     getAccount(), 
                                                                                     getContext()

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -37,6 +37,7 @@
 import com.owncloud.android.lib.common.utils.Log_OC;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.MoveActivity;
+import com.owncloud.android.ui.activity.OnEnforceableRefreshListener;
 import com.owncloud.android.ui.adapter.FileListListAdapter;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;
@@ -88,7 +89,7 @@ public void onAttach(Activity activity) {
                     FileFragment.ContainerActivity.class.getSimpleName());
         }
         try {
-            setOnRefreshListener((SwipeRefreshLayout.OnRefreshListener) activity);
+            setOnRefreshListener((OnEnforceableRefreshListener) activity);
             
         } catch (ClassCastException e) {
             throw new ClassCastException(activity.toString() + " must implement " + 
@@ -174,7 +175,7 @@ public int onBrowseUp() {
             
             listDirectory(mFile);
 
-            onRefresh();
+            onRefresh(false);
             
             // restore index and top position
             restoreIndexAndTopPosition();

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -103,7 +103,7 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int position, l
 
                 if (obj != null && obj instanceof LongClickableCheckBoxPreference) {
                     mShowContextMenu = true;
-                    mAccountName = obj.toString();
+                    mAccountName = ((LongClickableCheckBoxPreference) obj).getKey();
 
                     Preferences.this.openContextMenu(listView);
 
@@ -427,7 +427,8 @@ private void addAccountsCheckboxPreferences() {
             for (Account a : accounts) {
                 LongClickableCheckBoxPreference accountPreference = new LongClickableCheckBoxPreference(this);
                 accountPreference.setKey(a.name);
-                accountPreference.setTitle(a.name);
+                // Handle internationalized domain names
+                accountPreference.setTitle(DisplayUtils.convertIdn(a.name, false));
                 mAccountsPrefCategory.addPreference(accountPreference);
 
                 // Check the current account that is being used

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -36,6 +36,7 @@
 import com.owncloud.android.files.FileMenuFilter;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.MoveActivity;
+import com.owncloud.android.ui.activity.SwipeRefresh;
 import com.owncloud.android.ui.adapter.FileListListAdapter;
 import com.owncloud.android.ui.dialog.ConfirmationDialogFragment;
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;
@@ -88,7 +89,7 @@ public void onAttach(Activity activity) {
                     FileFragment.ContainerActivity.class.getSimpleName());
         }
         try {
-            setOnRefreshListener((SwipeRefreshLayout.OnRefreshListener) activity);
+            setOnRefreshListener((SwipeRefresh) activity);
             
         } catch (ClassCastException e) {
             throw new ClassCastException(activity.toString() + " must implement " + 
@@ -174,7 +175,7 @@ public int onBrowseUp() {
             
             listDirectory(mFile);
 
-            onRefresh();
+            onRefreshForced(false);
             
             // restore index and top position
             restoreIndexAndTopPosition();

File: src/com/owncloud/android/authentication/SsoWebViewClient.java
Patch:
@@ -87,6 +87,7 @@ public void setTargetUrl(String targetUrl) {
     @Override
     public void onPageStarted (WebView view, String url, Bitmap favicon) {
         Log_OC.d(TAG, "onPageStarted : " + url);
+        view.clearCache(true);
         super.onPageStarted(view, url, favicon);
     }
     

File: src/com/owncloud/android/utils/Log_OC.java
Patch:
@@ -69,9 +69,9 @@ public static void startLogging(String logPath) {
         if (!folder.exists()) {
             folder.mkdirs();
         }
-        if (logFile.exists()) {
-            logFile.delete();
-        }
+//        if (logFile.exists()) {
+//            logFile.delete();
+//        }
         try { 
             logFile.createNewFile();
             buf = new BufferedWriter(new FileWriter(logFile, true));

File: src/com/owncloud/android/ui/activity/MoveActivity.java
Patch:
@@ -449,7 +449,7 @@ public void onReceive(Context context, Intent intent) {
                         if (currentDir == null) {
                             // current folder was removed from the server 
                             Toast.makeText( MoveActivity.this, 
-                                            String.format(getString(R.string.sync_current_folder_was_removed), "PLACEHOLDER"), 
+                                            String.format(getString(R.string.sync_current_folder_was_removed), getCurrentFolder().getFileName()), 
                                             Toast.LENGTH_LONG)
                                 .show();
                             browseToRoot();

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -80,6 +80,8 @@ public class FileActivity extends SherlockFragmentActivity
     private static final String DIALOG_WAIT_TAG = "DIALOG_WAIT";
     private static final String KEY_WAITING_FOR_OP_ID = "WAITING_FOR_OP_ID";;
     
+    protected static final long DELAY_TO_REQUEST_OPERATION_ON_ACTIVITY_RESULTS = 200;
+    
     
     /** OwnCloud {@link Account} where the main {@link OCFile} handled by the activity is located. */
     private Account mAccount;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -789,7 +789,7 @@ uploadResult, upload, getResources()
                                 uploadResult.getCode();
                         Log_OC.e(TAG, message + " Http-Code: " + uploadResult.getHttpCode());
                         if (uploadResult.getCode() == ResultCode.QUOTA_EXCEEDED) {
-                            message = getString(R.string.failed_upload_quota_exceeded_text);
+                            //message = getString(R.string.failed_upload_quota_exceeded_text);
                             if (db.updateFileState(
                                     upload.getOriginalStoragePath(), 
                                     DbHandler.UPLOAD_STATUS_UPLOAD_FAILED,

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -64,10 +64,11 @@ public static String getErrorCauseMessage(RemoteOperationResult result, RemoteOp
                     message = String.format(res.getString(R.string.error__upload__local_file_not_copied), 
                             ((UploadFileOperation) operation).getFileName(), 
                             res.getString(R.string.app_name));
-                    
+                /*
                 } else if (result.getCode() == ResultCode.QUOTA_EXCEEDED) {
                     message = res.getString(R.string.failed_upload_quota_exceeded_text);
-                    
+                  
+                    */
                 } else {
                     message = String.format(res.getString(R.string.uploader_upload_failed_content_single), 
                             ((UploadFileOperation) operation).getFileName());

File: src/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -18,7 +18,7 @@
 
 package com.owncloud.android.files;
 
-import com.owncloud.android.files.services.FileObserverService;
+import com.owncloud.android.services.observer.FileObserverService;
 import com.owncloud.android.utils.Log_OC;
 
 import android.content.BroadcastReceiver;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -66,7 +66,6 @@
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
-import com.owncloud.android.files.services.FileObserverService;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.files.services.FileUploader.FileUploaderBinder;
@@ -87,6 +86,7 @@
 import com.owncloud.android.operations.SynchronizeFileOperation;
 import com.owncloud.android.operations.SynchronizeFolderOperation;
 import com.owncloud.android.operations.UnshareLinkOperation;
+import com.owncloud.android.services.observer.FileObserverService;
 import com.owncloud.android.syncadapter.FileSyncAdapter;
 import com.owncloud.android.ui.dialog.CreateFolderDialogFragment;
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog;
@@ -165,7 +165,7 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         /// grant that FileObserverService is watching favourite files
-        if (savedInstanceState != null) {
+        if (savedInstanceState == null) {
             Intent initObserversIntent = FileObserverService.makeInitIntent(this);
             startService(initObserversIntent);
         }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -38,10 +38,10 @@
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileMenuFilter;
-import com.owncloud.android.files.services.FileObserverService;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.files.services.FileUploader.FileUploaderBinder;
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
+import com.owncloud.android.services.observer.FileObserverService;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.dialog.RemoveFileDialogFragment;

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -690,7 +690,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                 Log_OC.i("SQL", "OUT of the ADD in onUpgrade; oldVersion == " + oldVersion + ", newVersion == " + newVersion);
 
             if (oldVersion < 7 && newVersion >= 7) {
-                Log_OC.i("SQL", "Entering in the #6 ADD in onUpgrade");
+                Log_OC.i("SQL", "Entering in the #7 ADD in onUpgrade");
                 db.beginTransaction();
                 try {
                     db .execSQL("ALTER TABLE " + ProviderTableMeta.FILE_TABLE_NAME +

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -135,8 +135,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
             view.findViewById(R.id.imageView2).setVisibility(View.INVISIBLE);   // not GONE; the alignment changes; ugly way to keep it
             view.findViewById(R.id.imageView3).setVisibility(View.GONE);
             
-            view.findViewById(R.id.shareIcon).setVisibility(View.GONE);
-            view.findViewById(R.id.shareWithMeIcon).setVisibility(View.GONE);
+            view.findViewById(R.id.sharedIcon).setVisibility(View.GONE);
+            view.findViewById(R.id.sharedWithMeIcon).setVisibility(View.GONE);
         }
 
         return view;

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -697,7 +697,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                             " ADD COLUMN " + ProviderTableMeta.FILE_PERMISSIONS + " TEXT " +
                             " DEFAULT NULL");
 
-                    db .execSQL("ALTER TABLE " + ProviderTableMeta.FILE_REMOTE_ID +
+                    db .execSQL("ALTER TABLE " + ProviderTableMeta.FILE_TABLE_NAME +
                             " ADD COLUMN " + ProviderTableMeta.FILE_REMOTE_ID + " TEXT " +
                             " DEFAULT NULL");
                     

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -37,6 +37,7 @@
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.notifications.NotificationBuilderWithProgressBar;
 import com.owncloud.android.notifications.NotificationDelayer;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
@@ -351,7 +352,7 @@ private void downloadFile(String downloadKey) {
                     mStorageManager = 
                             new FileDataStorageManager(mLastAccount, getContentResolver());
                     OwnCloudAccount ocAccount = new OwnCloudAccount(mLastAccount, this);
-                    mDownloadClient = ((MainApp)getApplicationContext()).getOwnCloudClientManager().
+                    mDownloadClient = OwnCloudClientManagerFactory.getDefaultSingleton().
                             getClientFor(ocAccount, this);
                 }
 

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -51,6 +51,7 @@
 import com.owncloud.android.lib.common.network.OnDatatransferProgressListener;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 import com.owncloud.android.ui.activity.FailedUploadActivity;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
@@ -490,7 +491,7 @@ public void uploadFile(String uploadKey) {
                     mStorageManager = 
                             new FileDataStorageManager(mLastAccount, getContentResolver());
                     OwnCloudAccount ocAccount = new OwnCloudAccount(mLastAccount, this);
-                    mUploadClient = ((MainApp)getApplicationContext()).getOwnCloudClientManager().
+                    mUploadClient = OwnCloudClientManagerFactory.getDefaultSingleton().
                             getClientFor(ocAccount, this);
                 }
                 

File: src/com/owncloud/android/syncadapter/AbstractOwnCloudSyncAdapter.java
Patch:
@@ -30,6 +30,7 @@
 import com.owncloud.android.lib.common.accounts.AccountUtils.AccountNotFoundException;
 import com.owncloud.android.lib.common.OwnCloudAccount;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudClientManagerFactory;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;
@@ -103,7 +104,7 @@ public FileDataStorageManager getStorageManager() {
     protected void initClientForCurrentAccount() throws OperationCanceledException, AuthenticatorException, IOException, AccountNotFoundException {
         AccountUtils.constructFullURLForAccount(getContext(), account);
         OwnCloudAccount ocAccount = new OwnCloudAccount(account, getContext());
-        mClient = ((MainApp)(getContext().getApplicationContext())).getOwnCloudClientManager().
+        mClient = OwnCloudClientManagerFactory.getDefaultSingleton().
                 getClientFor(ocAccount, getContext());
     }
     

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -440,6 +440,9 @@ public void onRefresh() {
         super.onRefresh();
         
         if (mFile != null) {
+            // Refresh mFile
+            mFile = mContainerActivity.getStorageManager().getFileById(mFile.getFileId());
+
             listDirectory(mFile);
             
             ((FileDisplayActivity)mContainerActivity).startSyncFolderOperation(mFile);

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -62,7 +62,8 @@ public static String getErrorCauseMessage(RemoteOperationResult result, RemoteOp
                 if (result.getCode() == ResultCode.LOCAL_STORAGE_FULL
                         || result.getCode() == ResultCode.LOCAL_STORAGE_NOT_COPIED) {
                     message = String.format(res.getString(R.string.error__upload__local_file_not_copied), 
-                            ((UploadFileOperation) operation).getFileName());
+                            ((UploadFileOperation) operation).getFileName(), 
+                            res.getString(R.string.app_name));
                     
                 } else if (result.getCode() == ResultCode.QUOTA_EXCEEDED) {
                     message = res.getString(R.string.failed_upload_quota_exceeded_text);

File: src/com/owncloud/android/utils/ErrorMessageAdapter.java
Patch:
@@ -62,7 +62,8 @@ public static String getErrorCauseMessage(RemoteOperationResult result, RemoteOp
                 if (result.getCode() == ResultCode.LOCAL_STORAGE_FULL
                         || result.getCode() == ResultCode.LOCAL_STORAGE_NOT_COPIED) {
                     message = String.format(res.getString(R.string.error__upload__local_file_not_copied), 
-                            ((UploadFileOperation) operation).getFileName());
+                            ((UploadFileOperation) operation).getFileName(), 
+                            res.getString(R.string.app_name));
                     
                 } else if (result.getCode() == ResultCode.QUOTA_EXCEEDED) {
                     message = res.getString(R.string.failed_upload_quota_exceeded_text);

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -928,7 +928,6 @@ public void onReceive(Context context, Intent intent) {
                             
                         } else {
                             getListOfFilesFragment().enableSwipe();
-                            getListOfFilesFragment().hideSwipeProgress();
                         }
                         
                 }

File: src/com/owncloud/android/ui/fragment/ExtendedListFragment.java
Patch:
@@ -119,14 +119,14 @@ protected void setReferencePosition(int position) {
     }
 
     @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
+    public void onItemClick (AdapterView<?> parent, View view, int position, long id) {
         // to be @overriden  
     }
 
     @Override
     public void onRefresh() {
         // to be @overriden  
-        
+        mRefreshLayout.setRefreshing(false);
     }
 
     /**

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -181,7 +181,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
             }
             
         } else {
-            setFile((OCFile)savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_FILE));
+            file = (OCFile)savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_FILE);
+            setFile(file);
             mAccount = savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_ACCOUNT);
             mSavedPlaybackPosition = 
                     savedInstanceState.getInt(PreviewMediaFragment.EXTRA_PLAY_POSITION);

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -113,7 +113,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             fileName.setText(name);
             ImageView fileIcon = (ImageView) view.findViewById(R.id.imageView1);
-            fileIcon.setImageResource(DisplayUtils.getResourceId(file.getMimetype()));
+            fileIcon.setImageResource(DisplayUtils.getResourceId(file.getMimetype(), file.getFileName()));
             ImageView localStateView = (ImageView) view.findViewById(R.id.imageView2);
             FileDownloaderBinder downloaderBinder = mTransferServiceGetter.getFileDownloaderBinder();
             FileUploaderBinder uploaderBinder = mTransferServiceGetter.getFileUploaderBinder();

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -330,7 +330,7 @@ public void updateFileDetails(boolean transferring, boolean refresh) {
             
             // set file details
             setFilename(file.getFileName());
-            setFiletype(file.getMimetype());
+            setFiletype(file.getMimetype(), file.getFileName());
             setFilesize(file.getFileLength());
             if(ocVersionSupportsTimeCreated()){
                 setTimeCreated(file.getCreationTimestamp());
@@ -383,15 +383,15 @@ private void setFilename(String filename) {
      * Updates the MIME type in view
      * @param mimetype to set
      */
-    private void setFiletype(String mimetype) {
+    private void setFiletype(String mimetype, String filename) {
         TextView tv = (TextView) getView().findViewById(R.id.fdType);
         if (tv != null) {
             String printableMimetype = DisplayUtils.convertMIMEtoPrettyPrint(mimetype);;        
             tv.setText(printableMimetype);
         }
         ImageView iv = (ImageView) getView().findViewById(R.id.fdIcon);
         if (iv != null) {
-            iv.setImageResource(DisplayUtils.getResourceId(mimetype));
+            iv.setImageResource(DisplayUtils.getResourceId(mimetype, filename));
         }
     }
 

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -181,7 +181,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
             }
             
         } else {
-            setFile((OCFile)savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_FILE));
+            file = (OCFile)savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_FILE);
+            setFile(file);
             mAccount = savedInstanceState.getParcelable(PreviewMediaFragment.EXTRA_ACCOUNT);
             mSavedPlaybackPosition = 
                     savedInstanceState.getInt(PreviewMediaFragment.EXTRA_PLAY_POSITION);

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -397,7 +397,6 @@ public boolean dispatchResultIfFinished(int operationId, OnRemoteOperationListen
                 //Log_OC.wtf(TAG, "Sending callback later");
             } else {
                 if (!mPendingOperations.isEmpty()) {
-                    nextOperation();
                     return true;
                 } else {
                     return false;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -711,6 +711,7 @@ protected void onPause() {
             mDownloadFinishReceiver = null;
         }
         
+        
         Log_OC.d(TAG, "onPause() end");
         super.onPause();
     }

File: src/com/owncloud/android/ui/dialog/ShareLinkToDialog.java
Patch:
@@ -42,7 +42,6 @@
 import com.actionbarsherlock.app.SherlockDialogFragment;
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.files.FileOperationsHelper;
 import com.owncloud.android.ui.activity.ComponentsGetter;
 import com.owncloud.android.ui.activity.CopyToClipboardActivity;
 import com.owncloud.android.ui.activity.FileActivity;

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -322,6 +322,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             case R.id.action_send_file: {
                 sendFile();
+                return true;
             }
             case R.id.action_sync_file: {
                 mContainerActivity.getFileOperationsHelper().syncFile(getFile());

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -322,6 +322,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             case R.id.action_send_file: {
                 sendFile();
+                return true;
             }
             case R.id.action_sync_file: {
                 mContainerActivity.getFileOperationsHelper().syncFile(getFile());

File: src/com/owncloud/android/files/services/FileObserverService.java
Patch:
@@ -82,10 +82,10 @@ public void onCreate() {
     
     @Override
     public void onDestroy() {
-        super.onDestroy();
         unregisterReceiver(mDownloadReceiver);
         mObserversMap = null;   // TODO study carefully the life cycle of Services to grant the best possible observance
         Log_OC.d(TAG, "Bye, bye");
+        super.onDestroy();
     }
     
     

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -218,6 +218,7 @@ public static String getMessageForMediaError(Context context, int what, int extr
      */
     @Override
     public void onCreate() {
+        super.onCreate();
         Log_OC.d(TAG, "Creating ownCloud media service");
 
         mWifiLock = ((WifiManager) getSystemService(Context.WIFI_SERVICE)).
@@ -637,6 +638,7 @@ public void onDestroy() {
         mState = State.STOPPED;
         releaseResources(true);
         giveUpAudioFocus();
+        super.onDestroy();
     }
     
 

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -172,10 +172,10 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     @Override
     public void onDestroy() {
         //Log_OC.wtf(TAG, "onDestroy init" );
-        super.onDestroy();
         //Log_OC.wtf(TAG, "Clear mUndispatchedFinisiedOperations" );
         mUndispatchedFinishedOperations.clear();
         //Log_OC.wtf(TAG, "onDestroy end" );
+        super.onDestroy();
     }
 
 

File: src/com/owncloud/android/ui/activity/AccountSelectActivity.java
Patch:
@@ -89,7 +89,6 @@ protected void onResume() {
     
     @Override
     protected void onPause() {
-        super.onPause();
         if (this.isFinishing()) {
             Account current = AccountUtils.getCurrentOwnCloudAccount(this);
             if ((mPreviousAccount == null && current != null) || 
@@ -102,6 +101,7 @@ protected void onPause() {
                 startActivity(i);
             }
         }
+        super.onPause();
     }
 
     @Override

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -696,7 +696,6 @@ protected void onResume() {
 
     @Override
     protected void onPause() {
-        super.onPause();
         Log_OC.e(TAG, "onPause() start");
         if (mSyncBroadcastReceiver != null) {
             unregisterReceiver(mSyncBroadcastReceiver);
@@ -712,9 +711,8 @@ protected void onPause() {
             mDownloadFinishReceiver = null;
         }
         
-        dismissLoadingDialog();
-        
         Log_OC.d(TAG, "onPause() end");
+        super.onPause();
     }
 
 

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -261,10 +261,10 @@ public boolean onPreferenceClick(Preference preference) {
 
     @Override
     protected void onResume() {
+        super.onResume();
         SharedPreferences appPrefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
         boolean state = appPrefs.getBoolean("set_pincode", false);
         pCode.setChecked(state);
-        super.onResume();
     }
 
     @Override

File: src/com/owncloud/android/ui/dialog/LoadingDialog.java
Patch:
@@ -69,6 +69,6 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
     public void onDestroyView() {
         if (getDialog() != null && getRetainInstance())
             getDialog().setDismissMessage(null);
-            super.onDestroyView();
+        super.onDestroyView();
     }
 }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -147,8 +147,8 @@ public void onStart() {
     
     @Override
     public void onStop() {
-        super.onStop();
         leaveTransferProgress();
+        super.onStop();
     }
 
     

File: src/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -164,8 +164,8 @@ public void onPause() {
     
     @Override
     public void onStop() {
-        super.onStop();
         leaveTransferProgress();
+        super.onStop();
     }
     
     @Override

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -269,9 +269,9 @@ protected void onPostResume() {
     
     @Override
     public void onPause() {
-        super.onPause();
         unregisterReceiver(mDownloadFinishReceiver);
         mDownloadFinishReceiver = null;
+        super.onPause();
     }
     
 

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -297,10 +297,10 @@ public void onPause() {
 
     @Override
     public void onDestroy() {
-        super.onDestroy();
         if (mBitmap != null) {
             mBitmap.recycle();
         }
+        super.onDestroy();
     }
 
     

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -213,6 +213,9 @@ public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
         
         if (mContainerActivity.getStorageManager() != null) {
+            // Update the file
+            setFile(mContainerActivity.getStorageManager().getFileById(getFile().getFileId()));
+            
             FileMenuFilter mf = new FileMenuFilter(
                 getFile(),
                 mContainerActivity.getStorageManager().getAccount(),

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -696,7 +696,6 @@ protected void onResume() {
 
     @Override
     protected void onPause() {
-        super.onPause();
         Log_OC.e(TAG, "onPause() start");
         if (mSyncBroadcastReceiver != null) {
             unregisterReceiver(mSyncBroadcastReceiver);
@@ -713,6 +712,7 @@ protected void onPause() {
         }
         
         Log_OC.d(TAG, "onPause() end");
+        super.onPause();
     }
 
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -709,6 +709,9 @@ protected void onPause() {
             unregisterReceiver(mDownloadFinishReceiver);
             mDownloadFinishReceiver = null;
         }
+        
+        dismissLoadingDialog();
+        
         Log_OC.d(TAG, "onPause() end");
     }
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1028,7 +1028,6 @@ public void onReceive(Context context, Intent intent) {
             }
             
             removeStickyBroadcast(intent);
-            mWaitingToPreview = null;
         }
 
         private boolean isDescendant(String downloadedRemotePath) {
@@ -1145,7 +1144,7 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             if (component.equals(new ComponentName(FileDisplayActivity.this, FileDownloader.class))) {
                 Log_OC.d(TAG, "Download service connected");
                 mDownloaderBinder = (FileDownloaderBinder) service;
-                if (mWaitingToPreview != null) {
+                if (mWaitingToPreview != null && !mWaitingToPreview.isDown()) {
                     requestForDownload();
                 }
 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1301,6 +1301,7 @@ private void onRemoveFileOperationFinish(RemoveFileOperation operation, RemoteOp
                 if (second instanceof PreviewMediaFragment) {
                     ((PreviewMediaFragment)second).stopPreview(true);
                 }
+                setFile(getStorageManager().getFileById(removedFile.getParentId()));
                 cleanSecondFragment();
             }
             if (getStorageManager().getFileById(removedFile.getParentId()).equals(getCurrentDir())) {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1301,6 +1301,7 @@ private void onRemoveFileOperationFinish(RemoveFileOperation operation, RemoteOp
                 if (second instanceof PreviewMediaFragment) {
                     ((PreviewMediaFragment)second).stopPreview(true);
                 }
+                setFile(getStorageManager().getFileById(removedFile.getParentId()));
                 cleanSecondFragment();
             }
             if (getStorageManager().getFileById(removedFile.getParentId()).equals(getCurrentDir())) {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1306,7 +1306,7 @@ private void onRemoveFileOperationFinish(RemoveFileOperation operation, RemoteOp
             if (getStorageManager().getFileById(removedFile.getParentId()).equals(getCurrentDir())) {
                 refreshListOfFilesFragment();
             }
-
+            invalidateOptionsMenu();
         } else {
             Toast msg = Toast.makeText(this, R.string.remove_fail_msg, Toast.LENGTH_LONG); 
             msg.show();

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1028,6 +1028,7 @@ public void onReceive(Context context, Intent intent) {
             }
             
             removeStickyBroadcast(intent);
+            mWaitingToPreview = null;
         }
 
         private boolean isDescendant(String downloadedRemotePath) {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1358,7 +1358,9 @@ private void onRenameFileOperationFinish(RenameFileOperation operation, RemoteOp
             FileFragment details = getSecondFragment();
             if (details != null && details instanceof FileDetailFragment && renamedFile.equals(details.getFile()) ) {
                 ((FileDetailFragment) details).updateFileDetails(renamedFile, getAccount());
+                showDetails(renamedFile);
             }
+
             if (getStorageManager().getFileById(renamedFile.getParentId()).equals(getCurrentDir())) {
                 refreshListOfFilesFragment();
             }

File: src/com/owncloud/android/ui/dialog/RemoveFileDialogFragment.java
Patch:
@@ -73,8 +73,6 @@ public static RemoveFileDialogFragment newInstance(OCFile file) {
         args.putParcelable(ARG_TARGET_FILE, file);
         frag.setArguments(args);
         
-        frag.setOnConfirmationListener(frag);
-        
         return frag;
     }
 
@@ -84,6 +82,9 @@ public static RemoveFileDialogFragment newInstance(OCFile file) {
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         Dialog dialog = super.onCreateDialog(savedInstanceState);
         mTargetFile = getArguments().getParcelable(ARG_TARGET_FILE);
+        
+        setOnConfirmationListener(this);
+        
         return dialog;
     }    
 

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -220,13 +220,13 @@ public void renameFile(OCFile file, String newFilename) {
     }
 
 
-    public void removeFile(OCFile file, boolean removeLocalCopy) {
+    public void removeFile(OCFile file, boolean onlyLocalCopy) {
         // RemoveFile
         Intent service = new Intent(mFileActivity, OperationsService.class);
         service.setAction(OperationsService.ACTION_REMOVE);
         service.putExtra(OperationsService.EXTRA_ACCOUNT, mFileActivity.getAccount());
         service.putExtra(OperationsService.EXTRA_REMOTE_PATH, file.getRemotePath());
-        service.putExtra(OperationsService.EXTRA_REMOVE_LOCAL_COPY, removeLocalCopy);
+        service.putExtra(OperationsService.EXTRA_REMOVE_ONLY_LOCAL, onlyLocalCopy);
         mFileActivity.getOperationsServiceBinder().newOperation(service);
         
         mFileActivity.showLoadingDialog();

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -68,7 +68,7 @@ public class OperationsService extends Service {
     public static final String EXTRA_REMOTE_PATH = "REMOTE_PATH";
     public static final String EXTRA_SEND_INTENT = "SEND_INTENT";
     public static final String EXTRA_NEWNAME = "NEWNAME";
-    public static final String EXTRA_REMOVE_LOCAL_COPY = "REMOVE_LOCAL_COPY";
+    public static final String EXTRA_REMOVE_ONLY_LOCAL = "REMOVE_LOCAL_COPY";
     public static final String EXTRA_CREATE_FULL_PATH = "CREATE_FULL_PATH";
     public static final String EXTRA_RESULT = "RESULT";
     
@@ -349,8 +349,8 @@ public long newOperation(Intent operationIntent) {
                     } else if (action.equals(ACTION_REMOVE)) {
                         // Remove file or folder
                         String remotePath = operationIntent.getStringExtra(EXTRA_REMOTE_PATH);
-                        boolean removeLocalCopy = operationIntent.getBooleanExtra(EXTRA_REMOVE_LOCAL_COPY, true);
-                        operation = new RemoveFileOperation(remotePath, removeLocalCopy);
+                        boolean onlyLocalCopy = operationIntent.getBooleanExtra(EXTRA_REMOVE_ONLY_LOCAL, false);
+                        operation = new RemoveFileOperation(remotePath, onlyLocalCopy);
                         
                     } else if (action.equals(ACTION_CREATE_FOLDER)) {
                         // Create Folder

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -378,7 +378,7 @@ private OCFileListFragment getListOfFilesFragment() {
         return null;
     }
 
-    protected FileFragment getSecondFragment() {
+    public FileFragment getSecondFragment() {
         Fragment second = getSupportFragmentManager().findFragmentByTag(FileDisplayActivity.TAG_SECOND_FRAGMENT);
         if (second != null) {
             return (FileFragment)second;
@@ -1563,10 +1563,12 @@ public void cancelTransference(OCFile file) {
         Account account = getAccount();
         if (mDownloaderBinder != null && mDownloaderBinder.isDownloading(account, file)) {
             mDownloaderBinder.cancel(account, file);
+            refreshListOfFilesFragment();
             onTransferStateChanged(file, false, false);
 
         } else if (mUploaderBinder != null && mUploaderBinder.isUploading(account, file)) {
             mUploaderBinder.cancel(account, file);
+            refreshListOfFilesFragment();
             if (!file.fileExists()) {
                 cleanSecondFragment();
                 

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -78,8 +78,6 @@ public class PreviewImageFragment extends FileFragment implements
 
     private boolean mIgnoreFirstSavedState;
 
-    private FileFragment.ContainerActivity mContainerActivity;
-
     
     /**
      * Creates a fragment to preview an image.

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -90,8 +90,6 @@ public class PreviewMediaFragment extends FileFragment implements
     private boolean mAutoplay;
     public boolean mPrepared;
     
-    private FileFragment.ContainerActivity mContainerActivity;
-
     private static final String TAG = PreviewMediaFragment.class.getSimpleName();
 
     

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -465,7 +465,7 @@ private void startUpload(String img_path) {
     private boolean canInstantUpload() {
 
         if (!InstantUploadBroadcastReceiver.isOnline(this)
-                || (InstantUploadBroadcastReceiver.instantUploadViaWiFiOnly(this) && !InstantUploadBroadcastReceiver
+                || (InstantUploadBroadcastReceiver.instantPictureUploadViaWiFiOnly(this) && !InstantUploadBroadcastReceiver
                         .isConnectedViaWiFi(this))) {
             return false;
         } else {

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -219,6 +219,8 @@ protected void onCreate(Bundle savedInstanceState) {
         /// initialize general UI elements
         initOverallUi(savedInstanceState);
         
+        mOkButton = findViewById(R.id.buttonOK);
+
         /// initialize block to be moved to single Fragment to check server and get info about it 
         initServerPreFragment(savedInstanceState);
         
@@ -426,7 +428,6 @@ private void initAuthorizationPreFragment(Bundle savedInstanceState) {
         mUsernameInput = (EditText) findViewById(R.id.account_username);
         mPasswordInput = (EditText) findViewById(R.id.account_password);
         mAuthStatusView = (TextView) findViewById(R.id.auth_status_text); 
-        mOkButton = findViewById(R.id.buttonOK);
         
         /// step 1 - load and process relevant inputs (resources, intent, savedInstanceState)
         String presetUserName = null;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -150,15 +150,14 @@ protected void onRestart() {
     
     @Override 
     protected void onStart() {
+        super.onStart();
 
         if (mAccountWasSet) {
             onAccountSet(mAccountWasRestored);
         }
         if (mOperationsServiceBinder != null) {
             mOperationsServiceBinder.addOperationListener(FileActivity.this, mHandler);
         }
-        
-        super.onStart();
     }
     
     

File: src/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -95,9 +95,11 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         
         // try to access the root folder, following redirections but not SAML SSO redirections
         result = operation.execute(client);
-        while (result.isTemporalRedirection() && !result.isIdPRedirection()) {
+        String redirectedLocation = result.getRedirectedLocation(); 
+        while (redirectedLocation != null && redirectedLocation.length() > 0 && !result.isIdPRedirection()) {
             client.setWebdavUri(Uri.parse(result.getRedirectedLocation()));
             result = operation.execute(client);
+            redirectedLocation = result.getRedirectedLocation();
         } 
 
         // analyze response  

File: src/com/owncloud/android/operations/DetectAuthenticationMethodOperation.java
Patch:
@@ -95,9 +95,11 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         
         // try to access the root folder, following redirections but not SAML SSO redirections
         result = operation.execute(client);
-        while (result.isTemporalRedirection() && !result.isIdPRedirection()) {
+        String redirectedLocation = result.getRedirectedLocation(); 
+        while (redirectedLocation != null && redirectedLocation.length() > 0 && !result.isIdPRedirection()) {
             client.setWebdavUri(Uri.parse(result.getRedirectedLocation()));
             result = operation.execute(client);
+            redirectedLocation = result.getRedirectedLocation();
         } 
 
         // analyze response  

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -849,6 +849,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
                 }
             }
             
+            errorBuilder.setContentText(content);
             mNotificationManager.notify(R.string.uploader_upload_failed_ticker, errorBuilder.build());
         }
 

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -849,6 +849,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
                 }
             }
             
+            errorBuilder.setContentText(content);
             mNotificationManager.notify(R.string.uploader_upload_failed_ticker, errorBuilder.build());
         }
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -336,6 +336,8 @@ private void synchronizeData(ArrayList<Object> folderAndFiles, OwnCloudClient cl
                 if (remoteFile.isFolder()) {
                     remoteFile.setFileLength(localFile.getFileLength()); // TODO move operations about size of folders to FileContentProvider
                 }
+                remoteFile.setPublicLink(localFile.getPublicLink());
+                remoteFile.setShareByLink(localFile.isShareByLink());
             } else {
                 remoteFile.setEtag(""); // remote eTag will not be updated unless contents are synchronized (Synchronize[File|Folder]Operation with remoteFile as parameter)
             }

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -931,9 +931,6 @@ private void tryEmptyAuthorization() {
         
         Log_OC.d(TAG, "Trying empty authorization to detect authentication method");
         
-        /// be gentle with the user
-        showDialog(DIALOG_LOGIN_PROGRESS);
-        
         /// get the path to the root folder through WebDAV from the version server
         String webdav_path = AccountUtils.getWebdavPath(mDiscoveredVersion, mAuthTokenType);
 

File: src/com/owncloud/android/ui/CheckBoxPreferenceWithLongTitle.java
Patch:
@@ -42,5 +42,6 @@ protected void onBindView(View view) {
         TextView titleView = (TextView) view.findViewById(android.R.id.title);
         titleView.setSingleLine(false);
         titleView.setMaxLines(3);
+        titleView.setEllipsize(null);
     }
 }
\ No newline at end of file

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -79,7 +79,6 @@
 import com.owncloud.android.operations.UnshareLinkOperation;
 import com.owncloud.android.services.OperationsService;
 import com.owncloud.android.syncadapter.FileSyncAdapter;
-import com.owncloud.android.ui.adapter.SslErrorViewAdapter;
 import com.owncloud.android.ui.dialog.EditNameDialog;
 import com.owncloud.android.ui.dialog.SslUntrustedCertDialog;
 import com.owncloud.android.ui.dialog.EditNameDialog.EditNameDialogListener;

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -173,7 +173,7 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
     
     private boolean mResumed; // Control if activity is resumed
 
-    private String DIALOG_UNTRUSTED_CERT = "DIALOG_UNTRUSTED_CERT";
+    public static String DIALOG_UNTRUSTED_CERT = "DIALOG_UNTRUSTED_CERT";
 
 
     /**

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1035,7 +1035,7 @@ public void onReceive(Context context, Intent intent) {
 
             if (mWaitingToSend != null) {
                 mWaitingToSend = getStorageManager().getFileByPath(mWaitingToSend.getRemotePath()); // Update the file to send
-                if (mWaitingToSend.isDown() && mWaitingToSend.getStoragePath()!=null) {
+                if (mWaitingToSend.isDown()) { 
                     sendDownloadedFile();
                 }
             }

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -222,7 +222,7 @@ public void onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMe
             toHide.add(R.id.action_cancel_upload);
             toHide.add(R.id.action_sync_file);
             toHide.add(R.id.action_see_details);
-            toHide.add(R.id.action_share_file);
+            toHide.add(R.id.action_send_file);
             if (    mContainerActivity.getFileDownloaderBinder().isDownloading(AccountUtils.getCurrentOwnCloudAccount(getActivity()), targetFile) ||
                     mContainerActivity.getFileUploaderBinder().isUploading(AccountUtils.getCurrentOwnCloudAccount(getActivity()), targetFile)           ) {
                 toDisable.add(R.id.action_rename_file);

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1035,7 +1035,7 @@ public void onReceive(Context context, Intent intent) {
 
             if (mWaitingToSend != null) {
                 mWaitingToSend = getStorageManager().getFileByPath(mWaitingToSend.getRemotePath()); // Update the file to send
-                if (mWaitingToSend.isDown()) {
+                if (mWaitingToSend.isDown() && mWaitingToSend.getStoragePath()!=null) {
                     sendDownloadedFile();
                 }
             }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1640,7 +1640,6 @@ private void requestForDownload(OCFile file) {
     }
     
     private void sendDownloadedFile(){
-        dismissLoadingDialog();
         getFileOperationsHelper().sendDownloadedFile(mWaitingToSend, this);
         mWaitingToSend = null;
     }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -391,7 +391,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 FileDisplayActivity activity = (FileDisplayActivity) getSherlockActivity();
                 // Obtain the file
                 if (!getFile().isDown()) {  // Download the file                    
-                    //activity.showLoadingDialog();
                     Log_OC.d(TAG, getFile().getRemotePath() + " : File must be downloaded");
                     activity.startDownloadForSending(getFile());
                     

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -368,7 +368,6 @@ public boolean onContextItemSelected (MenuItem item) {
             case R.id.action_send_file: {
                 // Obtain the file
                 if (!mTargetFile.isDown()) {  // Download the file
-                    ((FileDisplayActivity) getSherlockActivity()).showLoadingDialog();
                     Log_OC.d(TAG, mTargetFile.getRemotePath() + " : File must be downloaded");
                     mContainerActivity.startDownloadForSending(mTargetFile);
                     

File: tests/src/com/owncloud/android/test/AccountUtilsTest.java
Patch:
@@ -18,7 +18,7 @@
 
 package com.owncloud.android.test;
 
-import com.owncloud.android.lib.accounts.AccountUtils;
+import com.owncloud.android.lib.common.accounts.AccountUtils;
 import com.owncloud.android.lib.resources.status.OwnCloudVersion;
 
 import android.test.AndroidTestCase;

File: src/com/owncloud/android/operations/UnshareLinkOperation.java
Patch:
@@ -23,6 +23,7 @@
 import com.owncloud.android.lib.network.OwnCloudClient;
 import com.owncloud.android.lib.operations.common.OCShare;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult;
+import com.owncloud.android.lib.operations.common.ShareType;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.operations.remote.ExistenceCheckRemoteOperation;
 import com.owncloud.android.lib.operations.remote.RemoveRemoteShareOperation;
@@ -53,7 +54,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         RemoteOperationResult result  = null;
         
         // Get Share for a file
-        OCShare share = getStorageManager().getShareByPath(mRemotePath);
+        OCShare share = getStorageManager().getFirstShareByPathAndType(mRemotePath, ShareType.PUBLIC_LINK);
         
         if (share != null) {
             RemoveRemoteShareOperation operation = new RemoveRemoteShareOperation((int) share.getIdRemoteShared());

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -361,7 +361,7 @@ public boolean onContextItemSelected (MenuItem item) {
                 ((FileFragment.ContainerActivity)getActivity()).showDetails(mTargetFile);
                 return true;
             }
-            case R.id.action_share_file: {
+            case R.id.action_send_file: {
                 Intent sharingIntent = new Intent(android.content.Intent.ACTION_SEND);
                 // set MimeType
                 sharingIntent.setType(mTargetFile.getMimetype());

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -310,7 +310,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 seeDetails();
                 return true;
             }
-            case R.id.action_share_file: {
+            case R.id.action_send_file: {
                 shareFile();
                 return true;
             }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -207,6 +207,7 @@ protected void onCreate(Bundle savedInstanceState) {
     protected void onStart() {
         super.onStart();
         getSupportActionBar().setIcon(DisplayUtils.getSeasonalIconId());
+        refeshListOfFilesFragment();
     }
 
     @Override

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -269,7 +269,8 @@ public void onPrepareOptionsMenu(Menu menu) {
         
         MenuItem item = menu.findItem(R.id.action_unshare_file);
         // Options shareLink
-        if (!getFile().isShareByLink()) {            
+        OCFile file = ((FileActivity) getSherlockActivity()).getFile();
+        if (!file.isShareByLink()) {
             item.setVisible(false);
             item.setEnabled(false);
         } else {

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -124,14 +124,14 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             RemoteOperation operation = null;
             
             String action = intent.getAction();
-            if (action == ACTION_CREATE_SHARE) {  // Create Share
+            if (action.equals(ACTION_CREATE_SHARE)) {  // Create Share
                 String remotePath = intent.getStringExtra(EXTRA_REMOTE_PATH);
                 Intent sendIntent = intent.getParcelableExtra(EXTRA_SEND_INTENT);
                 if (remotePath.length() > 0) {
                     operation = new CreateShareOperation(remotePath, ShareType.PUBLIC_LINK, 
                             "", false, "", 1, sendIntent);
                 }
-            } else if (action == ACTION_UNSHARE) {  // Unshare file
+            } else if (action.equals(ACTION_UNSHARE)) {  // Unshare file
                 String remotePath = intent.getStringExtra(EXTRA_REMOTE_PATH);
                 if (remotePath.length() > 0) {
                     operation = new UnshareLinkOperation(remotePath, this.getApplicationContext());

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -172,8 +172,8 @@ private void onUnshareLinkOperationFinish(UnshareLinkOperation operation, Remote
             OCFile file = getStorageManager().getFileByPath(getFile().getRemotePath());
             if (file != null) {
                 setFile(file);
-                invalidateOptionsMenu();
             }
+            invalidateOptionsMenu();
         } else if  (result.getCode() == ResultCode.SHARE_NOT_FOUND) {
             backToDisplayActivity();
         }
@@ -185,8 +185,8 @@ private void onCreateShareOperationFinish(CreateShareOperation operation, Remote
             OCFile file = getStorageManager().getFileByPath(getFile().getRemotePath());
             if (file != null) {
                 setFile(file);
-                invalidateOptionsMenu();
             }
+            invalidateOptionsMenu();
         }
     }
     

File: src/com/owncloud/android/operations/CreateShareOperation.java
Patch:
@@ -92,12 +92,10 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 OCShare share = (OCShare) result.getData().get(0);
 
                 // Update DB with the response
+                share.setPath(mPath);
                 if (mPath.endsWith(FileUtils.PATH_SEPARATOR)) {
-                    share.setPath(mPath.substring(0, mPath.length()-1));
                     share.setIsFolder(true);
-                    
                 } else {
-                    share.setPath(mPath);
                     share.setIsFolder(false);
                 }
                 share.setPermissions(mPermissions);

File: src/com/owncloud/android/services/OperationsService.java
Patch:
@@ -141,7 +141,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             }
             
             mPendingOperations.add(new Pair<Target , RemoteOperation>(target, operation));
-            sendBroadcastNewOperation(target, operation);
+            //sendBroadcastNewOperation(target, operation);
             
             Message msg = mServiceHandler.obtainMessage();
             msg.arg1 = startId;
@@ -324,7 +324,7 @@ private void nextOperation() {
                 }
             }
             
-            sendBroadcastOperationFinished(mLastTarget, mCurrentOperation, result);
+            //sendBroadcastOperationFinished(mLastTarget, mCurrentOperation, result);
             callbackOperationListeners(mLastTarget, mCurrentOperation, result);
         }
     }

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -456,7 +456,7 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             if (component.equals(new ComponentName(FileActivity.this, OperationsService.class))) {
                 Log_OC.d(TAG, "Operations service connected");
                 mOperationsServiceBinder = (OperationsServiceBinder) service;
-                mOperationsServiceBinder.addOperationListener(FileActivity.this);
+                mOperationsServiceBinder.addOperationListener(FileActivity.this, mHandler);
                 if (!mOperationsServiceBinder.isPerformingBlockingOperation()) {
                     dismissLoadingDialog();
                 }

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -597,6 +597,9 @@ private OCFile createLocalFolder(String remotePath) {
      */
     private void saveUploadedFile() {
         OCFile file = mCurrentUpload.getFile();
+        if (file.fileExists()) {
+            file = mStorageManager.getFileById(file.getFileId());
+        }
         long syncDate = System.currentTimeMillis();
         file.setLastSyncDateForData(syncDate);
 

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -382,7 +382,7 @@ private void downloadFile(String downloadKey) {
      * Updates the OC File after a successful download.
      */
     private void saveDownloadedFile() {
-        OCFile file = mCurrentDownload.getFile();
+        OCFile file = mStorageManager.getFileById(mCurrentDownload.getFile().getFileId());
         long syncDate = System.currentTimeMillis();
         file.setLastSyncDateForProperties(syncDate);
         file.setLastSyncDateForData(syncDate);

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -382,7 +382,7 @@ private void downloadFile(String downloadKey) {
      * Updates the OC File after a successful download.
      */
     private void saveDownloadedFile() {
-        OCFile file = mCurrentDownload.getFile();
+        OCFile file = mStorageManager.getFileById(mCurrentDownload.getFile().getFileId());
         long syncDate = System.currentTimeMillis();
         file.setLastSyncDateForProperties(syncDate);
         file.setLastSyncDateForData(syncDate);

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -146,7 +146,7 @@ public void unshareFileWithLink(OCFile file, FileActivity callerActivity) {
         
         if (isSharedSupported(callerActivity)) {
             // Unshare the file
-            UnshareLinkOperation unshare = new UnshareLinkOperation(file);
+            UnshareLinkOperation unshare = new UnshareLinkOperation(file, callerActivity);
             unshare.execute(callerActivity.getStorageManager(), 
                     callerActivity, 
                     callerActivity.getRemoteOperationListener(), 

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1350,7 +1350,7 @@ private void onCreateShareOperationFinish(CreateShareOperation operation, Remote
 
     
     private void onUnshareLinkOperationFinish(UnshareLinkOperation operation, RemoteOperationResult result) {
-        if (result.isSuccess()) {
+        if (result.isSuccess() || result.getCode() == ResultCode.SHARE_NOT_FOUND) {
             refreshShowDetails();
             refeshListOfFilesFragment();
         }

File: src/com/owncloud/android/files/services/FileObserverService.java
Patch:
@@ -22,6 +22,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import com.owncloud.android.MainApp;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
@@ -141,7 +142,7 @@ private void initializeObservedList() {
                 null);
         if (c == null || !c.moveToFirst()) return;
         AccountManager acm = AccountManager.get(this);
-        Account[] accounts = acm.getAccounts();
+        Account[] accounts = acm.getAccountsByType(MainApp.getAccountType());
         do {
             Account account = null;
             for (Account a : accounts)

File: src/com/owncloud/android/files/FileOperationsHelper.java
Patch:
@@ -33,6 +33,7 @@
 import com.owncloud.android.lib.operations.common.ShareType;
 import com.owncloud.android.operations.CreateShareOperation;
 import com.owncloud.android.ui.activity.FileActivity;
+import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.dialog.ActivityChooserDialog;
 import com.owncloud.android.utils.Log_OC;
 
@@ -107,6 +108,7 @@ public void shareFileWithLink(OCFile file, FileActivity callerActivity) {
     public void shareFileWithLinkToApp(OCFile file, Intent sendIntent, FileActivity callerActivity) {
         
         if (file != null) {
+            ((FileDisplayActivity) callerActivity).showLoadingDialog();
             CreateShareOperation createShare = new CreateShareOperation(file.getRemotePath(), ShareType.PUBLIC_LINK, "", false, "", 1, sendIntent);
             createShare.execute(callerActivity.getStorageManager(), 
                                 callerActivity, 

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -337,7 +337,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.action_share_file: {
                 FileDisplayActivity activity = (FileDisplayActivity) getSherlockActivity();
-                activity.showLoadingDialog();
                 activity.getFileOperationsHelper().shareFileWithLink(getFile(), activity);
                 return true;
             }

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -285,7 +285,6 @@ public boolean onContextItemSelected (MenuItem item) {
         switch (item.getItemId()) {
             case R.id.action_share_file: {
                 FileDisplayActivity activity = (FileDisplayActivity) getSherlockActivity();
-                activity.showLoadingDialog();
                 activity.getFileOperationsHelper().shareFileWithLink(mTargetFile, activity);
                 return true;
             }

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -1,6 +1,6 @@
 /* ownCloud Android client application
  *   Copyright (C) 2011  Bartek Przybylski
- *   Copyright (C) 2012-2013 ownCloud Inc.
+ *   Copyright (C) 2012-2014 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -1,6 +1,6 @@
 /* ownCloud Android client application
  *   Copyright (C) 2011  Bartek Przybylski
- *   Copyright (C) 2012-2013 ownCloud Inc.
+ *   Copyright (C) 2012-2014 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License version 2,
@@ -135,6 +135,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
             
             view.findViewById(R.id.imageView2).setVisibility(View.INVISIBLE);   // not GONE; the alignment changes; ugly way to keep it
             view.findViewById(R.id.imageView3).setVisibility(View.GONE);
+            
+            view.findViewById(R.id.shareIcon).setVisibility(View.GONE);
         }
 
         return view;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -605,7 +605,7 @@ private void saveUploadedFile() {
         ReadRemoteFileOperation operation = new ReadRemoteFileOperation(mCurrentUpload.getRemotePath());
         RemoteOperationResult result = operation.execute(mUploadClient);
         if (result.isSuccess()) {
-            updateOCFile(file, result.getData().get(0));
+            updateOCFile(file, (RemoteFile)result.getData().get(0));
             file.setLastSyncDateForProperties(syncDate);
         }
         

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -23,6 +23,7 @@
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.lib.network.OwnCloudClient;
+import com.owncloud.android.lib.operations.common.RemoteFile;
 import com.owncloud.android.lib.operations.common.RemoteOperation;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult.ResultCode;
@@ -89,7 +90,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 ReadRemoteFileOperation operation = new ReadRemoteFileOperation(remotePath);
                 result = operation.execute(client);
                 if (result.isSuccess()){
-                    mServerFile = FileStorageUtils.fillOCFile(result.getData().get(0));
+                    mServerFile = FileStorageUtils.fillOCFile((RemoteFile)result.getData().get(0));
                     mServerFile.setLastSyncDateForProperties(System.currentTimeMillis());
                 }
             }

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -137,6 +137,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
         result = mDownloadOperation.execute(client);
         
         if (result.isSuccess()) {
+            mModificationTimestamp = mDownloadOperation.getModificationTimestamp();
             newFile = new File(getSavePath());
             newFile.getParentFile().mkdirs();
             moved = tmpFile.renameTo(newFile);

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -94,7 +94,7 @@ protected RemoteOperationResult run(OwnCloudClient client) {
                 }
             }
 
-            if (result.isSuccess()) {   
+            if (mServerFile != null) {   
 
                 /// check changes in server and local file
                 boolean serverChanged = false;

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -435,7 +435,7 @@ public void onTransferProgress(long progressRate, long totalTransferredSoFar, lo
         int percent = (int)(100.0*((double)totalTransferredSoFar)/((double)totalToTransfer));
         if (percent != mLastPercent) {
             mNotification.contentView.setProgressBar(R.id.status_progress, 100, percent, totalToTransfer < 0);
-            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR + 1));
+            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR) + 1);
             String text = String.format(getString(R.string.downloader_download_in_progress_content), percent, fileName);
             mNotification.contentView.setTextViewText(R.id.status_text, text);
             mNotificationManager.notify(R.string.downloader_download_in_progress_ticker, mNotification);

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -705,7 +705,7 @@ public void onTransferProgress(long progressRate, long totalTransferredSoFar, lo
         int percent = (int) (100.0 * ((double) totalTransferredSoFar) / ((double) totalToTransfer));
         if (percent != mLastPercent) {
             mNotification.contentView.setProgressBar(R.id.status_progress, 100, percent, false);
-            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR + 1));
+            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR) + 1);
             String text = String.format(getString(R.string.uploader_upload_in_progress_content), percent, fileName);
             mNotification.contentView.setTextViewText(R.id.status_text, text);
             mNotificationManager.notify(R.string.uploader_upload_in_progress_ticker, mNotification);

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -39,6 +39,7 @@
 import com.owncloud.android.operations.DownloadFileOperation;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult;
 import com.owncloud.android.lib.operations.common.RemoteOperationResult.ResultCode;
+import com.owncloud.android.lib.utils.FileUtils;
 import com.owncloud.android.ui.activity.FileActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.preview.PreviewImageActivity;
@@ -430,10 +431,11 @@ private void notifyDownloadStart(DownloadFileOperation download) {
      * Callback method to update the progress bar in the status notification.
      */
     @Override
-    public void onTransferProgress(long progressRate, long totalTransferredSoFar, long totalToTransfer, String fileName) {
+    public void onTransferProgress(long progressRate, long totalTransferredSoFar, long totalToTransfer, String filePath) {
         int percent = (int)(100.0*((double)totalTransferredSoFar)/((double)totalToTransfer));
         if (percent != mLastPercent) {
             mNotification.contentView.setProgressBar(R.id.status_progress, 100, percent, totalToTransfer < 0);
+            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR + 1));
             String text = String.format(getString(R.string.downloader_download_in_progress_content), percent, fileName);
             mNotification.contentView.setTextViewText(R.id.status_text, text);
             mNotificationManager.notify(R.string.downloader_download_in_progress_ticker, mNotification);

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -41,6 +41,7 @@
 import com.owncloud.android.lib.operations.common.RemoteOperationResult.ResultCode;
 import com.owncloud.android.lib.operations.remote.ExistenceCheckRemoteOperation;
 import com.owncloud.android.lib.operations.remote.ReadRemoteFileOperation;
+import com.owncloud.android.lib.utils.FileUtils;
 import com.owncloud.android.lib.utils.OwnCloudVersion;
 import com.owncloud.android.lib.network.OnDatatransferProgressListener;
 import com.owncloud.android.lib.accounts.OwnCloudAccount;
@@ -700,10 +701,11 @@ private void notifyUploadStart(UploadFileOperation upload) {
      * Callback method to update the progress bar in the status notification
      */
     @Override
-    public void onTransferProgress(long progressRate, long totalTransferredSoFar, long totalToTransfer, String fileName) {
+    public void onTransferProgress(long progressRate, long totalTransferredSoFar, long totalToTransfer, String filePath) {
         int percent = (int) (100.0 * ((double) totalTransferredSoFar) / ((double) totalToTransfer));
         if (percent != mLastPercent) {
             mNotification.contentView.setProgressBar(R.id.status_progress, 100, percent, false);
+            String fileName = filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR + 1));
             String text = String.format(getString(R.string.uploader_upload_in_progress_content), percent, fileName);
             mNotification.contentView.setTextViewText(R.id.status_text, text);
             mNotificationManager.notify(R.string.uploader_upload_in_progress_ticker, mNotification);

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -90,6 +90,8 @@ public class FileContentProvider extends ContentProvider {
         mFileProjectionMap.put(ProviderTableMeta.FILE_ETAG, 
                 ProviderTableMeta.FILE_ETAG);
         mFileProjectionMap.put(ProviderTableMeta.FILE_SHARE_BY_LINK,
+                ProviderTableMeta.FILE_SHARE_BY_LINK);
+        mFileProjectionMap.put(ProviderTableMeta.FILE_PUBLIC_LINK,
                 ProviderTableMeta.FILE_PUBLIC_LINK);
     }
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -805,8 +805,7 @@ private void onGetUserNameFinish(GetUserNameRemoteOperation operation, RemoteOpe
             
             if ( mAction == ACTION_CREATE) {
                 mUsernameInput.setText(username);
-                createAccount();
-                success = true;
+                success = createAccount();
             } else {
                 
                 if (!mUsernameInput.getText().toString().equals(username)) {

File: src/com/owncloud/android/ui/dialog/SamlWebViewDialog.java
Patch:
@@ -36,8 +36,8 @@
 
 import com.actionbarsherlock.app.SherlockDialogFragment;
 import com.owncloud.android.R;
-import com.owncloud.android.oc_framework.accounts.SsoWebViewClient;
-import com.owncloud.android.oc_framework.accounts.SsoWebViewClient.SsoWebViewClientListener;
+import com.owncloud.android.authentication.SsoWebViewClient;
+import com.owncloud.android.authentication.SsoWebViewClient.SsoWebViewClientListener;
 import com.owncloud.android.oc_framework.network.webdav.WebdavClient;
 import com.owncloud.android.utils.Log_OC;
 

File: oc_framework-test-project/src/com/owncloud/android/oc_framework_test_project/TestActivity.java
Patch:
@@ -144,7 +144,7 @@ public RemoteOperationResult downloadFile(RemoteFile remoteFile, String temporal
 		File folder = new File(sdCard.getAbsolutePath() + "/" + path);
 		folder.mkdirs();
 		
-		DownloadRemoteFileOperation downloadOperation = new DownloadRemoteFileOperation(remoteFile, folder.getAbsolutePath());
+		DownloadRemoteFileOperation downloadOperation = new DownloadRemoteFileOperation(remoteFile.getRemotePath(), folder.getAbsolutePath());
 		RemoteOperationResult result = downloadOperation.execute(mClient);
 
 		return result;

File: oc_framework/sample_client/src/com/owncloud/android/oc_framework/sampleclient/MainActivity.java
Patch:
@@ -146,9 +146,7 @@ private void startDownload() {
     	File upFolder = new File(getCacheDir(), getString(R.string.upload_folder_path));
     	File fileToUpload = upFolder.listFiles()[0];
     	String remotePath = FileUtils.PATH_SEPARATOR + fileToUpload.getName();
-    	RemoteFile rFileToDownload = new RemoteFile(remotePath);
-    	rFileToDownload.setLength(fileToUpload.length());
-    	DownloadRemoteFileOperation downloadOperation = new DownloadRemoteFileOperation(rFileToDownload, downFolder.getAbsolutePath());
+    	DownloadRemoteFileOperation downloadOperation = new DownloadRemoteFileOperation(remotePath, downFolder.getAbsolutePath());
     	downloadOperation.addDatatransferProgressListener(this);
     	downloadOperation.execute(mClient, this, mHandler);
     }

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -25,7 +25,6 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.oc_framework.network.webdav.OnDatatransferProgressListener;
 import com.owncloud.android.oc_framework.network.webdav.WebdavClient;
-import com.owncloud.android.oc_framework.operations.RemoteFile;
 import com.owncloud.android.oc_framework.operations.RemoteOperation;
 import com.owncloud.android.oc_framework.operations.RemoteOperationResult;
 import com.owncloud.android.oc_framework.operations.remote.DownloadRemoteFileOperation;
@@ -128,10 +127,9 @@ protected RemoteOperationResult run(WebdavClient client) {
         File tmpFile = new File(getTmpPath());
         
         String tmpFolder =  getTmpFolder();
-        RemoteFile remoteFile = FileStorageUtils.fillRemoteFile(mFile);
         
         /// perform the download
-        mDownloadOperation = new DownloadRemoteFileOperation(remoteFile, tmpFolder);
+        mDownloadOperation = new DownloadRemoteFileOperation(mFile.getRemotePath(), tmpFolder);
         Iterator<OnDatatransferProgressListener> listener = mDataTransferListeners.iterator();
         while (listener.hasNext()) {
             mDownloadOperation.addDatatransferProgressListener(listener.next());

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -757,6 +757,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             }
             showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, upload.getFile());
             showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, upload.getAccount());
+            showDetailsIntent.putExtra(FileActivity.EXTRA_FROM_NOTIFICATION, true);
             showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(),
                     (int) System.currentTimeMillis(), showDetailsIntent, 0);

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -162,6 +162,8 @@ protected void onCreate(Bundle savedInstanceState) {
         // PIN CODE request ;  best location is to decide, let's try this first
         if (getIntent().getAction() != null && getIntent().getAction().equals(Intent.ACTION_MAIN) && savedInstanceState == null) {
             requestPinCode();
+        } else if (getIntent().getAction() == null && savedInstanceState == null) {
+            requestPinCode();
         }
 
         /// file observer

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -162,7 +162,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // PIN CODE request ;  best location is to decide, let's try this first
         if (getIntent().getAction() != null && getIntent().getAction().equals(Intent.ACTION_MAIN) && savedInstanceState == null) {
             requestPinCode();
-        } else if (getIntent().getAction() == null) {
+        } else if (getIntent().getAction() == null && savedInstanceState == null) {
             requestPinCode();
         }
 

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -103,7 +103,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                         serverChanged = (!mServerFile.getEtag().equals(mLocalFile.getEtag()));   // TODO could this be dangerous when the user upgrades the server from non-tagged to tagged?
                     } else { */
                 // server without etags
-                serverChanged = (mServerFile.getModificationTimestamp() > mLocalFile.getModificationTimestampAtLastSyncForData());
+                serverChanged = (mServerFile.getModificationTimestamp() != mLocalFile.getModificationTimestampAtLastSyncForData());
                 //}
                 boolean localChanged = (mLocalFile.getLocalModificationTimestamp() > mLocalFile.getLastSyncDateForData());
                 // TODO this will be always true after the app is upgraded to database version 2; will result in unnecessary uploads

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -94,7 +94,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                 }
             }
 
-            if (result == null) {   // true if the server was not checked. nothing was wrong with the remote request
+            if (result.isSuccess()) {   
 
                 /// check changes in server and local file
                 boolean serverChanged = false;

File: oc_framework-test-project/oc_framework-test-test/src/com/owncloud/android/oc_framework_test_project/test/RenameFileTest.java
Patch:
@@ -151,7 +151,7 @@ public void testRestoreInitialConditions() {
 		RemoteOperationResult result = mActivity.renameFile(mNewFolderName, mNewFolderPath, mOldFolderName, mOldFolderPath);
 		assertTrue(result.isSuccess());
 		
-		result = mActivity.renameFile(mNewFileName, mNewFilePath, mOldFileName, mOldFilePath);
+		result = mActivity.renameFile(mNewFileName + mFileExtension, mNewFilePath + mFileExtension, mOldFileName, mOldFilePath);
 		assertTrue(result.isSuccess());
 	}
 	

File: oc_framework/src/com/owncloud/android/oc_framework/network/webdav/OwnCloudClientFactory.java
Patch:
@@ -78,8 +78,8 @@ public static WebdavClient createOwnCloudClient (Account account, Context appCon
             
         } else {
             String username = account.name.substring(0, account.name.lastIndexOf('@'));
-            //String password = am.getPassword(account);
-            String password = am.blockingGetAuthToken(account, AccountTypeUtils.getAuthTokenTypePass(account.type), false);
+            String password = am.getPassword(account);
+            //String password = am.blockingGetAuthToken(account, AccountTypeUtils.getAuthTokenTypePass(account.type), false);
             client.setBasicCredentials(username, password);
         }
         

File: oc_framework-test-project/src/com/owncloud/android/oc_framework_test_project/TestActivity.java
Patch:
@@ -88,13 +88,14 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
 	/**
 	 * Access to the library method to Create a Folder
+	 * @param folderName
 	 * @param remotePath
 	 * @param createFullPath
 	 * @return
 	 */
-	public RemoteOperationResult createFolder(String remotePath, boolean createFullPath) {
+	public RemoteOperationResult createFolder(String folderName, String remotePath, boolean createFullPath) {
 		
-		CreateRemoteFolderOperation createOperation = new CreateRemoteFolderOperation(remotePath, createFullPath);
+		CreateRemoteFolderOperation createOperation = new CreateRemoteFolderOperation(folderName, remotePath, createFullPath);
 		RemoteOperationResult result =  createOperation.execute(mClient);
 		
 		return result;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1439,7 +1439,7 @@ public void onDismiss(EditNameDialog dialog) {
 
                 // Create directory
                 path += newDirectoryName + OCFile.PATH_SEPARATOR;
-                RemoteOperation operation = new CreateFolderOperation(path, false, mStorageManager);
+                RemoteOperation operation = new CreateFolderOperation(newDirectoryName, path, false, mStorageManager);
                 operation.execute(  getAccount(), 
                         FileDisplayActivity.this, 
                         FileDisplayActivity.this, 

File: src/com/owncloud/android/db/DbHandler.java
Patch:
@@ -35,7 +35,7 @@
 public class DbHandler {
     private SQLiteDatabase mDB;
     private OpenerHelper mHelper;
-    private final String mDatabaseName; // = "ownCloud";
+    private final String mDatabaseName;
     private final int mDatabaseVersion = 3;
 
     private final String TABLE_INSTANT_UPLOAD = "instant_upload";
@@ -44,9 +44,9 @@ public class DbHandler {
     public static final int UPLOAD_STATUS_UPLOAD_FAILED = 1;
 
     public DbHandler(Context context) {
+        mDatabaseName = MainApp.getDBName();
         mHelper = new OpenerHelper(context);
         mDB = mHelper.getWritableDatabase();
-        mDatabaseName = MainApp.getDBName();
     }
 
     public void close() {

File: oc_framework/src/com/owncloud/android/oc_framework/accounts/AccountTypeUtils.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class AccountTypeUtils {
 
-    public static String getAuthTokenTypePass(String baseAuthTokenType) {
+    public static String getAuthTokenTypePass(String accountType) {
         return accountType + ".password";
     }
     

File: src/com/owncloud/android/authentication/AccountAuthenticatorService.java
Patch:
@@ -25,7 +25,6 @@
 public class AccountAuthenticatorService extends Service {
 
     private AccountAuthenticator mAuthenticator;
-    //static final public String ACCOUNT_TYPE = "owncloud";
 
     @Override
     public void onCreate() {

File: src/com/owncloud/android/syncadapter/ContactSyncAdapter.java
Patch:
@@ -53,7 +53,7 @@ public ContactSyncAdapter(Context context, boolean autoInitialize) {
     public void onPerformSync(Account account, Bundle extras, String authority,
             ContentProviderClient provider, SyncResult syncResult) {
         setAccount(account);
-        setContentProvider(provider);
+        setContentProviderClient(provider);
         Cursor c = getLocalContacts(false);
         if (c.moveToFirst()) {
             do {

File: src/com/owncloud/android/authentication/AccountAuthenticatorService.java
Patch:
@@ -25,7 +25,6 @@
 public class AccountAuthenticatorService extends Service {
 
     private AccountAuthenticator mAuthenticator;
-    //static final public String ACCOUNT_TYPE = "owncloud";
 
     @Override
     public void onCreate() {

File: src/com/owncloud/android/syncadapter/ContactSyncAdapter.java
Patch:
@@ -53,7 +53,7 @@ public ContactSyncAdapter(Context context, boolean autoInitialize) {
     public void onPerformSync(Account account, Bundle extras, String authority,
             ContentProviderClient provider, SyncResult syncResult) {
         setAccount(account);
-        setContentProvider(provider);
+        setContentProviderClient(provider);
         Cursor c = getLocalContacts(false);
         if (c.moveToFirst()) {
             do {

File: tests/src/com/owncloud/android/test/FileContentProviderTest.java
Patch:
@@ -23,7 +23,7 @@ public FileContentProviderTest(Class<FileContentProvider> providerClass,
 	}
 	
 	public FileContentProviderTest() {
-		super(FileContentProvider.class, "com.owncloud.android.provicers.FileContentProvider");	
+		super(FileContentProvider.class, "com.owncloud.android.providers.FileContentProvider");	
 	}
 	
 	@Override

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -129,8 +129,8 @@ public class FileUploader extends Service implements OnDatatransferProgressListe
     private RemoteViews mDefaultNotificationContentView;
 
     
-    public String getUploadFinishMessage() {
-        return getClass().getName().toString() + UPLOAD_FINISH_MESSAGE;
+    public static String getUploadFinishMessage() {
+        return FileUploader.class.getName().toString() + UPLOAD_FINISH_MESSAGE;
     }
     
     /**

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -360,5 +360,4 @@ private void checkAndFixForeignStoragePath(OCFile file) {
         }
     }
 
-
 }

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -287,9 +287,7 @@ private void fetchChildren(List<OCFile> files) {
      * @param dirRemotePath     Remote path of a folder that was just synchronized (with or without success)
      */
     private void sendStickyBroadcast(boolean inProgress, String dirRemotePath, RemoteOperationResult result) {
-        FileSyncService fileSyncService = new FileSyncService();
-        
-        Intent i = new Intent(fileSyncService.getSyncMessage());
+        Intent i = new Intent(FileSyncService.getSyncMessage());
         i.putExtra(FileSyncService.IN_PROGRESS, inProgress);
         i.putExtra(FileSyncService.ACCOUNT_NAME, getAccount().name);
         if (dirRemotePath != null) {

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -207,8 +207,7 @@ public void onStart() {
     public void onResume() {
         super.onResume();
         mUploadFinishReceiver = new UploadFinishReceiver();
-        FileUploader fileUploader = new FileUploader();
-        IntentFilter filter = new IntentFilter(fileUploader.getUploadFinishMessage());
+        IntentFilter filter = new IntentFilter(FileUploader.getUploadFinishMessage());
         getActivity().registerReceiver(mUploadFinishReceiver, filter);
 
     }

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -129,8 +129,8 @@ public class FileUploader extends Service implements OnDatatransferProgressListe
     private RemoteViews mDefaultNotificationContentView;
 
     
-    public String getUploadFinishMessage() {
-        return getClass().getName().toString() + UPLOAD_FINISH_MESSAGE;
+    public static String getUploadFinishMessage() {
+        return FileUploader.class.getName().toString() + UPLOAD_FINISH_MESSAGE;
     }
     
     /**

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -537,7 +537,7 @@ private void searchForLocalFileInDefaultPath(OCFile file) {
      * @param dirRemotePath     Remote path of a folder that was just synchronized (with or without success)
      */
     private void sendStickyBroadcast(boolean inProgress, String dirRemotePath, RemoteOperationResult result) {
-        Intent i = new Intent(FileSyncService.SYNC_MESSAGE);
+        Intent i = new Intent(FileSyncService.getSyncMessage());
         i.putExtra(FileSyncService.IN_PROGRESS, inProgress);
         i.putExtra(FileSyncService.ACCOUNT_NAME, mAccount.name);
         if (dirRemotePath != null) {

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -337,9 +337,7 @@ private void fetchChildren(OCFile parent, List<OCFile> files, boolean parentEtag
      * @param dirRemotePath     Remote path of a folder that was just synchronized (with or without success)
      */
     private void sendStickyBroadcast(boolean inProgress, String dirRemotePath, RemoteOperationResult result) {
-        FileSyncService fileSyncService = new FileSyncService();
-        
-        Intent i = new Intent(fileSyncService.getSyncMessage());
+        Intent i = new Intent(FileSyncService.getSyncMessage());
         i.putExtra(FileSyncService.IN_PROGRESS, inProgress);
         i.putExtra(FileSyncService.ACCOUNT_NAME, getAccount().name);
         if (dirRemotePath != null) {

File: src/com/owncloud/android/syncadapter/FileSyncService.java
Patch:
@@ -31,14 +31,14 @@
  */
 public class FileSyncService extends Service {
     
-    public static final String SYNC_MESSAGE = "ACCOUNT_SYNC";
+    private static final String SYNC_MESSAGE = "ACCOUNT_SYNC";
     public static final String SYNC_FOLDER_REMOTE_PATH = "SYNC_FOLDER_REMOTE_PATH";
     public static final String IN_PROGRESS = "SYNC_IN_PROGRESS";
     public static final String ACCOUNT_NAME = "ACCOUNT_NAME";
     public static final String SYNC_RESULT = "SYNC_RESULT";
 
-    public String getSyncMessage(){
-        return getClass().getName().toString() + SYNC_MESSAGE;
+    public static String getSyncMessage(){
+        return FileSyncService.class.getName().toString() + SYNC_MESSAGE;
     }
     /*
      * {@inheritDoc}

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -207,8 +207,7 @@ public void onStart() {
     public void onResume() {
         super.onResume();
         mUploadFinishReceiver = new UploadFinishReceiver();
-        FileUploader fileUploader = new FileUploader();
-        IntentFilter filter = new IntentFilter(fileUploader.getUploadFinishMessage());
+        IntentFilter filter = new IntentFilter(FileUploader.getUploadFinishMessage());
         getActivity().registerReceiver(mUploadFinishReceiver, filter);
 
     }

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -206,9 +206,9 @@ protected RemoteOperationResult run(WebdavClient client) {
                 Log_OC.i(TAG, "Synchronized " + mAccount.name + remotePath + ": " + result.getLogMessage());
             } else {
                 if (result.isException()) {
-                    Log_OC.e(TAG, "Synchroned " + mAccount.name + remotePath  + ": " + result.getLogMessage(), result.getException());
+                    Log_OC.e(TAG, "Synchronized " + mAccount.name + remotePath  + ": " + result.getLogMessage(), result.getException());
                 } else {
-                    Log_OC.e(TAG, "Synchroned " + mAccount.name + remotePath + ": " + result.getLogMessage());
+                    Log_OC.e(TAG, "Synchronized " + mAccount.name + remotePath + ": " + result.getLogMessage());
                 }
             }
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -870,8 +870,8 @@ public void onReceive(Context context, Intent intent) {
 
                 String synchFolderRemotePath = intent.getStringExtra(FileSyncService.SYNC_FOLDER_REMOTE_PATH); 
 
-                OCFile currentFile = mStorageManager.getFileById(getFile().getFileId());
-                OCFile currentDir = mStorageManager.getFileById(getCurrentDir().getFileId());
+                OCFile currentFile = (getFile() == null) ? null : mStorageManager.getFileById(getFile().getFileId());
+                OCFile currentDir = (getCurrentDir() == null) ? null : mStorageManager.getFileById(getCurrentDir().getFileId());
 
                 if (currentDir == null) {
                     // current folder was removed from the server 

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -54,8 +54,7 @@ public void onReceive(Context context, Intent intent) {
         Log_OC.d(TAG, "Received: " + intent.getAction());
         if (intent.getAction().equals(android.net.ConnectivityManager.CONNECTIVITY_ACTION)) {
             handleConnectivityAction(context, intent);
-        } else if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH && 
-                intent.getAction().equals(NEW_PHOTO_ACTION_UNOFFICIAL)) {
+        }else if (intent.getAction().equals(NEW_PHOTO_ACTION_UNOFFICIAL)) {
             handleNewPhotoAction(context, intent);
             Log_OC.d(TAG, "UNOFFICIAL processed: com.android.camera.NEW_PICTURE");
         } else if (intent.getAction().equals(NEW_PHOTO_ACTION)) {

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -78,7 +78,6 @@
 import com.owncloud.android.ui.activity.InstantUploadActivity;
 import com.owncloud.android.ui.preview.PreviewImageActivity;
 import com.owncloud.android.ui.preview.PreviewImageFragment;
-import com.owncloud.android.utils.FileStorageUtils;
 
 import eu.alefzero.webdav.WebdavClient;
 
@@ -272,7 +271,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 if (isInstant) {
                     newUpload.setRemoteFolderToBeCreated();
                 }
-                mPendingUploads.putIfAbsent(uploadKey, newUpload);
+                mPendingUploads.putIfAbsent(uploadKey, newUpload); // Grants that the file only upload once time
+
                 newUpload.addDatatransferProgressListener(this);
                 newUpload.addDatatransferProgressListener((FileUploaderBinder)mBinder);
                 requestedUploads.add(uploadKey);

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -54,8 +54,7 @@ public void onReceive(Context context, Intent intent) {
         Log_OC.d(TAG, "Received: " + intent.getAction());
         if (intent.getAction().equals(android.net.ConnectivityManager.CONNECTIVITY_ACTION)) {
             handleConnectivityAction(context, intent);
-        } else if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH && 
-                intent.getAction().equals(NEW_PHOTO_ACTION_UNOFFICIAL)) {
+        }else if (intent.getAction().equals(NEW_PHOTO_ACTION_UNOFFICIAL)) {
             handleNewPhotoAction(context, intent);
             Log_OC.d(TAG, "UNOFFICIAL processed: com.android.camera.NEW_PICTURE");
         } else if (intent.getAction().equals(NEW_PHOTO_ACTION)) {

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -78,7 +78,6 @@
 import com.owncloud.android.ui.activity.InstantUploadActivity;
 import com.owncloud.android.ui.preview.PreviewImageActivity;
 import com.owncloud.android.ui.preview.PreviewImageFragment;
-import com.owncloud.android.utils.FileStorageUtils;
 
 import eu.alefzero.webdav.WebdavClient;
 
@@ -272,7 +271,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 if (isInstant) {
                     newUpload.setRemoteFolderToBeCreated();
                 }
-                mPendingUploads.putIfAbsent(uploadKey, newUpload);
+                mPendingUploads.putIfAbsent(uploadKey, newUpload); // Grants that the file only upload once time
+
                 newUpload.addDatatransferProgressListener(this);
                 newUpload.addDatatransferProgressListener((FileUploaderBinder)mBinder);
                 requestedUploads.add(uploadKey);

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -676,7 +676,6 @@ private void updateSizesToTheRoot(long parentId) {
 
         while (parentId != 0) {
             
-            Log_OC.d(TAG, "parent = " + parentId);
             // Update the size of the parent
             calculateFolderSize(parentId);
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1328,7 +1328,7 @@ public void onDismiss(EditNameDialog dialog) {
 
                 // Create directory
                 path += newDirectoryName + OCFile.PATH_SEPARATOR;
-                RemoteOperation operation = new CreateFolderOperation(path, getCurrentDir().getFileId(), mStorageManager);
+                RemoteOperation operation = new CreateFolderOperation(path, false, mStorageManager);
                 operation.execute(  getAccount(), 
                         FileDisplayActivity.this, 
                         FileDisplayActivity.this, 

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -676,7 +676,6 @@ private void updateSizesToTheRoot(long parentId) {
 
         while (parentId != 0) {
             
-            Log_OC.d(TAG, "parent = " + parentId);
             // Update the size of the parent
             calculateFolderSize(parentId);
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1328,7 +1328,7 @@ public void onDismiss(EditNameDialog dialog) {
 
                 // Create directory
                 path += newDirectoryName + OCFile.PATH_SEPARATOR;
-                RemoteOperation operation = new CreateFolderOperation(path, getCurrentDir().getFileId(), mStorageManager);
+                RemoteOperation operation = new CreateFolderOperation(path, false, mStorageManager);
                 operation.execute(  getAccount(), 
                         FileDisplayActivity.this, 
                         FileDisplayActivity.this, 

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -676,7 +676,6 @@ private void updateSizesToTheRoot(long parentId) {
 
         while (parentId != 0) {
             
-            Log_OC.d(TAG, "parent = " + parentId);
             // Update the size of the parent
             calculateFolderSize(parentId);
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1328,7 +1328,7 @@ public void onDismiss(EditNameDialog dialog) {
 
                 // Create directory
                 path += newDirectoryName + OCFile.PATH_SEPARATOR;
-                RemoteOperation operation = new CreateFolderOperation(path, getCurrentDir().getFileId(), mStorageManager);
+                RemoteOperation operation = new CreateFolderOperation(path, false, mStorageManager);
                 operation.execute(  getAccount(), 
                         FileDisplayActivity.this, 
                         FileDisplayActivity.this, 

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -676,7 +676,6 @@ private void updateSizesToTheRoot(long parentId) {
 
         while (parentId != 0) {
             
-            Log_OC.d(TAG, "parent = " + parentId);
             // Update the size of the parent
             calculateFolderSize(parentId);
             

File: src/com/owncloud/android/db/DbHandler.java
Patch:
@@ -37,7 +37,7 @@ public class DbHandler {
     private final String mDatabaseName = "ownCloud";
     private final int mDatabaseVersion = 3;
 
-    private final String TABLE_INSTANT_UPLOAD = "instant_upload";
+    private final String TABLE_INSTANT_UPLOAD = "DbHandler";
 
     public static final int UPLOAD_STATUS_UPLOAD_LATER = 0;
     public static final int UPLOAD_STATUS_UPLOAD_FAILED = 1;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1328,7 +1328,7 @@ public void onDismiss(EditNameDialog dialog) {
 
                 // Create directory
                 path += newDirectoryName + OCFile.PATH_SEPARATOR;
-                RemoteOperation operation = new CreateFolderOperation(path, getCurrentDir().getFileId(), mStorageManager);
+                RemoteOperation operation = new CreateFolderOperation(path, false, mStorageManager);
                 operation.execute(  getAccount(), 
                         FileDisplayActivity.this, 
                         FileDisplayActivity.this, 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -289,7 +289,7 @@ public boolean onContextItemSelected (MenuItem item) {
                 Account account = AccountUtils.getCurrentOwnCloudAccount(getSherlockActivity());
                 RemoteOperation operation = new SynchronizeFileOperation(mTargetFile, null, mContainerActivity.getStorageManager(), account, true, false, getSherlockActivity());
                 operation.execute(account, getSherlockActivity(), mContainerActivity, mHandler, getSherlockActivity());
-                getSherlockActivity().showDialog(FileDisplayActivity.DIALOG_SHORT_WAIT);
+                ((FileDisplayActivity) getSherlockActivity()).showLoadingDialog();
                 return true;
             }
             case R.id.action_cancel_download: {
@@ -433,7 +433,7 @@ public void onDismiss(EditNameDialog dialog) {
                                                                 newFilename, 
                                                                 mContainerActivity.getStorageManager());
             operation.execute(AccountUtils.getCurrentOwnCloudAccount(getSherlockActivity()), getSherlockActivity(), mContainerActivity, mHandler, getSherlockActivity());
-            getActivity().showDialog(FileDisplayActivity.DIALOG_SHORT_WAIT);
+            ((FileDisplayActivity) getActivity()).showLoadingDialog();
         }
     }
 
@@ -447,7 +447,7 @@ public void onConfirmation(String callerTag) {
                                                                     mContainerActivity.getStorageManager());
                 operation.execute(AccountUtils.getCurrentOwnCloudAccount(getSherlockActivity()), getSherlockActivity(), mContainerActivity, mHandler, getSherlockActivity());
                 
-                getActivity().showDialog(FileDisplayActivity.DIALOG_SHORT_WAIT);
+                ((FileDisplayActivity) getActivity()).showLoadingDialog();
             }
         }
     }

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -56,6 +56,7 @@
 import com.owncloud.android.operations.RemoteOperation;
 import com.owncloud.android.operations.RemoteOperationResult;
 import com.owncloud.android.operations.RemoveFileOperation;
+import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.fragment.ConfirmationDialogFragment;
 import com.owncloud.android.ui.fragment.FileFragment;
 
@@ -379,7 +380,7 @@ public void onConfirmation(String callerTag) {
                                                             mStorageManager);
             mLastRemoteOperation.execute(mAccount, getSherlockActivity(), this, mHandler, getSherlockActivity());
             
-            getActivity().showDialog(PreviewImageActivity.DIALOG_SHORT_WAIT);
+            ((PreviewImageActivity) getActivity()).showLoadingDialog();
         }
     }
     
@@ -603,7 +604,7 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
     }
     
     private void onRemoveFileOperationFinish(RemoveFileOperation operation, RemoteOperationResult result) {
-        getActivity().dismissDialog(PreviewImageActivity.DIALOG_SHORT_WAIT);
+        ((PreviewImageActivity) getActivity()).dismissLoadingDialog();
         
         if (result.isSuccess()) {
             Toast msg = Toast.makeText(getActivity().getApplicationContext(), R.string.remove_success_msg, Toast.LENGTH_LONG);

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -662,7 +662,7 @@ public void onConfirmation(String callerTag) {
                                                             mStorageManager);
             mLastRemoteOperation.execute(mAccount, getSherlockActivity(), this, mHandler, getSherlockActivity());
             
-            getActivity().showDialog(FileDisplayActivity.DIALOG_SHORT_WAIT);
+            ((FileDisplayActivity) getActivity()).showLoadingDialog();
         }
     }
     
@@ -716,8 +716,7 @@ public void onRemoteOperationFinish(RemoteOperation operation, RemoteOperationRe
     }
     
     private void onRemoveFileOperationFinish(RemoveFileOperation operation, RemoteOperationResult result) {
-        getActivity().dismissDialog(FileDisplayActivity.DIALOG_SHORT_WAIT);
-        
+        ((FileDisplayActivity) getActivity()).dismissLoadingDialog();
         if (result.isSuccess()) {
             Toast msg = Toast.makeText(getActivity().getApplicationContext(), R.string.remove_success_msg, Toast.LENGTH_LONG);
             msg.show();

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -187,6 +187,8 @@ public Cursor query(Uri uri, String[] projection, String selection,
         }
 
         SQLiteDatabase db = mDbHelper.getReadableDatabase();
+        // DB case_sensitive
+        db.execSQL("PRAGMA case_sensitive_like = true");
         Cursor c = sqlQuery.query(db, projection, selection, selectionArgs,
                 null, null, order);
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -29,7 +29,6 @@
 import java.util.Map;
 import java.util.Vector;
 
-import org.apache.commons.httpclient.Header;
 import org.apache.http.HttpStatus;
 import org.apache.jackrabbit.webdav.MultiStatus;
 import org.apache.jackrabbit.webdav.client.methods.PropFindMethod;
@@ -158,7 +157,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                     OCFile parent = fillOCFile(we);
                     // Properties of local folder
                     OCFile localParent = mStorageManager.getFileById(1);
-                    if (parent.getEtag() != localParent.getEtag()) {
+                    if (localParent == null || parent.getEtag() != localParent.getEtag()) {
                         mStorageManager.saveFile(parent);
                         mParentId = parent.getFileId();
                     }

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -187,6 +187,8 @@ public Cursor query(Uri uri, String[] projection, String selection,
         }
 
         SQLiteDatabase db = mDbHelper.getReadableDatabase();
+        // DB case_sensitive
+        db.execSQL("PRAGMA case_sensitive_like = true");
         Cursor c = sqlQuery.query(db, projection, selection, selectionArgs,
                 null, null, order);
 

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -93,7 +93,7 @@ public void setBasicCredentials(String username, String password) {
     
     public void setSsoSessionCookie(String accessToken) {
         getParams().setAuthenticationPreemptive(false);
-        getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);
+        getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES);
         mSsoSessionCookie = accessToken;
         mCredentials = null;
     }

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -465,7 +465,7 @@ private void notifyDownloadResult(DownloadFileOperation download, RemoteOperatio
             Notification finalNotification = new Notification(R.drawable.icon, getString(tickerId), System.currentTimeMillis());
             finalNotification.flags |= Notification.FLAG_AUTO_CANCEL;
             boolean needsToUpdateCredentials = (downloadResult.getCode() == ResultCode.UNAUTHORIZED ||
-                                                ((downloadResult.isTemporalRedirection() || downloadResult.isIdPRedirection())
+                                                (downloadResult.isTemporalRedirection() && downloadResult.isIdPRedirection()
                                                         && AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE.equals(mDownloadClient.getAuthTokenType())));
             if (needsToUpdateCredentials) {
                 // let the user update credentials with one click

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -794,8 +794,8 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             String content = null;
             
             boolean needsToUpdateCredentials = (uploadResult.getCode() == ResultCode.UNAUTHORIZED ||
-                    ((uploadResult.isTemporalRedirection() || uploadResult.isIdPRedirection())
-                            && AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE.equals(mUploadClient.getAuthTokenType())));
+                    (uploadResult.isTemporalRedirection() && uploadResult.isIdPRedirection() && 
+                            AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE.equals(mUploadClient.getAuthTokenType())));
             if (needsToUpdateCredentials) {
                 // let the user update credentials with one click
                 Intent updateAccountCredentials = new Intent(this, AuthenticatorActivity.class);

File: src/com/owncloud/android/network/OwnCloudClientUtils.java
Patch:
@@ -102,7 +102,6 @@ public static WebdavClient createOwnCloudClient (Account account, Context appCon
         } else if (isSamlSso) {    // TODO avoid a call to getUserData here
             String accessToken = am.blockingGetAuthToken(account, AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE, false);
             client.setSsoSessionCookie(accessToken);
-            Log_OC.e(TAG, "client with auth token: " + accessToken);
             
         } else {
             String username = account.name.substring(0, account.name.lastIndexOf('@'));
@@ -135,7 +134,6 @@ public static WebdavClient createOwnCloudClient (Account account, Context appCon
             String accessToken = result.getString(AccountManager.KEY_AUTHTOKEN);
             if (accessToken == null) throw new AuthenticatorException("WTF!");
             client.setSsoSessionCookie(accessToken);
-            Log_OC.e(TAG, "client with auth token: " + accessToken);
 
         } else {
             String username = account.name.substring(0, account.name.lastIndexOf('@'));

File: src/com/owncloud/android/operations/RemoteOperation.java
Patch:
@@ -243,7 +243,7 @@ public final void run() {
         
             repeat = false;
             if (mCallerActivity != null && mAccount != null && mContext != null && !result.isSuccess() &&
-                    (result.getCode() == ResultCode.UNAUTHORIZED || result.isTemporalRedirection() || result.isIdPRedirection())) {
+                    (result.getCode() == ResultCode.UNAUTHORIZED || (result.isTemporalRedirection() && result.isIdPRedirection()))) {
                 /// possible fail due to lack of authorization in an operation performed in foreground
                 Credentials cred = mClient.getCredentials();
                 String ssoSessionCookie = mClient.getSsoSessionCookie();

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -45,7 +45,6 @@
 import com.owncloud.android.network.BearerAuthScheme;
 import com.owncloud.android.network.BearerCredentials;
 
-import android.accounts.AccountAuthenticatorActivity;
 import android.net.Uri;
 
 public class WebdavClient extends HttpClient {
@@ -99,7 +98,7 @@ public void setBasicCredentials(String username, String password) {
     
     public void setSsoSessionCookie(String accessToken) {
         getParams().setAuthenticationPreemptive(false);
-        getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);
+        getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES);
         mSsoSessionCookie = accessToken;
         mCredentials = null;
         mAuthTokenType = AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE;

File: src/com/owncloud/android/authentication/SsoWebViewClient.java
Patch:
@@ -74,7 +74,7 @@ public void onPageStarted (WebView view, String url, Bitmap favicon) {
             view.setVisibility(View.GONE);
             CookieManager cookieManager = CookieManager.getInstance();
             final String cookies = cookieManager.getCookie(url);
-            //Log_OC.d(TAG, cookies);
+            Log_OC.d(TAG, "Cookies: " + cookies);
             if (mListenerHandler != null && mListenerRef != null) {
                 // this is good idea because onPageStarted is not running in the UI thread
                 mListenerHandler.post(new Runnable() {
@@ -111,6 +111,7 @@ public void onReceivedError (WebView view, int errorCode, String description, St
             mLastReloadedUrlAtError = failingUrl;
         } else {
             mLastReloadedUrlAtError = null;
+            super.onReceivedError(view, errorCode, description, failingUrl);
         }
     }
     

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -744,7 +744,7 @@ private void onSamlBasedFederatedSingleSignOnAuthorizationStart(RemoteOperation
             // NOTHING TO DO ; can't find out what situation that leads to the exception in this code, but user logs signal that it happens
         }
         
-        if (result.isTemporalRedirection()) {
+        if (result.isTemporalRedirection() || result.isIdPRedirection()) {
             String url = result.getRedirectedLocation();
             String targetUrl = mHostBaseUrl + AccountUtils.getWebdavPath(mDiscoveredVersion, mCurrentAuthTokenType);
             

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -86,7 +86,7 @@ public class FileContentProvider extends ContentProvider {
     private static final UriMatcher mUriMatcher;
     static {
         mUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
-        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "/", ROOT_DIRECTORY);
+        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, null, ROOT_DIRECTORY);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/#", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "dir/#", DIRECTORY);

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -86,7 +86,7 @@ public class FileContentProvider extends ContentProvider {
     private static final UriMatcher mUriMatcher;
     static {
         mUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
-        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "/", ROOT_DIRECTORY);
+        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, null, ROOT_DIRECTORY);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/#", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "dir/#", DIRECTORY);

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -28,6 +28,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
+import com.owncloud.android.authentication.AccountAuthenticator;
 import com.owncloud.android.authentication.AuthenticatorActivity;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
@@ -463,7 +464,8 @@ private void notifyDownloadResult(DownloadFileOperation download, RemoteOperatio
             int contentId = (downloadResult.isSuccess()) ? R.string.downloader_download_succeeded_content : R.string.downloader_download_failed_content;
             Notification finalNotification = new Notification(R.drawable.icon, getString(tickerId), System.currentTimeMillis());
             finalNotification.flags |= Notification.FLAG_AUTO_CANCEL;
-            boolean needsToUpdateCredentials = (downloadResult.getCode() == ResultCode.UNAUTHORIZED);
+            boolean needsToUpdateCredentials = (downloadResult.getCode() == ResultCode.UNAUTHORIZED ||
+                                                (downloadResult.isTemporalRedirection() && AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE.equals(mDownloadClient.getAuthTokenType())));
             if (needsToUpdateCredentials) {
                 // let the user update credentials with one click
                 Intent updateAccountCredentials = new Intent(this, AuthenticatorActivity.class);

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -791,7 +791,8 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             Notification finalNotification = new Notification(R.drawable.icon,
                     getString(R.string.uploader_upload_failed_ticker), System.currentTimeMillis());
             finalNotification.flags |= Notification.FLAG_AUTO_CANCEL;
-            if (uploadResult.getCode() == ResultCode.UNAUTHORIZED) {
+            if (uploadResult.getCode() == ResultCode.UNAUTHORIZED ||
+                    (uploadResult.isTemporalRedirection() && AccountAuthenticator.AUTH_TOKEN_TYPE_SAML_WEB_SSO_SESSION_COOKIE.equals(mUploadClient.getAuthTokenType()))) {
                 // let the user update credentials with one click
                 Intent updateAccountCredentials = new Intent(this, AuthenticatorActivity.class);
                 updateAccountCredentials.putExtra(AuthenticatorActivity.EXTRA_ACCOUNT, upload.getAccount());

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -86,7 +86,7 @@ public class FileContentProvider extends ContentProvider {
     private static final UriMatcher mUriMatcher;
     static {
         mUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
-        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "/", ROOT_DIRECTORY);
+        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, null, ROOT_DIRECTORY);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/#", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "dir/#", DIRECTORY);

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -86,7 +86,7 @@ public class FileContentProvider extends ContentProvider {
     private static final UriMatcher mUriMatcher;
     static {
         mUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
-        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "/", ROOT_DIRECTORY);
+        mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, null, ROOT_DIRECTORY);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "file/#", SINGLE_FILE);
         mUriMatcher.addURI(ProviderMeta.AUTHORITY_FILES, "dir/#", DIRECTORY);

File: src/com/owncloud/android/datamodel/DataStorageManager.java
Patch:
@@ -46,4 +46,7 @@ public interface DataStorageManager {
     public void moveDirectory(OCFile dir, String newPath);
 
     public Vector<OCFile> getDirectoryImages(OCFile mParentFolder);
+    
+    public void calculateFolderSize(long id);
+    
 }

File: src/com/owncloud/android/operations/CreateFolderOperation.java
Patch:
@@ -73,6 +73,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                 OCFile newDir = new OCFile(mRemotePath);
                 newDir.setMimetype("DIR");
                 newDir.setParentId(mParentDirId);
+                newDir.setModificationTimestamp(System.currentTimeMillis());
                 mStorageManager.saveFile(newDir);
             }
 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -107,6 +107,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         getListView().setOnCreateContextMenuListener(this);        
         
         mHandler = new Handler();
+
     }
     
     /**
@@ -117,7 +118,7 @@ public void onSaveInstanceState (Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putParcelable(EXTRA_FILE, mFile);
     }
-    
+
 
     /**
      * Call this, when the user presses the up button
@@ -370,6 +371,7 @@ public void listDirectory(OCFile directory) {
                 mList.setSelectionFromTop(0, 0);
             }
             mFile = directory;
+
         }
     }
     

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -74,4 +74,5 @@ public static String getInstantUploadFilePath(Context context, String fileName)
         String value = uploadPath + OCFile.PATH_SEPARATOR +  (fileName == null ? "" : fileName);
         return value;
     }
+  
 }
\ No newline at end of file

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -161,6 +161,7 @@ protected void onCreate(Bundle savedInstanceState) {
         /// set view and get references to view elements
         setContentView(R.layout.account_setup);
         mHostUrlInput = (EditText) findViewById(R.id.hostUrlInput);
+        mHostUrlInput.setText(getString(R.string.server_url));  // valid although R.string.server_url is an empty string
         mUsernameInput = (EditText) findViewById(R.id.account_username);
         mPasswordInput = (EditText) findViewById(R.id.account_password);
         mOAuthAuthEndpointText = (TextView)findViewById(R.id.oAuthEntryPoint_1);
@@ -190,9 +191,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // URL input configuration applied
         if (!mHostUrlInputEnabled)
         {
-            mHostUrlInput.setText(getString(R.string.server_url));
             findViewById(R.id.hostUrlFrame).setVisibility(View.GONE);
-            
             mRefreshButton = findViewById(R.id.centeredRefreshButton);
 
         } else {

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -137,10 +137,10 @@ public class FileDisplayActivity extends FileActivity implements
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         Log_OC.d(TAG, "onCreate() start");
-        super.onCreate(savedInstanceState);
-        
         requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        
+
+        super.onCreate(savedInstanceState); // this calls onAccountChanged() when ownCloud Account is valid
+
         mHandler = new Handler();
 
         /// bindings to transference services

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -118,7 +118,7 @@ public void onSaveInstanceState (Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putParcelable(EXTRA_FILE, mFile);
     }
-    
+
 
     /**
      * Call this, when the user presses the up button

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -845,8 +845,9 @@ public void onReceive(Context context, Intent intent) {
                     if (fileListFragment != null) {
                         fileListFragment.listDirectory(currentDir);
                     }
+                    if (getSecondFragment() == null)
+                        setFile(currentDir);
                 }
-                setFile(currentDir);
                 
                 setSupportProgressBarIndeterminateVisibility(inProgress);
                 removeStickyBroadcast(intent);

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1270,7 +1270,7 @@ public void changeViewByOAuth2Check(Boolean checked) {
      * Called from SslValidatorDialog when a new server certificate was correctly saved.
      */
     public void onSavedCertificate() {
-        mOperationThread = mOcServerChkOperation.retry(this, mHandler);                
+        checkOcServer();
     }
 
     /**

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1043,6 +1043,7 @@ public OCFile getInitialDirectory() {
     @Override
     public void onFileStateChanged() {
         refeshListOfFilesFragment();
+        updateNavigationElementsInActionBar(getSecondFragment().getFile());
     }
 
     

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1043,6 +1043,7 @@ public OCFile getInitialDirectory() {
     @Override
     public void onFileStateChanged() {
         refeshListOfFilesFragment();
+        updateNavigationElementsInActionBar(getSecondFragment().getFile());
     }
 
     

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -111,6 +111,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                }
        }
        
+       /* DISABLED FOR RELEASE UNTIL FIXED 
        pLogging = (CheckBoxPreference) findPreference("log_to_file");
        if (pLogging != null) {
            pLogging.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
@@ -145,6 +146,8 @@ public boolean onPreferenceClick(Preference preference) {
             }
         });
        }
+       */
+       
       }
     }
 

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -18,7 +18,6 @@
 
 package com.owncloud.android.authentication;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.ui.dialog.SslValidatorDialog;
 import com.owncloud.android.ui.dialog.SslValidatorDialog.OnSslValidatorListener;

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -20,8 +20,8 @@
 
 import java.io.File;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.db.DbHandler;
 import com.owncloud.android.files.services.FileUploader;
 

File: src/com/owncloud/android/operations/OwnCloudServerCheckOperation.java
Patch:
@@ -22,8 +22,8 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 import eu.alefzero.webdav.WebdavClient;

File: src/com/owncloud/android/operations/UpdateOCVersionOperation.java
Patch:
@@ -26,8 +26,8 @@
 import android.accounts.AccountManager;
 import android.content.Context;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.utils.OwnCloudVersion;

File: src/com/owncloud/android/syncadapter/ContactSyncAdapter.java
Patch:
@@ -24,8 +24,8 @@
 import org.apache.http.client.methods.HttpPut;
 import org.apache.http.entity.ByteArrayEntity;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;

File: src/com/owncloud/android/ui/activity/AccountSelectActivity.java
Patch:
@@ -47,8 +47,8 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.Log_OC;
 
 import com.owncloud.android.R;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -29,10 +29,10 @@
 import android.webkit.MimeTypeMap;
 
 import com.actionbarsherlock.app.SherlockFragmentActivity;
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.OCFile;
 
 import eu.alefzero.webdav.WebdavUtils;

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -41,9 +41,9 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.db.DbHandler;
 import com.owncloud.android.files.InstantUploadBroadcastReceiver;
 import com.owncloud.android.files.services.FileUploader;

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -32,9 +32,9 @@
 import android.widget.ListView;
 import android.widget.TextView;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.DisplayUtils;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;

File: src/com/owncloud/android/ui/adapter/LandingScreenAdapter.java
Patch:
@@ -17,7 +17,7 @@
  */
 package com.owncloud.android.ui.adapter;
 
-import com.owncloud.android.AccountUtils;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.Preferences;
 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -21,9 +21,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileHandler;

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -36,6 +36,7 @@
 import com.actionbarsherlock.app.SherlockFragmentActivity;
 import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.view.Window;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
@@ -47,7 +48,6 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.fragment.FileFragment;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 

File: tests/src/com/owncloud/android/test/AccountUtilsTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import android.test.AndroidTestCase;
 
-import com.owncloud.android.AccountUtils;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 public class AccountUtilsTest extends AndroidTestCase {

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -18,7 +18,6 @@
 
 package com.owncloud.android.authentication;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.ui.dialog.SslValidatorDialog;
 import com.owncloud.android.ui.dialog.SslValidatorDialog.OnSslValidatorListener;

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -20,8 +20,8 @@
 
 import java.io.File;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.db.DbHandler;
 import com.owncloud.android.files.services.FileUploader;
 

File: src/com/owncloud/android/operations/OwnCloudServerCheckOperation.java
Patch:
@@ -22,8 +22,8 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 import eu.alefzero.webdav.WebdavClient;

File: src/com/owncloud/android/operations/UpdateOCVersionOperation.java
Patch:
@@ -26,8 +26,8 @@
 import android.accounts.AccountManager;
 import android.content.Context;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.utils.OwnCloudVersion;

File: src/com/owncloud/android/syncadapter/ContactSyncAdapter.java
Patch:
@@ -24,8 +24,8 @@
 import org.apache.http.client.methods.HttpPut;
 import org.apache.http.entity.ByteArrayEntity;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 
 import android.accounts.Account;
 import android.accounts.AccountManager;

File: src/com/owncloud/android/ui/activity/AccountSelectActivity.java
Patch:
@@ -47,8 +47,8 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.Log_OC;
 
 import com.owncloud.android.R;

File: src/com/owncloud/android/ui/activity/FileActivity.java
Patch:
@@ -29,10 +29,10 @@
 import android.webkit.MimeTypeMap;
 
 import com.actionbarsherlock.app.SherlockFragmentActivity;
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 import com.owncloud.android.authentication.AccountAuthenticator;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.OCFile;
 
 import eu.alefzero.webdav.WebdavUtils;

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -41,9 +41,9 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.db.DbHandler;
 import com.owncloud.android.files.InstantUploadBroadcastReceiver;
 import com.owncloud.android.files.services.FileUploader;

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -32,9 +32,9 @@
 import android.widget.ListView;
 import android.widget.TextView;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.DisplayUtils;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;

File: src/com/owncloud/android/ui/adapter/LandingScreenAdapter.java
Patch:
@@ -17,7 +17,7 @@
  */
 package com.owncloud.android.ui.adapter;
 
-import com.owncloud.android.AccountUtils;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.Preferences;
 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -21,9 +21,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.FileHandler;

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -36,6 +36,7 @@
 import com.actionbarsherlock.app.SherlockFragmentActivity;
 import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.view.Window;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
@@ -47,7 +48,6 @@
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.fragment.FileFragment;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 

File: tests/src/com/owncloud/android/test/AccountUtilsTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import android.test.AndroidTestCase;
 
-import com.owncloud.android.AccountUtils;
+import com.owncloud.android.authentication.AccountUtils;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 public class AccountUtilsTest extends AndroidTestCase {

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -253,7 +253,9 @@ protected void onCreate(Bundle savedInstanceState) {
         if (mAction == ACTION_UPDATE_TOKEN) {
             /// lock things that should not change
             mHostUrlInput.setEnabled(false);
+            mHostUrlInput.setFocusable(false);
             mUsernameInput.setEnabled(false);
+            mUsernameInput.setFocusable(false);
             mOAuth2Check.setVisibility(View.GONE);
             if (!mServerIsValid && mOcServerChkOperation == null) {
                 checkOcServer(); 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -61,8 +61,8 @@
  * 
  */
 public class OCFileListFragment extends ExtendedListFragment implements EditNameDialogListener, ConfirmationDialogFragmentListener {
+    
     private static final String TAG = OCFileListFragment.class.getSimpleName();
-    private static final String SAVED_LIST_POSITION = "LIST_POSITION"; 
     
     private OCFileListFragment.ContainerActivity mContainerActivity;
     

File: src/com/owncloud/android/ui/preview/PreviewImageActivity.java
Patch:
@@ -442,7 +442,7 @@ private void toggleFullScreen() {
     }
 
     @Override
-    protected void onAccountChanged() {
+    protected void onAccountSet(boolean stateWasRecovered) {
         // TODO
     }
     

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -38,7 +38,7 @@
 import com.owncloud.android.operations.RemoteOperationResult;
 import com.owncloud.android.operations.RemoteOperationResult.ResultCode;
 import com.owncloud.android.ui.activity.FileActivity;
-import com.owncloud.android.ui.activity.FileDetailActivity;
+import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.preview.PreviewImageActivity;
 import com.owncloud.android.ui.preview.PreviewImageFragment;
 
@@ -414,7 +414,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
         if (PreviewImageFragment.canBePreviewed(download.getFile())) {
             showDetailsIntent = new Intent(this, PreviewImageActivity.class);
         } else {
-            showDetailsIntent = new Intent(this, FileDetailActivity.class);
+            showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         }
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, download.getFile());
         showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, download.getAccount());
@@ -485,7 +485,7 @@ private void notifyDownloadResult(DownloadFileOperation download, RemoteOperatio
                     if (PreviewImageFragment.canBePreviewed(download.getFile())) {
                         showDetailsIntent = new Intent(this, PreviewImageActivity.class);
                     } else {
-                        showDetailsIntent = new Intent(this, FileDetailActivity.class);
+                        showDetailsIntent = new Intent(this, FileDisplayActivity.class);
                     }
                     showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, download.getFile());
                     showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, download.getAccount());

File: src/com/owncloud/android/media/MediaService.java
Patch:
@@ -41,7 +41,7 @@
 import com.owncloud.android.R;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.ui.activity.FileActivity;
-import com.owncloud.android.ui.activity.FileDetailActivity;
+import com.owncloud.android.ui.activity.FileDisplayActivity;
 
 /**
  * Service that handles media playback, both audio and video. 
@@ -532,7 +532,7 @@ public void onPrepared(MediaPlayer player) {
     @SuppressWarnings("deprecation")
     private void updateNotification(String content) {
         // TODO check if updating the Intent is really necessary
-        Intent showDetailsIntent = new Intent(this, FileDetailActivity.class);
+        Intent showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, mFile);
         showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, mAccount);
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
@@ -569,7 +569,7 @@ private void setUpAsForeground(String content) {
 
         
         /// includes a pending intent in the notification showing the details view of the file
-        Intent showDetailsIntent = new Intent(this, FileDetailActivity.class);
+        Intent showDetailsIntent = new Intent(this, FileDisplayActivity.class);
         showDetailsIntent.putExtra(FileActivity.EXTRA_FILE, mFile);
         showDetailsIntent.putExtra(FileActivity.EXTRA_ACCOUNT, mAccount);
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1010,11 +1010,11 @@ private void showServerStatus() {
      * to the interactions with the OAuth authorization server.
      */
     private void showAuthStatus() {
-        if (mServerStatusIcon == 0 && mServerStatusText == 0) {
+        if (mAuthStatusIcon == 0 && mAuthStatusText == 0) {
             mAuthStatusLayout.setVisibility(View.INVISIBLE);
         } else {
-            mAuthStatusLayout.setText(mServerStatusText);
-            mAuthStatusLayout.setCompoundDrawablesWithIntrinsicBounds(mServerStatusIcon, 0, 0, 0);
+            mAuthStatusLayout.setText(mAuthStatusText);
+            mAuthStatusLayout.setCompoundDrawablesWithIntrinsicBounds(mAuthStatusIcon, 0, 0, 0);
             mAuthStatusLayout.setVisibility(View.VISIBLE);
         }
     }     

File: src/com/owncloud/android/authentication/AuthenticatorActivity.java
Patch:
@@ -1006,7 +1006,7 @@ private void updateAuthStatus() {
      * @param view      Refresh 'button'
      */
     public void onRefreshClick(View view) {
-        onFocusChange(mRefreshButton, false);
+        onFocusChange(mHostUrlInput, false);
     }
     
     

File: oc_jb_workaround/src/com/owncloud/android/workaround/accounts/AccountAuthenticatorService.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/OwnCloudSession.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/datamodel/DataStorageManager.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/extensions/ExtensionsAvailableActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/managers/OCNotificationManager.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/services/OnUploadCompletedListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013  ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/CertificateCombinedException.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/ProgressiveDataTransferer.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/OnRemoteOperationListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/OperationCancelledException.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/ContactSyncService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/FileSyncService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/ActionItem.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/CustomPopup.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/ExtendedListView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/FragmentListView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/QuickAction.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/GenericExplanationActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/PinCodeActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2011 Bartek Przybylski
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/PreferencesNewSession.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/TransferServiceGetter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/FileListActionListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/LandingScreenAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/IndeterminateProgressDialog.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/AuthenticatorAccountDetailsFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/AuthenticatorGetStartedFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013  ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/LandingPageFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/utils/OwnCloudVersion.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/utils/RecursiveFileObserver.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/widgets/ActionEditText.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/OnDatatransferProgressListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/WebdavUtils.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: tests/src/com/owncloud/android/test/AccountUtilsTest.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -340,9 +340,8 @@ private void checkConfigurationChange(Configuration newConfig) {
         } else {
             finish();
             Intent intent = new Intent(this, FileDisplayActivity.class);
-            intent .putExtra(FileDetailFragment.EXTRA_FILE, mCurrentDir);
-            intent .putExtra(FileDetailFragment.EXTRA_ACCOUNT, AccountUtils.getCurrentOwnCloudAccount(this));
-            if (fragment != null && fragment.getFile() != null )
+            intent.putExtra(FileDetailFragment.EXTRA_FILE, mCurrentDir);
+            intent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, AccountUtils.getCurrentOwnCloudAccount(this));
             startActivity(intent);
         }
     }

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -162,7 +162,7 @@ protected RemoteOperationResult run(WebdavClient client) {
           
         } catch (Exception e) {
             result = new RemoteOperationResult(e);
-            Log.e(TAG, "Synchronizing " + mAccount.name + ", file " + mLocalFile.getRemotePath() + ": " + result.getLogMessage(), result.getException());
+            Log.e(TAG, "Synchronizing " + mAccount.name + ", file " + (mLocalFile != null ? mLocalFile.getRemotePath() : "NULL") + ": " + result.getLogMessage(), result.getException());
 
         } finally {
             if (propfind != null)

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -30,7 +30,6 @@
 import android.net.NetworkInfo.State;
 import android.preference.PreferenceManager;
 import android.provider.MediaStore.Images.Media;
-import android.util.Log;
 import android.webkit.MimeTypeMap;
 
 import com.owncloud.android.AccountUtils;
@@ -121,7 +120,7 @@ private void handleNewPhotoAction(Context context, Intent intent) {
         Intent i = new Intent(context, FileUploader.class);
         i.putExtra(FileUploader.KEY_ACCOUNT, account);
         i.putExtra(FileUploader.KEY_LOCAL_FILE, file_path);
-        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantUploadFilePath(file_name));
+        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantUploadFilePath(context, file_name));
         i.putExtra(FileUploader.KEY_UPLOAD_TYPE, FileUploader.UPLOAD_SINGLE_FILE);
         i.putExtra(FileUploader.KEY_MIME_TYPE, mime_type);
         i.putExtra(FileUploader.KEY_INSTANT_UPLOAD, true);
@@ -164,7 +163,7 @@ && isOnline(context)
                         Intent i = new Intent(context, FileUploader.class);
                         i.putExtra(FileUploader.KEY_ACCOUNT, account);
                         i.putExtra(FileUploader.KEY_LOCAL_FILE, file_path);
-                        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantUploadFilePath(f.getName()));
+                        i.putExtra(FileUploader.KEY_REMOTE_FILE, FileStorageUtils.getInstantUploadFilePath(context, f.getName()));
                         i.putExtra(FileUploader.KEY_UPLOAD_TYPE, FileUploader.UPLOAD_SINGLE_FILE);
                         i.putExtra(FileUploader.KEY_INSTANT_UPLOAD, true);
                         context.startService(i);

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -440,7 +440,7 @@ public void onClick(View v) {
      */
     private void startUpload(String img_path) {
         // extract filename
-        String filename = FileStorageUtils.getInstantUploadFilePath(img_path);
+        String filename = FileStorageUtils.getInstantUploadFilePath(this, img_path);
         if (canInstantUpload()) {
             Account account = AccountUtils.getCurrentOwnCloudAccount(InstantUploadActivity.this);
             // add file again to upload queue

File: oc_jb_workaround/src/com/owncloud/android/workaround/accounts/AccountAuthenticatorService.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/AccountUtils.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/OwnCloudSession.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/Uploader.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/authenticator/AccountAuthenticator.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/authenticator/AccountAuthenticatorService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/authenticator/AuthenticationRunnable.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/authenticator/OnAuthenticationResultListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/authenticator/OnConnectCheckListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/datamodel/DataStorageManager.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/datamodel/OCFile.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/db/DbHandler.java
Patch:
@@ -1,10 +1,10 @@
 /* ownCloud Android client application
  *   Copyright (C) 2011-2012  Bartek Przybylski
+ *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/extensions/ExtensionsAvailableActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/extensions/ExtensionsAvailableDialog.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/extensions/ExtensionsListActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/BootupBroadcastReceiver.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/managers/OCNotificationManager.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/services/FileOperation.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/services/InstantUploadService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/files/services/OnUploadCompletedListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/location/LocationServiceLauncherReciever.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/location/LocationUpdateService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013  ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/AdvancedSslSocketFactory.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/AdvancedX509TrustManager.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/CertificateCombinedException.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/OwnCloudClientUtils.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/network/ProgressiveDataTransferer.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/ChunkedUploadFileOperation.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/ConnectionCheckOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/OnRemoteOperationListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/OperationCancelledException.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/RemoteOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/RemoteOperationResult.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/RemoveFileOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/UpdateOCVersionOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/providers/FileContentProvider.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/AbstractOwnCloudSyncAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/ContactSyncAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/ContactSyncService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/syncadapter/FileSyncService.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/ActionItem.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/CustomPopup.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/ExtendedListView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/FragmentListView.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/QuickAction.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/AccountSelectActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/AuthenticatorActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/FailedUploadActivity.java
Patch:
@@ -19,7 +19,7 @@
  * 
  *         This program is free software: you can redistribute it and/or modify
  *         it under the terms of the GNU General Public License as published by
- *         the Free Software Foundation, either version 3 of the License, or (at
+ *         the Free Software Foundation, either version 3 of the License. (at
  *         your option) any later version.
  * 
  *         This program is distributed in the hope that it will be useful, but

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/GenericExplanationActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -3,8 +3,7 @@
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   the Free Software Foundation, either version 3 of the License.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -63,7 +62,7 @@
  * 
  *         This program is free software: you can redistribute it and/or modify
  *         it under the terms of the GNU General Public License as published by
- *         the Free Software Foundation, either version 3 of the License, or (at
+ *         the Free Software Foundation, either version 3 of the License. (at
  *         your option) any later version.
  * 
  *         This program is distributed in the hope that it will be useful, but

File: src/com/owncloud/android/ui/activity/LandingActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2011 Bartek Przybylski
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/LogHistoryActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/PinCodeActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2011 Bartek Przybylski
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/Preferences.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/PreferencesNewSession.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/TransferServiceGetter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/FileListActionListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/FileListListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/LandingScreenAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/adapter/LocalFileListAdapter.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/EditNameDialog.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/dialog/IndeterminateProgressDialog.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/AuthenticatorAccountDetailsFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/AuthenticatorGetStartedFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/ConfirmationDialogFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013  ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/fragment/LandingPageFragment.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -4,8 +4,7 @@
  *
  *   This program is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
+ *   the Free Software Foundation, either version 3 of the License.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/preview/PreviewImageFragment.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc. 
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013  ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/preview/PreviewMediaFragment.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc. 
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/ui/preview/PreviewVideoActivity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/utils/FileStorageUtils.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/utils/OwnCloudVersion.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/utils/RecursiveFileObserver.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/widgets/ActionEditText.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/ChunkFromFileChannelRequestEntity.java
Patch:
@@ -2,9 +2,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/FileRequestEntity.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/OnDatatransferProgressListener.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/eu/alefzero/webdav/WebdavUtils.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: tests/src/com/owncloud/android/test/AccountUtilsTest.java
Patch:
@@ -3,9 +3,8 @@
  *   Copyright (C) 2012-2013 ownCloud Inc.
  *
  *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 2 of the License, or
- *   (at your option) any later version.
+ *   it under the terms of the GNU General Public License version 2,
+ *   as published by the Free Software Foundation.
  *
  *   This program is distributed in the hope that it will be useful,
  *   but WITHOUT ANY WARRANTY; without even the implied warranty of

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -145,7 +145,7 @@ public static int getResourceId(String mimetype) {
         } else {
             String [] parts = mimetype.split("/");
             String type = parts[0];
-            String subtype = parts[1];
+            String subtype = (parts.length > 1) ? parts[1] : "";
             
             if(TYPE_TXT.equals(type)) {
                 return R.drawable.file_doc;

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -68,9 +68,10 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         
         /// build the dialog
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        
         Dialog dialog = builder.setView(webview)
                                 .setIcon(R.drawable.icon)
-                                .setTitle(R.string.whats_new)
+                                //.setTitle(R.string.whats_new)
                                 .setPositiveButton(R.string.common_ok,
                                         new DialogInterface.OnClickListener() {
                                     @Override

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -214,7 +214,7 @@ public void onCreate(Bundle savedInstanceState) {
         mFileList = (OCFileListFragment) getSupportFragmentManager().findFragmentById(R.id.fileList);
         mDualPane = (findViewById(R.id.file_details_container) != null);
         if (mDualPane) {
-            initFileDetailsInDualPane();
+            if (savedInstanceState == null) initFileDetailsInDualPane();
         } else {
             // quick patchES to fix problem in turn from landscape to portrait, when a file is selected in the right pane
             // TODO serious refactorization in activities and fragments providing file browsing and handling 
@@ -579,6 +579,7 @@ protected void onSaveInstanceState(Bundle outState) {
         Log.d(getClass().toString(), "onSaveInstanceState() end");
     }
 
+    
     @Override
     public void onResume() {
         Log.d(getClass().toString(), "onResume() start");

File: src/com/owncloud/android/media/MediaControlView.java
Patch:
@@ -391,6 +391,7 @@ public void setEnabled(boolean enabled) {
     @Override
     public void onClick(View v) {
         int pos;
+        boolean playing = mPlayer.isPlaying();
         switch (v.getId()) {
         
         case R.id.playBtn: 
@@ -401,13 +402,15 @@ public void onClick(View v) {
             pos = mPlayer.getCurrentPosition();
             pos -= 5000;
             mPlayer.seekTo(pos);
+            if (!playing) mPlayer.pause();  // necessary in some 2.3.x devices 
             setProgress();
             break;
 
         case R.id.forwardBtn:
             pos = mPlayer.getCurrentPosition();
             pos += 15000;
             mPlayer.seekTo(pos);
+            if (!playing) mPlayer.pause(); // necessary in some 2.3.x devices
             setProgress();
             break;
         

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -145,7 +145,7 @@ public static int getResourceId(String mimetype) {
         } else {
             String [] parts = mimetype.split("/");
             String type = parts[0];
-            String subtype = parts[1];
+            String subtype = (parts.length > 1) ? parts[1] : "";
             
             if(TYPE_TXT.equals(type)) {
                 return R.drawable.file_doc;

File: src/com/owncloud/android/ui/dialog/ChangelogDialog.java
Patch:
@@ -68,9 +68,10 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         
         /// build the dialog
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        
         Dialog dialog = builder.setView(webview)
                                 .setIcon(R.drawable.icon)
-                                .setTitle(R.string.whats_new)
+                                //.setTitle(R.string.whats_new)
                                 .setPositiveButton(R.string.common_ok,
                                         new DialogInterface.OnClickListener() {
                                     @Override

File: src/com/owncloud/android/network/BearerCredentials.java
Patch:
@@ -38,10 +38,10 @@ public class BearerCredentials implements Credentials {
      * @param token     The bearer token
      */
     public BearerCredentials(String token) {
-        if (token == null) {
+        /*if (token == null) {
             throw new IllegalArgumentException("Bearer token may not be null");            
-        }
-        mAccessToken = token;
+        }*/
+        mAccessToken = (token == null) ? "" : token;
     }
 
 

File: src/com/owncloud/android/operations/OAuth2GetAccessToken.java
Patch:
@@ -62,7 +62,7 @@ protected RemoteOperationResult run(WebdavClient client) {
             }
             
             if (result == null) { 
-                NameValuePair[] nameValuePairs = new NameValuePair[5];
+                NameValuePair[] nameValuePairs = new NameValuePair[4];
                 nameValuePairs[0] = new NameValuePair(OAuth2Constants.KEY_GRANT_TYPE, mGrantType);
                 nameValuePairs[1] = new NameValuePair(OAuth2Constants.KEY_CODE, mOAuth2ParsedAuthorizationResponse.get(OAuth2Constants.KEY_CODE));            
                 nameValuePairs[2] = new NameValuePair(OAuth2Constants.KEY_REDIRECT_URI, mRedirectUri);       

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -316,7 +316,6 @@ private void notifyFailedSynchronization() {
                     getContext().getString(R.string.sync_fail_ticker), 
                     String.format(getContext().getString(R.string.sync_fail_content_unauthorized), getAccount().name), 
                     notification.contentIntent);
-            Log.e(TAG, "NEEDS TO UPDATE CREDENTIALS");
         } else {
             notification.setLatestEventInfo(getContext().getApplicationContext(), 
                     getContext().getString(R.string.sync_fail_ticker), 

File: src/com/owncloud/android/operations/RemoteOperation.java
Patch:
@@ -244,6 +244,7 @@ public final void run() {
         
             repeat = false;
             if (mCallerActivity != null && mAccount != null && mContext != null && !result.isSuccess() && result.getCode() == ResultCode.UNAUTHORIZED) {
+                /// fail due to lack of authorization in an operation performed in foreground
                 AccountManager am = AccountManager.get(mContext);
                 Credentials cred = mClient.getCredentials();
                 if (cred instanceof BearerCredentials) {
@@ -252,7 +253,7 @@ public final void run() {
                     am.clearPassword(mAccount);
                 }
                 mClient = null;
-                repeat = true;
+                repeat = true;  // when repeated, the creation of a new OwnCloudClient after erasing the saved credentials will trigger the login activity
                 result = null;
             }
         } while (repeat);

File: src/com/owncloud/android/ui/activity/InstantUploadActivity.java
Patch:
@@ -55,8 +55,8 @@
  * uploaded instantly. The images can be selected for delete or for a try again
  * upload
  * 
- * The entrypoint for this activity is the 'Failed upload Notification" and a
- * submenue underneath the 'Upload' menuentry
+ * The entry-point for this activity is the 'Failed upload Notification" and a
+ * sub-menu underneath the 'Upload' menu-item
  * 
  * @author andomaex / Matthias Baumann
  * 

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -145,7 +145,7 @@ public static int getResourceId(String mimetype) {
         } else {
             String [] parts = mimetype.split("/");
             String type = parts[0];
-            String subtype = (parts.length > 0) ? parts[1] : "";
+            String subtype = (parts.length > 1) ? parts[1] : "";
             
             if(TYPE_TXT.equals(type)) {
                 return R.drawable.file_doc;

File: src/com/owncloud/android/extensions/ExtensionsAvailableDialog.java
Patch:
@@ -19,6 +19,7 @@
 
 package com.owncloud.android.extensions;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 import android.content.Intent;
 import android.os.Bundle;
@@ -62,7 +63,7 @@ public void onClick(View v) {
             getActivity().finish();
             break;
         default:
-            Log.e("EAD", "Button with unknown id clicked " + v.getId());
+            Log_OC.e("EAD", "Button with unknown id clicked " + v.getId());
         }
     }
 

File: src/com/owncloud/android/extensions/ExtensionsListActivity.java
Patch:
@@ -28,6 +28,7 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 
@@ -81,7 +82,7 @@ public void run() {
             final JSONArray ar;
             try {
                 hc.executeMethod(gm);
-                Log.e("ASD", gm.getResponseBodyAsString() + "");
+                Log_OC.e("ASD", gm.getResponseBodyAsString() + "");
                 ar = new JSONObject(gm.getResponseBodyAsString())
                         .getJSONArray("apps");
             } catch (Exception e) {

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -21,6 +21,7 @@
 
 import java.io.File;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.datamodel.FileDataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.network.OwnCloudClientUtils;
@@ -71,9 +72,9 @@ public OwnCloudFileObserver(String path, Account account, Context context, int m
     
     @Override
     public void onEvent(int event, String path) {
-        Log.d(TAG, "Got file modified with event " + event + " and path " + mPath + ((path != null) ? File.separator + path : ""));
+        Log_OC.d(TAG, "Got file modified with event " + event + " and path " + mPath + ((path != null) ? File.separator + path : ""));
         if ((event & mMask) == 0) {
-            Log.wtf(TAG, "Incorrect event " + event + " sent for file " + mPath + ((path != null) ? File.separator + path : "") +
+            Log_OC.wtf(TAG, "Incorrect event " + event + " sent for file " + mPath + ((path != null) ? File.separator + path : "") +
                          " with registered for " + mMask + " and original path " +
                          mPath);
             return;

File: src/com/owncloud/android/files/services/InstantUploadService.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.LinkedList;
 import java.util.List;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.network.OwnCloudClientUtils;
 
 import eu.alefzero.webdav.WebdavClient;
@@ -56,7 +57,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         if (intent == null || !intent.hasExtra(KEY_ACCOUNT) || !intent.hasExtra(KEY_DISPLAY_NAME)
                 || !intent.hasExtra(KEY_FILE_PATH) || !intent.hasExtra(KEY_FILE_SIZE)
                 || !intent.hasExtra(KEY_MIME_TYPE)) {
-            Log.w(TAG, "Not all required information was provided, abording");
+            Log_OC.w(TAG, "Not all required information was provided, abording");
             return Service.START_NOT_STICKY;
         }
         
@@ -74,7 +75,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         
         // starting new thread for new download doesnt seems like a good idea
         // maybe some thread pool or single background thread would be better
-        Log.d(TAG, "Starting instant upload thread");
+        Log_OC.d(TAG, "Starting instant upload thread");
         new Thread(mUploaderRunnable).start();
         
         return Service.START_STICKY;

File: src/com/owncloud/android/location/LocationUpdateService.java
Patch:
@@ -31,6 +31,7 @@
 import android.util.Log;
 import android.widget.Toast;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 
 public class LocationUpdateService extends IntentService implements
@@ -76,7 +77,7 @@ protected void onHandleIntent(Intent intent) {
 
         // If we do shall track the device -> Stop
         if (!trackDevice) {
-            Log.d(TAG, "Devicetracking is disabled");
+            Log_OC.d(TAG, "Devicetracking is disabled");
             stopSelf();
             return;
         }
@@ -87,7 +88,7 @@ protected void onHandleIntent(Intent intent) {
 
     @Override
     public void onLocationChanged(Location location) {
-        Log.d(TAG, "Location changed: " + location);
+        Log_OC.d(TAG, "Location changed: " + location);
 
     }
 

File: src/com/owncloud/android/network/AdvancedX509TrustManager.java
Patch:
@@ -32,6 +32,8 @@
 import javax.net.ssl.TrustManagerFactory;
 import javax.net.ssl.X509TrustManager;
 
+import com.owncloud.android.Log_OC;
+
 import android.util.Log;
 
 /**
@@ -139,7 +141,7 @@ public boolean isKnownServer(X509Certificate cert) {
         try {
             return (mKnownServersKeyStore.getCertificateAlias(cert) != null);
         } catch (KeyStoreException e) {
-            Log.d(TAG, "Fail while checking certificate in the known-servers store");
+            Log_OC.d(TAG, "Fail while checking certificate in the known-servers store");
             return false;
         }
     }

File: src/com/owncloud/android/operations/ChunkedUploadFileOperation.java
Patch:
@@ -28,6 +28,7 @@
 import org.apache.commons.httpclient.HttpException;
 import org.apache.commons.httpclient.methods.PutMethod;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.datamodel.OCFile;
 
 import android.accounts.Account;
@@ -74,7 +75,7 @@ protected int uploadFile(WebdavClient client) throws HttpException, IOException
                 mPutMethod.setRequestEntity(entity);
                 status = client.executeMethod(mPutMethod);
                 client.exhaustResponse(mPutMethod.getResponseBodyAsStream());
-                Log.d(TAG, "Upload of " + getStoragePath() + " to " + getRemotePath() + ", chunk index " + chunkIndex + ", count " + chunkCount + ", HTTP result status " + status);
+                Log_OC.d(TAG, "Upload of " + getStoragePath() + " to " + getRemotePath() + ", chunk index " + chunkIndex + ", count " + chunkCount + ", HTTP result status " + status);
                 if (!isSuccess(status))
                     break;
             }

File: src/com/owncloud/android/operations/RemoveFileOperation.java
Patch:
@@ -23,6 +23,7 @@
 
 import android.util.Log;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 
@@ -91,11 +92,11 @@ protected RemoteOperationResult run(WebdavClient client) {
             }
             delete.getResponseBodyAsString();   // exhaust the response, although not interesting
             result = new RemoteOperationResult((delete.succeeded() || status == HttpStatus.SC_NOT_FOUND), status);
-            Log.i(TAG, "Remove " + mFileToRemove.getRemotePath() + ": " + result.getLogMessage());
+            Log_OC.i(TAG, "Remove " + mFileToRemove.getRemotePath() + ": " + result.getLogMessage());
             
         } catch (Exception e) {
             result = new RemoteOperationResult(e);
-            Log.e(TAG, "Remove " + mFileToRemove.getRemotePath() + ": " + result.getLogMessage(), e);
+            Log_OC.e(TAG, "Remove " + mFileToRemove.getRemotePath() + ": " + result.getLogMessage(), e);
             
         } finally {
             if (delete != null)

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -28,6 +28,7 @@
 import android.content.Intent;
 import android.util.Log;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
@@ -158,11 +159,11 @@ protected RemoteOperationResult run(WebdavClient client) {
           
             }
             
-            Log.i(TAG, "Synchronizing " + mAccount.name + ", file " + mLocalFile.getRemotePath() + ": " + result.getLogMessage());
+            Log_OC.i(TAG, "Synchronizing " + mAccount.name + ", file " + mLocalFile.getRemotePath() + ": " + result.getLogMessage());
           
         } catch (Exception e) {
             result = new RemoteOperationResult(e);
-            Log.e(TAG, "Synchronizing " + mAccount.name + ", file " + mLocalFile.getRemotePath() + ": " + result.getLogMessage(), result.getException());
+            Log_OC.e(TAG, "Synchronizing " + mAccount.name + ", file " + mLocalFile.getRemotePath() + ": " + result.getLogMessage(), result.getException());
 
         } finally {
             if (propfind != null)

File: src/com/owncloud/android/ui/activity/AccountSelectActivity.java
Patch:
@@ -50,6 +50,7 @@
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 import com.owncloud.android.AccountUtils;
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.authenticator.AccountAuthenticator;
 
 import com.owncloud.android.R;
@@ -153,7 +154,7 @@ public boolean onContextItemSelected(android.view.MenuItem item) {
         try {
             map = (HashMap<String, String>) getListAdapter().getItem(index);
         } catch (ClassCastException e) {
-            Log.wtf(TAG, "getitem(index) from list adapter did not return hashmap, bailing out");
+            Log_OC.wtf(TAG, "getitem(index) from list adapter did not return hashmap, bailing out");
             return false;
         }
         

File: src/com/owncloud/android/ui/activity/ConflictsResolveActivity.java
Patch:
@@ -20,6 +20,7 @@
 package com.owncloud.android.ui.activity;
 
 import com.actionbarsherlock.app.SherlockFragmentActivity;
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileUploader;
 import com.owncloud.android.ui.dialog.ConflictsResolveDialog;
@@ -79,7 +80,7 @@ public void ConflictDecisionMade(Decision decision) {
                 i.putExtra(FileUploader.KEY_LOCAL_BEHAVIOUR, FileUploader.LOCAL_BEHAVIOUR_MOVE);
                 break;
             default:
-                Log.wtf(TAG, "Unhandled conflict decision " + decision);
+                Log_OC.wtf(TAG, "Unhandled conflict decision " + decision);
                 return;
         }
         i.putExtra(FileUploader.KEY_ACCOUNT, mOCAccount);

File: src/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -38,6 +38,7 @@
 import android.widget.Button;
 import android.widget.TextView;
 
+import com.owncloud.android.Log_OC;
 import com.owncloud.android.R;
 import com.owncloud.android.network.CertificateCombinedException;
 import com.owncloud.android.network.OwnCloudClientUtils;
@@ -110,13 +111,13 @@ public void onClick(View v) {
                             if (mListener != null)
                                 mListener.onSavedCertificate();
                             else
-                                Log.d(TAG, "Nobody there to notify the certificate was saved");
+                                Log_OC.d(TAG, "Nobody there to notify the certificate was saved");
                             
                         } catch (Exception e) {
                             dismiss();
                             if (mListener != null)
                                 mListener.onFailedSavingCertificate();
-                            Log.e(TAG, "Server certificate could not be saved in the known servers trust store ", e);
+                            Log_OC.e(TAG, "Server certificate could not be saved in the known servers trust store ", e);
                         }
                     }
                 });

File: src/com/owncloud/android/ui/fragment/ConfirmationDialogFragment.java
Patch:
@@ -26,6 +26,7 @@
 import android.util.Log;
 
 import com.actionbarsherlock.app.SherlockDialogFragment;
+import com.owncloud.android.Log_OC;
 
 public class ConfirmationDialogFragment extends SherlockDialogFragment {
 
@@ -73,7 +74,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         int negBtn = getArguments().getInt(ARG_NEGATIVE_BTN_RES, -1);
         
         if (confirmationTarget == null || resourceId == -1) {
-            Log.wtf(getTag(), "Calling confirmation dialog without resource or arguments");
+            Log_OC.wtf(getTag(), "Calling confirmation dialog without resource or arguments");
             return null;
         }
 

File: src/eu/alefzero/webdav/ChunkFromFileChannelRequestEntity.java
Patch:
@@ -30,6 +30,8 @@
 
 import org.apache.commons.httpclient.methods.RequestEntity;
 
+import com.owncloud.android.Log_OC;
+
 import eu.alefzero.webdav.OnDatatransferProgressListener;
 
 import android.util.Log;
@@ -123,7 +125,7 @@ public void writeRequest(final OutputStream out) throws IOException {
             }
             
         } catch (IOException io) {
-            Log.e(TAG, io.getMessage());
+            Log_OC.e(TAG, io.getMessage());
             throw new RuntimeException("Ugly solution to workaround the default policy of retries when the server falls while uploading ; temporal fix; really", io);   
             
         }

File: src/eu/alefzero/webdav/FileRequestEntity.java
Patch:
@@ -32,6 +32,8 @@
 
 import org.apache.commons.httpclient.methods.RequestEntity;
 
+import com.owncloud.android.Log_OC;
+
 import eu.alefzero.webdav.OnDatatransferProgressListener;
 
 import android.util.Log;
@@ -110,7 +112,7 @@ public void writeRequest(final OutputStream out) throws IOException {
             }
             
         } catch (IOException io) {
-            Log.e("FileRequestException", io.getMessage());
+            Log_OC.e("FileRequestException", io.getMessage());
             throw new RuntimeException("Ugly solution to workaround the default policy of retries when the server falls while uploading ; temporal fix; really", io);   
             
         } finally {

File: src/eu/alefzero/webdav/WebdavEntry.java
Patch:
@@ -24,6 +24,8 @@
 import org.apache.jackrabbit.webdav.property.DavPropertyName;
 import org.apache.jackrabbit.webdav.property.DavPropertySet;
 
+import com.owncloud.android.Log_OC;
+
 import android.net.Uri;
 import android.util.Log;
 
@@ -89,7 +91,7 @@ public WebdavEntry(MultiStatusResponse ms, String splitElement) {
             }
 
         } else {
-            Log.e("WebdavEntry",
+            Log_OC.e("WebdavEntry",
                     "General fuckup, no status for webdav response");
         }
     }

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -145,7 +145,7 @@ public static int getResourceId(String mimetype) {
         } else {
             String [] parts = mimetype.split("/");
             String type = parts[0];
-            String subtype = parts[1];
+            String subtype = (parts.length > 0) ? parts[1] : "";
             
             if(TYPE_TXT.equals(type)) {
                 return R.drawable.file_doc;

File: src/com/owncloud/android/operations/OAuth2GetAccessToken.java
Patch:
@@ -98,7 +98,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                 Log.e(TAG, "OAuth2 TOKEN REQUEST with auth code " + mOAuth2ParsedAuthorizationResponse.get("code") + " to " + client.getBaseUri() + ": " + result.getLogMessage(), result.getException());
                 
             } else if (result.getCode() == ResultCode.OAUTH2_ERROR) {
-                    Log.e(TAG, "OAuth2 TOKEN REQUEST with auth code " + mOAuth2ParsedAuthorizationResponse.get("code") + " to " + client.getBaseUri() + ": " + mResultTokenMap.get(OAuth2Context.OAUTH2_TOKEN_RECEIVED_ERROR));
+                    Log.e(TAG, "OAuth2 TOKEN REQUEST with auth code " + mOAuth2ParsedAuthorizationResponse.get("code") + " to " + client.getBaseUri() + ": " + ((mResultTokenMap != null) ? mResultTokenMap.get(OAuth2Context.OAUTH2_TOKEN_RECEIVED_ERROR) : "NULL"));
                     
             } else {
                 Log.e(TAG, "OAuth2 TOKEN REQUEST with auth code " + mOAuth2ParsedAuthorizationResponse.get("code") + " to " + client.getBaseUri() + ": " + result.getLogMessage());

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -303,7 +303,7 @@ public void onStop() {
         }
         leaveTransferProgress();
     }
-    
+
     
     @Override
     public View getView() {

File: src/com/owncloud/android/ui/fragment/FileFragment.java
Patch:
@@ -69,8 +69,6 @@ public interface ContainerActivity extends TransferServiceGetter {
         public void showFragmentWithDetails(OCFile file);
         
         
-        public void notifySuccessfulDownload(OCFile file, Intent intent, boolean success);
-        
     }
     
 }

File: src/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -334,6 +334,7 @@ public void leaveTransferProgress() {
         if (mProgressListener != null) {
             if (mContainerActivity.getFileDownloaderBinder() != null) {
                 mContainerActivity.getFileDownloaderBinder().removeDatatransferProgressListener(mProgressListener, mAccount, mFile);
+                mListening = false;
             }
         }
     }

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -169,7 +169,7 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             FileDetailFragment detailsFragment = (fragment instanceof FileDetailFragment) ? (FileDetailFragment) fragment : null;
             if (detailsFragment != null) {
                 detailsFragment.listenForTransferProgress();
-                detailsFragment.updateFileDetails(mWaitingToPreview);   // let the fragment gets the mDownloadBinder through getDownloadBinder() (see FileDetailFragment#updateFileDetais())
+                detailsFragment.updateFileDetails(mWaitingToPreview, false);   // let the fragment gets the mDownloadBinder through getDownloadBinder() (see FileDetailFragment#updateFileDetais())
             }
         }
 
@@ -225,7 +225,7 @@ protected void onResume() {
         if (!mConfigurationChangedToLandscape) {
             Fragment fragment = getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
             if (fragment != null && fragment instanceof FileDetailFragment) {
-                ((FileDetailFragment) fragment).updateFileDetails(false);
+                ((FileDetailFragment) fragment).updateFileDetails(false, false);
             }
         }
     }

File: src/com/owncloud/android/ui/preview/FileDownloadFragment.java
Patch:
@@ -16,7 +16,7 @@
  *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-package com.owncloud.android.ui.fragment;
+package com.owncloud.android.ui.preview;
 
 import java.lang.ref.WeakReference;
 
@@ -41,6 +41,8 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
+import com.owncloud.android.ui.fragment.FileFragment;
+import com.owncloud.android.ui.fragment.FileFragment.ContainerActivity;
 
 import com.owncloud.android.R;
 

File: src/com/owncloud/android/ui/preview/PreviewImagePagerAdapter.java
Patch:
@@ -36,7 +36,6 @@
 
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.ui.fragment.FileDownloadFragment;
 
 /**
  * Adapter class that provides Fragment instances  

File: src/com/owncloud/android/ui/activity/PreviewImageActivity.java
Patch:
@@ -109,10 +109,11 @@ protected void onCreate(Bundle savedInstanceState) {
             // should not be necessary
             mParentFolder = mStorageManager.getFileByPath(OCFile.PATH_SEPARATOR);
         }
-        
+
+        createViewPager();
+
         if (savedInstanceState == null) {
             mWaitingToPreview = false;
-            createViewPager();
         } else {
             mWaitingToPreview = savedInstanceState.getBoolean(KEY_WAITING_TO_PREVIEW);
         }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -1103,7 +1103,9 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             if (mDualPane) {
                 Fragment fragment = getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
                 if (fragment != null && fragment instanceof FileDetailFragment) {
-                    ((FileDetailFragment)fragment).updateFileDetails(false);
+                    FileDetailFragment detailFragment = (FileDetailFragment)fragment;
+                    detailFragment.listenForTransferProgress();
+                    detailFragment.updateFileDetails(false);
                 }
             }
         }

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -140,6 +140,7 @@ private void createChildFragment() {
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
         outState.putBoolean(KEY_WAITING_TO_PREVIEW, mWaitingToPreview);
     }
 

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -649,6 +649,7 @@ private void notifyUploadStart(UploadFileOperation upload) {
         Intent showDetailsIntent = new Intent(this, FileDetailActivity.class);
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, upload.getFile());
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, upload.getAccount());
+        showDetailsIntent.putExtra(FileDetailActivity.EXTRA_MODE, FileDetailActivity.MODE_DETAILS);
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
         mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), showDetailsIntent, 0);
         
@@ -702,6 +703,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             Intent showDetailsIntent = new Intent(this, FileDetailActivity.class);
             showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, upload.getFile());
             showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, upload.getAccount());
+            showDetailsIntent.putExtra(FileDetailActivity.EXTRA_MODE, FileDetailActivity.MODE_DETAILS);
             showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), showDetailsIntent, 0);
             

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -152,7 +152,7 @@ private class DetailsServiceConnection implements ServiceConnection {
         @Override
         public void onServiceConnected(ComponentName component, IBinder service) {
             Fragment fragment = getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
-            FileDetailFragment detailsFragment = (FileDetailFragment) fragment;
+            FileDetailFragment detailsFragment = (fragment instanceof FileDetailFragment) ? (FileDetailFragment) fragment : null;
                 
             if (component.equals(new ComponentName(FileDetailActivity.this, FileDownloader.class))) {
                 Log.d(TAG, "Download service connected");

File: src/com/owncloud/android/authenticator/AccountAuthenticator.java
Patch:
@@ -174,7 +174,7 @@ public String getAuthTokenLabel(String authTokenType) {
     public Bundle hasFeatures(AccountAuthenticatorResponse response,
             Account account, String[] features) throws NetworkErrorException {
         final Bundle result = new Bundle();
-        result.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, false);
+        result.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);
         return result;
     }
 

File: src/com/owncloud/android/authenticator/oauth2/OAuth2Context.java
Patch:
@@ -53,4 +53,6 @@ public class OAuth2Context {
     public static final String CODE_RESPONSE_TYPE = "response_type";
     public static final String CODE_REDIRECT_URI = "redirect_uri";
     
+    public static final String ERROR_ACCESS_DENIED = "access_denied";
+    
 }

File: src/com/owncloud/android/operations/RemoteOperationResult.java
Patch:
@@ -72,7 +72,8 @@ public enum ResultCode {
         SYNC_CONFLICT,
         LOCAL_STORAGE_FULL, 
         LOCAL_STORAGE_NOT_MOVED, 
-        LOCAL_STORAGE_NOT_COPIED
+        LOCAL_STORAGE_NOT_COPIED, 
+        OAUTH2_ERROR_ACCESS_DENIED
     }
 
     private boolean mSuccess = false;

File: src/com/owncloud/android/ui/activity/AuthenticatorActivity.java
Patch:
@@ -126,8 +126,6 @@ public class AuthenticatorActivity extends AccountAuthenticatorActivity
     
     private TextView mOAuthAuthEndpointText;
     private TextView mOAuthTokenEndpointText;
-
-
     
     
     /**
@@ -264,7 +262,6 @@ private void loadSavedInstanceState(Bundle savedInstanceState) {
         // state of oAuth2 components
         mOAuth2StatusIcon = savedInstanceState.getInt(KEY_OAUTH2_STATUS_ICON);
         mOAuth2StatusText = savedInstanceState.getInt(KEY_OAUTH2_STATUS_TEXT);
-        changeViewByOAuth2Check(mOAuth2Check.isChecked());
         
         /* Leave old OAuth flow
         // We store a JSon object with all the data returned from oAuth2 server when we get user_code.
@@ -305,6 +302,9 @@ protected void onNewIntent (Intent intent) {
     @Override
     protected void onResume() {
         super.onResume();
+        changeViewByOAuth2Check(mOAuth2Check.isChecked());  
+            // the state of mOAuth2Check is automatically recovered between configuration changes, but not before onCreate() finishes
+        
         /* LEAVE OLD OAUTH FLOW ; 
         // (old oauth code) Registering token receiver. We must listening to the service that is pooling to the oAuth server for a token.
         if (tokenReceiver == null) {

File: src/com/owncloud/android/DisplayUtils.java
Patch:
@@ -59,7 +59,7 @@ public class DisplayUtils {
     private static final String TYPE_APPLICATION = "application";
     private static final String TYPE_AUDIO = "audio";
     private static final String TYPE_IMAGE = "image";
-    private static final String TYPE_TXT = "txt";
+    private static final String TYPE_TXT = "text";
     private static final String TYPE_VIDEO = "video";
     
     private static final String SUBTYPE_PDF = "pdf";

File: src/com/owncloud/android/files/services/FileObserverService.java
Patch:
@@ -137,7 +137,7 @@ private void initializeObservedList() {
                 ProviderTableMeta.FILE_KEEP_IN_SYNC + " = ?",
                 new String[] {String.valueOf(1)},
                 null);
-        if (!c.moveToFirst()) return;
+        if (c == null || !c.moveToFirst()) return;
         AccountManager acm = AccountManager.get(this);
         Account[] accounts = acm.getAccounts();
         do {

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -359,7 +359,7 @@ private void notifyForgottenLocalFiles() {
         notification.contentIntent = PendingIntent.getActivity(getContext().getApplicationContext(), (int)System.currentTimeMillis(), explanationIntent, 0);
         notification.setLatestEventInfo(getContext().getApplicationContext(), 
                                         getContext().getString(R.string.sync_foreign_files_forgotten_ticker), 
-                                        String.format(getContext().getString(R.string.sync_foreign_files_forgotten_content), mForgottenLocalFiles.size()), 
+                                        String.format(getContext().getString(R.string.sync_foreign_files_forgotten_content), mForgottenLocalFiles.size(), getContext().getString(R.string.app_name)), 
                                         notification.contentIntent);
         ((NotificationManager) getContext().getSystemService(Context.NOTIFICATION_SERVICE)).notify(R.string.sync_foreign_files_forgotten_ticker, notification);
         

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -488,9 +488,9 @@ public void removeDirectory(OCFile dir, boolean removeDBData, boolean removeLoca
                         }
                     }
                 }
-                if (removeDBData) {
-                    removeFile(dir, true);
-                }
+            }
+            if (removeDBData) {
+                removeFile(dir, true);
             }
         }
     }

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -140,7 +140,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             default:
-                retval = onOptionsItemSelected(item);
+                retval = super.onOptionsItemSelected(item);
         }
         return retval;
     }

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -198,6 +198,7 @@ public void cancel(Account account, OCFile file) {
          * @param file          A file that could be in the queue of downloads.
          */
         public boolean isDownloading(Account account, OCFile file) {
+            if (account == null || file == null) return false;
             String targetKey = buildRemoteName(account, file);
             synchronized (mPendingDownloads) {
                 if (file.isDirectory()) {

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -324,6 +324,7 @@ public void cancel(Account account, OCFile file) {
          * @param file          A file that could be in the queue of pending uploads
          */
         public boolean isUploading(Account account, OCFile file) {
+            if (account == null || file == null) return false;
             String targetKey = buildRemoteName(account, file);
             synchronized (mPendingUploads) {
                 if (file.isDirectory()) {

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -314,7 +314,7 @@ protected void onPreExecute () {
         protected Boolean doInBackground(Void... params) {
             String[] checkedFilePaths = mFileListFragment.getCheckedFilePaths();
             long total = 0;
-            for (int i=0; i < checkedFilePaths.length ; i++) {
+            for (int i=0; checkedFilePaths != null && i < checkedFilePaths.length ; i++) {
                 String localPath = checkedFilePaths[i];
                 File localFile = new File(localPath);
                 total += localFile.length();

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -330,8 +330,9 @@ public Uri getBaseUri() {
 
     @Override
     public int executeMethod(HostConfiguration hostconfig, final HttpMethod method, final HttpState state) throws IOException, HttpException  {
-        if (mCredentials instanceof BearerAuthScheme) {
+        if (mCredentials instanceof BearerCredentials) {
             method.getHostAuthState().setAuthScheme(AuthPolicy.getAuthScheme(BearerAuthScheme.AUTH_POLICY));
+            method.getHostAuthState().setAuthAttempted(true);
         }
         return super.executeMethod(hostconfig, method, state);
     }

File: src/com/owncloud/android/Uploader.java
Patch:
@@ -391,12 +391,13 @@ private boolean prepareStreamsToUpload() {
 
     public void uploadFiles() {
         try {
+            /* TODO - mCreateDir can never be true at this moment; we will replace wdc.createDirectory by CreateFolderOperation when that is fixed 
             WebdavClient wdc = OwnCloudClientUtils.createOwnCloudClient(mAccount, getApplicationContext());
-
             // create last directory in path if necessary
             if (mCreateDir) {
                 wdc.createDirectory(mUploadPath);
             }
+            */
 
             String[] local = new String[mStreamsToUpload.size()], remote = new String[mStreamsToUpload.size()];
 

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -77,7 +77,6 @@ public void onEvent(int event, String path) {
                          mPath);
             return;
         }
-        WebdavClient wc = OwnCloudClientUtils.createOwnCloudClient(mOCAccount, mContext);
         FileDataStorageManager storageManager = new FileDataStorageManager(mOCAccount, mContext.getContentResolver());
         OCFile file = storageManager.getFileByLocalPath(mPath);     // a fresh object is needed; many things could have occurred to the file since it was registered to observe
                                                                     // again, assuming that local files are linked to a remote file AT MOST, SOMETHING TO BE DONE; 
@@ -88,7 +87,7 @@ public void onEvent(int event, String path) {
                                                                     true, 
                                                                     true, 
                                                                     mContext);
-        RemoteOperationResult result = sfo.execute(wc);
+        RemoteOperationResult result = sfo.execute(mOCAccount, mContext);
         if (result.getCode() == ResultCode.SYNC_CONFLICT) {
             // ISSUE 5: if the user is not running the app (this is a service!), this can be very intrusive; a notification should be preferred
             Intent i = new Intent(mContext, ConflictsResolveActivity.class);

File: src/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -42,7 +42,7 @@
  */
 public class RenameFileOperation extends RemoteOperation {
     
-    private static final String TAG = RemoveFileOperation.class.getSimpleName();
+    private static final String TAG = RenameFileOperation.class.getSimpleName();
 
     private static final int RENAME_READ_TIMEOUT = 10000;
     private static final int RENAME_CONNECTION_TIMEOUT = 5000;

File: src/com/owncloud/android/syncadapter/AbstractOwnCloudSyncAdapter.java
Patch:
@@ -142,7 +142,7 @@ protected HttpResponse fireRawRequest(HttpRequest query)
         return null;
     }
 
-    protected void initClientForCurrentAccount() throws UnknownHostException {
+    protected void initClientForCurrentAccount() throws OperationCanceledException, AuthenticatorException, IOException {
         if (AccountUtils.constructFullURLForAccount(getContext(), account) == null) {
             throw new UnknownHostException();
         }

File: src/com/owncloud/android/authenticator/AccountAuthenticator.java
Patch:
@@ -204,8 +204,8 @@ public Bundle getAccountRemovalAllowed(
 
     private void setIntentFlags(Intent intent) {
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        intent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
-        intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
+        //intent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
+        //intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY); // incompatible with the authorization code grant in OAuth
         intent.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
         intent.addFlags(Intent.FLAG_FROM_BACKGROUND);
     }

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -68,7 +68,7 @@ public void setCredentials(String username, String password) {
         getState().setCredentials(AuthScope.ANY,
                 getCredentials(username, password));
     }
-
+    
     private Credentials getCredentials(String username, String password) {
         if (mCredentials == null)
             mCredentials = new UsernamePasswordCredentials(username, password);

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -164,6 +164,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                     if (oldFile != null) {
                         file.setKeepInSync(oldFile.keepInSync());
                         file.setLastSyncDateForData(oldFile.getLastSyncDateForData());
+                        file.setModificationTimestampAtLastSyncForData(oldFile.getModificationTimestampAtLastSyncForData());    // not local, but must be kept unchanged when the file contents are not updated
                         checkAndFixForeignStoragePath(oldFile);
                         file.setStoragePath(oldFile.getStoragePath());
                     }

File: src/com/owncloud/android/db/ProviderMeta.java
Patch:
@@ -31,8 +31,7 @@ public class ProviderMeta {
     public static final String AUTHORITY_FILES = "org.owncloud";
     public static final String DB_FILE = "owncloud.db";
     public static final String DB_NAME = "filelist";
-    //public static final int DB_VERSION = 2;
-    public static final int DB_VERSION = 3;
+    public static final int DB_VERSION = 4;
 
     private ProviderMeta() {
     }
@@ -53,6 +52,7 @@ static public class ProviderTableMeta implements BaseColumns {
         public static final String FILE_NAME = "filename";
         public static final String FILE_CREATION = "created";
         public static final String FILE_MODIFIED = "modified";
+        public static final String FILE_MODIFIED_AT_LAST_SYNC_FOR_DATA = "modified_at_last_sync_for_data";
         public static final String FILE_CONTENT_LENGTH = "content_length";
         public static final String FILE_CONTENT_TYPE = "content_type";
         public static final String FILE_STORAGE_PATH = "media_path";

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -301,6 +301,7 @@ private void saveDownloadedFile() {
         file.setLastSyncDateForProperties(syncDate);
         file.setLastSyncDateForData(syncDate);
         file.setModificationTimestamp(mCurrentDownload.getModificationTimestamp());
+        file.setModificationTimestampAtLastSyncForData(mCurrentDownload.getModificationTimestamp());
         // file.setEtag(mCurrentDownload.getEtag());    // TODO Etag, where available
         file.setMimetype(mCurrentDownload.getMimeType());
         file.setStoragePath(mCurrentDownload.getSavePath());

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -489,7 +489,8 @@ private void updateOCFile(OCFile file, WebdavEntry we) {
         file.setCreationTimestamp(we.createTimestamp());
         file.setFileLength(we.contentLength());
         file.setMimetype(we.contentType());
-        file.setModificationTimestamp(we.modifiedTimesamp());
+        file.setModificationTimestamp(we.modifiedTimestamp());
+        file.setModificationTimestampAtLastSyncForData(we.modifiedTimestamp());
         // file.setEtag(mCurrentDownload.getEtag());    // TODO Etag, where available
     }
     

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -113,7 +113,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                         serverChanged = (!mServerFile.getEtag().equals(mLocalFile.getEtag()));   // TODO could this be dangerous when the user upgrades the server from non-tagged to tagged?
                     } else {
                         // server without etags
-                        serverChanged = (mServerFile.getModificationTimestamp() > mLocalFile.getModificationTimestamp());
+                        serverChanged = (mServerFile.getModificationTimestamp() > mLocalFile.getModificationTimestampAtLastSyncForData());
                     }
                     boolean localChanged = (mLocalChangeAlreadyKnown || mLocalFile.getLocalModificationTimestamp() > mLocalFile.getLastSyncDateForData());
                         // TODO this will be always true after the app is upgraded to database version 3; will result in unnecessary uploads
@@ -214,7 +214,7 @@ private OCFile fillOCFile(WebdavEntry we) {
         file.setCreationTimestamp(we.createTimestamp());
         file.setFileLength(we.contentLength());
         file.setMimetype(we.contentType());
-        file.setModificationTimestamp(we.modifiedTimesamp());
+        file.setModificationTimestamp(we.modifiedTimestamp());
         return file;
     }
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -279,7 +279,7 @@ private OCFile fillOCFile(WebdavEntry we) {
         file.setCreationTimestamp(we.createTimestamp());
         file.setFileLength(we.contentLength());
         file.setMimetype(we.contentType());
-        file.setModificationTimestamp(we.modifiedTimesamp());
+        file.setModificationTimestamp(we.modifiedTimestamp());
         file.setParentId(mParentId);
         return file;
     }

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -310,6 +310,7 @@ private void createNewOCFile(String newRemotePath) {
         newFile.setFileLength(mFile.getFileLength());
         newFile.setMimetype(mFile.getMimetype());
         newFile.setModificationTimestamp(mFile.getModificationTimestamp());
+        newFile.setModificationTimestampAtLastSyncForData(mFile.getModificationTimestampAtLastSyncForData());
         // newFile.setEtag(mFile.getEtag())
         newFile.setKeepInSync(mFile.keepInSync());
         newFile.setLastSyncDateForProperties(mFile.getLastSyncDateForProperties());

File: src/eu/alefzero/webdav/WebdavEntry.java
Patch:
@@ -126,7 +126,7 @@ public long createTimestamp() {
         return mCreateTimestamp;
     }
 
-    public long modifiedTimesamp() {
+    public long modifiedTimestamp() {
         return mModifiedTimestamp;
     }
 

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -66,7 +66,7 @@ private void handleUploadFinished(Context context, Intent intent) {
         // remove successfull uploading, ignore rest for reupload on reconnect
         if (intent.getBooleanExtra(FileUploader.EXTRA_UPLOAD_RESULT, false)) {
             DbHandler db = new DbHandler(context);
-            String localPath = intent.getStringExtra(FileUploader.EXTRA_FILE_PATH);
+            String localPath = intent.getStringExtra(FileUploader.EXTRA_OLD_FILE_PATH);
             if (!db.removeIUPendingFile(localPath,
                                         intent.getStringExtra(FileUploader.ACCOUNT_NAME))) {
                 Log.w(TAG, "Tried to remove non existing instant upload file " + localPath);

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -363,15 +363,15 @@ public void onConfirmation(String callerTag) {
             setResult(RESULT_OK_AND_MOVE, data);
             finish();
         }
-        //mCurrentDialog.dismiss();
+        mCurrentDialog.dismiss();
         mCurrentDialog = null;
     }
 
 
     @Override
     public void onNeutral(String callerTag) {
         Log.d(TAG, "Phantom neutral button in dialog was clicked; dialog tag is " + callerTag);
-        //mCurrentDialog.dismiss();
+        mCurrentDialog.dismiss();
         mCurrentDialog = null;
     }
 
@@ -380,7 +380,7 @@ public void onNeutral(String callerTag) {
     public void onCancel(String callerTag) {
         /// nothing to do; don't finish, let the user change the selection
         Log.d(TAG, "Negative button in dialog was clicked; dialog tag is " + callerTag);
-        //mCurrentDialog.dismiss();
+        mCurrentDialog.dismiss();
         mCurrentDialog = null;
     }    
 

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -296,11 +296,10 @@ private OCFile fillOCFile(WebdavEntry we) {
     private void checkAndFixForeignStoragePath(OCFile file) {
         String storagePath = file.getStoragePath();
         String expectedPath = FileStorageUtils.getDefaultSavePathFor(mAccount.name, file);
-        File ocLocalFolder = new File(FileStorageUtils.getSavePath(mAccount.name));
         if (storagePath != null && !storagePath.equals(expectedPath)) {
             /// fix storagePaths out of the local ownCloud folder
             File originalFile = new File(storagePath);
-            if (ocLocalFolder.getUsableSpace() < originalFile.length()) {
+            if (FileStorageUtils.getUsableSpace(mAccount.name) < originalFile.length()) {
                 mForgottenLocalFiles.put(file.getRemotePath(), storagePath);
                 file.setStoragePath(null);
                     

File: src/com/owncloud/android/operations/UploadFileOperation.java
Patch:
@@ -166,8 +166,7 @@ protected RemoteOperationResult run(WebdavClient client) {
             /// check location of local file; if not the expected, copy to a temporal file before upload (if COPY is the expected behaviour)
             if (!originalStoragePath.equals(expectedPath) && mLocalBehaviour == FileUploader.LOCAL_BEHAVIOUR_COPY) {
 
-                File ocLocalFolder = new File(FileStorageUtils.getSavePath(mAccount.name));
-                if (ocLocalFolder.getUsableSpace() < originalFile.length()) {
+                if (FileStorageUtils.getUsableSpace(mAccount.name) < originalFile.length()) {
                     result = new RemoteOperationResult(ResultCode.LOCAL_STORAGE_FULL);
                     return result;  // error condition when the file should be copied
                         

File: src/com/owncloud/android/ui/activity/UploadFilesActivity.java
Patch:
@@ -319,9 +319,7 @@ protected Boolean doInBackground(Void... params) {
                 File localFile = new File(localPath);
                 total += localFile.length();
             }
-            String savePath = FileStorageUtils.getSavePath(mAccount.name);
-            File saveDir = new File(savePath);
-            return (saveDir.getUsableSpace() >= total);
+            return (FileStorageUtils.getUsableSpace(mAccount.name) >= total);
         }
 
         /**

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -881,6 +881,7 @@ public void onReceive(Context context, Intent intent) {
                 }
                 
                 setSupportProgressBarIndeterminateVisibility(inProgress);
+                removeStickyBroadcast(intent);
                 
             }
             

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -733,6 +733,7 @@ public void onReceive(Context context, Intent intent) {
                         String newName = (new File(uploadRemotePath)).getName();
                         Toast msg = Toast.makeText(getActivity().getApplicationContext(), String.format(getString(R.string.filedetails_renamed_in_upload_msg), newName), Toast.LENGTH_LONG);
                         msg.show();
+                        getSherlockActivity().removeStickyBroadcast(intent);    // not the best place to do this; a small refactorization of BroadcastReceivers should be done
                     }
                     updateFileDetails(false);    // it updates the buttons; must be called although !uploadWasFine; interrupted uploads still leave an incomplete file in the server
                 }

File: src/com/owncloud/android/operations/RemoteOperationResult.java
Patch:
@@ -71,7 +71,8 @@ public enum ResultCode {
         CONFLICT, 
         SYNC_CONFLICT,
         LOCAL_STORAGE_FULL, 
-        LOCAL_STORAGE_NOT_MOVED
+        LOCAL_STORAGE_NOT_MOVED, 
+        LOCAL_STORAGE_NOT_COPIED
     }
 
     private boolean mSuccess = false;

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -880,6 +880,7 @@ public void onReceive(Context context, Intent intent) {
                 }
                 
                 setSupportProgressBarIndeterminateVisibility(inProgress);
+                removeStickyBroadcast(intent);
                 
             }
             

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -733,6 +733,7 @@ public void onReceive(Context context, Intent intent) {
                         String newName = (new File(uploadRemotePath)).getName();
                         Toast msg = Toast.makeText(getActivity().getApplicationContext(), String.format(getString(R.string.filedetails_renamed_in_upload_msg), newName), Toast.LENGTH_LONG);
                         msg.show();
+                        getSherlockActivity().removeStickyBroadcast(intent);    // not the best place to do this; a small refactorization of BroadcastReceivers should be done
                     }
                     updateFileDetails(false);    // it updates the buttons; must be called although !uploadWasFine; interrupted uploads still leave an incomplete file in the server
                 }

File: src/com/owncloud/android/operations/ChunkedUploadFileOperation.java
Patch:
@@ -45,9 +45,10 @@ public class ChunkedUploadFileOperation extends UploadFileOperation {
     public ChunkedUploadFileOperation(  Account account,
                                         OCFile file,
                                         boolean isInstant, 
-                                        boolean forceOverwrite) {
+                                        boolean forceOverwrite,
+                                        boolean moveLocalFile) {
         
-        super(account, file, isInstant, forceOverwrite);
+        super(account, file, isInstant, forceOverwrite, moveLocalFile);
     }
 
     @Override

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -145,7 +145,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                 moved = tmpFile.renameTo(newFile);
             }
             if (!moved)
-                result = new RemoteOperationResult(RemoteOperationResult.ResultCode.STORAGE_ERROR_MOVING_FROM_TMP);
+                result = new RemoteOperationResult(RemoteOperationResult.ResultCode.LOCAL_STORAGE_NOT_MOVED);
             else
                 result = new RemoteOperationResult(isSuccess(status), status);
             Log.i(TAG, "Download of " + mFile.getRemotePath() + " to " + getSavePath() + ": " + result.getLogMessage());

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -533,12 +533,12 @@ public void moveDirectory(OCFile dir, String newPath) {
 
             /// 2. prepare a batch of update operations to change all the descendants
             ArrayList<ContentProviderOperation> operations = new ArrayList<ContentProviderOperation>(c.getCount());
-            ContentValues cv = new ContentValues();
             int lengthOfOldPath = dir.getRemotePath().length();
             String defaultSavePath = FileDownloader.getSavePath(mAccount.name);
             int lengthOfOldStoragePath = defaultSavePath.length() + lengthOfOldPath;
             if (c.moveToFirst()) {
                 do {
+                    ContentValues cv = new ContentValues(); // don't take the constructor out of the loop and clear the object
                     OCFile child = createFileInstance(c);
                     cv.put(ProviderTableMeta.FILE_PATH, newPath + child.getRemotePath().substring(lengthOfOldPath));
                     if (child.getStoragePath() != null && child.getStoragePath().startsWith(defaultSavePath)) {

File: src/com/owncloud/android/datamodel/DataStorageManager.java
Patch:
@@ -42,4 +42,6 @@ public interface DataStorageManager {
     public void removeFile(OCFile file, boolean removeLocalCopy);
     
     public void removeDirectory(OCFile dir, boolean removeDBData, boolean removeLocalContent);
+
+    public void moveDirectory(OCFile dir, String newPath);
 }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -829,6 +829,7 @@ public void onDismiss(EditNameDialog dialog) {
             String newFilename = dialog.getNewFilename();
             Log.d(TAG, "name edit dialog dismissed with new name " + newFilename);
             mLastRemoteOperation = new RenameFileOperation( mFile, 
+                                                            mAccount, 
                                                             newFilename, 
                                                             new FileDataStorageManager(mAccount, getActivity().getContentResolver()));
             WebdavClient wc = OwnCloudClientUtils.createOwnCloudClient(mAccount, getSherlockActivity().getApplicationContext());

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -441,6 +441,7 @@ public void onDismiss(EditNameDialog dialog) {
             String newFilename = dialog.getNewFilename();
             Log.d(TAG, "name edit dialog dismissed with new name " + newFilename);
             RemoteOperation operation = new RenameFileOperation(mTargetFile, 
+                                                                AccountUtils.getCurrentOwnCloudAccount(getActivity()), 
                                                                 newFilename, 
                                                                 mContainerActivity.getStorageManager());
             WebdavClient wc = OwnCloudClientUtils.createOwnCloudClient(AccountUtils.getCurrentOwnCloudAccount(getSherlockActivity()), getSherlockActivity().getApplicationContext());

File: src/com/owncloud/android/files/services/FileObserverService.java
Patch:
@@ -155,6 +155,8 @@ private void initializeObservedList() {
                 continue;
 
             String path = c.getString(c.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
+            if (path == null || path.length() <= 0)
+                continue;
             OwnCloudFileObserver observer =
                     new OwnCloudFileObserver(   path, 
                                                 account, 

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -93,9 +93,8 @@ public void onEvent(int event, String path) {
             // ISSUE 5: if the user is not running the app (this is a service!), this can be very intrusive; a notification should be preferred
             Intent i = new Intent(mContext, ConflictsResolveActivity.class);
             i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NEW_TASK);
-            i.putExtra("remotepath", file.getRemotePath());
-            i.putExtra("localpath", mPath);
-            i.putExtra("account", mOCAccount);
+            i.putExtra(ConflictsResolveActivity.EXTRA_FILE, file);
+            i.putExtra(ConflictsResolveActivity.EXTRA_ACCOUNT, mOCAccount);
             mContext.startActivity(i);
         }
         // TODO save other errors in some point where the user can inspect them later;

File: src/com/owncloud/android/files/services/FileObserverService.java
Patch:
@@ -157,7 +157,6 @@ private void initializeObservedList() {
             String path = c.getString(c.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
             OwnCloudFileObserver observer =
                     new OwnCloudFileObserver(   path, 
-                                                storage.getFileByPath(c.getString(c.getColumnIndex(ProviderTableMeta.FILE_PATH))),
                                                 account, 
                                                 getApplicationContext(), 
                                                 OwnCloudFileObserver.CHANGES_ONLY);
@@ -197,8 +196,7 @@ private void addObservedFile(OCFile file, Account account) {
         OwnCloudFileObserver observer = mObserversMap.get(localPath);
         if (observer == null) {
             /// the local file was never registered to observe before
-            observer = new OwnCloudFileObserver(   localPath, 
-                                                    file,
+            observer = new OwnCloudFileObserver(    localPath, 
                                                     account, 
                                                     getApplicationContext(), 
                                                     OwnCloudFileObserver.CHANGES_ONLY);

File: src/com/owncloud/android/operations/SynchronizeFileOperation.java
Patch:
@@ -95,6 +95,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                         WebdavEntry we = new WebdavEntry(resp.getResponses()[0],
                                                client.getBaseUri().getPath());
                         mServerFile = fillOCFile(we);
+                        mServerFile.setLastSyncDateForProperties(System.currentTimeMillis());
                         
                     } else {
                         client.exhaustResponse(propfind.getResponseBodyAsStream());
@@ -137,6 +138,8 @@ protected RemoteOperationResult run(WebdavClient client) {
                         } else {
                             // TODO CHECK: is this really useful in some point in the code?
                             mServerFile.setKeepInSync(mLocalFile.keepInSync());
+                            mServerFile.setLastSyncDateForData(mLocalFile.getLastSyncDateForData());
+                            mServerFile.setStoragePath(mLocalFile.getStoragePath());
                             mServerFile.setParentId(mLocalFile.getParentId());
                             mStorageManager.saveFile(mServerFile);
                             
@@ -210,8 +213,6 @@ private OCFile fillOCFile(WebdavEntry we) {
         file.setFileLength(we.contentLength());
         file.setMimetype(we.contentType());
         file.setModificationTimestamp(we.modifiedTimesamp());
-        file.setLastSyncDateForProperties(System.currentTimeMillis());
-        file.setLastSyncDateForData(0);
         return file;
     }
 

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -101,7 +101,7 @@ public void onEvent(int event, String path) {
             return;
         }
         WebdavClient wc = OwnCloudClientUtils.createOwnCloudClient(mOCAccount, mContext);
-        SynchronizeFileOperation sfo = new SynchronizeFileOperation(getRemotePath(), mStorage, mOCAccount, true, false, mContext);
+        SynchronizeFileOperation sfo = new SynchronizeFileOperation(mFile, mStorage, mOCAccount, true, false, mContext);
         RemoteOperationResult result = sfo.execute(wc);
         for (FileObserverStatusListener l : mListeners) {
             l.onObservedFileStatusUpdate(mPath, getRemotePath(), mOCAccount, result);

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -123,7 +123,7 @@ public boolean saveFile(OCFile file) {
 
         if (fileExists(file.getRemotePath())) {
             OCFile oldFile = getFileByPath(file.getRemotePath());
-            if (file.getStoragePath() == null && oldFile.getStoragePath() != null)
+            if (file.getStoragePath() == null && oldFile.isDown())
                 file.setStoragePath(oldFile.getStoragePath());
             if (!file.isDirectory());
                 cv.put(ProviderTableMeta.FILE_STORAGE_PATH, file.getStoragePath());

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -213,7 +213,8 @@ private void disableObservance(OCFile file) {
         Log.d(TAG, "Disabling observation of remote file" + file.getRemotePath());
         Intent intent = new Intent(mContext, FileObserverService.class);
         intent.putExtra(FileObserverService.KEY_FILE_CMD, FileObserverService.CMD_ADD_DOWNLOADING_FILE);
-        intent.putExtra(FileObserverService.KEY_CMD_ARG, file.getRemotePath());
+        intent.putExtra(FileObserverService.KEY_CMD_ARG_FILE, file);
+        intent.putExtra(FileObserverService.KEY_CMD_ARG_ACCOUNT, mAccount);
         mContext.startService(intent);
         
     }

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.owncloud.android.db.ProviderMeta;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
-import com.owncloud.android.files.services.FileDownloader;
+import com.owncloud.android.utils.FileStorageUtils;
 
 import android.accounts.Account;
 import android.content.ContentProviderClient;
@@ -390,7 +390,7 @@ private OCFile createFileInstance(Cursor c) {
                         .getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH)));
                 if (file.getStoragePath() == null) {
                     // try to find existing file and bind it with current account
-                    File f = new File(FileDownloader.getSavePath(mAccount.name) + file.getRemotePath());
+                    File f = new File(FileStorageUtils.getDefaultSavePathFor(mAccount.name, file));
                     if (f.exists())
                         file.setStoragePath(f.getAbsolutePath());
                 }

File: src/com/owncloud/android/files/OwnCloudFileObserver.java
Patch:
@@ -47,7 +47,7 @@ public class OwnCloudFileObserver extends FileObserver {
     DataStorageManager mStorage;
     Account mOCAccount;
     OCFile mFile;
-    static Context mContext;
+    static Context mContext;    // ISSUE 4: why is this static?
     List<FileObserverStatusListener> mListeners;
     
     public OwnCloudFileObserver(String path) {

File: src/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -28,8 +28,8 @@
 
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.operations.RemoteOperationResult.ResultCode;
+import com.owncloud.android.utils.FileStorageUtils;
 
 import eu.alefzero.webdav.WebdavClient;
 import eu.alefzero.webdav.WebdavUtils;
@@ -163,7 +163,7 @@ private boolean isValidNewName() {
             return false;
         }
         // create a test file
-        String tmpFolder = FileDownloader.getTemporalPath("");
+        String tmpFolder = FileStorageUtils.getTemporalPath("");
         File testFile = new File(tmpFolder + mNewName);
         try {
             testFile.createNewFile();   // return value is ignored; it could be 'false' because the file already existed, that doesn't invalidate the name

File: src/com/owncloud/android/operations/SynchronizeFolderOperation.java
Patch:
@@ -34,6 +34,7 @@
 import com.owncloud.android.datamodel.OCFile;
 import com.owncloud.android.files.services.FileDownloader;
 import com.owncloud.android.files.services.FileObserverService;
+import com.owncloud.android.utils.FileStorageUtils;
 
 import eu.alefzero.webdav.WebdavClient;
 import eu.alefzero.webdav.WebdavEntry;
@@ -147,7 +148,7 @@ protected RemoteOperationResult run(WebdavClient client) {
                 // removal of obsolete files
                 mChildren = mStorageManager.getDirectoryContent(mStorageManager.getFileById(mParentId));
                 OCFile file;
-                String currentSavePath = FileDownloader.getSavePath(mAccount.name);
+                String currentSavePath = FileStorageUtils.getSavePath(mAccount.name);
                 for (int i=0; i < mChildren.size(); ) {
                     file = mChildren.get(i);
                     if (file.getLastSyncDate() != mCurrentSyncTime) {

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -434,7 +434,7 @@ private OCFile obtainNewOCFileToUpload(String remotePath, String localPath, Stri
         
         // parent dir
         String parentPath = new File(remotePath).getParent();
-        parentPath = parentPath.endsWith("/")?parentPath:parentPath+"/" ;
+        parentPath = parentPath.endsWith(OCFile.PATH_SEPARATOR) ? parentPath : parentPath + OCFile.PATH_SEPARATOR ;
         OCFile parentDir = storageManager.getFileByPath(parentPath);
         if (parentDir == null) {
             throw new IllegalStateException("Can not upload a file to a non existing remote location: " + parentPath);

File: src/com/owncloud/android/operations/RenameFileOperation.java
Patch:
@@ -86,7 +86,9 @@ protected RemoteOperationResult run(WebdavClient client) {
                 return new RemoteOperationResult(ResultCode.OK);
             }
         
-            newRemotePath = (new File(mFile.getRemotePath())).getParent() + mNewName;
+            String parent = (new File(mFile.getRemotePath())).getParent();
+            parent = (parent.endsWith(OCFile.PATH_SEPARATOR)) ? parent : parent + OCFile.PATH_SEPARATOR; 
+            newRemotePath =  parent + mNewName;
             
             // check if the new name is valid in the local file system
             if (!isValidNewName()) {

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -114,7 +114,7 @@ public void onServiceConnected(ComponentName component, IBinder service) {
             }
             FileDetailFragment fragment = (FileDetailFragment) getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
             if (fragment != null)
-                fragment.updateFileDetails();   // let the fragment gets the mDownloadBinder through getDownloadBinder() (see FileDetailFragment#updateFileDetais())
+                fragment.updateFileDetails(false);   // let the fragment gets the mDownloadBinder through getDownloadBinder() (see FileDetailFragment#updateFileDetais())
         }
 
         @Override
@@ -168,7 +168,7 @@ protected void onResume() {
         super.onResume();
         if (!mConfigurationChangedToLandscape) { 
             FileDetailFragment fragment = (FileDetailFragment) getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
-            fragment.updateFileDetails();
+            fragment.updateFileDetails(false);
         }
     }
     

File: src/com/owncloud/android/ui/dialog/EditNameDialog.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class EditNameDialog extends SherlockDialogFragment implements OnClickListener {
 
+    public static final String TAG = EditNameDialog.class.getSimpleName();
+    
     private String mNewFilename;
     private boolean mResult;
     private EditNameDialogListener mListener;

File: src/com/owncloud/android/db/DbHandler.java
Patch:
@@ -82,7 +82,7 @@ public OpenerHepler(Context context) {
         @Override
         public void onCreate(SQLiteDatabase db) {
             db.execSQL("CREATE TABLE " + TABLE_INSTANT_UPLOAD + " ("
-            		+ " _id INTEGET PRIMARY KEY, "
+            		+ " _id INTEGER PRIMARY KEY, "
             		+ " path TEXT,"
             		+ " account TEXT);");
         }

File: src/eu/alefzero/webdav/WebdavEntry.java
Patch:
@@ -50,6 +50,8 @@ public WebdavEntry(MultiStatusResponse ms, String splitElement) {
                     mName = tmp[tmp.length - 1];
             }
 
+            // use unknown mimetype as default behavior
+            mContentType = "application/octet-stream";
             prop = propSet.get(DavPropertyName.GETCONTENTTYPE);
             if (prop != null) {
                 mContentType = (String) prop.getValue();

File: src/com/owncloud/android/operations/DownloadFileOperation.java
Patch:
@@ -119,7 +119,7 @@ public void addDatatransferProgressListener (OnDatatransferProgressListener list
     protected RemoteOperationResult run(WebdavClient client) {
         RemoteOperationResult result = null;
         File newFile = null;
-        boolean moved = false;
+        boolean moved = true;
         
         /// download will be performed to a temporal file, then moved to the final location
         File tmpFile = new File(getTmpPath());

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -301,7 +301,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, download.getFile());
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, download.getAccount());
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, showDetailsIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+        mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), showDetailsIntent, 0);
         
         mNotificationManager.notify(R.string.downloader_download_in_progress_ticker, mNotification);
     }
@@ -346,7 +346,7 @@ private void notifyDownloadResult(DownloadFileOperation download, RemoteOperatio
             Notification finalNotification = new Notification(R.drawable.icon, getString(tickerId), System.currentTimeMillis());
             finalNotification.flags |= Notification.FLAG_AUTO_CANCEL;
             // TODO put something smart in the contentIntent below
-            finalNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT);
+            finalNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), new Intent(), 0);
             finalNotification.setLatestEventInfo(getApplicationContext(), getString(tickerId), String.format(getString(contentId), new File(download.getSavePath()).getName()), finalNotification.contentIntent);
             mNotificationManager.notify(tickerId, finalNotification);
         }

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -448,7 +448,7 @@ private void notifyUploadStart(UploadFileOperation upload) {
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, upload.getFile());
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, upload.getAccount());
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, showDetailsIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+        mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), showDetailsIntent, 0);
         
         mNotificationManager.notify(R.string.uploader_upload_in_progress_ticker, mNotification);
     }
@@ -501,7 +501,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, upload.getFile());
             showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, upload.getAccount());
             showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-            mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, showDetailsIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), showDetailsIntent, 0);
             
             mNotification.setLatestEventInfo(   getApplicationContext(), 
                                                 getString(R.string.uploader_upload_succeeded_ticker), 
@@ -523,7 +523,7 @@ private void notifyUploadResult(RemoteOperationResult uploadResult, UploadFileOp
             Notification finalNotification = new Notification(R.drawable.icon, getString(R.string.uploader_upload_failed_ticker), System.currentTimeMillis());
             finalNotification.flags |= Notification.FLAG_AUTO_CANCEL;
             // TODO put something smart in the contentIntent below
-            finalNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT);
+            finalNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), (int)System.currentTimeMillis(), new Intent(), 0);
             finalNotification.setLatestEventInfo(   getApplicationContext(), 
                                                     getString(R.string.uploader_upload_failed_ticker), 
                                                     String.format(getString(R.string.uploader_upload_failed_content_single), (new File(upload.getStoragePath())).getName()), 

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -149,7 +149,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
                 Notification notification = new Notification(R.drawable.icon, getContext().getString(R.string.sync_fail_ticker), System.currentTimeMillis());
                 notification.flags |= Notification.FLAG_AUTO_CANCEL;
                 // TODO put something smart in the contentIntent below
-                notification.contentIntent = PendingIntent.getActivity(getContext().getApplicationContext(), 0, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT);
+                notification.contentIntent = PendingIntent.getActivity(getContext().getApplicationContext(), (int)System.currentTimeMillis(), new Intent(), 0);
                 notification.setLatestEventInfo(getContext().getApplicationContext(), 
                                                 getContext().getString(R.string.sync_fail_ticker), 
                                                 String.format(getContext().getString(R.string.sync_fail_content), account.name), 

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -171,7 +171,7 @@ public void listDirectory(OCFile directory) {
                 directory = storageManager.getFileById(directory.getParentId());
             }
 
-            mAdapter.swapDirectory(mFile, storageManager);
+            mAdapter.swapDirectory(directory, storageManager);
             if (mFile == null || !mFile.equals(directory)) {
                 mList.setSelectionFromTop(0, 0);
             }

File: src/com/owncloud/android/files/InstantUploadBroadcastReceiver.java
Patch:
@@ -123,7 +123,7 @@ private void handleNewPhotoAction(Context context, Intent intent) {
         Intent i = new Intent(context, FileUploader.class);
         i.putExtra(FileUploader.KEY_ACCOUNT, account);
         i.putExtra(FileUploader.KEY_LOCAL_FILE, file_path);
-        i.putExtra(FileUploader.KEY_REMOTE_FILE, INSTANT_UPLOAD_DIR + "/" + file_name);
+        i.putExtra(FileUploader.KEY_REMOTE_FILE, INSTANT_UPLOAD_DIR + file_name);
         i.putExtra(FileUploader.KEY_UPLOAD_TYPE, FileUploader.UPLOAD_SINGLE_FILE);
         i.putExtra(FileUploader.KEY_MIME_TYPE, mime_type);
         i.putExtra(FileUploader.KEY_INSTANT_UPLOAD, true);

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -192,7 +192,7 @@ public void listDirectory(OCFile directory) {
             }
 
             mFile = directory;
-            mAdapter.swapDirectory(mFile);
+            mAdapter.swapDirectory(mFile, storageManager);
             mList.setSelectionFromTop(0, 0);
             mList.invalidate();
         }

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -941,13 +941,13 @@ public FileDownloaderBinder getFileDownloaderBinder() {
         public void onServiceConnected(ComponentName className, IBinder service) {
             mDownloaderBinder = (FileDownloaderBinder) service;
             // a new chance to get the mDownloadBinder through getDownloadBinder() - THIS IS A MESS
-            mFileList.listDirectory();
+            if (mFileList != null)
+                mFileList.listDirectory();
             if (mDualPane) {
                 FileDetailFragment fragment = (FileDetailFragment) getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
                 if (fragment != null)
                     fragment.updateFileDetails();
             }
-            
         }
 
         @Override

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -373,7 +373,7 @@ private void updateOCVersion() {
                 Log.w(TAG, "Problem while getting ocversion from server");
             }
         } catch (Exception e) {
-            Log.e(TAG, "ASDASD", e);
+            Log.e(TAG, "Problem getting response from server", e);
         }
     }
 }

File: src/com/owncloud/android/db/DbHandler.java
Patch:
@@ -69,8 +69,8 @@ public void clearFiles() {
      */
     public boolean removeIUPendingFile(String localPath, String accountName) {
         return mDB.delete(TABLE_INSTANT_UPLOAD,
-                          "path = ? and account = ?",
-                          new String[]{ localPath, accountName }) != 0;
+                          "path = ?",
+                          new String[]{ localPath }) != 0;
         
     }
     

File: src/com/owncloud/android/syncadapter/FileSyncAdapter.java
Patch:
@@ -90,8 +90,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
         mDelaysIndex = 0;
         mDelaysCount = 0;
         */
-        
-        
+
         Log.d(TAG, "syncing owncloud account " + account.name);
 
         sendStickyBroadcast(true, null);  // message to signal the start to the UI
@@ -114,7 +113,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
                         fetchData(uri, syncResult, file.getFileId());
                     }
                 }
-                
+
             } else {
                 syncResult.stats.numAuthExceptions++;
             }

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -312,7 +312,7 @@ private void notifyDownloadStart(DownloadFileOperation download) {
         /// includes a pending intent in the notification showing the details view of the file
         Intent showDetailsIntent = new Intent(this, FileDetailActivity.class);
         showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE, download.getFile());
-        showDetailsIntent.putExtra(FileDownloader.EXTRA_ACCOUNT, download.getAccount());
+        showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, download.getAccount());
         showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
         mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, showDetailsIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         

File: src/com/owncloud/android/ui/activity/FileDetailActivity.java
Patch:
@@ -74,7 +74,7 @@ protected void onCreate(Bundle savedInstanceState) {
             actionBar.setDisplayHomeAsUpEnabled(true);
 
             OCFile file = getIntent().getParcelableExtra(FileDetailFragment.EXTRA_FILE);
-            Account account = getIntent().getParcelableExtra(FileDownloader.EXTRA_ACCOUNT);
+            Account account = getIntent().getParcelableExtra(FileDetailFragment.EXTRA_ACCOUNT);
             FileDetailFragment mFileDetail = new FileDetailFragment(file, account);
         
             FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
@@ -147,6 +147,7 @@ private void backToDisplayActivity() {
         Intent intent = new Intent(this, FileDisplayActivity.class);
         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
         intent.putExtra(FileDetailFragment.EXTRA_FILE, getIntent().getParcelableExtra(FileDetailFragment.EXTRA_FILE));
+        intent.putExtra(FileDetailFragment.EXTRA_ACCOUNT, getIntent().getParcelableExtra(FileDetailFragment.EXTRA_ACCOUNT));
         startActivity(intent);
         finish();
     }

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -173,6 +173,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             mPreview = (ImageView)mView.findViewById(R.id.fdPreview);
         }
         
+        updateFileDetails();
         return view;
     }
     

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -84,7 +84,6 @@
 import com.owncloud.android.ui.activity.FileDetailActivity;
 import com.owncloud.android.ui.activity.FileDisplayActivity;
 import com.owncloud.android.ui.activity.TransferServiceGetter;
-import com.owncloud.android.ui.fragment.OCFileListFragment.ContainerActivity;
 import com.owncloud.android.utils.OwnCloudVersion;
 
 import com.owncloud.android.R;

File: src/com/owncloud/android/ui/fragment/OCFileListFragment.java
Patch:
@@ -19,7 +19,6 @@
 
 import com.owncloud.android.datamodel.DataStorageManager;
 import com.owncloud.android.datamodel.OCFile;
-import com.owncloud.android.files.services.FileDownloader.FileDownloaderBinder;
 import com.owncloud.android.ui.FragmentListView;
 import com.owncloud.android.ui.activity.TransferServiceGetter;
 import com.owncloud.android.ui.adapter.FileListListAdapter;

File: src/com/owncloud/android/datamodel/FileDataStorageManager.java
Patch:
@@ -38,7 +38,6 @@
 import android.content.OperationApplicationException;
 import android.database.Cursor;
 import android.net.Uri;
-import android.os.Environment;
 import android.os.RemoteException;
 import android.util.Log;
 

File: src/com/owncloud/android/files/services/FileDownloader.java
Patch:
@@ -5,14 +5,12 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import com.owncloud.android.authenticator.AccountAuthenticator;
 import com.owncloud.android.db.ProviderMeta.ProviderTableMeta;
 import eu.alefzero.webdav.OnDatatransferProgressListener;
 
 import com.owncloud.android.network.OwnCloudClientUtils;
 
 import android.accounts.Account;
-import android.accounts.AccountManager;
 import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;

File: src/com/owncloud/android/files/services/FileUploader.java
Patch:
@@ -17,7 +17,6 @@
 import com.owncloud.android.operations.UploadFileOperation;
 import com.owncloud.android.utils.OwnCloudVersion;
 
-import eu.alefzero.webdav.ChunkFromFileChannelRequestEntity;
 import eu.alefzero.webdav.OnDatatransferProgressListener;
 
 import com.owncloud.android.network.OwnCloudClientUtils;
@@ -38,7 +37,6 @@
 import android.util.Log;
 import android.widget.RemoteViews;
 
-import com.owncloud.android.AccountUtils;
 import com.owncloud.android.R;
 import eu.alefzero.webdav.WebdavClient;
 

File: src/com/owncloud/android/network/AdvancedSslSocketFactory.java
Patch:
@@ -25,15 +25,13 @@
 import java.net.SocketAddress;
 import java.net.UnknownHostException;
 import java.security.cert.X509Certificate;
-import java.util.Enumeration;
 
 import javax.net.SocketFactory;
 import javax.net.ssl.SSLContext;
 import javax.net.ssl.SSLException;
 import javax.net.ssl.SSLHandshakeException;
 import javax.net.ssl.SSLPeerUnverifiedException;
 import javax.net.ssl.SSLSession;
-import javax.net.ssl.SSLSessionContext;
 import javax.net.ssl.SSLSocket;
 
 import org.apache.commons.httpclient.ConnectTimeoutException;

File: src/com/owncloud/android/operations/RemoteOperationResult.java
Patch:
@@ -25,7 +25,6 @@
 import java.net.UnknownHostException;
 
 import javax.net.ssl.SSLException;
-import javax.net.ssl.SSLPeerUnverifiedException;
 
 import org.apache.commons.httpclient.ConnectTimeoutException;
 import org.apache.commons.httpclient.HttpException;

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -22,7 +22,6 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.util.Random;
 
 import org.apache.commons.httpclient.Credentials;
 import org.apache.commons.httpclient.HttpClient;
@@ -102,12 +101,12 @@ public boolean downloadFile(String remoteFilePath, File targetFile) {
                         mDataTransferListener.transferProgress(readResult);
                     fos.write(bytes, 0, readResult);
                 }
+                fos.close();
                 ret = true;
             } else {
                 exhaustResponse(get.getResponseBodyAsStream());
             }
             Log.e(TAG, "Download of " + remoteFilePath + " to " + targetFile + " finished with HTTP status " + status + (!ret?"(FAIL)":""));
-            
         } catch (Exception e) {
             logException(e, "dowloading " + remoteFilePath);
             

File: src/com/owncloud/android/ui/activity/FileDisplayActivity.java
Patch:
@@ -141,9 +141,10 @@ public void onCreate(Bundle savedInstanceState) {
         }
 
         // file observer
-        Intent observer_intent = new Intent(this, FileObserverService.class);
+        /*Intent observer_intent = new Intent(this, FileObserverService.class);
         observer_intent.putExtra(FileObserverService.KEY_FILE_CMD, FileObserverService.CMD_INIT_OBSERVED_LIST);
         startService(observer_intent);
+        */
             
         /// USER INTERFACE
         requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);

File: src/com/owncloud/android/ui/fragment/FileDetailFragment.java
Patch:
@@ -267,6 +267,7 @@ public void onClick(View v) {
                 } else {
                     mContainerActivity.onFileStateChanged();    // put inside 'else' to not call it twice (here, and in the virtual click on fdDownloadBtn)
                 }
+                /*
                 Intent intent = new Intent(getActivity().getApplicationContext(),
                                            FileObserverService.class);
                 intent.putExtra(FileObserverService.KEY_FILE_CMD,
@@ -275,6 +276,7 @@ public void onClick(View v) {
                                    FileObserverService.CMD_DEL_OBSERVED_FILE));
                 intent.putExtra(FileObserverService.KEY_CMD_ARG, mFile.getStoragePath());
                 getActivity().startService(intent);
+                */
                 break;
             }
             case R.id.fdRenameBtn: {

File: src/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -61,7 +61,7 @@ public class SslValidatorDialog extends Dialog {
      *                      by setting the certificate as reliable.
      */
     public static SslValidatorDialog newInstance(Context context, RemoteOperationResult result, OnSslValidatorListener listener) {
-        if (result.isSslRecoverableException()) {
+        if (result != null && result.isSslRecoverableException()) {
             SslValidatorDialog dialog = new SslValidatorDialog(context, listener);
             return dialog;
         } else {

File: src/com/owncloud/android/operations/ChunkedUploadFileOperation.java
Patch:
@@ -35,7 +35,7 @@
 
 public class ChunkedUploadFileOperation extends UploadFileOperation {
     
-    private static final long CHUNK_SIZE = 8192;
+    private static final long CHUNK_SIZE = 102400;
     private static final String OC_CHUNKED_HEADER = "OC-Chunked";
 
     public ChunkedUploadFileOperation(  String localPath, 

File: src/com/owncloud/android/authenticator/ConnectionCheckOperation.java
Patch:
@@ -121,7 +121,7 @@ protected RemoteOperationResult run(WebdavClient client) {
             if (tryConnection(client, "https://" + mUrl + AccountUtils.STATUS_PATH)) {
                 return new RemoteOperationResult(RemoteOperationResult.ResultCode.OK_SSL);
         			
-            } else if (mLatestResult.isSslRecoverableException()) {
+            } else if (!mLatestResult.isSslRecoverableException()) {
                 
                 Log.d(TAG, "establishing secure connection failed, trying non secure connection");
                 client.setBaseUri(Uri.parse("http://" + mUrl + AccountUtils.STATUS_PATH));

File: src/com/owncloud/android/network/SslAnalyzer.java
Patch:
@@ -42,9 +42,10 @@ public class SslAnalyzer {
      */
     public static Exception getRecoverableException(RemoteOperationResult result) {
         Exception ret = null;
-        SSLException e = (SSLException)result.getException();
+        SSLException e = null;
         Throwable cause = null;
-        if (e != null) {
+        if (result.getException() instanceof SSLException) {
+            e = (SSLException)result.getException();
             if (e instanceof SSLPeerUnverifiedException) {
                 ret = e;
                 

File: src/com/owncloud/android/ui/dialog/SslValidatorDialog.java
Patch:
@@ -69,8 +69,7 @@ public class SslValidatorDialog extends Dialog {
      *                      by setting the certificate as reliable.
      */
     public static SslValidatorDialog newInstance(Context context, RemoteOperationResult result, OnSslValidatorListener listener) {
-        Exception e = SslAnalyzer.getRecoverableException(result);
-        if (e != null) {
+        if (SslAnalyzer.isRecoverable(result)) {
             SslValidatorDialog dialog = new SslValidatorDialog(context, listener);
             return dialog;
         } else {

File: src/com/owncloud/android/utils/OwnCloudClientUtils.java
Patch:
@@ -38,7 +38,7 @@ public class OwnCloudClientUtils {
     final private static String TAG = "OwnCloudClientFactory";
     
     /** Default timeout for waiting data from the server */
-    public static final int DEFAULT_DATA_TIMEOUT = 20000;
+    public static final int DEFAULT_DATA_TIMEOUT = 60000;
     
     /** Default timeout for establishing a connection */
     public static final int DEFAULT_CONNECTION_TIMEOUT = 60000;

File: src/com/owncloud/android/utils/OwnCloudClientUtils.java
Patch:
@@ -38,7 +38,7 @@ public class OwnCloudClientUtils {
     final private static String TAG = "OwnCloudClientFactory";
     
     /** Default timeout for waiting data from the server */
-    public static final int DEFAULT_DATA_TIMEOUT = 10000;
+    public static final int DEFAULT_DATA_TIMEOUT = 20000;
     
     /** Default timeout for establishing a connection */
     public static final int DEFAULT_CONNECTION_TIMEOUT = 60000;

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -84,6 +84,8 @@ static public MultiThreadedHttpConnectionManager getMultiThreadedConnManager() {
      * @return
      */
     public WebdavClient (Account account, Context context) {
+        Log.d(TAG, "Creating WebdavClient associated to " + account.name);
+        
         setDefaultTimeouts();
         
         OwnCloudVersion ownCloudVersion = new OwnCloudVersion(AccountManager.get(context).getUserData(account,
@@ -100,6 +102,7 @@ public WebdavClient (Account account, Context context) {
     
     public WebdavClient() {
         super(getMultiThreadedConnManager());
+        Log.d(TAG, "Creating WebdavClient");
         
         setDefaultTimeouts();
         

File: src/com/owncloud/android/authenticator/OnConnectCheckListener.java
Patch:
@@ -3,7 +3,7 @@
 public interface OnConnectCheckListener {
 
     enum ResultType {
-        OK_SSL, OK_NO_SSL, SSL_INIT_ERROR, HOST_NOT_AVAILABLE, TIMEOUT, NO_NETWORK_CONNECTION, INORRECT_ADDRESS, INSTANCE_NOT_CONFIGURED, FILE_NOT_FOUND, UNKNOWN_ERROR
+        OK_SSL, OK_NO_SSL, SSL_INIT_ERROR, HOST_NOT_AVAILABLE, TIMEOUT, NO_NETWORK_CONNECTION, INCORRECT_ADDRESS, INSTANCE_NOT_CONFIGURED, FILE_NOT_FOUND, UNKNOWN_ERROR, WRONG_CONNECTION,  SSL_UNVERIFIED_SERVER, BAD_OC_VERSION
     }
 
     public void onConnectionCheckResult(ResultType type);

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -255,10 +255,10 @@ public boolean putFile(String localFile, String remoteTarget, String contentType
      */
     public static int tryToLogin(Uri uri, String username, String password) {
         int returnCode = 0;
-        WebdavClient client = new WebdavClient();
-        client.setCredentials(username, password);
-        HeadMethod head = new HeadMethod(uri.toString());
         try {
+            WebdavClient client = new WebdavClient();
+            client.setCredentials(username, password);
+            HeadMethod head = new HeadMethod(uri.toString());
             returnCode = client.executeMethod(head);
         } catch (HttpException e) {
             Log.e(TAG, "HTTP exception trying to login at " + uri.getEncodedPath(), e);

File: src/eu/alefzero/owncloud/ui/fragment/ConfirmationDialogFragment.java
Patch:
@@ -53,8 +53,10 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
             .setIcon(android.R.drawable.ic_dialog_alert)
             .setMessage(String.format(getString(resourceId), confirmationTarget))
-            .setIconAttribute(android.R.attr.alertDialogIcon)
             .setTitle(android.R.string.dialog_alert_title);
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
+            builder.setIconAttribute(android.R.attr.alertDialogIcon);
+        }
         
         if (posBtn != -1)
             builder.setPositiveButton(posBtn,

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -186,8 +186,7 @@ private void fetchData(String uri, SyncResult syncResult, long parentId) {
                 if (getStorageManager().getFileByPath(file.getRemotePath()) != null)
                     file.setKeepInSync(getStorageManager().getFileByPath(file.getRemotePath()).keepInSync());
                 
-                //getStorageManager().saveFile(file);
-                Log.v(TAG, "adding file: " + file);
+                //Log.v(TAG, "adding file: " + file);
                 updatedFiles.add(file);
                 if (parentId == 0)
                     parentId = file.getFileId();

File: src/eu/alefzero/owncloud/Uploader.java
Patch:
@@ -369,6 +369,7 @@ private void prepareStreamsToUpload() {
 
     public void uploadFiles() {
         WebdavClient wdc = new WebdavClient(mAccount, getApplicationContext());
+        wdc.allowSelfsignedCertificates();
 
         // create last directory in path if nessesary
         if (mCreateDir) {

File: src/eu/alefzero/owncloud/datamodel/OCFile.java
Patch:
@@ -373,8 +373,8 @@ public boolean equals(Object o) {
 
     @Override
     public String toString() {
-        String asString = "[id=%s, name=%s, mime=%s, downloaded=%s, local=%s, remote=%s]";
-        asString = String.format(asString, new Long(mId), getFileName(), mMimeType, isDown(), mLocalPath, mRemotePath);
+        String asString = "[id=%s, name=%s, mime=%s, downloaded=%s, local=%s, remote=%s, parentId=%s, keepInSinc=%s]";
+        asString = String.format(asString, new Long(mId), getFileName(), mMimeType, isDown(), mLocalPath, mRemotePath, new Long(mParentId), new Boolean(mKeepInSync));
         return asString;
     }
 

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -144,6 +144,7 @@ public void uploadFile() {
         mNotificationManager.notify(42, mNotification);
 
         WebdavClient wc = new WebdavClient(mAccount, getApplicationContext());
+        wc.allowSelfsignedCertificates();
         wc.setDataTransferProgressListener(this);
 
         for (int i = 0; i < mLocalPaths.length; ++i) {

File: src/eu/alefzero/owncloud/syncadapter/AbstractOwnCloudSyncAdapter.java
Patch:
@@ -154,6 +154,7 @@ protected WebdavClient getClient() throws OperationCanceledException,
                 throw new UnknownHostException();
             }
             mClient = new WebdavClient(account, getContext());
+            mClient.allowSelfsignedCertificates();
             // mHost = mClient.getTargetHost();
         }
 

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -733,6 +733,7 @@ public RenameRunnable(OCFile oldFile, OCFile newFile, Account account, Handler h
         
         public void run() {
             WebdavClient wc = new WebdavClient(mAccount, getSherlockActivity().getApplicationContext());
+            wc.allowSelfsignedCertificates();
             AccountManager am = AccountManager.get(getSherlockActivity());
             String baseUrl = am.getUserData(mAccount, AccountAuthenticator.KEY_OC_BASE_URL);
             OwnCloudVersion ocv = new OwnCloudVersion(am.getUserData(mAccount, AccountAuthenticator.KEY_OC_VERSION));
@@ -863,6 +864,7 @@ public RemoveRunnable(OCFile fileToRemove, Account account, Handler handler) {
         
         public void run() {
             WebdavClient wc = new WebdavClient(mAccount, getSherlockActivity().getApplicationContext());
+            wc.allowSelfsignedCertificates();
             AccountManager am = AccountManager.get(getSherlockActivity());
             String baseUrl = am.getUserData(mAccount, AccountAuthenticator.KEY_OC_BASE_URL);
             OwnCloudVersion ocv = new OwnCloudVersion(am.getUserData(mAccount, AccountAuthenticator.KEY_OC_VERSION));

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -206,7 +206,7 @@ private void fetchData(String uri, SyncResult syncResult, long parentId) {
             OCFile file;
             for (int i=0; i < files.size(); ) {
                 file = files.get(i);
-                if (file.getLastSyncDate() != mCurrentSyncTime && file.getLastSyncDate() != 0) {
+                if (file.getLastSyncDate() != mCurrentSyncTime) {
                     getStorageManager().removeFile(file);
                     files.remove(i);
                 } else {

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -218,7 +218,6 @@ public void onClick(View v) {
                 i.putExtra(FileDownloader.EXTRA_FILE_SIZE, mFile.getFileLength());
                 
                 // update ui 
-                Toast.makeText(getActivity(), "Downloading", Toast.LENGTH_LONG).show();
                 setButtonsForDownloading();
                 
                 getActivity().startService(i);

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -556,7 +556,7 @@ private class DownloadFinishReceiver extends BroadcastReceiver {
         public void onReceive(Context context, Intent intent) {
             String accountName = intent.getStringExtra(FileDownloader.ACCOUNT_NAME);
 
-            if (accountName.equals(mAccount.name) && mFile != null) {
+            if (!isEmpty() && accountName.equals(mAccount.name)) {
                 boolean downloadWasFine = intent.getBooleanExtra(FileDownloader.EXTRA_DOWNLOAD_RESULT, false);
                 String downloadedRemotePath = intent.getStringExtra(FileDownloader.EXTRA_REMOTE_PATH);
                 if (mFile.getRemotePath().equals(downloadedRemotePath)) {

File: src/eu/alefzero/owncloud/ui/activity/PinCodeActivity.java
Patch:
@@ -96,7 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // Not PIN Code defined yet.
         // In a previous version settings is allow from start
         if ( (appPrefs.getString("PrefPinCode1", null) == null ) ){
-            setInitView();
+            setChangePincodeView(true);
             pinCodeChecked = true; 
             newPasswordEntered = true;
             

File: src/eu/alefzero/owncloud/ui/fragment/ConfirmationDialogFragment.java
Patch:
@@ -35,7 +35,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         return new AlertDialog.Builder(getActivity())
                 .setIcon(android.R.drawable.ic_dialog_alert)
-                .setMessage(String.format(getString(R.string.confirmation_alert_prefix), confirmationTarget))
+                .setMessage(String.format(getString(R.string.confirmation_alert), confirmationTarget))
                 .setPositiveButton(R.string.common_ok,
                     new DialogInterface.OnClickListener() {
                         public void onClick(DialogInterface dialog, int whichButton) {

File: src/eu/alefzero/owncloud/datamodel/FileDataStorageManager.java
Patch:
@@ -412,7 +412,7 @@ public void removeFile(OCFile file) {
                                         ProviderTableMeta.FILE_ACCOUNT_OWNER+"=?",
                                         new String[]{mAccount.name});
         }
-        if (file.getStoragePath() != null) {
+        if (file.isDown()) {
             new File(file.getStoragePath()).delete();
         }
     }

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -185,6 +185,7 @@ private void fetchData(String uri, SyncResult syncResult, long parentId) {
                 }
                 if (getStorageManager().getFileByPath(file.getRemotePath()) != null)
                     file.setKeepInSync(getStorageManager().getFileByPath(file.getRemotePath()).keepInSync());
+                
                 //getStorageManager().saveFile(file);
                 updatedFiles.add(file);
                 if (parentId == 0)

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -144,9 +144,9 @@ public boolean downloadFile(String remoteFilepath, File targetPath) {
                         mDataTransferListener.transferProgress(readResult);
                     fos.write(bytes, 0, readResult);
                 }
-                
+                ret = true;
             }
-            ret = true;
+            
         } catch (Throwable e) {
             e.printStackTrace();
             targetPath.delete();

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -646,9 +646,10 @@ public void onReceive(Context context, Intent intent) {
 
                 if ((synchFolderRemotePath != null && mCurrentDir != null && (mCurrentDir.getRemotePath().equals(synchFolderRemotePath)))
                         || fillBlankRoot ) {
+                    if (!fillBlankRoot) 
+                        mCurrentDir = getStorageManager().getFileByPath(synchFolderRemotePath);
                     FileListFragment fileListFragment = (FileListFragment) getSupportFragmentManager()
                             .findFragmentById(R.id.fileList);
-                    mCurrentDir = getStorageManager().getFileByPath(synchFolderRemotePath);
                     if (fileListFragment != null) {
                         fileListFragment.listDirectory(mCurrentDir);  
                     }

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -220,7 +220,7 @@ private void fetchData(String uri, SyncResult syncResult, long parentId) {
             for (int i=0; i < files.size() && !mCancellation; i++) {
                 OCFile newFile = files.get(i);
                 if (newFile.getMimetype().equals("DIR")) {
-                    fetchData(getUri().toString() + WebdavUtils.encode(newFile.getRemotePath()), syncResult, newFile.getFileId());
+                    fetchData(getUri().toString() + WebdavUtils.encodePath(newFile.getRemotePath()), syncResult, newFile.getFileId());
                 }
             }
             if (mCancellation) Log.d(TAG, "Leaving " + uri + " because cancellation request");

File: src/eu/alefzero/owncloud/ui/adapter/FileListActionListAdapter.java
Patch:
@@ -23,6 +23,7 @@
 import eu.alefzero.owncloud.R;
 import eu.alefzero.owncloud.authenticator.AccountAuthenticator;
 import eu.alefzero.owncloud.db.ProviderMeta.ProviderTableMeta;
+import eu.alefzero.webdav.WebdavUtils;
 import android.accounts.Account;
 import android.accounts.AccountManager;
 import android.content.Context;
@@ -84,7 +85,7 @@ public Object getItem(int position) {
                         .getSystemService(Context.ACCOUNT_SERVICE);
                 String ocurl = accm.getUserData(mAccount,
                         AccountAuthenticator.KEY_OC_URL);
-                ocurl += mFilePath + Uri.encode(mFilename);
+                ocurl += WebdavUtils.encodePath(mFilePath + mFilename);
                 intent.setData(Uri.parse(ocurl));
             } else {
                 intent.putExtra("toDownload", false);

File: src/eu/alefzero/webdav/WebdavUtils.java
Patch:
@@ -68,7 +68,7 @@ public static Date parseResponseDate(String date) {
      * @param remoteFilePath    Path
      * @return                  Encoded path according to RFC 2396, always starting with "/"
      */
-    public static String encode(String remoteFilePath) {
+    public static String encodePath(String remoteFilePath) {
         String encodedPath = Uri.encode(remoteFilePath, "/");
         if (!encodedPath.startsWith("/"))
             encodedPath = "/" + encodedPath;

File: src/eu/alefzero/owncloud/datamodel/FileDataStorageManager.java
Patch:
@@ -378,7 +378,7 @@ private OCFile createFileInstance(Cursor c) {
                 if (file.getStoragePath() == null) {
                     // try to find existing file and bind it with current account
                     File sdCard = Environment.getExternalStorageDirectory();
-                    File f = new File(sdCard.getAbsolutePath() + "/owncloud/" + mAccount.name + file.getURLDecodedRemotePath());
+                    File f = new File(sdCard.getAbsolutePath() + "/owncloud/" + mAccount.name + file.getRemotePath());
                     if (f.exists())
                         file.setStoragePath(f.getAbsolutePath());
                 }

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -99,9 +99,6 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             mRemotePaths = intent.getStringArrayExtra(KEY_REMOTE_FILE);
         }
 
-        for (int i = 0; i < mRemotePaths.length; ++i)
-            mRemotePaths[i] = mRemotePaths[i].replace(' ', '+');
-
         if (mLocalPaths.length != mRemotePaths.length) {
             Log.e(TAG, "Remote paths and local paths are not equal!");
             return Service.START_NOT_STICKY;

File: src/eu/alefzero/owncloud/files/services/InstantUploadService.java
Patch:
@@ -148,7 +148,7 @@ public void run() {
                 try {
                     status = wdc.executeMethod(mkcol);
                     Log.e(TAG, "mkcol returned " + status);
-                    wdc.putFile(filepath, INSTANT_UPLOAD_DIR + "/" + Uri.encode(filename), mimetype);
+                    wdc.putFile(filepath, INSTANT_UPLOAD_DIR + "/" + filename, mimetype);
                 } catch (HttpException e) {
                     e.printStackTrace();
                 } catch (IOException e) {

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -748,7 +748,9 @@ static public EditNameFragment newInstance(String filename) {
         public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
             View v = inflater.inflate(R.layout.edit_box_dialog, container, false);
 
-            String currentName = getArguments().getString("filename", "");
+            String currentName = getArguments().getString("filename");
+            if (currentName == null)
+                currentName = "";
             
             ((Button)v.findViewById(R.id.cancel)).setOnClickListener(this);
             ((Button)v.findViewById(R.id.ok)).setOnClickListener(this);

File: src/eu/alefzero/owncloud/files/PhotoTakenBroadcastReceiver.java
Patch:
@@ -111,16 +111,17 @@ private void handleConnectivityAction(Context context, Intent intent) {
                         Intent upload_intent = new Intent(context, InstantUploadService.class);
                         Account account = new Account(account_name, AccountAuthenticator.ACCOUNT_TYPE);
                         
-                        String mimeType;
+                        String mimeType = null;
                         try {
                             mimeType = MimeTypeMap.getSingleton()
                                     .getMimeTypeFromExtension(
                                             f.getName().substring(f.getName().lastIndexOf('.') + 1));
                         
                         } catch (IndexOutOfBoundsException e) {
                             Log.e(TAG, "Trying to find out MIME type of a file without extension: " + f.getName());
-                            mimeType = "application/octet-stream";
                         }
+                        if (mimeType == null)
+                            mimeType = "application/octet-stream";
                         
                         upload_intent.putExtra(InstantUploadService.KEY_ACCOUNT, account);
                         upload_intent.putExtra(InstantUploadService.KEY_FILE_PATH, file_path);

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -158,16 +158,17 @@ public void uploadFile() {
         
         for (int i = 0; i < mLocalPaths.length; ++i) {
             
-            String mimeType;
+            String mimeType = null;
             try {
                 mimeType = MimeTypeMap.getSingleton()
                         .getMimeTypeFromExtension(
                                 mLocalPaths[i].substring(mLocalPaths[i]
                                     .lastIndexOf('.') + 1));
             } catch (IndexOutOfBoundsException e) {
                 Log.e(TAG, "Trying to find out MIME type of a file without extension: " + mLocalPaths[i]);
-                mimeType = "application/octet-stream";
             }
+            if (mimeType == null)
+                mimeType = "application/octet-stream";
             
             mCurrentIndexUpload = i;
             if (wc.putFile(mLocalPaths[i], mRemotePaths[i], mimeType)) {

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -280,7 +280,7 @@ public void onClick(View v) {
                             try {
                                 Intent i = new Intent(Intent.ACTION_VIEW);
                                 mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(storagePath.substring(storagePath.lastIndexOf('.') + 1));
-                                if (mimeType != mFile.getMimetype()) {
+                                if (mimeType != null && !mimeType.equals(mFile.getMimetype())) {
                                     i.setDataAndType(Uri.parse("file://"+mFile.getStoragePath()), mimeType);
                                     i.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                                     startActivity(i);

File: src/eu/alefzero/owncloud/ui/activity/AuthenticatorActivity.java
Patch:
@@ -206,7 +206,7 @@ public void onAuthenticationResult(boolean success, String message) {
             bundle.putBoolean(ContentResolver.SYNC_EXTRAS_MANUAL, true);
             //getContentResolver().startSync(ProviderTableMeta.CONTENT_URI,
             //        bundle);
-            ContentResolver.requestSync(account, "org.ownlcoud", bundle);
+            ContentResolver.requestSync(account, "org.owncloud", bundle);
 
             /*
              * if

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -615,7 +615,7 @@ public void onReceive(Context context, Intent intent) {
             setSupportProgressBarIndeterminateVisibility(inProgress);
             
             long OCDirId = intent.getLongExtra(FileSyncService.SYNC_FOLDER, -1);
-            if (OCDirId > 0) {
+            if (OCDirId >= 0) {
                 OCFile syncDir = mStorageManager.getFileById(OCDirId);
                 if (syncDir != null && (
                         (mCurrentDir == null && syncDir.getFileName().equals("/")) ||

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -353,7 +353,7 @@ private void setTimeModified(long milliseconds){
      * @return True, if ownCloud the ownCloud version is supporting creationg time
      */
     private boolean ocVersionSupportsTimeCreated(){
-        if(mIntent != null){
+       /* if(mIntent != null){
             Account ocAccount = mIntent.getParcelableExtra(FileDownloader.EXTRA_ACCOUNT);
             if(ocAccount != null){
                 AccountManager accManager = (AccountManager) getActivity().getSystemService(Context.ACCOUNT_SERVICE);
@@ -363,7 +363,7 @@ private boolean ocVersionSupportsTimeCreated(){
                     return true;
                 }
             }
-        }
+        }*/
         return false;
     }
 

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -345,11 +345,11 @@ private void setTimeModified(long milliseconds){
     }
     
     /**
-     * In ownCloud 3.0.3 and 4.0.0 there is a bug that SabreDAV does not return
+     * In ownCloud 3.X.X and 4.X.X there is a bug that SabreDAV does not return
      * the time that the file was created. There is a chance that this will
      * be fixed in future versions. Use this method to check if this version of
      * ownCloud has this fix.
-     * @return True, if ownCloud the ownCloud version is > 3.0.4 and 4.0.4
+     * @return True, if ownCloud the ownCloud version is supporting creationg time
      */
     private boolean ocVersionSupportsTimeCreated(){
         if(mIntent != null){
@@ -358,7 +358,7 @@ private boolean ocVersionSupportsTimeCreated(){
                 AccountManager accManager = (AccountManager) getActivity().getSystemService(Context.ACCOUNT_SERVICE);
                 OwnCloudVersion ocVersion = new OwnCloudVersion(accManager
                         .getUserData(ocAccount, AccountAuthenticator.KEY_OC_VERSION));
-                if(ocVersion.compareTo(new OwnCloudVersion(0x030004)) >= 0 || ocVersion.compareTo(new OwnCloudVersion(0x040004)) >= 0){
+                if(ocVersion.compareTo(new OwnCloudVersion(0x030000)) < 0) {
                     return true;
                 }
             }

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -349,7 +349,7 @@ private void setTimeModified(long milliseconds){
      * the time that the file was created. There is a chance that this will
      * be fixed in future versions. Use this method to check if this version of
      * ownCloud has this fix.
-     * @return True, if ownCloud the ownCloud version is > 3.0.4 and 4.0.1
+     * @return True, if ownCloud the ownCloud version is > 3.0.4 and 4.0.4
      */
     private boolean ocVersionSupportsTimeCreated(){
         if(mIntent != null){
@@ -358,7 +358,7 @@ private boolean ocVersionSupportsTimeCreated(){
                 AccountManager accManager = (AccountManager) getActivity().getSystemService(Context.ACCOUNT_SERVICE);
                 OwnCloudVersion ocVersion = new OwnCloudVersion(accManager
                         .getUserData(ocAccount, AccountAuthenticator.KEY_OC_VERSION));
-                if(ocVersion.compareTo(new OwnCloudVersion(0x030004)) >= 0 || ocVersion.compareTo(new OwnCloudVersion(0x040001)) >= 0){
+                if(ocVersion.compareTo(new OwnCloudVersion(0x030004)) >= 0 || ocVersion.compareTo(new OwnCloudVersion(0x040004)) >= 0){
                     return true;
                 }
             }

File: src/eu/alefzero/owncloud/ui/adapter/FileListListAdapter.java
Patch:
@@ -104,7 +104,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             fileName.setText(name);
             ImageView fileIcon = (ImageView) view.findViewById(R.id.imageView1);
-            if (!file.getMimetype().equals("DIR")) {
+            if (file.getMimetype() == null || !file.getMimetype().equals("DIR")) {
                 fileIcon.setImageResource(R.drawable.file);
             } else {
                 fileIcon.setImageResource(R.drawable.ic_menu_archive);

File: src/eu/alefzero/owncloud/datamodel/OCFile.java
Patch:
@@ -60,15 +60,16 @@ public OCFile[] newArray(int size) {
     public OCFile(String path) {
         resetData();
         mNeedsUpdating = false;
-        // dvelasco: let's make mandatory that mRemotePath is a valid URL always; this will make our life easier with the URL-encoding/decoding
+        /// dvelasco: the encoding / decoding problem should be completely translated to WebdavClient & WebdavEntry, but at this moment we are in a little hurry
         if (path != null && path.length() > 0) {
             try {
                 new URL("http://silly.test.com:8888" + path);
             } catch (MalformedURLException e) {
                 throw new RuntimeException("Trying to create a OCFile with a non valid remote path: " + path , e);
             }
         } else throw new RuntimeException("Trying to create a OCFile with a non valid remote path: " + path);
-        mRemotePath = path;
+        // save encoded paths have a problem: normalization; this is a quick&dirty fix to avoid duplications
+        mRemotePath = Uri.encode(Uri.decode(path), "/");
     }
 
     /**

File: src/eu/alefzero/owncloud/files/services/InstantUploadService.java
Patch:
@@ -148,7 +148,7 @@ public void run() {
                 try {
                     status = wdc.executeMethod(mkcol);
                     Log.e(TAG, "mkcol returned " + status);
-                    wdc.putFile(filepath, INSTANT_UPLOAD_DIR + "/" + filename, mimetype);
+                    wdc.putFile(filepath, INSTANT_UPLOAD_DIR + "/" + Uri.encode(filename), mimetype);
                 } catch (HttpException e) {
                     e.printStackTrace();
                 } catch (IOException e) {

File: src/eu/alefzero/webdav/WebdavClient.java
Patch:
@@ -85,7 +85,6 @@ public boolean downloadFile(String remoteFilepath, File targetPath) {
         GetMethod get = new GetMethod(mUri.toString()
                 + remoteFilepath.replace(" ", "%20"));
         */
-        
         GetMethod get = new GetMethod(mUri.toString() + remoteFilepath);
 
         // get.setHeader("Host", mUri.getHost());

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -106,7 +106,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         // TODO: fix hack: workaround for bug in actionbar sherlock
         // it always shows indeterminate progress bar
-        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
             requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
             setProgressBarIndeterminateVisibility(false);
         }

File: src/eu/alefzero/owncloud/DisplayUtils.java
Patch:
@@ -100,7 +100,9 @@ public static String convertMIMEtoPrettyPrint(String mimetype) {
         if (mimeType2HUmanReadable.containsKey(mimetype)) {
             return mimeType2HUmanReadable.get(mimetype);
         }
-        return mimetype.split("/")[1].toUpperCase() + " file";
+        if (mimetype.split("/").length >= 2)
+            return mimetype.split("/")[1].toUpperCase() + " file";
+        return "Unknown type";
     }
 
     /**

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -176,12 +176,13 @@ public void uploadFile() {
             mCurrentIndexUpload = i;
             if (wc.putFile(mLocalPaths[i], mRemotePaths[i], mimeType)) {
                 mResult |= true;
-                OCFile new_file = new OCFile(mRemotePaths[i]);
+                String decRemotePath = URLDecoder.decode(mRemotePaths[i]);
+                OCFile new_file = new OCFile(decRemotePath);    // FyleSyncAdapter and this MUST use the same encoding when creating a new OCFile
                 new_file.setMimetype(mimeType);
                 new_file.setFileLength(new File(mLocalPaths[i]).length());
                 new_file.setModificationTimestamp(System.currentTimeMillis());
                 new_file.setLastSyncDate(0);
-                new_file.setStoragePath(mLocalPaths[i]);
+                new_file.setStoragePath(mLocalPaths[i]);         
                 File f = new File(URLDecoder.decode(mRemotePaths[i]));
                 new_file.setParentId(storageManager.getFileByPath(f.getParent().endsWith("/")?f.getParent():f.getParent()+"/").getFileId());
                 storageManager.saveFile(new_file);

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -301,7 +301,7 @@ protected void onResume() {
             // Priority: Intent (here), savedInstanceState (onCreate), root dir (dir is null)
             if(getIntent().hasExtra(FileDetailFragment.EXTRA_FILE)){
                 mCurrentDir = (OCFile) getIntent().getParcelableExtra(FileDetailFragment.EXTRA_FILE);
-                if(!mCurrentDir.isDirectory()){
+                if(mCurrentDir != null && !mCurrentDir.isDirectory()){
                     mCurrentDir = mStorageManager.getFileById(mCurrentDir.getParentId());
                 }
             

File: src/eu/alefzero/owncloud/ui/adapter/FileListListAdapter.java
Patch:
@@ -103,7 +103,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             TextView fileName = (TextView) view.findViewById(R.id.Filename);
             String name = file.getFileName();
 
-            fileName.setText(URLDecoder.decode(name));
+            fileName.setText(name);
             ImageView fileIcon = (ImageView) view.findViewById(R.id.imageView1);
             if (!file.getMimetype().equals("DIR")) {
                 fileIcon.setImageResource(R.drawable.file);

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -264,7 +264,7 @@ protected void onRestoreInstanceState(Bundle savedInstanceState) {
     
     @Override
     protected void onSaveInstanceState(Bundle outState) {
-        Log.e("ASD", "save " + mCurrentDir.getFileName());
+        Log.e("ASD", "save " + (mCurrentDir != null ? mCurrentDir.getFileName() : "NULL"));
         super.onSaveInstanceState(outState);
         if(mDirectories != null && mDirectories.getCount() != 0){
             mDirs = new String[mDirectories.getCount()-1];

File: src/eu/alefzero/owncloud/ui/FragmentListView.java
Patch:
@@ -18,9 +18,6 @@ public class FragmentListView extends SherlockFragment implements
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        mList = new ListView(getActivity());
-        mList.setOnItemClickListener(this);
-        mList.setOnItemLongClickListener(this);
         super.onCreate(savedInstanceState);
     }
 
@@ -36,6 +33,9 @@ public ListView getListView() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
+        mList = new ListView(getActivity());
+        mList.setOnItemClickListener(this);
+        mList.setOnItemLongClickListener(this);
         return mList;
         // return super.onCreateView(inflater, container, savedInstanceState);
     }

File: src/eu/alefzero/owncloud/files/services/FileDownloader.java
Patch:
@@ -124,6 +124,9 @@ void downloadFile() {
         mNotification.contentView = new RemoteViews(getApplicationContext().getPackageName(), R.layout.progressbar_layout);
         mNotification.contentView.setProgressBar(R.id.status_progress, 100, 0, mTotalDownloadSize == -1);
         mNotification.contentView.setImageViewResource(R.id.status_icon, R.drawable.icon);
+        // dvelasco ; contentIntent MUST be assigned to avoid app crashes in versions previous to Android 4.x ;
+        //              BUT an empty Intent is not a very elegant solution; something smart should happen when a user 'clicks' on a download in the notification bar
+        mNotification.contentIntent = PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT);
         
         mNotificationMngr.notify(1, mNotification);
 

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -178,8 +178,8 @@ public void uploadFile() {
                 new_file.setModificationTimestamp(System.currentTimeMillis());
                 new_file.setLastSyncDate(0);
                 new_file.setStoragePath(mLocalPaths[i]);
-                File f = new File(mRemotePaths[i]);
-                new_file.setParentId(storageManager.getFileByPath(URLDecoder.decode(f.getParent().endsWith("/")?f.getParent():f.getParent()+"/")).getFileId());
+                File f = new File(URLDecoder.decode(mRemotePaths[i]));
+                new_file.setParentId(storageManager.getFileByPath(f.getParent().endsWith("/")?f.getParent():f.getParent()+"/").getFileId());
                 storageManager.saveFile(new_file);
             }
         }

File: src/eu/alefzero/owncloud/files/services/FileUploader.java
Patch:
@@ -1,6 +1,7 @@
 package eu.alefzero.owncloud.files.services;
 
 import java.io.File;
+import java.net.URLDecoder;
 
 import eu.alefzero.owncloud.AccountUtils;
 import eu.alefzero.owncloud.R;
@@ -177,7 +178,8 @@ public void uploadFile() {
                 new_file.setModificationTimestamp(System.currentTimeMillis());
                 new_file.setLastSyncDate(0);
                 new_file.setStoragePath(mLocalPaths[i]);
-                new_file.setParentId(storageManager.getFileByPath(mRemotePaths[i].substring(0, mRemotePaths[i].lastIndexOf('/')+1)).getFileId());
+                File f = new File(mRemotePaths[i]);
+                new_file.setParentId(storageManager.getFileByPath(URLDecoder.decode(f.getParent().endsWith("/")?f.getParent():f.getParent()+"/")).getFileId());
                 storageManager.saveFile(new_file);
             }
         }

File: src/eu/alefzero/owncloud/ui/adapter/FileListListAdapter.java
Patch:
@@ -17,6 +17,7 @@
  */
 package eu.alefzero.owncloud.ui.adapter;
 
+import java.net.URLDecoder;
 import java.util.Vector;
 
 import eu.alefzero.owncloud.DisplayUtils;
@@ -102,7 +103,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             TextView fileName = (TextView) view.findViewById(R.id.Filename);
             String name = file.getFileName();
 
-            fileName.setText(DisplayUtils.HtmlDecode(name));
+            fileName.setText(URLDecoder.decode(name));
             ImageView fileIcon = (ImageView) view.findViewById(R.id.imageView1);
             if (!file.getMimetype().equals("DIR")) {
                 fileIcon.setImageResource(R.drawable.file);

File: src/eu/alefzero/owncloud/ui/fragment/FileListFragment.java
Patch:
@@ -174,13 +174,14 @@ public void listDirectory(){
      * @param directory File to be listed
      */
     public void listDirectory(OCFile directory) {
-                
+        
         // Check input parameters for null
         if(directory == null){
             if(mFile != null){
                 directory = mFile;
             } else {
                 directory = mStorageManager.getFileByPath("/");
+                if (directory == null) return; // no files, wait for sync
             }
         }
         

File: src/eu/alefzero/owncloud/datamodel/FileDataStorageManager.java
Patch:
@@ -95,13 +95,13 @@ public boolean saveFile(OCFile file) {
         cv.put(ProviderTableMeta.FILE_NAME, file.getFileName());
         if (file.getParentId() != 0)
             cv.put(ProviderTableMeta.FILE_PARENT, file.getParentId());
-        cv.put(ProviderTableMeta.FILE_PATH, file.getPath());
+        cv.put(ProviderTableMeta.FILE_PATH, file.getRemotePath());
         cv.put(ProviderTableMeta.FILE_STORAGE_PATH, file.getStoragePath());
         cv.put(ProviderTableMeta.FILE_ACCOUNT_OWNER, mAccount.name);
         cv.put(ProviderTableMeta.FILE_LAST_SYNC_DATE, file.getLastSyncDate());
 
-        if (fileExists(file.getPath())) {
-            OCFile tmpfile = getFileByPath(file.getPath());
+        if (fileExists(file.getRemotePath())) {
+            OCFile tmpfile = getFileByPath(file.getRemotePath());
             file.setStoragePath(tmpfile.getStoragePath());
             cv.put(ProviderTableMeta.FILE_STORAGE_PATH, file.getStoragePath());
             file.setFileId(tmpfile.getFileId());

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -137,7 +137,7 @@ public void onClick(View v) {
         Intent i = new Intent(getActivity(), FileDownloader.class);
         i.putExtra(FileDownloader.EXTRA_ACCOUNT,
                 mIntent.getParcelableExtra(FileDownloader.EXTRA_ACCOUNT));
-        i.putExtra(FileDownloader.EXTRA_FILE_PATH, mFile.getPath());
+        i.putExtra(FileDownloader.EXTRA_FILE_PATH, mFile.getRemotePath());
         getActivity().startService(i);
     }
 

File: src/eu/alefzero/owncloud/ui/fragment/FileListFragment.java
Patch:
@@ -95,12 +95,12 @@ public void onItemClick(AdapterView<?> l, View v, int position, long id) {
             throw new IndexOutOfBoundsException("Incorrect item selected");
         }
         OCFile file = mFiles.get(position);
-        mFile = file;
         
         // Update ActionBarPath
         if (file.getMimetype().equals("DIR")) {
             String dirname = file.getFileName();
-
+            mFile = file;
+            
             mDirNames.push(dirname);
             ((FileDisplayActivity) getActivity()).pushPath(dirname);
             

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -81,7 +81,7 @@ public synchronized void onPerformSync(Account account, Bundle extras,
             resp = query.getResponseBodyAsMultiStatus();
 
             if (resp.getResponses().length > 0) {
-                WebdavEntry we = new WebdavEntry(resp.getResponses()[0]);
+                WebdavEntry we = new WebdavEntry(resp.getResponses()[0], getUri().getPath());
                 OCFile file = fillOCFile(we);
                 file.setParentId(0);
                 getStorageManager().saveFile(file);
@@ -110,7 +110,7 @@ private void fetchData(String uri, SyncResult syncResult, long parentId) {
             MultiStatus resp = null;
             resp = query.getResponseBodyAsMultiStatus();
             for (int i = 1; i < resp.getResponses().length; ++i) {
-                WebdavEntry we = new WebdavEntry(resp.getResponses()[i]);
+                WebdavEntry we = new WebdavEntry(resp.getResponses()[i], getUri().getPath());
                 OCFile file = fillOCFile(we);
                 file.setParentId(parentId);
                 getStorageManager().saveFile(file);

File: src/eu/alefzero/webdav/WebdavEntry.java
Patch:
@@ -30,12 +30,12 @@ public class WebdavEntry {
     private String mName, mPath, mUri, mContentType;
     private long mContentLength, mCreateTimestamp, mModifiedTimestamp;
 
-    public WebdavEntry(MultiStatusResponse ms) {
+    public WebdavEntry(MultiStatusResponse ms, String splitElement) {
         resetData();
         if (ms.getStatus().length != 0) {
             mUri = ms.getHref();
 
-            mPath = mUri.split("webdav.php", 2)[1];
+            mPath = mUri.split(splitElement, 2)[1];
 
             int status = ms.getStatus()[0].getStatusCode();
             DavPropertySet propSet = ms.getProperties(status);

File: src/eu/alefzero/owncloud/AccountUtils.java
Patch:
@@ -30,7 +30,7 @@
 public class AccountUtils {
     public static final String WEBDAV_PATH_1_2 = "/webdav/owncloud.php";
     public static final String WEBDAV_PATH_2_0 = "/files/webdav.php";
-    public static final String WEBDAV_PATH_4_0 = "/remote/webdav.php";
+    public static final String WEBDAV_PATH_4_0 = "/remote.php/webdav";
     public static final String CARDDAV_PATH_2_0 = "/apps/contacts/carddav.php";
     public static final String CARDDAV_PATH_4_0 = "/remote/carddav.php";
     public static final String STATUS_PATH = "/status.php";

File: src/eu/alefzero/owncloud/ui/fragment/FileDetailFragment.java
Patch:
@@ -127,7 +127,7 @@ private void updateFileDetails() {
             VideoView videoView = (VideoView) mView
                     .findViewById(R.id.videoView1);
             videoView.setVisibility(View.INVISIBLE);
-            if (mFile.getPath() == null) {
+            if (mFile.getStoragePath() == null) {
                 ImageView imageView = (ImageView) getView().findViewById(
                         R.id.imageView2);
                 imageView.setImageResource(R.drawable.download);
@@ -136,11 +136,11 @@ private void updateFileDetails() {
                 if (mFile.getMimetype().startsWith("image/")) {
                     ImageView imageView = (ImageView) mView
                             .findViewById(R.id.imageView2);
-                    Bitmap bmp = BitmapFactory.decodeFile(mFile.getPath());
+                    Bitmap bmp = BitmapFactory.decodeFile(mFile.getStoragePath());
                     imageView.setImageBitmap(bmp);
                 } else if (mFile.getMimetype().startsWith("video/")) {
                     videoView.setVisibility(View.VISIBLE);
-                    videoView.setVideoPath(mFile.getPath());
+                    videoView.setVideoPath(mFile.getStoragePath());
                     videoView.start();
                 }
             }

File: src/eu/alefzero/owncloud/location/LocationServiceLauncherReciever.java
Patch:
@@ -52,8 +52,7 @@ public void onReceive(Context context, Intent intent) {
     /**
      * Used internally. Starts or stops the device tracking service
      * 
-     * @param trackDevice
-     *            true to start the service, false to stop it
+     * @param trackDevice true to start the service, false to stop it
      */
     private void startOrStopDeviceTracking(Context context, boolean trackDevice) {
         Intent deviceTrackingIntent = new Intent();

File: src/eu/alefzero/owncloud/authenticator/AccountAuthenticator.java
Patch:
@@ -10,8 +10,6 @@
 public class AccountAuthenticator extends AbstractAccountAuthenticator {
     public static final String OPTIONS_USERNAME = "username";
     public static final String OPTIONS_PASSWORD = "password";
-    public static final String OPTIONS_FILE_LIST_SYNC_ENABLED = "filelist";
-    public static final String OPTIONS_PINNED_FILE_SYNC_ENABLED = "pinned";
 
     public static final String ACCOUNT_TYPE = "owncloud";
     public static final String AUTH_TOKEN_TYPE = "org.owncloud";

File: src/eu/alefzero/owncloud/datamodel/FileDataStorageManager.java
Patch:
@@ -92,6 +92,7 @@ public boolean saveFile(OCFile file) {
     cv.put(ProviderTableMeta.FILE_ACCOUNT_OWNER, mAccount.name);
 
     if (fileExists(file.getPath())) {
+      file.setFileId(getFileByPath(file.getPath()).getFileId());
       overriden = true;
       if (getContentResolver() != null) {
         getContentResolver().update(ProviderTableMeta.CONTENT_URI,

File: src/eu/alefzero/owncloud/authenticator/AuthUtils.java
Patch:
@@ -244,6 +244,9 @@ public static Account getCurrentOwnCloudAccount(Context context){
 				  break;
 			  }
 		  }
+	  } else if (ocAccounts.length != 0) {
+	    // we at least need to take first account as fallback
+	    defaultAccount = ocAccounts[0];
 	  }
 	  
 	return defaultAccount;

File: src/eu/alefzero/owncloud/datamodel/OCFile.java
Patch:
@@ -38,9 +38,9 @@ public class OCFile {
 	 * @param path The remote path of the file
 	 */
 	public OCFile(String path) {
+	  resetData();
 	  update_while_saving_ = false;
 		path_ = path;
-		resetData();
 	}
 
 	/**

File: src/eu/alefzero/owncloud/syncadapter/AbstractOwnCloudSyncAdapter.java
Patch:
@@ -222,6 +222,7 @@ private void parseResponse(HttpResponse resp, Uri uri,
 				Log.d(TAG, "No update for file/dir " + file.getFileName()
 						+ " is needed");
 			} else {
+			  file = new OCFile(n.getProperty(NodeProperty.PATH));
 				Log.d(TAG, "File " + n.getProperty(NodeProperty.PATH)
 						+ " will be "
 						+ (file.fileExists() ? "updated" : "created"));
@@ -231,7 +232,7 @@ private void parseResponse(HttpResponse resp, Uri uri,
 				long create = n.getProperty(NodeProperty.CREATE_DATE) == null ? 0
 						: Long.parseLong(n
 								.getProperty(NodeProperty.CREATE_DATE));
-				file = new OCFile(n.getProperty(NodeProperty.PATH));
+
 				file.setFileLength(len);
 				file.setCreationTimestamp(create);
 				file.setModificationTimestamp(mod);

File: src/eu/alefzero/owncloud/ui/adapter/LandingScreenAdapter.java
Patch:
@@ -75,6 +75,7 @@ public Object getItem(int position) {
 			 */
 			intent.setClass(mContext, FileDisplayActivity.class);	
 			intent.putExtra("ACCOUNT", AuthUtils.getCurrentOwnCloudAccount(mContext));
+			intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 			break;
 		case 5:
 			intent.setClass(mContext, Preferences.class);

File: src/eu/alefzero/owncloud/providers/FileContentProvider.java
Patch:
@@ -145,7 +145,6 @@ public Cursor query(Uri uri, String[] projection, String selection,
     
     switch (mUriMatcher.match(uri)) {
       case ROOT_DIRECTORY:
-        sqlQuery.appendWhere(ProviderTableMeta.FILE_PARENT + " is null");
         break;
       case DIRECTORY:
         sqlQuery.appendWhere(ProviderTableMeta.FILE_PARENT + "="+uri.getPathSegments().get(1));

File: src/eu/alefzero/owncloud/syncadapter/FileSyncAdapter.java
Patch:
@@ -110,7 +110,7 @@ private void commitToDatabase(TreeNode root, String parentId) throws RemoteExcep
 				cv.put(ProviderTableMeta.FILE_PATH, n.getProperty(NodeProperty.PATH));
 				cv.put(ProviderTableMeta.FILE_ACCOUNT_OWNER, this.getAccount().name);
 				Uri entry = this.getContentProvider().insert(ProviderTableMeta.CONTENT_URI_FILE, cv);
-				Log.d(TAG, "Inserting new entry " + path + name);
+				Log.d(TAG, "Inserting new entry " + path);
 				c = this.getContentProvider().query(entry, null, null, null, null);
 				c.moveToFirst();
 			}

File: src/eu/alefzero/owncloud/ui/activity/FileDisplayActivity.java
Patch:
@@ -140,6 +140,6 @@ public void onBackPressed() {
       super.onBackPressed();
       return;
     }
-    ((FileList)getSupportFragmentManager().findFragmentById(id.file_list_container)).onBackPressed();
+    ((FileList)getSupportFragmentManager().findFragmentById(R.id.fileList)).onBackPressed();
   }
 }
\ No newline at end of file

File: src/eu/alefzero/webdav/TreeNode.java
Patch:
@@ -74,6 +74,7 @@ public String stripPathFromFilename(String oc_path) {
       String name = propertyMap_.get(NodeProperty.NAME);
       name = name.replace(oc_path, "");
       String path = "";
+      String name2 = name;
       if (name.endsWith("/")) {
         name = name.substring(0, name.length()-1);
       }
@@ -87,7 +88,7 @@ public String stripPathFromFilename(String oc_path) {
       propertyMap_.remove(NodeProperty.NAME);
       propertyMap_.put(NodeProperty.NAME, name);
       propertyMap_.remove(NodeProperty.PATH);
-      propertyMap_.put(NodeProperty.PATH, path);
+      propertyMap_.put(NodeProperty.PATH, name2);
       Log.i("TreeNode", toString());
       return path;
     }

File: src/eu/alefzero/owncloud/ui/fragment/FileList.java
Patch:
@@ -26,6 +26,7 @@
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.TextView;
@@ -100,6 +101,7 @@ public void onBackPressed() {
   }
 
   private void populateFileList() {
+    Log.d("ASD", mAccount.name + "");
     if (mParentsIds.empty()) {
       mCursor = getActivity().getContentResolver().query(ProviderTableMeta.CONTENT_URI,
         null,

File: src/eu/alefzero/owncloud/OwnCloudMainScreen.java
Patch:
@@ -290,8 +290,8 @@ protected void onListItemClick(ListView l, View v, int position, long id) {
           fis.read(buffer);
           Log.d("DUPA", new String(buffer));
           
-          //Intent intent = new Intent(this, FileDownloader.class);
-          /*intent.putExtra(FileDownloader.EXTRA_FILE_PATH, "/docsy.py");
+          Intent intent = new Intent(this, FileDownloader.class);
+          intent.putExtra(FileDownloader.EXTRA_FILE_PATH, "/"+((TextView)findViewById(R.id.textView1)).getText().toString());
           intent.putExtra(FileDownloader.EXTRA_ACCOUNT, mAccount);
           startService(intent);
           /*

File: src/eu/alefzero/owncloud/OwnCloudMainScreen.java
Patch:
@@ -312,7 +312,6 @@ private void populateFileList() {
   @Override
   protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     super.onActivityResult(requestCode, resultCode, data);
-    Log.i("asd", data+"");
   }
   
   @Override

File: src/eu/alefzero/owncloud/db/ProviderMeta.java
Patch:
@@ -22,7 +22,7 @@
 
 public class ProviderMeta {
 
-  public static final String AUTHORITY_FILES = "org.owncloud.files";
+  public static final String AUTHORITY_FILES = "org.owncloud";
   public static final String DB_FILE = "owncloud.db";
   public static final String DB_NAME = "filelist";
   public static final int DB_VERSION = 1;

File: src/eu/alefzero/owncloud/syncadapter/ContactSyncAdapter.java
Patch:
@@ -48,7 +48,8 @@ public synchronized void onPerformSync(
 					FileInputStream fis = getContactVcard(lookup);
 					// TODO make a webdav request based on the stream
 					// TODO send request to the ownCloud server
-					// TODO mark the current contact as synced - where to store?					
+					// TODO mark the current contact as synced - where to store?
+					fis.close();
 				} catch (IOException e) {
 					// TODO Auto-generated catch block
 					e.printStackTrace();

