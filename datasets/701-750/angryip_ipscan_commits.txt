File: src/net/azib/ipscan/feeders/FileFeeder.java
Patch:
@@ -78,7 +78,7 @@ private String readLines(BufferedReader fileReader, int num) throws IOException
 		StringBuilder sb = new StringBuilder();
 		String fileLine;
 		while ((fileLine = fileReader.readLine()) != null) {
-			sb.append(fileLine);
+			sb.append(fileLine).append("\n");
 			index++;
 			if (index > num) break;
 		}

File: src/net/azib/ipscan/core/net/ARPPinger.java
Patch:
@@ -22,13 +22,13 @@ public ARPPinger(MACFetcher macFetcher, JavaPinger trigger) {
 	}
 
 	@Override public PingResult ping(ScanningSubject subject, int count) throws IOException {
+		if (trigger != null) count -= count / 2;
 		PingResult result = new PingResult(subject.getAddress(), count);
-		if (trigger != null) count /= 2;
 		for (int i = 0; i < count; i++) {
 			long start = currentTimeMillis();
 			if (trigger != null) {
 				// this should issue an ARP request for the IP
-				result.merge(trigger.ping(subject, count / 2));
+				result.merge(trigger.ping(subject, 1));
 			}
 			String mac = macFetcher.scan(subject);
 			if (mac != null) result.addReply(currentTimeMillis() - start);

File: test/net/azib/ipscan/core/net/AbstractPingerTest.java
Patch:
@@ -10,8 +10,7 @@
 import java.net.InetAddress;
 import java.net.InterfaceAddress;
 
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.*;
 
 abstract class AbstractPingerTest {
 	Pinger pinger;
@@ -26,6 +25,8 @@ public void pingAlive() throws IOException {
 		InterfaceAddress ifAddr = InetAddressUtils.getLocalInterface();
 		PingResult result = pinger.ping(new ScanningSubject(ifAddr.getAddress()), 2);
 		assertTrue(result.isAlive());
+		assertEquals(2, result.getPacketCount());
+		assertEquals(2, result.getReplyCount());
 		assertTrue(result.getAverageTime() <= 10);
 		assertTrue(result.getTTL() >= 0);
 	}

File: src/net/azib/ipscan/core/net/Pinger.java
Patch:
@@ -7,15 +7,14 @@
 
 import net.azib.ipscan.core.ScanningSubject;
 
-import java.io.Closeable;
 import java.io.IOException;
 
 /**
- * Pinger
+ * Pingers check if hosts are alive
  *
  * @author Anton Keks
  */
-public interface Pinger extends Closeable {
+public interface Pinger extends AutoCloseable {
 	/**
 	 * Issues the specified number of pings and
 	 * waits for replies.
@@ -24,4 +23,5 @@ public interface Pinger extends Closeable {
 	 */
 	PingResult ping(ScanningSubject subject, int count) throws IOException;
 
+	@Override default void close() throws IOException {}
 }

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -96,7 +96,4 @@ private void success(PingResult result, long startTime) {
 		// one positive result is enough for TCP 
 		result.enableTimeoutAdaptation();
 	}
-
-	public void close() {
-	}
 }

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -77,7 +77,4 @@ public PingResult ping(ScanningSubject subject, int count) throws IOException {
 			closeQuietly(socket);
 		}
 	}
-
-	public void close() {
-	}
 }

File: test/net/azib/ipscan/core/net/PingerRegistryTest.java
Patch:
@@ -84,9 +84,6 @@ abstract static class AbstractWrongPinger implements Pinger {
 		@Override public PingResult ping(ScanningSubject subject, int count) throws IOException {
 			return null;
 		}
-
-		@Override public void close() {
-		}
 	}
 
 	static class PingerWithoutConstructor extends AbstractWrongPinger {

File: src/net/azib/ipscan/Main.java
Patch:
@@ -67,7 +67,9 @@ public static void main(String... args) {
 		catch (UnsatisfiedLinkError e) {
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
-			showFallbackError("Failed to load native code for " + System.getProperty("os.arch") + ", probably you are using a binary built for wrong OS or CPU.\n\n" + e.getMessage());
+			showFallbackError("Failed to load native code for " +
+					System.getProperty("java.runtime.version") + " " + System.getProperty("os.arch") +
+					", probably you are using a binary built for wrong OS or CPU.\n\n" + e.getMessage());
 		}
 		catch (NoClassDefFoundError e) {
 			e.printStackTrace();

File: src/net/azib/ipscan/Main.java
Patch:
@@ -67,7 +67,7 @@ public static void main(String... args) {
 		catch (UnsatisfiedLinkError e) {
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
-			showFallbackError("Failed to load native code, probably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.\n\n" + e.getMessage());
+			showFallbackError("Failed to load native code for " + System.getProperty("os.arch") + ", probably you are using a binary built for wrong OS or CPU.\n\n" + e.getMessage());
 		}
 		catch (NoClassDefFoundError e) {
 			e.printStackTrace();

File: test/net/azib/ipscan/util/GoogleAnalyticsTest.java
Patch:
@@ -10,7 +10,7 @@ public class GoogleAnalyticsTest {
 	@Test
 	public void extractFirstStackFrame() {
 		assertEquals("java.lang.RuntimeException: Kaboom\n" +
-				"net.azib.ipscan.util.GoogleAnalyticsTest.extractFirstStackFrame:10",
+				"net.azib.ipscan.util.GoogleAnalyticsTest.extractFirstStackFrame:12",
 				GoogleAnalytics.extractFirstStackFrame(new RuntimeException("Kaboom")));
 	}
 

File: src/net/azib/ipscan/util/InetAddressUtils.java
Patch:
@@ -57,7 +57,8 @@ public static InetAddress endRangeByNetmask(InetAddress address, InetAddress net
 		}
 		catch (UnknownHostException e) {
 			// this should never happen as we are modifying the same bytes received from the InetAddress
-			throw new IllegalArgumentException(e);		}
+			throw new IllegalArgumentException(e);
+		}
 	}
 	
 	/**

File: src/net/azib/ipscan/fetchers/MACVendorFetcher.java
Patch:
@@ -28,8 +28,7 @@ public void init() {
 			String line;
 			while ((line = reader.readLine()) != null) {
 				if (line.isEmpty()) continue;
-				String prefix = line.substring(0, 2) + ':' + line.substring(2, 4) + ':' + line.substring(4, 6);
-				vendors.put(prefix, line.substring(6));
+				vendors.put(line.substring(0, 6), line.substring(6));
 			}
 		}
 		catch (IOException e) {
@@ -45,6 +44,6 @@ public Object scan(ScanningSubject subject) {
 	}
 
 	String findMACVendor(String mac) {
-		return vendors.get(mac.substring(0, 8));
+		return vendors.get(mac.replace(macFetcher.separator, "").substring(0, 6));
 	}
 }

File: test/net/azib/ipscan/config/ComponentRegistryTest.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ComponentRegistryTest {
 	@Test
-	public void mainClassesCanBeCreated() {
+	public void mainClassesCanBeCreated() throws Exception {
 		Injector injector = new ComponentRegistry().init();
 		assertNotNull(injector.require(CommandLineProcessor.class));
 		assertNotNull(injector.require(MainWindow.class));

File: src/net/azib/ipscan/feeders/RangeFeeder.java
Patch:
@@ -62,9 +62,9 @@ public RangeFeeder(String startIP, String endIP) {
 	 * Initalizes fields, used for computation of percentage of completion.
 	 */
 	private void initPercentageIncrement() {
-		// Warning: IPv4 specific code! 
-		long rawEndIP = OctetConverter.octetsToInt(this.endIP.getAddress());
-		long rawStartIP = OctetConverter.octetsToInt(this.startIP.getAddress());
+		byte[] endAddress = this.endIP.getAddress();
+		long rawEndIP = OctetConverter.octetsToInt(endAddress, endAddress.length - 4);
+		long rawStartIP = OctetConverter.octetsToInt(this.startIP.getAddress(), endAddress.length - 4);
 		// make 32-bit unsigned values
 		rawEndIP = rawEndIP >= 0 ? rawEndIP : rawEndIP + Integer.MAX_VALUE;
 		rawStartIP = rawStartIP >= 0 ? rawStartIP : rawStartIP + Integer.MAX_VALUE;

File: src/net/azib/ipscan/fetchers/MACVendorFetcher.java
Patch:
@@ -40,9 +40,7 @@ public void init() {
 	@Override
 	public Object scan(ScanningSubject subject) {
 		String mac = (String)subject.getParameter(MACFetcher.ID);
-		if (mac == null) {
-			mac = macFetcher.scan(subject);
-		}
+		if (mac == null) mac = macFetcher.scan(subject);
 		return mac != null ? findMACVendor(mac) : null;
 	}
 

File: src/net/azib/ipscan/gui/SelectFetchersDialog.java
Patch:
@@ -184,7 +184,6 @@ public void handleEvent(Event event) {
 	}
 
 	static class AddRemoveButtonListener implements Listener {
-		
 		private List fromList;
 		private List toList;
 		

File: test/net/azib/ipscan/fetchers/FetcherRegistryTest.java
Patch:
@@ -34,7 +34,7 @@ public void setUp() throws Exception {
 		ipFetcher = new IPFetcher();
 		pingFetcher = new PingFetcher(null, null);
 		hostnameFetcher = new HostnameFetcher();
-		commentFetcher = new CommentFetcher(null);
+		commentFetcher = new CommentFetcher(null, null);
 		portsFetcher = new PortsFetcher(null);
 		fetcherRegistry = new FetcherRegistry(asList(ipFetcher, pingFetcher, hostnameFetcher, commentFetcher, portsFetcher), preferences, null);
 	}

File: src/net/azib/ipscan/gui/GUI.java
Patch:
@@ -58,6 +58,9 @@ public void showMainWindow(Injector injector, boolean showStartupInfo) {
 				String localizedMessage = getLocalizedMessage(e);
 				showMessage(e instanceof UserErrorException ? SWT.ICON_WARNING : SWT.ICON_ERROR,
 						getLabel(e instanceof UserErrorException ? "text.userError" : "text.error"), localizedMessage);
+
+				if (!(e instanceof UserErrorException) || e.getCause() != null)
+					new GoogleAnalytics().report(e);
 			}
 		}
 	}
@@ -70,7 +73,6 @@ public void showMessage(int flags, String title, String localizedMessage) {
 		messageBox.setText(title);
 		messageBox.setMessage(localizedMessage);
 		messageBox.open();
-		new GoogleAnalytics().report(localizedMessage, (Throwable) null);
 	}
 
 	@Override public void close() {

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -89,7 +89,8 @@ public boolean checkSelectedPinger() {
 			catch (Throwable e) {
 				LOG.info("ICMP pinger failed: " + e);
 				// win32 will use native pinger, all others get combined UDP+TCP, which doesn't require special privileges
-				scannerConfig.selectedPinger = Platform.WINDOWS ? "pinger.windows" : "pinger.combined";
+				scannerConfig.selectedPinger = Platform.WINDOWS ? "pinger.windows" :
+											   Platform.MAC_OS ? "pinger.java" : "pinger.combined";
 				return false;
 			}
 		}

File: src/net/azib/ipscan/gui/actions/FeederActions.java
Patch:
@@ -89,7 +89,7 @@ private void askLocalIPAddress() {
                         InetAddress address = ifaddr.getAddress();
                         if (!address.isLoopbackAddress()) {
 							MenuItem menuItem = new MenuItem(popupMenu, 0);
-							String ip = address.getHostAddress().replaceFirst("%.*$", "");
+							String ip = address.getHostAddress();
 							menuItem.setText(networkInterface.getDisplayName() + ": " + ip);
 							menuItem.setData(ip + "/" + ifaddr.getNetworkPrefixLength());
 							menuItem.addListener(SWT.Selection, menuItemListener);

File: src/net/azib/ipscan/gui/actions/FeederActions.java
Patch:
@@ -80,8 +80,7 @@ private void askLocalIPAddress() {
 					MenuItem menuItem = (MenuItem) event.widget;
 					String address = (String) menuItem.getData();
 					ipText.setText(address.substring(0, address.lastIndexOf('/')));
-netmaskCombo.setText(address.substring(address.lastIndexOf('/')));
-//                        netmaskCombo.traverse(SWT.TRAVERSE_RETURN);
+					netmaskCombo.setText(address.substring(address.lastIndexOf('/')));
 					menuItem.getParent().dispose();
 				};
 

File: src/net/azib/ipscan/util/GoogleAnalytics.java
Patch:
@@ -9,7 +9,7 @@
 import java.net.URLEncoder;
 import java.util.logging.Logger;
 
-import static java.util.logging.Level.WARNING;
+import static java.util.logging.Level.FINE;
 import static net.azib.ipscan.config.Config.getConfig;
 
 /**
@@ -44,7 +44,7 @@ public void report(String type, String content) {
 			conn.disconnect();
 		}
 		catch (Exception e) {
-			Logger.getLogger(getClass().getName()).log(WARNING, "Failed to report", e);
+			Logger.getLogger(getClass().getName()).log(FINE, "Failed to report", e);
 		}
 	}
 

File: test/net/azib/ipscan/di/InjectorTest.java
Patch:
@@ -33,7 +33,7 @@ public void requireAll() {
 	}
 
 	static class Dummy {
-		@Inject public Dummy() {}
+		public Dummy() {}
 	}
 
 	static class WithDeps {

File: src/net/azib/ipscan/config/CommandLineProcessor.java
Patch:
@@ -26,7 +26,7 @@
  * @author Anton Keks
  */
 public class CommandLineProcessor implements CommandProcessor, StateTransitionListener {
-	private final FeederRegistry<? extends FeederCreator> feederRegistry;
+	private final FeederRegistry feederRegistry;
 	private final ExporterRegistry exporters;
 	private StateMachine stateMachine;
 	private ScanningResultList scanningResults;
@@ -40,12 +40,12 @@ public class CommandLineProcessor implements CommandProcessor, StateTransitionLi
 	boolean autoQuit;
 	boolean appendToFile;
 	
-	CommandLineProcessor(FeederRegistry<? extends FeederCreator> feederCreators, ExporterRegistry exporters) {
+	CommandLineProcessor(FeederRegistry feederCreators, ExporterRegistry exporters) {
 		this.feederRegistry = feederCreators;
 		this.exporters = exporters;		
 	}
 
-	@Inject public CommandLineProcessor(FeederRegistry<? extends FeederCreator> feederCreators, ExporterRegistry exporters, StateMachine stateMachine, ScanningResultList scanningResults) {
+	@Inject public CommandLineProcessor(FeederRegistry feederCreators, ExporterRegistry exporters, StateMachine stateMachine, ScanningResultList scanningResults) {
 		this(feederCreators, exporters);
 		this.stateMachine = stateMachine;
 		this.scanningResults = scanningResults;

File: src/net/azib/ipscan/feeders/FeederRegistry.java
Patch:
@@ -11,6 +11,6 @@
  *
  * @author Anton Keks
  */
-public interface FeederRegistry<T extends FeederCreator> extends Iterable<T> {
+public interface FeederRegistry extends Iterable<FeederCreator> {
 	void select(String feederId);
 }

File: src/net/azib/ipscan/gui/GUI.java
Patch:
@@ -89,7 +89,8 @@ private void setMacDarkAppearanceIfNeeded() {
 
 	public void showMessage(int flags, String title, String localizedMessage) {
 		Shell parent = Display.getDefault().getActiveShell();
-		if (parent == null) parent = mainWindow.getShell();
+		if (parent == null && mainWindow != null) parent = mainWindow.getShell();
+		if (parent == null) parent = new Shell();
 		MessageBox messageBox = new MessageBox(parent, SWT.OK | SWT.SHEET | flags);
 		messageBox.setText(title);
 		messageBox.setMessage(localizedMessage);

File: test/net/azib/ipscan/util/InjectorTest.java
Patch:
@@ -51,7 +51,7 @@ static class WithNamedDeps {
 
 	static class WithListDeps {
 		List<String> list;
-		@Inject public WithListDeps(List<String> list, Dummy dummy) {
+		@Inject public WithListDeps(List<String> list, List<? extends String> list2, Dummy dummy) {
 			this.list = list;
 		}
 	}

File: src/net/azib/ipscan/core/net/CombinedUnprivilegedPinger.java
Patch:
@@ -19,7 +19,6 @@
  * @author Anton Keks
  */
 public class CombinedUnprivilegedPinger implements Pinger {
-
 	private TCPPinger tcpPinger;
 	private UDPPinger udpPinger;
 	

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -47,6 +47,7 @@ public class PingerRegistry {
 		pingers.put("pinger.udp", UDPPinger.class);
 		pingers.put("pinger.tcp", TCPPinger.class);
 		pingers.put("pinger.combined", CombinedUnprivilegedPinger.class);
+		pingers.put("pinger.java", JavaPinger.class);
 	}
 
 	public String[] getRegisteredNames() {

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -28,15 +28,15 @@ public class TCPPinger implements Pinger {
 	private static final Logger LOG = LoggerFactory.getLogger();
 
 	// try different ports in sequence, starting with 80 (which is most probably not filtered)
-	private static final int[] PROBE_TCP_PORTS = {80, 80, 443, 8080, 22, 7};
+	private static final int[] PROBE_TCP_PORTS = {80, 7, 443, 139, 22};
 
 	private int timeout;
 
 	public TCPPinger(int timeout) {
 		this.timeout = timeout;
 	}
 
-	public PingResult ping(ScanningSubject subject, int count) throws IOException {
+	public PingResult ping(ScanningSubject subject, int count) {
 		PingResult result = new PingResult(subject.getAddress(), count);
 		int workingPort = -1;
 

File: src/net/azib/ipscan/config/ScannerConfig.java
Patch:
@@ -13,7 +13,6 @@
  * @author Anton Keks
  */
 public class ScannerConfig {
-	
 	private Preferences preferences;
 
 	public int maxThreads;
@@ -49,7 +48,7 @@ public class ScannerConfig {
 		portTimeout = preferences.getInt("portTimeout", 2000);
 		adaptPortTimeout = preferences.getBoolean("adaptPortTimeout", !Platform.CRIPPLED_WINDOWS);
 		minPortTimeout = preferences.getInt("minPortTimeout", 100);
-		portString = preferences.get("portString", "");
+		portString = preferences.get("portString", "80,443,8080");
 		useRequestedPorts = preferences.getBoolean("useRequestedPorts", true);
 		notAvailableText = preferences.get("notAvailableText", Labels.getLabel("fetcher.value.notAvailable"));
 		notScannedText = preferences.get("notScannedText", Labels.getLabel("fetcher.value.notScanned"));

File: src/net/azib/ipscan/gui/GUI.java
Patch:
@@ -69,7 +69,7 @@ private void setMacDarkAppearanceIfNeeded() {
 			// changing the appearance works only after the shell has been created
 			Class os = Class.forName("org.eclipse.swt.internal.cocoa.OS");
 			Boolean isDarkMode = (Boolean) os.getMethod("isSystemDarkAppearance").invoke(null);
-			os.getMethod("setTheme").invoke(null, isDarkMode);
+			os.getMethod("setTheme", boolean.class).invoke(null, isDarkMode);
 			// workaround for a bug in SWT: colors need to be reinited after changing the appearance
 			Method initColor = display.getClass().getDeclaredMethod("initColors");
 			initColor.setAccessible(true);

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -27,7 +27,7 @@ public OpenersConfig(Preferences preferences) {
 			if (Platform.WINDOWS) add(labels.get("opener.netbios"), new Opener("\\\\${fetcher.ip}", false, null));
 			add(labels.get("opener.web"), new Opener("http://${fetcher.hostname}/", false, null));			
 			add(labels.get("opener.ftp"), new Opener("ftp://${fetcher.hostname}/", false, null));
-			add(labels.get("opener.telnet"), new Opener("telnet ${fetcher.ip}", true, null));
+			if (!Platform.WINDOWS) add(labels.get("opener.telnet"), new Opener("telnet ${fetcher.ip}", true, null));
 			add(labels.get("opener.ping"), new Opener("ping ${fetcher.ip}", true, null));
 			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.ssh"), new Opener("ssh ${fetcher.ip}", true, null));

File: src/net/azib/ipscan/util/GoogleAnalytics.java
Patch:
@@ -35,7 +35,7 @@ public void report(String type, String content) {
 			String payload = "v=1&t=" + type + "&tid=" + Version.GA_ID + "&cid=" + config.getUUID() + "&an=ipscan&av=" + Version.getVersion() +
 					         "&" + contentParam + "=" + URLEncoder.encode(content, "UTF-8") +
 					         "&ul=" + config.getLocale() +
-							 "&vp=" + config.forGUI().mainWindowSize.x + "x" + config.forGUI().mainWindowSize.y +
+							 "&vp=" + config.forGUI().mainWindowSize[0] + "x" + config.forGUI().mainWindowSize[1] +
 							 "&cd1=" + URLEncoder.encode(System.getProperty("os.name") + " " + System.getProperty("os.version") + " " + System.getProperty("os.arch"), "UTF-8") +
 							 "&cd2=" + URLEncoder.encode("Java " + System.getProperty("java.version"), "UTF-8");
 			os.write(payload.getBytes());
@@ -57,6 +57,7 @@ public void report(String message, Throwable e) {
 	}
 
 	static String extractFirstStackFrame(Throwable e) {
+		if (e == null) return "";
 		StackTraceElement[] stackTrace = e.getStackTrace();
 		StackTraceElement element = null;
 		for (StackTraceElement stackTraceElement : stackTrace) {

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -59,6 +59,9 @@ public void launch(Opener opener, int selectedItem) {
 					}
 				}
 			}
+			catch (UserErrorException e) {
+				throw e;
+			}
 			catch (Exception e) {
 				throw new UserErrorException("opener.failed", openerString);
 			}

File: src/net/azib/ipscan/Main.java
Patch:
@@ -101,7 +101,7 @@ public static void main(String... args) {
 		catch (Throwable e) {
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
-			JOptionPane.showMessageDialog(null, e + "\nPlease submit a bug report mentioning your OS and what were you doing.");
+			showMessage(null, 0, "Fatal Error", e + "\nPlease submit a bug report mentioning your OS and what were you doing.");
 		}
 	}
 

File: src/net/azib/ipscan/Main.java
Patch:
@@ -94,14 +94,14 @@ public static void main(String... args) {
 			display.dispose();
 		}
 		catch (UnsatisfiedLinkError e) {
-			JOptionPane.showMessageDialog(null, "Failed to load native code: " + e.getMessage() + "\nProbably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
+			JOptionPane.showMessageDialog(null, "Failed to load native code: " + e.getMessage() + "\nProbably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
 		}
 		catch (Throwable e) {
-			JOptionPane.showMessageDialog(null, e + "\nPlease submit a bug report mentioning your OS and what were you doing.");
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
+			JOptionPane.showMessageDialog(null, e + "\nPlease submit a bug report mentioning your OS and what were you doing.");
 		}
 	}
 

File: test/net/azib/ipscan/feeders/FileFeederTest.java
Patch:
@@ -33,10 +33,10 @@ public void simpleIPs() throws FeederException {
 
 	@Test
 	public void simpleHostnames() throws FeederException {
-		StringReader reader = new StringReader("angryip.org, www.google.ee");
+		StringReader reader = new StringReader("angryip.org, hello.xyz.com www.google.ee");
 		FileFeeder fileFeeder = new FileFeeder(reader);
 		assertTrue(fileFeeder.hasNext());
-		assertEquals("angryip.org", fileFeeder.next().getAddress().getHostName());
+		assertEquals("hello.xyz.com", fileFeeder.next().getAddress().getHostName());
 		assertTrue(fileFeeder.hasNext());
 		assertEquals("www.google.ee", fileFeeder.next().getAddress().getHostName());
 		assertFalse(fileFeeder.hasNext());

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -1,5 +1,5 @@
-/**
- * This is a part of Angry IP Scanner source.
+/*
+  This is a part of Angry IP Scanner source.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/fetchers/CommentFetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/Fetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/HostnameFetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/IPFetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/PingTTLFetcher.java
Patch:
@@ -1,6 +1,6 @@
-/**
- * This file is a part of Angry IP Scanner source code,
- * see http://www.angryip.org/ for more information.
+/*
+  This file is a part of Angry IP Scanner source code,
+  see http://www.angryip.org/ for more information.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/core/Scanner.java
Patch:
@@ -52,6 +52,7 @@ public void scan(ScanningSubject subject, ScanningResult result) {
 			result.setValue(fetcherIndex, value);
 			fetcherIndex++;
 		}
+		activeFetchers.remove(Thread.currentThread().getId());
 		
 		result.setType(subject.getResultType());
 	}

File: test/net/azib/ipscan/config/LabelsTest.java
Patch:
@@ -68,7 +68,7 @@ public void testAllLabels() throws IOException {
 	public static File findBaseDir() {
 		URL url = LabelsTest.class.getClassLoader().getResource("messages.properties");
         File parent = new File(url.getPath());
-        while (!new File(parent, "build.xml").exists())
+        while (!new File(parent, "build.gradle").exists())
             parent = parent.getParentFile();
 		return parent;
 	}

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -80,7 +80,7 @@ public class ComponentRegistry {
 											IPFetcher f1, PingFetcher f2, PingTTLFetcher f3, HostnameFetcher f4, PortsFetcher f5,
 											FilteredPortsFetcher f6, WebDetectFetcher f7, HTTPSenderFetcher f8, CommentFetcher f9,
 											NetBIOSInfoFetcher f10, MACFetcher f11, MACVendorFetcher f12, PacketLossFetcher f13) {
-			return addPlugins(Arrays.<Fetcher>asList(f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13), Fetcher.class, plugins);
+		return addPlugins(Arrays.<Fetcher>asList(f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13), Fetcher.class, plugins);
 	}
 
 	@Provides @Singleton MACFetcher selectMacFetcher() {

File: src/net/azib/ipscan/core/net/ICMPSharedPinger.java
Patch:
@@ -79,7 +79,7 @@ public void close() throws IOException {
 
 	public PingResult ping(ScanningSubject subject, int count) throws IOException {
 		InetAddress address = subject.getAddress();
-		PingResult result = new PingResult(address,count);
+		PingResult result = new PingResult(address, count);
 		results.put(address, result);
 		
 		// TODO: make ICMPEchoPacket accept byte array in the constructor

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -37,7 +37,7 @@ public TCPPinger(int timeout) {
 	}
 
 	public PingResult ping(ScanningSubject subject, int count) throws IOException {
-		PingResult result = new PingResult(subject.getAddress(),count);
+		PingResult result = new PingResult(subject.getAddress(), count);
 		int workingPort = -1;
 
 		Socket socket;

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -33,7 +33,7 @@ public UDPPinger(int timeout) {
 	}
 
 	public PingResult ping(ScanningSubject subject, int count) throws IOException {
-		PingResult result = new PingResult(subject.getAddress(),count);
+		PingResult result = new PingResult(subject.getAddress(), count);
 
 		DatagramSocket socket = null;
 		try {

File: src/net/azib/ipscan/core/net/WindowsPinger.java
Patch:
@@ -47,7 +47,7 @@ public PingResult ping(ScanningSubject subject, int count) throws IOException {
 		sendData.clear(sendDataSize);
 		Pointer replyData = new Memory(replyDataSize);
 
-		PingResult result = new PingResult(subject.getAddress(),count);
+		PingResult result = new PingResult(subject.getAddress(), count);
 		try {
 			for (int i = 1; i <= count && !currentThread().isInterrupted(); i++) {
 				int numReplies = dll.IcmpSendEcho(handle, ipaddr, sendData, (short) sendDataSize, null, replyData, replyDataSize, timeout);

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -66,7 +66,7 @@ protected PingResult executePing(ScanningSubject subject) {
       // if this is not a timeout
       LOG.log(Level.WARNING, "Pinging failed", e);
       // return an empty ping result
-      result = new PingResult(subject.getAddress(),config.pingCount);
+      result = new PingResult(subject.getAddress(), 0);
     }
     // remember the result for other fetchers to use
     subject.setParameter(PARAMETER_PING_RESULT, result);

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -17,7 +17,7 @@ public class Version {
 	
 	public static final String COPYLEFT = "© 2017 Anton Keks and contributors";
 	
-	public static final String WEBSITE = "http://angryip.org";
+	public static final String WEBSITE = "https://angryip.org";
 	
 	public static final String FAQ_URL = WEBSITE + "/faq/";
 

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -17,7 +17,7 @@ public class Version {
 	
 	public static final String COPYLEFT = "© 2017 Anton Keks and contributors";
 	
-	public static final String WEBSITE = "http://angryip.org";
+	public static final String WEBSITE = "https://angryip.org";
 	
 	public static final String FAQ_URL = WEBSITE + "/faq/";
 

File: test/net/azib/ipscan/fetchers/HostnameFetcherTest.java
Patch:
@@ -30,7 +30,7 @@ public void resolveForReal() throws UnknownHostException {
 		
 		try {
 			InetAddress address = InetAddress.getByName("era.ee");
-			assertEquals("era.ee", fetcher.scan(new ScanningSubject(address)));
+			assertEquals("ns.era.ee", fetcher.scan(new ScanningSubject(address)));
 		}
 		catch (UnknownHostException e) { /* ignore - test is running in off-line environment */ }
 		

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.List;
 
 /**
- * This class is the dependency injection configuration using the Pico Container.
+ * This class is the dependency injection configuration using Dagger2.
  * 
  * @author Anton Keks
  */
@@ -89,7 +89,7 @@ public class ComponentRegistry {
 
 	@SuppressWarnings("unchecked")
 	private <T extends Plugin> List<T> addPlugins(List<T> original, Class<T> type, List<Class<? extends Plugin>> classes) {
-		List<T> result = new ArrayList<T>(original);
+		List<T> result = new ArrayList<>(original);
 		for (Class clazz: classes) {
 			try {
 				if (type.isAssignableFrom(clazz))

File: test/net/azib/ipscan/fetchers/HostnameFetcherTest.java
Patch:
@@ -23,14 +23,14 @@ public void setUp() throws Exception {
 	}
 	
 	@Test
-	public void testScan() throws UnknownHostException {
+	public void resolveForReal() throws UnknownHostException {
 		// Some of these tests are run inside of if's to prevent their failing on certain network configurations
 		if (!InetAddress.getLocalHost().getCanonicalHostName().equals(InetAddress.getLocalHost().getHostAddress()))
 			assertEquals(InetAddress.getLocalHost().getCanonicalHostName(), fetcher.scan(new ScanningSubject(InetAddress.getLocalHost())));
 		
 		try {
-			InetAddress address = InetAddress.getByName("angryip.org");
-			assertEquals("pages.github.com", fetcher.scan(new ScanningSubject(address)));
+			InetAddress address = InetAddress.getByName("era.ee");
+			assertEquals("era.ee", fetcher.scan(new ScanningSubject(address)));
 		}
 		catch (UnknownHostException e) { /* ignore - test is running in off-line environment */ }
 		

File: src/net/azib/ipscan/Main.java
Patch:
@@ -74,9 +74,9 @@ public static void main(String... args) {
 					if (!display.readAndDispatch())
 						display.sleep();
 				}
-				catch (Throwable e) {
-					if (e instanceof SWTException && e.getCause() != null)
-						e = e.getCause();
+				catch (Exception e) {
+					if (e instanceof SWTException && e.getCause() instanceof Exception)
+						e = (Exception) e.getCause();
 
 					// display a nice error message
 					String localizedMessage = getLocalizedMessage(e);

File: src/net/azib/ipscan/Main.java
Patch:
@@ -94,7 +94,7 @@ public static void main(String... args) {
 			display.dispose();
 		}
 		catch (UnsatisfiedLinkError e) {
-			JOptionPane.showMessageDialog(null, "Failed to load native code. Probably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
+			JOptionPane.showMessageDialog(null, "Failed to load native code: " + e.getMessage() + "\nProbably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
 			e.printStackTrace();
 			new GoogleAnalytics().report(e);
 		}

File: src/net/azib/ipscan/fetchers/HTTPSenderFetcher.java
Patch:
@@ -11,14 +11,14 @@
 import javax.inject.Inject;
 
 /**
- * WebDetectFetcher - detects the Web server software running on scanned hosts.
+ * HTTPSenderFetcher - allows sending of arbitrary info port and showing the result.
  *
  * @author Anton Keks
  */
 public class HTTPSenderFetcher extends PortTextFetcher {
 	
 	@Inject public HTTPSenderFetcher(ScannerConfig scannerConfig) {
-		super(scannerConfig, 3128, "GET http://www.google.com HTTP/1.0\r\n\r\n", "Location: (https?.*)$");
+		super(scannerConfig, 3128, "HEAD http://www.google.com HTTP/1.0\r\n\r\n", "Location: (https?.*)$");
 	}
 	
 	public String getId() {

File: src/net/azib/ipscan/gui/EditFavoritesDialog.java
Patch:
@@ -96,7 +96,9 @@ public void handleEvent(Event event) {
 
 	class RenameListener implements Listener {
 		public void handleEvent(Event event) {
-			int index = favoritesList.getSelectionIndex();
+			if (favoritesConfig.size() == 0) return;
+			int index = Math.max(favoritesList.getSelectionIndex(), 0);
+
 			InputDialog prompt = new InputDialog(Labels.getLabel("title.rename"), "");
 			String oldName = favoritesList.getItem(index);
 			String newName = prompt.open(oldName);

File: src/net/azib/ipscan/gui/actions/BrowserLauncher.java
Patch:
@@ -23,7 +23,7 @@ public class BrowserLauncher {
 	 */
 	public static void openURL(String url) {
 		try {
-      Desktop.getDesktop().browse(new URI(url));
+      		Desktop.getDesktop().browse(new URI(url));
 		}
 		catch (Exception e) {
 			throw new UserErrorException("openURL.failed", url);

File: test/net/azib/ipscan/fetchers/MACVendorFetcherTest.java
Patch:
@@ -9,7 +9,7 @@ public class MACVendorFetcherTest {
 	public void findMACVendor() throws Exception {
 		MACVendorFetcher fetcher = new MACVendorFetcher(null);
 		fetcher.init();
-		assertEquals("Xerox", fetcher.findMACVendor("00:00:01:00:00:00"));
-		assertEquals("Nokia", fetcher.findMACVendor("FC:E5:57:11:22:33"));
+		assertEquals("XeroxCor", fetcher.findMACVendor("00:00:01:00:00:00"));
+		assertEquals("NokiaCor", fetcher.findMACVendor("FC:E5:57:11:22:33"));
 	}
 }

File: src/net/azib/ipscan/gui/MacApplicationMenu.java
Patch:
@@ -34,16 +34,15 @@ private void initApplicationMenu(Display display) {
 		if (systemMenu == null) return;
 
 		MenuItem prefs = getItem(systemMenu, SWT.ID_PREFERENCES);
-		prefs.addSelectionListener(new SelectionAdapter() {
+		if (prefs != null) prefs.addSelectionListener(new SelectionAdapter() {
 			@Override
 			public void widgetSelected(SelectionEvent e) {
 				preferencesDialog.open();
 			}
 		});
 
 		MenuItem about = getItem(systemMenu, SWT.ID_ABOUT);
-		// about.setText(Labels.getLabel("title.about") + " " + Version.NAME);
-		about.addSelectionListener(new SelectionAdapter() {
+		if (about != null) about.addSelectionListener(new SelectionAdapter() {
 			@Override
 			public void widgetSelected(SelectionEvent e) {
 				aboutDialog.open();

File: src/net/azib/ipscan/config/Config.java
Patch:
@@ -27,7 +27,7 @@ public final class Config {
 	/** various GUI preferences and dimensions are stored here */
 	private GUIConfig guiConfig;
 	/** favorites are stored here */
-	private NamedListConfig favoritesConfig;
+	private FavoritesConfig favoritesConfig;
 	/** openers are stored here */
 	private OpenersConfig openersConfig;
 
@@ -78,7 +78,7 @@ public ScannerConfig forScanner() {
 	/**
 	 * @return Favorites config (only local access)
 	 */
-	NamedListConfig forFavorites() {
+	FavoritesConfig forFavorites() {
 		return favoritesConfig;
 	}
 

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -29,6 +29,8 @@ public class Version {
 	
 	public static final String DOWNLOAD_URL = WEBSITE + "/download/";
 
+	public static final String ISSUES_URL = WEBSITE + "/issues/";
+
 	public static final String LATEST_VERSION_URL = WEBSITE + "/ipscan/IPSCAN.VERSION";
 
 	public static final String GA_ID = "UA-10776159-2";

File: src/net/azib/ipscan/gui/menu/HelpMenu.java
Patch:
@@ -16,6 +16,7 @@ public HelpMenu(Shell parent,
 					HelpMenuActions.GettingStarted gettingStarted,
 					HelpMenuActions.Website website,
 					HelpMenuActions.FAQ faq,
+					HelpMenuActions.Issues issues,
 					HelpMenuActions.Plugins plugins,
 					HelpMenuActions.CommandLineUsage commandLineUsage,
 					HelpMenuActions.CheckVersion checkVersion,
@@ -27,6 +28,7 @@ public HelpMenu(Shell parent,
 		initMenuItem(this, null, null, null, null);
 		initMenuItem(this, "menu.help.website", null, null, website);
 		initMenuItem(this, "menu.help.faq", null, null, faq);
+		initMenuItem(this, "menu.help.issues", null, null, issues);
 		initMenuItem(this, "menu.help.plugins", null, null, plugins);
 		initMenuItem(this, null, null, null, null);
 		initMenuItem(this, "menu.help.cmdLine", null, null, commandLineUsage);

File: src/net/azib/ipscan/gui/menu/CommandsMenu.java
Patch:
@@ -23,9 +23,9 @@ protected CommandsMenu(Shell parent, int style, CommandsMenuActions actions, Ope
 		initMenuItem(this, "menu.commands.details", null, null, actions.details);
 		initMenuItem(this, null, null, null, null);
 		initMenuItem(this, "menu.commands.rescan", "Ctrl+R", SWT.MOD1 | 'R', actions.rescan, true);
-		initMenuItem(this, "menu.commands.delete", Platform.MAC_OS ? "?" : "Del", /* this is not a global key binding */ null, actions.delete, true);
+		initMenuItem(this, "menu.commands.delete", Platform.MAC_OS ? "⌦" : "Del", /* this is not a global key binding */ null, actions.delete, true);
 		initMenuItem(this, null, null, null, null);
-		initMenuItem(this, "menu.commands.copy", Platform.MAC_OS ? "?C" : "Ctrl+C", /* this is not a global key binding */ null, actions.copyIP);
+		initMenuItem(this, "menu.commands.copy", Platform.MAC_OS ? "⌘C" : "Ctrl+C", /* this is not a global key binding */ null, actions.copyIP);
 		initMenuItem(this, "menu.commands.copyDetails", null, null, actions.copyIPDetails);
 		initMenuItem(this, null, null, null, null);
 

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -12,6 +12,7 @@
 import net.azib.ipscan.fetchers.FetcherException;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationTargetException;
 import java.net.InetAddress;
@@ -26,6 +27,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class PingerRegistry {
 	private static final Logger LOG = LoggerFactory.getLogger();
 	

File: src/net/azib/ipscan/exporters/ExporterRegistry.java
Patch:
@@ -6,6 +6,7 @@
 package net.azib.ipscan.exporters;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
@@ -17,13 +18,13 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class ExporterRegistry implements Iterable<Exporter> {
 	
 	/** All available Exporter implementations, Map of Exporter instances (prototypes) */
 	private Map<String, Exporter> exporters;
 
-	@Inject
-	public ExporterRegistry(List<Exporter> registeredExporters) {
+	@Inject public ExporterRegistry(List<Exporter> registeredExporters) {
 		exporters = new LinkedHashMap<String, Exporter>();
 
 		for (Exporter exporter : registeredExporters) {

File: src/net/azib/ipscan/fetchers/FetcherRegistry.java
Patch:
@@ -8,8 +8,8 @@
 import net.azib.ipscan.gui.PreferencesDialog;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 import java.lang.reflect.Constructor;
-import java.lang.reflect.InvocationTargetException;
 import java.util.*;
 import java.util.prefs.Preferences;
 
@@ -19,6 +19,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class FetcherRegistry {
 	static final String PREFERENCE_SELECTED_FETCHERS = "selectedFetchers";
 

File: src/net/azib/ipscan/gui/StatusBar.java
Patch:
@@ -21,7 +21,7 @@
 import org.eclipse.swt.widgets.*;
 
 import javax.inject.Inject;
-import javax.inject.Named;
+import javax.inject.Singleton;
 
 import static net.azib.ipscan.config.GUIConfig.DisplayMethod.PORTS;
 
@@ -30,6 +30,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class StatusBar {
 	private Composite composite;
 	private Label statusText;

File: src/net/azib/ipscan/config/FavoritesConfig.java
Patch:
@@ -10,12 +10,14 @@
 import net.azib.ipscan.feeders.FeederCreator;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 
 /**
  * FavoritesConfig
  *
  * @author Anton Keks
  */
+@Singleton
 public class FavoritesConfig extends NamedListConfig {
 
 	@Inject

File: src/net/azib/ipscan/config/FavoritesConfig.java
Patch:
@@ -10,12 +10,14 @@
 import net.azib.ipscan.feeders.FeederCreator;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 
 /**
  * FavoritesConfig
  *
  * @author Anton Keks
  */
+@Singleton
 public class FavoritesConfig extends NamedListConfig {
 
 	@Inject

File: src/net/azib/ipscan/core/ScannerDispatcherThreadFactory.java
Patch:
@@ -10,6 +10,7 @@
 import net.azib.ipscan.feeders.Feeder;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 
 /**
  * ScannerThreadFactory.
@@ -18,6 +19,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class ScannerDispatcherThreadFactory {
 	
 	private ScanningResultList scanningResults;

File: src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -15,6 +15,7 @@
 import net.azib.ipscan.fetchers.FetcherRegistry;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 import java.util.*;
 
@@ -23,6 +24,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class ScanningResultList implements Iterable<ScanningResult> {
 	
 	private static final int RESULT_LIST_INITIAL_SIZE = 1024;

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -28,6 +28,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 
 /**
@@ -36,6 +37,7 @@
  * 
  * @author Anton Keks
  */
+@Singleton
 public class StartStopScanningAction implements SelectionListener, ScanningProgressCallback, StateTransitionListener {
 	
 	private ScannerDispatcherThreadFactory scannerThreadFactory;

File: src/net/azib/ipscan/core/ScannerDispatcherThreadFactory.java
Patch:
@@ -10,6 +10,7 @@
 import net.azib.ipscan.feeders.Feeder;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 
 /**
  * ScannerThreadFactory.
@@ -18,6 +19,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class ScannerDispatcherThreadFactory {
 	
 	private ScanningResultList scanningResults;

File: src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -15,6 +15,7 @@
 import net.azib.ipscan.fetchers.FetcherRegistry;
 
 import javax.inject.Inject;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 import java.util.*;
 
@@ -23,6 +24,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class ScanningResultList implements Iterable<ScanningResult> {
 	
 	private static final int RESULT_LIST_INITIAL_SIZE = 1024;

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -28,6 +28,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 
 /**
@@ -36,6 +37,7 @@
  * 
  * @author Anton Keks
  */
+@Singleton
 public class StartStopScanningAction implements SelectionListener, ScanningProgressCallback, StateTransitionListener {
 	
 	private ScannerDispatcherThreadFactory scannerThreadFactory;

File: src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java
Patch:
@@ -16,6 +16,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.util.Iterator;
 import java.util.List;
 
@@ -24,6 +25,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class FeederGUIRegistry implements FeederRegistry<AbstractFeederGUI> {
 	
 	private final List<AbstractFeederGUI> feederGUIList;

File: src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -16,6 +16,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 
 import static net.azib.ipscan.config.Labels.getLabel;
 
@@ -24,6 +25,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class FileFeederGUI extends AbstractFeederGUI {
 	private Text fileNameText;
 

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -19,6 +19,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 
 import static net.azib.ipscan.config.Labels.getLabel;
 
@@ -27,6 +28,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class RandomFeederGUI extends AbstractFeederGUI {
 	private Text ipPrototypeText;
 	private Combo ipMaskCombo;

File: src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -20,6 +20,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 import java.net.InterfaceAddress;
 import java.net.UnknownHostException;
@@ -32,6 +33,7 @@
  * 
  * @author Anton Keks
  */
+@Singleton
 public class RangeFeederGUI extends AbstractFeederGUI {
 	private Text startIPText;
 	private Text endIPText;

File: src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java
Patch:
@@ -16,6 +16,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.util.Iterator;
 import java.util.List;
 
@@ -24,6 +25,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class FeederGUIRegistry implements FeederRegistry<AbstractFeederGUI> {
 	
 	private final List<AbstractFeederGUI> feederGUIList;

File: src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -16,6 +16,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 
 import static net.azib.ipscan.config.Labels.getLabel;
 
@@ -24,6 +25,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class FileFeederGUI extends AbstractFeederGUI {
 	private Text fileNameText;
 

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -19,6 +19,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 
 import static net.azib.ipscan.config.Labels.getLabel;
 
@@ -27,6 +28,7 @@
  *
  * @author Anton Keks
  */
+@Singleton
 public class RandomFeederGUI extends AbstractFeederGUI {
 	private Text ipPrototypeText;
 	private Combo ipMaskCombo;

File: src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -20,6 +20,7 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.net.InetAddress;
 import java.net.InterfaceAddress;
 import java.net.UnknownHostException;
@@ -32,6 +33,7 @@
  * 
  * @author Anton Keks
  */
+@Singleton
 public class RangeFeederGUI extends AbstractFeederGUI {
 	private Text startIPText;
 	private Text endIPText;

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -27,13 +27,15 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.util.List;
 
 /**
  * Table of scanning results.
  * 
  * @author Anton Keks
  */
+@Singleton
 public class ResultTable extends Table implements FetcherRegistryUpdateListener, StateTransitionListener {
 	
 	private ScanningResultList scanningResults;

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -27,13 +27,15 @@
 
 import javax.inject.Inject;
 import javax.inject.Named;
+import javax.inject.Singleton;
 import java.util.List;
 
 /**
  * Table of scanning results.
  * 
  * @author Anton Keks
  */
+@Singleton
 public class ResultTable extends Table implements FetcherRegistryUpdateListener, StateTransitionListener {
 	
 	private ScanningResultList scanningResults;

File: src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.core.net;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
 import org.savarese.rocksaw.net.RawSocket;
 import org.savarese.vserv.tcpip.ICMPEchoPacket;
@@ -27,7 +28,7 @@
  * @author Anton Keks
  */
 public class ICMPPinger implements Pinger {
-	private static final Logger LOG = Logger.getLogger(ICMPPinger.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 
 	private int timeout;
 	

File: src/net/azib/ipscan/core/net/ICMPSharedPinger.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.core.net;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
 import org.savarese.rocksaw.net.RawSocket;
 import org.savarese.vserv.tcpip.ICMPEchoPacket;
@@ -29,7 +30,7 @@
  * @author Anton Keks
  */
 public class ICMPSharedPinger implements Pinger {
-	static final Logger LOG = Logger.getLogger(ICMPSharedPinger.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 
 	/** a single raw socket for sending of all ICMP packets */
 	private final RawSocket sendingSocket;

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.core.net;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.config.Platform;
 import net.azib.ipscan.config.ScannerConfig;
 import net.azib.ipscan.core.ScanningSubject;
@@ -25,8 +26,7 @@
  * @author Anton Keks
  */
 public class PingerRegistry {
-	
-	private static final Logger LOG = Logger.getLogger(PingerRegistry.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 	
 	private ScannerConfig scannerConfig;
 	

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.core.net;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
 
 import java.io.IOException;
@@ -24,7 +25,7 @@
  * @author Anton Keks
  */
 public class TCPPinger implements Pinger {
-	static final Logger LOG = Logger.getLogger(TCPPinger.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 
 	// try different ports in sequence, starting with 80 (which is most probably not filtered)
 	private static final int[] PROBE_TCP_PORTS = {80, 80, 443, 8080, 22, 7};

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.core.net;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
 
 import java.io.IOException;
@@ -21,7 +22,7 @@
  * @author Anton Keks
  */
 public class UDPPinger implements Pinger {
-	static final Logger LOG = Logger.getLogger(UDPPinger.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 
 	private static final int PROBE_UDP_PORT = 37381;
 

File: src/net/azib/ipscan/fetchers/HostnameFetcher.java
Patch:
@@ -4,6 +4,7 @@
  */
 package net.azib.ipscan.fetchers;
 
+import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
 import net.azib.ipscan.util.MDNSResolver;
 import net.azib.ipscan.util.NetBIOSResolver;
@@ -25,7 +26,7 @@
  * @author Anton Keks
  */
 public class HostnameFetcher extends AbstractFetcher {
-	private static Logger LOG = Logger.getLogger(HostnameFetcher.class.getName());
+	private static final Logger LOG = LoggerFactory.getLogger();
 
 	private static Object inetAddressImpl;
 	private static Method getHostByAddr;

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -14,7 +14,6 @@
 import net.azib.ipscan.core.state.StateMachine;
 import net.azib.ipscan.core.state.StateMachine.Transition;
 import net.azib.ipscan.core.state.StateTransitionListener;
-import net.azib.ipscan.fetchers.CommentFetcher;
 import net.azib.ipscan.fetchers.Fetcher;
 import net.azib.ipscan.fetchers.FetcherRegistry;
 import net.azib.ipscan.fetchers.FetcherRegistryUpdateListener;
@@ -159,7 +158,7 @@ public void updateResults() {
 	 * @param newValue
 	 */
 	public void updateResult(int index, String fetcherId, Object newValue) {
-		int fetcherIndex = fetcherRegistry.getSelectedFetcherIndex(CommentFetcher.ID);
+		int fetcherIndex = fetcherRegistry.getSelectedFetcherIndex(fetcherId);
 		if (fetcherIndex >= 0) {
 			// update the value in the results
 			scanningResults.getResult(index).setValue(fetcherIndex, newValue);

File: src/net/azib/ipscan/gui/InfoDialog.java
Patch:
@@ -48,7 +48,7 @@ protected void populateShell() {
 
 		Text statsText = new Text(shell, SWT.MULTI | SWT.READ_ONLY);
 		statsText.setBackground(shell.getBackground());
-		statsText.setLayoutData(formData(250, -1, new FormAttachment(iconLabel), new FormAttachment(100), new FormAttachment(titleLabel), null));
+		statsText.setLayoutData(formData(new FormAttachment(iconLabel), new FormAttachment(100), new FormAttachment(titleLabel), null));
 		statsText.setText(message);
 		statsText.pack();
 

File: src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java
Patch:
@@ -32,6 +32,7 @@ public abstract class AbstractFeederGUI extends Composite implements FeederCreat
 	public AbstractFeederGUI(Composite parent) {
 		super(parent, SWT.NONE);
 		setVisible(false);
+		initialize();
 	}
 
 	public abstract void initialize();

File: test/net/azib/ipscan/fetchers/FetcherRegistryTest.java
Patch:
@@ -36,7 +36,7 @@ public void setUp() throws Exception {
 		
 		ipFetcher = new IPFetcher();
 		pingFetcher = new PingFetcher(null, null);
-		hostnameFetcher = new HostnameFetcher(null);
+		hostnameFetcher = new HostnameFetcher();
 		commentFetcher = new CommentFetcher(null);
 		portsFetcher = new PortsFetcher(null);
 		fetcherRegistry = new FetcherRegistry(new Fetcher[] {ipFetcher, pingFetcher, hostnameFetcher, commentFetcher, portsFetcher}, preferences, null);

File: test/net/azib/ipscan/fetchers/HostnameFetcherTest.java
Patch:
@@ -3,7 +3,6 @@
  */
 package net.azib.ipscan.fetchers;
 
-import net.azib.ipscan.config.ScannerConfig;
 import net.azib.ipscan.core.ScanningSubject;
 import org.junit.Before;
 import org.junit.Test;
@@ -13,7 +12,6 @@
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
-import static org.mockito.Mockito.mock;
 
 /**
  * HostnameFetcherTest
@@ -24,7 +22,7 @@ public class HostnameFetcherTest extends AbstractFetcherTestCase {
 
 	@Before
 	public void setUp() throws Exception {
-		fetcher = new HostnameFetcher(mock(ScannerConfig.class));
+		fetcher = new HostnameFetcher();
 	}
 	
 	@Test

File: src/net/azib/ipscan/Main.java
Patch:
@@ -93,6 +93,7 @@ public static void main(String... args) {
 		}
 		catch (UnsatisfiedLinkError e) {
 			JOptionPane.showMessageDialog(null, "Failed to load native code. Probably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
+			e.printStackTrace();
 		}
 		catch (Throwable e) {
 			JOptionPane.showMessageDialog(null, e + "\nPlease submit a bug report mentioning your OS and what were you doing.");

File: test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java
Patch:
@@ -7,14 +7,14 @@
 
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.feeders.Feeder;
-
 import org.eclipse.swt.widgets.Combo;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.swt.widgets.TableItem;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+
 import static org.junit.Assert.*;
 import static org.mockito.Mockito.*;
 
@@ -37,6 +37,7 @@ public void createRegistry() {
 		feederSelectionCombo = mock(Combo.class);
 		
 		feederGUI = new RangeFeederGUI(parent);
+		feederGUI.initialize();
 		registry = new FeederGUIRegistry(new AbstractFeederGUI[] {feederGUI}, feederSelectionCombo, null);
 	}
 	

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -68,7 +68,7 @@ private void createMainMenuItems(Menu menu) {
 		Menu subMenu = initMenu(menu, "menu.scan");
 //		initMenuItem(subMenu, "menu.scan.newWindow", "Ctrl+N", new Integer(SWT.MOD1 | 'N'), initListener(FileActions.NewWindow.class));
 //		initMenuItem(subMenu, null, null, null, null);
-		initMenuItem(subMenu, "menu.scan.load", "", SWT.MOD1 | 'S', initListener(ScanMenuActions.LoadFromFile.class), false);
+		initMenuItem(subMenu, "menu.scan.load", "", SWT.MOD1 | 'O', initListener(ScanMenuActions.LoadFromFile.class), false);
 		initMenuItem(subMenu, "menu.scan.exportAll", "Ctrl+S", SWT.MOD1 | 'S', initListener(ScanMenuActions.SaveAll.class), false);
 		initMenuItem(subMenu, "menu.scan.exportSelection", null, null, initListener(ScanMenuActions.SaveSelection.class), false);
 //		initMenuItem(subMenu, null, null, null, null);
@@ -96,7 +96,7 @@ private void createMainMenuItems(Menu menu) {
 		createFavoritesMenu(menu);
 		
 		subMenu = initMenu(menu, "menu.tools");
-		initMenuItem(subMenu, "menu.tools.preferences", "Ctrl+O", SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O'), initListener(ToolsActions.Preferences.class), true);
+		initMenuItem(subMenu, "menu.tools.preferences", "Ctrl+Shift+P", SWT.MOD1 | (Platform.MAC_OS ? ',' : SWT.MOD2 | 'P'), initListener(ToolsActions.Preferences.class), true);
 		initMenuItem(subMenu, "menu.tools.fetchers", "Ctrl+Shift+O", SWT.MOD1 | SWT.MOD2 | (Platform.MAC_OS ? ',' : 'O'), initListener(ToolsActions.ChooseFetchers.class), true);
 		initMenuItem(subMenu, null, null, null, null);
 		Menu selectMenu = initMenu(subMenu, "menu.tools.select");

File: src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java
Patch:
@@ -35,10 +35,9 @@ public AbstractFeederGUI(Composite parent) {
 		super(parent, SWT.NONE);
 		setVisible(false);
 		setLayout(formLayout(7, 3, 3));
-		initialize();
 	}
 
-	protected abstract void initialize();
+	public abstract void initialize(int rowHeight);
 		
 	/**
 	 * @return the feeder id

File: test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java
Patch:
@@ -3,15 +3,15 @@
  */
 package net.azib.ipscan.gui.feeders;
 
-import static org.junit.Assert.assertEquals;
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.feeders.Feeder;
 import net.azib.ipscan.feeders.RangeFeeder;
-
 import org.eclipse.swt.widgets.Shell;
 import org.junit.Before;
 import org.junit.Test;
 
+import static org.junit.Assert.assertEquals;
+
 /**
  * AbstractFeederGUITest
  *
@@ -24,7 +24,7 @@ public class AbstractFeederGUITest {
 	@Before
 	public void setUp() throws Exception {
 		feederGUI = new AbstractFeederGUI(new Shell()) {
-			protected void initialize() {
+			public void initialize(int rowHeight) {
 			}
 			public String getFeederName() {
 				return "Mega Feeder";

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -27,7 +27,7 @@ public class Version {
 
 	public static final String FULL_LICENSE_URL = "http://www.gnu.org/licenses/gpl-2.0.html";
 
-	public static final String PLUGINS_URL = WEBSITE + "/faq/plugins.html";
+	public static final String PLUGINS_URL = WEBSITE + "/contribute/plugins.html";
 	
 	public static final String DOWNLOAD_URL = WEBSITE + "/download/";
 

File: src/net/azib/ipscan/gui/PreferencesDialog.java
Patch:
@@ -304,10 +304,10 @@ private void createDisplayTab() {
 		
 		label = new Label(languageGroup, SWT.NONE);
 		label.setText(Labels.getLabel("preferences.language"));
+
 		languageCombo = new Combo(languageGroup, SWT.DROP_DOWN | SWT.READ_ONLY);
-		languageCombo.setLayoutData(gridData);
-		for (int i = 0; i < languages.length; i++) {
-			languageCombo.add(Labels.getLabel("language." + languages[i]));
+		for (String language : languages) {
+			languageCombo.add(Labels.getLabel("language." + language));
 		}
 		languageCombo.select(0);
 	}

File: src/net/azib/ipscan/gui/AboutDialog.java
Patch:
@@ -4,6 +4,7 @@
 package net.azib.ipscan.gui;
 
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.config.Platform;
 import net.azib.ipscan.config.Version;
 import net.azib.ipscan.gui.actions.BrowserLauncher;
 import org.eclipse.swt.SWT;
@@ -24,7 +25,7 @@ public class AboutDialog extends AbstractModalDialog {
 	protected void populateShell() {
 		shell.setText(Labels.getLabel("title.about"));
 		shell.setSize(new Point(400, 393));
-		
+
 		Label iconLabel = new Label(shell, SWT.ICON);
 		iconLabel.setLocation(10, 10);
 		if (shell.getImage() != null) {
@@ -59,7 +60,7 @@ protected void populateShell() {
 		Text licenseText = new Text(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.WRAP);
 		licenseText.setBounds(leftBound, systemLabel.getBounds().y + systemLabel.getBounds().height + 10, 
 							  shell.getClientArea().width - leftBound - 10, 
-							  button.getLocation().y - systemLabel.getBounds().y - systemLabel.getBounds().height - 20);
+							  button.getLocation().y - systemLabel.getBounds().y - systemLabel.getBounds().height - (Platform.MAC_OS ? 40 : 20));
 		licenseText.setBackground(shell.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
 		licenseText.setText("Licensed under the GNU General Public License Version 2\n\n" +
 							NAME + " is free software; you can redistribute it and/or " +

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -18,7 +18,7 @@ public class Version {
 	
 	public static final String COPYLEFT = "© 2014 Anton Keks";
 	
-	public static final String WEBSITE = "http://angryip.org/";
+	public static final String WEBSITE = "http://angryip.org";
 	
 	public static final String MAILTO = "support@azib.net";
 
@@ -32,7 +32,7 @@ public class Version {
 	
 	public static final String DOWNLOAD_URL = WEBSITE + "/download/";
 
-	public static final String LATEST_VERSION_URL = WEBSITE + "ipscan/IPSCAN.VERSION";
+	public static final String LATEST_VERSION_URL = WEBSITE + "/ipscan/IPSCAN.VERSION";
 	
 	private static String version;
 	private static String buildDate;

File: src/net/azib/ipscan/config/Version.java
Patch:
@@ -58,7 +58,7 @@ public static String getBuildDate() {
 	}
 
 	private static void loadVersionFromJar() {
-		String path = Version.class.getClassLoader().getResource(Version.class.getName().replace('.', '/') + ".class").toString();
+		String path = Version.class.getProtectionDomain().getCodeSource().getLocation().toString();
 		if (path.startsWith("jar:file:")) {
 			path = path.substring(4, path.indexOf('!'));
 			try {

File: src/net/azib/ipscan/gui/actions/FeederActions.java
Patch:
@@ -97,8 +97,9 @@ public void handleEvent(Event event) {
 				for (Enumeration<NetworkInterface> i = NetworkInterface.getNetworkInterfaces(); i.hasMoreElements(); ) {
 					NetworkInterface networkInterface = i.nextElement();
 					for (InterfaceAddress ifaddr : networkInterface.getInterfaceAddresses()) {
+						if (ifaddr == null) continue;
                         InetAddress address = ifaddr.getAddress();
-                        if (!address.isLoopbackAddress() && address instanceof Inet4Address) {
+                        if (address instanceof Inet4Address && !address.isLoopbackAddress()) {
 							MenuItem menuItem = new MenuItem(popupMenu, 0);
 							menuItem.setText(networkInterface.getDisplayName() + ": " + address.getHostAddress());
 							menuItem.setData(address.getHostAddress() + "/" + ifaddr.getNetworkPrefixLength());

File: src/net/azib/ipscan/Main.java
Patch:
@@ -93,7 +93,7 @@ public static void main(String... args) {
 			display.dispose();
 		}
 		catch (UnsatisfiedLinkError e) {
-			JOptionPane.showMessageDialog(null, "Failed to load native code. Probably you are using a binary built for wrong OS or CPU - try downloading both 32-bit and 64-bit binaries");
+			JOptionPane.showMessageDialog(null, "Failed to load native code. Probably you are using a binary built for wrong OS or CPU. If 64-bit binary doesn't work for you, try 32-bit version, or vice versa.");
 		}
 		catch (Throwable e) {
 			JOptionPane.showMessageDialog(null, e + "\nPlease submit a bug report mentioning your OS and what were you doing.");

File: src/net/azib/ipscan/core/net/WindowsPinger.java
Patch:
@@ -42,9 +42,10 @@ public PingResult ping(ScanningSubject subject, int count) throws IOException {
 		IpAddrByVal ipaddr = new IpAddrByVal();
 		ipaddr.bytes = subject.getAddress().getAddress();
 
-		int sendDataSize = 16;
-		int replyDataSize = sendDataSize + (new IcmpEchoReply().size());
+		int sendDataSize = 56;
+		int replyDataSize = sendDataSize + (new IcmpEchoReply().size()) + 10;
 		Pointer sendData = new Memory(sendDataSize);
+		sendData.clear(sendDataSize);
 		Pointer replyData = new Memory(replyDataSize);
 
 		PingResult result = new PingResult(subject.getAddress());

File: src/net/azib/ipscan/core/net/WindowsPinger.java
Patch:
@@ -13,6 +13,7 @@
 
 import java.io.IOException;
 import java.net.InetAddress;
+import java.util.Arrays;
 
 import static java.lang.Thread.currentThread;
 
@@ -51,7 +52,7 @@ public PingResult ping(ScanningSubject subject, int count) throws IOException {
 			for (int i = 1; i <= count && !currentThread().isInterrupted(); i++) {
 				int numReplies = dll.IcmpSendEcho(handle, ipaddr, sendData, (short) sendDataSize, null, replyData, replyDataSize, timeout);
 				IcmpEchoReply echoReply = new IcmpEchoReply(replyData);
-				if (numReplies > 0 && echoReply.status == 0) {
+				if (numReplies > 0 && echoReply.status == 0 && Arrays.equals(echoReply.address.bytes, ipaddr.bytes)) {
 					result.addReply(echoReply.roundTripTime);
 					result.setTTL(echoReply.options.ttl & 0xFF);
 				}

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -17,7 +17,7 @@
 import java.util.Map;
 import java.util.logging.Logger;
 
-import static java.util.logging.Level.*;
+import static java.util.logging.Level.SEVERE;
 
 /**
  * PingerRegistry
@@ -87,7 +87,7 @@ public boolean checkSelectedPinger() {
 				Pinger icmpPinger = createPinger(scannerConfig.selectedPinger, 250);
 				icmpPinger.ping(new ScanningSubject(InetAddress.getLocalHost()), 1);
 			}
-			catch (Exception e) {
+			catch (Throwable e) {
 				LOG.info("ICMP pinger failed: " + e);
 				// win32 will use native pinger, all others get combined UDP+TCP, which doesn't require special privileges
 				scannerConfig.selectedPinger = Platform.WINDOWS && !Platform.ARCH_64 ? "pinger.windows" : "pinger.combined";

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -32,8 +32,7 @@ public class TCPPinger implements Pinger {
   private int timeout;
 
   public TCPPinger(int timeout) {
-		// use increased timeout, because TCP connect() produces more packets (roundtrips)
-		this.timeout = timeout + timeout/2;
+		this.timeout = timeout;
 	}
 
 	public PingResult ping(ScanningSubject subject, int count) throws IOException {

File: src/net/azib/ipscan/Main.java
Patch:
@@ -10,7 +10,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import com.sun.java.swing.plaf.nimbus.OptionPanePainter;
 import net.azib.ipscan.config.CommandLineProcessor;
 import net.azib.ipscan.config.ComponentRegistry;
 import net.azib.ipscan.config.Config;
@@ -41,7 +40,6 @@
  * @author Anton Keks
  */
 public class Main {
-	
 	static final Logger LOG = LoggerFactory.getLogger();
 
 	/**
@@ -57,7 +55,7 @@ public static void main(String... args) {
 		long startTime = System.currentTimeMillis();
 				
 		initSystemProperties();
-        Display display = null;
+        Display display;
 
         try {
             // this defines the Window class and app name on the Mac

File: src-platform/linux/net/azib/ipscan/platform/swt/DisplayExt.java
Patch:
@@ -19,6 +19,8 @@
  * @author Anton Keks
  */
 public class DisplayExt extends Display {
+	public static final int GTK_ICON_SIZE_BUTTON = OS.GTK_ICON_SIZE_LARGE_TOOLBAR+1;
+
 	@SuppressWarnings("static-access")
 	public static Image createImage(String name, int size) {
 		// copy-paste from Display.createImage() follows, with replaced GTK_ICON_SIZE_MENU

File: src-platform/linux64/net/azib/ipscan/platform/swt/DisplayExt.java
Patch:
@@ -19,6 +19,8 @@
  * @author Anton Keks
  */
 public class DisplayExt extends Display {
+	public static final int GTK_ICON_SIZE_BUTTON = OS.GTK_ICON_SIZE_LARGE_TOOLBAR+1;
+
 	@SuppressWarnings("static-access")
 	public static Image createImage(String name, int size) {
 		// copy-paste from Display.createImage() follows, with replaced GTK_ICON_SIZE_MENU

File: src/net/azib/ipscan/gui/MainWindow.java
Patch:
@@ -189,7 +189,7 @@ private void initControlsArea(final Composite controlsArea, final Combo feederSe
 		// this results in better visual alignment with FeederGUIs
 		Control secondControl = feederRegistry.current().getChildren()[1];
 		// initialize global standard button height
-		buttonHeight = Platform.MAC_OS ? SWT.DEFAULT : secondControl.getSize().y + 2;
+		buttonHeight = secondControl.getSize().y + 2;
 				
 		// feeder selection combobox
 		this.feederSelectionCombo = feederSelectionCombo;
@@ -230,12 +230,12 @@ private void relayoutControls() {
 		
 		feederSelectionCombo.setLayoutData(LayoutHelper.formData(SWT.DEFAULT, buttonHeight, new FormAttachment(0), null, new FormAttachment(0), null));
 		if (twoRowToolbar) {
-			startStopButton.setLayoutData(LayoutHelper.formData(feederSelectionCombo.getSize().x, buttonHeight, new FormAttachment(0), null, new FormAttachment(feederSelectionCombo, 0), null));
+			startStopButton.setLayoutData(LayoutHelper.formData(feederSelectionCombo.getSize().x, Platform.MAC_OS ? SWT.DEFAULT : buttonHeight, new FormAttachment(0), null, new FormAttachment(feederSelectionCombo, 0), null));
 			prefsButton.setLayoutData(LayoutHelper.formData(new FormAttachment(feederSelectionCombo), null, new FormAttachment(feederSelectionCombo, 0, SWT.CENTER), null));
 			fetchersButton.setLayoutData(LayoutHelper.formData(new FormAttachment(startStopButton), null, new FormAttachment(startStopButton, 0, SWT.CENTER), null));
 		}
 		else {
-			startStopButton.setLayoutData(LayoutHelper.formData(feederSelectionCombo.getSize().x, buttonHeight, new FormAttachment(feederSelectionCombo), null, new FormAttachment(-1), null));
+			startStopButton.setLayoutData(LayoutHelper.formData(feederSelectionCombo.getSize().x, Platform.MAC_OS ? SWT.DEFAULT : buttonHeight, new FormAttachment(feederSelectionCombo), null, new FormAttachment(-1), null));
 			prefsButton.setLayoutData(LayoutHelper.formData(new FormAttachment(startStopButton), null, new FormAttachment(feederSelectionCombo, 0, SWT.CENTER), null));
 			fetchersButton.setLayoutData(LayoutHelper.formData(new FormAttachment(prefsButton), null, new FormAttachment(startStopButton, 0, SWT.CENTER), null));
 		}

File: src/net/azib/ipscan/swt/GTKHelper.java
Patch:
@@ -11,7 +11,6 @@
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Image;
-import org.eclipse.swt.internal.gtk.OS;
 import org.eclipse.swt.widgets.Button;
 
 /**
@@ -20,7 +19,6 @@
  * @author Anton Keks
  */
 class GTKHelper {
-	public static final int GTK_ICON_SIZE_BUTTON = OS.GTK_ICON_SIZE_LARGE_TOOLBAR+1;
 
 	/**
 	 * Sets the stock icon to the specified widget
@@ -51,7 +49,7 @@ public static void setStockIconFor(Button button, int iconConstant) {
 			// use reflection to avoid compile-time dependency on other platforms
 			Class<?> displayExt = Class.forName("net.azib.ipscan.platform.swt.DisplayExt");
 			Method createImage = displayExt.getDeclaredMethod("createImage", String.class, int.class);
-			Image icon = (Image) createImage.invoke(null, name, GTK_ICON_SIZE_BUTTON);
+			Image icon = (Image) createImage.invoke(null, name, displayExt.getField("GTK_ICON_SIZE_BUTTON").get(null));
 			if (icon != null) {
 				button.setImage(icon);
 			}

File: src-platform/linux/net/azib/ipscan/platform/swt/DisplayExt.java
Patch:
@@ -19,8 +19,6 @@
  * @author Anton Keks
  */
 public class DisplayExt extends Display {
-	public static final int GTK_ICON_SIZE_BUTTON = OS.GTK_ICON_SIZE_LARGE_TOOLBAR+1;
-	
 	@SuppressWarnings("static-access")
 	public static Image createImage(String name, int size) {
 		// copy-paste from Display.createImage() follows, with replaced GTK_ICON_SIZE_MENU

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -188,7 +188,7 @@ public void remove(int[] indices) {
 		// we need to remove the elements from our real storage as well
 		scanningResults.remove(indices);
 		super.remove(indices);
-		// TODO: this is VERY slow if there a lot of items (eg 300k), due to the Control.sort() that is called inside to sort the indices
+		// TODO: this is VERY slow if there are a lot of items (eg 300k), due to the Control.sort() that is called inside to sort the indices
 	}
 	
 	public void removeAll() {

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -103,7 +103,7 @@ protected void initialize() {
 		ipUpButton.setLayoutData(LayoutHelper.formData(new FormAttachment(hostnameText), null, new FormAttachment(ipPrototypeText), !Platform.MAC_OS ? new FormAttachment(hostnameText, 1, SWT.BOTTOM) : null));
 		
 		countLabel.setText(Labels.getLabel("feeder.random.count"));
-		countLabel.setLayoutData(LayoutHelper.formData(new FormAttachment(ipUpButton, 3), null, new FormAttachment(hostnameLabel, 0, SWT.TOP), null));
+		countLabel.setLayoutData(LayoutHelper.formData(new FormAttachment(ipUpButton, 3), null, new FormAttachment(ipUpButton, 0, SWT.CENTER), null));
 		
 		countSpinner.setSelection(100);
 		countSpinner.setMaximum(100000);

File: src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -8,7 +8,7 @@
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.config.Platform;
 import net.azib.ipscan.gui.util.LayoutHelper;
-import net.azib.ipscan.platform.SWTHelper;
+import net.azib.ipscan.swt.SWTHelper;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Image;

File: src/net/azib/ipscan/gui/GettingStartedDialog.java
Patch:
@@ -4,7 +4,7 @@
 package net.azib.ipscan.gui;
 
 import net.azib.ipscan.config.Labels;
-import net.azib.ipscan.platform.SWTHelper;
+import net.azib.ipscan.swt.SWTHelper;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Point;

File: src/net/azib/ipscan/gui/InputDialog.java
Patch:
@@ -7,7 +7,7 @@
 
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.gui.util.LayoutHelper;
-import net.azib.ipscan.platform.SWTHelper;
+import net.azib.ipscan.swt.SWTHelper;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.FormAttachment;

File: src/net/azib/ipscan/gui/actions/GotoMenuActions.java
Patch:
@@ -12,7 +12,7 @@
 import net.azib.ipscan.gui.InputDialog;
 import net.azib.ipscan.gui.ResultTable;
 import net.azib.ipscan.gui.StatusBar;
-import net.azib.ipscan.platform.SWTHelper;
+import net.azib.ipscan.swt.SWTHelper;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.widgets.Event;

File: src/net/azib/ipscan/swt/SWTHelper.java
Patch:
@@ -4,7 +4,7 @@
  * Licensed under GPLv2.
  */
 
-package net.azib.ipscan.platform;
+package net.azib.ipscan.swt;
 
 import net.azib.ipscan.config.Platform;
 
@@ -30,7 +30,7 @@ public static void setStockIconFor(Button button, int iconConstant) {
 			return;
 		
 		if (Platform.LINUX) {
-			net.azib.ipscan.platform.linux.GTKHelper.setStockIconFor(button, iconConstant);
+			GTKHelper.setStockIconFor(button, iconConstant);
 		}
 	}
 }

File: src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -99,7 +99,7 @@ private static void detectWorkingTerminal() throws InterruptedException, IOExcep
 			workingTerminal = GNOME;
 		}
 		else
-		if (Runtime.getRuntime().exec(new String[] {"pidof", "xfce4-session xfwm4 Thunar xfdesktop"}).waitFor() == 0) {
+		if (Runtime.getRuntime().exec(new String[] {"pidof", "xfce4-session", "xfwm4", "Thunar", "xfdesktop"}).waitFor() == 0) {
 			workingTerminal = XFCE;
 		}
 		else

File: src/net/azib/ipscan/core/ScanningSubject.java
Patch:
@@ -49,7 +49,7 @@ public class ScanningSubject {
 	 */
 	public ScanningSubject(InetAddress address) {
 		this.address = address;
-		this.parameters = new HashMap<String, Object>();
+		this.parameters = new HashMap<String, Object>(); // single-threaded access only
 		this.config = Config.getConfig().forScanner();
 	}
 	

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -135,8 +135,7 @@ public ComponentRegistry() {
 			new ComponentParameter("controlsArea"),
 			new ConstantParameter(new Integer(SWT.NONE))});
 		container.registerComponentImplementation("feederSelectionCombo", FeederSelectionCombo.class, new Parameter[] {
-			new ComponentParameter("controlsArea"),
-			anyComponentParameter});		
+			new ComponentParameter("controlsArea")});		
 		
 		// GUI Feeders
 		container.registerComponentImplementation(FeederGUIRegistry.class);

File: src/net/azib/ipscan/config/GUIConfig.java
Patch:
@@ -36,9 +36,6 @@ public class GUIConfig {
 	
 	public Point detailsWindowSize;
 	
-	/** this one is not saved, just a globally accessed parameter */
-	public int standardButtonHeight = 22;
-	
 	public static enum DisplayMethod {ALL, ALIVE, PORTS}
 
 	// package local constructor

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -6,6 +6,7 @@
 package net.azib.ipscan.gui.feeders;
 
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.config.Platform;
 import net.azib.ipscan.feeders.Feeder;
 import net.azib.ipscan.feeders.RandomFeeder;
 import net.azib.ipscan.gui.actions.FeederActions;
@@ -99,7 +100,7 @@ protected void initialize() {
 		ipUpButton.setImage(new Image(getDisplay(), Labels.getInstance().getImageAsStream("button.ipUp.img")));
 		ipUpButton.setText(Labels.getLabel("button.ipUp"));
 		ipUpButton.addSelectionListener(hostnameSelectionListener);
-		ipUpButton.setLayoutData(LayoutHelper.formData(new FormAttachment(hostnameText), null, new FormAttachment(ipPrototypeText), new FormAttachment(hostnameText, 1, SWT.BOTTOM)));
+		ipUpButton.setLayoutData(LayoutHelper.formData(new FormAttachment(hostnameText), null, new FormAttachment(ipPrototypeText), !Platform.MAC_OS ? new FormAttachment(hostnameText, 1, SWT.BOTTOM) : null));
 		
 		countLabel.setText(getStringLabel("count"));
 		countLabel.setLayoutData(LayoutHelper.formData(new FormAttachment(ipUpButton, 3), null, new FormAttachment(hostnameLabel, 0, SWT.TOP), null));

File: src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -9,6 +9,7 @@
 import java.net.UnknownHostException;
 
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.config.Platform;
 import net.azib.ipscan.feeders.Feeder;
 import net.azib.ipscan.feeders.FeederException;
 import net.azib.ipscan.feeders.RangeFeeder;
@@ -114,7 +115,7 @@ public void widgetSelected(SelectionEvent event) {
 		ipUpButton.setImage(new Image(getDisplay(), Labels.getInstance().getImageAsStream("button.ipUp.img")));
 		ipUpButton.setText(Labels.getLabel("button.ipUp"));
 		ipUpButton.addSelectionListener(hostnameListener);
-		ipUpButton.setLayoutData(LayoutHelper.formData(new FormAttachment(hostnameText), null, new FormAttachment(endIPText), new FormAttachment(hostnameText, 1, SWT.BOTTOM)));
+		ipUpButton.setLayoutData(LayoutHelper.formData(new FormAttachment(hostnameText), null, new FormAttachment(endIPText), !Platform.MAC_OS ? new FormAttachment(hostnameText, 1, SWT.BOTTOM) : null));
         
         netmaskCombo.setText(getStringLabel("netmask"));
 		netmaskCombo.setVisibleItemCount(10);

File: test/net/azib/ipscan/config/LabelsTest.java
Patch:
@@ -82,7 +82,7 @@ public void testAllLabels() throws IOException {
 	}
 	
 	public static File findBaseDir() {
-		URL url = LabelsTest.class.getClassLoader().getResource("Labels.txt");
+		URL url = LabelsTest.class.getClassLoader().getResource("messages.properties");
 		return new File(url.getPath()).getParentFile().getParentFile();	
 	}
 
@@ -102,7 +102,7 @@ private void recurseAndTestLabels(File dir) throws IOException {
 
 	private void findAndTestLabels(File file) throws IOException {
 		// TODO: tune these regexps
-		final Pattern LABELS_REGEX = Pattern.compile("Label.{1,60}\"([a-z]\\w+?\\.[a-z][\\w.]+?\\w)\"");
+		final Pattern LABELS_REGEX = Pattern.compile("Label.get{1,60}\"([a-z]\\w+?\\.[a-z][\\w.]+?\\w)\"");
 		final Pattern EXCEPTION_REGEX = Pattern.compile("new\\s+?(\\w+?Exception)\\(\"([\\w.]+?\\w)\"");
 		
 		BufferedReader fileReader = new BufferedReader(new FileReader(file));

File: test/net/azib/ipscan/gui/SelectFetchersDialogTest.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class SelectFetchersDialogTest {
 
-	@Test @SuppressWarnings("unchecked")
+	@Test
 	public void testSaveFetchersToRegistry() {
 		FetcherRegistry fetcherRegistry = createMock(FetcherRegistry.class);
 		fetcherRegistry.updateSelectedFetchers(aryEq(new String[] {"fetcher.ip", "fetcher.blah", "fetcher.hello"}));

File: test/net/azib/ipscan/gui/StatisticsDialogTest.java
Patch:
@@ -30,7 +30,7 @@
 public class StatisticsDialogTest {
 	
 	@Test
-	public void testTimeToText() throws Exception {
+	public void timeToText() throws Exception {
 		Labels.initialize(new Locale("en")); 
 		assertEquals("0\u00A0sec", StatisticsDialog.timeToText(0));
 		assertEquals("0.5\u00A0sec", StatisticsDialog.timeToText(499));
@@ -43,7 +43,7 @@ public void testTimeToText() throws Exception {
 	}
 	
 	@Test
-	public void testname() throws Exception {
+	public void dialogContent() throws Exception {
 		ScanningResultList results = createMock(ScanningResultList.class);
 		ScanInfo scanInfo = new ScanInfo() {
 			{
@@ -60,7 +60,7 @@ public void testname() throws Exception {
 		expect(results.getFeederInfo()).andReturn("SomeInfoHere");
 		replay(results);
 		
-		String text = new StatisticsDialog(results).getMessage();
+		String text = new StatisticsDialog(results).prepareText();
 		
 		assertNotNull(text);
 		assertTrue(text.contains(Labels.getLabel("text.scan.time.total") + "10"));

File: src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -78,7 +78,7 @@ protected final void createShell() {
 		if (parent != null) {
 			icon = parent.getImage();
 		}
-		else {
+		if (icon == null) {
 			icon = new Image(shell.getDisplay(), Labels.getInstance().getImageAsStream("icon"));
 		}
 		shell.setImage(icon);

File: src/net/azib/ipscan/util/InetAddressUtils.java
Patch:
@@ -5,6 +5,7 @@
  */
 package net.azib.ipscan.util;
 
+import java.net.Inet4Address;
 import java.net.InetAddress;
 import java.net.NetworkInterface;
 import java.net.SocketException;
@@ -166,7 +167,7 @@ public static InetAddress getAddressByName(String hostname) throws UnknownHostEx
 					NetworkInterface networkInterface = i.nextElement();
 					for (Enumeration<InetAddress> i2 = networkInterface.getInetAddresses(); i2.hasMoreElements();) {
 						InetAddress currentAddress = i2.nextElement();
-						if (!currentAddress.isLoopbackAddress()) {
+						if (!currentAddress.isLoopbackAddress() && currentAddress instanceof Inet4Address) {
 							address = currentAddress;
 							break outer;
 						}

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -79,8 +79,8 @@ private void createMainMenuItems(Menu menu) {
 		Menu subMenu = initMenu(menu, "menu.file");
 //		initMenuItem(subMenu, "menu.file.newWindow", "Ctrl+N", new Integer(SWT.MOD1 | 'N'), initListener(FileActions.NewWindow.class));
 //		initMenuItem(subMenu, null, null, null, null);
-		initMenuItem(subMenu, "menu.file.exportAll", "Ctrl+S", new Integer(SWT.MOD1 | 'S'), initListener(FileActions.SaveAll.class), true);
-		initMenuItem(subMenu, "menu.file.exportSelection", null, null, initListener(FileActions.SaveSelection.class), true);
+		initMenuItem(subMenu, "menu.file.exportAll", "Ctrl+S", new Integer(SWT.MOD1 | 'S'), initListener(FileActions.SaveAll.class), false);
+		initMenuItem(subMenu, "menu.file.exportSelection", null, null, initListener(FileActions.SaveSelection.class), false);
 		initMenuItem(subMenu, null, null, null, null);
 		initMenuItem(subMenu, "menu.file.exportPreferences", null, null, null);
 		initMenuItem(subMenu, "menu.file.importPreferences", null, null, null);

File: src/net/azib/ipscan/config/ScannerConfig.java
Patch:
@@ -42,7 +42,7 @@ public class ScannerConfig {
 		maxThreads = preferences.getInt("maxThreads", Platform.CRIPPLED_WINDOWS ? 10 : 100);
 		threadDelay = preferences.getInt("threadDelay", 20);
 		scanDeadHosts = preferences.getBoolean("scanDeadHosts", false);
-		selectedPinger = preferences.get("selectedPinger", "pinger.icmp");
+		selectedPinger = preferences.get("selectedPinger", Platform.WINDOWS ? "pinger.windows" : "pinger.icmp");
 		pingTimeout = preferences.getInt("pingTimeout", 2000);
 		pingCount = preferences.getInt("pingCount", 3);
 		skipBroadcastAddresses = preferences.getBoolean("skipBroadcastAddresses", true);

File: src/net/azib/ipscan/exporters/XMLExporter.java
Patch:
@@ -73,7 +73,7 @@ public void end() throws IOException {
 	}
 
 	public void setFetchers(String[] fetcherNames) throws IOException {
-		ipFetcherIndex = IPListExporter.findFetcherByLabel("fetcher.ip", fetcherNames);
+		ipFetcherIndex = IPListExporter.findFetcherById("fetcher.ip", fetcherNames);
 		this.fetcherNames = fetcherNames;
 	}
 

File: src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -30,7 +30,7 @@
  */
 public class PortsFetcher extends AbstractFetcher {
 	
-	static final String ID = "fetcher.ports";
+	public static final String ID = "fetcher.ports";
 	
 	private static final String PARAMETER_OPEN_PORTS = "openPorts";
 	private static final String PARAMETER_FILTERED_PORTS = "filteredPorts";

File: test/net/azib/ipscan/exporters/AbstractExporterTestCase.java
Patch:
@@ -11,6 +11,8 @@
 import java.net.InetAddress;
 
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.fetchers.IPFetcher;
+import net.azib.ipscan.fetchers.PortsFetcher;
 import junit.framework.ComparisonFailure;
 
 import org.junit.Before;
@@ -118,7 +120,7 @@ public void testClone() throws CloneNotSupportedException {
 	@Test
 	public void testNextAddressResultsWithNulls() throws IOException {
 		exporter.start(outputStream, "feederstuff");
-		exporter.setFetchers(new String[] {"IP", "fetcher1", "mega long fetcher 2"});
+		exporter.setFetchers(new String[] {Labels.getLabel(IPFetcher.ID), "fetcher1", Labels.getLabel(PortsFetcher.ID)});
 		exporter.nextAdressResults(new Object[] {InetAddress.getLocalHost(), null, null});
 		exporter.end();
 	}

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -25,15 +25,15 @@ public OpenersConfig(Preferences preferences) {
 			Labels labels = Labels.getInstance();
 			// add default openers
 			if (Platform.WINDOWS) add(labels.get("opener.netbios"), new Opener("\\\\${fetcher.ip}", false, null));
-			add(labels.get("opener.web"), new Opener("http://${fetcher.ip}/", false, null));			
-			add(labels.get("opener.ftp"), new Opener("ftp://${fetcher.ip}/", false, null));
+			add(labels.get("opener.web"), new Opener("http://${fetcher.hostname}/", false, null));			
+			add(labels.get("opener.ftp"), new Opener("ftp://${fetcher.hostname}/", false, null));
 			add(labels.get("opener.telnet"), new Opener("telnet ${fetcher.ip}", true, null));
 			add(labels.get("opener.ping"), new Opener("ping ${fetcher.ip}", true, null));
 			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.ssh"), new Opener("ssh ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.whois"), new Opener("whois ${fetcher.ip}", true, null));
 			add(labels.get("opener.geolocate"), new Opener("http://www.azib.net/iplocate.php?ip=${fetcher.ip}", false, null));
-			add(labels.get("opener.email"), new Opener("mailto:somebody@example.com?subject=IP: ${fetcher.ip}", true, null));
+			add(labels.get("opener.email"), new Opener("mailto:somebody@example.com?subject=${fetcher.ip} (${fetcher.hostname})", true, null));
 		}
 	}
 	

File: src/net/azib/ipscan/core/values/InetAddressHolder.java
Patch:
@@ -9,7 +9,7 @@
 import java.net.InetAddress;
 
 /**
- * InetAddressValue - a comparable holder of IP addresses
+ * InetAddressHolder - a comparable holder of IP addresses
  *
  * @author Anton Keks
  */

File: src/net/azib/ipscan/fetchers/HostnameFetcher.java
Patch:
@@ -13,7 +13,7 @@
  */
 public class HostnameFetcher extends AbstractFetcher {
 
-	static final String ID = "fetcher.hostname";
+	public static final String ID = "fetcher.hostname";
 
 	public String getId() {
 		return ID;

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class PingFetcher extends AbstractFetcher {
 	
-	static final String ID = "fetcher.ping";
+	public static final String ID = "fetcher.ping";
 
 	private static final Logger LOG = LoggerFactory.getLogger();
 	

File: src/net/azib/ipscan/gui/EditOpenersDialog.java
Patch:
@@ -192,7 +192,7 @@ public void handleEvent(Event event) {
 			// compose the message with all available fetchers
 			StringBuilder message = new StringBuilder(Labels.getLabel("text.openers.hintText"));
 			for (Fetcher fetcher : fetcherRegistry.getSelectedFetchers()) {
-				message.append("${").append(fetcher.getId()).append("}   - ").append(Labels.getLabel(fetcher.getName())).append('\n');
+				message.append("${").append(fetcher.getId()).append("}   - ").append(fetcher.getName()).append('\n');
 			}
 			
 			MessageBox mb = new MessageBox(shell, SWT.ICON_INFORMATION | SWT.OK);

File: src/net/azib/ipscan/gui/StatisticsDialog.java
Patch:
@@ -41,7 +41,7 @@ public StatisticsDialog(ScanningResultList scanningResultList) {
 	
 	@Override
 	public void open() {
-		if (scanningResults.areResultsAvailable()) {
+		if (scanningResults.isInfoAvailable()) {
 			createShell();
 			super.open();
 		}
@@ -104,8 +104,7 @@ private String prepareText(ScanInfo scanInfo) {
 			.append(scanningResults.getFeederInfo()).append(ln).append(ln);
 		
 		text.append(Labels.getLabel("text.scan.hosts.total")).append(scanInfo.getHostCount()).append(ln);
-		if (scanInfo.getAliveCount() > 0) 
-			text.append(Labels.getLabel("text.scan.hosts.alive")).append(scanInfo.getAliveCount()).append(ln);
+		text.append(Labels.getLabel("text.scan.hosts.alive")).append(scanInfo.getAliveCount()).append(ln);
 		if (scanInfo.getWithPortsCount() > 0) 
 			text.append(Labels.getLabel("text.scan.hosts.ports")).append(scanInfo.getWithPortsCount()).append(ln);
 		return text.toString();

File: src/net/azib/ipscan/config/NamedListConfig.java
Patch:
@@ -77,7 +77,8 @@ public void add(String name, Object value) {
 	 * @return stored value
 	 */
 	public String get(String name) {
-		return namedList.get(name).toString();
+		Object value = namedList.get(name);
+		return value != null ? value.toString() : null;
 	}
 	
 	/**

File: test/net/azib/ipscan/core/values/IntegerWithUnitTest.java
Patch:
@@ -27,7 +27,7 @@ public void testIntValue() throws Exception {
 	
 	@Test
 	public void testToString() throws Exception {
-		assertEquals("151" + Labels.getLabel("fetcher.unit.ms"), new IntegerWithUnit(151, "ms").toString());
+		assertEquals("151" + Labels.getLabel("unit.ms"), new IntegerWithUnit(151, "ms").toString());
 	}
 
 	@Test

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -31,6 +31,7 @@ public OpenersConfig(Preferences preferences) {
 			add(labels.get("opener.ping"), new Opener("ping ${fetcher.ip}", true, null));
 			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.ssh"), new Opener("ssh ${fetcher.ip}", true, null));
+			if (!Platform.WINDOWS) add(labels.get("opener.whois"), new Opener("whois ${fetcher.ip}", true, null));
 			add(labels.get("opener.geolocate"), new Opener("http://www.azib.net/iplocate.php?ip=${fetcher.ip}", false, null));
 			add(labels.get("opener.email"), new Opener("mailto:somebody@example.com?subject=IP: ${fetcher.ip}", true, null));
 		}

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -29,7 +29,7 @@ public OpenersConfig(Preferences preferences) {
 			add(labels.get("opener.ftp"), new Opener("ftp://${fetcher.ip}/", false, null));
 			add(labels.get("opener.telnet"), new Opener("telnet ${fetcher.ip}", true, null));
 			add(labels.get("opener.ping"), new Opener("ping ${fetcher.ip}", true, null));
-			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "/usr/sbin/tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
+			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.ssh"), new Opener("ssh ${fetcher.ip}", true, null));
 			add(labels.get("opener.geolocate"), new Opener("http://www.azib.net/iplocate.php?ip=${fetcher.ip}", false, null));
 			add(labels.get("opener.email"), new Opener("mailto:somebody@example.com?subject=IP: ${fetcher.ip}", true, null));

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -56,6 +56,7 @@ public ResultTable(Composite parent, GUIConfig guiConfig, FetcherRegistry fetche
 		this.columnClickListener = columnClickListener;
 		this.columnResizeListener = columnResizeListener;
 		fetcherRegistry.addListener(this);
+		// add columns according to fetchers
 		handleUpdateOfSelectedFetchers(fetcherRegistry);
 		
 		// load button images

File: src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -14,7 +14,6 @@
 import java.util.List;
 import java.util.Map;
 
-import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.state.ScanningState;
 import net.azib.ipscan.core.state.StateMachine;
@@ -182,7 +181,7 @@ public synchronized void initNewScan(Feeder feeder) {
 		selectedFetchers = new ArrayList<Fetcher>(fetcherRegistry.getSelectedFetchers());		
 		// store feeder info for later
 		this.feederInfo = feeder.getInfo();
-		this.feederName = Labels.getLabel(feeder.getId());
+		this.feederName = feeder.getName();
 		// recreate info
 		this.info = new ScanInfo();
 	}

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -155,7 +155,7 @@ public void run() {
 						// start the scan from scratch!
 						resultTable.removeAll();
 						try {
-							scannerThread = scannerThreadFactory.createScannerThread(feederRegistry.current().getFeeder(), StartStopScanningAction.this, createResultsCallback());
+							scannerThread = scannerThreadFactory.createScannerThread(feederRegistry.createFeeder(), StartStopScanningAction.this, createResultsCallback());
 							stateMachine.startScanning();
 						}
 						catch (RuntimeException e) {

File: src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -87,8 +87,8 @@ public void widgetSelected(SelectionEvent e) {
 		pack();
 	}
 
-	public Feeder getFeeder() {
-		((FileFeeder)feeder).initialize(fileNameText.getText());
+	public Feeder createFeeder() {
+		feeder = new FileFeeder(fileNameText.getText());
 		return feeder;
 	}
 	

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -143,8 +143,8 @@ public void run() {
 		pack();
 	}
 
-	public Feeder getFeeder() {
-		((RandomFeeder)feeder).initialize(ipPrototypeText.getText(), ipMaskCombo.getText(), countSpinner.getSelection());
+	public Feeder createFeeder() {
+		feeder = new RandomFeeder(ipPrototypeText.getText(), ipMaskCombo.getText(), countSpinner.getSelection());
 		return feeder;
 	}
 	

File: src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -155,8 +155,8 @@ public void run() {
 		pack();
 	}
 
-	public Feeder getFeeder() {
-		((RangeFeeder)feeder).initialize(startIPText.getText(), endIPText.getText());
+	public Feeder createFeeder() {
+		feeder = new RangeFeeder(startIPText.getText(), endIPText.getText());
 		return feeder;
 	}
 	

File: test/net/azib/ipscan/core/ScannerDispatcherThreadTest.java
Patch:
@@ -35,7 +35,7 @@ public void testConstruction() throws Exception {
 		expect(registry.getSelectedFetchers()).andReturn(Collections.<Fetcher>singleton(new IPFetcher())).anyTimes();
 		Feeder feeder = createMock(Feeder.class);
 		expect(feeder.getInfo()).andReturn("info");
-		expect(feeder.getId()).andReturn("text.ip");
+		expect(feeder.getName()).andReturn("text.ip");
 		replay(registry, feeder);
 		
 		ScanningResultList scanningResults = new ScanningResultList(registry);

File: test/net/azib/ipscan/core/ScanningResultListTest.java
Patch:
@@ -20,7 +20,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.ScanningResultList.ScanInfo;
 import net.azib.ipscan.core.ScanningResultList.StopScanningListener;
@@ -224,7 +223,7 @@ public void testInitNewScan() throws Exception {
 		assertTrue("initNewScan() must not clear results - otherwise rescanning will be broken", scanningResults.areResultsAvailable());
 		assertEquals("Cached Fetchers must be re-initilized", 1, scanningResults.getFetchers().size());
 		assertEquals("I am the best Feeder in the World!", scanningResults.getFeederInfo());
-		assertEquals(Labels.getLabel("feeder.range"), scanningResults.getFeederName());
+		assertEquals("feeder.range", scanningResults.getFeederName());
 		assertNotNull(scanningResults.getScanInfo());
 		assertFalse("Scanning is not yet finished", scanningResults.getScanInfo().isCompletedNormally());
 		assertEquals(0, scanningResults.getScanInfo().getHostCount());
@@ -357,7 +356,7 @@ private Fetcher createMockFetcher(String name) {
 	private Feeder createMockFeeder(String feederInfo) {
 		Feeder feeder = createMock(Feeder.class);
 		expect(feeder.getInfo()).andReturn(feederInfo);
-		expect(feeder.getId()).andReturn("feeder.range");
+		expect(feeder.getName()).andReturn("feeder.range");
 		replay(feeder);
 		return feeder;
 	}

File: test/net/azib/ipscan/exporters/ExportProcessorTest.java
Patch:
@@ -99,7 +99,7 @@ public boolean isResultSelected(int index, ScanningResult result) {
 	private Feeder createMockFeeder(String feederInfo) {
 		Feeder feeder = createMock(Feeder.class);
 		expect(feeder.getInfo()).andReturn(feederInfo);
-		expect(feeder.getId()).andReturn("feeder.range");
+		expect(feeder.getName()).andReturn("feeder.range");
 		replay(feeder);
 		return feeder;
 	}

File: test/net/azib/ipscan/gui/actions/OpenerLauncherTest.java
Patch:
@@ -81,7 +81,7 @@ public void testReplaceValues() throws UnknownHostException {
 	private Feeder createMockFeeder(String feederInfo) {
 		Feeder feeder = createMock(Feeder.class);
 		expect(feeder.getInfo()).andReturn(feederInfo);
-		expect(feeder.getId()).andReturn("feeder.range");
+		expect(feeder.getName()).andReturn("feeder.range");
 		replay(feeder);
 		return feeder;
 	}

File: test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java
Patch:
@@ -39,9 +39,8 @@ public String getFeederName() {
 				return "Mega Feeder";
 			}
 			
-			public Feeder getFeeder() {
-				feeder = new RangeFeeder();
-				feeder.initialize(new String[] {"127.0.0.1", "127.0.0.2"});
+			public Feeder createFeeder() {
+				feeder = new RangeFeeder("127.0.0.1", "127.0.0.2");
 				return feeder;
 			}
 			

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -166,6 +166,7 @@ public void removeAll() {
 		// remove all items from the real storage first
 		scanningResults.clear();
 		super.removeAll();
+		setSortColumn(null);
 	}
 	
 	/**

File: src/net/azib/ipscan/gui/AboutDialog.java
Patch:
@@ -79,7 +79,6 @@ public void handleEvent(Event event) {
 		websiteLabel.pack();
 
 		String systemText = Labels.getLabel("text.about.system");
-		System.out.println(System.getProperties());
 		systemText = systemText.replaceAll("%JAVA", System.getProperty("java.vm.vendor") + " " + System.getProperty("java.runtime.version"));
 		systemText = systemText.replaceAll("%OS", System.getProperty("os.name") + " " + System.getProperty("os.version") + " (" + System.getProperty("os.arch") + ")");
 		Label systemLabel = new Label(shell, SWT.NONE);

File: test/net/azib/ipscan/core/net/PingerRegistryImplTest.java
Patch:
@@ -75,12 +75,12 @@ public void checkSelectedPinger() throws Exception {
 		registry.pingers.put("pinger.dummy1", DummyPinger1.class);
 		config.selectedPinger = "pinger.icmp.dummy1";
 		assertFalse(registry.checkSelectedPinger());
-		assertEquals("pinger.udp", config.selectedPinger);
+		assertEquals("pinger.combined", config.selectedPinger);
 		
 		registry.pingers.put("pinger.dummy2", DummyPinger2.class);
 		config.selectedPinger = "pinger.icmp.dummy2";
 		assertFalse(registry.checkSelectedPinger());
-		assertEquals("pinger.udp", config.selectedPinger);
+		assertEquals("pinger.combined", config.selectedPinger);
 	}
 	
 	public class DummyPinger1 implements Pinger {

File: src/net/azib/ipscan/core/net/PingerRegistryImpl.java
Patch:
@@ -43,6 +43,7 @@ public PingerRegistryImpl(ScannerConfig scannerConfig) {
 		pingers.put("pinger.icmp2", ICMPPinger.class);
 		pingers.put("pinger.udp", UDPPinger.class);
 		pingers.put("pinger.tcp", TCPPinger.class);
+		pingers.put("pinger.combined", CombinedUnprivilegedPinger.class);
 	}
 	
 	public String[] getRegisteredNames() {
@@ -86,8 +87,8 @@ public boolean checkSelectedPinger() {
 			}
 			catch (Exception e) {
 				LOG.info("ICMP pingers fail: " + e);
-				// udp should be supported in all configurations
-				scannerConfig.selectedPinger = Platform.WINDOWS ? "pinger.windows" : "pinger.udp";
+				// windows will use native pinger, all others get combined UDP+TCP, which doesn't require special privileges
+				scannerConfig.selectedPinger = Platform.WINDOWS ? "pinger.windows" : "pinger.combined";
 				return false;
 			}
 		}

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -129,7 +129,8 @@ public ComponentRegistry() {
 			new ComponentParameter("controlsArea"),
 			new ConstantParameter(new Integer(SWT.NONE))});
 		container.registerComponentImplementation("feederSelectionCombo", FeederSelectionCombo.class, new Parameter[] {
-			new ComponentParameter("controlsArea")});		
+			new ComponentParameter("controlsArea"),
+			anyComponentParameter});		
 		
 		// GUI Feeders
 		container.registerComponentImplementation(FeederGUIRegistry.class);

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -37,6 +37,7 @@
 import net.azib.ipscan.gui.StatisticsDialog;
 import net.azib.ipscan.gui.StatusBar;
 import net.azib.ipscan.gui.MainMenu.CommandsMenu;
+import net.azib.ipscan.gui.MainWindow.FeederSelectionCombo;
 import net.azib.ipscan.gui.actions.ColumnsActions;
 import net.azib.ipscan.gui.actions.CommandsActions;
 import net.azib.ipscan.gui.actions.OpenerLauncher;
@@ -128,9 +129,8 @@ public ComponentRegistry() {
 		container.registerComponentImplementation("startStopButton", Button.class, new Parameter[] {
 			new ComponentParameter("controlsArea"),
 			new ConstantParameter(new Integer(SWT.NONE))});
-		container.registerComponentImplementation("feederSelectionCombo", Combo.class, new Parameter[] {
-			new ComponentParameter("controlsArea"),
-			new ConstantParameter(new Integer(SWT.READ_ONLY))});		
+		container.registerComponentImplementation("feederSelectionCombo", FeederSelectionCombo.class, new Parameter[] {
+			new ComponentParameter("controlsArea")});		
 		
 		// GUI Feeders
 		container.registerComponentImplementation(FeederGUIRegistry.class);

File: test/net/azib/ipscan/feeders/FeederTestUtils.java
Patch:
@@ -15,7 +15,7 @@ public class FeederTestUtils {
 	
 	public static void assertFeederException(String message, FeederException e) {
 		// assert that the message is correct
-		Assert.assertEquals(e.getMessage(), message);
+		Assert.assertEquals(message, e.getMessage());
 		// check that corresponding label exists
 		Assert.assertNotNull(Labels.getLabel("exception.FeederException." + message));
 	}

File: test/net/azib/ipscan/feeders/RandomFeederTest.java
Patch:
@@ -44,7 +44,7 @@ public void testInvalidCount() {
 	@Test
 	public void testMalformedIP() {
 		try {
-			new RandomFeeder().initialize("abc", "10.11.12.10", 1);
+			new RandomFeeder().initialize("{123}", "10.11.12.10", 1);
 			fail();
 		}
 		catch (FeederException e) {
@@ -55,7 +55,7 @@ public void testMalformedIP() {
 	@Test
 	public void testInvalidNetmask() {
 		try {
-			new RandomFeeder().initialize("1.1.1.1", "invalid", 1);
+			new RandomFeeder().initialize("1.1.1.1", "<invalid>", 1);
 			fail();
 		}
 		catch (FeederException e) {

File: test/net/azib/ipscan/feeders/RangeFeederTest.java
Patch:
@@ -39,14 +39,14 @@ public void testInvalidRange() {
 	@Test
 	public void testMalformedIP() {
 		try {
-			new RangeFeeder().initialize("10.11.12.abc", "10.11.12.10");
+			new RangeFeeder().initialize("10.11.12.abc.", "10.11.12.10");
 			fail();
 		}
 		catch (FeederException e) {
 			assertFeederException("malformedIP", e);
 		}
 		try {
-			new RangeFeeder().initialize("10.11.12.1", "ziga");
+			new RangeFeeder().initialize("10.11.12.1", "ziga,");
 			fail();
 		}
 		catch (FeederException e) {

File: src/net/azib/ipscan/gui/actions/FileActions.java
Patch:
@@ -62,7 +62,7 @@ public void handleEvent(Event event) {
 			// gather lists of extensions and exporter names
 			List<String> extensions = new ArrayList<String>();
 			List<String> descriptions = new ArrayList<String>();
-			StringBuffer labelBuffer = new StringBuffer(Labels.getLabel(isSelection ? "title.saveSelection" : "title.saveAll"));
+			StringBuffer labelBuffer = new StringBuffer(Labels.getLabel(isSelection ? "title.exportSelection" : "title.exportAll"));
 			addFileExtensions(extensions, descriptions, labelBuffer);
 			
 			// initialize other stuff

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -69,7 +69,7 @@ public Details(ResultTable resultTable, DetailsWindow detailsWindow) {
 
 		public void handleEvent(Event event) {
 			// activate only if something is selected
-			if (resultTable.getSelectionIndex() >= 0 && (event.type == SWT.MouseDoubleClick || event.type == SWT.Selection || event.detail == SWT.TRAVERSE_RETURN)) {
+			if (event.type == SWT.Selection || (resultTable.getSelectionIndex() >= 0 && (event.type == SWT.MouseDoubleClick || event.detail == SWT.TRAVERSE_RETURN))) {
 				event.doit = false;
 				checkSelection(resultTable);
 				detailsWindow.open(); 

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -69,7 +69,7 @@ public Details(ResultTable resultTable, DetailsWindow detailsWindow) {
 
 		public void handleEvent(Event event) {
 			// activate only if something is selected
-			if (resultTable.getSelectionIndex() >= 0 && (event.type == SWT.MouseDoubleClick || event.detail == SWT.TRAVERSE_RETURN)) {
+			if (resultTable.getSelectionIndex() >= 0 && (event.type == SWT.MouseDoubleClick || event.type == SWT.Selection || event.detail == SWT.TRAVERSE_RETURN)) {
 				event.doit = false;
 				checkSelection(resultTable);
 				detailsWindow.open(); 

File: src/net/azib/ipscan/config/GUIConfig.java
Patch:
@@ -52,8 +52,8 @@ private void load() {
 		mainWindowBounds = new Rectangle(
 			preferences.getInt("windowLeft", 100),
 			preferences.getInt("windowTop", 100),
-			preferences.getInt("windowWidth", 560),
-			preferences.getInt("windowHeight", 350));
+			preferences.getInt("windowWidth", 600),
+			preferences.getInt("windowHeight", 360));
 		
 		detailsWindowSize = new Point(
 			preferences.getInt("detailsWidth", 300),

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -28,7 +28,10 @@ public OpenersConfig(Preferences preferences) {
 			add(labels.get("opener.web"), new Opener("http://${fetcher.ip}/", false, null));			
 			add(labels.get("opener.ftp"), new Opener("ftp://${fetcher.ip}/", false, null));
 			add(labels.get("opener.telnet"), new Opener("telnet ${fetcher.ip}", true, null));
+			add(labels.get("opener.ping"), new Opener("ping ${fetcher.ip}", true, null));
+			add(labels.get("opener.traceroute"), new Opener((Platform.WINDOWS ? "tracert" : Platform.LINUX ? "/usr/sbin/tracepath" : "traceroute") + " ${fetcher.ip}", true, null));
 			if (!Platform.WINDOWS) add(labels.get("opener.ssh"), new Opener("ssh ${fetcher.ip}", true, null));
+			add(labels.get("opener.geolocate"), new Opener("http://www.azib.net/iplocate.php?ip=${fetcher.ip}", false, null));
 			add(labels.get("opener.email"), new Opener("mailto:somebody@example.com?subject=IP: ${fetcher.ip}", true, null));
 		}
 	}

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -83,6 +83,7 @@ String prepareOpenerStringForItem(String openerString, int selectedItem) {
 				matcher.appendReplacement(sb, scannedValue);
 			}
 			catch (Exception e) {
+				LOG.log(Level.INFO, "opener.nullFetcherValue", e);
 				throw new UserErrorException("opener.nullFetcherValue", fetcherName);					
 			}
 		}
@@ -91,6 +92,7 @@ String prepareOpenerStringForItem(String openerString, int selectedItem) {
 	}
 
 	String getScannedValue(int selectedItem, int fetcherIndex) {
-		return (String) scanningResults.getResult(selectedItem).getValues().get(fetcherIndex);
+		Object value = scanningResults.getResult(selectedItem).getValues().get(fetcherIndex); 
+		return value != null ? value.toString() : null;
 	}
 }

File: src/net/azib/ipscan/fetchers/CommentFetcher.java
Patch:
@@ -15,12 +15,14 @@
  * @author Anton Keks
  */
 public class CommentFetcher implements Fetcher {
+	
+	static final String LABEL = "fetcher.comment";
 
 	/**
 	 * @see net.azib.ipscan.fetchers.Fetcher#getLabel()
 	 */
 	public String getLabel() {
-		return "fetcher.comment";
+		return LABEL;
 	}
 
 	/**

File: src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java
Patch:
@@ -35,8 +35,8 @@ public FetcherRegistryImpl(Fetcher[] registeredFetchers, Preferences preferences
 		this.preferences = preferences;
 		
 		this.registeredFetchers = new LinkedHashMap<String, Fetcher>(registeredFetchers.length);
-		for (int i = 0; i < registeredFetchers.length; i++) {
-			this.registeredFetchers.put(registeredFetchers[i].getLabel(), registeredFetchers[i]);
+		for (Fetcher fetcher : registeredFetchers) {
+			this.registeredFetchers.put(fetcher.getLabel(), fetcher);
 		}
 		this.registeredFetchers = Collections.unmodifiableMap(this.registeredFetchers);
 		
@@ -93,7 +93,7 @@ public Collection<Fetcher> getSelectedFetchers() {
 	public int getSelectedFetcherIndex(String label) {
 		int index = 0;
 		for (Fetcher fetcher : selectedFetchers.values()) {
-			if (fetcher.getLabel().equals(label)) {
+			if (label.equals(fetcher.getLabel())) {
 				return index;
 			}
 			index++;

File: src/net/azib/ipscan/gui/ConfigDetectorDialog.java
Patch:
@@ -68,7 +68,7 @@ private void createShell() {
 		shell.setText(Labels.getLabel("title.configDetect"));
 		
 		Label infoLabel = new Label(shell, SWT.WRAP);
-		infoLabel.setText((config.isFirstRun ? Labels.getLabel("text.configDetect.firstRun") : "") + Labels.getLabel("text.configDetect"));
+		infoLabel.setText(Labels.getLabel("text.configDetect"));
 		infoLabel.setLayoutData(LayoutHelper.formData(340, SWT.DEFAULT, new FormAttachment(0), new FormAttachment(100), new FormAttachment(0), null));
 		
 		Label hostLabel = new Label(shell, SWT.WRAP);

File: src/net/azib/ipscan/core/values/InetAddressValue.java
Patch:
@@ -32,7 +32,7 @@ public int compareTo(InetAddressValue that) {
 			if (b1[i] == b2[i])
 				continue;
 			else
-			if (b1[i] > b2[i])
+			if ((b1[i]&0xFF) > (b2[i]&0xFF))
 				return 1;
 			else
 				return -1;

File: src/net/azib/ipscan/gui/AboutDialog.java
Patch:
@@ -53,6 +53,7 @@ private void createShell() {
 		text = text.replaceAll("%NAME", Version.NAME);
 		text = text.replaceAll("%VERSION", Version.getVersion());
 		text = text.replaceAll("%BUILD", Version.getBuildNumber());
+		text = text.replaceAll("%DATE", Version.getBuildDate());
 		text = text.replaceAll("%JAVA", System.getProperty("java.vm.vendor") + " " + System.getProperty("java.vm.version") + "\n" + System.getProperty("os.name") + " " + System.getProperty("os.version"));
 		text = text.replaceAll("%COPYLEFT", Version.COPYLEFT);
 		text = text.replaceAll("%WEBSITE", Version.WEBSITE);
@@ -65,7 +66,7 @@ private void createShell() {
 		Button button = createCloseButton();
 		
 		Text licenseText = new Text(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.WRAP);
-		licenseText.setBounds(leftBound, textLabel.getBounds().y+textLabel.getBounds().height+10, shell.getClientArea().width - leftBound - 10, button.getLocation().y - 160);
+		licenseText.setBounds(leftBound, textLabel.getBounds().y+textLabel.getBounds().height+10, shell.getClientArea().width - leftBound - 10, button.getLocation().y - 174);
 		licenseText.setBackground(shell.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
 		licenseText.setText("Licensed under the GNU General Public License Version 2\n\n" +
 							Version.NAME + " is free software; you can redistribute it and/or " +

File: src/net/azib/ipscan/config/GlobalConfig.java
Patch:
@@ -46,7 +46,7 @@ public static enum DisplayMethod {ALL, ALIVE, PORTS}
 		this.preferences = preferences;
 		
 		isFirstRun = preferences.getBoolean("firstRun", true);
-		maxThreads = preferences.getInt("maxThreads", 100);
+		maxThreads = preferences.getInt("maxThreads", Platform.CRIPPLED_WINDOWS ? 10 : 100);
 		threadDelay = preferences.getInt("threadDelay", 20);
 		activeFeeder = preferences.getInt("activeFeeder", 0);
 		scanDeadHosts = preferences.getBoolean("scanDeadHosts", false);
@@ -55,7 +55,7 @@ public static enum DisplayMethod {ALL, ALIVE, PORTS}
 		pingCount = preferences.getInt("pingCount", 3);
 		skipBroadcastAddresses = preferences.getBoolean("skipBroadcastAddresses", true);
 		portTimeout = preferences.getInt("portTimeout", 2000);
-		adaptPortTimeout = preferences.getBoolean("adaptPortTimeout", true);
+		adaptPortTimeout = preferences.getBoolean("adaptPortTimeout", !Platform.CRIPPLED_WINDOWS);
 		minPortTimeout = preferences.getInt("minPortTimeout", 100);
 		portString = preferences.get("portString", "");
 		notAvailableText = preferences.get("notAvailableText", Labels.getLabel("fetcher.value.notAvailable"));

File: src/net/azib/ipscan/config/GlobalConfig.java
Patch:
@@ -51,12 +51,12 @@ public static enum DisplayMethod {ALL, ALIVE, PORTS}
 		activeFeeder = preferences.getInt("activeFeeder", 0);
 		scanDeadHosts = preferences.getBoolean("scanDeadHosts", false);
 		selectedPinger = preferences.get("selectedPinger", "pinger.icmp");
-		pingTimeout = preferences.getInt("pingTimeout", 3000);
+		pingTimeout = preferences.getInt("pingTimeout", 2000);
 		pingCount = preferences.getInt("pingCount", 3);
 		skipBroadcastAddresses = preferences.getBoolean("skipBroadcastAddresses", true);
-		portTimeout = preferences.getInt("portTimeout", 3000);
+		portTimeout = preferences.getInt("portTimeout", 2000);
 		adaptPortTimeout = preferences.getBoolean("adaptPortTimeout", true);
-		minPortTimeout = preferences.getInt("minPortTimeout", 500);
+		minPortTimeout = preferences.getInt("minPortTimeout", 100);
 		portString = preferences.get("portString", "");
 		notAvailableText = preferences.get("notAvailableText", Labels.getLabel("fetcher.value.notAvailable"));
 		notScannedText = preferences.get("notScannedText", Labels.getLabel("fetcher.value.notScanned"));

File: src/net/azib/ipscan/Main.java
Patch:
@@ -19,8 +19,8 @@
 import net.azib.ipscan.config.ComponentRegistry;
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.config.LoggerFactory;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.gui.MainWindow;
-import net.azib.ipscan.gui.UserErrorException;
 
 /**
  * The main executable class.

File: src/net/azib/ipscan/core/UserErrorException.java
Patch:
@@ -3,7 +3,7 @@
  * see http://www.azib.net/ for more information.
  * Licensed under GPLv2.
  */
-package net.azib.ipscan.gui;
+package net.azib.ipscan.core;
 
 import net.azib.ipscan.config.Labels;
 

File: src/net/azib/ipscan/gui/StatisticsDialog.java
Patch:
@@ -11,6 +11,7 @@
 
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.core.ScanningResultList;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.core.ScanningResultList.ScanInfo;
 
 import org.eclipse.swt.SWT;

File: src/net/azib/ipscan/gui/actions/BrowserLauncher.java
Patch:
@@ -8,7 +8,7 @@
 import java.lang.reflect.Method;
 
 import net.azib.ipscan.config.Platform;
-import net.azib.ipscan.gui.UserErrorException;
+import net.azib.ipscan.core.UserErrorException;
 
 /**
  * The cross-platform browser launcher

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -10,13 +10,13 @@
 import net.azib.ipscan.config.Config;
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.config.OpenersConfig.Opener;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.core.state.StateMachine;
 import net.azib.ipscan.fetchers.FetcherRegistry;
 import net.azib.ipscan.gui.DetailsDialog;
 import net.azib.ipscan.gui.EditOpenersDialog;
 import net.azib.ipscan.gui.ResultTable;
 import net.azib.ipscan.gui.StatusBar;
-import net.azib.ipscan.gui.UserErrorException;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.dnd.Clipboard;

File: src/net/azib/ipscan/gui/actions/FavoritesActions.java
Patch:
@@ -11,9 +11,9 @@
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.config.NamedListConfig;
 import net.azib.ipscan.config.Version;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.gui.EditFavoritesDialog;
 import net.azib.ipscan.gui.InputDialog;
-import net.azib.ipscan.gui.UserErrorException;
 import net.azib.ipscan.gui.feeders.FeederGUIRegistry;
 
 import org.eclipse.swt.SWT;

File: src/net/azib/ipscan/gui/actions/FileActions.java
Patch:
@@ -11,13 +11,13 @@
 import net.azib.ipscan.Main;
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.core.ScanningResult;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.exporters.ExportProcessor;
 import net.azib.ipscan.exporters.Exporter;
 import net.azib.ipscan.exporters.ExporterRegistry;
 import net.azib.ipscan.exporters.ExportProcessor.ScanningResultSelector;
 import net.azib.ipscan.gui.ResultTable;
 import net.azib.ipscan.gui.StatusBar;
-import net.azib.ipscan.gui.UserErrorException;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.widgets.Event;

File: src/net/azib/ipscan/gui/actions/HelpActions.java
Patch:
@@ -13,10 +13,10 @@
 
 import net.azib.ipscan.config.Labels;
 import net.azib.ipscan.config.Version;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.gui.AboutDialog;
 import net.azib.ipscan.gui.GettingStartedDialog;
 import net.azib.ipscan.gui.StatusBar;
-import net.azib.ipscan.gui.UserErrorException;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.widgets.Event;

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -13,8 +13,8 @@
 import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.config.OpenersConfig.Opener;
 import net.azib.ipscan.core.ScanningResultList;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.fetchers.FetcherRegistry;
-import net.azib.ipscan.gui.UserErrorException;
 
 /**
  * OpenerLauncher

File: src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -12,7 +12,7 @@
 
 import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.config.Platform;
-import net.azib.ipscan.gui.UserErrorException;
+import net.azib.ipscan.core.UserErrorException;
 
 /**
  * The cross-platform terminal launcher

File: test/net/azib/ipscan/gui/actions/OpenerLauncherTest.java
Patch:
@@ -11,8 +11,8 @@
 import static org.junit.Assert.fail;
 import net.azib.ipscan.config.Config;
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.core.UserErrorException;
 import net.azib.ipscan.fetchers.FetcherRegistry;
-import net.azib.ipscan.gui.UserErrorException;
 
 import org.junit.Before;
 import org.junit.Test;

File: src/net/azib/ipscan/exporters/ExportProcessor.java
Patch:
@@ -45,7 +45,7 @@ public void process(ScanningResultList scanningResults, ScanningResultSelector r
 			String[] fetcherNames = new String[fetchers.size()];
 			int i = 0;
 			for (Fetcher fetcher : fetchers) {
-				fetcherNames[i] = Labels.getLabel(fetcher.getLabel());
+				fetcherNames[i++] = Labels.getLabel(fetcher.getLabel());
 			}			
 			exporter.setFetchers(fetcherNames);
 

File: src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class PortsFetcher implements Fetcher {
 	
+	static final String LABEL = "fetcher.ports";
+	
 	private static final String PARAMETER_OPEN_PORTS = "openPorts";
 	private static final String PARAMETER_FILTERED_PORTS = "filteredPorts";
 	
@@ -42,7 +44,7 @@ public PortsFetcher(GlobalConfig globalConfig) {
 	}
 
 	public String getLabel() {
-		return "fetcher.ports";
+		return LABEL;
 	}
 
 	/**

File: src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -16,6 +16,7 @@
 import java.util.Map;
 
 import net.azib.ipscan.config.Labels;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.state.ScanningState;
 import net.azib.ipscan.core.state.StateMachine;
 import net.azib.ipscan.core.state.StateTransitionListener;
@@ -266,10 +267,10 @@ public int findText(String text, int startIndex) {
 	}
 	
 	private void updateStatistics(ScanningResult result) {
-		if (result.getType() == ScanningSubject.RESULT_TYPE_ALIVE) {
+		if (result.getType() == ResultType.ALIVE) {
 			info.numAlive++;
 		}
-		else if (result.getType() == ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO) {
+		else if (result.getType() == ResultType.WITH_PORTS) {
 			info.numAlive++;
 			info.numWithPorts++;
 		}

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -11,6 +11,7 @@
 import net.azib.ipscan.config.GlobalConfig;
 import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.net.PingResult;
 import net.azib.ipscan.core.net.Pinger;
 import net.azib.ipscan.core.net.PingerRegistry;
@@ -70,7 +71,7 @@ protected PingResult executePing(ScanningSubject subject) {
 
 	public Object scan(ScanningSubject subject) {
 		PingResult result = executePing(subject);
-		subject.setResultType(result.isAlive() ? ScanningSubject.RESULT_TYPE_ALIVE : ScanningSubject.RESULT_TYPE_DEAD);
+		subject.setResultType(result.isAlive() ? ResultType.ALIVE : ResultType.DEAD);
 		
 		if (!result.isAlive() && !config.scanDeadHosts) {
 			// the host is dead, we are not going to continue...

File: src/net/azib/ipscan/fetchers/PingTTLFetcher.java
Patch:
@@ -6,6 +6,7 @@
 
 import net.azib.ipscan.config.GlobalConfig;
 import net.azib.ipscan.core.ScanningSubject;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.net.PingResult;
 import net.azib.ipscan.core.net.PingerRegistry;
 
@@ -27,7 +28,7 @@ public String getLabel() {
 
 	public Object scan(ScanningSubject subject) {
 		PingResult result = executePing(subject);
-		subject.setResultType(result.isAlive() ? ScanningSubject.RESULT_TYPE_ALIVE : ScanningSubject.RESULT_TYPE_DEAD);
+		subject.setResultType(result.isAlive() ? ResultType.ALIVE : ResultType.DEAD);
 		return result.isAlive() && result.getTTL() > 0 ? new Integer(result.getTTL()) : null;
 	}
 }

File: src/net/azib/ipscan/fetchers/PortTextFetcher.java
Patch:
@@ -21,6 +21,7 @@
 import net.azib.ipscan.config.GlobalConfig;
 import net.azib.ipscan.config.LoggerFactory;
 import net.azib.ipscan.core.ScanningSubject;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 
 /**
  * PortTextFetcher - generic configurable fetcher to read some particular information from a port.
@@ -67,7 +68,7 @@ public Object scan(ScanningSubject subject) {
 				Matcher matcher = matchingRegexp.matcher(line);
 				if (matcher.matches()) {
 					// mark that additional info is available
-					subject.setResultType(ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO);
+					subject.setResultType(ResultType.WITH_PORTS);
 					// return the required contents
 					return matcher.group(1);
 				}

File: src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -16,6 +16,7 @@
 import net.azib.ipscan.config.GlobalConfig;
 import net.azib.ipscan.core.PortIterator;
 import net.azib.ipscan.core.ScanningSubject;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.net.PingResult;
 import net.azib.ipscan.core.values.NumericListValue;
 
@@ -132,7 +133,7 @@ public Object scan(ScanningSubject subject) {
 		SortedSet<Integer> openPorts = getOpenPorts(subject);
 		boolean portsFound = openPorts.size() > 0;
 		if (portsFound) {
-			subject.setResultType(ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO);
+			subject.setResultType(ResultType.WITH_PORTS);
 		}
 		return portsFound ? new NumericListValue(openPorts, displayAsRanges) : null;
 	}

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -14,7 +14,7 @@
 import net.azib.ipscan.core.ScanningProgressCallback;
 import net.azib.ipscan.core.ScanningResult;
 import net.azib.ipscan.core.ScanningResultsCallback;
-import net.azib.ipscan.core.ScanningSubject;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.state.ScanningState;
 import net.azib.ipscan.core.state.StateMachine;
 import net.azib.ipscan.core.state.StateTransitionListener;
@@ -172,7 +172,7 @@ public void consumeResults(ScanningResult result) {
 				public void prepareForResults(ScanningResult result) {
 				}
 				public void consumeResults(ScanningResult result) {
-					if (result.getType() == ScanningSubject.RESULT_TYPE_ALIVE || result.getType() == ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO)
+					if (result.getType().ordinal() >= ResultType.ALIVE.ordinal())
 						resultTable.addOrUpdateResultRow(result);
 				}
 			};
@@ -181,7 +181,7 @@ public void consumeResults(ScanningResult result) {
 				public void prepareForResults(ScanningResult result) {
 				}
 				public void consumeResults(ScanningResult result) {
-					if (result.getType() == ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO)
+					if (result.getType() == ResultType.WITH_PORTS)
 						resultTable.addOrUpdateResultRow(result);
 				}
 			};

File: test/net/azib/ipscan/core/ScannerTest.java
Patch:
@@ -18,6 +18,7 @@
 import java.util.Set;
 
 import net.azib.ipscan.config.Config;
+import net.azib.ipscan.core.ScanningResult.ResultType;
 import net.azib.ipscan.core.values.NotAvailableValue;
 import net.azib.ipscan.core.values.NotScannedValue;
 import net.azib.ipscan.fetchers.Fetcher;
@@ -63,7 +64,7 @@ public void testScan() throws Exception {
 		ScanningResult scanningResult = new ScanningResult(InetAddress.getLocalHost(), 4);
 		scanner.scan(InetAddress.getLocalHost(), scanningResult);
 		
-		assertEquals(ScanningSubject.RESULT_TYPE_ALIVE, scanningResult.getType());
+		assertEquals(ResultType.ALIVE, scanningResult.getType());
 		assertEquals(InetAddress.getLocalHost(), scanningResult.getAddress());
 		assertEquals(4, scanningResult.getValues().size());
 		assertEquals("blah", scanningResult.getValues().get(0));
@@ -101,7 +102,7 @@ public Object scan(ScanningSubject subject) {
 				assertEquals(InetAddress.getLocalHost(), subject.getAddress());
 				
 				// set the result type to check after scanning
-				subject.setResultType(ScanningSubject.RESULT_TYPE_ALIVE);
+				subject.setResultType(ResultType.ALIVE);
 				
 				// try to set parameter here and read from another Fetcher
 				subject.setParameter("megaParam", new Long(211082));

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -125,8 +125,8 @@ public void run() {
 						statusBar.setProgress(0);
 						break;
 					case STARTING:
-						// start the scan!
-						resultTable.initNewScan();
+						// start the scan from scratch!
+						resultTable.removeAll();
 						scannerThread = scannerThreadFactory.createScannerThread(feederRegistry.current().getFeeder(), StartStopScanningAction.this, createResultsCallback());
 						stateMachine.startScanning();
 						break;

File: src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java
Patch:
@@ -81,7 +81,8 @@ public void select(String feederName) {
 	 * @return initialized instance of RescanFeeder
 	 */
 	public Feeder createRescanFeeder(TableItem[] items) {
-		Feeder feeder = new RescanFeeder();
+		// TODO: passing of currentFeederGUI.getFeeder() is probably wrong - we need to have the "real" feeder that was used for the previous scan 
+		Feeder feeder = new RescanFeeder(currentFeederGUI.getFeeder());
 		String[] addresses = new String[items.length];
 		for (int i = 0; i < items.length; i++) {
 			addresses[i] = items[i].getText();

File: src/net/azib/ipscan/feeders/RandomFeeder.java
Patch:
@@ -103,7 +103,7 @@ public InetAddress next() {
 	 */
 	public String getInfo() {
 		try {
-			return InetAddress.getByAddress(prototypeBytes).getHostAddress() + " / " + InetAddress.getByAddress(maskBytes).getHostAddress() + ": " + addressCount;
+			return addressCount + ": " + InetAddress.getByAddress(prototypeBytes).getHostAddress() + " / " + InetAddress.getByAddress(maskBytes).getHostAddress();
 		}
 		catch (UnknownHostException e) {
 			assert false : e;

File: test/net/azib/ipscan/exporters/ExportProcessorTest.java
Patch:
@@ -100,6 +100,7 @@ public boolean isResultSelected(int index, ScanningResult result) {
 	private Feeder createMockFeeder(String feederInfo) {
 		Feeder feeder = createMock(Feeder.class);
 		expect(feeder.getInfo()).andReturn(feederInfo);
+		expect(feeder.getLabel()).andReturn("feeder.range");
 		replay(feeder);
 		return feeder;
 	}

File: test/net/azib/ipscan/feeders/RandomFeederTest.java
Patch:
@@ -137,8 +137,8 @@ public void testGetPercentageComplete() throws Exception {
 	public void testGetInfo() {
 		RandomFeeder randomFeeder = new RandomFeeder();
 		randomFeeder.initialize("100.11.12.13", "100.11.12.15", 3);
-		assertEquals("100.11.12.13 / 100.11.12.15: 3", randomFeeder.getInfo());
+		assertEquals("3: 100.11.12.13 / 100.11.12.15", randomFeeder.getInfo());
 		randomFeeder.initialize("0.0.0.0", "255.255.255.255", 129876);
-		assertEquals("0.0.0.0 / 255.255.255.255: 129876", randomFeeder.getInfo());
+		assertEquals("129876: 0.0.0.0 / 255.255.255.255", randomFeeder.getInfo());
 	}
 }

File: src/net/azib/ipscan/Main.java
Patch:
@@ -66,8 +66,8 @@ public static void main(String[] args) {
 				// display a nice error message
 				String localizedMessage = getLocalizedMessage(e);
 				Shell parent = display.getActiveShell();
-				MessageBox messageBox = new MessageBox(parent != null ? parent : mainWindow.getShell(), SWT.OK | SWT.ICON_ERROR);
-				messageBox.setText("Error");
+				MessageBox messageBox = new MessageBox(parent != null ? parent : mainWindow.getShell(), SWT.OK | (e instanceof UserErrorException ? SWT.ICON_WARNING : SWT.ICON_ERROR));
+				messageBox.setText(Labels.getLabel(e instanceof UserErrorException ? "text.userError" : "text.error"));
 				messageBox.setMessage(localizedMessage);
 				messageBox.open();
 			}

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -53,8 +53,7 @@ public PingResult ping(InetAddress address, int count) throws IOException {
 			// TODO: this means that the host is down
 		}
 		catch (IOException e) {
-			LOG.setLevel(Level.ALL);
-			LOG.log(Level.FINER, null, e);
+			LOG.log(Level.FINER, address.toString(), e);
 		}
 
 		try {

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -110,9 +110,9 @@ private void createCommandsMenuItems(Menu menu) {
 		initMenuItem(menu, "menu.commands.details", null, null, initListener(CommandsActions.Details.class));
 		initMenuItem(menu, null, null, null, null);
 		initMenuItem(menu, "menu.commands.rescan", "Ctrl+R", new Integer(SWT.MOD1 | 'R'), initListener(CommandsActions.Rescan.class));
-		initMenuItem(menu, "menu.commands.delete", "Del", null, initListener(CommandsActions.Delete.class));
+		initMenuItem(menu, "menu.commands.delete", "Del", /* this is not a global key binding */ null, initListener(CommandsActions.Delete.class));
 		initMenuItem(menu, null, null, null, null);
-		initMenuItem(menu, "menu.commands.copy", "Ctrl+C", new Integer(SWT.MOD1 | 'C'), initListener(CommandsActions.CopyIP.class));
+		initMenuItem(menu, "menu.commands.copy", "Ctrl+C", /* this is not a global key binding */ null, initListener(CommandsActions.CopyIP.class));
 		initMenuItem(menu, "menu.commands.copyDetails", null, null, initListener(CommandsActions.CopyIPDetails.class));
 		initMenuItem(menu, null, null, null, null);		
 		createOpenersMenu(menu);

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -172,7 +172,7 @@ public void consumeResults(ScanningResult result) {
 				public void prepareForResults(ScanningResult result) {
 				}
 				public void consumeResults(ScanningResult result) {
-					if (result.getType() == ScanningSubject.RESULT_TYPE_ALIVE)
+					if (result.getType() == ScanningSubject.RESULT_TYPE_ALIVE || result.getType() == ScanningSubject.RESULT_TYPE_ADDITIONAL_INFO)
 						resultTable.addOrUpdateResultRow(result);
 				}
 			};

File: test/net/azib/ipscan/exporters/ExportProcessorTest.java
Patch:
@@ -21,6 +21,7 @@
 import net.azib.ipscan.core.ScanningResult;
 import net.azib.ipscan.core.ScanningResultList;
 import net.azib.ipscan.exporters.ExportProcessor.ScanningResultSelector;
+import net.azib.ipscan.fetchers.Fetcher;
 import net.azib.ipscan.fetchers.FetcherRegistry;
 import net.azib.ipscan.fetchers.IPFetcher;
 
@@ -41,7 +42,7 @@ public class ExportProcessorTest {
 	public void setUp() {
 		fetcherRegistry = createMock(FetcherRegistry.class);
 		expect(fetcherRegistry.getSelectedFetchers())
-			.andReturn(Collections.singletonList(new IPFetcher())).anyTimes();
+			.andReturn(Collections.<Fetcher>singletonList(new IPFetcher())).anyTimes();
 		replay(fetcherRegistry);
 	}
 	

File: ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java
Patch:
@@ -73,7 +73,7 @@ public class RawSocket {
    * Deallocates any system resources used by the RockSaw library.
    * Really, all it does is call WSACleanup on Win32.
    */
-  private native static void __RockSawShutdown();
+  native static void __RockSawShutdown();
 
   static {
     System.loadLibrary("rocksaw");

File: src/net/azib/ipscan/Main.java
Patch:
@@ -122,7 +122,7 @@ static String getLocalizedMessage(Throwable e) {
 	/**
 	 * @return the short name of a class (without package name)
 	 */
-	static String getClassShortName(Class clazz) {
+	static String getClassShortName(Class<?> clazz) {
 		String className = clazz.getName();
 		return className.substring(className.lastIndexOf('.') + 1);
 	}

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class OpenersConfig extends NamedListConfig {
 	
-	private static final Logger LOG = LoggerFactory.getLogger();
+	static final Logger LOG = LoggerFactory.getLogger();
 
 	public OpenersConfig(Preferences preferences) {
 		super(preferences, "openers");

File: src/net/azib/ipscan/core/ScanningResult.java
Patch:
@@ -43,7 +43,7 @@ public InetAddress getAddress() {
 	/**
 	 * @return the scanning results as an unmodifiable List, result of each Fetcher is an element
 	 */
-	public List getValues() {
+	public List<Object> getValues() {
 		return Arrays.asList(values);
 	}
 	

File: src/net/azib/ipscan/core/ScanningSubject.java
Patch:
@@ -29,7 +29,7 @@ public class ScanningSubject {
 	/** The address being scanned */
 	private InetAddress address;
 	/** Arbitrary parameters for sharing among different (but related) Fetchers */
-	private Map parameters;
+	private Map<String, Object> parameters;
 	/** The result type constant value, can be modified by some Fetchers */
 	private int resultType = RESULT_TYPE_UNKNOWN;
 	/** Whether we need to continue scanning or it can be aborted */
@@ -40,7 +40,7 @@ public class ScanningSubject {
 	 */
 	public ScanningSubject(InetAddress address) {
 		this.address = address;
-		this.parameters = new HashMap();
+		this.parameters = new HashMap<String, Object>();
 	}
 	
 	public InetAddress getIPAddress() {

File: src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class ICMPPinger implements Pinger {
 	
-	private static final Logger LOG = Logger.getLogger(ICMPPinger.class.getName());
+	static final Logger LOG = Logger.getLogger(ICMPPinger.class.getName());
 
 	private int timeout;
 	

File: src/net/azib/ipscan/core/net/ICMPSharedPinger.java
Patch:
@@ -28,14 +28,14 @@
  */
 public class ICMPSharedPinger implements Pinger {
 	
-	private static final Logger LOG = Logger.getLogger(ICMPSharedPinger.class.getName());
+	static final Logger LOG = Logger.getLogger(ICMPSharedPinger.class.getName());
 
 	/** a single raw socket for sending of all ICMP packets */
 	private RawSocket sendingSocket;
 	/** a single raw socket for receiving of all ICMP packets */
 	private RawSocket receivingSocket;
 	/** the map with PingResults, keys are InetAddress */
-	private Map results = Collections.synchronizedMap(new HashMap());
+	private Map<InetAddress, PingResult> results = Collections.synchronizedMap(new HashMap<InetAddress, PingResult>());
 	
 	private Thread receiverThread;
 	
@@ -187,7 +187,7 @@ public void run() {
 						
 						long endTime = System.currentTimeMillis();
 						
-						PingResult result = (PingResult) results.get(packet.getSourceAsInetAddress());
+						PingResult result = results.get(packet.getSourceAsInetAddress());
 						if (result == null) {
 							LOG.warning("ICMP packet received from an unknown address: " + packet.getSourceAsInetAddress());
 							continue;

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -22,7 +22,7 @@
  */
 public class TCPPinger implements Pinger {
 	
-	private static final Logger LOG = Logger.getLogger(UDPPinger.class.getName());
+	static final Logger LOG = Logger.getLogger(UDPPinger.class.getName());
 	
 	private static final int PROBE_TCP_PORT = 80;
 	

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -21,7 +21,7 @@
  */
 public class UDPPinger implements Pinger {
 	
-	private static final Logger LOG = Logger.getLogger(UDPPinger.class.getName());
+	static final Logger LOG = Logger.getLogger(UDPPinger.class.getName());
 	
 	private static final int PROBE_UDP_PORT = 33381;
 	

File: src/net/azib/ipscan/core/values/NotAvailableValue.java
Patch:
@@ -11,7 +11,7 @@
  *
  * @author anton
  */
-public class NotAvailableValue implements Comparable {
+public class NotAvailableValue implements Comparable<Object> {
 	
 	public static final NotAvailableValue INSTANCE = new NotAvailableValue();
 	

File: src/net/azib/ipscan/core/values/NotScannedValue.java
Patch:
@@ -11,7 +11,7 @@
  *
  * @author anton
  */
-public class NotScannedValue implements Comparable {
+public class NotScannedValue implements Comparable<Object> {
 	
 	public static final NotScannedValue INSTANCE = new NotScannedValue();
 	

File: src/net/azib/ipscan/fetchers/FetcherRegistry.java
Patch:
@@ -17,12 +17,12 @@ public interface FetcherRegistry {
 	/**
 	 * @return a List of all registered Fetchers
 	 */
-	public Collection getRegisteredFetchers();
+	public Collection<Fetcher> getRegisteredFetchers();
 	
 	/**
 	 * @return a List of selected Fetchers only
 	 */
-	public Collection getSelectedFetchers();
+	public Collection<Fetcher> getSelectedFetchers();
 
 	/**
 	 * Searches for selected fetcher with the given label

File: src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java
Patch:
@@ -28,7 +28,7 @@ public String getLabel() {
 
 	public Object scan(ScanningSubject subject) {
 		scanPorts(subject);
-		SortedSet filteredPorts = getFilteredPorts(subject);
+		SortedSet<Integer> filteredPorts = getFilteredPorts(subject);
 		return filteredPorts.size() > 0 ? new NumericListValue(filteredPorts, displayAsRanges) : null;
 	}
 }

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class PingFetcher implements Fetcher {
 	
-	private static final Logger LOG = LoggerFactory.getLogger();
+	static final Logger LOG = LoggerFactory.getLogger();
 	
 	public static final String PARAMETER_PINGER = "pinger";
 	

File: src/net/azib/ipscan/gui/EditFavoritesDialog.java
Patch:
@@ -49,8 +49,8 @@ private void createShell() {
 		
 		favoritesList = new List(shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL);
 		favoritesList.setLayoutData(LayoutHelper.formData(330, 200, new FormAttachment(0), null, new FormAttachment(messageLabel), null));
-		for (Iterator i = Config.getFavoritesConfig().iterateNames(); i.hasNext();) {
-			String name = (String) i.next();
+		for (Iterator<String> i = Config.getFavoritesConfig().iterateNames(); i.hasNext();) {
+			String name = i.next();
 			favoritesList.add(name);
 		}
 		
@@ -100,7 +100,7 @@ private void saveFavorites() {
 		favoritesConfig.store();
 	}
 	
-	private class DeleteButtonListener implements Listener {
+	class DeleteButtonListener implements Listener {
 		public void handleEvent(Event event) {
 			favoritesList.remove(favoritesList.getSelectionIndices());			
 		}

File: src/net/azib/ipscan/gui/GettingStartedDialog.java
Patch:
@@ -81,7 +81,7 @@ public void handleEvent(Event event) {
 		displayActivePage();
 	}
 	
-	private void displayActivePage() {
+	void displayActivePage() {
 		String text = Labels.getLabel("text.gettingStarted" + activePage);
 		gettingStartedText.setText(text);
 		

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -143,15 +143,15 @@ private static Menu initMenu(Menu menu, String label) {
 		return subMenu;
 	}
 	
-	private Listener initListener(Class listenerClass) {
+	private Listener initListener(Class<? extends Listener> listenerClass) {
 		// register the component if it is not registered yet
 		if (container.getComponentAdapter(listenerClass) == null)
 			container.registerComponentImplementation(listenerClass);
 		// .. and create the instance, satisfying all the dependencies
 		return (Listener) container.getComponentInstance(listenerClass);
 	}
 	
-	private static MenuItem initMenuItem(Menu parent, String label, String acceleratorText, Integer accelerator, Listener listener) {
+	static MenuItem initMenuItem(Menu parent, String label, String acceleratorText, Integer accelerator, Listener listener) {
 		MenuItem menuItem = new MenuItem(parent, label == null ? SWT.SEPARATOR : SWT.PUSH);
 		
 		if (label != null) 

File: src/net/azib/ipscan/gui/actions/BrowserLauncher.java
Patch:
@@ -29,7 +29,7 @@ public static void openURL(String url) {
 			}
 			else
 			if (Platform.MAC_OS) {
-				Class fileMgr = Class.forName("com.apple.eio.FileManager");
+				Class<?> fileMgr = Class.forName("com.apple.eio.FileManager");
 				Method openURL = fileMgr.getDeclaredMethod("openURL", new Class[] { String.class });
 				openURL.invoke(null, new Object[] { url });
 			}

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -100,7 +100,7 @@ public void handleEvent(Event event) {
 	 * Checks that there is at least one item selected in the results list.
 	 * @param mainWindow
 	 */
-	private static void checkSelection(ResultTable resultTable) {
+	static void checkSelection(ResultTable resultTable) {
 		if (resultTable.getItemCount() <= 0) {
 			throw new UserErrorException("commands.noResults");
 		}
@@ -127,9 +127,9 @@ public void handleEvent(Event event) {
 			
 			// update menu items
 			int index = 0;
-			for (Iterator i = Config.getOpenersConfig().iterateNames(); i.hasNext();) {
+			for (Iterator<String> i = Config.getOpenersConfig().iterateNames(); i.hasNext();) {
 				MenuItem menuItem = new MenuItem(openersMenu, SWT.CASCADE);
-				String name = (String)i.next();
+				String name = i.next();
 				
 				index++;
 				if (index <= 9) {

File: src/net/azib/ipscan/gui/actions/FavoritesActions.java
Patch:
@@ -100,9 +100,9 @@ public void handleEvent(Event event) {
 			}
 			
 			// update favorites menu items
-			for (Iterator i = favoritesConfig.iterateNames(); i.hasNext();) {
+			for (Iterator<String> i = favoritesConfig.iterateNames(); i.hasNext();) {
 				MenuItem menuItem = new MenuItem(favoritesMenu, SWT.CASCADE);
-				menuItem.setText((String) i.next());
+				menuItem.setText(i.next());
 				menuItem.addListener(SWT.Selection, favoritesSelectListener);
 			}
 		}

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -23,7 +23,7 @@
  */
 public class OpenerLauncher {
 	
-	private static final Logger LOG = LoggerFactory.getLogger();
+	static final Logger LOG = LoggerFactory.getLogger();
 	
 	private FetcherRegistry fetcherRegistry;
 	private ScanningResultList scanningResults;

File: src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -21,7 +21,7 @@
  */
 public class TerminalLauncher {
 	
-	private static final Logger LOG = LoggerFactory.getLogger();
+	static final Logger LOG = LoggerFactory.getLogger();
 	
 	/**
 	 * Launches the execString in the terminal.

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -36,7 +36,7 @@
  */
 public class RandomFeederGUI extends AbstractFeederGUI {
 
-	private static final Logger LOG = LoggerFactory.getLogger();
+	static final Logger LOG = LoggerFactory.getLogger();
 
 	private Label ipPrototypeLabel;
 	private Text ipPrototypeText;

File: ipscan-unittest/src/net/azib/ipscan/config/DimensionsConfigTest.java
Patch:
@@ -25,6 +25,7 @@ public class DimensionsConfigTest {
 	@Before
 	public void setUp() throws Exception {
 		preferences = Preferences.userRoot().node("ipscan-test");
+		preferences.clear();
 		config = new DimensionsConfig(preferences);
 	}
 

File: ipscan-unittest/src/net/azib/ipscan/config/NamedListConfigTest.java
Patch:
@@ -27,7 +27,7 @@ public class NamedListConfigTest {
 	@Before
 	public void setUp() throws Exception {
 		preferences = Preferences.userRoot().node("ipscan-test");
-		preferences.clear();
+		preferences.node(PREFERENCE_NAME).clear();
 		config = new NamedListConfig(preferences, PREFERENCE_NAME);
 	}
 
@@ -54,7 +54,7 @@ public void testLoad() throws Exception {
 		assertEquals(3, config.size());
 	}
 	
-	@Test
+	@Test @SuppressWarnings("unchecked")
 	public void testOrder() throws Exception {
 		preferences.put(PREFERENCE_NAME, "aa###aaa###bb###bbb###cc###ccc");
 		NamedListConfig config = new NamedListConfig(preferences, PREFERENCE_NAME);
@@ -76,7 +76,7 @@ public void testStore() throws Exception {
 		assertEquals("x###y###Buga muga x,1,2,3,4,5###opopo op : , . l ; - # | @@###127.0.0.1###192.168.2.25", preferences.get(PREFERENCE_NAME, ""));
 	}
 	
-	@Test
+	@Test @SuppressWarnings("unchecked")
 	public void testUpdate() {
 		config.add("z", "zzz");
 		config.add("y", "yyy");

File: ipscan-unittest/src/net/azib/ipscan/core/InetAddressUtilsTest.java
Patch:
@@ -88,7 +88,7 @@ public void testIsLikelyBroadcast() throws UnknownHostException {
 	
 	@Test
 	public void testGetAddressByName() throws Exception {
-		Enumeration ifaces = NetworkInterface.getNetworkInterfaces();
+		Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces();
 		ifaces.nextElement();
 		if (ifaces.hasMoreElements()) {		
 			// this test depends on the network configuraton of the system

File: ipscan-unittest/src/net/azib/ipscan/core/ScannerTest.java
Patch:
@@ -34,8 +34,8 @@
  */
 public class ScannerTest {
 	
-	private Set<Class> initCalled = new HashSet<Class>();
-	private Set<Class> cleanupCalled = new HashSet<Class>();
+	private Set<Class<? extends Fetcher>> initCalled = new HashSet<Class<? extends Fetcher>>();
+	private Set<Class<? extends Fetcher>> cleanupCalled = new HashSet<Class<? extends Fetcher>>();
 	private Scanner scanner;
 	private FetcherRegistry fetcherRegistry;
 	

File: ipscan-unittest/src/net/azib/ipscan/exporters/ExporterRegistryTest.java
Patch:
@@ -20,7 +20,7 @@ public class ExporterRegistryTest {
 	
 	@Test
 	public void testIterator() {
-		for (Iterator i = exporterRegistry.iterator(); i.hasNext(); ) {
+		for (Iterator<?> i = exporterRegistry.iterator(); i.hasNext(); ) {
 			Exporter exporter = (Exporter) i.next();
 			assertNotNull(exporter);
 			assertNotNull(exporter.getFilenameExtension());

File: ipscan-unittest/src/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java
Patch:
@@ -68,7 +68,7 @@ public void testLoadPreferences() throws Exception {
 		preferences.put(FetcherRegistryImpl.PREFERENCE_SELECTED_FETCHERS, hostnameFetcher.getLabel() + "###" + commentFetcher.getLabel());
 		fetcherRegistry = new FetcherRegistryImpl(new Fetcher[] {ipFetcher, hostnameFetcher, commentFetcher}, preferences);
 		assertEquals(2, fetcherRegistry.getSelectedFetchers().size());
-		Iterator iterator = fetcherRegistry.getSelectedFetchers().iterator();
+		Iterator<?> iterator = fetcherRegistry.getSelectedFetchers().iterator();
 		assertSame(hostnameFetcher, iterator.next());
 		assertSame(commentFetcher, iterator.next());
 	}
@@ -78,7 +78,7 @@ public void testUpdateSelectedFetchers() throws Exception {
 		// retain only one selected fetcher
 		fetcherRegistry.updateSelectedFetchers(new String[] {ipFetcher.getLabel()});
 		assertEquals(1, fetcherRegistry.getSelectedFetchers().size());
-		Iterator iterator = fetcherRegistry.getSelectedFetchers().iterator();
+		Iterator<?> iterator = fetcherRegistry.getSelectedFetchers().iterator();
 		assertEquals(ipFetcher.getLabel(), ((Fetcher)iterator.next()).getLabel());
 		assertEquals(ipFetcher.getLabel(), preferences.get(FetcherRegistryImpl.PREFERENCE_SELECTED_FETCHERS, null));
 		

File: src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -102,8 +102,8 @@ protected void positionButtonsInFormLayout(Button okButton, Button cancelButton,
 			cancelButton = fooButton;
 		}
 		// both buttons
-		cancelButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(100), new FormAttachment(control, 6), null));
-		okButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(cancelButton, -10), new FormAttachment(control, 6), null));
+		cancelButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(control, 0, SWT.RIGHT), new FormAttachment(control, 8), null));
+		okButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(cancelButton, -10), new FormAttachment(control, 8), null));
 	}
 
 	// common listeners follow

File: src/net/azib/ipscan/gui/EditOpenersDialog.java
Patch:
@@ -67,7 +67,7 @@ private void createShell() {
 		openersList = new List(shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL);
 		editFieldsGroup = new Group(shell, SWT.NONE);
 
-		openersList.setLayoutData(LayoutHelper.formData(135, 200, null, null, new FormAttachment(messageLabel), new FormAttachment(editFieldsGroup, 0, SWT.BOTTOM)));
+		openersList.setLayoutData(LayoutHelper.formData(135, 200, null, null, new FormAttachment(messageLabel, 10), new FormAttachment(editFieldsGroup, 0, SWT.BOTTOM)));
 		for (Iterator i = Config.getOpenersConfig().iterateNames(); i.hasNext();) {
 			String name = (String) i.next();
 			openersList.add(name);
@@ -90,12 +90,12 @@ private void createShell() {
 		deleteButton.setText(Labels.getLabel("button.delete"));
 		deleteButton.addListener(SWT.Selection, new DeleteButtonListener());
 
-		upButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(messageLabel), null));
+		upButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(messageLabel, 10), null));
 		downButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(upButton), null));
 		addButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(downButton, 16), null));	
 		deleteButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), null, new FormAttachment(addButton), null));
 						
-		editFieldsGroup.setLayoutData(LayoutHelper.formData(new FormAttachment(upButton, 10), null, new FormAttachment(messageLabel), null));
+		editFieldsGroup.setLayoutData(LayoutHelper.formData(new FormAttachment(upButton, 10), null, new FormAttachment(messageLabel, 10), null));
 		RowLayout rowLayout = new RowLayout(SWT.VERTICAL);
 		rowLayout.fill = true;
 		rowLayout.justify = true; 

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -86,8 +86,8 @@ private void createMainMenuItems(Menu menu) {
 		createFavoritesMenu(menu);
 		
 		subMenu = initMenu(menu, "menu.tools");
-		initMenuItem(subMenu, "menu.tools.options", Platform.MAC_OS ? "Ctrl+," : "Ctrl+O", new Integer(SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.Options.class));
-		initMenuItem(subMenu, "menu.tools.fetchers", null, null, initListener(ToolsActions.SelectFetchers.class));
+		initMenuItem(subMenu, "menu.tools.options", "Ctrl+O", new Integer(SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.Options.class));
+		initMenuItem(subMenu, "menu.tools.fetchers", "Ctrl+Shift+O", new Integer(SWT.MOD1 | SWT.MOD2 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.SelectFetchers.class));
 		initMenuItem(subMenu, null, null, null, null);
 		initMenuItem(subMenu, "menu.tools.delete", null, null, null);
 		initMenuItem(subMenu, "menu.tools.lastInfo", "Ctrl+I", new Integer(SWT.MOD1 | 'I'), null);

File: ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -102,8 +102,8 @@ protected void positionButtonsInFormLayout(Button okButton, Button cancelButton,
 			cancelButton = fooButton;
 		}
 		// both buttons
-		cancelButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(100), new FormAttachment(control, 6), null));
-		okButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(cancelButton, -10), new FormAttachment(control, 6), null));
+		cancelButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(control, 0, SWT.RIGHT), new FormAttachment(control, 8), null));
+		okButton.setLayoutData(LayoutHelper.formData(85, SWT.DEFAULT, null, new FormAttachment(cancelButton, -10), new FormAttachment(control, 8), null));
 	}
 
 	// common listeners follow

File: ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java
Patch:
@@ -67,7 +67,7 @@ private void createShell() {
 		openersList = new List(shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL);
 		editFieldsGroup = new Group(shell, SWT.NONE);
 
-		openersList.setLayoutData(LayoutHelper.formData(135, 200, null, null, new FormAttachment(messageLabel), new FormAttachment(editFieldsGroup, 0, SWT.BOTTOM)));
+		openersList.setLayoutData(LayoutHelper.formData(135, 200, null, null, new FormAttachment(messageLabel, 10), new FormAttachment(editFieldsGroup, 0, SWT.BOTTOM)));
 		for (Iterator i = Config.getOpenersConfig().iterateNames(); i.hasNext();) {
 			String name = (String) i.next();
 			openersList.add(name);
@@ -90,12 +90,12 @@ private void createShell() {
 		deleteButton.setText(Labels.getLabel("button.delete"));
 		deleteButton.addListener(SWT.Selection, new DeleteButtonListener());
 
-		upButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(messageLabel), null));
+		upButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(messageLabel, 10), null));
 		downButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(upButton), null));
 		addButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), new FormAttachment(deleteButton, 0, SWT.RIGHT), new FormAttachment(downButton, 16), null));	
 		deleteButton.setLayoutData(LayoutHelper.formData(new FormAttachment(openersList), null, new FormAttachment(addButton), null));
 						
-		editFieldsGroup.setLayoutData(LayoutHelper.formData(new FormAttachment(upButton, 10), null, new FormAttachment(messageLabel), null));
+		editFieldsGroup.setLayoutData(LayoutHelper.formData(new FormAttachment(upButton, 10), null, new FormAttachment(messageLabel, 10), null));
 		RowLayout rowLayout = new RowLayout(SWT.VERTICAL);
 		rowLayout.fill = true;
 		rowLayout.justify = true; 

File: ipscan/src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -86,8 +86,8 @@ private void createMainMenuItems(Menu menu) {
 		createFavoritesMenu(menu);
 		
 		subMenu = initMenu(menu, "menu.tools");
-		initMenuItem(subMenu, "menu.tools.options", Platform.MAC_OS ? "Ctrl+," : "Ctrl+O", new Integer(SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.Options.class));
-		initMenuItem(subMenu, "menu.tools.fetchers", null, null, initListener(ToolsActions.SelectFetchers.class));
+		initMenuItem(subMenu, "menu.tools.options", "Ctrl+O", new Integer(SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.Options.class));
+		initMenuItem(subMenu, "menu.tools.fetchers", "Ctrl+Shift+O", new Integer(SWT.MOD1 | SWT.MOD2 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.SelectFetchers.class));
 		initMenuItem(subMenu, null, null, null, null);
 		initMenuItem(subMenu, "menu.tools.delete", null, null, null);
 		initMenuItem(subMenu, "menu.tools.lastInfo", "Ctrl+I", new Integer(SWT.MOD1 | 'I'), null);

File: src/net/azib/ipscan/Main.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan;
 

File: src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/DimensionsConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/FavoritesConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/GlobalConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/Labels.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/LoggerFactory.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/NamedListConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/config/Platform.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: src/net/azib/ipscan/core/InetAddressUtils.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/PortIterator.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/Scanner.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScannerThread.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScannerThreadFactory.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScanningResult.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScanningResultsCallback.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScanningStateCallback.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: src/net/azib/ipscan/core/ScanningSubject.java
Patch:
@@ -1,9 +1,11 @@
 /**
  * This file is a part of Angry IP Scanner source code,
  * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 
+
 import java.net.InetAddress;
 import java.util.HashMap;
 import java.util.Map;

File: src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/ICMPSharedPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/PingResult.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/Pinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/PingerRegistryImpl.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: src/net/azib/ipscan/core/values/IntegerWithUnit.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.values;
 

File: src/net/azib/ipscan/core/values/NumericListValue.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.values;
 

File: src/net/azib/ipscan/exporters/ExportProcessor.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: src/net/azib/ipscan/exporters/Exporter.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: src/net/azib/ipscan/exporters/ExporterException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: src/net/azib/ipscan/exporters/ExporterRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: src/net/azib/ipscan/exporters/XMLExporter.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: src/net/azib/ipscan/feeders/FeederException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: src/net/azib/ipscan/feeders/FileFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: src/net/azib/ipscan/feeders/RandomFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: src/net/azib/ipscan/feeders/RangeFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: src/net/azib/ipscan/feeders/SmartTextFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: src/net/azib/ipscan/fetchers/FetcherException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/FetcherRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/FetcherRegistryUpdateListener.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/PacketLossFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/InputDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/MainWindow.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/OptionsDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/ScanningResultsConsumer.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/SelectFetchersDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/StatusBar.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/UserErrorException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: src/net/azib/ipscan/gui/actions/BrowserLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/ColumnsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/FavoritesActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/FileActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/GotoActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/HelpActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/actions/ToolsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: ipscan/src/net/azib/ipscan/Main.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan;
 

File: ipscan/src/net/azib/ipscan/config/ComponentRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/DimensionsConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/FavoritesConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/GlobalConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/Labels.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/LoggerFactory.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/NamedListConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/config/Platform.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.config;
 

File: ipscan/src/net/azib/ipscan/core/InetAddressUtils.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/PortIterator.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/Scanner.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScannerThread.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScannerThreadFactory.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScanningResult.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScanningResultList.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScanningResultsCallback.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScanningStateCallback.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 

File: ipscan/src/net/azib/ipscan/core/ScanningSubject.java
Patch:
@@ -1,9 +1,11 @@
 /**
  * This file is a part of Angry IP Scanner source code,
  * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core;
 
+
 import java.net.InetAddress;
 import java.util.HashMap;
 import java.util.Map;

File: ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/PingResult.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/Pinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/PingerRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/TCPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.net;
 

File: ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.values;
 

File: ipscan/src/net/azib/ipscan/core/values/NumericListValue.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.core.values;
 

File: ipscan/src/net/azib/ipscan/exporters/ExportProcessor.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: ipscan/src/net/azib/ipscan/exporters/Exporter.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: ipscan/src/net/azib/ipscan/exporters/ExporterException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: ipscan/src/net/azib/ipscan/exporters/ExporterRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: ipscan/src/net/azib/ipscan/exporters/XMLExporter.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.exporters;
 

File: ipscan/src/net/azib/ipscan/feeders/FeederException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: ipscan/src/net/azib/ipscan/feeders/FileFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.feeders;
 

File: ipscan/src/net/azib/ipscan/fetchers/FetcherException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/FetcherRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryUpdateListener.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/PacketLossFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.fetchers;
 

File: ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/InputDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/MainWindow.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/OptionsDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/ScanningResultsConsumer.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/StatusBar.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/UserErrorException.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui;
 

File: ipscan/src/net/azib/ipscan/gui/actions/BrowserLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/FavoritesActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/FileActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/GotoActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/HelpActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.actions;
 

File: ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java
Patch:
@@ -1,5 +1,7 @@
 /**
- * 
+ * This file is a part of Angry IP Scanner source code,
+ * see http://www.azib.net/ for more information.
+ * Licensed under GPLv2.
  */
 package net.azib.ipscan.gui.feeders;
 

File: src/net/azib/ipscan/gui/InputDialog.java
Patch:
@@ -71,6 +71,8 @@ public void widgetSelected(org.eclipse.swt.events.SelectionEvent e) {
 				shell.dispose();
 			}
 		});
+		
+		text.setFocus();
 	}
 	
 	private void setText(String text) {

File: src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -108,7 +108,7 @@ private void createCommandsMenuItems(Menu menu) {
 		initMenuItem(menu, "menu.commands.details", null, null, initListener(CommandsActions.Details.class));
 		initMenuItem(menu, null, null, null, null);
 		initMenuItem(menu, "menu.commands.rescan", "Ctrl+R", new Integer(SWT.MOD1 | 'R'), null);
-		initMenuItem(menu, "menu.commands.delete", "Del", new Integer(SWT.DEL), initListener(CommandsActions.Delete.class));
+		initMenuItem(menu, "menu.commands.delete", "Del", null, initListener(CommandsActions.Delete.class));
 		initMenuItem(menu, null, null, null, null);
 		initMenuItem(menu, "menu.commands.copy", "Ctrl+C", new Integer(SWT.MOD1 | 'C'), initListener(CommandsActions.CopyIP.class));
 		initMenuItem(menu, "menu.commands.copyDetails", null, null, initListener(CommandsActions.CopyIPDetails.class));

File: src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -75,6 +75,7 @@ public void handleEvent(Event e) {
 		};
 		addListener(SWT.Traverse, detailsListener);
 		addListener(SWT.MouseDoubleClick, detailsListener);
+		addListener(SWT.KeyDown, new CommandsActions.Delete(this));
 		
 		addListener(SWT.SetData, new SetDataListener());
 	}

File: src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -54,6 +54,9 @@ public Delete(ResultTable resultTable) {
 		}
 
 		public void handleEvent(Event event) {
+			// ignore other keys if this is a KeyDown event
+			if (event.type == SWT.KeyDown && event.keyCode != SWT.DEL)
+				return;			
 			checkSelection(resultTable);
 			int firstSelection = resultTable.getSelectionIndex();
 			resultTable.remove(resultTable.getSelectionIndices());

File: ipscan/src/net/azib/ipscan/gui/InputDialog.java
Patch:
@@ -71,6 +71,8 @@ public void widgetSelected(org.eclipse.swt.events.SelectionEvent e) {
 				shell.dispose();
 			}
 		});
+		
+		text.setFocus();
 	}
 	
 	private void setText(String text) {

File: ipscan/src/net/azib/ipscan/gui/MainMenu.java
Patch:
@@ -108,7 +108,7 @@ private void createCommandsMenuItems(Menu menu) {
 		initMenuItem(menu, "menu.commands.details", null, null, initListener(CommandsActions.Details.class));
 		initMenuItem(menu, null, null, null, null);
 		initMenuItem(menu, "menu.commands.rescan", "Ctrl+R", new Integer(SWT.MOD1 | 'R'), null);
-		initMenuItem(menu, "menu.commands.delete", "Del", new Integer(SWT.DEL), initListener(CommandsActions.Delete.class));
+		initMenuItem(menu, "menu.commands.delete", "Del", null, initListener(CommandsActions.Delete.class));
 		initMenuItem(menu, null, null, null, null);
 		initMenuItem(menu, "menu.commands.copy", "Ctrl+C", new Integer(SWT.MOD1 | 'C'), initListener(CommandsActions.CopyIP.class));
 		initMenuItem(menu, "menu.commands.copyDetails", null, null, initListener(CommandsActions.CopyIPDetails.class));

File: ipscan/src/net/azib/ipscan/gui/ResultTable.java
Patch:
@@ -75,6 +75,7 @@ public void handleEvent(Event e) {
 		};
 		addListener(SWT.Traverse, detailsListener);
 		addListener(SWT.MouseDoubleClick, detailsListener);
+		addListener(SWT.KeyDown, new CommandsActions.Delete(this));
 		
 		addListener(SWT.SetData, new SetDataListener());
 	}

File: ipscan/src/net/azib/ipscan/gui/actions/CommandsActions.java
Patch:
@@ -54,6 +54,9 @@ public Delete(ResultTable resultTable) {
 		}
 
 		public void handleEvent(Event event) {
+			// ignore other keys if this is a KeyDown event
+			if (event.type == SWT.KeyDown && event.keyCode != SWT.DEL)
+				return;			
 			checkSelection(resultTable);
 			int firstSelection = resultTable.getSelectionIndex();
 			resultTable.remove(resultTable.getSelectionIndices());

File: src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -84,9 +84,8 @@ private void sendReceiveEchoPacket(RawSocket socket, InetAddress address, int se
 				long start = OctetConverter.octetsToLong(data, dataOffset);
 				long time = end - start;
 				
-				result.totalTime += time;
-				result.replyCount++;
-				result.ttl = packet.getTTL() & 0xFF;
+				result.addReply(time);
+				result.setTTL(packet.getTTL() & 0xFF);
 			}
 		}
 		catch (InterruptedIOException e) {

File: src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -44,8 +44,7 @@ public PingResult ping(InetAddress address, int count) throws IOException {
 				socket.receive(packet);
 			}
 			catch (PortUnreachableException e) {
-				result.replyCount++;
-				result.totalTime+=System.currentTimeMillis()-startTime;
+				result.addReply(System.currentTimeMillis()-startTime);
 			}
 			catch (SocketTimeoutException e) {
 			}

File: ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java
Patch:
@@ -84,9 +84,8 @@ private void sendReceiveEchoPacket(RawSocket socket, InetAddress address, int se
 				long start = OctetConverter.octetsToLong(data, dataOffset);
 				long time = end - start;
 				
-				result.totalTime += time;
-				result.replyCount++;
-				result.ttl = packet.getTTL() & 0xFF;
+				result.addReply(time);
+				result.setTTL(packet.getTTL() & 0xFF);
 			}
 		}
 		catch (InterruptedIOException e) {

File: ipscan/src/net/azib/ipscan/core/net/UDPPinger.java
Patch:
@@ -44,8 +44,7 @@ public PingResult ping(InetAddress address, int count) throws IOException {
 				socket.receive(packet);
 			}
 			catch (PortUnreachableException e) {
-				result.replyCount++;
-				result.totalTime+=System.currentTimeMillis()-startTime;
+				result.addReply(System.currentTimeMillis()-startTime);
 			}
 			catch (SocketTimeoutException e) {
 			}

File: src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -13,6 +13,8 @@
  * @author anton
  */
 public class OpenersConfig extends NamedListConfig {
+	
+	private static final Logger LOG = Logger.getLogger(OpenersConfig.class.getName());
 
 	public OpenersConfig() {
 		super("openers");
@@ -69,7 +71,7 @@ public static class Opener {
 			}
 			catch (ArrayIndexOutOfBoundsException e) {
 				// this happens when broken settings have been loaded
-				Logger.global.fine("Broken opener config read: " + serialized);
+				LOG.fine("Broken opener config read: " + serialized);
 			}
 		}
 

File: src/net/azib/ipscan/core/InetAddressUtils.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class InetAddressUtils {
 	
+	private static final Logger LOG = Logger.getLogger(InetAddressUtils.class.getName());
+	
 	// Warning! IPv4 specific code
 	public static final Pattern IP_ADDRESS_REGEX = Pattern.compile("\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b");
 
@@ -151,7 +153,7 @@ public static String getAddressByName(String hostname) throws UnknownHostExcepti
 				}
 			}
 			catch (SocketException e) {
-				Logger.global.log(Level.FINE, "Cannot enumerate network interfaces", e);
+				LOG.log(Level.FINE, "Cannot enumerate network interfaces", e);
 			}
 		}
 		return address.getHostAddress();

File: src/net/azib/ipscan/feeders/FileFeeder.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class FileFeeder implements Feeder {
 	
+	private static final Logger LOG = Logger.getLogger(FileFeeder.class.getName());
+	
 	/** Found IP address Strings are put here */
 	private List foundIPAddresses;
 	private Iterator foundIPAddressesIterator;
@@ -113,7 +115,7 @@ public InetAddress next() {
 			return InetAddress.getByName((String) foundIPAddressesIterator.next());
 		}
 		catch (UnknownHostException e) {
-			Logger.global.log(Level.WARNING, "malformedIP", e);
+			LOG.log(Level.WARNING, "malformedIP", e);
 			throw new FeederException("malformedIP");
 		}
 	}

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class PingFetcher implements Fetcher {
 	
+	private static final Logger LOG = Logger.getLogger(PingFetcher.class.getName());
+	
 	public static final String PARAMETER_PINGER = "pinger";
 
 	/** The shared pinger - this one must be static, because PingTTLFetcher will use it as well */
@@ -52,7 +54,7 @@ protected PingResult executePing(ScanningSubject subject) {
 			}
 			catch (IOException e) {
 				// if this is not a timeout
-				Logger.global.log(Level.WARNING, "Pinging failed", e);
+				LOG.log(Level.WARNING, "Pinging failed", e);
 				// return an empty ping result
 				result = new PingResult(subject.getIPAddress());
 			}

File: src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class OpenerLauncher {
 	
+	private static final Logger LOG = Logger.getLogger(OpenerLauncher.class.getName());
+	
 	private FetcherRegistry fetcherRegistry;
 	private ScanningResultList scanningResults;
 	
@@ -48,7 +50,7 @@ public void launch(Opener opener, int selectedItem) {
 				}
 			}
 			catch (Exception e) {
-				Logger.global.log(Level.WARNING, "opener.failed", e);
+				LOG.log(Level.WARNING, "opener.failed", e);
 				throw new UserErrorException("opener.failed", openerString);
 			}
 		}

File: src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class TerminalLauncher {
 	
+	private static final Logger LOG = Logger.getLogger(TerminalLauncher.class.getName());
+	
 	/**
 	 * Launches the execString in the terminal.
 	 * Supports Linux/Unix, MacOS, and Windows
@@ -45,7 +47,7 @@ public static void launchInTerminal(String execString, File workingDir) {
 			}
 		}
 		catch (Exception e) {
-			Logger.global.log(Level.WARNING, "openTerminal.failed", e);
+			LOG.log(Level.WARNING, "openTerminal.failed", e);
 			throw new UserErrorException("openTerminal.failed", execString);
 		}
 	}

File: ipscan/src/net/azib/ipscan/config/OpenersConfig.java
Patch:
@@ -13,6 +13,8 @@
  * @author anton
  */
 public class OpenersConfig extends NamedListConfig {
+	
+	private static final Logger LOG = Logger.getLogger(OpenersConfig.class.getName());
 
 	public OpenersConfig() {
 		super("openers");
@@ -69,7 +71,7 @@ public static class Opener {
 			}
 			catch (ArrayIndexOutOfBoundsException e) {
 				// this happens when broken settings have been loaded
-				Logger.global.fine("Broken opener config read: " + serialized);
+				LOG.fine("Broken opener config read: " + serialized);
 			}
 		}
 

File: ipscan/src/net/azib/ipscan/core/InetAddressUtils.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class InetAddressUtils {
 	
+	private static final Logger LOG = Logger.getLogger(InetAddressUtils.class.getName());
+	
 	// Warning! IPv4 specific code
 	public static final Pattern IP_ADDRESS_REGEX = Pattern.compile("\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b");
 
@@ -151,7 +153,7 @@ public static String getAddressByName(String hostname) throws UnknownHostExcepti
 				}
 			}
 			catch (SocketException e) {
-				Logger.global.log(Level.FINE, "Cannot enumerate network interfaces", e);
+				LOG.log(Level.FINE, "Cannot enumerate network interfaces", e);
 			}
 		}
 		return address.getHostAddress();

File: ipscan/src/net/azib/ipscan/feeders/FileFeeder.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class FileFeeder implements Feeder {
 	
+	private static final Logger LOG = Logger.getLogger(FileFeeder.class.getName());
+	
 	/** Found IP address Strings are put here */
 	private List foundIPAddresses;
 	private Iterator foundIPAddressesIterator;
@@ -113,7 +115,7 @@ public InetAddress next() {
 			return InetAddress.getByName((String) foundIPAddressesIterator.next());
 		}
 		catch (UnknownHostException e) {
-			Logger.global.log(Level.WARNING, "malformedIP", e);
+			LOG.log(Level.WARNING, "malformedIP", e);
 			throw new FeederException("malformedIP");
 		}
 	}

File: ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class PingFetcher implements Fetcher {
 	
+	private static final Logger LOG = Logger.getLogger(PingFetcher.class.getName());
+	
 	public static final String PARAMETER_PINGER = "pinger";
 
 	/** The shared pinger - this one must be static, because PingTTLFetcher will use it as well */
@@ -52,7 +54,7 @@ protected PingResult executePing(ScanningSubject subject) {
 			}
 			catch (IOException e) {
 				// if this is not a timeout
-				Logger.global.log(Level.WARNING, "Pinging failed", e);
+				LOG.log(Level.WARNING, "Pinging failed", e);
 				// return an empty ping result
 				result = new PingResult(subject.getIPAddress());
 			}

File: ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class OpenerLauncher {
 	
+	private static final Logger LOG = Logger.getLogger(OpenerLauncher.class.getName());
+	
 	private FetcherRegistry fetcherRegistry;
 	private ScanningResultList scanningResults;
 	
@@ -48,7 +50,7 @@ public void launch(Opener opener, int selectedItem) {
 				}
 			}
 			catch (Exception e) {
-				Logger.global.log(Level.WARNING, "opener.failed", e);
+				LOG.log(Level.WARNING, "opener.failed", e);
 				throw new UserErrorException("opener.failed", openerString);
 			}
 		}

File: ipscan/src/net/azib/ipscan/gui/actions/TerminalLauncher.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class TerminalLauncher {
 	
+	private static final Logger LOG = Logger.getLogger(TerminalLauncher.class.getName());
+	
 	/**
 	 * Launches the execString in the terminal.
 	 * Supports Linux/Unix, MacOS, and Windows
@@ -45,7 +47,7 @@ public static void launchInTerminal(String execString, File workingDir) {
 			}
 		}
 		catch (Exception e) {
-			Logger.global.log(Level.WARNING, "openTerminal.failed", e);
+			LOG.log(Level.WARNING, "openTerminal.failed", e);
 			throw new UserErrorException("openTerminal.failed", execString);
 		}
 	}

File: ipscan-unittest/src/net/azib/ipscan/MainTest.java
Patch:
@@ -18,8 +18,8 @@ public void getLocalizedMessage() {
 		// unknown exception
 		final boolean wasStackTraceLogged[] = {false};
 		Throwable e = new Exception("hello, test!");
-		Logger.global.setUseParentHandlers(false);
-		Logger.global.addHandler(new Handler() {
+		Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).setUseParentHandlers(false);
+		Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).addHandler(new Handler() {
 			public void close() throws SecurityException {
 			}
 			public void flush() {

File: src/net/azib/ipscan/fetchers/CommentFetcher.java
Patch:
@@ -20,7 +20,7 @@ public class CommentFetcher implements Fetcher {
 	 * @see net.azib.ipscan.fetchers.Fetcher#getLabel()
 	 */
 	public String getLabel() {
-		return "fetcher.ip";
+		return "fetcher.comment";
 	}
 
 	/**

File: ipscan/src/net/azib/ipscan/fetchers/CommentFetcher.java
Patch:
@@ -20,7 +20,7 @@ public class CommentFetcher implements Fetcher {
 	 * @see net.azib.ipscan.fetchers.Fetcher#getLabel()
 	 */
 	public String getLabel() {
-		return "fetcher.ip";
+		return "fetcher.comment";
 	}
 
 	/**

File: ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java
Patch:
@@ -49,6 +49,9 @@ public abstract class ICMPPacket extends IPPacket {
 
   /** The ICMP type number for an echo reply. */
   public static final int TYPE_ECHO_REPLY     = 0;
+  
+  /** The ICMP type number for an "host unreachable" message. */
+  public static final int TYPE_HOST_UNREACHABLE = 3;
 
   /** The byte offset into the IP packet where the ICMP packet begins. */
   int _offset;

File: src/net/azib/ipscan/core/net/PingResult.java
Patch:
@@ -18,7 +18,7 @@ public class PingResult {
 	long totalTime;
 	int replyCount;
 	
-	PingResult(InetAddress address) {
+	public PingResult(InetAddress address) {
 		this.address = address;
 		
 	}

File: src/net/azib/ipscan/fetchers/PingFetcher.java
Patch:
@@ -52,6 +52,8 @@ protected PingResult executePing(ScanningSubject subject) {
 			catch (IOException e) {
 				// if this is not a timeout
 				Logger.global.log(Level.WARNING, "Pinging failed", e);
+				// return an empty ping result
+				result = new PingResult(subject.getIPAddress());
 			}
 			// remember the result for other fetchers to use
 			subject.setParameter(PARAMETER_PINGER, result);

File: src/net/azib/ipscan/fetchers/PortsFetcher.java
Patch:
@@ -21,6 +21,8 @@
 /**
  * PortsFetcher scans TCP ports.
  * Port list is obtained using the {@link net.azib.ipscan.core.PortIterator}.
+ * 
+ * TODO: return a specialized "list" object instead of a String
  *
  * @author anton
  */

File: src/net/azib/ipscan/gui/actions/FeederActions.java
Patch:
@@ -33,6 +33,8 @@
  * @author anton
  */
 public class FeederActions {
+	
+	private static final Logger LOG = Logger.getLogger(FeederActions.class.getName());
 
 	public static class HostnameButton implements SelectionListener, TraverseListener {
 		
@@ -144,7 +146,7 @@ public void handleEvent(Event event) {
 				}
 			}
 			catch (SocketException e) {
-				Logger.global.log(Level.FINE, "Cannot enumerate network interfaces", e);
+				LOG.log(Level.FINE, "Cannot enumerate network interfaces", e);
 			}
 		}
 	}

File: src/net/azib/ipscan/core/Scanner.java
Patch:
@@ -37,7 +37,7 @@ public void scan(InetAddress address, ScanningResult result) {
 		
 		// populate results
 		int fetcherIndex = 0;
-		for (Iterator i = fetcherRegistry.getRegisteredFetchers().iterator(); i.hasNext();) {
+		for (Iterator i = fetcherRegistry.getSelectedFetchers().iterator(); i.hasNext();) {
 			Fetcher fetcher = (Fetcher) i.next();
 			if (!scanningSubject.isScanningAborted()) {
 				String value = fetcher.scan(scanningSubject);

File: src/net/azib/ipscan/gui/EditOpenersDialog.java
Patch:
@@ -175,7 +175,7 @@ private class HintButtonListener implements Listener {
 		public void handleEvent(Event event) {
 			// compose the message with all available fetchers
 			StringBuffer message = new StringBuffer(Labels.getLabel("text.openers.hintText"));
-			for (Iterator i = fetcherResgitry.getRegisteredFetchers().iterator(); i.hasNext(); ) {
+			for (Iterator i = fetcherResgitry.getSelectedFetchers().iterator(); i.hasNext(); ) {
 				String fetcherLabel = ((Fetcher)i.next()).getLabel();
 				message.append("${").append(fetcherLabel).append("}   - ").append(Labels.getLabel(fetcherLabel)).append('\n');
 			}

File: src/net/azib/ipscan/gui/MainWindow.java
Patch:
@@ -198,12 +198,12 @@ private void createControls() {
 		// start/stop button
 		Button button = new Button(controlsArea, SWT.NONE);
 		shell.setDefaultButton(button);
-		button.setLayoutData(new RowData(SWT.DEFAULT, SWT.DEFAULT));
+		button.setLayoutData(new RowData(SWT.DEFAULT, 23));
 		button.addSelectionListener(new StartStopScanningAction(this, button));
 		
 		// feeder selection combobox
 		feederSelectionCombo = new Combo(controlsArea, SWT.READ_ONLY);
-		feederSelectionCombo.setLayoutData(new RowData(SWT.DEFAULT, SWT.DEFAULT));
+		feederSelectionCombo.setLayoutData(new RowData(SWT.DEFAULT, 23));
 		for (Iterator i = feederGUIList.iterator(); i.hasNext();) {
 			AbstractFeederGUI feederGUI = (AbstractFeederGUI) i.next();
 			feederSelectionCombo.add(feederGUI.getFeederName());	

File: src/net/azib/ipscan/gui/feeders/FileFeederGUI.java
Patch:
@@ -63,7 +63,7 @@ protected void initialize() {
         formData = new FormData();
         formData.top = new FormAttachment(0);
         formData.left = new FormAttachment(fileNameText);
-		formData.height = 20;        
+		formData.height = 22;        
         browseButton.setLayoutData(formData);
         browseButton.addSelectionListener(new SelectionListener() {
 

