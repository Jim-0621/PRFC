File: weixin-java-channel/src/main/java/me/chanjar/weixin/channel/bean/home/tree/CatTreeNode.java
Patch:
@@ -28,5 +28,5 @@ public class CatTreeNode implements Serializable {
 
   /** 是否在用户端展示该分类。1为是，0为否 */
   @JsonProperty("is_displayed")
-  private Integer displayed;
+  private Boolean displayed;
 }

File: weixin-java-channel/src/main/java/me/chanjar/weixin/channel/bean/home/tree/LevelTreeInfo.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 import java.io.Serializable;
+import java.util.List;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -17,7 +18,7 @@
 public class LevelTreeInfo implements Serializable {
 
   /** 一级分类 */
-  @JsonProperty("level1")
-  private OneLevelTreeNode level1;
+  @JsonProperty("level_1")
+  private List<OneLevelTreeNode> level1;
 
 }

File: weixin-java-channel/src/main/java/me/chanjar/weixin/channel/bean/home/tree/OneLevelTreeNode.java
Patch:
@@ -1,6 +1,7 @@
 package me.chanjar.weixin.channel.bean.home.tree;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
+import java.util.List;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -18,7 +19,7 @@
 public class OneLevelTreeNode extends CatTreeNode {
 
   /** 二级分类 */
-  @JsonProperty("level2")
-  private CatTreeNode level2;
+  @JsonProperty("level_2")
+  private List<CatTreeNode> level2;
 
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/config/WxPayConfig.java
Patch:
@@ -449,7 +449,8 @@ private InputStream loadConfigInputStream(String configPath) throws WxPayExcepti
    */
   private Object[] p12ToPem() {
     String key = getMchId();
-    if (StringUtils.isBlank(key) || StringUtils.isBlank(this.getKeyPath())) {
+    if (StringUtils.isBlank(key) ||
+      (StringUtils.isBlank(this.getKeyPath()) && this.keyContent == null && StringUtils.isBlank(this.keyString))) {
       return null;
     }
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/util/json/WxOpenGsonBuilder.java
Patch:
@@ -26,7 +26,6 @@ public class WxOpenGsonBuilder {
     INSTANCE.registerTypeAdapter(WxOpenQueryAuthResult.class, new WxOpenQueryAuthResultGsonAdapter());
     INSTANCE.registerTypeAdapter(WxOpenAuthorizerInfoResult.class, new WxOpenAuthorizerInfoResultGsonAdapter());
     INSTANCE.registerTypeAdapter(WxOpenAuthorizerOptionResult.class, new WxOpenAuthorizerOptionResultGsonAdapter());
-    INSTANCE.registerTypeAdapter(WxFastMaAccountBasicInfoResult.class, new WxFastMaAccountBasicInfoGsonAdapter());
     INSTANCE.registerTypeAdapter(WxOpenAuthorizerListResult.class, new WxOpenAuthorizerListResultGsonAdapter());
   }
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/icp/WxOpenIcpCreateIcpVerifyTaskResult.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 
+import com.google.gson.annotations.SerializedName;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
@@ -22,7 +23,7 @@ public class WxOpenIcpCreateIcpVerifyTaskResult extends WxOpenResult {
   /**
    * 人脸核验任务id
    */
-  @JsonProperty("task_id")
+  @SerializedName("task_id")
   private String taskId;
 
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/ProfitSharingServiceImpl.java
Patch:
@@ -146,7 +146,7 @@ public ProfitSharingV3Result profitSharingQueryV3(String outOrderNo, String tran
   @Override
   public ProfitSharingV3Result profitSharingQueryV3(ProfitSharingQueryV3Request request) throws WxPayException {
     String url = String.format("%s/v3/profitsharing/orders/%s?transaction_id=%s", this.payService.getPayBaseUrl(),
-      request.getOutOrderNo(), request.getOutOrderNo());
+      request.getOutOrderNo(), request.getTransactionId());
     if(StringUtils.isNotEmpty(request.getSubMchId())){
       url += "&sub_mchid=" + request.getSubMchId();
     }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/icp/WxOpenIcpEntranceInfoResult.java
Patch:
@@ -7,6 +7,7 @@
 import me.chanjar.weixin.open.bean.result.WxOpenResult;
 
 import java.io.Serializable;
+import java.util.List;
 
 
 /**
@@ -49,7 +50,7 @@ public static class Info implements Serializable {
      * 驳回原因，备案不通过时返回
      */
     @SerializedName("audit_data")
-    private AuditData auditData;
+    private List<AuditData> auditData;
 
     /**
      * 备案入口是否对该小程序开放，0：不开放，1：开放。特定情况下入口不会开放，如小程序昵称包含某些关键词时、管局系统不可用时，当备案入口开放时才能提交备案申请

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/icp/WxOpenUploadIcpMediaParam.java
Patch:
@@ -34,7 +34,7 @@ public class WxOpenUploadIcpMediaParam implements Serializable {
    * 证件类型(参考：获取证件类型)，如果上传的是证件媒体材料，则必填，示例值：2
    */
   @SerializedName("certificate_type")
-  private String certificateType;
+  private Integer certificateType;
 
   /**
    * 媒体材料所属的备案字段名(参考：申请小程序备案接口)，如要用于多个备案字段，则填写其中一个字段名即可。
@@ -54,7 +54,7 @@ public CommonUploadMultiParam toCommonUploadMultiParam() {
     return CommonUploadMultiParam.builder()
       .normalParams(Arrays.asList(
         CommonUploadMultiParam.NormalParam.builder().name("type").value(type).build(),
-        CommonUploadMultiParam.NormalParam.builder().name("certificate_type").value(certificateType).build(),
+        CommonUploadMultiParam.NormalParam.builder().name("certificate_type").value(String.valueOf(certificateType)).build(),
         CommonUploadMultiParam.NormalParam.builder().name("icp_order_field").value(icpOrderField).build()
       ))
       .uploadParam(new CommonUploadParam("media", media))

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/message/WxOpenXmlMessage.java
Patch:
@@ -147,7 +147,7 @@ public class WxOpenXmlMessage implements Serializable {
    * 小程序唯一id
    */
   @XStreamAlias("authorizer_appid")
-  private String authorizerAppId;
+  private String beianAuthorizerAppId;
   /**
    * 备案状态，参考“获取小程序备案状态及驳回原因”接口的备案状态枚举¬
    */

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/xpay/WxMaXPaySigParams.java
Patch:
@@ -52,7 +52,7 @@ public String calcPaySig(String url, String postBody) {
     String ak = StringUtils.trimToEmpty(this.appKey);
     final String sigUri = convUrlToSigUri(url);
     final String paySig = calcPaySignature(sigUri, postBody, ak);
-    return paySig;
+    return paySig.toLowerCase();
   }
 
   public String calcSig(String postBody) {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaImmediateDeliveryServiceImpl.java
Patch:
@@ -197,7 +197,7 @@ public QueryFollowTraceResponse queryFollowTrace(
 
   @Override
   public GetDeliveryListResponse getDeliveryList() throws WxErrorException {
-    String responseContent = this.wxMaService.post(InstantDelivery.GET_DELIVERY_LIST_URL,"");
+    String responseContent = this.wxMaService.post(InstantDelivery.GET_DELIVERY_LIST_URL,"{}");
     GetDeliveryListResponse response = GetDeliveryListResponse.fromJson(responseContent);
     if (response.getErrcode() == -1) {
       throw new WxErrorException(WxError.fromJson(responseContent, WxType.MiniApp));

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/media/MediaImgUploadApacheHttpRequestExecutor.java
Patch:
@@ -47,7 +47,6 @@ public WxMediaImgUploadResult execute(String uri, File data, WxType wxType) thro
       .setMode(HttpMultipartMode.RFC6532)
       .build();
     httpPost.setEntity(entity);
-    httpPost.setHeader("Content-Type", ContentType.MULTIPART_FORM_DATA.toString());
 
     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {
       String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/voice/VoiceUploadApacheHttpRequestExecutor.java
Patch:
@@ -48,7 +48,6 @@ public Boolean execute(String uri, File data, WxType wxType) throws WxErrorExcep
       .setMode(HttpMultipartMode.RFC6532)
       .build();
     httpPost.setEntity(entity);
-    httpPost.setHeader("Content-Type", ContentType.MULTIPART_FORM_DATA.toString());
 
     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {
       String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/message/WxCpTpMessageRouter.java
Patch:
@@ -265,7 +265,7 @@ public WxCpXmlOutMessage route(final String suiteId, final WxCpTpXmlMessage wxMe
    * @return the wx cp xml out message
    */
   public WxCpXmlOutMessage route(final WxCpTpXmlMessage wxMessage, final Map<String, Object> context) {
-    return this.route(null, wxMessage, new HashMap<>(2));
+    return this.route(null, wxMessage, context);
   }
 
   /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialUploadApacheHttpRequestExecutor.java
Patch:
@@ -60,7 +60,9 @@ public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material, WxTyp
     }
 
     httpPost.setEntity(multipartEntityBuilder.build());
-    httpPost.setHeader("Content-Type", ContentType.MULTIPART_FORM_DATA.toString());
+    //手动设置的Content-Type请求头没有boundary，是一个非标准的文件上传请求头，虽然微信提供了对这类非标准请求的支持，但如果请求需要先经过我们的tomcat server，那么都会报错:the request was rejected because no multipart boundary was found
+    //不设置Content-Type请求头，httpclient将会自动设置，值为entity的getContentType方法返回值。MultipartEntityBuilder的getContentType方法将会返回boundary
+    //httpPost.setHeader("Content-Type", ContentType.MULTIPART_FORM_DATA.toString());
 
     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {
       String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/marketing/FavorCouponsGetResult.java
Patch:
@@ -171,7 +171,7 @@ public static class CutToMessage implements Serializable {
      * 示例值：100
      */
     @SerializedName(value = "single_price_max")
-    private Integer singlePriceMax;
+    private Long singlePriceMax;
 
     /**
      * 减至后的优惠单价
@@ -180,7 +180,7 @@ public static class CutToMessage implements Serializable {
      * 示例值：100
      */
     @SerializedName(value = "cut_to_price")
-    private Integer cutToPrice;
+    private Long cutToPrice;
   }
 
   @Data

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/marketing/FavorStocksQueryResult.java
Patch:
@@ -25,7 +25,7 @@ public class FavorStocksQueryResult implements Serializable {
    * 示例值：10
    */
   @SerializedName("total_count")
-  private Integer totalCount;
+  private Long totalCount;
 
   /**
    * 批次详情

File: weixin-java-channel/src/main/java/me/chanjar/weixin/channel/bean/lead/component/request/GetLeadInfoByComponentRequest.java
Patch:
@@ -43,9 +43,10 @@ public class GetLeadInfoByComponentRequest {
   private String lastBuffer;
 
   /**
-   * 接口版本号
+   * 接口版本号,默认=1
+   * =null和=1,微信返回的结构不一样,=1信息更全
    */
   @JsonProperty("version")
-  private int version;
+  private Integer version;
 
 }

File: weixin-java-channel/src/main/java/me/chanjar/weixin/channel/bean/lead/component/request/GetLeadsInfoByRequestIdRequest.java
Patch:
@@ -31,9 +31,10 @@ public class GetLeadsInfoByRequestIdRequest {
   private String lastBuffer;
 
   /**
-   * 接口版本号
+   * 接口版本号,默认=1
+   * =null和=1,微信返回的结构不一样,=1信息更全
    */
   @JsonProperty("version")
-  private int version;
+  private Integer version;
 
 }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenComponentServiceImpl.java
Patch:
@@ -609,7 +609,7 @@ public WxOpenGetResult getOpenAccount(String appId, String appIdType) throws WxE
 
   @Override
   public WxOpenHaveResult haveOpen() throws WxErrorException {
-    String json = post(GET_OPEN_URL, null);
+    String json = get(HAVE_OPEN_URL, "access_token");
     return WxOpenHaveResult.fromJson(json);
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/templatedata/TemplateOptions.java
Patch:
@@ -17,5 +17,5 @@ public class TemplateOptions implements Serializable {
 
   private String key;
 
-  private List<TemplateTitle> value;
+  private TemplateTitle value;
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/mail/WxCpMailMeetingSendRequest.java
Patch:
@@ -18,7 +18,7 @@
 @NoArgsConstructor
 @AllArgsConstructor
 @Accessors(chain = true)
-public class WxCpMailMeetingSendRequest extends WxCpMailScheduleSendRequest implements Serializable {
+public class WxCpMailMeetingSendRequest extends WxCpMailCommonSendRequest implements Serializable {
   private static final long serialVersionUID = -4961279393895454138L;
 
   /**

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/BankService.java
Patch:
@@ -22,7 +22,7 @@ public interface BankService {
    * 文档地址：<a href="https://pay.weixin.qq.com/wiki/doc/apiv3_partner/Offline/apis/chapter11_2_1.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3_partner/Offline/apis/chapter11_2_1.shtml</a>
    * </pre>
    *
-   * @param accountNumber 银行卡号	该字段需进行加密处理，加密方法详见敏感信息加密说明。(提醒：必须在HTTP头中上送Wechatpay-Serial)
+   * @param accountNumber 银行卡号
    * @return BankAccountResult 对私银行卡号开户银行信息
    * @throws WxPayException .
    */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOAuth2ServiceImpl.java
Patch:
@@ -115,8 +115,8 @@ public WxCpOauth2UserInfo getAuthUserInfo(String code) throws WxErrorException {
     JsonObject jo = GsonParser.parse(responseText);
 
     return WxCpOauth2UserInfo.builder()
-      .userId(GsonHelper.getString(jo, "UserId"))
-      .openId(GsonHelper.getString(jo, "OpenId"))
+      .userId(GsonHelper.getString(jo, "userid"))
+      .openId(GsonHelper.getString(jo, "openid"))
       .userTicket(GsonHelper.getString(jo, "user_ticket"))
       .externalUserId(GsonHelper.getString(jo, "external_userid"))
       .build();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/constant/WxCpApiPathConsts.java
Patch:
@@ -143,7 +143,7 @@ interface OAuth2 {
     /**
      * The constant GET_USER_DETAIL.
      */
-    String GET_USER_DETAIL = "/cgi-bin/user/getuserdetail";
+    String GET_USER_DETAIL = "/cgi-bin/auth/getuserdetail";
     /**
      * The constant URL_OAUTH2_AUTHORIZE.
      */

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialVoiceAndImageDownloadApacheHttpRequestExecutor.java
Patch:
@@ -46,7 +46,7 @@ public InputStream execute(String uri, String materialId, WxType wxType) throws
       // 下载媒体文件出错
       byte[] responseContent = IOUtils.toByteArray(inputStream);
       String responseContentString = new String(responseContent, StandardCharsets.UTF_8);
-      if (responseContentString.length() < 100) {
+      if (responseContentString.length() <= 215) {
         try {
           WxError wxError = WxGsonBuilder.create().fromJson(responseContentString, WxError.class);
           if (wxError.getErrorCode() != 0) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialVoiceAndImageDownloadJoddHttpRequestExecutor.java
Patch:
@@ -42,7 +42,7 @@ public InputStream execute(String uri, String materialId, WxType wxType) throws
       // 下载媒体文件出错
       byte[] responseContent = IOUtils.toByteArray(inputStream);
       String responseContentString = new String(responseContent, StandardCharsets.UTF_8);
-      if (responseContentString.length() < 100) {
+      if (responseContentString.length() <= 215) {
         try {
           WxError wxError = WxGsonBuilder.create().fromJson(responseContentString, WxError.class);
           if (wxError.getErrorCode() != 0) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialVoiceAndImageDownloadOkhttpRequestExecutor.java
Patch:
@@ -35,7 +35,7 @@ public InputStream execute(String uri, String materialId, WxType wxType) throws
     Request request = new Request.Builder().url(uri).get().post(requestBody).build();
     Response response = client.newCall(request).execute();
     String contentTypeHeader = response.header("Content-Type");
-    if ("text/plain".equals(contentTypeHeader)) {
+    if ("text/plain".equals(contentTypeHeader) || "application/json; charset=utf-8".equals(contentTypeHeader)) {
       String responseContent = response.body().string();
       throw new WxErrorException(WxError.fromJson(responseContent, WxType.MP));
     }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenComponentService.java
Patch:
@@ -75,7 +75,7 @@ public interface WxOpenComponentService {
   /**
    * 手机端打开授权链接.
    */
-  String COMPONENT_MOBILE_LOGIN_PAGE_URL = "https://mp.weixin.qq.com/safe/bindcomponent?action=bindcomponent&no_scan=1&auth_type=3&component_appid=%s&pre_auth_code=%s&redirect_uri=%s&auth_type=xxx&biz_appid=xxx#wechat_redirect";
+  String COMPONENT_MOBILE_LOGIN_PAGE_URL = "https://open.weixin.qq.com/wxaopen/safe/bindcomponent?action=bindcomponent&no_scan=1&component_appid=%s&pre_auth_code=%s&redirect_uri=%s&auth_type=xxx&biz_appid=xxx#wechat_redirect";
   /**
    * The constant CONNECT_OAUTH2_AUTHORIZE_URL.
    */

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/ma/WxMaVerifyBetaWeappVerifyInfo.java
Patch:
@@ -30,7 +30,7 @@ public class WxMaVerifyBetaWeappVerifyInfo implements Serializable {
    * 企业代码类型 1：统一社会信用代码（18 位） 2：组织机构代码（9 位 xxxxxxxx-x） 3：营业执照注册号(15 位)
    */
   @SerializedName("code_type")
-  private String codeType;
+  private Integer codeType;
 
   /**
    * 法人微信号

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/oauth2/WxOAuth2AccessToken.java
Patch:
@@ -29,7 +29,9 @@ public class WxOAuth2AccessToken implements Serializable {
 
   @SerializedName("scope")
   private String scope;
-
+  /**
+   * 是否为快照页模式虚拟账号，只有当用户是快照页模式虚拟账号时返回，值为1
+   */
   @SerializedName("is_snapshotuser")
   private Integer snapshotUser;
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/ApplymentsRequest.java
Patch:
@@ -499,7 +499,7 @@ public static class FinanceInstitutionInfo implements Serializable {
      * </pre>
      */
     @SerializedName(value = "finance_license_pics")
-    private String financeLicensePics;
+    private List<String> financeLicensePics;
 
   }
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/payscore/Detail.java
Patch:
@@ -5,6 +5,7 @@
 import lombok.NoArgsConstructor;
 
 import java.io.Serializable;
+import java.util.List;
 
 /**
  * 明细.
@@ -33,4 +34,6 @@ public class Detail implements Serializable {
   private String paidTime;
   @SerializedName("transaction_id")
   private String transactionId;
+  @SerializedName("promotion_detail")
+  private List<PromotionDetail> promotionDetail;
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/payscore/WxPartnerPayScoreRequest.java
Patch:
@@ -37,6 +37,8 @@ public String toJson() {
 
   /**
    * 子商户公众号下的用户表示sub_openid
+   * 微信用户在子商户公众号sub_appid下的唯一标识；
+   * need_user_confirm为false时，1. openid与sub_openid必须填写并且只能填写一个 2. 如果填写了sub_openid，那么sub_appid必填
    */
   @SerializedName("sub_openid")
   private String subOpenid;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/payscore/WxPartnerPayScoreResult.java
Patch:
@@ -24,6 +24,9 @@ public static WxPartnerPayScoreResult fromJson(String json) {
   @SerializedName("sub_mchid")
   private String subMchid;
 
+  /**
+   * 子商户公众号下的用户标识
+   */
   @SerializedName("sub_openid")
   private String subOpenId;
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/Applyment4SubServiceImpl.java
Patch:
@@ -65,9 +65,9 @@ public String modifySettlement(String subMchid, ModifySettlementRequest request)
   }
 
   @Override
-  public SettlementApplicationResult settlementApplication(String subMchid, String applicationNo) throws WxPayException {
+  public SettlementModifyStateQueryResult querySettlementModifyStatusByApplicationNo(String subMchid, String applicationNo) throws WxPayException {
     String url = String.format("%s/v3/apply4sub/sub_merchants/%s/application/%s", this.payService.getPayBaseUrl(), subMchid, applicationNo);
     String result = payService.getV3(url);
-    return GSON.fromJson(result, SettlementApplicationResult.class);
+    return GSON.fromJson(result, SettlementModifyStateQueryResult.class);
   }
 }

File: weixin-java-pay/src/test/java/com/github/binarywang/wxpay/bean/payscore/WxPayScoreRequestTest.java
Patch:
@@ -14,7 +14,7 @@ public void testToJson() {
       .appid("123")
       .serviceId("345")
       .serviceIntroduction("租借服务")
-      .timeRange(new TimeRange("OnAccept", "20200520225840"))
+      .timeRange(new TimeRange("20230901011023", "20230930235959","开始时间","结束时间"))
       .build();
     System.out.println(request.toJson());
     /*    {

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/enums/TradeTypeEnum.java
Patch:
@@ -26,7 +26,7 @@ public enum TradeTypeEnum {
   /**
    * H5
    */
-  H5("/v3/pay/transactions/h5", "/v3/combine-transactions/h5", "/v3/pay/partner/transactions/native");
+  H5("/v3/pay/transactions/h5", "/v3/combine-transactions/h5", "/v3/pay/partner/transactions/h5");
 
   /**
    * 单独下单url

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/PartnerPayScoreServiceImpl.java
Patch:
@@ -105,7 +105,7 @@ public WxPartnerPayScoreResult permissionsQueryByOpenId(String serviceId, String
     if (StringUtils.isBlank(subMchid)) {
       throw new WxPayException("sub_mchid不允许都为空");
     }
-    String url = String.format("%s/v3/payscore/partner/permissions/openid/%s", this.payService.getPayBaseUrl(), openId);
+    String url = String.format("%s/v3/payscore/partner/permissions/search?", this.payService.getPayBaseUrl(), openId);
     URIBuilder uriBuilder;
     try {
       uriBuilder = new URIBuilder(url);
@@ -140,7 +140,7 @@ public WxPartnerPayScoreResult permissionsTerminateByOpenId(String serviceId, St
     if (StringUtils.isAllEmpty(openId, subOpenid) || !StringUtils.isAnyEmpty(openId, subOpenid)) {
       throw new WxPayException("open_id,sub_openid不允许都填写或都不填写");
     }
-    String url = String.format("%s/v3/payscore/partner/permissions/openid/%s/terminate", this.payService.getPayBaseUrl(), openId);
+    String url = String.format("%s/v3/payscore/partner/permissions/terminate", this.payService.getPayBaseUrl(), openId);
     Map<String, Object> map = new HashMap<>(4);
     map.put("appid", appId);
     map.put("sub_appid", subAppid);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpMessage.java
Patch:
@@ -393,7 +393,7 @@ public static TaskCardBuilder TASKCARD() {
   }
 
   /**
-   * 获得任务卡片消息builder.
+   * 获得模板卡片消息builder.
    *
    * @return the template card builder
    */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/message/WxCpTpMessageRouter.java
Patch:
@@ -273,7 +273,8 @@ private boolean isMsgDuplicated(WxCpTpXmlMessage wxMessage) {
         .append("-").append(StringUtils.trimToEmpty(wxMessage.getAuthCorpId()))
         .append("-").append(StringUtils.trimToEmpty(wxMessage.getUserID()))
         .append("-").append(StringUtils.trimToEmpty(wxMessage.getChangeType()))
-        .append("-").append(StringUtils.trimToEmpty(wxMessage.getServiceCorpId()));
+        .append("-").append(StringUtils.trimToEmpty(wxMessage.getServiceCorpId()))
+        .append("-").append(StringUtils.trimToEmpty(wxMessage.getExternalUserID()));
     }
 
     if (wxMessage.getMsgType() != null) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -4,6 +4,7 @@
 import com.google.gson.reflect.TypeToken;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.WxCardApiSignature;
 import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.error.WxErrorException;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpSubscribeMsgServiceImpl.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.Serializable;
 import java.util.List;
 
+import static me.chanjar.weixin.common.api.WxConsts.ERR_CODE;
 import static me.chanjar.weixin.mp.enums.WxMpApiUrl.SubscribeMsg.*;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpMemberCardActivateTempInfoResultGsonAdapter.java
Patch:
@@ -1,6 +1,7 @@
 package me.chanjar.weixin.mp.util.json;
 
 import com.google.gson.*;
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.mp.bean.card.membercard.MemberCardUserInfo;
 import me.chanjar.weixin.mp.bean.card.membercard.NameValues;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpMemberCardUpdateResultGsonAdapter.java
Patch:
@@ -5,6 +5,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.mp.bean.card.membercard.WxMpMemberCardUpdateResult;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpMemberCardUserInfoResultGsonAdapter.java
Patch:
@@ -8,6 +8,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.mp.bean.card.membercard.MemberCardUserInfo;
 import me.chanjar.weixin.mp.bean.card.membercard.NameValues;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImpl.java
Patch:
@@ -129,7 +129,7 @@ public WxAccessToken getSuiteAccessTokenEntity(boolean forceRefresh) throws WxEr
   public String getSuiteTicket() throws WxErrorException {
     if (this.configStorage.isSuiteTicketExpired()) {
       // 本地suite ticket 不存在或者过期
-      WxError wxError = WxError.fromJson("{\"errcode\":40085, \"errmsg\":\"invaild suite ticket\"}", WxType.CP);
+      WxError wxError = WxError.fromJson("{\"errcode\":40085, \"errmsg\":\"invalid suite ticket\"}", WxType.CP);
       throw new WxErrorException(wxError);
     }
     return this.configStorage.getSuiteTicket();

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/urllink/GenerateUrlLinkRequest.java
Patch:
@@ -74,7 +74,7 @@ public class GenerateUrlLinkRequest implements Serializable {
    * </pre>
    */
   @SerializedName("expire_time")
-  private Integer expireTime;
+  private Long expireTime;
 
   /**
    * 到期失效的URL Link的失效间隔天数。生成的到期失效URL Link在该间隔时间到达前有效。最长间隔天数为365天。expire_type 为 1 必填

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/complaint/ComplaintDetailResult.java
Patch:
@@ -135,7 +135,7 @@ public static class ComplaintMedia implements Serializable {
      * </pre>
      */
     @SerializedName("media_url")
-    private String mediaUrl;
+    private List<String> mediaUrl;
 
   }
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/notify/WxPayOrderNotifyResult.java
Patch:
@@ -121,7 +121,7 @@ public class WxPayOrderNotifyResult extends BaseWxPayResult implements Serializa
    * 是否必填：是
    * 类型：String(16)
    * 示例值：JSAPI
-   * JSA描述：PI、NATIVE、APP
+   * 描述：JSAPI、NATIVE、APP
    * </pre>
    */
   @XStreamAlias("trade_type")

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimplePostRequestExecutor.java
Patch:
@@ -4,7 +4,6 @@
 import jodd.http.HttpRequest;
 import jodd.http.HttpResponse;
 import jodd.http.ProxyInfo;
-import jodd.util.StringPool;
 import me.chanjar.weixin.common.enums.WxType;
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
@@ -35,6 +34,7 @@ public String execute(String uri, String postEntity, WxType wxType) throws WxErr
     }
     request.withConnectionProvider(provider);
     if (postEntity != null) {
+      request.contentType("application/json", "utf-8");
       request.bodyText(postEntity);
     }
     HttpResponse response = request.send();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimplePostRequestExecutor.java
Patch:
@@ -24,7 +24,7 @@ public OkHttpSimplePostRequestExecutor(RequestHttp requestHttp) {
 
   @Override
   public String execute(String uri, String postEntity, WxType wxType) throws WxErrorException, IOException {
-    RequestBody body = RequestBody.Companion.create(postEntity, MediaType.parse("text/plain; charset=utf-8"));
+    RequestBody body = RequestBody.Companion.create(postEntity, MediaType.parse("application/json; charset=utf-8"));
     Request request = new Request.Builder().url(uri).post(body).build();
     Response response = requestHttp.getRequestHttpClient().newCall(request).execute();
     return this.handleResponse(wxType, Objects.requireNonNull(response.body()).string());

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaLiveServiceImplTest.java
Patch:
@@ -40,14 +40,14 @@ public void createRoom() throws Exception {
     roomInfo.setName("订阅通知直播间");
     roomInfo.setCoverImg(mediaUpload.getMediaId());
     Calendar c = Calendar.getInstance();
-    c.set(2020, Calendar.DECEMBER, 10, 8, 0);
+    c.set(2023, Calendar.FEBRUARY, 10, 8, 0);
     roomInfo.setStartTime(c.getTimeInMillis() / 1000);
-    c.set(2020, Calendar.DECEMBER, 10, 12, 0);
+    c.set(2023, Calendar.FEBRUARY, 10, 12, 0);
     roomInfo.setEndTime(c.getTimeInMillis() / 1000);
     roomInfo.setAnchorName("鹏军_专业小程序开发");
     roomInfo.setAnchorWechat("pengjun939961241");
-    roomInfo.setCreaterWechat("pengjun939961241");
     roomInfo.setShareImg(mediaUpload.getMediaId());
+    roomInfo.setFeedsImg(mediaUpload.getMediaId());
     roomInfo.setType(1);
     roomInfo.setScreenType(1);
     roomInfo.setCloseLike(0);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpTaskCardServiceImpl.java
Patch:
@@ -33,7 +33,8 @@ public void update(List<String> userIds, String taskId, String replaceName) thro
     data.put("userids", userIds);
     data.put("agentid", agentId);
     data.put("task_id", taskId);
-    data.put("replace_name", replaceName);
+    // 文档地址：https://open.work.weixin.qq.com/wwopen/devtool/interface?doc_id=16386
+    data.put("clicked_key", replaceName);
 
     String url = this.mainService.getWxCpConfigStorage().getApiUrl(UPDATE_TASK_CARD);
     this.mainService.post(url, WxGsonBuilder.create().toJson(data));

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/applyment/WxPayApplyment4SubCreateRequest.java
Patch:
@@ -434,7 +434,7 @@ public static class IdentityInfo implements Serializable {
        * 法定代表人说明函
        */
       @SerializedName("authorize_letter_copy")
-      private IdTypeEnum authorizeLetterCopy;
+      private String authorizeLetterCopy;
 
       /**
        * 身份证信息

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImpl.java
Patch:
@@ -669,7 +669,7 @@ public WxCpTpAppQrcode getAppQrcode(String suiteId, String appId, String state,
   public WxCpTpCorpId2OpenCorpId corpId2OpenCorpId(String corpId) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("corpid", corpId);
-    String result = post(configStorage.getApiUrl(CORPID_TO_OPENCORPID) +"?provider_access_token=" + this.configStorage.getAccessToken(corpId), jsonObject.toString());
+    String result = post(configStorage.getApiUrl(CORPID_TO_OPENCORPID) +"?provider_access_token=" + getWxCpProviderToken(), jsonObject.toString());
     return WxCpTpCorpId2OpenCorpId.fromJson(result);
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpUserService.java
Patch:
@@ -162,10 +162,11 @@ public interface WxCpTpUserService {
    * </pre>
    *
    * @param mobile 手机号码。长度为5~32个字节
+   * @param corpId – the corp id
    * @return userid mobile对应的成员userid
    * @throws WxErrorException .
    */
-  String getUserId(String mobile) throws WxErrorException;
+  String getUserId(String mobile, String corpId) throws WxErrorException;
 
   /**
    * 获取外部联系人详情.

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpUserServiceImpl.java
Patch:
@@ -186,10 +186,11 @@ public String openid2UserId(String openid) throws WxErrorException {
   }
 
   @Override
-  public String getUserId(String mobile) throws WxErrorException {
+  public String getUserId(String mobile, String corpId) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("mobile", mobile);
-    String url = mainService.getWxCpTpConfigStorage().getApiUrl(GET_USER_ID);
+    String url = mainService.getWxCpTpConfigStorage().getApiUrl(GET_USER_ID)
+    + "?access_token=" + mainService.getWxCpTpConfigStorage().getAccessToken(corpId);
     String responseContent = this.mainService.post(url, jsonObject.toString());
     JsonObject tmpJsonElement = GsonParser.parse(responseContent);
     return tmpJsonElement.getAsJsonObject().get("userid").getAsString();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/constant/WxCpApiPathConsts.java
Patch:
@@ -995,7 +995,7 @@ interface ExternalContact {
     /**
      * The constant GET_NEW_EXTERNAL_USERID.
      */
-    String GET_NEW_EXTERNAL_USERID = "/cgi-bin/service/externalcontact/get_new_external_userid";
+    String GET_NEW_EXTERNAL_USERID = "/cgi-bin/externalcontact/get_new_external_userid";
     /**
      * The constant TO_SERVICE_EXTERNAL_USERID.
      */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/constant/WxCpApiPathConsts.java
Patch:
@@ -298,7 +298,7 @@ interface Oa {
     /**
      * The constant GET_APPROVAL_DATA.
      */
-    String GET_APPROVAL_DATA = "/cgi-bin/oa/getapprovaldata";
+    String GET_APPROVAL_DATA = "/cgi-bin/corp/getapprovaldata";
 
     /**
      * The constant GET_CORP_CONF.

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/safety/response/WxMaUserSafetyRiskRankResponse.java
Patch:
@@ -26,7 +26,7 @@ public class WxMaUserSafetyRiskRankResponse implements Serializable {
    * 唯一请求标识，标记单次请求
    */
   @SerializedName("unoin_id")
-  private Integer unoinId;
+  private Long unoinId;
 
   /**
    * 用户风险等级

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/safety/response/WxMaUserSafetyRiskRankResponse.java
Patch:
@@ -26,7 +26,7 @@ public class WxMaUserSafetyRiskRankResponse implements Serializable {
    * 唯一请求标识，标记单次请求
    */
   @SerializedName("unoin_id")
-  private Integer unoinId;
+  private Long unoinId;
 
   /**
    * 用户风险等级

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/config/WxCpAutoConfiguration.java
Patch:
@@ -9,7 +9,7 @@
  * 企业微信自动注册
  *
  * @author yl
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 @Configuration
 @EnableConfigurationProperties(WxCpProperties.class)

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/config/WxCpServiceAutoConfiguration.java
Patch:
@@ -14,7 +14,7 @@
  * 企业微信平台相关服务自动注册
  *
  * @author yl
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 @Configuration
 @RequiredArgsConstructor

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/config/WxCpStorageAutoConfiguration.java
Patch:
@@ -8,7 +8,7 @@
  * 企业微信存储策略自动配置
  *
  * @author yl
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 @Configuration
 @Import({

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/properties/WxCpProperties.java
Patch:
@@ -10,7 +10,7 @@
  * 企业微信接入相关配置属性
  *
  * @author yl
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 @Data
 @NoArgsConstructor

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/storage/AbstractWxCpConfigStorageConfiguration.java
Patch:
@@ -8,7 +8,7 @@
  * WxCpConfigStorage 抽象配置类
  *
  * @author yl & Wang_Wong
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 public abstract class AbstractWxCpConfigStorageConfiguration {
 

File: spring-boot-starters/wx-java-cp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/cp/storage/WxCpInMemoryConfigStorageConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  * 自动装配基于内存策略配置
  *
  * @author yl
- * @date 2021/12/6
+ * created on  2021/12/6
  */
 @Configuration
 @ConditionalOnProperty(

File: spring-boot-starters/wx-java-miniapp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/miniapp/config/WxMaAutoConfiguration.java
Patch:
@@ -9,7 +9,7 @@
  * 自动配置.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-10
+ * created on  2019-08-10
  */
 @Configuration
 @EnableConfigurationProperties(WxMaProperties.class)

File: spring-boot-starters/wx-java-miniapp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/miniapp/enums/HttpClientType.java
Patch:
@@ -4,7 +4,7 @@
  * httpclient类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-05-25
+ * created on  2020-05-25
  */
 public enum HttpClientType {
   /**

File: spring-boot-starters/wx-java-miniapp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/miniapp/enums/StorageType.java
Patch:
@@ -4,7 +4,7 @@
  * storage类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-05-25
+ * created on  2020-05-25
  */
 public enum StorageType {
   /**

File: spring-boot-starters/wx-java-miniapp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/miniapp/properties/RedisProperties.java
Patch:
@@ -6,7 +6,7 @@
  * redis 配置.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @Data
 public class RedisProperties {

File: spring-boot-starters/wx-java-miniapp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/miniapp/properties/WxMaProperties.java
Patch:
@@ -12,7 +12,7 @@
  * 属性配置类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-10
+ * created on  2019-08-10
  */
 @Data
 @ConfigurationProperties(prefix = PREFIX)

File: spring-boot-starters/wx-java-mp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/mp/enums/HttpClientType.java
Patch:
@@ -4,7 +4,7 @@
  * httpclient类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public enum HttpClientType {
   /**

File: spring-boot-starters/wx-java-mp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/mp/enums/StorageType.java
Patch:
@@ -4,7 +4,7 @@
  * storage类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public enum StorageType {
   /**

File: spring-boot-starters/wx-java-mp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/mp/properties/RedisProperties.java
Patch:
@@ -8,7 +8,7 @@
  * redis 配置属性.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @Data
 public class RedisProperties implements Serializable {

File: spring-boot-starters/wx-java-qidian-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/qidian/enums/HttpClientType.java
Patch:
@@ -4,7 +4,7 @@
  * httpclient类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public enum HttpClientType {
   /**

File: spring-boot-starters/wx-java-qidian-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/qidian/enums/StorageType.java
Patch:
@@ -4,7 +4,7 @@
  * storage类型.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public enum StorageType {
   /**

File: spring-boot-starters/wx-java-qidian-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/qidian/properties/RedisProperties.java
Patch:
@@ -8,7 +8,7 @@
  * redis 配置属性.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @Data
 public class RedisProperties implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxMessageInMemoryDuplicateCheckerSingleton.java
Patch:
@@ -15,7 +15,7 @@
  *   消息去重，记录消息ID首次出现时的时间戳，
  *   15S后定时任务触发时废除该记录消息ID
  * </p>
- * @date 2022/5/26 1:32
+ * created on  2022/5/26 1:32
  */
 @Slf4j
 public class WxMessageInMemoryDuplicateCheckerSingleton implements WxMessageDuplicateChecker {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/ToJson.java
Patch:
@@ -4,7 +4,7 @@
  * 包含toJson()方法的接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-10-05
+ * created on  2020-10-05
  */
 public interface ToJson {
   /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxOAuth2UserInfo.java
Patch:
@@ -11,7 +11,7 @@
  * oauth2用户个人信息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-10-11
+ * created on  2020-10-11
  */
 @Data
 public class WxOAuth2UserInfo implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/ocr/WxOcrIdCardResult.java
Patch:
@@ -10,7 +10,7 @@
  * OCR身份证识别结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-06-23
+ * created on  2019-06-23
  */
 @Data
 public class WxOcrIdCardResult implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/subscribemsg/CategoryData.java
Patch:
@@ -8,7 +8,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021-01-27
+ * created on  2021-01-27
  */
 @Data
 public class CategoryData implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/subscribemsg/PubTemplateKeyword.java
Patch:
@@ -8,7 +8,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021-01-27
+ * created on  2021-01-27
  */
 @Data
 public class PubTemplateKeyword implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/subscribemsg/TemplateInfo.java
Patch:
@@ -8,7 +8,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021-01-27
+ * created on  2021-01-27
  */
 @Data
 public class TemplateInfo implements Serializable {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/error/WxRuntimeException.java
Patch:
@@ -4,7 +4,7 @@
  * WxJava专用的runtime exception.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-26
+ * created on  2020-09-26
  */
 public class WxRuntimeException extends RuntimeException {
   private static final long serialVersionUID = 4881698471192264412L;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/requestexecuter/ocr/OcrDiscernApacheHttpRequestExecutor.java
Patch:
@@ -21,7 +21,7 @@
  * .
  *
  * @author : zhayueran
- * @date 2019/6/27 14:06
+ * created on  2019/6/27 14:06
  */
 public class OcrDiscernApacheHttpRequestExecutor extends OcrDiscernRequestExecutor<CloseableHttpClient, HttpHost> {
   public OcrDiscernApacheHttpRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/requestexecuter/ocr/OcrDiscernRequestExecutor.java
Patch:
@@ -13,7 +13,7 @@
  * .
  *
  * @author zhayueran
- * @date 2019/6/27 15:06
+ * created on  2019/6/27 15:06
  */
 public abstract class OcrDiscernRequestExecutor<H, P> implements RequestExecutor<String, File> {
   protected RequestHttp<H, P> requestHttp;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxOAuth2Service.java
Patch:
@@ -8,7 +8,7 @@
  * oauth2 相关接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-08
+ * created on  2020-08-08
  */
 public interface WxOAuth2Service {
   /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxOcrService.java
Patch:
@@ -15,7 +15,7 @@
  * https://mp.weixin.qq.com/wiki?t=resource/res_main&id=21516712284rHWMX
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-06-22
+ * created on  2019-06-22
  */
 public interface WxOcrService {
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxService.java
Patch:
@@ -8,7 +8,7 @@
  * 微信服务接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-04-25
+ * created on  2020-04-25
  */
 public interface WxService {
   /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/crypto/SHA1.java
Patch:
@@ -8,7 +8,7 @@
 /**
  *
  * @author Daniel Qian
- * @date 14/10/19
+ * created on  14/10/19
  */
 public class SHA1 {
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/InputStreamData.java
Patch:
@@ -14,7 +14,7 @@
  * InputStreamData
  *
  * @author zichuan.zhou91@gmail.com
- * @date 2022/2/15
+ * created on  2022/2/15
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheMediaDownloadRequestExecutor.java
Patch:
@@ -25,7 +25,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 public class ApacheMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<CloseableHttpClient, HttpHost> {
   public ApacheMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheMediaInputStreamUploadRequestExecutor.java
Patch:
@@ -23,7 +23,7 @@
  * 文件输入流上传.
  *
  * @author meiqin.zhou91@gmail.com
- * @date 2022/02/15
+ * created on  2022/02/15
  */
 public class ApacheMediaInputStreamUploadRequestExecutor extends MediaInputStreamUploadRequestExecutor<CloseableHttpClient, HttpHost> {
   public ApacheMediaInputStreamUploadRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheSimpleGetRequestExecutor.java
Patch:
@@ -16,7 +16,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 public class ApacheSimpleGetRequestExecutor extends SimpleGetRequestExecutor<CloseableHttpClient, HttpHost> {
   public ApacheSimpleGetRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheSimplePostRequestExecutor.java
Patch:
@@ -18,7 +18,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 public class ApacheSimplePostRequestExecutor extends SimplePostRequestExecutor<CloseableHttpClient, HttpHost> {
   public ApacheSimplePostRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaDownloadRequestExecutor.java
Patch:
@@ -25,7 +25,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {
   public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaInputStreamUploadRequestExecutor.java
Patch:
@@ -22,7 +22,7 @@
  * 文件输入流上传.
  *
  * @author meiqin.zhou91@gmail.com
- * @date 2022/02/15
+ * created on  2022/02/15
  */
 public class JoddHttpMediaInputStreamUploadRequestExecutor extends MediaInputStreamUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {
   public JoddHttpMediaInputStreamUploadRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaUploadRequestExecutor.java
Patch:
@@ -20,7 +20,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 public class JoddHttpMediaUploadRequestExecutor extends MediaUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {
   public JoddHttpMediaUploadRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMinishopMediaUploadRequestCustomizeExecutor.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * @author liming1019
- * @date 2021/8/10
+ * created on  2021/8/10
  */
 @Slf4j
 public class JoddHttpMinishopMediaUploadRequestCustomizeExecutor extends MinishopUploadRequestCustomizeExecutor<HttpConnectionProvider, ProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMinishopMediaUploadRequestExecutor.java
Patch:
@@ -22,7 +22,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 @Slf4j
 public class JoddHttpMinishopMediaUploadRequestExecutor extends MinishopUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimpleGetRequestExecutor.java
Patch:
@@ -17,7 +17,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 public class JoddHttpSimpleGetRequestExecutor extends SimpleGetRequestExecutor<HttpConnectionProvider, ProxyInfo> {
   public JoddHttpSimpleGetRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimplePostRequestExecutor.java
Patch:
@@ -17,7 +17,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 public class JoddHttpSimplePostRequestExecutor extends SimplePostRequestExecutor<HttpConnectionProvider, ProxyInfo> {
   public JoddHttpSimplePostRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaDownloadRequestExecutor.java
Patch:
@@ -21,7 +21,7 @@
 /**
  *.
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 @Slf4j
 public class OkHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<OkHttpClient, OkHttpProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaInputStreamUploadRequestExecutor.java
Patch:
@@ -17,7 +17,7 @@
  * 文件输入流上传.
  *
  * @author meiqin.zhou91@gmail.com
- * @date 2022/02/15
+ * created on  2022/02/15
  */
 public class OkHttpMediaInputStreamUploadRequestExecutor extends MediaInputStreamUploadRequestExecutor<OkHttpClient, OkHttpProxyInfo> {
   public OkHttpMediaInputStreamUploadRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaUploadRequestExecutor.java
Patch:
@@ -15,7 +15,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 public class OkHttpMediaUploadRequestExecutor extends MediaUploadRequestExecutor<OkHttpClient, OkHttpProxyInfo> {
   public OkHttpMediaUploadRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMinishopMediaUploadRequestCustomizeExecutor.java
Patch:
@@ -14,7 +14,7 @@
 
 /**
  * @author liming1019
- * @date 2021/8/10
+ * created on  2021/8/10
  */
 @Slf4j
 public class OkHttpMinishopMediaUploadRequestCustomizeExecutor extends MinishopUploadRequestCustomizeExecutor<OkHttpClient, OkHttpProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMinishopMediaUploadRequestExecutor.java
Patch:
@@ -18,7 +18,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/5
+ * created on  2017/5/5
  */
 @Slf4j
 public class OkHttpMinishopMediaUploadRequestExecutor extends MinishopUploadRequestExecutor<OkHttpClient, OkHttpProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimpleGetRequestExecutor.java
Patch:
@@ -14,7 +14,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 public class OkHttpSimpleGetRequestExecutor extends SimpleGetRequestExecutor<OkHttpClient, OkHttpProxyInfo> {
   public OkHttpSimpleGetRequestExecutor(RequestHttp requestHttp) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimplePostRequestExecutor.java
Patch:
@@ -14,7 +14,7 @@
  * .
  *
  * @author ecoolper
- * @date 2017/5/4
+ * created on  2017/5/4
  */
 @Slf4j
 public class OkHttpSimplePostRequestExecutor extends SimplePostRequestExecutor<OkHttpClient, OkHttpProxyInfo> {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/xml/IntegerArrayConverter.java
Patch:
@@ -9,7 +9,7 @@
  * Integer型数组转换器.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-22
+ * created on  2019-08-22
  */
 public class IntegerArrayConverter extends StringConverter {
   @Override

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/xml/LongArrayConverter.java
Patch:
@@ -9,7 +9,7 @@
  * Long型数组转换器.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-22
+ * created on  2019-08-22
  */
 public class LongArrayConverter extends StringConverter {
   @Override

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/api/WxMessageInMemoryDuplicateCheckerSingletonTest.java
Patch:
@@ -11,7 +11,7 @@
  * @author jiangby
  * @version 1.0
  * @description: 作用
- * @date 2022/5/26 1:46
+ * created on  2022/5/26 1:46
  */
 @Test
 public class WxMessageInMemoryDuplicateCheckerSingletonTest {

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/bean/WxNetCheckResultTest.java
Patch:
@@ -6,7 +6,7 @@
 /**
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-06-06
+ * created on  2020-06-06
  */
 public class WxNetCheckResultTest {
 

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/util/json/GsonHelperTest.java
Patch:
@@ -9,7 +9,7 @@
  * GsonHelper 的单元测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-04
+ * created on  2020-09-04
  */
 public class GsonHelperTest {
 

File: weixin-java-cp/src/main/java/com/tencent/wework/Finance.java
Patch:
@@ -16,7 +16,7 @@
  * https://developer.work.weixin.qq.com/document/path/91552
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-01-17
+ * created on  2022-01-17
  */
 @Slf4j
 public class Finance {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpAgentWorkBenchService.java
Patch:
@@ -5,7 +5,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 16:16 2020/9/27
+ * created on  : create in 16:16 2020/9/27
  * @description: 工作台自定义展示：https://work.weixin.qq.com/api/doc/90000/90135/92535
  */
 public interface WxCpAgentWorkBenchService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpExportService.java
Patch:
@@ -8,7 +8,7 @@
  * 异步导出接口
  *
  * @author <a href="https://github.com/zhongjun96">zhongjun</a>
- * @date 2022/4/21
+ * created on  2022/4/21
  **/
 public interface WxCpExportService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpGroupRobotService.java
Patch:
@@ -11,7 +11,7 @@
  * 调用地址：https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=
  *
  * @author yr
- * @date 2020-8-20
+ * created on  2020-8-20
  */
 public interface WxCpGroupRobotService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpKfService.java
Patch:
@@ -30,7 +30,7 @@
  *  企业可在微信客服官网使用企业微信扫码开通微信客服，开通后即可使用。
  *
  * @author Fu
- * @date 2022/1/19 19:25
+ * created on  2022/1/19 19:25
  */
 public interface WxCpKfService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpLivingService.java
Patch:
@@ -9,7 +9,7 @@
  * 官方文档：https://work.weixin.qq.com/api/doc/90000/90135/93633
  *
  * @author Wang_Wong
- * @date 2021-12-21
+ * created on  2021-12-21
  */
 public interface WxCpLivingService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageService.java
Patch:
@@ -7,7 +7,7 @@
  * 消息推送接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020 -08-30
+ * created on  2020 -08-30
  */
 public interface WxCpMessageService {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMsgAuditService.java
Patch:
@@ -14,7 +14,7 @@
  * com.tencent.wework.Finance
  *
  * @author Wang_Wong
- * @date 2022-01-14
+ * created on  2022-01-14
  */
 public interface WxCpMsgAuditService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaAgentService.java
Patch:
@@ -9,7 +9,7 @@
  * https://developer.work.weixin.qq.com/document/path/90269
  *
  * @author <a href="https://gitee.com/Wang_Wong/">Wang_Wong</a>
- * @date 2022-04-06
+ * created on  2022-04-06
  */
 public interface WxCpOaAgentService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaCalendarService.java
Patch:
@@ -9,7 +9,7 @@
  * 企业微信日历接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 public interface WxCpOaCalendarService {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaMeetingRoomService.java
Patch:
@@ -9,7 +9,7 @@
  * 企业微信会议室接口.
  *
  * @author <a href="https://github.com/lm93129">lm93129</a>
- * @date 2022年8月12日22:33:36
+ * created on  2022年8月12日22:33:36
  */
 public interface WxCpOaMeetingRoomService {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaScheduleService.java
Patch:
@@ -10,7 +10,7 @@
  * 官方文档：https://work.weixin.qq.com/api/doc/90000/90135/93648
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020 -12-25
+ * created on  2020 -12-25
  */
 public interface WxCpOaScheduleService {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaService.java
Patch:
@@ -12,7 +12,7 @@
  * 企业微信OA相关接口.
  *
  * @author Element & Wang_Wong
- * @date 2019-04-06 10:52
+ * created on  2019-04-06 10:52
  */
 public interface WxCpOaService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaWeDriveService.java
Patch:
@@ -12,7 +12,7 @@
  * https://developer.work.weixin.qq.com/document/path/93654
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-04-22
+ * created on  2022-04-22
  */
 public interface WxCpOaWeDriveService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpSchoolHealthService.java
Patch:
@@ -12,7 +12,7 @@
  * https://developer.work.weixin.qq.com/document/path/93676
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/5/31 9:10
+ * created on : 2022/5/31 9:10
  */
 public interface WxCpSchoolHealthService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpSchoolService.java
Patch:
@@ -16,7 +16,7 @@
  * 仅复学码应用可以调用
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/5/31 9:10
+ * created on : 2022/5/31 9:10
  */
 public interface WxCpSchoolService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpSchoolUserService.java
Patch:
@@ -13,7 +13,7 @@
  * https://developer.work.weixin.qq.com/document/path/91638
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/6/18 9:10
+ * created on : 2022/6/18 9:10
  */
 public interface WxCpSchoolUserService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpTaskCardService.java
Patch:
@@ -12,7 +12,7 @@
  * </pre>
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 public interface WxCpTaskCardService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpAgentWorkBenchServiceImpl.java
Patch:
@@ -13,7 +13,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 11:24 2020/9/28
+ * created on  : create in 11:24 2020/9/28
  * @description: 工作台自定义展示实现
  */
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpExportServiceImpl.java
Patch:
@@ -16,7 +16,7 @@
  * 异步导出接口
  *
  * @author <a href="https://github.com/zhongjun96">zhongjun</a>
- * @date 2022/4/21
+ * created on  2022/4/21
  **/
 @RequiredArgsConstructor
 public class WxCpExportServiceImpl implements WxCpExportService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpGroupRobotServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * 企业微信群机器人消息发送api 实现
  *
  * @author yr
- * @date 2020-08-20
+ * created on  2020-08-20
  */
 @RequiredArgsConstructor
 public class WxCpGroupRobotServiceImpl implements WxCpGroupRobotService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpKfServiceImpl.java
Patch:
@@ -36,7 +36,7 @@
  * 微信客服接口-服务实现
  *
  * @author Fu
- * @date 2022/1/19 19:41
+ * created on  2022/1/19 19:41
  */
 @RequiredArgsConstructor
 public class WxCpKfServiceImpl implements WxCpKfService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpLivingServiceImpl.java
Patch:
@@ -21,7 +21,7 @@
  * https://developer.work.weixin.qq.com/document/path/93633
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2021-12-21
+ * created on  2021-12-21
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMessageServiceImpl.java
Patch:
@@ -13,7 +13,7 @@
  * 消息推送接口实现类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @RequiredArgsConstructor
 public class WxCpMessageServiceImpl implements WxCpMessageService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMsgAuditServiceImpl.java
Patch:
@@ -28,7 +28,7 @@
  * 会话内容存档接口实现类.
  *
  * @author Wang_Wong
- * @date 2022-01-17
+ * created on  2022-01-17
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaAgentServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * 企业微信自建应用接口实现类.
  *
  * @author <a href="https://gitee.com/Wang_Wong/">Wang_Wong</a>
- * @date 2022-04-06
+ * created on  2022-04-06
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaCalendarServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 @RequiredArgsConstructor
 public class WxCpOaCalendarServiceImpl implements WxCpOaCalendarService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaOaScheduleServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
  * 企业微信日程接口实现类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-12-25
+ * created on  2020-12-25
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaServiceImpl.java
Patch:
@@ -25,7 +25,7 @@
  * 企业微信 OA 接口实现
  *
  * @author Element
- * @date 2019-04-06 11:20
+ * created on  2019-04-06 11:20
  */
 @RequiredArgsConstructor
 public class WxCpOaServiceImpl implements WxCpOaService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaWeDriveServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * 企业微信微盘接口实现类.
  *
  * @author Wang_Wong
- * @date 2022-04-22
+ * created on  2022-04-22
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpSchoolHealthServiceImpl.java
Patch:
@@ -20,7 +20,7 @@
  * 企业微信家校应用 健康上报接口实现类.
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/5/31 9:16
+ * created on : 2022/5/31 9:16
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpSchoolServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
  * https://developer.work.weixin.qq.com/document/path/93744
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/6/1 14:05
+ * created on : 2022/6/1 14:05
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpSchoolUserServiceImpl.java
Patch:
@@ -25,7 +25,7 @@
  * https://developer.work.weixin.qq.com/document/path/91638
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/6/18 9:10
+ * created on : 2022/6/18 9:10
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpTaskCardServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
  * </pre>
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 @RequiredArgsConstructor
 public class WxCpTaskCardServiceImpl implements WxCpTaskCardService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpAgentWorkBench.java
Patch:
@@ -15,7 +15,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 16:09 2020/9/27
+ * created on  : create in 16:09 2020/9/27
  * 工作台自定义展示
  */
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpBaseResp.java
Patch:
@@ -11,7 +11,7 @@
  * 返回结果
  *
  * @author yqx & WangWong
- * @date 2020/3/16
+ * created on  2020/3/16
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpProviderToken.java
Patch:
@@ -10,7 +10,7 @@
  * 服务商凭证.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-11-02
+ * created on  2019-11-02
  */
 @Data
 public class WxCpProviderToken implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpTaskCardUpdateResult.java
Patch:
@@ -17,7 +17,7 @@
  * </pre>
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 @Data
 @AllArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpTpPreauthCode.java
Patch:
@@ -9,7 +9,7 @@
  * 预授权码返回
  *
  * @author yqx
- * @date 2020/3/19
+ * created on  2020/3/19
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpTpProlongTryResult.java
Patch:
@@ -8,7 +8,7 @@
 /**
  * 应用市场延长试用期结果
  * @author leiguoqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxTpLoginInfo.java
Patch:
@@ -12,7 +12,7 @@
  * 登录信息
  *
  * @author Jamie.shi
- * @date 2020-08-03 17:18
+ * created on  2020-08-03 17:18
  **/
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/export/WxCpExportRequest.java
Patch:
@@ -10,7 +10,7 @@
  * 异步导出参数
  *
  * @author zhongjun
- * @date 2022/4/21
+ * created on  2022/4/21
  **/
 @Data
 public class WxCpExportRequest implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/export/WxCpExportResult.java
Patch:
@@ -11,7 +11,7 @@
  * 异步导出响应
  *
  * @author zhongjun
- * @date 2022/4/21
+ * created on  2022/4/21
  **/
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpAddMomentResult.java
Patch:
@@ -10,7 +10,7 @@
  * 企业发表内容到客户的朋友圈 创建发表任务结果
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpAddMomentTask.java
Patch:
@@ -17,7 +17,7 @@
  * 企业发表内容到客户的朋友圈 创建发表任务
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpExternalUserIdList.java
Patch:
@@ -13,7 +13,7 @@
  * 企业客户微信unionid的升级 - 企业客户external_userid列表
  *
  * @author Mr.Pan
- * @date 2021/11/18
+ * created on  2021/11/18
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentComments.java
Patch:
@@ -14,7 +14,7 @@
  * 企业发表内容到客户的朋友圈 获取客户朋友圈的互动数据
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentCustomerList.java
Patch:
@@ -13,7 +13,7 @@
  * 企业发表内容到客户的朋友圈 获取客户朋友圈发表时选择的可见范围
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentList.java
Patch:
@@ -13,7 +13,7 @@
  * 企业发表内容到客户的朋友圈 获取企业全部的发表列表
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentSendResult.java
Patch:
@@ -13,7 +13,7 @@
  * 企业发表内容到客户的朋友圈 获取客户朋友圈发表后的可见客户列表
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentTask.java
Patch:
@@ -14,7 +14,7 @@
  * 企业发表内容到客户的朋友圈 获取客户朋友圈企业发表的列表
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGetMomentTaskResult.java
Patch:
@@ -14,7 +14,7 @@
  * 企业发表内容到客户的朋友圈 获取任务创建结果
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpGroupWelcomeTemplateResult.java
Patch:
@@ -12,7 +12,7 @@
  * 入群欢迎语素材.
  *
  * @author <a href="https://github.com/wslongchen">Mr.Pan</a>
- * @date 2021-11-3
+ * created on  2021-11-3
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpInterceptRuleResp.java
Patch:
@@ -14,7 +14,7 @@
  * 新增敏感词规则请求参数封装实体类
  *
  * @author didi
- * @date 2022-04-17
+ * created on  2022-04-17
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpNewExternalUserIdList.java
Patch:
@@ -13,7 +13,7 @@
  * 企业客户微信unionid的升级 - 企业客户external_userid列表
  *
  * @author Mr.Pan
- * @date 2021/11/18
+ * created on  2021/11/18
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUpdateRemarkRequest.java
Patch:
@@ -14,7 +14,7 @@
  * 修改客户备注信息请求.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-19
+ * created on  2020-09-19
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalGroupChatInfo.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  * @author yqx
- * @date 2020/3/116
+ * created on  2020/3/116
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalGroupChatList.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  * @author yqx
- * @date 2020/3/116
+ * created on  2020/3/116
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalGroupChatStatistic.java
Patch:
@@ -13,7 +13,7 @@
  * 联系客户群统计数据
  *
  * @author yqx
- * @date 2020/3/16
+ * created on  2020/3/16
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalGroupChatTransferResp.java
Patch:
@@ -12,7 +12,7 @@
  * 分配离职成员的客户群结果
  *
  * @author pg
- * @date 2021年6月21日
+ * created on  2021年6月21日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalUnassignList.java
Patch:
@@ -13,7 +13,7 @@
  * 离职员工外部联系人列表
  *
  * @author yqx & Wang_Wong
- * @date 2020/3/15
+ * created on  2020/3/15
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserExternalUserBehaviorStatistic.java
Patch:
@@ -13,7 +13,7 @@
  * 联系客户统计数据
  *
  * @author yqx
- * @date 2020/3/16
+ * created on  2020/3/16
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserTransferCustomerReq.java
Patch:
@@ -13,7 +13,7 @@
  * 转接在职成员的客户给其他成员，请求对象
  *
  * @author pg
- * @date 2021年6月21日
+ * created on  2021年6月21日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserTransferCustomerResp.java
Patch:
@@ -13,7 +13,7 @@
  * 转接在职成员的客户给其他成员，返回对象
  *
  * @author pg
- * @date 2021年6月21日
+ * created on  2021年6月21日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpUserTransferResultResp.java
Patch:
@@ -13,7 +13,7 @@
  * 在职成员的客户转接情况
  *
  * @author pg
- * @date 2021年6月21日
+ * created on  2021年6月21日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/WxCpWelcomeMsg.java
Patch:
@@ -16,7 +16,7 @@
  * 新客户欢迎语.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-16
+ * created on  2020-08-16
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/contact/ExternalContact.java
Patch:
@@ -10,7 +10,7 @@
  * 外部联系人.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-11-04
+ * created on  2020-11-04
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/contact/FollowedUser.java
Patch:
@@ -9,7 +9,7 @@
  * 添加了外部联系人的企业成员.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-11-04
+ * created on  2020-11-04
  */
 @Data
 public class FollowedUser implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/File.java
Patch:
@@ -7,7 +7,7 @@
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021-08-23
+ * created on  2021-08-23
  */
 @Data
 public class File implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/Image.java
Patch:
@@ -9,7 +9,7 @@
  * 图片消息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-16
+ * created on  2020-08-16
  */
 @Data
 public class Image implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/Link.java
Patch:
@@ -9,7 +9,7 @@
  * 图文消息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-16
+ * created on  2020-08-16
  */
 @Data
 public class Link implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/Location.java
Patch:
@@ -6,7 +6,7 @@
  * 地理位置
  *
  * @author leiin
- * @date 2021-10-29
+ * created on  2021-10-29
  */
 @Data
 public class Location {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/MiniProgram.java
Patch:
@@ -9,7 +9,7 @@
  * 小程序消息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-16
+ * created on  2020-08-16
  */
 @Data
 public class MiniProgram implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/Text.java
Patch:
@@ -9,7 +9,7 @@
  * 消息文本消息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-16
+ * created on  2020-08-16
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/external/msg/Video.java
Patch:
@@ -9,7 +9,7 @@
  * 视频消息
  *
  * @author pg
- * @date 2021-6-21
+ * created on  2021-6-21
  */
 @Data
 public class Video implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountAdd.java
Patch:
@@ -10,7 +10,7 @@
  * 添加客服帐号-请求参数
  *
  * @author Fu
- * @date 2022/1/19 18:59
+ * created on  2022/1/19 18:59
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountAddResp.java
Patch:
@@ -11,7 +11,7 @@
  * 添加客服帐号-返回结果
  *
  * @author Fu
- * @date 2022/1/19 19:04
+ * created on  2022/1/19 19:04
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountDel.java
Patch:
@@ -10,7 +10,7 @@
  * 删除客服帐号-请求参数
  *
  * @author Fu
- * @date 2022/1/19 19:09
+ * created on  2022/1/19 19:09
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountLink.java
Patch:
@@ -10,7 +10,7 @@
  * 获取客服帐号链接-请求参数
  *
  * @author Fu
- * @date 2022/1/19 19:18
+ * created on  2022/1/19 19:18
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountLinkResp.java
Patch:
@@ -11,7 +11,7 @@
  * 获取客服帐号链接-结果
  *
  * @author Fu
- * @date 2022/1/19 19:18
+ * created on  2022/1/19 19:18
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountListResp.java
Patch:
@@ -14,7 +14,7 @@
  * 获取客服帐号列表-结果
  *
  * @author Fu
- * @date 2022/1/19 19:13
+ * created on  2022/1/19 19:13
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfAccountUpd.java
Patch:
@@ -10,7 +10,7 @@
  * 修改客服帐号-请求参数
  *
  * @author Fu
- * @date 2022/1/19 19:10
+ * created on  2022/1/19 19:10
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfCustomerBatchGetResp.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 7:56 下午
+ * created on  2022/1/26 7:56 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfGetCorpStatisticRequest.java
Patch:
@@ -8,7 +8,7 @@
  * 获取「客户数据统计」企业汇总数据
  *
  * @author zhongjun
- * @date 2022/4/25
+ * created on  2022/4/25
  **/
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfGetCorpStatisticResp.java
Patch:
@@ -13,7 +13,7 @@
  * 获取「客户数据统计」企业汇总数据
  *
  * @author zhongjun
- * @date 2022/4/25
+ * created on  2022/4/25
  **/
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfMsgListResp.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:24 下午
+ * created on  2022/1/26 5:24 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfMsgSendRequest.java
Patch:
@@ -12,7 +12,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 7:00 下午
+ * created on  2022/1/26 7:00 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfMsgSendResp.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 7:41 下午
+ * created on  2022/1/26 7:41 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfServiceStateResp.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:00 下午
+ * created on  2022/1/26 5:00 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfServiceStateTransResp.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:03 下午
+ * created on  2022/1/26 5:03 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfServiceUpgradeConfigResp.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * @author leiin
- * @date 2022/4/26 5:21 下午
+ * created on  2022/4/26 5:21 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfServicerListResp.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 4:29 下午
+ * created on  2022/1/26 4:29 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/WxCpKfServicerOpResp.java
Patch:
@@ -12,7 +12,7 @@
 /**
  * 添加/删除客服接待人员返回结果
  * @author leiin
- * @date 2022/1/26 4:11 下午
+ * created on  2022/1/26 4:11 下午
  */
 @EqualsAndHashCode(callSuper = true)
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfBusinessCardMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:35 下午
+ * created on  2022/1/26 5:35 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfEventMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 6:44 下午
+ * created on  2022/1/26 6:44 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfLinkMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:33 下午
+ * created on  2022/1/26 5:33 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfLocationMsg.java
Patch:
@@ -5,7 +5,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:32 下午
+ * created on  2022/1/26 5:32 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfMenuMsg.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 6:33 下午
+ * created on  2022/1/26 6:33 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfMiniProgramMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 6:22 下午
+ * created on  2022/1/26 6:22 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfResourceMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:31 下午
+ * created on  2022/1/26 5:31 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/kf/msg/WxCpKfTextMsg.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author leiin
- * @date 2022/1/26 5:30 下午
+ * created on  2022/1/26 5:30 下午
  */
 @NoArgsConstructor
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseAccount.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * 订单账号信息
  * @author Totoro
- * @date 2022/6/27 14:04
+ * created on  2022/6/27 14:04
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseAccountCount.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  * @author Totoro
- * @date 2022/6/27 11:54
+ * created on  2022/6/27 11:54
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseAccountDuration.java
Patch:
@@ -10,7 +10,7 @@
 /**
  *
  * @author Totoro
- * @date 2022-6-27 11:22:53
+ * created on  2022-6-27 11:22:53
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseActiveAccount.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * @author Totoro
- * @date 2022-6-27 16:26:35
+ * created on  2022-6-27 16:26:35
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseActiveCodeInfo.java
Patch:
@@ -11,7 +11,7 @@
  * 激活码信息
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95553
  * @author Totoro
- * @date 2022/6/27 14:34
+ * created on  2022/6/27 14:34
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseBaseAccount.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * 许可证账号基础类
  * @author Totoro
- * @date 2022/6/27 14:39
+ * created on  2022/6/27 14:39
  */
 @Data
 @SuperBuilder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseCorpAccount.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author Totoro
- * @date 2022/6/27 15:21
+ * created on  2022/6/27 15:21
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseInvalidAccount.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author Totoro
- * @date 2022-6-27 15:35:30
+ * created on  2022-6-27 15:35:30
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseOrder.java
Patch:
@@ -10,7 +10,7 @@
  * 详细的订单信息
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95648
  * @author Totoro
- * @date 2022/6/27 11:38
+ * created on  2022/6/27 11:38
  */
 @Data
 public class WxCpTpLicenseOrder implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseSimpleOrder.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  * @author Totoro
- * @date 2022/6/27 11:38
+ * created on  2022/6/27 11:38
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/WxCpTpLicenseTransfer.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * 基础的信息
  * @author Totoro
- * @date 2022/6/27 15:50
+ * created on  2022/6/27 15:50
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseActiveInfoByUserResp.java
Patch:
@@ -13,7 +13,7 @@
  * 某个企业成员的激活情况
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95555
  * @author Totoro
- * @date 2022-6-27 14:51:19
+ * created on  2022-6-27 14:51:19
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseBatchActiveResultResp.java
Patch:
@@ -13,7 +13,7 @@
  * 批量激活帐号结果
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95553
  * @author Totoro
- * @date 2022-6-27 16:19:21
+ * created on  2022-6-27 16:19:21
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseBatchCodeInfoResp.java
Patch:
@@ -13,7 +13,7 @@
  * 批量查询的激活码详情
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95553
  * @author Totoro
- * @date 2022-6-27 14:51:19
+ * created on  2022-6-27 14:51:19
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseBatchTransferResp.java
Patch:
@@ -13,7 +13,7 @@
  * 基础结果返回信息
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95673
  * @author Totoro
- * @date 2022/6/27 15:49
+ * created on  2022/6/27 15:49
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseCodeInfoResp.java
Patch:
@@ -11,7 +11,7 @@
  * 查询的激活码详情
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95553
  * @author Totoro
- * @date 2022/6/27 14:28
+ * created on  2022/6/27 14:28
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/account/WxCpTpLicenseCorpAccountListResp.java
Patch:
@@ -13,7 +13,7 @@
  * 企业的帐号列表（已激活）
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95544
  * @author Totoro
- * @date 2022/6/27 15:15
+ * created on  2022/6/27 15:15
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseCreateOrderResp.java
Patch:
@@ -10,7 +10,7 @@
  * 订单创建结果
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95644
  * @author Totoro
- * @date 2022-6-27 11:26:36
+ * created on  2022-6-27 11:26:36
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseNewOrderRequest.java
Patch:
@@ -14,7 +14,7 @@
  * 下单购买帐号
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95644
  * @author Totoro
- * @date 2022/6/27 10:52
+ * created on  2022/6/27 10:52
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseOrderAccountListResp.java
Patch:
@@ -13,7 +13,7 @@
  * 获取订单中的帐号列表
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95649
  * @author Totoro
- * @date 2022-6-27 14:14:40
+ * created on  2022-6-27 14:14:40
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseOrderInfoResp.java
Patch:
@@ -10,7 +10,7 @@
  * 订单详情结果
  * 文档：https://developer.work.weixin.qq.com/document/path/95648
  * @author Totoro
- * @date 2022/06/27 11:56:03
+ * created on  2022/06/27 11:56:03
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseOrderListResp.java
Patch:
@@ -13,7 +13,7 @@
  * 获取订单列表详情
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95647
  * @author Totoro
- * @date 2022/6/27 11:39
+ * created on  2022/6/27 11:39
  */
 @Data
 @EqualsAndHashCode(callSuper = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseRenewOrderJobRequest.java
Patch:
@@ -14,7 +14,7 @@
  * 创建下单续期帐号任务
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95646
  * @author Totoro
- * @date 2022/6/27 11:12
+ * created on  2022/6/27 11:12
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseRenewOrderJobResp.java
Patch:
@@ -13,7 +13,7 @@
  * 创建下单购买帐号任务返回结果
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95646
  * @author Totoro
- * @date 2022-6-27 11:15:20
+ * created on  2022-6-27 11:15:20
  */
 @EqualsAndHashCode(callSuper = true)
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/license/order/WxCpTpLicenseRenewOrderRequest.java
Patch:
@@ -13,7 +13,7 @@
  * 续期帐号订单
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95646
  * @author Totoro
- * @date 2022-6-27 11:21:51
+ * created on  2022-6-27 11:21:51
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/living/WxCpLivingCreateRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 创建预约直播请求.
  *
  * @author Wang_Wong
- * @date 2021-12-23
+ * created on  2021-12-23
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/living/WxCpLivingModifyRequest.java
Patch:
@@ -14,7 +14,7 @@
  * 创建预约直播请求.
  *
  * @author Wang_Wong
- * @date 2021-12-23
+ * created on  2021-12-23
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpGroupRobotMessage.java
Patch:
@@ -17,7 +17,7 @@
  * 微信群机器人消息
  *
  * @author yr
- * @date 2020-08-20
+ * created on  2020-08-20
  */
 @AllArgsConstructor
 @NoArgsConstructor

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpLinkedCorpMessage.java
Patch:
@@ -24,7 +24,7 @@
  * https://developer.work.weixin.qq.com/document/path/90250
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpLinkedCorpMessageSendResult.java
Patch:
@@ -10,7 +10,7 @@
  * 互联企业的消息推送接口返回实体
  *
  * @author pg
- * @date 2021年6月22日
+ * created on  2021年6月22日
  */
 @Setter
 @Getter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpMessageSendStatistics.java
Patch:
@@ -11,7 +11,7 @@
  * 应用消息发送统计信息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-13
+ * created on  2020-09-13
  */
 @Data
 public class WxCpMessageSendStatistics implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpSchoolContactMessage.java
Patch:
@@ -25,7 +25,7 @@
  * https://developer.work.weixin.qq.com/document/path/92321
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-06-29
+ * created on  2022-06-29
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpSchoolContactMessageSendResult.java
Patch:
@@ -10,7 +10,7 @@
  * https://developer.work.weixin.qq.com/document/path/92321
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-06-29
+ * created on  2022-06-29
  */
 @Data
 public class WxCpSchoolContactMessageSendResult extends WxCpBaseResp {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutEventMessage.java
Patch:
@@ -10,7 +10,7 @@
 /**
  * @author eYoung
  * @description:
- * @date create at 2021/12/3 16:36
+ * created on  create at 2021/12/3 16:36
  */
 @XStreamAlias("xml")
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutUpdateBtnMessage.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author nickname263
- * @date 2021-09-23
+ * created on  2021-09-23
  */
 @XStreamAlias("xml")
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TaskCardBuilder.java
Patch:
@@ -13,7 +13,7 @@
  * </pre>
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 public class TaskCardBuilder extends BaseBuilder<TaskCardBuilder> {
   private String title;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TemplateCardBuilder.java
Patch:
@@ -13,7 +13,7 @@
  * </pre>
  *
  * @author yzts</ a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 public class TemplateCardBuilder extends BaseBuilder<TemplateCardBuilder> {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/msgaudit/WxCpChatDatas.java
Patch:
@@ -13,7 +13,7 @@
  * 聊天记录数据内容.
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-01-17
+ * created on  2022-01-17
  */
 @Data
 public class WxCpChatDatas implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/msgaudit/WxCpCheckAgreeRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 获取会话同意情况请求参数.
  *
  * @author Wang_Wong
- * @date 2022-01-21
+ * created on  2022-01-21
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/SummaryInfo.java
Patch:
@@ -11,7 +11,7 @@
  * 摘要行信息，用于定义某一行摘要显示的内容.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-07-19
+ * created on  2020-07-19
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpCheckinData.java
Patch:
@@ -10,7 +10,7 @@
  * 企业微信打卡数据.
  *
  * @author Element
- * @date 2019-04-06 11:01
+ * created on  2019-04-06 11:01
  */
 @Data
 public class WxCpCheckinData implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpCheckinOption.java
Patch:
@@ -10,7 +10,7 @@
  * 企业微信打卡规则.
  *
  * @author Element
- * @date 2019-04-06 13:22
+ * created on  2019-04-06 13:22
  */
 @Data
 public class WxCpCheckinOption implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpDialRecord.java
Patch:
@@ -10,7 +10,7 @@
  * 公费电话拨打记录.
  *
  * @author Element
- * @date 2019-04-06 15:38
+ * created on  2019-04-06 15:38
  */
 @Data
 public class WxCpDialRecord implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpOaApplyEventRequest.java
Patch:
@@ -13,7 +13,7 @@
  * 提交审批申请 请求对象类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-07-18
+ * created on  2020-07-18
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpOaSchedule.java
Patch:
@@ -13,7 +13,7 @@
  * 日程信息bean.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-12-25
+ * created on  2020-12-25
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/calendar/WxCpOaCalendar.java
Patch:
@@ -17,7 +17,7 @@
  * 日历.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/order/WxCpTpOrderDetails.java
Patch:
@@ -10,7 +10,7 @@
  * 应用版本付费订单详情
  *
  * @author leiguoqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/order/WxCpTpOrderListGetResult.java
Patch:
@@ -12,7 +12,7 @@
  * 应用版本付费订单列表
  *
  * @author leiguoqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 @Getter
 @Setter

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/EventBuilder.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * @author eYoung
  * @description:
- * @date create at 2021/12/3 16:34
+ * created on  create at 2021/12/3 16:34
  */
 public class EventBuilder extends BaseBuilder<EventBuilder, WxCpXmlOutEventMessage> {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchCreateParentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 批量创建家长.
  *
  * @author Wang_Wong
- * @date 2022-07-11
+ * created on  2022-07-11
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchCreateStudentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 批量创建学生请求.
  *
  * @author Wang_Wong
- * @date 2022-07-01
+ * created on  2022-07-01
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchDeleteStudentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 批量删除学生请求.
  *
  * @author Wang_Wong
- * @date 2022-07-01
+ * created on  2022-07-01
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchResultList.java
Patch:
@@ -14,7 +14,7 @@
  * 批量返回结果.
  *
  * @author Wang_Wong
- * @date 2022-07-01
+ * created on  2022-07-01
  */
 @Data
 public class WxCpBatchResultList extends WxCpBaseResp implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchUpdateParentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 批量更新家长.
  *
  * @author Wang_Wong
- * @date 2022-07-11
+ * created on  2022-07-11
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpBatchUpdateStudentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 批量更新学生请求.
  *
  * @author Wang_Wong
- * @date 2022-07-01
+ * created on  2022-07-01
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpCreateDepartmentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 创建部门请求.
  *
  * @author Wang_Wong
- * @date 2022-06-22
+ * created on  2022-06-22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpCreateParentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 创建家长请求.
  *
  * @author Wang_Wong
- * @date 2022-06-20
+ * created on  2022-06-20
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpExternalContact.java
Patch:
@@ -15,7 +15,7 @@
  * https://developer.work.weixin.qq.com/document/path/91670
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/6/27 9:10
+ * created on : 2022/6/27 9:10
  */
 @Data
 public class WxCpExternalContact extends WxCpBaseResp implements Serializable {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpListParentResult.java
Patch:
@@ -13,7 +13,7 @@
  * 获取部门家长详情返回结果.
  *
  * @author Wang_Wong
- * @date 2022-07-13
+ * created on  2022-07-13
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpUpdateDepartmentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 更新部门请求.
  *
  * @author Wang_Wong
- * @date 2022-06-22
+ * created on  2022-06-22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpUpdateParentRequest.java
Patch:
@@ -12,7 +12,7 @@
  * 更新家长请求.
  *
  * @author Wang_Wong
- * @date 2022-06-20
+ * created on  2022-06-20
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpUserListResult.java
Patch:
@@ -13,7 +13,7 @@
  * 获取部门成员详情返回结果.
  *
  * @author Wang_Wong
- * @date 2022-07-13
+ * created on  2022-07-13
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/school/user/WxCpUserResult.java
Patch:
@@ -13,7 +13,7 @@
  * 读取学生或家长返回结果.
  *
  * @author Wang_Wong
- * @date 2022-07-13
+ * created on  2022-07-13
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/taskcard/TaskCardButton.java
Patch:
@@ -14,7 +14,7 @@
  * </pre>
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/ActionMenuItem.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * 卡片右上角更多操作按钮点击后出现的操作列表，列表长度取值范围为 [1, 3]
  * @author xiaohe
- * @date 2022-03-06
+ * created on  2022-03-06
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/CheckboxOption.java
Patch:
@@ -12,7 +12,7 @@
  * 按钮列表，该字段可为空数组，但有数据的话需确认对应字段是否必填，列表长度不超过6
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/HorizontalContent.java
Patch:
@@ -13,7 +13,7 @@
  * 二级标题+文本列表，该字段可为空数组，但有数据的话需确认对应字段是否必填，列表长度不超过6
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/MultipleSelect.java
Patch:
@@ -15,7 +15,7 @@
  * 下拉式的选择器列表，multiple_interaction类型的卡片该字段不可为空，一个消息最多支持 3 个选择器
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/QuoteArea.java
Patch:
@@ -13,7 +13,7 @@
  * 引用文献样式
  *
  * @author zp
- * @date 2022/1/2
+ * created on  2022/1/2
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/TemplateCardButton.java
Patch:
@@ -12,7 +12,7 @@
  * 按钮列表，该字段可为空数组，但有数据的话需确认对应字段是否必填，列表长度不超过6
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/TemplateCardJump.java
Patch:
@@ -13,7 +13,7 @@
  * 跳转指引样式的列表，该字段可为空数组，但有数据的话需确认对应字段是否必填，列表长度不超过3
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/templatecard/VerticalContent.java
Patch:
@@ -13,7 +13,7 @@
  * 卡片二级垂直内容，该字段可为空数组，但有数据的话需确认对应字段是否必填，列表长度不超过4
  *
  * @author yzts
- * @date 2021/9/22
+ * created on  2021/9/22
  */
 @Data
 @Builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/user/WxCpDeptUserResult.java
Patch:
@@ -14,7 +14,7 @@
  * 获取成员ID列表返回参数
  *
  * @author <a href="https://gitee.com/Wang_Wong/">Wang_Wong</a>
- * @date 2022/08/09
+ * created on  2022/08/09
  */
 @Data
 public class WxCpDeptUserResult extends WxCpBaseResp {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/workbench/WorkBenchKeyData.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 10:21 2020/9/28
+ * created on  : create in 10:21 2020/9/28
  * @description: 关键数据型模板类型
  */
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/workbench/WorkBenchList.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 10:21 2020/9/28
+ * created on  : create in 10:21 2020/9/28
  * @description: 列表模板类型
  */
 @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/config/impl/WxCpRedissonConfigImpl.java
Patch:
@@ -14,7 +14,7 @@
  * 基于Redisson的实现
  *
  * @author yuanqixun
- * @date 2020 /5/13
+ * created on  2020 /5/13
  */
 public class WxCpRedissonConfigImpl extends WxCpDefaultConfigImpl {
   /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpEditionService.java
Patch:
@@ -8,7 +8,7 @@
  * 应用版本付费版本相关接口
  *
  * @author leiguoqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 public interface WxCpTpEditionService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpLicenseService.java
Patch:
@@ -17,7 +17,7 @@
  * 文档地址：https://developer.work.weixin.qq.com/document/path/95652
  * </pre>
  * @author Totoro
- * @date 2022/6/27 10:57
+ * created on  2022/6/27 10:57
  */
 public interface WxCpTpLicenseService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpOAService.java
Patch:
@@ -10,7 +10,7 @@
  * 企业微信OA相关接口.
  *
  * @author Element
- * @date 2019-04-06 10:52
+ * created on  2019-04-06 10:52
  */
 public interface WxCpTpOAService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpOrderService.java
Patch:
@@ -11,7 +11,7 @@
  * 应用版本付费订单相关接口
  *
  * @author leiguoqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 public interface WxCpTpOrderService {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpEditionServiceImpl.java
Patch:
@@ -13,7 +13,7 @@
  * 应用版本付费版本相关接口实现
  *
  * @author leigouqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 @RequiredArgsConstructor
 public class WxCpTpEditionServiceImpl implements WxCpTpEditionService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpLicenseServiceImpl.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * @author Totoro
- * @date 2022/6/27 11:03
+ * created on  2022/6/27 11:03
  */
 @RequiredArgsConstructor
 public class WxCpTpLicenseServiceImpl implements WxCpTpLicenseService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpOAServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * 企业微信 OA 接口实现
  *
  * @author Element
- * @date 2019-04-06 11:20
+ * created on  2019-04-06 11:20
  */
 @RequiredArgsConstructor
 public class WxCpTpOAServiceImpl implements WxCpTpOAService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpOrderServiceImpl.java
Patch:
@@ -17,7 +17,7 @@
  * 应用版本付费订单相关接口实现
  *
  * @author leigouqing
- * @date 2022年4月24日
+ * created on  2022年4月24日
  */
 @RequiredArgsConstructor
 public class WxCpTpOrderServiceImpl implements WxCpTpOrderService {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/StatisticListAdapter.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  * @author zhongjun
- * @date 2022/4/25
+ * created on  2022/4/25
  **/
 public class StatisticListAdapter implements JsonDeserializer<WxCpKfGetCorpStatisticResp.StatisticList> {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/ApiTestModuleWithMockServer.java
Patch:
@@ -6,7 +6,7 @@
  * 带mock server 的test module.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public class ApiTestModuleWithMockServer extends ApiTestModule {
   public static final int mockServerPort = 8080;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpLivingTest.java
Patch:
@@ -23,7 +23,7 @@
  * 官方文档：https://open.work.weixin.qq.com/api/doc/90000/90135/93632
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2021-12-23
+ * created on  2021-12-23
  */
 @Slf4j
 public class WxCpLivingTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMsgAuditTest.java
Patch:
@@ -25,7 +25,7 @@
  * 官方文档：https://developer.work.weixin.qq.com/document/path/91360
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-01-17
+ * created on  2022-01-17
  */
 @Slf4j
 public class WxCpMsgAuditTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpOaAgentTest.java
Patch:
@@ -24,7 +24,7 @@
  * https://developer.work.weixin.qq.com/document/path/90240#%E5%AE%A1%E6%89%B9%E7%8A%B6%E6%80%81%E9%80%9A%E7%9F%A5%E4%BA%8B%E4%BB%B6
  *
  * @author <a href="https://gitee.com/Wang_Wong/">Wang_Wong</a>
- * @date 2022-04-06
+ * created on  2022-04-06
  */
 @Slf4j
 public class WxCpOaAgentTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpSchoolHealthTest.java
Patch:
@@ -20,7 +20,7 @@
  * https://developer.work.weixin.qq.com/document/path/93676
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/5/31 9:10
+ * created on : 2022/5/31 9:10
  */
 @Slf4j
 public class WxCpSchoolHealthTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpSchoolTest.java
Patch:
@@ -20,7 +20,7 @@
  * https://developer.work.weixin.qq.com/document/path/93744
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/5/31 9:10
+ * created on : 2022/5/31 9:10
  */
 @Slf4j
 public class WxCpSchoolTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpSchoolUserTest.java
Patch:
@@ -28,7 +28,7 @@
  * https://developer.work.weixin.qq.com/document/path/91638
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date: 2022/6/18 9:10
+ * created on : 2022/6/18 9:10
  */
 @Slf4j
 public class WxCpSchoolUserTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpAgentWorkBenchImplTest.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author songshiyu
- * @date : create in 10:31 2020/9/29
+ * created on  : create in 10:31 2020/9/29
  * @description: 测试工作台服务
  */
 @Guice(modules = ApiTestModule.class)

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpGroupRobotServiceImplTest.java
Patch:
@@ -20,7 +20,7 @@
  * 微信群机器人消息发送api 单元测试
  *
  * @author yr
- * @date 2020-08-20
+ * created on  2020-08-20
  */
 @Slf4j
 @Guice(modules = ApiTestModule.class)

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpKfServiceImplTest.java
Patch:
@@ -23,7 +23,7 @@
  * 需要用到专门的 secret https://kf.weixin.qq.com/api/doc/path/93304#secret
  *
  * @author Fu
- * @date 2022/1/19 20:12
+ * created on  2022/1/19 20:12
  */
 @Guice(modules = ApiTestModule.class)
 public class WxCpKfServiceImplTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpMessageServiceImplTest.java
Patch:
@@ -27,7 +27,7 @@
  * 测试类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 @Test
 //@Guice(modules = ApiTestModuleWithMockServer.class)

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpOaCalendarServiceImplTest.java
Patch:
@@ -17,7 +17,7 @@
  * 单元测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 
 @Test

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpOaMeetingRoomServiceImplTest.java
Patch:
@@ -17,7 +17,7 @@
  * 单元测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 
 @Test

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpOaScheduleServiceImplTest.java
Patch:
@@ -15,7 +15,7 @@
  * 单元测试类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-12-25
+ * created on  2020-12-25
  */
 @Test
 @Guice(modules = ApiTestModule.class)

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpTaskCardServiceImplTest.java
Patch:
@@ -18,7 +18,7 @@
  * 测试任务卡片服务
  *
  * @author <a href="https://github.com/domainname">Jeff</a>
- * @date 2019-05-16
+ * created on  2019-05-16
  */
 @Guice(modules = ApiTestModule.class)
 public class WxCpTaskCardServiceImplTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/WxCpTpXmlPackageTest.java
Patch:
@@ -8,7 +8,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-18
+ * created on  2019-08-18
  */
 public class WxCpTpXmlPackageTest {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/external/WxCpUpdateRemarkRequestTest.java
Patch:
@@ -9,7 +9,7 @@
  * 单元测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 public class WxCpUpdateRemarkRequestTest {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpLinkedCorpMessageTest.java
Patch:
@@ -15,7 +15,7 @@
  * 测试用例中的json参考 https://work.weixin.qq.com/api/doc/90000/90135/90250
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-08-30
+ * created on  2020-08-30
  */
 public class WxCpLinkedCorpMessageTest {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpSchoolContactMessageTest.java
Patch:
@@ -27,7 +27,7 @@
  * https://developer.work.weixin.qq.com/document/path/92321
  *
  * @author <a href="https://github.com/0katekate0">Wang_Wong</a>
- * @date 2022-06-29
+ * created on  2022-06-29
  */
 @Slf4j
 public class WxCpSchoolContactMessageTest {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/oa/WxCpOaApplyEventRequestTest.java
Patch:
@@ -14,7 +14,7 @@
  * 测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-07-18
+ * created on  2020-07-18
  */
 public class WxCpOaApplyEventRequestTest {
   @Test

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/oa/calendar/WxCpOaCalendarTest.java
Patch:
@@ -11,7 +11,7 @@
  * 单元测试.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-09-20
+ * created on  2020-09-20
  */
 public class WxCpOaCalendarTest {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImplTest.java
Patch:
@@ -23,7 +23,7 @@
  * 测试代码.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-08-18
+ * created on  2019-08-18
  */
 public class BaseWxCpTpServiceImplTest {
   private final WxCpTpService tpService = Mockito.spy(new WxCpTpServiceApacheHttpClientImpl());

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpLicenseServiceImplTest.java
Patch:
@@ -25,7 +25,7 @@
 /**
  * 许可证账号服务测试
  * @author Totoro
- * @date 2022/6/27 16:34
+ * created on  2022/6/27 16:34
  */
 public class WxCpTpLicenseServiceImplTest {
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/util/crypto/WxCpCryptUtilTest.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-06-11
+ * created on  2020-06-11
  */
 public class WxCpCryptUtilTest {
   @Test

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaCloudService.java
Patch:
@@ -12,7 +12,7 @@
  * 云开发相关接口.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020 -01-22
+ * created on  2020 -01-22
  */
 public interface WxMaCloudService {
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaImmediateDeliveryService.java
Patch:
@@ -29,7 +29,7 @@
  *
  * @author Luo
  * @version 1.0
- * @date 2021-10-13 16:40
+ * created on  2021-10-13 16:40
  */
 public interface WxMaImmediateDeliveryService {
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaLiveMemberService.java
Patch:
@@ -9,7 +9,7 @@
  * https://developers.weixin.qq.com/miniprogram/dev/framework/liveplayer/role-manage.html
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021 -02-15
+ * created on  2021 -02-15
  */
 public interface WxMaLiveMemberService {
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaSchemeService.java
Patch:
@@ -11,7 +11,7 @@
  * </pre>
  *
  * @author : cofedream
- * @date : 2021-01-26
+ * created on  : 2021-01-26
  */
 public interface WxMaSchemeService {
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaShopAuditService.java
Patch:
@@ -12,7 +12,7 @@
  * 小程序交易组件-接入商品前必需接口(审核相关接口)
  *
  * @author liming1019
- * @date 2021/8/12
+ * created on  2021/8/12
  */
 public interface WxMaShopAuditService {
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaShopCouponService.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * @author leiin
- * @date 2022/7/1 2:49 下午
+ * created on  2022/7/1 2:49 下午
  */
 public interface WxMaShopCouponService {
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaShopSharerService.java
Patch:
@@ -12,7 +12,7 @@
 /**
  * 分享员
  * @author leiin
- * @date 2022/6/18 2:48 下午
+ * created on  2022/6/18 2:48 下午
  */
 public interface WxMaShopSharerService {
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaSubscribeService.java
Patch:
@@ -13,7 +13,7 @@
  * 订阅消息类
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-12-15
+ * created on  2019-12-15
  */
 public interface WxMaSubscribeService {
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaCloudServiceImpl.java
Patch:
@@ -32,7 +32,7 @@
  * 云开发相关接口实现类.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-22
+ * created on  2020-01-22
  */
 @Slf4j
 @RequiredArgsConstructor

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaImmediateDeliveryServiceImpl.java
Patch:
@@ -44,7 +44,7 @@
  *
  * @author Luo
  * @version 1.0
- * @date 2021-10-13 16:40
+ * created on  2021-10-13 16:40
  */
 @RequiredArgsConstructor
 public class WxMaImmediateDeliveryServiceImpl implements WxMaImmediateDeliveryService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaInternetServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * 服务端网络相关接口
  *
  * @author <a href="https://github.com/chutian0124">chutian0124</a>
- * @Date 2021-09-06
+ * created on  2021-09-06
  */
 @RequiredArgsConstructor
 public class WxMaInternetServiceImpl implements WxMaInternetService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaLiveMemberServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
  * .
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2021-02-15
+ * created on  2021-02-15
  */
 @RequiredArgsConstructor
 public class WxMaLiveMemberServiceImpl implements WxMaLiveMemberService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaOcrServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
  * ocr 接口实现.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-06-22
+ * created on  2019-06-22
  */
 @RequiredArgsConstructor
 public class WxMaOcrServiceImpl implements WxOcrService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSchemeServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
 
 /**
  * @author : cofedream
- * @date : 2021-01-28
+ * created on  : 2021-01-28
  */
 @AllArgsConstructor
 public class WxMaSchemeServiceImpl implements WxMaSchemeService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaShopAuditServiceImpl.java
Patch:
@@ -24,7 +24,7 @@
  * 小程序交易组件-接入商品前必需接口(审核相关接口)
  *
  * @author liming1019
- * @date 2021/8/12
+ * created on  2021/8/12
  */
 @RequiredArgsConstructor
 @Slf4j

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaShopCouponServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  * @author leiin
- * @date 2022/7/1 2:49 下午
+ * created on  2022/7/1 2:49 下午
  */
 @RequiredArgsConstructor
 @Slf4j

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaShopSharerServiceImpl.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  * @author leiin
- * @date 2022/6/18 3:38 下午
+ * created on  2022/6/18 3:38 下午
  */
 @RequiredArgsConstructor
 @Slf4j

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSubscribeServiceImpl.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2019-12-15
+ * created on  2019-12-15
  */
 @RequiredArgsConstructor
 public class WxMaSubscribeServiceImpl implements WxMaSubscribeService {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/Watermark.java
Patch:
@@ -11,7 +11,7 @@
  * 数据水印.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-05-25
+ * created on  2020-05-25
  */
 @Data
 @AllArgsConstructor

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaBaseResponse.java
Patch:
@@ -7,7 +7,7 @@
 
 /**
  * @author liming1019
- * @date 2021/8/17
+ * created on  2021/8/17
  */
 @Data
 public class WxMaBaseResponse implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaSubscribeMsgEvent.java
Patch:
@@ -14,7 +14,7 @@
  * WxMaSubscribeMsgEvent class
  *  客户端订阅，服务端收到的通知
  * @author dany
- * @date 2021/12/31
+ * created on  2021/12/31
  */
 public class WxMaSubscribeMsgEvent {
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaUpdatableMsg.java
Patch:
@@ -11,7 +11,7 @@
  * 动态消息.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-02-17
+ * created on  2020-02-17
  */
 @Data
 @Accessors(chain = true)

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxaCode.java
Patch:
@@ -16,7 +16,7 @@
  * 小程序码.
  *
  * @author Element
- * @date 2017/7/27
+ * created on  2017/7/27
  */
 @Data
 @EqualsAndHashCode(callSuper = false)

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxaCodeUnlimit.java
Patch:
@@ -13,7 +13,7 @@
  * 小程序码接口B.
  *
  * @author Element
- * @date 2017/7/27
+ * created on  2017/7/27
  */
 @Data
 @EqualsAndHashCode(callSuper = false)

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudBatchDeleteFileResult.java
Patch:
@@ -10,7 +10,7 @@
  * 文件删除结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-27
+ * created on  2020-01-27
  */
 @Data
 public class WxCloudBatchDeleteFileResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudBatchDownloadFileResult.java
Patch:
@@ -10,7 +10,7 @@
  * 获取文件下载链接结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-27
+ * created on  2020-01-27
  */
 @Data
 public class WxCloudBatchDownloadFileResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudCloudDatabaseMigrateQueryInfoResult.java
Patch:
@@ -9,7 +9,7 @@
  * 云开发数据库迁移状态查询结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-26
+ * created on  2020-01-26
  */
 @Data
 public class WxCloudCloudDatabaseMigrateQueryInfoResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudDatabaseCollectionGetResult.java
Patch:
@@ -9,7 +9,7 @@
  * 云开发获取集合接口的结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-28
+ * created on  2020-01-28
  */
 @Data
 public class WxCloudDatabaseCollectionGetResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudDatabaseCreateIndexRequest.java
Patch:
@@ -10,7 +10,7 @@
  * 云开发新增索引的请求对象.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-26
+ * created on  2020-01-26
  */
 @Accessors(chain = true)
 @Data

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudDatabaseQueryResult.java
Patch:
@@ -9,7 +9,7 @@
  * 云开发数据库查询记录接口请求结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-26
+ * created on  2020-01-26
  */
 @Data
 public class WxCloudDatabaseQueryResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudDatabaseUpdateResult.java
Patch:
@@ -8,7 +8,7 @@
  * 云开发数据库更新记录接口请求结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-26
+ * created on  2020-01-26
  */
 @Data
 public class WxCloudDatabaseUpdateResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudGetQcloudTokenResult.java
Patch:
@@ -9,7 +9,7 @@
  * 获取腾讯云API调用凭证结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-27
+ * created on  2020-01-27
  */
 @Data
 public class WxCloudGetQcloudTokenResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudSendSmsV2Result.java
Patch:
@@ -12,7 +12,7 @@
  * 发送携带 URL Link 的短信结果
  *
  * @author liming1019
- * @date 2022-07-26
+ * created on  2022-07-26
  */
 @Data
 public class WxCloudSendSmsV2Result extends WxMaBaseResponse implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/WxCloudUploadFileResult.java
Patch:
@@ -9,7 +9,7 @@
  * 云开发文件上传接口响应结果.
  *
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
- * @date 2020-01-27
+ * created on  2020-01-27
  */
 @Data
 public class WxCloudUploadFileResult implements Serializable {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/cloud/request/WxCloudSendSmsV2Request.java
Patch:
@@ -11,7 +11,7 @@
  * 发送携带 URL Link 的短信请求
  *
  * @author liming1019
- * @date 2022-07-26
+ * created on  2022-07-26
  */
 @Data
 @Builder

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/WxEntrustPapServiceImpl.java
Patch:
@@ -48,6 +48,8 @@ public String maSign(WxMaEntrustRequest wxMaEntrustRequest) throws WxPayExceptio
   @Override
   public WxH5EntrustResult h5Sign(WxH5EntrustRequest wxH5EntrustRequest) throws WxPayException {
     wxH5EntrustRequest.checkAndSign(payService.getConfig());
+    // 微信最新接口signType不能参与签名，否则报错：签约参数签名校验错误
+    wxH5EntrustRequest.setSignType(null);
 
     String sign = SignUtils.createSign(wxH5EntrustRequest, WxPayConstants.SignType.HMAC_SHA256, payService.getConfig().getMchKey(), null);
     /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/delivery/base/WxMaDeliveryBaseRequest.java
Patch:
@@ -113,7 +113,8 @@ public String getDeliverySign() {
             str = str.concat(getShopOrderId());
         }
         str = str.concat(getAppSecret());
-        return DigestUtils.sha1Hex(str);
+        this.deliverySign = DigestUtils.sha1Hex(str);
+        return this.deliverySign;
     }
 
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/v3/auth/AutoUpdateCertificatesVerifier.java
Patch:
@@ -123,7 +123,7 @@ public boolean verify(String serialNumber, byte[] message, String signature) {
    * 检查证书是否在有效期内，如果不在有效期内则进行更新
    */
   private void checkAndAutoUpdateCert() {
-    if (instant == null || instant.plus(minutesInterval, ChronoUnit.MINUTES).compareTo(Instant.now()) >= 0) {
+    if (instant == null || instant.plus(minutesInterval, ChronoUnit.MINUTES).compareTo(Instant.now()) <= 0) {
       if (lock.tryLock()) {
         try {
           autoUpdateCert();

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/v3/util/PemUtils.java
Patch:
@@ -47,7 +47,7 @@ public static PrivateKey loadPrivateKey(InputStream inputStream) {
 
   public static X509Certificate loadCertificate(InputStream inputStream) {
     try {
-      CertificateFactory cf = CertificateFactory.getInstance("X509");
+      CertificateFactory cf = CertificateFactory.getInstance("X.509");
       X509Certificate cert = (X509Certificate) cf.generateCertificate(inputStream);
       cert.checkValidity();
       return cert;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/v3/util/RsaCryptoUtil.java
Patch:
@@ -47,7 +47,7 @@ private static void encryptField(Object encryptObject, X509Certificate certifica
           Object oldValue = field.get(encryptObject);
           if (oldValue != null) {
             String oldStr = (String) oldValue;
-            if (!oldStr.trim().equals("'")) {
+            if (!"".equals(oldStr.trim())) {
               field.set(encryptObject, encryptOAEP(oldStr, certificate));
             }
           }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/ma/WxMaOpenCommitStandardExt.java
Patch:
@@ -40,7 +40,7 @@ public class WxMaOpenCommitStandardExt implements Serializable {
   /**
    * 授权小程序Appid，可填入商户小程序AppID，以区分不同商户
    */
-  @SerializedName("extAppId")
+  @SerializedName("extAppid")
   private String extAppId;
 
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaUserInfo.java
Patch:
@@ -12,7 +12,6 @@
 public class WxMaUserInfo implements Serializable {
   private static final long serialVersionUID = 6719822331555402137L;
 
-  private String openId;
   private String nickName;
   private String gender;
   private String language;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/EcommerceServiceImpl.java
Patch:
@@ -110,7 +110,8 @@ public TransactionsResult partner(TradeTypeEnum tradeType, PartnerTransactionsRe
   @Override
   public <T> T partnerTransactions(TradeTypeEnum tradeType, PartnerTransactionsRequest request) throws WxPayException {
     TransactionsResult result = this.partner(tradeType, request);
-    return result.getPayInfo(tradeType, request.getSpAppid(),
+    String appId = request.getSubAppid() != null ? request.getSubAppid() : request.getSpAppid();
+    return result.getPayInfo(tradeType, appId,
       request.getSpMchid(), payService.getConfig().getPrivateKey());
   }
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/WxPreWithholdRequest.java
Patch:
@@ -28,7 +28,7 @@ public class WxPreWithholdRequest implements Serializable {
    * 委托代扣协议ID
    */
   @SerializedName(value = "contract_id")
-  private String contractId;
+  private transient String contractId;
 
   /**
    * 直连商户号

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpLivingService.java
Patch:
@@ -84,7 +84,7 @@ public interface WxCpLivingService {
    * 请求地址： https://qyapi.weixin.qq.com/cgi-bin/living/create?access_token=ACCESS_TOKEN
    *
    * @param request 创建预约直播请求参数.
-   * @return
+   * @return livingId（直播id）
    * @throws WxErrorException
    */
   String livingCreate(WxCpLivingCreateRequest request) throws WxErrorException;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpGroupRobotServiceImplTest.java
Patch:
@@ -61,7 +61,7 @@ public void testSendImage() throws WxErrorException {
   @Test
   public void testSendNews() throws WxErrorException {
     NewArticle article = new NewArticle("图文消息测试", "hello world", "http://www.baidu.com",
-      "http://res.mail.qq.com/node/ww/wwopenmng/images/independent/doc/test_pic_msg1.png", null);
+      "http://res.mail.qq.com/node/ww/wwopenmng/images/independent/doc/test_pic_msg1.png", null, null, null);
     robotService.sendNews(Stream.of(article).collect(Collectors.toList()));
   }
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpDraftServiceImpl.java
Patch:
@@ -43,13 +43,13 @@ public String addDraft(String title, String content, String thumbMediaId) throws
   @Override
   public String addDraft(WxMpAddDraft addDraft) throws WxErrorException {
     String json = this.mpService.post(WxMpApiUrl.Draft.ADD_DRAFT, addDraft);
-    return GsonParser.parse(json).get(MEDIA_ID).toString();
+    return GsonParser.parse(json).get(MEDIA_ID).getAsString();
   }
 
   @Override
   public Boolean updateDraft(WxMpUpdateDraft updateDraftInfo) throws WxErrorException {
     String json = this.mpService.post(WxMpApiUrl.Draft.UPDATE_DRAFT, updateDraftInfo);
-    return GsonParser.parse(json).get(ERRCODE).toString().equals(ERRCODE_SUCCESS);
+    return GsonParser.parse(json).get(ERRCODE).getAsString().equals(ERRCODE_SUCCESS);
   }
 
   @Override
@@ -62,7 +62,7 @@ public WxMpDraftInfo getDraft(String mediaId) throws WxErrorException {
   public Boolean delDraft(String mediaId) throws WxErrorException {
     String json = this.mpService.post(WxMpApiUrl.Draft.DEL_DRAFT,
       GsonHelper.buildJsonObject(MEDIA_ID, mediaId));
-    return GsonParser.parse(json).get(ERRCODE).toString().equals(ERRCODE_SUCCESS);
+    return GsonParser.parse(json).get(ERRCODE).getAsString().equals(ERRCODE_SUCCESS);
   }
 
   @Override

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/WxPayEntrustResult.java
Patch:
@@ -81,7 +81,7 @@ public class WxPayEntrustResult extends BaseWxPayResult implements Serializable
    * 非必传
    */
   @XStreamAlias("request_serial")
-  private Integer requestSerial;
+  private Long requestSerial;
 
   /**
    * 签约协议号
@@ -120,7 +120,7 @@ protected void loadXml(Document d) {
     tradeType = readXmlString(d, "trade_type");
     codeUrl = readXmlString(d, "code_url");
     planId = readXmlInteger(d, "plan_id");
-    requestSerial = readXmlInteger(d, "request_serial");
+    requestSerial = readXmlLong(d, "request_serial");
     contractCode = readXmlString(d, "contract_code");
     contractDisplayAccount = readXmlString(d, "contract_display_account");
     mwebUrl = readXmlString(d, "mweb_url");

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/WxSignQueryResult.java
Patch:
@@ -42,7 +42,7 @@ public class WxSignQueryResult extends BaseWxPayResult implements Serializable {
    * 请求序列号
    */
   @XStreamAlias("request_serial")
-  private Integer requestSerial;
+  private Long requestSerial;
 
   /**
    * 签约协议号
@@ -106,7 +106,7 @@ public class WxSignQueryResult extends BaseWxPayResult implements Serializable {
   protected void loadXml(Document d) {
     contractId = readXmlString(d, "contract_id");
     planId = readXmlString(d, "plan_id");
-    requestSerial = readXmlInteger(d, "request_serial");
+    requestSerial = readXmlLong(d, "request_serial");
     contractCode = readXmlString(d, "contract_code");
     contractDisplayAccount = readXmlString(d, "contract_display_account");
     contractState = readXmlInteger(d, "contract_state");

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/WxSignStatusNotifyResult.java
Patch:
@@ -81,7 +81,7 @@ public class WxSignStatusNotifyResult extends BaseWxPayResult {
    * 请求序列号
    */
   @XStreamAlias("request_serial")
-  private Integer requestSerial;
+  private Long requestSerial;
 
   @Override
   public void checkResult(WxPayService wxPayService, String signType, boolean checkSuccess) throws WxPayException {
@@ -117,7 +117,7 @@ protected void loadXml(Document d) {
     contractId = readXmlString(d, "contract_id");
     contractExpiredTime = readXmlString(d, "contract_expired_time");
     contractTerminationMode = readXmlInteger(d, "contract_termination_mode");
-    requestSerial = readXmlInteger(d, "request_serial");
+    requestSerial = readXmlLong(d, "request_serial");
   }
 
   @Override

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/marketing/transfer/BatchDetailsResult.java
Patch:
@@ -235,5 +235,5 @@ public String toString() {
    * </pre>
    */
   @SerializedName(value = "update_time")
-  private Date updateTime;
+  private String updateTime;
 }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxMenuGsonAdapter.java
Patch:
@@ -46,6 +46,7 @@ protected JsonObject convertToJson(WxMenuButton button) {
     buttonJson.addProperty("key", button.getKey());
     buttonJson.addProperty("url", button.getUrl());
     buttonJson.addProperty("media_id", button.getMediaId());
+    buttonJson.addProperty("article_id", button.getArticleId());
     buttonJson.addProperty("appid", button.getAppId());
     buttonJson.addProperty("pagepath", button.getPagePath());
     if (button.getSubButtons() != null && button.getSubButtons().size() > 0) {
@@ -122,6 +123,7 @@ protected WxMenuButton convertFromJson(JsonObject json) {
     button.setUrl(GsonHelper.getString(json, "url"));
     button.setType(GsonHelper.getString(json, "type"));
     button.setMediaId(GsonHelper.getString(json, "media_id"));
+    button.setArticleId(GsonHelper.getString(json, "article_id"));
     button.setAppId(GsonHelper.getString(json, "appid"));
     button.setPagePath(GsonHelper.getString(json, "pagepath"));
     return button;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/result/WxOpenMaHistoryVersionResult.java
Patch:
@@ -18,8 +18,8 @@
 public class WxOpenMaHistoryVersionResult extends WxOpenResult {
   private static final long serialVersionUID = 4102311851687901079L;
 
-  @SerializedName("template_list")
-  List<WxOpenMaHistoryVersion> templateList;
+  @SerializedName("version_list")
+  List<WxOpenMaHistoryVersion> versions;
 
   @Override
   public String toString() {

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/WxOpenMaCodeTemplate.java
Patch:
@@ -51,11 +51,11 @@ public class WxOpenMaCodeTemplate implements Serializable {
    * 开发小程序的appid
    */
   @SerializedName(value = "sourceMiniProgramAppid", alternate = "source_miniprogram_appid")
-  private Long sourceMiniProgramAppid;
+  private String sourceMiniProgramAppid;
 
   /**
    * 开发小程序的名称
    */
   @SerializedName(value = "sourceMiniProgram", alternate = "source_miniprogram")
-  private Long sourceMiniProgram;
+  private String sourceMiniProgram;
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaServiceImpl.java
Patch:
@@ -29,7 +29,7 @@
 public class WxCpOaServiceImpl implements WxCpOaService {
   private final WxCpService mainService;
 
-  private static final int MONTH_SECONDS = 30 * 24 * 60 * 60;
+  private static final int MONTH_SECONDS = 31 * 24 * 60 * 60;
   private static final int USER_IDS_LIMIT = 100;
 
   @Override
@@ -49,7 +49,7 @@ public List<WxCpCheckinData> getCheckinData(Integer openCheckinDataType, @NonNul
     long endTimestamp = endTime.getTime() / 1000L;
     long startTimestamp = startTime.getTime() / 1000L;
 
-    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp >= MONTH_SECONDS) {
+    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp > MONTH_SECONDS) {
       throw new WxRuntimeException("获取记录时间跨度不超过一个月");
     }
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/WxMaGsonBuilder.java
Patch:
@@ -34,7 +34,7 @@ public class WxMaGsonBuilder {
 
   public static Gson create() {
     if (Objects.isNull(GSON_INSTANCE)) {
-      synchronized (GSON_INSTANCE) {
+      synchronized (INSTANCE) {
         if (Objects.isNull(GSON_INSTANCE)) {
           GSON_INSTANCE = INSTANCE.create();
         }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/util/json/WxOpenGsonBuilder.java
Patch:
@@ -32,7 +32,7 @@ public class WxOpenGsonBuilder {
 
   public static Gson create() {
     if (Objects.isNull(GSON_INSTANCE)) {
-      synchronized (GSON_INSTANCE) {
+      synchronized (INSTANCE) {
         if (Objects.isNull(GSON_INSTANCE)) {
           GSON_INSTANCE = INSTANCE.create();
         }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/message/WxMpXmlOutMessage.java
Patch:
@@ -29,7 +29,7 @@ public abstract class WxMpXmlOutMessage implements Serializable {
 
   @XStreamAlias("FromUserName")
   @XStreamConverter(value = XStreamCDataConverter.class)
-  @JacksonXmlProperty(localName = "ToUserName")
+  @JacksonXmlProperty(localName = "FromUserName")
   @JacksonXmlCData
   protected String fromUserName;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaImgProcServiceImpl.java
Patch:
@@ -35,7 +35,7 @@ public WxImgProcQrCodeResult qrCode(String imgUrl) throws WxErrorException {
       //ignore
     }
 
-    final String result = this.service.get(String.format(QRCODE, imgUrl), null);
+    final String result = this.service.post(String.format(QRCODE, imgUrl), "");
     return WxImgProcQrCodeResult.fromJson(result);
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheHttpDnsClientBuilder.java
Patch:
@@ -48,7 +48,7 @@ public class ApacheHttpDnsClientBuilder implements ApacheHttpClientBuilder {
 
   private DnsResolver dnsResover;
 
-  private HttpRequestRetryHandler httpRequestRetryHandler = (exception, executionCount, context) -> false;
+  private HttpRequestRetryHandler httpRequestRetryHandler = (IOException exception, int executionCount, HttpContext context) -> false;
   private SSLConnectionSocketFactory sslConnectionSocketFactory = SSLConnectionSocketFactory.getSocketFactory();
   private PlainConnectionSocketFactory plainConnectionSocketFactory = PlainConnectionSocketFactory.getSocketFactory();
   private String httpProxyHost;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/BaseWxCpServiceImplTest.java
Patch:
@@ -92,7 +92,7 @@ public WxCpConfigStorage getWxCpConfigStorage() {
     RequestExecutor<Object, Object> re = mock(RequestExecutor.class);
 
     AtomicInteger counter = new AtomicInteger();
-    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer(invocation -> {
+    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer((InvocationOnMock invocation) -> {
       counter.incrementAndGet();
       WxError error = WxError.builder().errorCode(WxMpErrorMsgEnum.CODE_40001.getCode()).errorMsg(WxMpErrorMsgEnum.CODE_40001.getMsg()).build();
       throw new WxErrorException(error);

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpDemoServer.java
Patch:
@@ -49,14 +49,14 @@ private static void initWeixin() throws IOException {
       wxCpService = new WxCpServiceImpl();
       wxCpService.setWxCpConfigStorage(config);
 
-      WxCpMessageHandler handler = (wxMessage, context, wxService, sessionManager) -> {
+      WxCpMessageHandler handler = (WxCpXmlMessage wxMessage, Map context, WxCpService wxService, WxSessionManager sessionManager) -> {
         WxCpXmlOutTextMessage m = WxCpXmlOutMessage.TEXT().content("测试加密消息")
           .fromUser(wxMessage.getToUserName())
           .toUser(wxMessage.getFromUserName()).build();
         return m;
       };
 
-      WxCpMessageHandler oauth2handler = (wxMessage, context, wxService, sessionManager) -> {
+      WxCpMessageHandler oauth2handler = (WxCpXmlMessage wxMessage, Map context, WxCpService wxService, WxSessionManager sessionManager) -> {
         String href = "<a href=\""
           + wxService.getOauth2Service().buildAuthorizationUrl(wxCpConfigStorage.getOauth2redirectUri(), null)
           + "\">测试oauth2</a>";
@@ -78,7 +78,7 @@ private static void initWeixin() throws IOException {
         .end()
         .rule()
         .event(WxCpConsts.EventType.CHANGE_CONTACT)
-        .handler((wxMessage, context, wxCpService, sessionManager) -> {
+        .handler((WxCpXmlMessage wxMessage, Map context, WxCpService wxCpService, WxSessionManager sessionManager) -> {
           System.out.println("通讯录发生变更");
           return null;
         })

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaServiceImplTest.java
Patch:
@@ -127,7 +127,7 @@ public String getAccessToken(boolean forceRefresh) throws WxErrorException {
     RequestExecutor<Object, Object> re = mock(RequestExecutor.class);
 
     AtomicInteger counter = new AtomicInteger();
-    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer(invocation -> {
+    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer((InvocationOnMock invocation) -> {
       counter.incrementAndGet();
       WxError error = WxError.builder().errorCode(WxMpErrorMsgEnum.CODE_40001.getCode()).errorMsg(WxMpErrorMsgEnum.CODE_40001.getMsg()).build();
       throw new WxErrorException(error);

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/BaseWxMpServiceImplTest.java
Patch:
@@ -237,7 +237,7 @@ public HttpType getRequestType() {
     RequestExecutor<Object, Object> re = mock(RequestExecutor.class);
 
     AtomicInteger counter = new AtomicInteger();
-    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer(invocation -> {
+    Mockito.when(re.execute(Mockito.anyString(), Mockito.any(), Mockito.any())).thenAnswer((InvocationOnMock invocation) -> {
       counter.incrementAndGet();
       WxError error = WxError.builder().errorCode(WxMpErrorMsgEnum.CODE_40001.getCode()).errorMsg(WxMpErrorMsgEnum.CODE_40001.getMsg()).build();
       throw new WxErrorException(error);

File: weixin-java-pay/src/test/java/com/github/binarywang/wxpay/service/impl/MarketingFavorServiceImplTest.java
Patch:
@@ -175,7 +175,7 @@ public void testSaveFavorCallbacksV3() throws WxPayException {
   public void testPauseFavorStocksV3() throws WxPayException {
     FavorStocksSetRequest request = new FavorStocksSetRequest();
     request.setStockCreatorMchid(wxPayService.getConfig().getMchId());
-    FavorStocksStartResult result = wxPayService.getMarketingFavorService().pauseFavorStocksV3(stockId, request);
+    FavorStocksPauseResult result = wxPayService.getMarketingFavorService().pauseFavorStocksV3(stockId, request);
 
     log.info("result: {}", GSON.toJson(result));
   }
@@ -184,7 +184,7 @@ public void testPauseFavorStocksV3() throws WxPayException {
   public void testRestartFavorStocksV3() throws WxPayException {
     FavorStocksSetRequest request = new FavorStocksSetRequest();
     request.setStockCreatorMchid(wxPayService.getConfig().getMchId());
-    FavorStocksStartResult result = wxPayService.getMarketingFavorService().restartFavorStocksV3(stockId, request);
+    FavorStocksRestartResult result = wxPayService.getMarketingFavorService().restartFavorStocksV3(stockId, request);
 
     log.info("result: {}", GSON.toJson(result));
   }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/BaseWxPayResult.java
Patch:
@@ -150,6 +150,7 @@ public static <T extends BaseWxPayResult> T fromXML(String xmlString, Class<T> c
     }
     XStream xstream = XStreamInitializer.getInstance();
     xstream.processAnnotations(clz);
+    xstream.setClassLoader(BaseWxPayResult.class.getClassLoader());
     T result = (T) xstream.fromXML(xmlString);
     result.setXmlString(xmlString);
     return result;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/executor/OkHttpQrcodeBytesRequestExecutor.java
Patch:
@@ -35,13 +35,13 @@ public OkHttpQrcodeBytesRequestExecutor(RequestHttp<OkHttpClient, OkHttpProxyInf
    */
   @Override
   public byte[] execute(String uri, AbstractWxMaQrcodeWrapper qrcodeWrapper, WxType wxType) throws WxErrorException, IOException {
-    RequestBody body = RequestBody.Companion.create(qrcodeWrapper.toJson(), MediaType.parse("text/plain; charset=utf-8"));
+    RequestBody body = RequestBody.Companion.create(qrcodeWrapper.toJson(), MediaType.parse("application/json; charset=utf-8"));
     Request request = new Request.Builder().url(uri).post(body).build();
     Response response = requestHttp.getRequestHttpClient().newCall(request).execute();
     String contentTypeHeader = response.header("Content-Type");
-    if ("text/plain".equals(contentTypeHeader)) {
+    if (null != contentTypeHeader && contentTypeHeader.startsWith("application/json")) {
       String responseContent = response.body().string();
-      throw new WxErrorException(WxError.fromJson(responseContent, WxType.MP));
+      throw new WxErrorException(WxError.fromJson(responseContent, wxType));
     }
 
     try (InputStream inputStream = response.body().byteStream()) {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/executor/OkHttpQrcodeFileRequestExecutor.java
Patch:
@@ -41,13 +41,13 @@ public OkHttpQrcodeFileRequestExecutor(RequestHttp<OkHttpClient, OkHttpProxyInfo
    */
   @Override
   public File execute(String uri, AbstractWxMaQrcodeWrapper qrcodeWrapper, WxType wxType) throws WxErrorException, IOException {
-    RequestBody body = RequestBody.Companion.create(qrcodeWrapper.toJson(), MediaType.parse("text/plain; charset=utf-8"));
+    RequestBody body = RequestBody.Companion.create(qrcodeWrapper.toJson(), MediaType.parse("application/json; charset=utf-8"));
     Request request = new Request.Builder().url(uri).post(body).build();
     Response response = requestHttp.getRequestHttpClient().newCall(request).execute();
     String contentTypeHeader = response.header("Content-Type");
-    if ("text/plain".equals(contentTypeHeader)) {
+    if (null != contentTypeHeader && contentTypeHeader.startsWith("application/json")) {
       String responseContent = response.body().string();
-      throw new WxErrorException(WxError.fromJson(responseContent, WxType.MP));
+      throw new WxErrorException(WxError.fromJson(responseContent, wxType));
     }
 
     try (InputStream inputStream = response.body().byteStream()) {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/live/WxMaLiveResult.java
Patch:
@@ -101,6 +101,7 @@ public static class RoomInfo implements Serializable {
     private String anchorWechat;
     @SerializedName("anchor_img")
     private String anchorImg;
+    @SerializedName("live_type")
     private Integer type;
     @SerializedName("screen_type")
     private Integer screenType;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/WxPayUnifiedOrderV3Result.java
Patch:
@@ -83,7 +83,7 @@ public static class JsapiResult implements Serializable {
     private String paySign;
 
     private String getSignStr() {
-      return String.format("%s%n%s%n%s%n%s%n", appId, timeStamp, nonceStr, packageValue);
+      return String.format("%s\n%s\n%s\n%s\n", appId, timeStamp, nonceStr, packageValue);
     }
   }
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/BusinessCircleServiceImpl.java
Patch:
@@ -46,7 +46,7 @@ public void notifyPoints(PointsNotifyRequest request) throws WxPayException {
    * @return true:校验通过 false:校验不通过
    */
   private boolean verifyNotifySign(SignatureHeader header, String data) {
-    String beforeSign = String.format("%s%n%s%n%s%n", header.getTimeStamp(), header.getNonce(), data);
+    String beforeSign = String.format("%s\n%s\n%s\n", header.getTimeStamp(), header.getNonce(), data);
     return payService.getConfig().getVerifier().verify(header.getSerialNo(),
       beforeSign.getBytes(StandardCharsets.UTF_8), header.getSigned());
   }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/MarketingFavorServiceImpl.java
Patch:
@@ -177,7 +177,7 @@ public FavorStocksStartResult restartFavorStocksV3(String stockId, FavorStocksSe
    * @return true:校验通过 false:校验不通过
    */
   private boolean verifyNotifySign(SignatureHeader header, String data) {
-    String beforeSign = String.format("%s%n%s%n%s%n", header.getTimeStamp(), header.getNonce(), data);
+    String beforeSign = String.format("%s\n%s\n%s\n", header.getTimeStamp(), header.getNonce(), data);
     return payService.getConfig().getVerifier().verify(header.getSerialNo(),
       beforeSign.getBytes(StandardCharsets.UTF_8), header.getSigned());
   }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/PayScoreServiceImpl.java
Patch:
@@ -303,7 +303,7 @@ public WxPayScoreResult decryptNotifyDataResource(PayScoreNotifyData data) throw
    * @return true:校验通过 false:校验不通过
    */
   private boolean verifyNotifySign(SignatureHeader header, String data) {
-    String beforeSign = String.format("%s%n%s%n%s%n", header.getTimeStamp(), header.getNonce(), data);
+    String beforeSign = String.format("%s\n%s\n%s\n", header.getTimeStamp(), header.getNonce(), data);
     return payService.getConfig().getVerifier().verify(header.getSerialNo(),
       beforeSign.getBytes(StandardCharsets.UTF_8), header.getSigned());
   }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMaServiceImpl.java
Patch:
@@ -16,7 +16,6 @@
 import me.chanjar.weixin.open.api.WxOpenComponentService;
 import me.chanjar.weixin.open.api.WxOpenMaBasicService;
 import me.chanjar.weixin.open.api.WxOpenMaService;
-import me.chanjar.weixin.open.bean.ma.WxMaOpenCommitExtInfo;
 import me.chanjar.weixin.open.bean.ma.WxMaQrcodeParam;
 import me.chanjar.weixin.open.bean.ma.WxMaScheme;
 import me.chanjar.weixin.open.bean.message.WxOpenMaSubmitAuditMessage;
@@ -185,13 +184,13 @@ public WxOpenResult updateShowWxaItem(Integer flag, String mpAppId) throws WxErr
   }
 
   @Override
-  public WxOpenResult codeCommit(Long templateId, String userVersion, String userDesc, WxMaOpenCommitExtInfo extInfo) throws WxErrorException {
+  public WxOpenResult codeCommit(Long templateId, String userVersion, String userDesc, Object extJsonObject) throws WxErrorException {
     JsonObject params = new JsonObject();
     params.addProperty("template_id", templateId);
     params.addProperty("user_version", userVersion);
     params.addProperty("user_desc", userDesc);
     //注意：ext_json必须是字符串类型
-    params.addProperty("ext_json", GSON.toJson(extInfo));
+    params.addProperty("ext_json", GSON.toJson(extJsonObject));
     String response = post(API_CODE_COMMIT, GSON.toJson(params));
     return WxMaGsonBuilder.create().fromJson(response, WxOpenResult.class);
   }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/WxOpenMaCodeTemplate.java
Patch:
@@ -6,6 +6,8 @@
 import java.io.Serializable;
 
 /**
+ * 小程序代码模板
+ *
  * @author <a href="https://github.com/charmingoh">Charming</a>
  * @since 2018-04-26 17:10
  */
@@ -37,7 +39,7 @@ public class WxOpenMaCodeTemplate implements Serializable {
    * 模板类型 0对应普通模板，1对应标准模板
    */
   @SerializedName(value = "templateType", alternate = "template_type")
-  private Integer template_type;
+  private Integer templateType;
 
   /**
    * 开发者上传草稿时间 / 被添加为模版的时间

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImpl.java
Patch:
@@ -461,7 +461,7 @@ public WxTpLoginInfo getLoginInfo(String authCode) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("auth_code", authCode);
     String access_token = getWxCpProviderToken();
-    String responseText = post(configStorage.getApiUrl(GET_LOGIN_INFO) + "?access_token=" + access_token, jsonObject.toString());
+    String responseText = post(configStorage.getApiUrl(GET_LOGIN_INFO) + "?access_token=" + access_token, jsonObject.toString(), true);
     return WxTpLoginInfo.fromJson(responseText);
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaServiceImpl.java
Patch:
@@ -49,7 +49,7 @@ public List<WxCpCheckinData> getCheckinData(Integer openCheckinDataType, @NonNul
     long endTimestamp = endTime.getTime() / 1000L;
     long startTimestamp = startTime.getTime() / 1000L;
 
-    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp >= MONTH_SECONDS * 1000L) {
+    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp >= MONTH_SECONDS) {
       throw new WxRuntimeException("获取记录时间跨度不超过一个月");
     }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOaServiceImpl.java
Patch:
@@ -53,7 +53,7 @@ public List<WxCpCheckinData> getCheckinData(Integer openCheckinDataType, Date st
     long endTimestamp = endTime.getTime() / 1000L;
     long startTimestamp = startTime.getTime() / 1000L;
 
-    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp >= MONTH_SECONDS) {
+    if (endTimestamp - startTimestamp < 0 || endTimestamp - startTimestamp >= MONTH_SECONDS * 1000L) {
       throw new WxRuntimeException("获取记录时间跨度不超过一个月");
     }
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenOAuth2ServiceImpl.java
Patch:
@@ -14,6 +14,7 @@
 import java.io.IOException;
 
 import static me.chanjar.weixin.mp.enums.WxMpApiUrl.OAuth2.*;
+import static me.chanjar.weixin.mp.enums.WxMpApiUrl.Other.QRCONNECT_URL;
 
 /**
  * oauth2接口实现.
@@ -28,7 +29,7 @@ public class WxOpenOAuth2ServiceImpl extends WxOpenServiceImpl implements WxOAut
 
   @Override
   public String buildAuthorizationUrl(String redirectUri, String scope, String state) {
-    return String.format(CONNECT_OAUTH2_AUTHORIZE_URL.getUrl(null),
+    return String.format(QRCONNECT_URL.getUrl(null),
       this.appId, URIUtil.encodeURIComponent(redirectUri), scope, StringUtils.trimToEmpty(state));
   }
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/live/WxMaLiveGoodInfo.java
Patch:
@@ -3,6 +3,7 @@
 import lombok.Data;
 
 import java.io.Serializable;
+import java.math.BigDecimal;
 
 /**
  * 直播商品信息
@@ -14,8 +15,8 @@ public class WxMaLiveGoodInfo implements Serializable {
   private String coverImgUrl;
   private String url;
   private Integer priceType;
-  private String price;
-  private String price2;
+  private BigDecimal price;
+  private BigDecimal price2;
   private String name;
   /**
    * 1, 2：表示是为api添加商品，否则是在MP添加商品

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/live/WxMaLiveResult.java
Patch:
@@ -5,6 +5,7 @@
 import lombok.Data;
 
 import java.io.Serializable;
+import java.math.BigDecimal;
 import java.util.List;
 
 /**
@@ -66,8 +67,8 @@ public static class Goods implements Serializable {
      */
     @SerializedName("audit_status")
     private Integer auditStatus;
-    private String price;
-    private String price2;
+    private BigDecimal price;
+    private BigDecimal price2;
     /**
      * 1, 2：表示是为api添加商品，否则是在MP添加商品
      */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOaService.java
Patch:
@@ -165,7 +165,7 @@ List<WxCpDialRecord> getDialRecord(Date startTime, Date endTime, Integer offset,
    * @return 排班表信息
    * @throws WxErrorException the wx error exception
    */
-  WxCpCheckinSchedule getCheckinScheduleList(Date startTime, Date endTime, List<String> userIdList) throws WxErrorException;
+  List<WxCpCheckinSchedule> getCheckinScheduleList(Date startTime, Date endTime, List<String> userIdList) throws WxErrorException;
 
 
 }

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpOaServiceImplTest.java
Patch:
@@ -85,7 +85,7 @@ public void testGetCheckinScheduleData() throws ParseException, WxErrorException
     Date startTime = DateFormatUtils.ISO_8601_EXTENDED_DATE_FORMAT.parse("2021-07-01");
     Date endTime = DateFormatUtils.ISO_8601_EXTENDED_DATE_FORMAT.parse("2021-07-31");
 
-    WxCpCheckinSchedule results = wxService.getOaService()
+    List<WxCpCheckinSchedule> results = wxService.getOaService()
       .getCheckinScheduleList(startTime, endTime, Lists.newArrayList("12003648"));
 
     assertThat(results).isNotNull();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/GsonHelper.java
Patch:
@@ -198,7 +198,7 @@ public static void put(JsonObject jsonObject, Object... keyOrValue) {
         ((List<?>) value).forEach(a -> array.add(a.toString()));
         jsonObject.add(key.toString(), array);
       } else {
-        jsonObject.addProperty(key.toString(), value.toString());
+        jsonObject.add(key.toString(), WxGsonBuilder.create().toJsonTree(value));
       }
     }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpTpXmlMessage.java
Patch:
@@ -205,7 +205,7 @@ public class WxCpTpXmlMessage implements Serializable {
   protected String msgId;
 
   @XStreamAlias("AgentID")
-  protected Integer agentID;
+  protected String agentID;
 
   @XStreamAlias("PicUrl")
   @XStreamConverter(value = XStreamCDataConverter.class)

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxOAuth2Service.java
Patch:
@@ -14,11 +14,11 @@ public interface WxOAuth2Service {
   /**
    * <pre>
    * 构造oauth2授权的url连接.
-   * 详情请见: http://mp.weixin.qq.com/wiki/index.php?title=网页授权获取用户基本信息
+   * 详情请见: https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html
    * </pre>
    *
    * @param redirectUri 用户授权完成后的重定向链接，无需urlencode, 方法内会进行encode
-   * @param scope       scope
+   * @param scope       scope,静默:snsapi_base, 带信息授权:snsapi_userinfo
    * @param state       state
    * @return url
    */

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpGuideTagService.java
Patch:
@@ -7,6 +7,8 @@
 import java.util.List;
 
 /**
+ * 微信导购助手（现在叫对话能力）标签相关接口.
+ *
  * @author <a href="https://www.sacoc.cn">广州跨界-宋心成</a>
  * @date 2021/5/13/013
  */

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpGuideTagServiceImpl.java
Patch:
@@ -106,7 +106,7 @@ public List<String> queryGuideBuyerByTag(String account, String openid, Integer
     body.put(ACCOUNT, account);
     body.put(OPENID, openid);
     body.put("push_count", pushCount);
-    body.put("tag_value", value);
+    body.put("tag_values", value);
     String returnString = this.mpService.post(WxMpApiUrl.Guide.QUERY_GUIDE_BUYER_BY_TAG, body);
     return WxGsonBuilder.create().fromJson(GsonParser.parse(returnString).getAsJsonArray("openid_list"),
       new TypeToken<List<String>>() {

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMpServiceImpl.java
Patch:
@@ -10,7 +10,6 @@
 import me.chanjar.weixin.open.bean.mp.FastRegisterResult;
 
 import java.net.URLEncoder;
-import java.util.HashMap;
 import java.util.Objects;
 
 /**
@@ -22,9 +21,11 @@ public class WxOpenMpServiceImpl extends WxMpServiceImpl implements WxOpenMpServ
   private String appId;
 
   public WxOpenMpServiceImpl(WxOpenComponentService wxOpenComponentService, String appId, WxMpConfigStorage wxMpConfigStorage) {
+//    wxOpenComponentService.oauth2getAccessToken(appId)
     this.wxOpenComponentService = wxOpenComponentService;
     this.appId = appId;
     this.wxMpConfigStorage = wxMpConfigStorage;
+    setOAuth2Service(new WxOpenMpOAuth2ServiceImpl(wxOpenComponentService, getOAuth2Service(), wxMpConfigStorage));
     initHttp();
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpContactServiceImpl.java
Patch:
@@ -22,7 +22,7 @@ public class WxCpTpContactServiceImpl implements WxCpTpContactService {
   @Override
   public WxCpTpContactSearchResp contactSearch(WxCpTpContactSearch wxCpTpContactSearch) throws WxErrorException {
     String responseText =
-      mainService.post(mainService.getWxCpTpConfigStorage().getApiUrl(CONTACT_SEARCH) + "?provider_access_token=" + mainService.getWxCpTpConfigStorage().getCorpSecret(), wxCpTpContactSearch.toJson());
+      mainService.post(mainService.getWxCpTpConfigStorage().getApiUrl(CONTACT_SEARCH) + "?provider_access_token=" + mainService.getWxCpProviderToken(), wxCpTpContactSearch.toJson());
     return WxCpTpContactSearchResp.fromJson(responseText);
   }
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaLiveServiceImpl.java
Patch:
@@ -222,7 +222,8 @@ public boolean removeAssistant(Integer roomId, String username) throws WxErrorEx
   public List<WxMaAssistantResult.Assistant> getAssistantList(Integer roomId) throws WxErrorException {
     Map<String, Object> map = new HashMap<>(2);
     map.put(ROOM_ID, roomId);
-    String responseContent = this.wxMaService.post(Room.GET_ASSISTANT_LIST, WxMaGsonBuilder.create().toJson(map));
+    String responseContent = this.wxMaService.get(Room.GET_ASSISTANT_LIST,
+      Joiner.on("&").withKeyValueSeparator("=").join(map));
     JsonObject jsonObject = GsonParser.parse(responseContent);
     if (jsonObject.get(ERR_CODE).getAsInt() != 0) {
       throw new WxErrorException(WxError.fromJson(responseContent, WxType.MiniApp));

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpDepartmentServiceImpl.java
Patch:
@@ -58,7 +58,7 @@ public List<WxCpTpDepart> list(Long id, String corpId) throws WxErrorException {
     JsonObject tmpJsonObject = GsonParser.parse(responseContent);
     return WxCpGsonBuilder.create()
       .fromJson(tmpJsonObject.get("department"),
-        new TypeToken<List<WxCpDepart>>() {
+        new TypeToken<List<WxCpTpDepart>>() {
         }.getType()
       );
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -274,9 +274,9 @@ public interface WxCpService extends WxService {
   void initHttp();
 
   /**
-   * 获取WxMpConfigStorage 对象
+   * 获取WxCpConfigStorage 对象
    *
-   * @return WxMpConfigStorage wx cp config storage
+   * @return WxCpConfigStorage wx cp config storage
    */
   WxCpConfigStorage getWxCpConfigStorage();
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/WxCpTpService.java
Patch:
@@ -308,9 +308,9 @@ public interface WxCpTpService {
   void initHttp();
 
   /**
-   * 获取WxMpConfigStorage 对象.
+   * 获取WxCpTpConfigStorage 对象.
    *
-   * @return WxMpConfigStorage wx cp tp config storage
+   * @return WxCpTpConfigStorage wx cp tp config storage
    * @deprecated storage应该在service内部使用 ，提供这个接口，容易破坏这个封装
    */
   @Deprecated

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpMessage.java
Patch:
@@ -52,12 +52,12 @@ public class WxCpMessage implements Serializable {
    * enable_id_trans
    * 表示是否开启id转译，0表示否，1表示是，默认0
    */
-  private Boolean enableIdTrans;
+  private Boolean enableIdTrans = false;
   /**
    * enable_duplicate_check
    * 表示是否开启重复消息检查，0表示否，1表示是，默认0
    */
-  private Boolean enableDuplicateCheck;
+  private Boolean enableDuplicateCheck = false;
   /**
    * duplicate_check_interval
    * 表示是否重复消息检查的时间间隔，默认1800s，最大不超过4小时

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/config/impl/WxCpTpRedissonConfigImpl.java
Patch:
@@ -220,7 +220,7 @@ public WxAccessToken getAccessTokenEntity(String authCorpId) {
 
     WxAccessToken accessTokenEntity = new WxAccessToken();
     accessTokenEntity.setAccessToken(accessToken);
-    accessTokenEntity.setExpiresIn(Math.max(Math.toIntExact(expire), 0));
+    accessTokenEntity.setExpiresIn((int)((expire - System.currentTimeMillis()) / 1000 + 200));
     return accessTokenEntity;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImpl.java
Patch:
@@ -440,8 +440,8 @@ public WxCpTpUserDetail getUserDetail3rd(String userTicket) throws WxErrorExcept
   public WxTpLoginInfo getLoginInfo(String authCode) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("auth_code", authCode);
-    jsonObject.addProperty("access_token", configStorage.getProviderToken());
-    String responseText = post(configStorage.getApiUrl(GET_LOGIN_INFO), jsonObject.toString());
+    String access_token = getWxCpProviderToken();
+    String responseText = post(configStorage.getApiUrl(GET_LOGIN_INFO) + "?access_token=" + access_token, jsonObject.toString());
     return WxTpLoginInfo.fromJson(responseText);
   }
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/ApplymentsRequest.java
Patch:
@@ -128,6 +128,7 @@ public class ApplymentsRequest implements Serializable {
    * </pre>
    */
   @SerializedName(value = "id_doc_info")
+  @SpecEncrypt
   private IdDocInfo idDocInfo;
 
   /**
@@ -497,6 +498,7 @@ public static class IdDocInfo implements Serializable {
      * </pre>
      */
     @SerializedName(value = "id_doc_name")
+    @SpecEncrypt
     private String idDocName;
 
     /**
@@ -511,6 +513,7 @@ public static class IdDocInfo implements Serializable {
      * </pre>
      */
     @SerializedName(value = "id_doc_number")
+    @SpecEncrypt
     private String idDocNumber;
 
     /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpGroupRobotServiceImpl.java
Patch:
@@ -76,15 +76,15 @@ public void sendMarkdown(String webhookUrl, String content) throws WxErrorExcept
 
   @Override
   public void sendImage(String webhookUrl, String base64, String md5) throws WxErrorException {
-    this.cpService.postWithoutToken(this.getWebhookUrl(), new WxCpGroupRobotMessage()
+    this.cpService.postWithoutToken(webhookUrl, new WxCpGroupRobotMessage()
       .setMsgType(GroupRobotMsgType.IMAGE)
       .setBase64(base64)
       .setMd5(md5).toJson());
   }
 
   @Override
   public void sendNews(String webhookUrl, List<NewArticle> articleList) throws WxErrorException {
-    this.cpService.postWithoutToken(this.getWebhookUrl(), new WxCpGroupRobotMessage()
+    this.cpService.postWithoutToken(webhookUrl, new WxCpGroupRobotMessage()
       .setMsgType(GroupRobotMsgType.NEWS)
       .setArticles(articleList).toJson());
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpTpXmlMessage.java
Patch:
@@ -121,7 +121,7 @@ public class WxCpTpXmlMessage implements Serializable {
   protected String parentId;
 
   @XStreamAlias("Order")
-  @XStreamConverter(value = XStreamCDataConverter.class)
+  @XStreamConverter(value = IntConverter.class)
   protected Integer order;
 
   @XStreamAlias("TagId")

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/BaseWxCpTpServiceImpl.java
Patch:
@@ -401,7 +401,7 @@ public WxCpTpUserDetail getUserDetail3rd(String userTicket) throws WxErrorExcept
   public WxTpLoginInfo getLoginInfo(String authCode) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("auth_code", authCode);
-    jsonObject.addProperty("access_token", configStorage.getAccessToken(authCode));
+    jsonObject.addProperty("access_token", configStorage.getProviderToken());
     String responseText = post(configStorage.getApiUrl(GET_LOGIN_INFO), jsonObject.toString());
     return WxTpLoginInfo.fromJson(responseText);
   }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/EcommerceServiceImpl.java
Patch:
@@ -190,7 +190,8 @@ public FundBalanceResult subDayEndBalance(String subMchid, String date) throws W
   @Override
   public ProfitSharingResult profitSharing(ProfitSharingRequest request) throws WxPayException {
     String url = String.format("%s/v3/ecommerce/profitsharing/orders", this.payService.getPayBaseUrl());
-    String response = this.payService.postV3(url, GSON.toJson(request));
+    RsaCryptoUtil.encryptFields(request, this.payService.getConfig().getVerifier().getValidCertificate());
+    String response = this.payService.postV3WithWechatpaySerial(url, GSON.toJson(request));
     return GSON.fromJson(response, ProfitSharingResult.class);
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpAgent.java
Patch:
@@ -95,7 +95,7 @@ public class User implements Serializable {
   @Data
   public class Parties {
     @SerializedName("partyid")
-    private List<Integer> partyIds = null;
+    private List<Long> partyIds = null;
   }
 
   @Data

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/BaseWxMaServiceImpl.java
Patch:
@@ -328,12 +328,13 @@ public void setMultiConfigs(Map<String, WxMaConfig> configs, String defaultMinia
   }
 
   @Override
-  public void addConfig(String mpId, WxMaConfig configStorages) {
+  public void addConfig(String miniappId, WxMaConfig configStorages) {
     synchronized (this) {
       if (this.configMap == null) {
         this.setWxMaConfig(configStorages);
       } else {
-        this.configMap.put(mpId, configStorages);
+        WxMaConfigHolder.set(miniappId);
+        this.configMap.put(miniappId, configStorages);
       }
     }
   }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/BaseWxMpServiceImpl.java
Patch:
@@ -439,6 +439,7 @@ public void addConfigStorage(String mpId, WxMpConfigStorage configStorages) {
       if (this.configStorageMap == null) {
         this.setWxMpConfigStorage(configStorages);
       } else {
+        WxMpConfigStorageHolder.set(mpId);
         this.configStorageMap.put(mpId, configStorages);
       }
     }

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/message/WxOpenMaSubmitAuditMessage.java
Patch:
@@ -16,7 +16,8 @@
  */
 @Data
 public class WxOpenMaSubmitAuditMessage implements Serializable {
-
+  private static final long serialVersionUID = 8881103449144288927L;
+  
   /**
    * 提交审核项的一个列表（至少填写1项，至多填写5项）
    */
@@ -27,7 +28,7 @@ public class WxOpenMaSubmitAuditMessage implements Serializable {
    * 预览信息（小程序页面截图和操作录屏）
    */
   @SerializedName("preview_info")
-  private List<WxOpenMaPreviewInfo> previewInfo;
+  private WxOpenMaPreviewInfo previewInfo;
 
   /**
    * 小程序版本说明和功能解释

File: spring-boot-starters/wx-java-open-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/open/config/WxOpenStorageAutoConfiguration.java
Patch:
@@ -133,6 +133,7 @@ private RedissonClient getRedissonClient() {
     Config config = new Config();
     config.useSingleServer()
       .setAddress("redis://" + redis.getHost() + ":" + redis.getPort())
+      .setDatabase(redis.getDatabase())
       .setPassword(redis.getPassword());
     config.setTransportMode(TransportMode.NIO);
     return Redisson.create(config);

File: weixin-graal/src/main/java/com/github/binarywang/wx/graal/GraalProcessor.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.graal;
+package com.github.binarywang.wx.graal;
 
 import lombok.Data;
 
@@ -26,12 +26,12 @@
  * @author outersky
  */
 @SupportedAnnotationTypes("lombok.Data")
-@SupportedSourceVersion(SourceVersion.RELEASE_7)
+@SupportedSourceVersion(SourceVersion.RELEASE_8)
 public class GraalProcessor extends AbstractProcessor {
   private static final String REFLECTION_CONFIG_JSON = "reflection-config.json";
   private static final String NATIVE_IMAGE_PROPERTIES = "native-image.properties";
 
-  private SortedSet<String> classSet = new TreeSet<>();
+  private final SortedSet<String> classSet = new TreeSet<>();
   private String shortestPackageName = null;
 
   @Override

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/menu/WxMenuRule.java
Patch:
@@ -24,6 +24,7 @@ public class WxMenuRule implements Serializable {
   private String country;
   private String province;
   private String city;
+  @SerializedName("client_platform_type")
   private String clientPlatformType;
   private String language;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxImgProcService.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.common.api;
+package me.chanjar.weixin.common.service;
 
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcAiCropResult;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/service/WxOcrService.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.common.api;
+package me.chanjar.weixin.common.service;
 
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.bean.ocr.WxOcrBankCardResult;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/BeanUtils.java
Patch:
@@ -58,7 +58,7 @@ public static void checkRequiredFields(Object bean) throws WxErrorException {
     if (!requiredFields.isEmpty()) {
       String msg = String.format("必填字段【%s】必须提供值！", requiredFields);
       log.debug(msg);
-      throw new WxErrorException(WxError.builder().errorMsg(msg).build());
+      throw new WxErrorException(msg);
     }
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/HttpResponseProxy.java
Patch:
@@ -58,7 +58,7 @@ public String getFileName() throws WxErrorException {
   private String getFileName(CloseableHttpResponse response) throws WxErrorException {
     Header[] contentDispositionHeader = response.getHeaders("Content-disposition");
     if (contentDispositionHeader == null || contentDispositionHeader.length == 0) {
-      throw new WxErrorException(WxError.builder().errorMsg("无法获取到文件名").errorCode(99999).build());
+      throw new WxErrorException("无法获取到文件名，Content-disposition为空");
     }
 
     return this.extractFileNameFromContentString(contentDispositionHeader[0].getValue());
@@ -76,15 +76,15 @@ private String getFileName(Response response) throws WxErrorException {
 
   private String extractFileNameFromContentString(String content) throws WxErrorException {
     if (content == null || content.length() == 0) {
-      throw new WxErrorException(WxError.builder().errorMsg("无法获取到文件名").errorCode(99999).build());
+      throw new WxErrorException("无法获取到文件名，content为空");
     }
 
     Matcher m = PATTERN.matcher(content);
     if (m.matches()) {
       return m.group(1);
     }
 
-    throw new WxErrorException(WxError.builder().errorMsg("无法获取到文件名").errorCode(99999).build());
+    throw new WxErrorException("无法获取到文件名，header信息有问题");
   }
 
 }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/SimpleGetRequestExecutor.java
Patch:
@@ -1,14 +1,14 @@
 package me.chanjar.weixin.common.util.http;
 
-import java.io.IOException;
-
 import me.chanjar.weixin.common.enums.WxType;
 import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.apache.ApacheSimpleGetRequestExecutor;
 import me.chanjar.weixin.common.util.http.jodd.JoddHttpSimpleGetRequestExecutor;
 import me.chanjar.weixin.common.util.http.okhttp.OkHttpSimpleGetRequestExecutor;
 
+import java.io.IOException;
+
 /**
  * 简单的GET请求执行器.
  * 请求的参数是String, 返回的结果也是String
@@ -27,7 +27,7 @@ public void execute(String uri, String data, ResponseHandler<String> handler, Wx
     handler.handle(this.execute(uri, data, wxType));
   }
 
-  public static RequestExecutor<String, String> create(RequestHttp requestHttp) {
+  public static RequestExecutor<String, String> create(RequestHttp<?, ?> requestHttp) {
     switch (requestHttp.getRequestType()) {
       case APACHE_HTTP:
         return new ApacheSimpleGetRequestExecutor(requestHttp);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/SimplePostRequestExecutor.java
Patch:
@@ -44,7 +44,7 @@ public static RequestExecutor<String, String> create(RequestHttp requestHttp) {
   @NotNull
   public String handleResponse(WxType wxType, String responseContent) throws WxErrorException {
     if (responseContent.isEmpty()) {
-      throw new WxErrorException(WxError.builder().errorCode(9999).errorMsg("无响应内容").build());
+      throw new WxErrorException("无响应内容");
     }
 
     if (responseContent.startsWith("<xml>")) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaDownloadRequestExecutor.java
Patch:
@@ -19,6 +19,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
 
 /**
  * .
@@ -47,7 +48,7 @@ public File execute(String uri, String queryParam, WxType wxType) throws WxError
     request.withConnectionProvider(requestHttp.getRequestHttpClient());
 
     HttpResponse response = request.send();
-    response.charset(StringPool.UTF_8);
+    response.charset(StandardCharsets.UTF_8.name());
 
     String contentType = response.header("Content-Type");
     if (contentType != null && contentType.startsWith("application/json")) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaUploadRequestExecutor.java
Patch:
@@ -14,6 +14,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.nio.charset.StandardCharsets;
 
 /**
  * .
@@ -35,7 +36,7 @@ public WxMediaUploadResult execute(String uri, File file, WxType wxType) throws
     request.withConnectionProvider(requestHttp.getRequestHttpClient());
     request.form("media", file);
     HttpResponse response = request.send();
-    response.charset(StringPool.UTF_8);
+    response.charset(StandardCharsets.UTF_8.name());
 
     String responseContent = response.bodyText();
     WxError error = WxError.fromJson(responseContent, wxType);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimpleGetRequestExecutor.java
Patch:
@@ -11,6 +11,7 @@
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 
 import java.io.IOException;
+import java.nio.charset.StandardCharsets;
 
 /**
  * .
@@ -38,7 +39,7 @@ public String execute(String uri, String queryParam, WxType wxType) throws WxErr
     }
     request.withConnectionProvider(requestHttp.getRequestHttpClient());
     HttpResponse response = request.send();
-    response.charset(StringPool.UTF_8);
+    response.charset(StandardCharsets.UTF_8.name());
 
     return handleResponse(wxType, response.bodyText());
   }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimplePostRequestExecutor.java
Patch:
@@ -11,6 +11,7 @@
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 
 import java.io.IOException;
+import java.nio.charset.StandardCharsets;
 
 /**
  * .
@@ -37,7 +38,7 @@ public String execute(String uri, String postEntity, WxType wxType) throws WxErr
       request.bodyText(postEntity);
     }
     HttpResponse response = request.send();
-    response.charset(StringPool.UTF_8);
+    response.charset(StandardCharsets.UTF_8.name());
 
     return this.handleResponse(wxType, response.bodyText());
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpChatService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import me.chanjar.weixin.common.error.WxErrorException;
-import me.chanjar.weixin.cp.bean.WxCpAppChatMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpAppChatMessage;
 import me.chanjar.weixin.cp.bean.WxCpChat;
 
 import java.util.List;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpChatServiceImpl.java
Patch:
@@ -6,7 +6,7 @@
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 import me.chanjar.weixin.cp.api.WxCpChatService;
 import me.chanjar.weixin.cp.api.WxCpService;
-import me.chanjar.weixin.cp.bean.WxCpAppChatMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpAppChatMessage;
 import me.chanjar.weixin.cp.bean.WxCpChat;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 import org.apache.commons.lang3.StringUtils;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpServiceApacheHttpClientImpl.java
Patch:
@@ -5,6 +5,7 @@
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.error.WxErrorException;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilder;
@@ -72,7 +73,7 @@ public String getAccessToken(boolean forceRefresh) throws WxErrorException {
         WxAccessToken accessToken = WxAccessToken.fromJson(resultContent);
         this.configStorage.updateAccessToken(accessToken.getAccessToken(), accessToken.getExpiresIn());
       } catch (IOException e) {
-        throw new RuntimeException(e);
+        throw new WxRuntimeException(e);
       }
     }
     return this.configStorage.getAccessToken();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpServiceOnTpImpl.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.RequiredArgsConstructor;
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.error.WxErrorException;
-import me.chanjar.weixin.cp.api.WxCpTpService;
+import me.chanjar.weixin.cp.tp.service.WxCpTpService;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpUserServiceImpl.java
Patch:
@@ -10,7 +10,7 @@
 import me.chanjar.weixin.cp.api.WxCpUserService;
 import me.chanjar.weixin.cp.bean.WxCpInviteResult;
 import me.chanjar.weixin.cp.bean.WxCpUser;
-import me.chanjar.weixin.cp.bean.external.WxCpUserExternalContactInfo;
+import me.chanjar.weixin.cp.bean.external.contact.WxCpExternalContactInfo;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
 import java.util.List;
@@ -193,9 +193,9 @@ public String getUserId(String mobile) throws WxErrorException {
   }
 
   @Override
-  public WxCpUserExternalContactInfo getExternalContact(String userId) throws WxErrorException {
+  public WxCpExternalContactInfo getExternalContact(String userId) throws WxErrorException {
     String url = this.mainService.getWxCpConfigStorage().getApiUrl(GET_EXTERNAL_CONTACT + userId);
     String responseContent = this.mainService.get(url, null);
-    return WxCpUserExternalContactInfo.fromJson(responseContent);
+    return WxCpExternalContactInfo.fromJson(responseContent);
   }
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpAppChatMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.google.gson.JsonArray;
 import com.google.gson.JsonObject;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpGroupRobotMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.google.gson.JsonArray;
 import com.google.gson.JsonObject;
@@ -10,7 +10,7 @@
 
 import java.util.List;
 
-import static me.chanjar.weixin.common.api.WxConsts.GroupRobotMsgType.*;
+import static me.chanjar.weixin.cp.constant.WxCpConsts.GroupRobotMsgType.*;
 
 /**
  * 微信群机器人消息

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.google.gson.JsonArray;
 import com.google.gson.JsonObject;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpMessageSendResult.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import java.io.Serializable;
 import java.util.Collections;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutImageMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import java.io.Serializable;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutNewsMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutTextMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutVideoMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutVoiceMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/BaseBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 import org.apache.commons.lang3.StringUtils;
 
 public class BaseBuilder<T> {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/FileBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * 获得消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/ImageBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * 获得消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/MarkdownMsgBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/MiniProgramNoticeMsgBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 import java.util.Map;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/MpnewsBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 import me.chanjar.weixin.cp.bean.article.MpnewsArticle;
 
 import java.util.ArrayList;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/NewsBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 import me.chanjar.weixin.cp.bean.article.NewArticle;
 
 import java.util.ArrayList;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TaskCardBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 import me.chanjar.weixin.cp.bean.taskcard.TaskCardButton;
 
 import java.util.List;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TextBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * 文本消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TextCardBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/VideoBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * 视频消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/VoiceBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.messagebuilder;
 
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 
 /**
  * 语音消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/applydata/ContentValue.java
Patch:
@@ -18,10 +18,10 @@ public class ContentValue implements Serializable {
   private String text;
 
   @SerializedName("new_number")
-  private Double newNumber;
+  private String newNumber;
 
   @SerializedName("new_money")
-  private Double newMoney;
+  private String newMoney;
 
   private ContentValue.Date date;
 
@@ -43,7 +43,7 @@ public static class Date implements Serializable {
     private String type;
 
     @SerializedName("s_timestamp")
-    private Double timestamp;
+    private String timestamp;
   }
 
   @Data

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/BaseBuilder.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
 
 public abstract class BaseBuilder<BuilderType, ValueType> {
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/ImageBuilder.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutImageMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutImageMessage;
 
 /**
  * 图片消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutNewsMessage;
-import me.chanjar.weixin.cp.bean.WxCpXmlOutNewsMessage.Item;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutNewsMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutNewsMessage.Item;
 
 import java.util.ArrayList;
 import java.util.Collections;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/TextBuilder.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutTextMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutTextMessage;
 
 /**
  * 文本消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VideoBuilder.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutVideoMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutVideoMessage;
 
 /**
  * 视频消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VoiceBuilder.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlOutVoiceMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutVoiceMessage;
 
 /**
  * 语音消息builder

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/config/impl/WxCpRedissonConfigImpl.java
Patch:
@@ -41,7 +41,7 @@ public WxCpRedissonConfigImpl(@NonNull RedissonClient redissonClient) {
     this(redissonClient, null);
   }
 
-  private WxCpRedissonConfigImpl(@NonNull WxRedisOps redisOps, String keyPrefix) {
+  public WxCpRedissonConfigImpl(@NonNull WxRedisOps redisOps, String keyPrefix) {
     this.redisOps = redisOps;
     this.keyPrefix = keyPrefix;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpServiceApacheHttpClientImpl.java
Patch:
@@ -1,10 +1,11 @@
-package me.chanjar.weixin.cp.api.impl;
+package me.chanjar.weixin.cp.tp.service.impl;
 
 
 import com.google.gson.JsonObject;
 import me.chanjar.weixin.common.enums.WxType;
 import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.error.WxErrorException;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilder;
@@ -81,7 +82,7 @@ public String getSuiteAccessToken(boolean forceRefresh) throws WxErrorException
         Integer expiresIn = jsonObject.get("expires_in").getAsInt();
         this.configStorage.updateSuiteAccessToken(suiteAccussToken, expiresIn);
       } catch (IOException e) {
-        throw new RuntimeException(e);
+        throw new WxRuntimeException(e);
       }
     }
     return this.configStorage.getSuiteAccessToken();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/service/impl/WxCpTpServiceImpl.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.cp.api.impl;
+package me.chanjar.weixin.cp.tp.service.impl;
 
 /**
  * <pre>

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpChatServiceImplTest.java
Patch:
@@ -11,7 +11,7 @@
 import me.chanjar.weixin.cp.constant.WxCpConsts.AppChatMsgType;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.WxCpService;
-import me.chanjar.weixin.cp.bean.WxCpAppChatMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpAppChatMessage;
 import me.chanjar.weixin.cp.bean.WxCpChat;
 import me.chanjar.weixin.cp.bean.article.MpnewsArticle;
 import me.chanjar.weixin.cp.bean.article.NewArticle;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpTaskCardServiceImplTest.java
Patch:
@@ -4,8 +4,8 @@
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.WxCpService;
-import me.chanjar.weixin.cp.bean.WxCpMessage;
-import me.chanjar.weixin.cp.bean.WxCpMessageSendResult;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpMessageSendResult;
 import me.chanjar.weixin.cp.bean.taskcard.TaskCardButton;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;
@@ -49,7 +49,7 @@ public void testSendTaskCard() throws WxErrorException {
       .buttons(Arrays.asList(btn1, btn2))
       .build();
 
-    WxCpMessageSendResult messageSendResult = this.wxCpService.messageSend(message);
+    WxCpMessageSendResult messageSendResult = this.wxCpService.getMessageService().send(message);
     assertNotNull(messageSendResult);
     System.out.println(messageSendResult);
     System.out.println(messageSendResult.getInvalidPartyList());

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpMessageTest.java
Patch:
@@ -1,7 +1,8 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import me.chanjar.weixin.cp.bean.article.MpnewsArticle;
 import me.chanjar.weixin.cp.bean.article.NewArticle;
+import me.chanjar.weixin.cp.bean.message.WxCpMessage;
 import me.chanjar.weixin.cp.bean.taskcard.TaskCardButton;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlMessageTest.java
Patch:
@@ -1,6 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
 import me.chanjar.weixin.common.api.WxConsts;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlMessage;
 import me.chanjar.weixin.cp.constant.WxCpConsts;
 import me.chanjar.weixin.cp.util.xml.XStreamTransformer;
 import org.testng.annotations.Test;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutImageMessageTest.java
Patch:
@@ -1,5 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutImageMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutNewsMessageTest.java
Patch:
@@ -1,5 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutNewsMessage;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutTextMessageTest.java
Patch:
@@ -1,5 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutTextMessage;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutVideoMessageTest.java
Patch:
@@ -1,5 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutVideoMessage;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/message/WxCpXmlOutVoiceMessageTest.java
Patch:
@@ -1,5 +1,7 @@
-package me.chanjar.weixin.cp.bean;
+package me.chanjar.weixin.cp.bean.message;
 
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutVoiceMessage;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpEndpointServlet.java
Patch:
@@ -3,8 +3,8 @@
 import me.chanjar.weixin.cp.config.WxCpConfigStorage;
 import me.chanjar.weixin.cp.message.WxCpMessageRouter;
 import me.chanjar.weixin.cp.api.WxCpService;
-import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
-import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlMessage;
+import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
 import me.chanjar.weixin.cp.util.crypto.WxCpCryptUtil;
 import org.apache.commons.lang3.StringUtils;
 
@@ -61,7 +61,6 @@ protected void service(HttpServletRequest request, HttpServletResponse response)
       response.getWriter().write(outMessage.toEncryptedXml(this.wxCpConfigStorage));
     }
 
-    return;
   }
 
 }

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaService.java
Patch:
@@ -2,8 +2,8 @@
 
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
-import me.chanjar.weixin.common.api.WxImgProcService;
-import me.chanjar.weixin.common.api.WxOcrService;
+import me.chanjar.weixin.common.service.WxImgProcService;
+import me.chanjar.weixin.common.service.WxOcrService;
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.service.WxService;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaAnalysisServiceImpl.java
Patch:
@@ -8,7 +8,7 @@
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitDistribution;
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitPage;
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitTrend;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.reflect.TypeToken;
 import lombok.AllArgsConstructor;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaCloudServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.binarywang.wx.miniapp.bean.cloud.*;
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
 import cn.binarywang.wx.miniapp.util.JoinerUtils;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Lists;
 import com.google.gson.JsonArray;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaCodeServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeCommitRequest;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeSubmitAuditRequest;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeVersionDistribution;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.reflect.TypeToken;
 import me.chanjar.weixin.common.error.WxError;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaExpressServiceImpl.java
Patch:
@@ -8,7 +8,7 @@
 import cn.binarywang.wx.miniapp.bean.express.WxMaExpressPrinter;
 import cn.binarywang.wx.miniapp.bean.express.request.*;
 import cn.binarywang.wx.miniapp.bean.express.result.WxMaExpressOrderInfoResult;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.AllArgsConstructor;
 import me.chanjar.weixin.common.error.WxErrorException;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaImgProcServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import lombok.RequiredArgsConstructor;
-import me.chanjar.weixin.common.api.WxImgProcService;
+import me.chanjar.weixin.common.service.WxImgProcService;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcAiCropResult;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcQrCodeResult;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcSuperResolutionResult;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMsgServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.*;
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import lombok.AllArgsConstructor;
 import me.chanjar.weixin.common.enums.WxType;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaPluginServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaPluginService;
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaPluginListResult;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.common.collect.ImmutableMap;
 import lombok.AllArgsConstructor;
 import me.chanjar.weixin.common.error.WxErrorException;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSettingServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.api.WxMaSettingService;
 import cn.binarywang.wx.miniapp.bean.WxMaDomainAction;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.AllArgsConstructor;
 import me.chanjar.weixin.common.error.WxErrorException;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSubscribeServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.api.WxMaSubscribeService;
 import cn.binarywang.wx.miniapp.bean.template.WxMaPubTemplateTitleListResult;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.common.base.Joiner;
 import com.google.common.collect.ImmutableMap;
 import com.google.gson.reflect.TypeToken;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/AbstractWxMaQrcodeWrapper.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 
 /**
  * 微信二维码（小程序码）包装器.

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaDomainAction.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaJscode2SessionResult.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
 import lombok.EqualsAndHashCode;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaKefuMessage.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.builder.LinkMessageBuilder;
 import cn.binarywang.wx.miniapp.builder.MaPageMessageBuilder;
 import cn.binarywang.wx.miniapp.builder.TextMessageBuilder;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaMediaAsyncCheckResult.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaPhoneNumberInfo.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.Data;
 
 import java.io.Serializable;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaQrcode.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaRunStepInfo.java
Patch:
@@ -3,7 +3,7 @@
 import java.io.Serializable;
 import java.util.List;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.reflect.TypeToken;
 import lombok.Data;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaShareInfo.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.Data;
 
 import java.io.Serializable;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaSubscribeMessage.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.bean;
 
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.*;
 
 import java.io.Serializable;
@@ -65,12 +65,12 @@ public class WxMaSubscribeMessage implements Serializable {
   /**
    * 跳转小程序类型：developer为开发版；trial为体验版；formal为正式版；默认为正式版
    */
-  private String miniprogramState = WxMaConstants.MiniprogramState.FORMAL;
+  private String miniprogramState = WxMaConstants.MiniProgramState.FORMAL;
 
   /**
    * 进入小程序查看的语言类型，支持zh_CN(简体中文)、en_US(英文)、zh_HK(繁体中文)、zh_TW(繁体中文)，默认为zh_CN
    */
-  private String lang = WxMaConstants.MiniprogramLang.ZH_CN;
+  private String lang = WxMaConstants.MiniProgramLang.ZH_CN;
 
   public WxMaSubscribeMessage addData(Data datum) {
     if (this.data == null) {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaUserInfo.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.Data;
 
 import java.io.Serializable;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxaCode.java
Patch:
@@ -2,7 +2,7 @@
 
 import java.io.Serializable;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxaCodeUnlimit.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
 import lombok.EqualsAndHashCode;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/analysis/WxMaRetainInfo.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.analysis;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/analysis/WxMaUserPortrait.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.analysis;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.Data;
 
 import java.io.Serializable;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/analysis/WxMaVisitDistribution.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.analysis;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/code/WxMaCodeAuditStatus.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.code;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/code/WxMaCodeCommitRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.code;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/code/WxMaCodeSubmitAuditRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.code;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/code/WxMaCodeVersionDistribution.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.code;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/WxMaExpressAccount.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.annotations.SerializedName;
 import com.google.gson.reflect.TypeToken;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/WxMaExpressDelivery.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.annotations.SerializedName;
 import com.google.gson.reflect.TypeToken;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/WxMaExpressPath.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Data;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/WxMaExpressPrinter.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Data;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/request/WxMaExpressAddOrderRequest.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import cn.binarywang.wx.miniapp.bean.express.*;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/request/WxMaExpressBindAccountRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express.request;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/request/WxMaExpressGetOrderRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express.request;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/request/WxMaExpressPrinterUpdateRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express.request;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/request/WxMaExpressTestUpdateOrderRequest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express.request;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/result/WxMaExpressOrderInfoResult.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.bean.express.result;
 
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonObject;
 import com.google.gson.annotations.SerializedName;
 import com.google.gson.reflect.TypeToken;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/config/impl/WxMaDefaultConfigImpl.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.config.impl;
 
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/executor/QrcodeBytesRequestExecutor.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util;
+package cn.binarywang.wx.miniapp.executor;
 
 import cn.binarywang.wx.miniapp.bean.AbstractWxMaQrcodeWrapper;
 import me.chanjar.weixin.common.enums.WxType;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/executor/QrcodeRequestExecutor.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util;
+package cn.binarywang.wx.miniapp.executor;
 
 import cn.binarywang.wx.miniapp.bean.AbstractWxMaQrcodeWrapper;
 import me.chanjar.weixin.common.enums.WxType;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/WxMaGsonBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json;
 
 import cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage;
 import cn.binarywang.wx.miniapp.bean.WxMaUniformMessage;
@@ -7,6 +7,7 @@
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitDistribution;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeCommitRequest;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeVersionDistribution;
+import cn.binarywang.wx.miniapp.json.adaptor.*;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaCodeCommitRequestGsonAdapter.java
Patch:
@@ -1,6 +1,7 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeCommitRequest;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaCodeVersionDistributionGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeVersionDistribution;
 import com.google.gson.JsonArray;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaRetainInfoGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaRetainInfo;
 import com.google.gson.JsonArray;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaSubscribeMessageGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage;
 import com.google.gson.JsonElement;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaUniformMessageGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import java.lang.reflect.Type;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaUserPortraitGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaUserPortrait;
 import com.google.gson.JsonArray;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/json/adaptor/WxMaVisitDistributionGsonAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json.adaptor;
 
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitDistribution;
 import com.google.gson.JsonArray;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/crypt/WxMaCryptUtils.java
Patch:
@@ -12,6 +12,7 @@
 
 import com.google.common.base.CharMatcher;
 import com.google.common.io.BaseEncoding;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import org.apache.commons.codec.binary.Base64;
 import org.bouncycastle.jce.provider.BouncyCastleProvider;
 
@@ -47,7 +48,7 @@ public static String decrypt(String sessionKey, String encryptedData, String ivS
 
       return new String(PKCS7Encoder.decode(cipher.doFinal(Base64.decodeBase64(encryptedData))), UTF_8);
     } catch (Exception e) {
-      throw new RuntimeException("AES解密失败！", e);
+      throw new WxRuntimeException("AES解密失败！", e);
     }
   }
 
@@ -78,7 +79,7 @@ public static String decryptAnotherWay(String sessionKey, String encryptedData,
       cipher.init(Cipher.DECRYPT_MODE, key, new IvParameterSpec(Base64.decodeBase64(ivStr.getBytes(UTF_8))));
       return new String(cipher.doFinal(Base64.decodeBase64(encryptedData.getBytes(UTF_8))), UTF_8);
     } catch (Exception e) {
-      throw new RuntimeException("AES解密失败！", e);
+      throw new WxRuntimeException("AES解密失败！", e);
     }
   }
 

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaExpressServiceImplTest.java
Patch:
@@ -7,7 +7,7 @@
 import cn.binarywang.wx.miniapp.bean.express.result.WxMaExpressOrderInfoResult;
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
 import cn.binarywang.wx.miniapp.test.ApiTestModule;
-import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
+import cn.binarywang.wx.miniapp.json.WxMaGsonBuilder;
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.error.WxErrorException;
 import org.apache.commons.lang3.StringUtils;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/json/WxMaUniformMessageGsonAdapterTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.binarywang.wx.miniapp.util.json;
+package cn.binarywang.wx.miniapp.json;
 
 import cn.binarywang.wx.miniapp.bean.WxMaTemplateData;
 import cn.binarywang.wx.miniapp.bean.WxMaUniformMessage;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/test/ApiTestModule.java
Patch:
@@ -4,6 +4,7 @@
 import java.io.InputStream;
 import java.util.concurrent.locks.ReentrantLock;
 
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -23,7 +24,7 @@ public class ApiTestModule implements Module {
   public void configure(Binder binder) {
     try (InputStream inputStream = ClassLoader.getSystemResourceAsStream(TEST_CONFIG_XML)) {
       if (inputStream == null) {
-        throw new RuntimeException("测试配置文件【" + TEST_CONFIG_XML + "】未找到，请参照test-config-sample.xml文件生成");
+        throw new WxRuntimeException("测试配置文件【" + TEST_CONFIG_XML + "】未找到，请参照test-config-sample.xml文件生成");
       }
       TestConfig config = TestConfig.fromXml(inputStream);
       config.setAccessTokenLock(new ReentrantLock());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpImgProcServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.RequiredArgsConstructor;
 import me.chanjar.weixin.common.error.WxErrorException;
-import me.chanjar.weixin.common.api.WxImgProcService;
+import me.chanjar.weixin.common.service.WxImgProcService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcAiCropResult;
 import me.chanjar.weixin.common.bean.imgproc.WxImgProcQrCodeResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpKefuServiceImpl.java
Patch:
@@ -115,11 +115,11 @@ public WxMpKfSessionWaitCaseList kfSessionGetWaitCase() throws WxErrorException
   @Override
   public WxMpKfMsgList kfMsgList(Date startTime, Date endTime, Long msgId, Integer number) throws WxErrorException {
     if (number > 10000) {
-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg("非法参数请求，每次最多查询10000条记录！").build());
+      throw new WxErrorException("非法参数请求，每次最多查询10000条记录！");
     }
 
     if (startTime.after(endTime)) {
-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg("起始时间不能晚于结束时间！").build());
+      throw new WxErrorException("起始时间不能晚于结束时间！");
     }
 
     JsonObject param = new JsonObject();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceHttpClientImpl.java
Patch:
@@ -1,6 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import me.chanjar.weixin.common.error.WxErrorException;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilder;
@@ -92,10 +93,10 @@ public String getAccessToken(boolean forceRefresh) throws WxErrorException {
           httpGet.releaseConnection();
         }
       } catch (IOException e) {
-        throw new RuntimeException(e);
+        throw new WxRuntimeException(e);
       }
     } catch (InterruptedException e) {
-      throw new RuntimeException(e);
+      throw new WxRuntimeException(e);
     } finally {
       if (locked) {
         lock.unlock();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceJoddHttpImpl.java
Patch:
@@ -5,6 +5,7 @@
 import jodd.http.ProxyInfo;
 import jodd.http.net.SocketHttpConnectionProvider;
 import me.chanjar.weixin.common.error.WxErrorException;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
 
@@ -77,7 +78,7 @@ public String getAccessToken(boolean forceRefresh) throws WxErrorException {
 
       return this.extractAccessToken(request.send().bodyText());
     } catch (InterruptedException e) {
-      throw new RuntimeException(e);
+      throw new WxRuntimeException(e);
     } finally {
       if (locked) {
         lock.unlock();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceOkHttpImpl.java
Patch:
@@ -1,6 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import me.chanjar.weixin.common.error.WxErrorException;
+import me.chanjar.weixin.common.error.WxRuntimeException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.common.util.http.okhttp.OkHttpProxyInfo;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
@@ -59,9 +60,9 @@ public String getAccessToken(boolean forceRefresh) throws WxErrorException {
       Response response = getRequestHttpClient().newCall(request).execute();
       return this.extractAccessToken(Objects.requireNonNull(response.body()).string());
     } catch (IOException e) {
-      throw new RuntimeException(e);
+      throw new WxRuntimeException(e);
     } catch (InterruptedException e) {
-      throw new RuntimeException(e);
+      throw new WxRuntimeException(e);
     } finally {
       if (locked) {
         lock.unlock();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/card/BaseInfoUpdate.java
Patch:
@@ -14,6 +14,7 @@
  */
 @Data
 public class BaseInfoUpdate implements Serializable {
+  private static final long serialVersionUID = -7810188893073599733L;
 
   /**
    * 需要审核：卡券名,字数上限为9个汉字 (建议涵盖卡券属性、服务及金额).

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/card/WxMpCardCodeCheckcodeResult.java
Patch:
@@ -2,16 +2,14 @@
 
 import com.google.gson.annotations.SerializedName;
 import lombok.Data;
-import me.chanjar.weixin.mp.bean.result.WxMpResult;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
 import java.io.Serializable;
 import java.util.List;
 
 
 @Data
-public class WxMpCardCodeCheckcodeResult extends WxMpResult implements Serializable {
-
+public class WxMpCardCodeCheckcodeResult implements Serializable {
   private static final long serialVersionUID = -5128692403997016750L;
 
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/live/WxMaLiveRoomInfo.java
Patch:
@@ -86,7 +86,7 @@ public class WxMaLiveRoomInfo implements Serializable {
   /**
    * 是否关闭分享 【0：开启，1：关闭】默认开启分享（直播开始后不允许修改）
    **/
-  private Integer loseShare;
+  private Integer closeShare;
   /**
    * closeKf	Number	否	是否关闭客服 【0：开启，1：关闭】 默认关闭客服
    **/

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/config/WxPayConfig.java
Patch:
@@ -6,6 +6,7 @@
 import com.github.binarywang.wxpay.v3.util.PemUtils;
 import jodd.util.ResourcesUtil;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import lombok.SneakyThrows;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.RegExUtils;
@@ -28,6 +29,7 @@
  * @author Binary Wang (https://github.com/binarywang)
  */
 @Data
+@EqualsAndHashCode(exclude = "verifier")
 public class WxPayConfig {
   private static final String DEFAULT_PAY_BASE_URL = "https://api.mch.weixin.qq.com";
   private static final String PROBLEM_MSG = "证书文件【%s】有问题，请核实！";

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/payscore/PostPayment.java
Patch:
@@ -26,7 +26,7 @@ public class PostPayment implements Serializable {
   @SerializedName("name")
   private String name;
   @SerializedName("amount")
-  private int amount;
+  private Integer amount;
   @SerializedName("description")
   private String description;
   @SerializedName("count")

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/EcommerceServiceImpl.java
Patch:
@@ -226,7 +226,7 @@ public RefundQueryResult queryRefundByRefundId(String subMchid, String refundId)
 
   @Override
   public RefundQueryResult queryRefundByOutRefundNo(String subMchid, String outRefundNo) throws WxPayException {
-    String url = String.format("%s/v3/ecommerce/applyments/out-request-no/%s?sub_mchid=%s", this.payService.getPayBaseUrl(), outRefundNo, subMchid);
+    String url = String.format("%s/v3/ecommerce/refunds/out-refund-no/%s?sub_mchid=%s", this.payService.getPayBaseUrl(), outRefundNo, subMchid);
     String response = this.payService.getV3(URI.create(url));
     return GSON.fromJson(response, RefundQueryResult.class);
   }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/menu/WxMenuRule.java
Patch:
@@ -24,6 +24,7 @@ public class WxMenuRule implements Serializable {
   private String country;
   private String province;
   private String city;
+  @SerializedName("client_platform_type")
   private String clientPlatformType;
   private String language;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/message/WxCpTpMessageHandler.java
Patch:
@@ -2,6 +2,7 @@
 
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
+import me.chanjar.weixin.cp.bean.message.WxCpTpXmlMessage;
 import me.chanjar.weixin.cp.bean.message.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.message.WxCpXmlOutMessage;
 import me.chanjar.weixin.cp.tp.service.WxCpTpService;
@@ -25,7 +26,7 @@ public interface WxCpTpMessageHandler {
    * @return xml格式的消息 ，如果在异步规则里处理的话，可以返回null
    * @throws WxErrorException the wx error exception
    */
-  WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage,
+  WxCpXmlOutMessage handle(WxCpTpXmlMessage wxMessage,
                            Map<String, Object> context,
                            WxCpTpService wxCpService,
                            WxSessionManager sessionManager) throws WxErrorException;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/tp/message/WxCpTpMessageInterceptor.java
Patch:
@@ -2,6 +2,7 @@
 
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
+import me.chanjar.weixin.cp.bean.message.WxCpTpXmlMessage;
 import me.chanjar.weixin.cp.bean.message.WxCpXmlMessage;
 import me.chanjar.weixin.cp.tp.service.WxCpTpService;
 
@@ -24,7 +25,7 @@ public interface WxCpTpMessageInterceptor {
    * @return true代表OK ，false代表不OK
    * @throws WxErrorException the wx error exception
    */
-  boolean intercept(WxCpXmlMessage wxMessage,
+  boolean intercept(WxCpTpXmlMessage wxMessage,
                     Map<String, Object> context,
                     WxCpTpService wxCpService,
                     WxSessionManager sessionManager) throws WxErrorException;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/RefundsRequest.java
Patch:
@@ -84,16 +84,16 @@ public class RefundsRequest implements Serializable {
   /**
    * <pre>
    * 字段名：商户订单号
-   * 变量名：out_order_no
+   * 变量名：out_trade_no
    * 是否必填：与transaction_id二选一
    * 类型：string（64）
    * 描述：
    *   原支付交易对应的商户订单号。
    *   示例值：P20150806125346
    * </pre>
    */
-  @SerializedName(value = "out_order_no")
-  private String outOrderNo;
+  @SerializedName(value = "out_trade_no")
+  private String outTradeNo;
 
   /**
    * <pre>

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/SpWithdrawRequest.java
Patch:
@@ -14,7 +14,7 @@
  */
 @Data
 @NoArgsConstructor
-public class MerchantWithdrawRequest implements Serializable {
+public class SpWithdrawRequest implements Serializable {
   /**
    * <pre>
    * 字段名：商户提现单号

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/SpWithdrawResult.java
Patch:
@@ -14,7 +14,7 @@
  */
 @Data
 @NoArgsConstructor
-public class MerchantWithdrawResult implements Serializable {
+public class SpWithdrawResult implements Serializable {
 
   /**
    * <pre>

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/SubWithdrawRequest.java
Patch:
@@ -14,7 +14,7 @@
  */
 @Data
 @NoArgsConstructor
-public class EcommerceWithdrawRequest implements Serializable {
+public class SubWithdrawRequest implements Serializable {
 
   /**
    * <pre>

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/SubWithdrawResult.java
Patch:
@@ -14,7 +14,7 @@
  */
 @Data
 @NoArgsConstructor
-public class EcommerceWithdrawResult implements Serializable {
+public class SubWithdrawResult implements Serializable {
 
   /**
    * <pre>

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/EcommerceService.java
Patch:
@@ -271,7 +271,7 @@ public interface EcommerceService {
    * @return 返回数据 return withdraw result
    * @throws WxPayException the wx pay exception
    */
-  EcommerceWithdrawResult withdraw(EcommerceWithdrawRequest request) throws WxPayException;
+  SubWithdrawResult subWithdraw(SubWithdrawRequest request) throws WxPayException;
 
   /**
    * <pre>
@@ -283,5 +283,5 @@ public interface EcommerceService {
    * @return 返回数据 return withdraw result
    * @throws WxPayException the wx pay exception
    */
-  MerchantWithdrawResult withdraw(MerchantWithdrawRequest request) throws WxPayException;
+  SpWithdrawResult spWithdraw(SpWithdrawRequest request) throws WxPayException;
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/applydata/ContentValue.java
Patch:
@@ -18,10 +18,10 @@ public class ContentValue implements Serializable {
   private String text;
 
   @SerializedName("new_number")
-  private Double newNumber;
+  private String newNumber;
 
   @SerializedName("new_money")
-  private Double newMoney;
+  private String newMoney;
 
   private ContentValue.Date date;
 
@@ -43,7 +43,7 @@ public static class Date implements Serializable {
     private String type;
 
     @SerializedName("s_timestamp")
-    private Double timestamp;
+    private String timestamp;
   }
 
   @Data

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/ApplymentsStatusResult.java
Patch:
@@ -14,6 +14,7 @@
 @Data
 @NoArgsConstructor
 public class ApplymentsStatusResult implements Serializable {
+  private static final long serialVersionUID = 1488464536143984732L;
   /**
    * <pre>
    * 字段名：申请状态

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/CombineTransactionsNotifyResult.java
Patch:
@@ -17,6 +17,7 @@
 @NoArgsConstructor
 public class CombineTransactionsNotifyResult implements Serializable {
 
+  private static final long serialVersionUID = -4710926828683593250L;
   /**
    * 源数据
    */

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/CombineTransactionsRequest.java
Patch:
@@ -16,6 +16,7 @@
 @Data
 @NoArgsConstructor
 public class CombineTransactionsRequest implements Serializable {
+  private static final long serialVersionUID = -1242741645939606441L;
   /**
    * <pre>
    * 字段名：合单商户appid

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/NotifyResponse.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 @NoArgsConstructor
 public class NotifyResponse implements Serializable {
-
+  private static final long serialVersionUID = 341873114458149365L;
   @SerializedName(value = "id")
   private String id;
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/PartnerTransactionsNotifyResult.java
Patch:
@@ -16,7 +16,7 @@
 @Data
 @NoArgsConstructor
 public class PartnerTransactionsNotifyResult implements Serializable {
-
+  private static final long serialVersionUID = -6602962275015706689L;
   /**
    * 源数据
    */

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/PartnerTransactionsRequest.java
Patch:
@@ -17,7 +17,7 @@
 @Data
 @NoArgsConstructor
 public class PartnerTransactionsRequest implements Serializable {
-
+  private static final long serialVersionUID = -1550405819444680465L;
   /**
    * <pre>
    * 字段名：服务商公众号ID

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/SignatureHeader.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 @NoArgsConstructor
 public class SignatureHeader implements Serializable {
-
+  private static final long serialVersionUID = -6958015499416059949L;
   /**
    * 时间戳
    */

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/ecommerce/TransactionsResult.java
Patch:
@@ -16,7 +16,7 @@
 @Data
 @NoArgsConstructor
 public class TransactionsResult implements Serializable {
-
+  private static final long serialVersionUID = 1760592667519950149L;
   /**
    * <pre>
    * 字段名：预支付交易会话标识 （APP支付、JSAPI支付 会返回）

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpUser.java
Patch:
@@ -86,6 +86,9 @@ public String toJson() {
 
   @Data
   @Accessors(chain = true)
+  @Builder
+  @NoArgsConstructor
+  @AllArgsConstructor
   public static class Attr {
     /**
      * 属性类型: 0-文本 1-网页

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/WxPayServiceApacheHttpImpl.java
Patch:
@@ -27,7 +27,6 @@
 import org.apache.http.util.EntityUtils;
 
 import javax.net.ssl.SSLContext;
-import java.math.BigInteger;
 import java.net.URI;
 import java.nio.charset.StandardCharsets;
 
@@ -262,7 +261,7 @@ private void initSSLContext(HttpClientBuilder httpClientBuilder) throws WxPayExc
     }
 
     SSLConnectionSocketFactory connectionSocketFactory = new SSLConnectionSocketFactory(sslContext,
-      new String[]{"TLSv1"}, null, new DefaultHostnameVerifier());
+        new DefaultHostnameVerifier());
     httpClientBuilder.setSSLSocketFactory(connectionSocketFactory);
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpExternalContactServiceImpl.java
Patch:
@@ -239,7 +239,7 @@ public WxCpUserExternalTagGroupList getCorpTagList(String[] tagId) throws WxErro
   public WxCpUserExternalTagGroupInfo addCorpTag(WxCpUserExternalTagGroupInfo tagGroup) throws WxErrorException{
 
     final String url = this.mainService.getWxCpConfigStorage().getApiUrl(ADD_CORP_TAG);
-    final String result = this.mainService.post(url,tagGroup.toJson());
+    final String result = this.mainService.post(url,tagGroup.getTagGroup().toJson());
     return WxCpUserExternalTagGroupInfo.fromJson(result);
   }
 
@@ -262,7 +262,7 @@ public WxCpBaseResp delCorpTag(String[] tagId, String[] groupId) throws WxErrorE
       json.add("tag_id",new Gson().toJsonTree(tagId).getAsJsonArray());
     }
     if(ArrayUtils.isNotEmpty(groupId)){
-      json.add("group_id",new Gson().toJsonTree(tagId).getAsJsonArray());
+      json.add("group_id",new Gson().toJsonTree(groupId).getAsJsonArray());
     }
 
     final String url = this.mainService.getWxCpConfigStorage().getApiUrl(DEL_CORP_TAG);

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenComponentServiceImpl.java
Patch:
@@ -311,7 +311,7 @@ public WxOpenQueryAuthResult getQueryAuth(String authorizationCode) throws WxErr
         authorizationInfo.getAuthorizerAccessToken(), authorizationInfo.getExpiresIn());
     }
     if (authorizationInfo.getAuthorizerRefreshToken() != null) {
-      getWxOpenConfigStorage().setAuthorizerRefreshToken(authorizationInfo.getAuthorizerAppid(), authorizationInfo.getAuthorizerRefreshToken());
+      getWxOpenConfigStorage().updateAuthorizerRefreshToken(authorizationInfo.getAuthorizerAppid(), authorizationInfo.getAuthorizerRefreshToken());
     }
     return queryAuth;
   }
@@ -340,7 +340,7 @@ public WxOpenAuthorizerListResult getAuthorizerList(int begin, int len) throws W
         String authorizerAppid = data.get("authorizer_appid");
         String refreshToken = data.get("refresh_token");
         if (authorizerAppid != null && refreshToken != null) {
-          this.getWxOpenConfigStorage().setAuthorizerRefreshToken(authorizerAppid, refreshToken);
+          this.getWxOpenConfigStorage().updateAuthorizerRefreshToken(authorizerAppid, refreshToken);
         }
       }
     }
@@ -391,6 +391,7 @@ public String getAuthorizerAccessToken(String appId, boolean forceRefresh) throw
 
       WxOpenAuthorizerAccessToken wxOpenAuthorizerAccessToken = WxOpenAuthorizerAccessToken.fromJson(responseContent);
       config.updateAuthorizerAccessToken(appId, wxOpenAuthorizerAccessToken);
+      config.updateAuthorizerRefreshToken(appId,wxOpenAuthorizerAccessToken.getAuthorizerRefreshToken());
       return config.getAuthorizerAccessToken(appId);
     } catch (InterruptedException e) {
       throw new RuntimeException(e);

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/util/json/WxOpenAuthorizerAccessTokenGsonAdapter.java
Patch:
@@ -15,6 +15,7 @@ public WxOpenAuthorizerAccessToken deserialize(JsonElement jsonElement, Type typ
     WxOpenAuthorizerAccessToken authorizerAccessToken = new WxOpenAuthorizerAccessToken();
     JsonObject jsonObject = jsonElement.getAsJsonObject();
     authorizerAccessToken.setAuthorizerAccessToken(GsonHelper.getString(jsonObject, "authorizer_access_token"));
+    authorizerAccessToken.setAuthorizerRefreshToken(GsonHelper.getString(jsonObject, "authorizer_refresh_token"));
     authorizerAccessToken.setExpiresIn(GsonHelper.getPrimitiveInteger(jsonObject, "expires_in"));
     return authorizerAccessToken;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpUserExternalUserBehaviorStatistic.java
Patch:
@@ -56,8 +56,8 @@ public static class Behavior {
     /**
      * 删除/拉黑成员的客户数，即将成员删除或加入黑名单的客户数。
      */
-    @SerializedName("negative_fee_back_cnt")
-    private int negativeFeeBackCnt;
+    @SerializedName("negative_feedback_cnt")
+    private int negativeFeedbackCnt;
 
     /**
      * 发起申请数，成员通过「搜索手机号」、「扫一扫」、「从微信好友中添加」、「从群聊中添加」、「添加共享、分配给我的客户」、「添加单向、双向删除好友关系的好友」、「从新的联系人推荐中添加」等渠道主动向客户发起的好友申请数量。

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/enums/TicketType.java
Patch:
@@ -21,7 +21,7 @@ public enum TicketType {
   /**
    * sdk
    */
-  SDK("sdk"),
+  SDK("2"),
   /**
    * 微信卡券
    */

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaLiveService.java
Patch:
@@ -14,7 +14,7 @@
  * @author <a href="https://github.com/yjwang3300300">yjwang</a>
  */
 public interface WxMaLiveService {
-  String GET_LIVE_INFO = "http://api.weixin.qq.com/wxa/business/getliveinfo";
+  String GET_LIVE_INFO = "https://api.weixin.qq.com/wxa/business/getliveinfo";
 
   /**
    * 获取直播房间列表.（分页）

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpUserGsonAdapter.java
Patch:
@@ -99,6 +99,7 @@ private void buildExtraAttrs(JsonObject o, WxCpUser user) {
       user.getExtAttrs().add(attr);
 
       if (type == null) {
+        attr.setTextValue(GsonHelper.getString(attrJsonElement.getAsJsonObject(), "value"));
         continue;
       }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpUser.java
Patch:
@@ -89,7 +89,7 @@ public static class Attr {
     /**
      * 属性类型: 0-文本 1-网页
      */
-    private int type;
+    private Integer type;
     private String name;
     private String textValue;
     private String webUrl;
@@ -104,7 +104,7 @@ public static class ExternalAttribute {
     /**
      * 属性类型: 0-本文 1-网页 2-小程序.
      */
-    private int type;
+    private Integer type;
     /**
      * 属性名称： 需要先确保在管理端有创建改属性，否则会忽略.
      */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpExternalContactServiceImpl.java
Patch:
@@ -89,10 +89,10 @@ public WxCpUserExternalGroupChatList listGroupChat(Integer pageIndex, Integer pa
     if (ArrayUtils.isNotEmpty(userIds) || ArrayUtils.isNotEmpty(partyIds)) {
       JsonObject ownerFilter = new JsonObject();
       if (ArrayUtils.isNotEmpty(userIds)) {
-        json.add("userid", new Gson().toJsonTree(userIds).getAsJsonArray());
+        json.add("userid_list", new Gson().toJsonTree(userIds).getAsJsonArray());
       }
       if (ArrayUtils.isNotEmpty(partyIds)) {
-        json.add("partyid", new Gson().toJsonTree(partyIds).getAsJsonArray());
+        json.add("partyid_list", new Gson().toJsonTree(partyIds).getAsJsonArray());
       }
       json.add("owner_filter", ownerFilter);
     }
@@ -142,7 +142,7 @@ public WxCpUserExternalGroupChatStatistic getGroupChatStatistic(Date startTime,
         json.add("userid_list", new Gson().toJsonTree(userIds).getAsJsonArray());
       }
       if (ArrayUtils.isNotEmpty(partyIds)) {
-        json.add("userid_list", new Gson().toJsonTree(partyIds).getAsJsonArray());
+        json.add("partyid_list", new Gson().toJsonTree(partyIds).getAsJsonArray());
       }
       json.add("owner_filter", ownerFilter);
     }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/BaseWxMpServiceImplTest.java
Patch:
@@ -41,6 +41,7 @@ public void testSwitchover() {
     assertTrue(this.wxService.switchover("another"));
     assertThat(WxMpConfigStorageHolder.get()).isEqualTo("another");
     assertFalse(this.wxService.switchover("whatever"));
+    assertFalse(this.wxService.switchover("default"));
   }
 
   @Test

File: spring-boot-starters/wx-java-mp-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/mp/config/WxMpServiceAutoConfiguration.java
Patch:
@@ -25,9 +25,9 @@ public WxMpService wxMpService(WxMpConfigStorage configStorage, WxMpProperties w
     WxMpProperties.HttpClientType httpClientType = wxMpProperties.getConfigStorage().getHttpClientType();
     WxMpService wxMpService;
     if (httpClientType == WxMpProperties.HttpClientType.okhttp) {
-      wxMpService = newWxMpServiceJoddHttpImpl();
-    } else if (httpClientType == WxMpProperties.HttpClientType.joddhttp) {
       wxMpService = newWxMpServiceOkHttpImpl();
+    } else if (httpClientType == WxMpProperties.HttpClientType.joddhttp) {
+      wxMpService = newWxMpServiceJoddHttpImpl();
     } else if (httpClientType == WxMpProperties.HttpClientType.httpclient) {
       wxMpService = newWxMpServiceHttpClientImpl();
     } else {

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/QrcodeRequestExecutor.java
Patch:
@@ -48,7 +48,7 @@ public File execute(String uri, AbstractWxMaQrcodeWrapper qrcodeWrapper, WxType
       );
     }
 
-    httpPost.setEntity(new StringEntity(qrcodeWrapper.toJson()));
+    httpPost.setEntity(new StringEntity(qrcodeWrapper.toJson(), ContentType.APPLICATION_JSON));
 
     try (final CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost);
          final InputStream inputStream = InputStreamResponseHandler.INSTANCE.handleResponse(response)) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpServiceJoddHttpImpl.java
Patch:
@@ -3,8 +3,8 @@
 import jodd.http.HttpConnectionProvider;
 import jodd.http.HttpRequest;
 import jodd.http.HttpResponse;
-import jodd.http.JoddHttp;
 import jodd.http.ProxyInfo;
+import jodd.http.net.SocketHttpConnectionProvider;
 import me.chanjar.weixin.common.WxType;
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.error.WxError;
@@ -68,7 +68,7 @@ public void initHttp() {
         configStorage.getHttpProxyPort(), configStorage.getHttpProxyUsername(), configStorage.getHttpProxyPassword());
     }
 
-    httpClient = JoddHttp.httpConnectionProvider;
+    httpClient = new SocketHttpConnectionProvider();
   }
 
   @Override

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/BaseWxCpTpServiceImplTest.java
Patch:
@@ -133,7 +133,7 @@ public void testGetPermanentCode() throws WxErrorException {
     assertThat(tpCorp.getPermanentCode()).isEqualTo("xxxx");
 
     final WxCpTpPermanentCodeInfo tpPermanentCodeInfo = tpService.getPermanentCodeInfo(authCode);
-    assertThat(tpPermanentCodeInfo.getAuthInfo().getAgent().get(0).getAgentid()).isEqualTo(1);
+    assertThat(tpPermanentCodeInfo.getAuthInfo().getAgents().get(0).getAgentId()).isEqualTo(1);
 
   }
 
@@ -193,8 +193,8 @@ public void testGetPermanentCodeInfo() throws WxErrorException{
     jsonObject.addProperty("auth_code", authCode);
     doReturn(returnJson).when(tpService).post(configStorage.getApiUrl(GET_PERMANENT_CODE), jsonObject.toString());
     final WxCpTpPermanentCodeInfo tpPermanentCodeInfo = tpService.getPermanentCodeInfo(authCode);
-    assertThat(tpPermanentCodeInfo.getAuthInfo().getAgent().get(0).getAgentid()).isEqualTo(1000012);
-    assertNotNull(tpPermanentCodeInfo.getAuthInfo().getAgent().get(0).getSquareLogoUrl());
+    assertThat(tpPermanentCodeInfo.getAuthInfo().getAgents().get(0).getAgentId()).isEqualTo(1000012);
+    assertNotNull(tpPermanentCodeInfo.getAuthInfo().getAgents().get(0).getSquareLogoUrl());
     assertNotNull(tpPermanentCodeInfo.getAuthCorpInfo().getCorpSquareLogoUrl());
   }
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/config/impl/WxMaRedisBetterConfigImpl.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.config.impl;
 
-import cn.binarywang.wx.miniapp.constant.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.common.redis.JedisWxRedisOps;
 import me.chanjar.weixin.common.redis.WxRedisOps;
 import redis.clients.jedis.JedisPool;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -13,7 +13,7 @@
 import me.chanjar.weixin.mp.bean.result.WxMpSemanticQueryResult;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.mp.enums.WxMpApiUrl;
 
 import java.util.Map;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/BaseWxMpServiceImpl.java
Patch:
@@ -26,7 +26,7 @@
 import me.chanjar.weixin.mp.bean.result.WxMpSemanticQueryResult;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.mp.enums.WxMpApiUrl;
 import me.chanjar.weixin.mp.util.WxMpConfigStorageHolder;
 import org.apache.commons.lang3.StringUtils;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -13,7 +13,7 @@
 import me.chanjar.weixin.mp.api.WxMpCardService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.card.*;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.mp.enums.WxMpApiUrl;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 import org.apache.commons.codec.digest.DigestUtils;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/config/WxMpConfigStorage.java
Patch:
@@ -3,7 +3,7 @@
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.mp.bean.WxMpHostConfig;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 
 import java.io.File;
 import java.util.concurrent.locks.Lock;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/config/impl/WxMpDefaultConfigImpl.java
Patch:
@@ -10,7 +10,7 @@
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
 import me.chanjar.weixin.mp.bean.WxMpHostConfig;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/config/impl/WxMpRedisConfigImpl.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.Data;
 import me.chanjar.weixin.common.redis.JedisWxRedisOps;
 import me.chanjar.weixin.common.redis.WxRedisOps;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import redis.clients.jedis.JedisPool;
 
 import java.util.concurrent.TimeUnit;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpServiceImplTest.java
Patch:
@@ -12,7 +12,7 @@
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;
 import me.chanjar.weixin.mp.bean.result.WxMpCurrentAutoReplyInfo;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 
 import static org.testng.Assert.*;
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenInMemoryConfigStorage.java
Patch:
@@ -7,7 +7,7 @@
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.mp.bean.WxMpHostConfig;
 import me.chanjar.weixin.mp.config.WxMpConfigStorage;
-import me.chanjar.weixin.mp.enums.TicketType;
+import me.chanjar.weixin.common.enums.TicketType;
 import me.chanjar.weixin.open.api.WxOpenConfigStorage;
 import me.chanjar.weixin.open.bean.WxOpenAuthorizerAccessToken;
 import me.chanjar.weixin.open.bean.WxOpenComponentAccessToken;
@@ -78,7 +78,7 @@ public Lock getLockByKey(String key){
     }
     return lock;
   }
-  
+
   @Override
   public WxMpConfigStorage getWxMpConfigStorage(String appId) {
     return new WxOpenInnerConfigStorage(this, appId);

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/executor/MaQrCodeJoddHttpRequestExecutor.java
Patch:
@@ -4,7 +4,7 @@
 import jodd.http.HttpRequest;
 import jodd.http.HttpResponse;
 import jodd.http.ProxyInfo;
-import jodd.util.MimeTypes;
+import jodd.net.MimeTypes;
 import jodd.util.StringPool;
 import me.chanjar.weixin.common.WxType;
 import me.chanjar.weixin.common.error.WxError;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/device/WxDeviceBindDeviceResult.java
Patch:
@@ -28,12 +28,12 @@ public static WxDeviceBindDeviceResult fromJson(String json) {
   }
 
   @Data
-  private class Device {
+  public static class Device {
     @SerializedName("device_type")
     private String deviceType;
+
     @SerializedName("device_id")
     private String deviceId;
-
   }
 
 }

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/express/WxMaExpressPath.java
Patch:
@@ -11,14 +11,14 @@
 
 /**
  * 运单轨迹对象
+ *
  * @author <a href="https://github.com/mr-xiaoyu">xiaoyu</a>
  * @since 2019-11-26
  */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 public class WxMaExpressPath implements Serializable {
-
   private static final long serialVersionUID = 5643624677715536605L;
 
   /**
@@ -55,7 +55,7 @@ public static WxMaExpressPath fromJson(String json) {
   }
 
   @Data
-  private static class PathItem{
+  public static class PathItem {
 
     /**
      * 轨迹节点 Unix 时间戳

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaGetLiveInfo.java
Patch:
@@ -44,8 +44,8 @@ public static class RoomInfo implements Serializable {
     private Integer roomid;
     @SerializedName("cover_img")
     private String coverImg;
-    @SerializedName("live_satus")
-    private Integer liveSatus;
+    @SerializedName("live_status")
+    private Integer liveStatus;
     @SerializedName("start_time")
     private Long startTime;
     @SerializedName("end_time")

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/config/impl/WxMpRedisConfigImpl.java
Patch:
@@ -1,6 +1,5 @@
 package me.chanjar.weixin.mp.config.impl;
 
-import com.sun.istack.internal.NotNull;
 import me.chanjar.weixin.mp.config.redis.JedisWxMpRedisOps;
 import me.chanjar.weixin.mp.config.redis.WxMpRedisOps;
 import me.chanjar.weixin.mp.enums.TicketType;
@@ -30,11 +29,11 @@ public class WxMpRedisConfigImpl extends WxMpDefaultConfigImpl {
   private String accessTokenKey;
   private String lockKey;
 
-  public WxMpRedisConfigImpl(@NotNull JedisPool jedisPool) {
+  public WxMpRedisConfigImpl(JedisPool jedisPool) {
     this(new JedisWxMpRedisOps(jedisPool), "wx");
   }
 
-  public WxMpRedisConfigImpl(@NotNull WxMpRedisOps redisOps, @NotNull String keyPrefix) {
+  public WxMpRedisConfigImpl(WxMpRedisOps redisOps, String keyPrefix) {
     this.redisOps = redisOps;
     this.keyPrefix = keyPrefix;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/templatedata/control/TemplateSelector.java
Patch:
@@ -1,13 +1,15 @@
 package me.chanjar.weixin.cp.bean.oa.templatedata.control;
 
+import lombok.Data;
 import me.chanjar.weixin.cp.bean.oa.templatedata.TemplateOptions;
 
 import java.io.Serializable;
 import java.util.List;
 
 /**
- * @author
+ * @author gyv12345@163.com
  */
+@Data
 public class TemplateSelector implements Serializable {
 
   private static final long serialVersionUID = 4995408101489736881L;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/locks/JedisDistributedLock.java
Patch:
@@ -3,6 +3,8 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.locks.Condition;
 import java.util.concurrent.locks.Lock;
+
+import com.github.jedis.lock.JedisLock;
 import redis.clients.jedis.Jedis;
 import redis.clients.util.Pool;
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenServiceAbstractImpl.java
Patch:
@@ -42,7 +42,7 @@ public void setWxOpenConfigStorage(WxOpenConfigStorage wxOpenConfigStorage) {
    */
   public abstract void initHttp();
 
-  protected synchronized <T, E> T execute(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
+  protected <T, E> T execute(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
     try {
       T result = executor.execute(uri, data, WxType.Open);
       this.log.debug("\n【请求地址】: {}\n【请求参数】：{}\n【响应数据】：{}", uri, data, result);

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/profitsharing/ProfitSharingQueryResult.java
Patch:
@@ -36,7 +36,7 @@ public class ProfitSharingQueryResult extends BaseWxPayResult {
   /**
    * 微信分账单号
    */
-  @XStreamAlias("orderId")
+  @XStreamAlias("order_id")
   private String orderId;
   /**
    * 分账单状态
@@ -82,7 +82,7 @@ public List<Receiver> formatReceivers() {
   protected void loadXML(Document d) {
     transactionId = readXMLString(d, "transaction_id");
     outOrderNo = readXMLString(d, "out_order_no");
-    orderId = readXMLString(d, "orderId");
+    orderId = readXMLString(d, "order_id");
     status = readXMLString(d, "status");
     closeReason = readXMLString(d, "close_reason");
     receiversJson = readXMLString(d, "receivers");

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/ProfitSharingServiceImpl.java
Patch:
@@ -81,6 +81,7 @@ public ProfitSharingQueryResult profitSharingQuery(ProfitSharingQueryRequest req
 
     String responseContent = this.payService.post(url, request.toXML(), true);
     ProfitSharingQueryResult result = BaseWxPayResult.fromXML(responseContent, ProfitSharingQueryResult.class);
+    result.formatReceivers();
     result.checkResult(this.payService, request.getSignType(), true);
     return result;
   }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/WxPayMicropayRequest.java
Patch:
@@ -21,6 +21,8 @@
 @AllArgsConstructor
 @XStreamAlias("xml")
 public class WxPayMicropayRequest extends BaseWxPayRequest {
+  private static final long serialVersionUID = 100577773033376092L;
+
   /**
    * <pre>
    * 字段名：设备号.
@@ -205,7 +207,6 @@ public class WxPayMicropayRequest extends BaseWxPayRequest {
    * 描述：Y，传入Y时，支付成功消息和支付详情页将出现开票入口。需要在微信支付商户平台或微信公众平台开通电子发票功能，传此字段才可生效
    * </pre>
    **/
-  @Required
   @XStreamAlias("receipt")
   private String receipt;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/constant/WxCpApiPathConsts.java
Patch:
@@ -93,6 +93,7 @@ public static class Tp {
     public static final String GET_PERMANENT_CODE = "/cgi-bin/service/get_permanent_code";
     public static final String GET_SUITE_TOKEN = "/cgi-bin/service/get_suite_token";
     public static final String GET_PROVIDER_TOKEN = "/cgi-bin/service/get_provider_token";
+    public static final String GET_PREAUTH_CODE = "/cgi-bin/service/get_pre_auth_code";
   }
 
   public static class User {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/template/WxMpTemplateIndustryEnum.java
Patch:
@@ -198,7 +198,7 @@ public enum WxMpTemplateIndustryEnum {
    */
   public static WxMpTemplateIndustryEnum findBySecondary(String industry) {
     for (WxMpTemplateIndustryEnum industryEnum : WxMpTemplateIndustryEnum.values()) {
-      if (industryEnum.secondClass.equals(industry)) {
+      if (industryEnum.secondClass.contains(industry)) {
         return industryEnum;
       }
     }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/bean/template/WxMpTemplateIndustryTest.java
Patch:
@@ -15,7 +15,7 @@ public class WxMpTemplateIndustryTest {
 
     @Test
     public void testFromJson() {
-      String json="{\"primary_industry\":{\"first_class\":\"IT科技\",\"second_class\":\"IT软件与服务\"},\"secondary_industry\":{\"first_class\":\"房地产\",\"second_class\":\"房地产|建筑\"}}";
+      String json="{\"primary_industry\":{\"first_class\":\"IT科技\",\"second_class\":\"互联网|电子商务\"},\"secondary_industry\":{\"first_class\":\"房地产\",\"second_class\":\"房地产|建筑\"}}";
       final WxMpTemplateIndustry industry = WxMpTemplateIndustry.fromJson(json);
       assertThat(industry).isNotNull();
       System.out.println(industry);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/oa/WxCpApprovalComment.java
Patch:
@@ -13,7 +13,6 @@
  */
 @Data
 public class WxCpApprovalComment implements Serializable {
-
   private static final long serialVersionUID = -5430367411926856292L;
 
   /**

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaCloudService.java
Patch:
@@ -19,6 +19,7 @@ public interface WxMaCloudService {
   String DATABASE_COLLECTION_ADD_URL = "https://api.weixin.qq.com/tcb/databasecollectionadd";
   String GET_QCLOUD_TOKEN_URL = "https://api.weixin.qq.com/tcb/getqcloudtoken";
   String BATCH_DELETE_FILE_URL = "https://api.weixin.qq.com/tcb/batchdeletefile";
+  String BATCH_DOWNLOAD_FILE_URL = "https://api.weixin.qq.com/tcb/batchdownloadfile";
   String UPLOAD_FILE_URL = "https://api.weixin.qq.com/tcb/uploadfile";
   String DATABASE_MIGRATE_QUERY_INFO_URL = "https://api.weixin.qq.com/tcb/databasemigratequeryinfo";
   String DATABASE_MIGRATE_EXPORT_URL = "https://api.weixin.qq.com/tcb/databasemigrateexport";

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaCloudServiceImpl.java
Patch:
@@ -133,7 +133,7 @@ public WxCloudBatchDownloadFileResult batchDownloadFile(String env, String[] fil
       fileList.add(ImmutableMap.of("fileid", fileId, "max_age", (Serializable) maxAges[i++]));
     }
 
-    String response = this.wxMaService.post(GET_QCLOUD_TOKEN_URL, ImmutableMap.of("env", env, "file_list", fileList));
+    String response = this.wxMaService.post(BATCH_DOWNLOAD_FILE_URL, ImmutableMap.of("env", env, "file_list", fileList));
     return WxGsonBuilder.create().fromJson(response, WxCloudBatchDownloadFileResult.class);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/BaseWxMpServiceImpl.java
Patch:
@@ -399,9 +399,6 @@ public void setMultiConfigStorages(Map<String, WxMpConfigStorage> configStorages
   @Override
   public void addConfigStorage(String mpId, WxMpConfigStorage configStorages) {
     synchronized (this) {
-      if (this.configStorageMap.containsKey(mpId)) {
-        throw new RuntimeException("该公众号标识已存在，请更换其他标识！");
-      }
       this.configStorageMap.put(mpId, configStorages);
     }
   }

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaJsapiServiceImpl.java
Patch:
@@ -51,7 +51,7 @@ public String getCardApiTicket(boolean forceRefresh) throws WxErrorException {
     } finally {
       lock.unlock();
     }
-    return this.wxMaService.getWxMaConfig().getJsapiTicket();
+    return this.wxMaService.getWxMaConfig().getCardApiTicket();
   }
 
   @Override

File: spring-boot-starters/wx-java-open-spring-boot-starter/src/main/java/com/binarywang/spring/starter/wxjava/open/properties/WxOpenProperties.java
Patch:
@@ -53,6 +53,8 @@ public static class ConfigStorage implements Serializable {
 
     private RedisProperties redis = new RedisProperties();
 
+    private String keyPrefix;
+
   }
 
   public enum StorageType {

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/ProfitSharingServiceImpl.java
Patch:
@@ -76,7 +76,6 @@ public ProfitSharingReceiverResult removeReceiver(ProfitSharingReceiverRequest r
 
   @Override
   public ProfitSharingQueryResult profitSharingQuery(ProfitSharingQueryRequest request) throws WxPayException {
-    if (true) throw new WxPayException("暂不支持，微信一直返回签名失败");
     request.checkAndSign(this.payService.getConfig());
     String url = this.payService.getPayBaseUrl() + "/pay/profitsharingquery";
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaSubscribeService.java
Patch:
@@ -1,6 +1,6 @@
 package cn.binarywang.wx.miniapp.api;
 
-import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
+import cn.binarywang.wx.miniapp.bean.template.WxMaPubTemplateTitleListResult;
 import lombok.Data;
 import me.chanjar.weixin.common.error.WxErrorException;
 
@@ -57,7 +57,7 @@ public interface WxMaSubscribeService {
    * @return .
    * @throws WxErrorException .
    */
-  WxMaTemplateLibraryListResult getPubTemplateTitleList(String[] ids, int start, int limit) throws WxErrorException;
+  WxMaPubTemplateTitleListResult getPubTemplateTitleList(String[] ids, int start, int limit) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSubscribeServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.api.WxMaSubscribeService;
-import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
+import cn.binarywang.wx.miniapp.bean.template.WxMaPubTemplateTitleListResult;
 import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
 import com.google.common.base.Joiner;
 import com.google.common.collect.ImmutableMap;
@@ -24,12 +24,12 @@ public class WxMaSubscribeServiceImpl implements WxMaSubscribeService {
   private WxMaService wxMaService;
 
   @Override
-  public WxMaTemplateLibraryListResult getPubTemplateTitleList(String[] ids, int start, int limit) throws WxErrorException {
+  public WxMaPubTemplateTitleListResult getPubTemplateTitleList(String[] ids, int start, int limit) throws WxErrorException {
     ImmutableMap<String, ? extends Serializable> params = ImmutableMap.of("ids", StringUtils.join(ids, ","),
       "start", start, "limit", limit);
     String responseText = this.wxMaService.get(GET_PUB_TEMPLATE_TITLE_LIST_URL,
       Joiner.on("&").withKeyValueSeparator("=").join(params));
-    return WxMaTemplateLibraryListResult.fromJson(responseText);
+    return WxMaPubTemplateTitleListResult.fromJson(responseText);
   }
 
   @Override

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -81,6 +81,7 @@ public WxCardApiSignature createCardApiSignature(String... optionalSignParam) th
     signParams[optionalSignParam.length + 1] = nonceStr;
     signParams[optionalSignParam.length + 2] = cardApiTicket;
     StringBuilder sb = new StringBuilder();
+    Arrays.sort(signParams);
     for (String a : signParams) {
       sb.append(a);
     }

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaSubscribeService.java
Patch:
@@ -57,7 +57,7 @@ public interface WxMaSubscribeService {
    * @return .
    * @throws WxErrorException .
    */
-  WxMaTemplateLibraryListResult getPubTemplateTitleList(Integer[] ids, int start, int limit) throws WxErrorException;
+  WxMaTemplateLibraryListResult getPubTemplateTitleList(String[] ids, int start, int limit) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaSubscribeServiceImplTest.java
Patch:
@@ -27,18 +27,18 @@ public class WxMaSubscribeServiceImplTest {
 
   @Test
   public void testGetPubTemplateTitleList() throws WxErrorException {
-    this.wxService.getSubscribeService().getPubTemplateTitleList(new Integer[]{578}, 1, 1);
+    this.wxService.getSubscribeService().getPubTemplateTitleList(new String[]{"2", "616"}, 0, 1);
   }
 
   @Test
   public void testGetPubTemplateKeyWordsById() throws WxErrorException {
-    final List<WxMaSubscribeService.PubTemplateKeyword> result = this.wxService.getSubscribeService().getPubTemplateKeyWordsById("578");
+    final List<WxMaSubscribeService.PubTemplateKeyword> result = this.wxService.getSubscribeService().getPubTemplateKeyWordsById("99");
     System.out.println(result);
   }
 
   @Test
   public void testAddTemplate() throws WxErrorException {
-    final String templateId = this.wxService.getSubscribeService().addTemplate("1", Lists.newArrayList(1), "hhaa");
+    final String templateId = this.wxService.getSubscribeService().addTemplate("401", Lists.newArrayList(1, 2), "测试数据");
     System.out.println(templateId);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCommentServiceImpl.java
Patch:
@@ -18,7 +18,7 @@ public class WxMpCommentServiceImpl implements WxMpCommentService {
   private final WxMpService wxMpService;
 
   @Override
-  public void open(Integer msgDataId, Integer index) throws WxErrorException {
+  public void open(String msgDataId, Integer index) throws WxErrorException {
     JsonObject json = new JsonObject();
     json.addProperty("msg_data_id", msgDataId);
     if (index != null) {
@@ -29,7 +29,7 @@ public void open(Integer msgDataId, Integer index) throws WxErrorException {
   }
 
   @Override
-  public void close(Integer msgDataId, Integer index) throws WxErrorException {
+  public void close(String msgDataId, Integer index) throws WxErrorException {
     JsonObject json = new JsonObject();
     json.addProperty("msg_data_id", msgDataId);
     if (index != null) {
@@ -40,7 +40,7 @@ public void close(Integer msgDataId, Integer index) throws WxErrorException {
   }
 
   @Override
-  public WxMpCommentListVo list(Integer msgDataId, Integer index, int begin, int count, int type) throws WxErrorException {
+  public WxMpCommentListVo list(String msgDataId, Integer index, int begin, int count, int type) throws WxErrorException {
     JsonObject json = new JsonObject();
     json.addProperty("msg_data_id", msgDataId);
     json.addProperty("begin", begin);

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenComponentService.java
Patch:
@@ -27,7 +27,7 @@ public interface WxOpenComponentService {
   String API_GET_AUTHORIZER_INFO_URL = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info";
   String API_GET_AUTHORIZER_OPTION_URL = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_option";
   String API_SET_AUTHORIZER_OPTION_URL = "https://api.weixin.qq.com/cgi-bin/component/api_set_authorizer_option";
-  String API_GET_AUTHORIZER_LIST = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_list?component_access_token=%s";
+  String API_GET_AUTHORIZER_LIST = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_list";
 
   String COMPONENT_LOGIN_PAGE_URL = "https://mp.weixin.qq.com/cgi-bin/componentloginpage?component_appid=%s&pre_auth_code=%s&redirect_uri=%s&auth_type=xxx&biz_appid=xxx";
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/xml/XStreamTransformer.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.Map;
 
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
+import cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage;
 import com.thoughtworks.xstream.XStream;
 import me.chanjar.weixin.common.util.xml.XStreamInitializer;
 
@@ -19,6 +20,7 @@ public class XStreamTransformer {
 
   static {
     registerClass(WxMaMessage.class);
+    registerClass(WxMaXmlOutMessage.class);
   }
 
   /**

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenMaService.java
Patch:
@@ -231,7 +231,7 @@ public interface WxOpenMaService extends WxMaService {
    *
    * @return
    */
-  public WxOpenResult getWebViewDomainInfo() throws WxErrorException;
+  public WxOpenMaWebDomainResult getWebViewDomainInfo() throws WxErrorException;
 
   /**
    * 设置小程序的业务域名
@@ -249,7 +249,7 @@ public interface WxOpenMaService extends WxMaService {
    * @param domainList
    * @return
    */
-  WxOpenResult setWebViewDomainInfo(String action, List<String> domainList) throws WxErrorException;
+  WxOpenMaWebDomainResult setWebViewDomainInfo(String action, List<String> domainList) throws WxErrorException;
 
   /**
    * 获取小程序的信息

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMaServiceImpl.java
Patch:
@@ -110,7 +110,7 @@ public String getWebViewDomain() throws WxErrorException {
    * @return
    */
   @Override
-  public WxOpenResult getWebViewDomainInfo() throws WxErrorException {
+  public WxOpenMaWebDomainResult getWebViewDomainInfo() throws WxErrorException {
     return setWebViewDomainInfo("get", null);
   }
 
@@ -141,9 +141,9 @@ public String setWebViewDomain(String action, List<String> domainList) throws Wx
    * @return
    */
   @Override
-  public WxOpenResult setWebViewDomainInfo(String action, List<String> domainList) throws WxErrorException {
+  public WxOpenMaWebDomainResult setWebViewDomainInfo(String action, List<String> domainList) throws WxErrorException {
     String response = this.setWebViewDomain(action, domainList);
-    return WxMaGsonBuilder.create().fromJson(response, WxOpenResult.class);
+    return WxMaGsonBuilder.create().fromJson(response, WxOpenMaWebDomainResult.class);
   }
 
 

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/constant/WxPayErrorCode.java
Patch:
@@ -459,9 +459,10 @@ public static class DownloadBill {
      * 描述：账单不存在.
      * 原因：当前商户号没有已成交的订单，不生成对账单
      * 解决方案：请检查当前商户号在指定日期内是否有成功的交易。
+     * 错误：微信官方文档这个错误的字符串显示是'NO Bill Exist'('o'是大写)，实际返回是'No Bill Exist'('o'是小写）
      * </pre>
      */
-    public static final String NO_Bill_Exist = "NO Bill Exist";
+    public static final String NO_Bill_Exist = "No Bill Exist";
 
     /**
      * <pre>

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialNewsInfoOkhttpRequestExecutor.java
Patch:
@@ -28,13 +28,11 @@ public MaterialNewsInfoOkhttpRequestExecutor(RequestHttp requestHttp) {
 
   @Override
   public WxMpMaterialNews execute(String uri, String materialId, WxType wxType) throws WxErrorException, IOException {
-    OkHttpClient client = requestHttp.getRequestHttpClient();
-
     RequestBody requestBody = RequestBody.create(MediaType.parse("application/json"),
       WxGsonBuilder.create().toJson(ImmutableMap.of("media_id", materialId)));
     Request request = new Request.Builder().url(uri).post(requestBody).build();
 
-    Response response = client.newCall(request).execute();
+    Response response = requestHttp.getRequestHttpClient().newCall(request).execute();
     String responseContent = response.body().string();
     log.debug("响应原始数据：{}", responseContent);
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/requestexecuter/material/MaterialUploadOkhttpRequestExecutor.java
Patch:
@@ -38,8 +38,6 @@ public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material, WxTyp
       throw new FileNotFoundException();
     }
 
-    //得到httpClient
-
     OkHttpClient client = requestHttp.getRequestHttpClient();
 
     MultipartBody.Builder bodyBuilder = new MultipartBody.Builder()

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/WxPayApiData.java
Patch:
@@ -53,7 +53,7 @@ public WxPayApiData(String url, String requestData, String responseData, String
   public String toString() {
     if (this.exceptionMsg != null) {
       return String.format("\n【请求地址】：%s\n【请求数据】：%s\n【异常信息】：%s",
-        this, url, this.requestData, this.exceptionMsg);
+        this.url, this.requestData, this.exceptionMsg);
     }
 
     return String.format("\n【请求地址】：%s\n【请求数据】：%s\n【响应数据】：%s",

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageRouter.java
Patch:
@@ -129,7 +129,7 @@ public WxCpMessageRouterRule rule() {
   /**
    * 处理微信消息.
    */
-  private WxCpXmlOutMessage route(final WxCpXmlMessage wxMessage, final Map<String, Object> context) {
+  public WxCpXmlOutMessage route(final WxCpXmlMessage wxMessage, final Map<String, Object> context) {
     if (isMsgDuplicated(wxMessage)) {
       // 如果是重复消息，那么就不做处理
       return null;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenComponentServiceImpl.java
Patch:
@@ -416,8 +416,8 @@ public List<WxOpenMaCodeTemplate> getTemplateDraftList() throws WxErrorException
   public List<WxOpenMaCodeTemplate> getTemplateList() throws WxErrorException {
     String responseContent = get(GET_TEMPLATE_LIST_URL, "access_token");
     JsonObject response = JSON_PARSER.parse(StringUtils.defaultString(responseContent, "{}")).getAsJsonObject();
-    boolean hasDraftList = response.has("template_list");
-    if (hasDraftList) {
+    boolean hasTemplateList = response.has("template_list");
+    if (hasTemplateList) {
       return WxOpenGsonBuilder.create().fromJson(response.getAsJsonArray("template_list"),
         new TypeToken<List<WxOpenMaCodeTemplate>>() {
         }.getType());

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenMaService.java
Patch:
@@ -253,7 +253,7 @@ public interface WxOpenMaService extends WxMaService {
    * @return
    * @throws WxErrorException
    */
-  WxOpenResult bindTester(String wechatid) throws WxErrorException;
+  WxOpenMaBindTesterResult bindTester(String wechatid) throws WxErrorException;
 
   /**
    * 解除绑定小程序体验者

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMaServiceImpl.java
Patch:
@@ -172,11 +172,11 @@ public String getAccountBasicInfo() throws WxErrorException {
    * @throws WxErrorException
    */
   @Override
-  public WxOpenResult bindTester(String wechatid) throws WxErrorException {
+  public WxOpenMaBindTesterResult bindTester(String wechatid) throws WxErrorException {
     JsonObject paramJson = new JsonObject();
     paramJson.addProperty("wechatid", wechatid);
     String response = post(API_BIND_TESTER, GSON.toJson(paramJson));
-    return WxMaGsonBuilder.create().fromJson(response, WxOpenResult.class);
+    return WxMaGsonBuilder.create().fromJson(response, WxOpenMaBindTesterResult.class);
   }
 
   /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/card/BonusRule.java
Patch:
@@ -8,6 +8,7 @@
 
 /**
  * 积分规则.
+ *
  * @author yuanqixun
  * date:2018-08-25 00:33
  */
@@ -54,8 +55,8 @@ public class BonusRule implements Serializable {
   /**
    * 抵扣条件,满xx元（这里以分为单位）可用.
    */
-  @SerializedName("least_moneyto_use_bonus")
-  private Integer leastMoneytoUseBonus;
+  @SerializedName("least_money_to_use_bonus")
+  private Integer leastMoneyToUseBonus;
 
   /**
    * 抵扣条件,单笔最多使用xx积分.

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/service/impl/BaseWxPayServiceImpl.java
Patch:
@@ -779,8 +779,8 @@ public String queryComment(Date beginDate, Date endDate, Integer offset, Integer
 
   @Override
   public String queryComment(WxPayQueryCommentRequest request) throws WxPayException {
-    request.checkAndSign(this.getConfig());
     request.setSignType(SignType.HMAC_SHA256);
+    request.checkAndSign(this.getConfig());
 
     String url = this.getPayBaseUrl() + "/billcommentsp/batchquerycomment";
     String responseContent = this.post(url, request.toXML(), true);

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/WxPayRedpackQueryRequest.java
Patch:
@@ -27,7 +27,7 @@ public class WxPayRedpackQueryRequest extends BaseWxPayRequest {
 
   @Override
   protected String[] getIgnoredParamsForSign() {
-    return new String[]{"sub_appid","sub_mch_id"};
+    return new String[]{"sub_appid","sub_mch_id","sign_type"};
   }
   /**
    * 商户订单号

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMarketingServiceImpl.java
Patch:
@@ -54,7 +54,8 @@ public void addUserAction(List<WxMpUserAction> actions) throws WxErrorException
   }
 
   @Override
-  public WxMpAdLeadResult getAdLeads(Date beginDate, Date endDate, List<WxMpAdLeadFilter> filtering, Integer page, Integer pageSize) throws WxErrorException, IOException {
+  public WxMpAdLeadResult getAdLeads(Date beginDate, Date endDate, List<WxMpAdLeadFilter> filtering, Integer page, Integer pageSize)
+    throws WxErrorException, IOException {
     Date today = new Date();
     if (beginDate == null) {
       beginDate = today;
@@ -68,7 +69,7 @@ public WxMpAdLeadResult getAdLeads(Date beginDate, Date endDate, List<WxMpAdLead
     dateRange.addProperty("end_date", DateFormatUtils.format(endDate, "yyyy-MM-dd"));
     params += "&date_range=" + URLEncoder.encode(dateRange.toString(), StandardCharsets.UTF_8.name());
     params += "&page=" + page;
-    params += "&pageSize=" + pageSize;
+    params += "&page_size=" + pageSize;
     if (filtering != null) {
       JsonArray filterJson = new JsonArray();
       for (WxMpAdLeadFilter filter : filtering) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/marketing/WxMpUserAction.java
Patch:
@@ -25,6 +25,7 @@ public class WxMpUserAction implements Serializable {
   private String url;
   private Integer actionTime;
   private String actionType;
+  private String leadsType;
   private String clickId;
   private Integer actionParam;
 
@@ -44,6 +45,7 @@ private JsonObject toJsonObject() {
     if (this.actionParam != null) {
       JsonObject actionParamJson = new JsonObject();
       actionParamJson.addProperty("value", actionParam);
+      actionParamJson.addProperty("leads_type", leadsType);
       json.add("action_param", actionParamJson);
     }
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBusyRetryTest.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
+import lombok.extern.slf4j.Slf4j;
 import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
@@ -13,8 +14,8 @@
 import java.util.concurrent.Future;
 
 @Test
+@Slf4j
 public class WxCpBusyRetryTest {
-
   @DataProvider(name = "getService")
   public Object[][] getService() {
     WxCpService service = new WxCpServiceImpl() {
@@ -23,7 +24,7 @@ public Object[][] getService() {
       public synchronized <T, E> T executeInternal(
         RequestExecutor<T, E> executor, String uri, E data)
         throws WxErrorException {
-        this.log.info("Executed");
+        log.info("Executed");
         throw new WxErrorException(WxError.builder().errorCode(-1).build());
       }
     };

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpAgentServiceImplTest.java
Patch:
@@ -15,6 +15,7 @@
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
+import static org.testng.Assert.assertEquals;
 
 
 /**

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpTagServiceImplTest.java
Patch:
@@ -18,6 +18,7 @@
 
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
+import static org.testng.Assert.assertEquals;
 import static org.testng.Assert.assertNotEquals;
 
 /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/crypto/WxCryptUtil.java
Patch:
@@ -39,6 +39,7 @@ protected DocumentBuilder initialValue() {
       try {
         final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
         factory.setExpandEntityReferences(false);
+        factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
         return factory.newDocumentBuilder();
       } catch (ParserConfigurationException exc) {
         throw new IllegalArgumentException(exc);

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/util/crypto/WxCryptUtilTest.java
Patch:
@@ -40,6 +40,7 @@ public void testNormal() throws ParserConfigurationException, SAXException, IOEx
 
     DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
     documentBuilderFactory.setExpandEntityReferences(false);
+    documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
     DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
     Document document = documentBuilder.parse(new InputSource(new StringReader(encryptedXml)));
 
@@ -83,6 +84,8 @@ public void testValidateSignatureError() throws ParserConfigurationException, SA
       String afterEncrpt = pc.encrypt(this.replyMsg);
       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
       dbf.setExpandEntityReferences(false);
+      dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+
       DocumentBuilder db = dbf.newDocumentBuilder();
       StringReader sr = new StringReader(afterEncrpt);
       InputSource is = new InputSource(sr);

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/BaseWxPayResult.java
Patch:
@@ -189,6 +189,7 @@ private Document getXmlDoc() {
     try {
       final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
       factory.setExpandEntityReferences(false);
+      factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
       this.xmlDoc = factory.newDocumentBuilder()
         .parse(new ByteArrayInputStream(this.xmlString.getBytes(StandardCharsets.UTF_8)));
       return xmlDoc;

File: weixin-java-pay/src/test/java/com/github/binarywang/wxpay/bean/result/BaseWxPayResultTest.java
Patch:
@@ -75,7 +75,9 @@ public void testToMap() throws Exception {
   @Test(expectedExceptions = {RuntimeException.class})
   public void testToMap_with_empty_xmlString() {
     WxPayOrderQueryResult result = new WxPayOrderQueryResult();
-    result.setXmlString(" ");
+    result.setXmlString( "<?xml version=\"1.0\" ?><!DOCTYPE doc " +
+      "[<!ENTITY win SYSTEM \"file:///C:/Users/user/Documents/testdata2.txt\">]" +
+      "><doc>&win;</doc>");
     Map<String, String> map = result.toMap();
     System.out.println(map);
   }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpCardService.java
Patch:
@@ -21,8 +21,8 @@ public interface WxMpCardService {
   String CARD_CODE_CONSUME = "https://api.weixin.qq.com/card/code/consume";
   String CARD_CODE_MARK = "https://api.weixin.qq.com/card/code/mark";
   String CARD_TEST_WHITELIST = "https://api.weixin.qq.com/card/testwhitelist/set";
-  String CARD_QRCODE_CREAET = "https://api.weixin.qq.com/card/qrcode/create";
-  String CARD_LANDING_PAGE_CREAET = "https://api.weixin.qq.com/card/landingpage/create";
+  String CARD_QRCODE_CREATE = "https://api.weixin.qq.com/card/qrcode/create";
+  String CARD_LANDING_PAGE_CREATE = "https://api.weixin.qq.com/card/landingpage/create";
   /**
    * 将用户的卡券设置为失效状态
    */

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -293,7 +293,7 @@ public WxMpCardQrcodeCreateResult createQrcodeCard(String cardId, String outerSt
     cardJson.addProperty("outer_str", outerStr);
     actionInfoJson.add("card", cardJson);
     jsonObject.add("action_info", actionInfoJson);
-    String response = this.wxMpService.post(CARD_QRCODE_CREAET, GSON.toJson(jsonObject));
+    String response = this.wxMpService.post(CARD_QRCODE_CREATE, GSON.toJson(jsonObject));
     return WxMpCardQrcodeCreateResult.fromJson(response);
   }
 
@@ -306,7 +306,7 @@ public WxMpCardQrcodeCreateResult createQrcodeCard(String cardId, String outerSt
    */
   @Override
   public WxMpCardLandingPageCreateResult createLandingPage(WxMpCardLandingPageCreateRequest request) throws WxErrorException {
-    String response = this.wxMpService.post(CARD_LANDING_PAGE_CREAET, GSON.toJson(request));
+    String response = this.wxMpService.post(CARD_LANDING_PAGE_CREATE, GSON.toJson(request));
     return WxMpCardLandingPageCreateResult.fromJson(response);
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxErrorExceptionHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.common.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * WxErrorException处理器.

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/LogExceptionHandler.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/fs/FileUtils.java
Patch:
@@ -19,7 +19,7 @@ public static File createTmpFile(InputStream inputStream, String name, String ex
     File resultFile = File.createTempFile(name, '.' + ext, tmpDirFile);
 
     resultFile.deleteOnExit();
-    org.apache.commons.io.FileUtils.copyInputStreamToFile(inputStream, resultFile);
+    org.apache.commons.io.FileUtils.copyToFile(inputStream, resultFile);
     return resultFile;
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/HttpResponseProxy.java
Patch:
@@ -1,8 +1,8 @@
 package me.chanjar.weixin.common.util.http;
 
 import jodd.http.HttpResponse;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import okhttp3.Response;
 import org.apache.http.Header;
 import org.apache.http.client.methods.CloseableHttpResponse;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheHttpClientSimpleGetRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 import org.apache.http.HttpHost;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheMediaUploadRequestExecutor.java
Patch:
@@ -1,16 +1,15 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import org.apache.http.HttpEntity;
 import org.apache.http.HttpHost;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.client.methods.HttpPost;
-import org.apache.http.entity.ContentType;
 import org.apache.http.entity.mime.HttpMultipartMode;
 import org.apache.http.entity.mime.MultipartEntityBuilder;
 import org.apache.http.impl.client.CloseableHttpClient;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheSimplePostRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import org.apache.http.Consts;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaUploadRequestExecutor.java
Patch:
@@ -6,9 +6,9 @@
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimpleGetRequestExecutor.java
Patch:
@@ -3,8 +3,8 @@
 import jodd.http.*;
 import jodd.util.StringPool;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimplePostRequestExecutor.java
Patch:
@@ -5,8 +5,8 @@
 import jodd.http.HttpResponse;
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaDownloadRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.HttpResponseProxy;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaUploadRequestExecutor.java
Patch:
@@ -1,8 +1,8 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimpleGetRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimplePostRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxErrorAdapter.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.json;
 
 import com.google.gson.*;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 
 import java.lang.reflect.Type;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxGsonBuilder.java
Patch:
@@ -4,7 +4,7 @@
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 
 public class WxGsonBuilder {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpDepartmentService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpDepart;
 
 import java.util.List;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMenuService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpDepartmentServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.cp.api.WxCpDepartmentService;
 import me.chanjar.weixin.cp.api.WxCpService;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMediaServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api.impl;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMenuServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api.impl;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpMenuService;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpMessage.java
Patch:
@@ -34,6 +34,7 @@ public class WxCpMessage implements Serializable {
   private String hqMusicUrl;
   private String safe;
   private String url;
+  private String btnTxt;
   private List<NewArticle> articles = new ArrayList<>();
   private List<MpnewsArticle> mpnewsArticles = new ArrayList<>();
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutNewsMessage.java
Patch:
@@ -3,6 +3,7 @@
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamCDataConverter;
 
@@ -11,6 +12,7 @@
 
 @XStreamAlias("xml")
 @Data
+@EqualsAndHashCode(callSuper = true)
 public class WxCpXmlOutNewsMessage extends WxCpXmlOutMessage {
   private static final long serialVersionUID = -5796178637883178826L;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.message;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageInterceptor.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.message;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageRouterRule.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.message;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpGsonBuilder.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.util.json.WxErrorAdapter;
 import me.chanjar.weixin.cp.bean.WxCpDepart;
 import me.chanjar.weixin.cp.bean.WxCpMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpMessageGsonAdapter.java
Patch:
@@ -48,6 +48,7 @@ public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializat
       text.addProperty("title", message.getTitle());
       text.addProperty("description", message.getDescription());
       text.addProperty("url", message.getUrl());
+      text.addProperty("btntxt", message.getBtnTxt());
       messageJson.add("textcard", text);
     }
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBaseAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.impl.WxCpServiceImpl;
 import me.chanjar.weixin.cp.config.WxCpConfigStorage;
 import org.apache.commons.lang3.StringUtils;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBusyRetryTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.cp.api.impl.WxCpServiceImpl;
 import org.testng.annotations.DataProvider;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageAPITest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpMessage;
 import me.chanjar.weixin.cp.bean.WxCpMessageSendResult;
 import org.testng.annotations.*;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpDepartmentServiceImplTest.java
Patch:
@@ -56,7 +56,7 @@ public void testList(Integer id) throws Exception {
     }
   }
 
-  @Test(dependsOnMethods = {"testListAll", "testCreate"})
+  @Test(dependsOnMethods = {"testList", "testCreate"})
   public void testUpdate() throws Exception {
     System.out.println("=================更新部门");
     this.depart.setName("子部门改名" + System.currentTimeMillis());

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpMediaServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.TestConstants;
 import me.chanjar.weixin.cp.api.WxCpService;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpOAuth2Servlet.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpService;
 
 import javax.servlet.http.HttpServlet;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaMediaService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.api;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.File;
 import java.io.InputStream;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaMsgService.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.bean.WxMaKefuMessage;
 import cn.binarywang.wx.miniapp.bean.WxMaTemplateMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * <pre>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaTemplateService.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryGetResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateListResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.util.List;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaUserService.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
 import cn.binarywang.wx.miniapp.bean.WxMaPhoneNumberInfo;
 import cn.binarywang.wx.miniapp.bean.WxMaUserInfo;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * 用户信息相关操作接口.

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMediaServiceImpl.java
Patch:
@@ -2,9 +2,9 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaMediaService;
 import cn.binarywang.wx.miniapp.api.WxMaService;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMsgServiceImpl.java
Patch:
@@ -7,8 +7,8 @@
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaTemplateServiceImpl.java
Patch:
@@ -6,8 +6,8 @@
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryGetResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateListResult;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 
 import java.util.HashMap;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaUserServiceImpl.java
Patch:
@@ -8,7 +8,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaPhoneNumberInfo;
 import cn.binarywang.wx.miniapp.bean.WxMaUserInfo;
 import cn.binarywang.wx.miniapp.util.crypt.WxMaCryptUtils;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaKefuMessage.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.builder.LinkMessageBuilder;
 import cn.binarywang.wx.miniapp.builder.MaPageMessageBuilder;
 import cn.binarywang.wx.miniapp.builder.TextMessageBuilder;
-import com.google.gson.GsonBuilder;
+import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
 import com.google.gson.annotations.SerializedName;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
@@ -104,7 +104,7 @@ public static MaPageMessageBuilder newMaPageBuilder() {
   }
 
   public String toJson() {
-    return new GsonBuilder().create().toJson(this);
+    return WxMaGsonBuilder.create().toJson(this);
   }
 
 }

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/bean/WxMaWxcode.java
Patch:
@@ -23,6 +23,9 @@ public class WxMaWxcode extends AbstractWxMaQrcodeWrapper implements Serializabl
   @SerializedName("auto_color")
   private boolean autoColor = true;
 
+  @SerializedName("is_hyaline")
+  private boolean isHyaline = false;
+
   @SerializedName("line_color")
   private WxMaCodeLineColor lineColor = new WxMaCodeLineColor("0", "0", "0");
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageHandler.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.Map;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageInterceptor.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.Map;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageRouterRule.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.ArrayList;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -1,8 +1,8 @@
 package cn.binarywang.wx.miniapp.util.http;
 
 import cn.binarywang.wx.miniapp.bean.AbstractWxMaQrcodeWrapper;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/xml/XStreamTransformer.java
Patch:
@@ -60,7 +60,6 @@ public static void register(Class<?> clz, XStream xStream) {
    */
   private static void registerClass(Class<?> clz) {
     XStream xstream = XStreamInitializer.getInstance();
-    xstream.setClassLoader(Thread.currentThread().getContextClassLoader());
 
     xstream.processAnnotations(clz);
     xstream.processAnnotations(getInnerClasses(clz));

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaMediaServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.test.ApiTestModule;
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;
 

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaMsgServiceImplTest.java
Patch:
@@ -7,7 +7,7 @@
 import cn.binarywang.wx.miniapp.test.TestConfig;
 import com.google.common.collect.Lists;
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.testng.annotations.*;
 
 import java.text.SimpleDateFormat;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
 import cn.binarywang.wx.miniapp.test.ApiTestModule;
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.apache.commons.lang3.StringUtils;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/demo/WxMaDemoServer.java
Patch:
@@ -12,7 +12,7 @@
 import cn.binarywang.wx.miniapp.test.TestConfig;
 import com.google.common.collect.Lists;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import org.eclipse.jetty.server.Server;
 import org.eclipse.jetty.servlet.ServletHandler;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpCardService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.WxCardApiSignature;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpCardResult;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpDataCubeService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.datacube.*;
 
 import java.util.Date;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpDeviceService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.device.*;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpKefuService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.kefu.WxMpKefuMessage;
 import me.chanjar.weixin.mp.bean.kefu.request.WxMpKfAccountRequest;
 import me.chanjar.weixin.mp.bean.kefu.result.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMassMessageService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.WxMpMassSendResult;
 import me.chanjar.weixin.mp.bean.result.WxMpMassUploadResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMaterialService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.material.*;
 
 import java.io.File;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMemberCardService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardActivatedMessage;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateMessage;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMenuService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;
 import me.chanjar.weixin.mp.bean.menu.WxMpMenu;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageInterceptor.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouterRule.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpQrcodeService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;
 
 import java.io.File;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpShakeService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.WxMpShakeInfoResult;
 import me.chanjar.weixin.mp.bean.WxMpShakeQuery;
 import me.chanjar.weixin.mp.bean.shake.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpStoreService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreInfo;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreListResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpSubscribeMsgService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.subscribe.WxMpSubscribeMessage;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpTemplateMsgService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplate;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplateIndustry;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserBlacklistService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpUserBlacklistGetResult;
 
 import java.util.List;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.WxMpUserQuery;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.bean.result.WxMpUserList;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserTagService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.tag.WxTagListUser;
 import me.chanjar.weixin.mp.bean.tag.WxUserTag;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -6,8 +6,8 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.reflect.TypeToken;
 import me.chanjar.weixin.common.bean.WxCardApiSignature;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.RandomUtils;
 import me.chanjar.weixin.common.util.crypto.SHA1;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpDataCubeServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpDataCubeService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.datacube.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpDeviceServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpDeviceService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.device.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpKefuServiceImpl.java
Patch:
@@ -1,9 +1,9 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.mp.api.WxMpKefuService;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMassMessageServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMassMessageService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMemberCardServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMemberCardService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardActivatedMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMenuServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMenuService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpQrcodeServiceImpl.java
Patch:
@@ -1,12 +1,12 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpQrcodeService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;
-import me.chanjar.weixin.mp.util.http.QrCodeRequestExecutor;
+import me.chanjar.weixin.mp.util.requestexecuter.qrcode.QrCodeRequestExecutor;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.File;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpSubscribeMsgServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.URIUtil;
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserBlacklistServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.gson.Gson;
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.WxMpUserBlacklistService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.WxMpUserService;
 import me.chanjar.weixin.mp.bean.WxMpUserQuery;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/template/WxMpTemplateMessage.java
Patch:
@@ -55,7 +55,7 @@ public class WxMpTemplateMessage implements Serializable {
   /**
    * 模板数据.
    */
-  private List<WxMpTemplateData> data;
+  private List<WxMpTemplateData> data = new ArrayList<>();
 
   public WxMpTemplateMessage addData(WxMpTemplateData datum) {
     if (this.data == null) {
@@ -76,7 +76,7 @@ public static class MiniProgram implements Serializable {
     private static final long serialVersionUID = -7945254706501974849L;
 
     private String appid;
-    private String path;
+    private String pagePath;
   }
 
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpTemplateMessageGsonAdapter.java
Patch:
@@ -23,7 +23,7 @@ public JsonElement serialize(WxMpTemplateMessage message, Type typeOfSrc, JsonSe
     if (message.getMiniProgram() != null) {
       JsonObject miniProgramJson = new JsonObject();
       miniProgramJson.addProperty("appid", message.getMiniProgram().getAppid());
-      miniProgramJson.addProperty("path", message.getMiniProgram().getPath());
+      miniProgramJson.addProperty("pagepath", message.getMiniProgram().getPagePath());
       messageJson.add("miniprogram", miniProgramJson);
     }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpUserGsonAdapter.java
Patch:
@@ -33,6 +33,9 @@ public WxMpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationC
     user.setGroupId(GsonHelper.getInteger(o, "groupid"));
     user.setTagIds(GsonHelper.getLongArray(o, "tagid_list"));
     user.setPrivileges(GsonHelper.getStringArray(o, "privilege"));
+    user.setSubscribeScene(GsonHelper.getString(o, "subscribe_scene"));
+    user.setQrScene(GsonHelper.getString(o, "qr_scene"));
+    user.setQrSceneStr(GsonHelper.getString(o, "qr_scene_str"));
 
     Integer sex = GsonHelper.getInteger(o, "sex");
     if (sex != null) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/xml/XStreamTransformer.java
Patch:
@@ -71,7 +71,6 @@ public static void register(Class<?> clz, XStream xStream) {
    */
   private static void registerClass(Class<?> clz) {
     XStream xstream = XStreamInitializer.getInstance();
-    xstream.setClassLoader(Thread.currentThread().getContextClassLoader());
 
     xstream.processAnnotations(clz);
     xstream.processAnnotations(getInnerClasses(clz));

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBaseAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.apache.commons.lang3.StringUtils;
 import org.testng.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBusyRetryTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceHttpClientImpl;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpJsAPITest.java
Patch:
@@ -1,7 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.util.crypto.SHA1;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpMiscAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpShortUrlAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpDataCubeServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.datacube.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpDeviceServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.device.WxDeviceQrCodeResult;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpKefuServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMassMessageServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMaterialServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMenuServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
 import me.chanjar.weixin.common.bean.menu.WxMenuButton;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpQrcodeServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpStoreServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpSubscribeMsgServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpTemplateMsgServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/test/TestConfigStorage.java
Patch:
@@ -52,10 +52,12 @@ public void setQrconnectRedirectUrl(String qrconnectRedirectUrl) {
     this.qrconnectRedirectUrl = qrconnectRedirectUrl;
   }
 
+  @Override
   public String getTemplateId() {
     return this.templateId;
   }
 
+  @Override
   public void setTemplateId(String templateId) {
     this.templateId = templateId;
   }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/DemoGuessNumberHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.api.WxMpMessageHandler;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/DemoImageHandler.java
Patch:
@@ -2,7 +2,7 @@
 
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.api.WxMpMessageHandler;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpOAuth2Servlet.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.open.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/007gzs">007</a>

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMpServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.open.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/util/xml/XStreamTransformer.java
Patch:
@@ -60,7 +60,6 @@ public static void register(Class<?> clz, XStream xStream) {
    */
   private static void registerClass(Class<?> clz) {
     XStream xstream = XStreamInitializer.getInstance();
-    xstream.setClassLoader(Thread.currentThread().getContextClassLoader());
 
     xstream.processAnnotations(clz);
     xstream.processAnnotations(getInnerClasses(clz));

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/entpay/EntPayBankResult.java
Patch:
@@ -46,6 +46,6 @@ public class EntPayBankResult extends BaseWxPayResult {
    * RMB：分
    */
   @XStreamAlias("cmms_amt")
-  private String cmmsAmount;
+  private Integer cmmsAmount;
 
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/order/WxPayMpOrderResult.java
Patch:
@@ -20,7 +20,7 @@ public class WxPayMpOrderResult {
   private String timeStamp;
   private String nonceStr;
   /**
-   * 由于package为java保留关键字，因此改为packageValue
+   * 由于package为java保留关键字，因此改为packageValue.
    */
   @XStreamAlias("package")
   private String packageValue;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/order/WxPayNativeOrderResult.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.binarywang.wxpay.bean.order;
 
+import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
 
@@ -12,7 +13,7 @@
  * @author <a href="https://github.com/binarywang">Binary Wang</a>
  */
 @Data
-@Builder
+@AllArgsConstructor
 public class WxPayNativeOrderResult {
   private String codeUrl;
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/BaseWxPayRequest.java
Patch:
@@ -6,7 +6,7 @@
 import com.thoughtworks.xstream.XStream;
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import lombok.Data;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.BeanUtils;
 import me.chanjar.weixin.common.util.ToStringUtils;
 import me.chanjar.weixin.common.util.xml.XStreamInitializer;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/BaseWxPayResult.java
Patch:
@@ -113,10 +113,10 @@ public abstract class BaseWxPayResult implements Serializable {
   /**
    * 将单位分转换成单位圆.
    *
-   * @param fee 将要被转换为元的分的数值
+   * @param fen 将要被转换为元的分的数值
    */
-  public static String feeToYuan(Integer fee) {
-    return new BigDecimal(Double.valueOf(fee) / 100).setScale(2, BigDecimal.ROUND_HALF_UP).toPlainString();
+  public static String fenToYuan(Integer fen) {
+    return new BigDecimal(Double.valueOf(fen) / 100).setScale(2, BigDecimal.ROUND_HALF_UP).toPlainString();
   }
 
   /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxErrorExceptionHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.common.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * WxErrorException处理器.

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/LogExceptionHandler.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/HttpResponseProxy.java
Patch:
@@ -1,8 +1,8 @@
 package me.chanjar.weixin.common.util.http;
 
 import jodd.http.HttpResponse;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import okhttp3.Response;
 import org.apache.http.Header;
 import org.apache.http.client.methods.CloseableHttpResponse;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/RequestExecutor.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.common.util.http;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.IOException;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheHttpClientSimpleGetRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 import org.apache.http.HttpHost;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheMediaDownloadRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.HttpResponseProxy;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheMediaUploadRequestExecutor.java
Patch:
@@ -1,16 +1,15 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import org.apache.http.HttpEntity;
 import org.apache.http.HttpHost;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.client.methods.HttpPost;
-import org.apache.http.entity.ContentType;
 import org.apache.http.entity.mime.HttpMultipartMode;
 import org.apache.http.entity.mime.MultipartEntityBuilder;
 import org.apache.http.impl.client.CloseableHttpClient;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/apache/ApacheSimplePostRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import org.apache.http.Consts;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaDownloadRequestExecutor.java
Patch:
@@ -5,8 +5,8 @@
 import jodd.http.HttpResponse;
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.HttpResponseProxy;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpMediaUploadRequestExecutor.java
Patch:
@@ -6,9 +6,9 @@
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimpleGetRequestExecutor.java
Patch:
@@ -3,8 +3,8 @@
 import jodd.http.*;
 import jodd.util.StringPool;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/jodd/JoddHttpSimplePostRequestExecutor.java
Patch:
@@ -5,8 +5,8 @@
 import jodd.http.HttpResponse;
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaDownloadRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.HttpResponseProxy;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaUploadRequestExecutor.java
Patch:
@@ -1,8 +1,8 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimpleGetRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpSimplePostRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.http.okhttp;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import okhttp3.*;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxErrorAdapter.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.common.util.json;
 
 import com.google.gson.*;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 
 import java.lang.reflect.Type;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxGsonBuilder.java
Patch:
@@ -4,7 +4,7 @@
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 
 public class WxGsonBuilder {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpAgentService.java
Patch:
@@ -1,8 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpAgent;
-import me.chanjar.weixin.cp.bean.WxCpDepart;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpDepartmentService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpDepart;
 
 import java.util.List;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMediaService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.File;
 import java.io.IOException;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMenuService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpOAuth2Service.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpUserDetail;
 
 /**

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpTagService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpTag;
 import me.chanjar.weixin.cp.bean.WxCpTagAddOrRemoveUsersResult;
 import me.chanjar.weixin.cp.bean.WxCpTagGetResult;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpUserService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpInviteResult;
 import me.chanjar.weixin.cp.bean.WxCpUser;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpDepartmentServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.cp.api.WxCpDepartmentService;
 import me.chanjar.weixin.cp.api.WxCpService;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMediaServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api.impl;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpMenuServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api.impl;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpMenuService;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpOAuth2ServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.URIUtil;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.cp.api.WxCpOAuth2Service;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpServiceAbstractImpl.java
Patch:
@@ -5,8 +5,8 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import me.chanjar.weixin.common.bean.WxJsapiSignature;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.StandardSessionManager;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpTagServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.gson.*;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.api.WxCpTagService;
 import me.chanjar.weixin.cp.bean.WxCpTag;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/WxCpUserServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.common.collect.Maps;
 import com.google.gson.*;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.api.WxCpUserService;
 import me.chanjar.weixin.cp.bean.WxCpInviteResult;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.message;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageInterceptor.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.message;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/message/WxCpMessageRouterRule.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.message;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpGsonBuilder.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.util.json.WxErrorAdapter;
 import me.chanjar.weixin.cp.bean.WxCpDepart;
 import me.chanjar.weixin.cp.bean.WxCpMessage;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBaseAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.impl.WxCpServiceImpl;
 import me.chanjar.weixin.cp.config.WxCpConfigStorage;
 import org.apache.commons.lang3.StringUtils;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBusyRetryTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.cp.api.impl.WxCpServiceImpl;
 import org.testng.annotations.DataProvider;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageAPITest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpMessage;
 import me.chanjar.weixin.cp.bean.WxCpMessageSendResult;
 import org.testng.annotations.*;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpMediaServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.TestConstants;
 import me.chanjar.weixin.cp.api.WxCpService;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpOAuth2ServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.cp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.bean.WxCpUserDetail;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/impl/WxCpTagServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.common.base.Splitter;
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.ApiTestModule;
 import me.chanjar.weixin.cp.api.WxCpService;
 import me.chanjar.weixin.cp.api.WxCpTagService;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpOAuth2Servlet.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.cp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.cp.api.WxCpService;
 
 import javax.servlet.http.HttpServlet;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaAnalysisService.java
Patch:
@@ -6,7 +6,7 @@
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitDistribution;
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitPage;
 import cn.binarywang.wx.miniapp.bean.analysis.WxMaVisitTrend;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.util.Date;
 import java.util.List;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaCodeService.java
Patch:
@@ -5,7 +5,7 @@
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeCommitRequest;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeSubmitAuditRequest;
 import cn.binarywang.wx.miniapp.bean.code.WxMaCodeVersionDistribution;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.util.List;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaMediaService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.api;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.File;
 import java.io.InputStream;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaMsgService.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.bean.WxMaKefuMessage;
 import cn.binarywang.wx.miniapp.bean.WxMaTemplateMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * <pre>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaQrcodeService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.api;
 
 import cn.binarywang.wx.miniapp.bean.WxMaCodeLineColor;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.File;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaService.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaSettingService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.binarywang.wx.miniapp.api;
 
 import cn.binarywang.wx.miniapp.bean.WxMaDomainAction;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * 小程序修改服务器地址、成员管理 API（大部分只能是第三方平台调用）

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaTemplateService.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryGetResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateListResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.util.List;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/WxMaUserService.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
 import cn.binarywang.wx.miniapp.bean.WxMaPhoneNumberInfo;
 import cn.binarywang.wx.miniapp.bean.WxMaUserInfo;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * 用户信息相关操作接口.

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaAnalysisServiceImpl.java
Patch:
@@ -12,7 +12,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.apache.commons.lang3.time.DateFormatUtils;
 
 import java.lang.reflect.Type;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaCodeServiceImpl.java
Patch:
@@ -11,8 +11,8 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.json.GsonHelper;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMediaServiceImpl.java
Patch:
@@ -2,9 +2,9 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaMediaService;
 import cn.binarywang.wx.miniapp.api.WxMaService;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.BaseMediaDownloadRequestExecutor;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMsgServiceImpl.java
Patch:
@@ -7,8 +7,8 @@
 import cn.binarywang.wx.miniapp.constant.WxMaConstants;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaQrcodeServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaWxcode;
 import cn.binarywang.wx.miniapp.bean.WxaCodeUnlimit;
 import cn.binarywang.wx.miniapp.util.http.QrCodeRequestExecutor;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.io.File;
 

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaSettingServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaSettingService;
 import cn.binarywang.wx.miniapp.bean.WxMaDomainAction;
 import cn.binarywang.wx.miniapp.util.json.WxMaGsonBuilder;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 import java.util.HashMap;
 import java.util.Map;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaTemplateServiceImpl.java
Patch:
@@ -6,8 +6,8 @@
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryGetResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateLibraryListResult;
 import cn.binarywang.wx.miniapp.bean.template.WxMaTemplateListResult;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 
 import java.util.HashMap;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaUserServiceImpl.java
Patch:
@@ -8,7 +8,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaPhoneNumberInfo;
 import cn.binarywang.wx.miniapp.bean.WxMaUserInfo;
 import cn.binarywang.wx.miniapp.util.crypt.WxMaCryptUtils;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/binarywang">Binary Wang</a>

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageHandler.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.Map;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageInterceptor.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.Map;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/message/WxMaMessageRouterRule.java
Patch:
@@ -3,7 +3,7 @@
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaMessage;
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 
 import java.util.ArrayList;

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -1,8 +1,8 @@
 package cn.binarywang.wx.miniapp.util.http;
 
 import cn.binarywang.wx.miniapp.bean.AbstractWxMaQrcodeWrapper;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaMediaServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.test.ApiTestModule;
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;
 

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaMsgServiceImplTest.java
Patch:
@@ -7,7 +7,7 @@
 import cn.binarywang.wx.miniapp.test.TestConfig;
 import com.google.common.collect.Lists;
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.testng.annotations.*;
 
 import java.text.SimpleDateFormat;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/api/impl/WxMaServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
 import cn.binarywang.wx.miniapp.test.ApiTestModule;
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import org.apache.commons.lang3.StringUtils;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;

File: weixin-java-miniapp/src/test/java/cn/binarywang/wx/miniapp/demo/WxMaDemoServer.java
Patch:
@@ -12,7 +12,7 @@
 import cn.binarywang.wx.miniapp.test.TestConfig;
 import com.google.common.collect.Lists;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import org.eclipse.jetty.server.Server;
 import org.eclipse.jetty.servlet.ServletHandler;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpCardService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.WxCardApiSignature;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpCardResult;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpDataCubeService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.datacube.*;
 
 import java.util.Date;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpDeviceService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.device.*;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpKefuService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.kefu.WxMpKefuMessage;
 import me.chanjar.weixin.mp.bean.kefu.request.WxMpKfAccountRequest;
 import me.chanjar.weixin.mp.bean.kefu.result.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMassMessageService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.WxMpMassSendResult;
 import me.chanjar.weixin.mp.bean.result.WxMpMassUploadResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMaterialService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.material.*;
 
 import java.io.File;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMemberCardService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardActivatedMessage;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateMessage;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMenuService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;
 import me.chanjar.weixin.mp.bean.menu.WxMpMenu;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageInterceptor.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouterRule.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpQrcodeService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;
 
 import java.io.File;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.WxJsapiSignature;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpShakeService.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.WxMpShakeInfoResult;
 import me.chanjar.weixin.mp.bean.WxMpShakeQuery;
 import me.chanjar.weixin.mp.bean.shake.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpStoreService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreInfo;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreListResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpSubscribeMsgService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.subscribe.WxMpSubscribeMessage;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpTemplateMsgService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplate;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplateIndustry;
 import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserBlacklistService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.result.WxMpUserBlacklistGetResult;
 
 import java.util.List;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.WxMpUserQuery;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.bean.result.WxMpUserList;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserTagService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.bean.tag.WxTagListUser;
 import me.chanjar.weixin.mp.bean.tag.WxUserTag;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpCardServiceImpl.java
Patch:
@@ -6,8 +6,8 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.reflect.TypeToken;
 import me.chanjar.weixin.common.bean.WxCardApiSignature;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.RandomUtils;
 import me.chanjar.weixin.common.util.crypto.SHA1;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpDataCubeServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpDataCubeService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.datacube.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpDeviceServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpDeviceService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.device.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpKefuServiceImpl.java
Patch:
@@ -1,9 +1,9 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.error.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.MediaUploadRequestExecutor;
 import me.chanjar.weixin.mp.api.WxMpKefuService;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMassMessageServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMassMessageService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.*;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMemberCardServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMemberCardService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardActivatedMessage;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMenuServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMenuService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpQrcodeServiceImpl.java
Patch:
@@ -1,8 +1,8 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpQrcodeService;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceBaseImpl.java
Patch:
@@ -5,8 +5,8 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import me.chanjar.weixin.common.bean.WxJsapiSignature;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.StandardSessionManager;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.DataUtils;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpSubscribeMsgServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.URIUtil;
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserBlacklistServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.gson.Gson;
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.WxMpUserBlacklistService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.gson.JsonObject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.WxMpUserService;
 import me.chanjar.weixin.mp.bean.WxMpUserQuery;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.util.http;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/apache/ApacheMaterialVoiceAndImageDownloadRequestExecutor.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.util.http.apache;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.http.apache.InputStreamResponseHandler;
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/jodd/JoddMaterialVoiceAndImageDownloadRequestExecutor.java
Patch:
@@ -6,8 +6,8 @@
 import jodd.http.ProxyInfo;
 import jodd.util.StringPool;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 import me.chanjar.weixin.mp.util.http.MaterialVoiceAndImageDownloadRequestExecutor;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBaseAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.apache.commons.lang3.StringUtils;
 import org.testng.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBusyRetryTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceHttpClientImpl;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpJsAPITest.java
Patch:
@@ -1,7 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.util.crypto.SHA1;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpMiscAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpShortUrlAPITest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import org.testng.*;
 import org.testng.annotations.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpDataCubeServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.datacube.*;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpDeviceServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.device.WxDeviceQrCodeResult;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpKefuServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMassMessageServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMaterialServiceImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpMenuServiceImplTest.java
Patch:
@@ -4,7 +4,7 @@
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.menu.WxMenu;
 import me.chanjar.weixin.common.bean.menu.WxMenuButton;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.menu.WxMpGetSelfMenuInfoResult;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpQrcodeServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpServiceImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.google.inject.Inject;
 import me.chanjar.weixin.common.api.WxConsts;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpStoreServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpSubscribeMsgServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpTemplateMsgServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImplTest.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.mp.api.impl;
 
 import com.google.inject.Inject;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.test.ApiTestModule;
 import me.chanjar.weixin.mp.api.test.TestConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/DemoGuessNumberHandler.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.api.WxMpMessageHandler;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/DemoImageHandler.java
Patch:
@@ -2,7 +2,7 @@
 
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.api.WxMpMessageHandler;
 import me.chanjar.weixin.mp.api.WxMpService;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpOAuth2Servlet.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.mp.demo;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenComponentService.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.binarywang.wx.miniapp.api.WxMaService;
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 import me.chanjar.weixin.open.bean.WxOpenMaCodeTemplate;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenService.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.open.api;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 
 /**
  * @author <a href="https://github.com/007gzs">007</a>

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenComponentServiceImpl.java
Patch:
@@ -5,8 +5,8 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.crypto.SHA1;
 import me.chanjar.weixin.common.util.http.URIUtil;
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMaServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl;
 import cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult;
 import cn.binarywang.wx.miniapp.config.WxMaConfig;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.open.api.WxOpenComponentService;
 
 /**

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMaUserServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.binarywang.wx.miniapp.bean.WxMaUserInfo;
 import cn.binarywang.wx.miniapp.util.crypt.WxMaCryptUtils;
 import com.google.common.base.Joiner;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.open.api.WxOpenComponentService;
 import org.apache.commons.codec.digest.DigestUtils;
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMpServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.open.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenServiceAbstractImpl.java
Patch:
@@ -1,7 +1,7 @@
 package me.chanjar.weixin.open.api.impl;
 
-import me.chanjar.weixin.common.bean.result.WxError;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxError;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.RequestHttp;
 import me.chanjar.weixin.open.api.WxOpenComponentService;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenServiceApacheHttpClientImpl.java
Patch:
@@ -1,6 +1,6 @@
 package me.chanjar.weixin.open.api.impl;
 
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.http.HttpType;
 import me.chanjar.weixin.common.util.http.SimpleGetRequestExecutor;
 import me.chanjar.weixin.common.util.http.SimplePostRequestExecutor;

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/BaseWxPayRequest.java
Patch:
@@ -6,7 +6,7 @@
 import com.thoughtworks.xstream.XStream;
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import lombok.Data;
-import me.chanjar.weixin.common.exception.WxErrorException;
+import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.common.util.BeanUtils;
 import me.chanjar.weixin.common.util.ToStringUtils;
 import me.chanjar.weixin.common.util.xml.XStreamInitializer;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/test/TestConfigStorage.java
Patch:
@@ -52,10 +52,12 @@ public void setQrconnectRedirectUrl(String qrconnectRedirectUrl) {
     this.qrconnectRedirectUrl = qrconnectRedirectUrl;
   }
 
+  @Override
   public String getTemplateId() {
     return this.templateId;
   }
 
+  @Override
   public void setTemplateId(String templateId) {
     this.templateId = templateId;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutImageMessage.java
Patch:
@@ -3,11 +3,13 @@
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamMediaIdConverter;
 
 @XStreamAlias("xml")
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class WxCpXmlOutImageMessage extends WxCpXmlOutMessage {
   private static final long serialVersionUID = -1099446240667237313L;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutTextMessage.java
Patch:
@@ -3,11 +3,13 @@
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamCDataConverter;
 
 @XStreamAlias("xml")
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class WxCpXmlOutTextMessage extends WxCpXmlOutMessage {
   private static final long serialVersionUID = 2569239617185930232L;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutVideoMessage.java
Patch:
@@ -3,11 +3,13 @@
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamCDataConverter;
 
 @XStreamAlias("xml")
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class WxCpXmlOutVideoMessage extends WxCpXmlOutMessage {
   private static final long serialVersionUID = -8672761162722733622L;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutVoiceMessage.java
Patch:
@@ -3,11 +3,13 @@
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamMediaIdConverter;
 
 @XStreamAlias("xml")
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class WxCpXmlOutVoiceMessage extends WxCpXmlOutMessage {
   private static final long serialVersionUID = -7947384031546099340L;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -130,7 +130,7 @@ public WxMpMessageRouterRule rule() {
    * 处理微信消息
    */
   public WxMpXmlOutMessage route(final WxMpXmlMessage wxMessage, final Map<String, Object> context) {
-    return route(wxMessage, context);
+    return route(wxMessage, context, null);
   }
   /**
    * 处理微信消息

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenComponentService.java
Patch:
@@ -29,11 +29,11 @@ public interface WxOpenComponentService {
   /**
    * 用code换取oauth2的access token
    */
-  String OAUTH2_ACCESS_TOKEN_URL = "https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&code=%s&grant_type=authorization_code&component_appid=%s";
+  String OAUTH2_ACCESS_TOKEN_URL = "https://api.weixin.qq.com/sns/oauth2/component/access_token?appid=%s&code=%s&grant_type=authorization_code&component_appid=%s";
   /**
    * 刷新oauth2的access token
    */
-  String OAUTH2_REFRESH_TOKEN_URL = "https://api.weixin.qq.com/sns/oauth2/refresh_token?appid=%s&grant_type=refresh_token&refresh_token=%s&component_appid==%s";
+  String OAUTH2_REFRESH_TOKEN_URL = "https://api.weixin.qq.com/sns/oauth2/component/refresh_token?appid=%s&grant_type=refresh_token&refresh_token=%s&component_appid==%s";
 
   WxMpService getWxMpServiceByAppid(String appid);
 

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenInMemoryConfigStorage.java
Patch:
@@ -329,7 +329,7 @@ public String getSecret() {
 
     @Override
     public String getToken() {
-      return null;
+      return wxOpenConfigStorage.getComponentToken();
     }
 
     @Override
@@ -340,7 +340,7 @@ public long getExpiresTime() {
 
     @Override
     public String getAesKey() {
-      return null;
+      return wxOpenConfigStorage.getComponentAesKey();
     }
 
     @Override

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMpServiceImpl.java
Patch:
@@ -9,7 +9,7 @@
 /**
  * @author <a href="https://github.com/007gzs">007</a>
  */
-public class WxOpenMpServiceImpl extends WxMpServiceImpl {
+/* package */ class WxOpenMpServiceImpl extends WxMpServiceImpl {
   private WxOpenComponentService wxOpenComponentService;
   private WxMpConfigStorage wxMpConfigStorage;
   private String appId;

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/WxOpenComponentService.java
Patch:
@@ -17,10 +17,10 @@ public interface WxOpenComponentService {
   String API_COMPONENT_TOKEN_URL = "https://api.weixin.qq.com/cgi-bin/component/api_component_token";
   String API_CREATE_PREAUTHCODE_URL = "https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode";
   String API_QUERY_AUTH_URL = "https://api.weixin.qq.com/cgi-bin/component/api_query_auth";
-  String API_AUTHORIZER_TOKEN_URL = "https://api.weixin.qq.com /cgi-bin/component/api_authorizer_token";
+  String API_AUTHORIZER_TOKEN_URL = "https://api.weixin.qq.com/cgi-bin/component/api_authorizer_token";
   String API_GET_AUTHORIZER_INFO_URL = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info";
   String API_GET_AUTHORIZER_OPTION_URL = "https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_option";
-  String API_SET_AUTHORIZER_OPTION_URL = "https://api.weixin.qq.com/cgi-bin/component/ api_set_authorizer_option";
+  String API_SET_AUTHORIZER_OPTION_URL = "https://api.weixin.qq.com/cgi-bin/component/api_set_authorizer_option";
 
 
   String COMPONENT_LOGIN_PAGE_URL = "https://mp.weixin.qq.com/cgi-bin/componentloginpage?component_appid=%s&pre_auth_code=%s&redirect_uri=%s";

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/api/impl/WxOpenMpServiceImpl.java
Patch:
@@ -18,6 +18,7 @@ public WxOpenMpServiceImpl(WxOpenComponentService wxOpenComponentService, String
     this.wxOpenComponentService = wxOpenComponentService;
     this.appId = appId;
     this.wxMpConfigStorage = wxMpConfigStorage;
+    initHttp();
   }
 
   @Override

File: weixin-java-open/src/main/java/me/chanjar/weixin/open/bean/message/WxOpenXmlMessage.java
Patch:
@@ -46,7 +46,6 @@ public class WxOpenXmlMessage implements Serializable {
   private String authorizationCode;
 
   @XStreamAlias("AuthorizationCodeExpiredTime")
-  @XStreamConverter(value = XStreamCDataConverter.class)
   private Long authorizationCodeExpiredTime;
 
   @XStreamAlias("PreAuthCode")

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/api/impl/WxMaMediaServiceImpl.java
Patch:
@@ -31,7 +31,7 @@ public WxMediaUploadResult uploadMedia(String mediaType, String fileType, InputS
     try {
       return this.uploadMedia(mediaType, FileUtils.createTmpFile(inputStream, UUID.randomUUID().toString(), fileType));
     } catch (IOException e) {
-      throw new WxErrorException(WxError.newBuilder().setErrorMsg(e.getMessage()).build(), e);
+      throw new WxErrorException(WxError.builder().errorMsg(e.getMessage()).build(), e);
     }
   }
 
@@ -48,7 +48,7 @@ public File getMedia(String mediaId) throws WxErrorException {
         .create(this.wxMaService.getRequestHttp(), Files.createTempDirectory("wxma").toFile());
       return this.wxMaService.execute(executor, MEDIA_GET_URL, "media_id=" + mediaId);
     } catch (IOException e) {
-      throw new WxErrorException(WxError.newBuilder().setErrorMsg(e.getMessage()).build(), e);
+      throw new WxErrorException(WxError.builder().errorMsg(e.getMessage()).build(), e);
     }
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMassMessageService.java
Patch:
@@ -94,7 +94,7 @@ public interface WxMpMassMessageService {
    *
    * @return wxMpMassSendResult
    */
-  WxMpMassSendResult massMessagePreview(WxMpMassPreviewMessage wxMpMassPreviewMessage) throws Exception;
+  WxMpMassSendResult massMessagePreview(WxMpMassPreviewMessage wxMpMassPreviewMessage) throws WxErrorException;
 
   /**
    * <pre>
@@ -114,6 +114,6 @@ public interface WxMpMassMessageService {
    * @param msgId        发送出去的消息ID
    * @param articleIndex 要删除的文章在图文消息中的位置，第一篇编号为1，该字段不填或填0会删除全部文章
    */
-  void delete(Integer msgId, Integer articleIndex) throws Exception;
+  void delete(Integer msgId, Integer articleIndex) throws WxErrorException;
 
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpMassMessageServiceImpl.java
Patch:
@@ -51,13 +51,13 @@ public WxMpMassSendResult massOpenIdsMessageSend(WxMpMassOpenIdsMessage message)
   }
 
   @Override
-  public WxMpMassSendResult massMessagePreview(WxMpMassPreviewMessage wxMpMassPreviewMessage) throws Exception {
+  public WxMpMassSendResult massMessagePreview(WxMpMassPreviewMessage wxMpMassPreviewMessage) throws WxErrorException {
     String responseContent = this.wxMpService.post(MESSAGE_MASS_PREVIEW_URL, wxMpMassPreviewMessage.toJson());
     return WxMpMassSendResult.fromJson(responseContent);
   }
 
   @Override
-  public void delete(Integer msgId, Integer articleIndex) throws Exception {
+  public void delete(Integer msgId, Integer articleIndex) throws WxErrorException {
     JsonObject jsonObject = new JsonObject();
     jsonObject.addProperty("msg_id", msgId);
     jsonObject.addProperty("article_idx", articleIndex);

File: weixin-java-miniapp/src/main/java/cn/binarywang/wx/miniapp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -48,7 +48,8 @@ public File execute(String uri, AbstractWxMaQrcodeWrapper ticket) throws WxError
          InputStream inputStream = InputStreamResponseHandler.INSTANCE.handleResponse(response);) {
       Header[] contentTypeHeader = response.getHeaders("Content-Type");
       if (contentTypeHeader != null && contentTypeHeader.length > 0
-        && ContentType.APPLICATION_JSON.getMimeType().equals(contentTypeHeader[0].getValue())) {
+        && ContentType.APPLICATION_JSON.getMimeType()
+        .equals(ContentType.parse(contentTypeHeader[0].getValue()).getMimeType())) {
         String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);
         throw new WxErrorException(WxError.fromJson(responseContent));
       }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/apache/ApacheQrCodeRequestExecutor.java
Patch:
@@ -52,7 +52,8 @@ public File execute(String uri, WxMpQrCodeTicket ticket) throws WxErrorException
       Header[] contentTypeHeader = response.getHeaders("Content-Type");
       if (contentTypeHeader != null && contentTypeHeader.length > 0) {
         // 出错
-        if (ContentType.TEXT_PLAIN.getMimeType().equals(contentTypeHeader[0].getValue())) {
+        if (ContentType.TEXT_PLAIN.getMimeType()
+          .equals(ContentType.parse(contentTypeHeader[0].getValue()).getMimeType())) {
           String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);
           throw new WxErrorException(WxError.fromJson(responseContent));
         }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/menu/WxMpSelfMenuInfo.java
Patch:
@@ -38,7 +38,7 @@ public void setButtons(List<WxMpSelfMenuButton> buttons) {
 
   public static class WxMpSelfMenuButton implements Serializable {
     private static final long serialVersionUID = -4426602953309048341L;
-    
+
     /**
      * <pre>
      * 菜单的类型，公众平台官网上能够设置的菜单类型有view（跳转网页）、text（返回文本，下同）、img、photo、video、voice。

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/WxPayRefundRequest.java
Patch:
@@ -165,12 +165,12 @@ public class WxPayRefundRequest extends WxPayBaseRequest {
   private String refundDesc;
 
   @Override
-  public void checkAndSign(WxPayConfig config) throws WxPayException {
+  public void checkAndSign(WxPayConfig config, boolean isIgnoreSignType) throws WxPayException {
     if (StringUtils.isBlank(this.getOpUserId())) {
       this.setOpUserId(config.getMchId());
     }
 
-    super.checkAndSign(config);
+    super.checkAndSign(config, isIgnoreSignType);
   }
 
   @Override

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/request/WxPayUnifiedOrderRequest.java
Patch:
@@ -349,7 +349,7 @@ protected void checkConstraints() throws WxPayException {
   }
 
   @Override
-  public void checkAndSign(WxPayConfig config) throws WxPayException {
+  public void checkAndSign(WxPayConfig config, boolean isIgnoreSignType) throws WxPayException {
     if (StringUtils.isBlank(this.getNotifyURL())) {
       this.setNotifyURL(config.getNotifyUrl());
     }
@@ -358,7 +358,7 @@ public void checkAndSign(WxPayConfig config) throws WxPayException {
       this.setTradeType(config.getTradeType());
     }
 
-    super.checkAndSign(config);
+    super.checkAndSign(config, isIgnoreSignType);
   }
 
 }

File: weixin-java-pay/src/main/java/com/github/binarywang/wxpay/bean/result/WxPayBaseResult.java
Patch:
@@ -216,12 +216,13 @@ protected Integer getXmlValueAsInt(String... path) {
   /**
    * 校验返回结果签名
    *
+   * @param signType     签名类型
    * @param checkSuccess 是否同时检查结果是否成功
    */
-  public void checkResult(WxPayServiceAbstractImpl wxPayService, boolean checkSuccess) throws WxPayException {
+  public void checkResult(WxPayServiceAbstractImpl wxPayService, String signType, boolean checkSuccess) throws WxPayException {
     //校验返回结果签名
     Map<String, String> map = toMap();
-    if (getSign() != null && !SignUtils.checkSign(map, wxPayService.getConfig().getMchKey())) {
+    if (getSign() != null && !SignUtils.checkSign(map, signType, wxPayService.getConfig().getMchKey())) {
       this.getLogger().debug("校验结果签名失败，参数：{}", map);
       throw new WxPayException("参数格式校验错误！");
     }

File: weixin-java-pay/src/test/java/com/github/binarywang/wxpay/util/SignUtilsTest.java
Patch:
@@ -20,7 +20,7 @@ public class SignUtilsTest {
   public void testCreateSign() throws Exception {
     String signKey = "192006250b4c09247ec02edce69f6a2d";
     String message = "appid=wxd930ea5d5a258f4f&body=test&device_info=1000&mch_id=10000100&nonce_str=ibuaiVcKdpRxkhJA";
-    assertEquals(SignUtils.createSign((Splitter.on("&").withKeyValueSeparator("=").split(message)), signKey, null),
+    assertEquals(SignUtils.createSign((Splitter.on("&").withKeyValueSeparator("=").split(message)), null, signKey, false),
       "9A0A8659F005D6984697E2CA0A9CF3B7");
   }
 
@@ -29,7 +29,7 @@ public void testCreateSign_HMACSHA256() throws Exception {
     String signKey = "192006250b4c09247ec02edce69f6a2d";
     final String message = "appid=wxd930ea5d5a258f4f&body=test&device_info=1000&mch_id=10000100&nonce_str=ibuaiVcKdpRxkhJA";
     String sign = SignUtils.createSign(Splitter.on("&").withKeyValueSeparator("=").split(message),
-      signKey, HMAC_SHA256);
+      HMAC_SHA256, signKey, false);
     assertEquals(sign, "6A9AE1657590FD6257D693A078E1C3E4BB6BA4DC30B23E0EE2496E54170DACD6");
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/fs/FileUtils.java
Patch:
@@ -24,7 +24,7 @@ public static File createTmpFile(InputStream inputStream, String name, String ex
       tmpFile = File.createTempFile(name, '.' + ext, tmpDirFile);
     }
 
-//    tmpFile.deleteOnExit();
+    tmpFile.deleteOnExit();
 
     try (FileOutputStream fos = new FileOutputStream(tmpFile)) {
       int read = 0;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaDownloadRequestExecutor.java
Patch:
@@ -62,6 +62,7 @@ public File execute(String uri, String queryParam) throws WxErrorException, IOEx
     try (BufferedSink sink = Okio.buffer(Okio.sink(file))) {
       sink.writeAll(response.body().source());
     }
+    file.deleteOnExit();
     return file;
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/okhttp/OkhttpQrCodeRequestExecutor.java
Patch:
@@ -46,6 +46,8 @@ public File execute(String uri, WxMpQrCodeTicket data) throws WxErrorException,
     try (BufferedSink sink = Okio.buffer(Okio.sink(temp))) {
       sink.writeAll(response.body().source());
     }
+    temp.deleteOnExit();
+
     return temp;
   }
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/AbstractWxMpServiceImpl.java
Patch:
@@ -66,10 +66,9 @@ public String getJsapiTicket() throws WxErrorException {
 
   @Override
   public String getJsapiTicket(boolean forceRefresh) throws WxErrorException {
-    Lock lock = this.getWxMpConfigStorage().getJsapiTicketLock();
+    Lock lock = this.getWxMpConfigStorage().getAccessTokenLock();
     try {
       lock.lock();
-
       if (forceRefresh) {
         this.getWxMpConfigStorage().expireJsapiTicket();
       }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/test/ApiTestModule.java
Patch:
@@ -7,6 +7,7 @@
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceApacheHttpClientImpl;
+import me.chanjar.weixin.mp.api.impl.WxMpServiceOkHttpImpl;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -19,7 +20,7 @@ public void configure(Binder binder) {
     try (InputStream is1 = ClassLoader.getSystemResourceAsStream("test-config.xml")) {
       TestConfigStorage config = this.fromXml(TestConfigStorage.class, is1);
       config.setAccessTokenLock(new ReentrantLock());
-      WxMpService wxService = new WxMpServiceApacheHttpClientImpl();
+      WxMpService wxService = new WxMpServiceOkHttpImpl();
       wxService.setWxMpConfigStorage(config);
 
       binder.bind(WxMpService.class).toInstance(wxService);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -6,6 +6,7 @@
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserCumulate;
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserSummary;
 import me.chanjar.weixin.mp.bean.kefu.WxMpKefuMessage;
+import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateResult;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUserInfoResult;
 import me.chanjar.weixin.mp.bean.material.*;
 import me.chanjar.weixin.mp.bean.result.*;
@@ -51,6 +52,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpTemplateIndustry.class, new WxMpIndustryGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpUserBlacklistGetResult.class, new WxUserBlacklistGetResultGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMemberCardUserInfoResult.class, new WxMpMemberCardUserInfoResultGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpMemberCardUpdateResult.class, new WxMpMemberCardUpdateResultGsonAdapter());
   }
 
   public static Gson create() {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/annotation/Required.java
Patch:
@@ -6,9 +6,10 @@
 import java.lang.annotation.Target;
 
 /**
+ * <pre>
  * 标识某个字段是否是必填的
- * <p>
  * Created by Binary Wang on 2016/9/25.
+ * </pre>
  *
  * @author binarywang (https://github.com/binarywang)
  */

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/fs/FileUtils.java
Patch:
@@ -24,7 +24,7 @@ public static File createTmpFile(InputStream inputStream, String name, String ex
       tmpFile = File.createTempFile(name, '.' + ext, tmpDirFile);
     }
 
-//    tmpFile.deleteOnExit();
+    tmpFile.deleteOnExit();
 
     try (FileOutputStream fos = new FileOutputStream(tmpFile)) {
       int read = 0;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/okhttp/OkHttpMediaDownloadRequestExecutor.java
Patch:
@@ -62,6 +62,7 @@ public File execute(String uri, String queryParam) throws WxErrorException, IOEx
     try (BufferedSink sink = Okio.buffer(Okio.sink(file))) {
       sink.writeAll(response.body().source());
     }
+    file.deleteOnExit();
     return file;
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/okhttp/OkhttpQrCodeRequestExecutor.java
Patch:
@@ -46,6 +46,8 @@ public File execute(String uri, WxMpQrCodeTicket data) throws WxErrorException,
     try (BufferedSink sink = Okio.buffer(Okio.sink(temp))) {
       sink.writeAll(response.body().source());
     }
+    temp.deleteOnExit();
+
     return temp;
   }
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/AbstractWxMpServiceImpl.java
Patch:
@@ -66,10 +66,9 @@ public String getJsapiTicket() throws WxErrorException {
 
   @Override
   public String getJsapiTicket(boolean forceRefresh) throws WxErrorException {
-    Lock lock = this.getWxMpConfigStorage().getJsapiTicketLock();
+    Lock lock = this.getWxMpConfigStorage().getAccessTokenLock();
     try {
       lock.lock();
-
       if (forceRefresh) {
         this.getWxMpConfigStorage().expireJsapiTicket();
       }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/test/ApiTestModule.java
Patch:
@@ -7,6 +7,7 @@
 import me.chanjar.weixin.mp.api.WxMpConfigStorage;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.api.impl.WxMpServiceApacheHttpClientImpl;
+import me.chanjar.weixin.mp.api.impl.WxMpServiceOkHttpImpl;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -19,7 +20,7 @@ public void configure(Binder binder) {
     try (InputStream is1 = ClassLoader.getSystemResourceAsStream("test-config.xml")) {
       TestConfigStorage config = this.fromXml(TestConfigStorage.class, is1);
       config.setAccessTokenLock(new ReentrantLock());
-      WxMpService wxService = new WxMpServiceApacheHttpClientImpl();
+      WxMpService wxService = new WxMpServiceOkHttpImpl();
       wxService.setWxMpConfigStorage(config);
 
       binder.bind(WxMpService.class).toInstance(wxService);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -6,6 +6,7 @@
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserCumulate;
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserSummary;
 import me.chanjar.weixin.mp.bean.kefu.WxMpKefuMessage;
+import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUpdateResult;
 import me.chanjar.weixin.mp.bean.membercard.WxMpMemberCardUserInfoResult;
 import me.chanjar.weixin.mp.bean.material.*;
 import me.chanjar.weixin.mp.bean.result.*;
@@ -51,6 +52,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpTemplateIndustry.class, new WxMpIndustryGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpUserBlacklistGetResult.class, new WxUserBlacklistGetResultGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMemberCardUserInfoResult.class, new WxMpMemberCardUserInfoResultGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpMemberCardUpdateResult.class, new WxMpMemberCardUpdateResultGsonAdapter());
   }
 
   public static Gson create() {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/annotation/Required.java
Patch:
@@ -6,9 +6,10 @@
 import java.lang.annotation.Target;
 
 /**
+ * <pre>
  * 标识某个字段是否是必填的
- * <p>
  * Created by Binary Wang on 2016/9/25.
+ * </pre>
  *
  * @author binarywang (https://github.com/binarywang)
  */

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/SimpleGetRequestExecutor.java
Patch:
@@ -12,11 +12,10 @@
 public abstract class SimpleGetRequestExecutor<H, P> implements RequestExecutor<String, String> {
   protected RequestHttp<H, P> requestHttp;
 
-  public SimpleGetRequestExecutor(RequestHttp requestHttp) {
+  public SimpleGetRequestExecutor(RequestHttp<H, P> requestHttp) {
     this.requestHttp = requestHttp;
   }
 
-
   public static RequestExecutor<String, String> create(RequestHttp requestHttp) {
     switch (requestHttp.getRequestType()) {
       case APACHE_HTTP:
@@ -26,7 +25,7 @@ public static RequestExecutor<String, String> create(RequestHttp requestHttp) {
       case OK_HTTP:
         return new OkHttpSimpleGetRequestExecutor(requestHttp);
       default:
-        return null;
+        throw new IllegalArgumentException("非法请求参数");
     }
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/AbstractWxMpServiceImpl.java
Patch:
@@ -210,8 +210,7 @@ public boolean oauth2validateAccessToken(WxMpOAuth2AccessToken oAuth2AccessToken
     String url = String.format(WxMpService.OAUTH2_VALIDATE_TOKEN_URL, oAuth2AccessToken.getAccessToken(), oAuth2AccessToken.getOpenId());
 
     try {
-      RequestExecutor<String, String> executor = SimpleGetRequestExecutor.create(this);
-      executor.execute(url, null);
+      SimpleGetRequestExecutor.create(this).execute(url, null);
     } catch (IOException e) {
       throw new RuntimeException(e);
     } catch (WxErrorException e) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/AbstractWxCpServiceImpl.java
Patch:
@@ -143,7 +143,7 @@ public void menuCreate(WxMenu menu) throws WxErrorException {
   @Override
   public void menuCreate(Integer agentId, WxMenu menu) throws WxErrorException {
     String url = "https://qyapi.weixin.qq.com/cgi-bin/menu/create?agentid="
-      + this.configStorage.getAgentId();
+      + agentId;
     post(url, menu.toJson());
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/apache/WxCpServiceImpl.java
Patch:
@@ -8,8 +8,8 @@
 import me.chanjar.weixin.common.util.http.apache.ApacheHttpClientBuilder;
 import me.chanjar.weixin.common.util.http.apache.DefaultApacheHttpClientBuilder;
 import me.chanjar.weixin.cp.api.WxCpConfigStorage;
-import me.chanjar.weixin.cp.api.impl.AbstractWxCpService;
 
+import me.chanjar.weixin.cp.api.impl.AbstractWxCpServiceImpl;
 import org.apache.http.HttpHost;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.methods.CloseableHttpResponse;
@@ -19,7 +19,7 @@
 
 import java.io.IOException;
 
-public class WxCpServiceImpl extends AbstractWxCpService<CloseableHttpClient, HttpHost> {
+public class WxCpServiceImpl extends AbstractWxCpServiceImpl<CloseableHttpClient, HttpHost> {
   protected CloseableHttpClient httpClient;
   protected HttpHost httpProxy;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/MediaDownloadRequestExecutor.java
Patch:
@@ -213,7 +213,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     String contentType = response.header("Content-Type");
     if (contentType != null && contentType.startsWith("application/json")) {
       // application/json; encoding=utf-8 下载媒体文件出错
-      throw new WxErrorException(WxError.fromJson(response.body().toString()));
+      throw new WxErrorException(WxError.fromJson(response.body().string()));
     }
 
     String fileName = getFileName(response);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/MediaUploadRequestExecutor.java
Patch:
@@ -136,7 +136,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Request request = new Request.Builder().url(uri).post(body).build();
 
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/SimpleGetRequestExecutor.java
Patch:
@@ -141,7 +141,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Request request = new Request.Builder().url(uri).build();
 
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/SimplePostRequestExecutor.java
Patch:
@@ -156,7 +156,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Request request = new Request.Builder().url(uri).post(body).build();
 
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/MaterialDeleteRequestExecutor.java
Patch:
@@ -102,7 +102,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     RequestBody requestBody = new FormBody.Builder().add("media_id", materialId).build();
     Request request = new Request.Builder().url(uri).post(requestBody).build();
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/MaterialNewsInfoRequestExecutor.java
Patch:
@@ -104,7 +104,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Request request = new Request.Builder().url(uri).post(requestBody).build();
 
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
 
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/MaterialUploadRequestExecutor.java
Patch:
@@ -104,7 +104,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     RequestBody body =bodyBuilder.build();
     Request request = new Request.Builder().url(uri).post(body).build();
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/MaterialVideoInfoRequestExecutor.java
Patch:
@@ -77,7 +77,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     RequestBody requestBody =new FormBody.Builder().add("media_id", materialId).build();
     Request request = new Request.Builder().url(uri).post(requestBody).build();
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/MediaImgUploadRequestExecutor.java
Patch:
@@ -90,7 +90,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Request request = new Request.Builder().url(uri).post(body).build();
 
     Response response = client.newCall(request).execute();
-    String responseContent = response.body().toString();
+    String responseContent = response.body().string();
     WxError error = WxError.fromJson(responseContent);
     if (error.getErrorCode() != 0) {
       throw new WxErrorException(error);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -92,7 +92,7 @@ public Request authenticate(Route route, Response response) throws IOException {
     Response response = client.newCall(request).execute();
     String contentTypeHeader = response.header("Content-Type");
     if (MimeTypes.MIME_TEXT_PLAIN.equals(contentTypeHeader)) {
-      String responseContent = response.body().toString();
+      String responseContent = response.body().string();
       throw new WxErrorException(WxError.fromJson(responseContent));
     }
     try (InputStream inputStream = new ByteArrayInputStream(response.body().bytes())) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpCardService.java
Patch:
@@ -12,15 +12,13 @@ public interface WxMpCardService<H, P> {
 
   /**
    * 得到WxMpService
-   * @return
    */
   WxMpService getWxMpService();
 
   /**
    * 获得卡券api_ticket，不强制刷新卡券api_ticket
    *
    * @return 卡券api_ticket
-   * @throws WxErrorException
    * @see #getCardApiTicket(boolean)
    */
   String getCardApiTicket() throws WxErrorException;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/impl/AbstractWxCpServiceImpl.java
Patch:
@@ -521,7 +521,7 @@ public <T, E> T execute(RequestExecutor<T, E> executor, String uri, E data) thro
     throw new RuntimeException("微信服务端异常，超出重试次数");
   }
 
-  private synchronized <T, E> T executeInternal(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
+  protected synchronized <T, E> T executeInternal(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
     if (uri.contains("access_token=")) {
       throw new IllegalArgumentException("uri参数中不允许有access_token: " + uri);
     }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpMassPreviewMessageGsonAdapter.java
Patch:
@@ -16,7 +16,7 @@ public class WxMpMassPreviewMessageGsonAdapter implements JsonSerializer<WxMpMas
   @Override
   public JsonElement serialize(WxMpMassPreviewMessage wxMpMassPreviewMessage, Type type, JsonSerializationContext jsonSerializationContext) {
     JsonObject jsonObject = new JsonObject();
-    jsonObject.addProperty("towxname", wxMpMassPreviewMessage.getToWxUsername());
+    jsonObject.addProperty("towxname", wxMpMassPreviewMessage.getToWxUserName());
     jsonObject.addProperty("touser", wxMpMassPreviewMessage.getToWxUserOpenid());
     if (WxConsts.MASS_MSG_NEWS.equals(wxMpMassPreviewMessage.getMsgType())) {
       JsonObject news = new JsonObject();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpQrcodeService.java
Patch:
@@ -6,8 +6,10 @@
 import java.io.File;
 
 /**
+ * <pre>
  * 二维码相关操作接口
  * 文档地址：https://mp.weixin.qq.com/wiki?action=doc&id=mp1443433542&t=0.9274944716856435
+ * </pre>
  * @author Binary Wang
  */
 public interface WxMpQrcodeService {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpQrcodeServiceImpl.java
Patch:
@@ -43,9 +43,8 @@ public WxMpQrCodeTicket qrCodeCreateTmpTicket(int sceneId, Integer expireSeconds
     String url = API_URL_PREFIX + "/create";
     JsonObject json = new JsonObject();
     json.addProperty("action_name", "QR_SCENE");
-    if (expireSeconds != null) {
-      json.addProperty("expire_seconds", expireSeconds);
-    }
+    json.addProperty("expire_seconds", expireSeconds);
+
     JsonObject actionInfo = new JsonObject();
     JsonObject scene = new JsonObject();
     scene.addProperty("scene_id", sceneId);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -101,6 +101,7 @@ public class WxConsts {
   public static final String EVT_KF_CLOSE_SESSION = "kf_close_session"; // 客服关闭会话
   public static final String EVT_KF_SWITCH_SESSION = "kf_switch_session"; // 客服转接会话
   public static final String EVT_POI_CHECK_NOTIFY = "poi_check_notify"; //门店审核事件推送
+  public static final String EVN_SUBMIT_MEMBERCARD_USER_INFO = "submit_membercard_user_info"; //接收会员信息事件推送
   //以下为微信认证事件
   /**
    * 资质认证成功

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpConfigStorage.java
Patch:
@@ -89,7 +89,6 @@ public interface WxMpConfigStorage {
   /**
    * 微信支付异步回掉地址，通知url必须为直接可访问的url，不能携带参数。
    *
-   * @return
    * @since 2.5.0
    */
   String getNotifyURL();
@@ -100,7 +99,6 @@ public interface WxMpConfigStorage {
    * JSAPI--公众号支付、NATIVE--原生扫码支付、APP--app支付
    * </pre>
    *
-   * @return
    * @since 2.5.0
    */
   String getTradeType();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/result/WxError.java
Patch:
@@ -20,8 +20,7 @@ public class WxError implements Serializable {
   private String json;
 
   public static WxError fromJson(String json) {
-    WxError error = WxGsonBuilder.create().fromJson(json, WxError.class);
-    return error;
+    return WxGsonBuilder.create().fromJson(json, WxError.class);
   }
 
   public static Builder newBuilder() {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpConfigStorage.java
Patch:
@@ -45,7 +45,7 @@ public interface WxCpConfigStorage {
 
   String getCorpSecret();
 
-  String getAgentId();
+  Integer getAgentId();
 
   String getToken();
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpInMemoryConfigStorage.java
Patch:
@@ -19,7 +19,7 @@ public class WxCpInMemoryConfigStorage implements WxCpConfigStorage {
   protected volatile String token;
   protected volatile String accessToken;
   protected volatile String aesKey;
-  protected volatile String agentId;
+  protected volatile Integer agentId;
   protected volatile long expiresTime;
 
   protected volatile String oauth2redirectUri;
@@ -146,11 +146,11 @@ public void setAesKey(String aesKey) {
   }
 
   @Override
-  public String getAgentId() {
+  public Integer getAgentId() {
     return this.agentId;
   }
 
-  public void setAgentId(String agentId) {
+  public void setAgentId(Integer agentId) {
     this.agentId = agentId;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/BaseBuilder.java
Patch:
@@ -5,13 +5,13 @@
 
 public class BaseBuilder<T> {
   protected String msgType;
-  protected String agentId;
+  protected Integer agentId;
   protected String toUser;
   protected String toParty;
   protected String toTag;
   protected String safe;
 
-  public T agentId(String agentId) {
+  public T agentId(Integer agentId) {
     this.agentId = agentId;
     return (T) this;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpConfigStorage.java
Patch:
@@ -45,7 +45,7 @@ public interface WxCpConfigStorage {
 
   String getCorpSecret();
 
-  Integer getAgentId();
+  String getAgentId();
 
   String getToken();
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpInMemoryConfigStorage.java
Patch:
@@ -19,7 +19,7 @@ public class WxCpInMemoryConfigStorage implements WxCpConfigStorage {
   protected volatile String token;
   protected volatile String accessToken;
   protected volatile String aesKey;
-  protected volatile Integer agentId;
+  protected volatile String agentId;
   protected volatile long expiresTime;
 
   protected volatile String oauth2redirectUri;
@@ -146,11 +146,11 @@ public void setAesKey(String aesKey) {
   }
 
   @Override
-  public Integer getAgentId() {
+  public String getAgentId() {
     return this.agentId;
   }
 
-  public void setAgentId(Integer agentId) {
+  public void setAgentId(String agentId) {
     this.agentId = agentId;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/BaseBuilder.java
Patch:
@@ -5,13 +5,13 @@
 
 public class BaseBuilder<T> {
   protected String msgType;
-  protected Integer agentId;
+  protected String agentId;
   protected String toUser;
   protected String toParty;
   protected String toTag;
   protected String safe;
 
-  public T agentId(Integer agentId) {
+  public T agentId(String agentId) {
     this.agentId = agentId;
     return (T) this;
   }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpConfigStorage.java
Patch:
@@ -45,7 +45,7 @@ public interface WxCpConfigStorage {
 
   String getCorpSecret();
 
-  String getAgentId();
+  Integer getAgentId();
 
   String getToken();
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpInMemoryConfigStorage.java
Patch:
@@ -19,7 +19,7 @@ public class WxCpInMemoryConfigStorage implements WxCpConfigStorage {
   protected volatile String token;
   protected volatile String accessToken;
   protected volatile String aesKey;
-  protected volatile String agentId;
+  protected volatile Integer agentId;
   protected volatile long expiresTime;
 
   protected volatile String oauth2redirectUri;
@@ -146,11 +146,11 @@ public void setAesKey(String aesKey) {
   }
 
   @Override
-  public String getAgentId() {
+  public Integer getAgentId() {
     return this.agentId;
   }
 
-  public void setAgentId(String agentId) {
+  public void setAgentId(Integer agentId) {
     this.agentId = agentId;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/BaseBuilder.java
Patch:
@@ -5,13 +5,13 @@
 
 public class BaseBuilder<T> {
   protected String msgType;
-  protected String agentId;
+  protected Integer agentId;
   protected String toUser;
   protected String toParty;
   protected String toTag;
   protected String safe;
 
-  public T agentId(String agentId) {
+  public T agentId(Integer agentId) {
     this.agentId = agentId;
     return (T) this;
   }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/template/WxMpTemplateData.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.mp.bean;
+package me.chanjar.weixin.mp.bean.template;
 
 import java.io.Serializable;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/template/WxMpTemplateMessage.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.mp.bean;
+package me.chanjar.weixin.mp.bean.template;
 
 import java.io.Serializable;
 import java.util.ArrayList;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -5,15 +5,13 @@
 
 import me.chanjar.weixin.mp.bean.WxMpCard;
 import me.chanjar.weixin.mp.bean.WxMpCustomMessage;
-import me.chanjar.weixin.mp.bean.WxMpIndustry;
 import me.chanjar.weixin.mp.bean.WxMpMassNews;
 import me.chanjar.weixin.mp.bean.WxMpMassOpenIdsMessage;
 import me.chanjar.weixin.mp.bean.WxMpMassPreviewMessage;
 import me.chanjar.weixin.mp.bean.WxMpMassTagMessage;
 import me.chanjar.weixin.mp.bean.WxMpMassVideo;
 import me.chanjar.weixin.mp.bean.WxMpMaterialArticleUpdate;
 import me.chanjar.weixin.mp.bean.WxMpMaterialNews;
-import me.chanjar.weixin.mp.bean.WxMpTemplateMessage;
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserCumulate;
 import me.chanjar.weixin.mp.bean.datacube.WxDataCubeUserSummary;
 import me.chanjar.weixin.mp.bean.result.WxMediaImgUploadResult;
@@ -31,6 +29,8 @@
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.bean.result.WxMpUserBlacklistGetResult;
 import me.chanjar.weixin.mp.bean.result.WxMpUserList;
+import me.chanjar.weixin.mp.bean.template.WxMpTemplateIndustry;
+import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;
 
 public class WxMpGsonBuilder {
 
@@ -68,7 +68,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpCard.class, new WxMpCardGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassPreviewMessage.class, new WxMpMassPreviewMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMediaImgUploadResult.class, new WxMediaImgUploadResultGsonAdapter());
-    INSTANCE.registerTypeAdapter(WxMpIndustry.class, new WxMpIndustryGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpTemplateIndustry.class, new WxMpIndustryGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpUserBlacklistGetResult.class, new WxUserBlacklistGetResultGsonAdapter());
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpTemplateMessageGsonAdapter.java
Patch:
@@ -12,8 +12,9 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
-import me.chanjar.weixin.mp.bean.WxMpTemplateData;
-import me.chanjar.weixin.mp.bean.WxMpTemplateMessage;
+
+import me.chanjar.weixin.mp.bean.template.WxMpTemplateData;
+import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;
 
 import java.lang.reflect.Type;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutImageMessage.java
Patch:
@@ -2,11 +2,13 @@
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
+
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamMediaIdConverter;
 
 @XStreamAlias("xml")
 public class WxCpXmlOutImageMessage extends WxCpXmlOutMessage {
+  private static final long serialVersionUID = -1099446240667237313L;
 
   @XStreamAlias("Image")
   @XStreamConverter(value = XStreamMediaIdConverter.class)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutTextMessage.java
Patch:
@@ -2,11 +2,13 @@
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
+
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamCDataConverter;
 
 @XStreamAlias("xml")
 public class WxCpXmlOutTextMessage extends WxCpXmlOutMessage {
+  private static final long serialVersionUID = 2569239617185930232L;
 
   @XStreamAlias("Content")
   @XStreamConverter(value = XStreamCDataConverter.class)

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutVideoMessage.java
Patch:
@@ -2,11 +2,13 @@
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
+
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamCDataConverter;
 
 @XStreamAlias("xml")
 public class WxCpXmlOutVideoMessage extends WxCpXmlOutMessage {
+  private static final long serialVersionUID = -8672761162722733622L;
 
   @XStreamAlias("Video")
   protected final Video video = new Video();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutVoiceMessage.java
Patch:
@@ -2,11 +2,13 @@
 
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 import com.thoughtworks.xstream.annotations.XStreamConverter;
+
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.util.xml.XStreamMediaIdConverter;
 
 @XStreamAlias("xml")
 public class WxCpXmlOutVoiceMessage extends WxCpXmlOutMessage {
+  private static final long serialVersionUID = -7947384031546099340L;
 
   @XStreamAlias("Voice")
   @XStreamConverter(value = XStreamMediaIdConverter.class)

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceImpl.java
Patch:
@@ -447,7 +447,7 @@ protected synchronized <T, E> T executeInternal(RequestExecutor<T, E> executor,
       }
       return null;
     } catch (IOException e) {
-      this.log.error("\n[URL]:  {}\n[PARAMS]: {}\n[EXECEPTION]: {}", uri, data, e.getMessage());
+      this.log.error("\n[URL]:  {}\n[PARAMS]: {}\n[EXCEPTION]: {}", uri, data, e.getMessage());
       throw new RuntimeException(e);
     }
   }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpPayServiceImplTest.java
Patch:
@@ -44,7 +44,8 @@ public void testRefund() throws Exception {
     request.setOutTradeNo("1111");
     request.setTotalFee(1222);
     request.setRefundFee(111);
-    WxMpPayRefundResult result = this.wxService.getPayService().refund(request);
+    File keyFile = new File("E:\\dlt.p12");
+    WxMpPayRefundResult result = this.wxService.getPayService().refund(request, keyFile);
     System.err.println(result);
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -93,6 +93,8 @@ public class WxConsts {
   public static final String EVT_KF_CREATE_SESSION = "kf_create_session"; // 客服接入会话
   public static final String EVT_KF_CLOSE_SESSION = "kf_close_session"; // 客服关闭会话
   public static final String EVT_KF_SWITCH_SESSION = "kf_switch_session"; // 客服转接会话
+  public static final String EVT_POI_CHECK_NOTIFY = "poi_check_notify"; //门店审核事件推送
+
   ///////////////////////
   // 上传多媒体文件的类型
   ///////////////////////

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/store/WxMpStoreInfo.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.mp.bean.store;
 
+import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 import org.apache.commons.lang3.builder.ToStringBuilder;
 import org.apache.commons.lang3.builder.ToStringStyle;
 
@@ -22,4 +23,4 @@ public void setBaseInfo(WxMpStoreBaseInfo baseInfo) {
     this.baseInfo = baseInfo;
   }
 
-}
\ No newline at end of file
+}

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImpl.java
Patch:
@@ -56,7 +56,7 @@ public List<WxMpUser> userInfoList(List<String> openidList) throws WxErrorExcept
   @Override
   public List<WxMpUser> userInfoList(WxMpUserQuery userQuery) throws WxErrorException {
     String url = API_URL_PREFIX + "/info/batchget";
-    String responseContent = this.wxMpService.execute(new SimpleGetRequestExecutor(), url, userQuery.toJsonString());
+    String responseContent = this.wxMpService.execute(new SimplePostRequestExecutor(), url, userQuery.toJsonString());
     return WxMpUser.fromJsonList(responseContent);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpUserServiceImpl.java
Patch:
@@ -56,7 +56,7 @@ public List<WxMpUser> userInfoList(List<String> openidList) throws WxErrorExcept
   @Override
   public List<WxMpUser> userInfoList(WxMpUserQuery userQuery) throws WxErrorException {
     String url = API_URL_PREFIX + "/info/batchget";
-    String responseContent = this.wxMpService.execute(new SimpleGetRequestExecutor(), url, userQuery.toJsonString());
+    String responseContent = this.wxMpService.execute(new SimplePostRequestExecutor(), url, userQuery.toJsonString());
     return WxMpUser.fromJsonList(responseContent);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpStoreService.java
Patch:
@@ -5,6 +5,7 @@
 import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;
 import me.chanjar.weixin.mp.bean.store.WxMpStoreInfo;
+import me.chanjar.weixin.mp.bean.store.WxMpStoreListResult;
 
 /**
  * 门店管理的相关接口代码
@@ -36,7 +37,7 @@ public interface WxMpStoreService {
    * @param limit 返回数据条数，最大允许50，默认为20
    * @throws WxErrorException
    */
-  List<WxMpStoreInfo> list(int begin, int limit) throws WxErrorException;
+  WxMpStoreListResult list(int begin, int limit) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpPayServiceImpl.java
Patch:
@@ -20,7 +20,7 @@
 import org.slf4j.LoggerFactory;
 import org.slf4j.helpers.MessageFormatter;
 
-import com.beust.jcommander.internal.Maps;
+import com.google.common.collect.Maps;
 import com.thoughtworks.xstream.XStream;
 import com.thoughtworks.xstream.annotations.XStreamAlias;
 

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/ApiTestModule.java
Patch:
@@ -31,6 +31,7 @@ public void configure(Binder binder) {
     }
   }
 
+  @SuppressWarnings("unchecked")
   public static <T> T fromXml(Class<T> clazz, InputStream is) {
     XStream xstream = XStreamInitializer.getInstance();
     xstream.alias("xml", clazz);

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpOAuth2Servlet.java
Patch:
@@ -12,14 +12,16 @@
 import java.io.IOException;
 
 public class WxMpOAuth2Servlet extends HttpServlet {
+  private static final long serialVersionUID = 1L;
 
   protected WxMpService wxMpService;
 
   public WxMpOAuth2Servlet(WxMpService wxMpService) {
     this.wxMpService = wxMpService;
   }
 
-  @Override protected void service(HttpServletRequest request, HttpServletResponse response)
+  @Override
+  protected void service(HttpServletRequest request, HttpServletResponse response)
       throws ServletException, IOException {
 
     response.setContentType("text/html;charset=utf-8");

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouterRule.java
Patch:
@@ -36,9 +36,9 @@ public class WxCpMessageRouterRule {
 
   private Integer agentId;
 
-  private List<WxCpMessageHandler> handlers = new ArrayList<WxCpMessageHandler>();
+  private List<WxCpMessageHandler> handlers = new ArrayList<>();
 
-  private List<WxCpMessageInterceptor> interceptors = new ArrayList<WxCpMessageInterceptor>();
+  private List<WxCpMessageInterceptor> interceptors = new ArrayList<>();
 
   protected WxCpMessageRouterRule(WxCpMessageRouter routerBuilder) {
     this.routerBuilder = routerBuilder;
@@ -235,7 +235,7 @@ protected WxCpXmlOutMessage service(WxCpXmlMessage wxMessage,
 
     try {
 
-      Map<String, Object> context = new HashMap<String, Object>();
+      Map<String, Object> context = new HashMap<>();
       // 如果拦截器不通过
       for (WxCpMessageInterceptor interceptor : this.interceptors) {
         if (!interceptor.intercept(wxMessage, context, wxCpService, sessionManager)) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutNewsMessage.java
Patch:
@@ -12,7 +12,7 @@
 public class WxCpXmlOutNewsMessage extends WxCpXmlOutMessage {
 
   @XStreamAlias("Articles")
-  protected final List<Item> articles = new ArrayList<Item>();
+  protected final List<Item> articles = new ArrayList<>();
   @XStreamAlias("ArticleCount")
   protected int articleCount;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/FileBuilder.java
Patch:
@@ -23,6 +23,7 @@ public FileBuilder mediaId(String media_id) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setMediaId(this.mediaId);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/ImageBuilder.java
Patch:
@@ -23,6 +23,7 @@ public ImageBuilder mediaId(String media_id) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setMediaId(this.mediaId);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/NewsBuilder.java
Patch:
@@ -17,7 +17,7 @@
  */
 public final class NewsBuilder extends BaseBuilder<NewsBuilder> {
 
-  private List<WxCpMessage.WxArticle> articles = new ArrayList<WxCpMessage.WxArticle>();
+  private List<WxCpMessage.WxArticle> articles = new ArrayList<>();
 
   public NewsBuilder() {
     this.msgType = WxConsts.CUSTOM_MSG_NEWS;
@@ -28,6 +28,7 @@ public NewsBuilder addArticle(WxCpMessage.WxArticle article) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setArticles(this.articles);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/TextBuilder.java
Patch:
@@ -23,6 +23,7 @@ public TextBuilder content(String content) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setContent(this.content);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/VideoBuilder.java
Patch:
@@ -47,6 +47,7 @@ public VideoBuilder thumbMediaId(String thumb_media_id) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setMediaId(this.mediaId);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/VoiceBuilder.java
Patch:
@@ -23,6 +23,7 @@ public VoiceBuilder mediaId(String media_id) {
     return this;
   }
 
+  @Override
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setMediaId(this.mediaId);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/ImageBuilder.java
Patch:
@@ -16,6 +16,7 @@ public ImageBuilder mediaId(String media_id) {
     return this;
   }
 
+  @Override
   public WxCpXmlOutImageMessage build() {
     WxCpXmlOutImageMessage m = new WxCpXmlOutImageMessage();
     setCommon(m);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -13,13 +13,14 @@
  */
 public final class NewsBuilder extends BaseBuilder<NewsBuilder, WxCpXmlOutNewsMessage> {
 
-  protected final List<Item> articles = new ArrayList<Item>();
+  protected final List<Item> articles = new ArrayList<>();
 
   public NewsBuilder addArticle(Item item) {
     this.articles.add(item);
     return this;
   }
 
+  @Override
   public WxCpXmlOutNewsMessage build() {
     WxCpXmlOutNewsMessage m = new WxCpXmlOutNewsMessage();
     for (Item item : this.articles) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/TextBuilder.java
Patch:
@@ -15,6 +15,7 @@ public TextBuilder content(String content) {
     return this;
   }
 
+  @Override
   public WxCpXmlOutTextMessage build() {
     WxCpXmlOutTextMessage m = new WxCpXmlOutTextMessage();
     setCommon(m);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VideoBuilder.java
Patch:
@@ -28,6 +28,7 @@ public VideoBuilder mediaId(String mediaId) {
     return this;
   }
 
+  @Override
   public WxCpXmlOutVideoMessage build() {
     WxCpXmlOutVideoMessage m = new WxCpXmlOutVideoMessage();
     setCommon(m);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VoiceBuilder.java
Patch:
@@ -16,6 +16,7 @@ public VoiceBuilder mediaId(String mediaId) {
     return this;
   }
 
+  @Override
   public WxCpXmlOutVoiceMessage build() {
     WxCpXmlOutVoiceMessage m = new WxCpXmlOutVoiceMessage();
     setCommon(m);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpDepartGsonAdapter.java
Patch:
@@ -19,6 +19,7 @@
  */
 public class WxCpDepartGsonAdapter implements JsonSerializer<WxCpDepart>, JsonDeserializer<WxCpDepart> {
 
+  @Override
   public JsonElement serialize(WxCpDepart group, Type typeOfSrc, JsonSerializationContext context) {
     JsonObject json = new JsonObject();
     if (group.getId() != null) {
@@ -36,6 +37,7 @@ public JsonElement serialize(WxCpDepart group, Type typeOfSrc, JsonSerialization
     return json;
   }
 
+  @Override
   public WxCpDepart deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
           throws JsonParseException {
     WxCpDepart depart = new WxCpDepart();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpMessageGsonAdapter.java
Patch:
@@ -20,6 +20,7 @@
  */
 public class WxCpMessageGsonAdapter implements JsonSerializer<WxCpMessage> {
 
+  @Override
   public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializationContext context) {
     JsonObject messageJson = new JsonObject();
     messageJson.addProperty("agentid", message.getAgentId());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpTagGsonAdapter.java
Patch:
@@ -19,13 +19,15 @@
  */
 public class WxCpTagGsonAdapter implements JsonSerializer<WxCpTag>, JsonDeserializer<WxCpTag> {
 
+  @Override
   public JsonElement serialize(WxCpTag tag, Type typeOfSrc, JsonSerializationContext context) {
     JsonObject o = new JsonObject();
     o.addProperty("tagid", tag.getId());
     o.addProperty("tagname", tag.getName());
     return o;
   }
 
+  @Override
   public WxCpTag deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
           throws JsonParseException {
     JsonObject jsonObject = json.getAsJsonObject();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpUserGsonAdapter.java
Patch:
@@ -19,6 +19,7 @@
  */
 public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSerializer<WxCpUser> {
 
+  @Override
   public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
           throws JsonParseException {
     JsonObject o = json.getAsJsonObject();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/xml/XStreamTransformer.java
Patch:
@@ -45,7 +45,7 @@ public static <T> String toXml(Class<T> clazz, T object) {
   }
 
   private static Map<Class, XStream> configXStreamInstance() {
-    Map<Class, XStream> map = new HashMap<Class, XStream>();
+    Map<Class, XStream> map = new HashMap<>();
     map.put(WxCpXmlMessage.class, config_WxCpXmlMessage());
     map.put(WxCpXmlOutNewsMessage.class, config_WxCpXmlOutNewsMessage());
     map.put(WxCpXmlOutTextMessage.class, config_WxCpXmlOutTextMessage());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouterRule.java
Patch:
@@ -300,15 +300,15 @@ public void setInterceptors(List<WxCpMessageInterceptor> interceptors) {
   }
 
   public boolean isAsync() {
-    return async;
+    return this.async;
   }
 
   public void setAsync(boolean async) {
     this.async = async;
   }
 
   public boolean isReEnter() {
-    return reEnter;
+    return this.reEnter;
   }
 
   public void setReEnter(boolean reEnter) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpTag.java
Patch:
@@ -28,15 +28,15 @@ public static WxCpTag fromJson(String json) {
   }
 
   public String getName() {
-    return name;
+    return this.name;
   }
 
   public void setName(String name) {
     this.name = name;
   }
 
   public String getId() {
-    return id;
+    return this.id;
   }
 
   public void setId(String id) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutImageMessage.java
Patch:
@@ -17,7 +17,7 @@ public WxCpXmlOutImageMessage() {
   }
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutTextMessage.java
Patch:
@@ -17,7 +17,7 @@ public WxCpXmlOutTextMessage() {
   }
 
   public String getContent() {
-    return content;
+    return this.content;
   }
 
   public void setContent(String content) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutVoiceMessage.java
Patch:
@@ -17,7 +17,7 @@ public WxCpXmlOutVoiceMessage() {
   }
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/messagebuilder/VideoBuilder.java
Patch:
@@ -50,9 +50,9 @@ public VideoBuilder thumbMediaId(String thumb_media_id) {
   public WxCpMessage build() {
     WxCpMessage m = super.build();
     m.setMediaId(this.mediaId);
-    m.setTitle(title);
-    m.setDescription(description);
-    m.setThumbMediaId(thumbMediaId);
+    m.setTitle(this.title);
+    m.setDescription(this.description);
+    m.setThumbMediaId(this.thumbMediaId);
     return m;
   }
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -22,7 +22,7 @@ public NewsBuilder addArticle(Item item) {
 
   public WxCpXmlOutNewsMessage build() {
     WxCpXmlOutNewsMessage m = new WxCpXmlOutNewsMessage();
-    for (Item item : articles) {
+    for (Item item : this.articles) {
       m.addArticle(item);
     }
     setCommon(m);

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VideoBuilder.java
Patch:
@@ -31,9 +31,9 @@ public VideoBuilder mediaId(String mediaId) {
   public WxCpXmlOutVideoMessage build() {
     WxCpXmlOutVideoMessage m = new WxCpXmlOutVideoMessage();
     setCommon(m);
-    m.setTitle(title);
-    m.setDescription(description);
-    m.setMediaId(mediaId);
+    m.setTitle(this.title);
+    m.setDescription(this.description);
+    m.setMediaId(this.mediaId);
     return m;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/VoiceBuilder.java
Patch:
@@ -19,7 +19,7 @@ public VoiceBuilder mediaId(String mediaId) {
   public WxCpXmlOutVoiceMessage build() {
     WxCpXmlOutVoiceMessage m = new WxCpXmlOutVoiceMessage();
     setCommon(m);
-    m.setMediaId(mediaId);
+    m.setMediaId(this.mediaId);
     return m;
   }
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpBaseAPITest.java
Patch:
@@ -20,9 +20,9 @@ public class WxCpBaseAPITest {
   protected WxCpServiceImpl wxService;
 
   public void testRefreshAccessToken() throws WxErrorException {
-    WxCpConfigStorage configStorage = wxService.wxCpConfigStorage;
+    WxCpConfigStorage configStorage = this.wxService.wxCpConfigStorage;
     String before = configStorage.getAccessToken();
-    wxService.getAccessToken(false);
+    this.wxService.getAccessToken(false);
 
     String after = configStorage.getAccessToken();
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageAPITest.java
Patch:
@@ -20,21 +20,21 @@ public class WxCpMessageAPITest {
   protected WxCpServiceImpl wxService;
 
   public void testSendCustomMessage() throws WxErrorException {
-    ApiTestModule.WxXmlCpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlCpInMemoryConfigStorage) wxService.wxCpConfigStorage;
+    ApiTestModule.WxXmlCpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlCpInMemoryConfigStorage) this.wxService.wxCpConfigStorage;
     WxCpMessage message1 = new WxCpMessage();
     message1.setAgentId(configStorage.getAgentId());
     message1.setMsgType(WxConsts.CUSTOM_MSG_TEXT);
     message1.setToUser(configStorage.getUserId());
     message1.setContent("欢迎欢迎，热烈欢迎\n换行测试\n超链接:<a href=\"http://www.baidu.com\">Hello World</a>");
-    wxService.messageSend(message1);
+    this.wxService.messageSend(message1);
 
     WxCpMessage message2 = WxCpMessage
             .TEXT()
             .agentId(configStorage.getAgentId())
             .toUser(configStorage.getUserId())
             .content("欢迎欢迎，热烈欢迎\n换行测试\n超链接:<a href=\"http://www.baidu.com\">Hello World</a>")
             .build();
-    wxService.messageSend(message2);
+    this.wxService.messageSend(message2);
 
   }
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageRouterTest.java
Patch:
@@ -286,7 +286,7 @@ public WxEchoCpMessageHandler(StringBuffer sb, String echoStr) {
     @Override
     public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> context, WxCpService wxCpService,
                                     WxSessionManager sessionManager) {
-      sb.append(this.echoStr).append(',');
+      this.sb.append(this.echoStr).append(',');
       return null;
     }
 

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxMenuAPITest.java
Patch:
@@ -24,17 +24,17 @@ public class WxMenuAPITest {
 
   @Test(dataProvider = "menu")
   public void testCreateMenu(WxMenu wxMenu) throws WxErrorException {
-    wxService.menuCreate(wxMenu);
+    this.wxService.menuCreate(wxMenu);
   }
 
   @Test(dependsOnMethods = {"testCreateMenu"})
   public void testGetMenu() throws WxErrorException {
-    Assert.assertNotNull(wxService.menuGet());
+    Assert.assertNotNull(this.wxService.menuGet());
   }
 
   @Test(dependsOnMethods = {"testGetMenu"})
   public void testDeleteMenu() throws WxErrorException {
-    wxService.menuDelete();
+    this.wxService.menuDelete();
   }
 
   @DataProvider(name = "menu")

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpDemoInMemoryConfigStorage.java
Patch:
@@ -21,8 +21,8 @@ public static WxCpDemoInMemoryConfigStorage fromXml(InputStream is) {
 
   @Override
   public String toString() {
-    return "SimpleWxConfigProvider [appidOrCorpid=" + corpId + ", corpSecret=" + corpSecret + ", accessToken=" + accessToken
-            + ", expiresTime=" + expiresTime + ", token=" + token + ", aesKey=" + aesKey + "]";
+    return "SimpleWxConfigProvider [appidOrCorpid=" + this.corpId + ", corpSecret=" + this.corpSecret + ", accessToken=" + this.accessToken
+            + ", expiresTime=" + this.expiresTime + ", token=" + this.token + ", aesKey=" + this.aesKey + "]";
   }
 
 }

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpOAuth2Servlet.java
Patch:
@@ -30,7 +30,7 @@ protected void service(HttpServletRequest request, HttpServletResponse response)
       response.getWriter().println("<h1>code</h1>");
       response.getWriter().println(code);
 
-      String[] res = wxCpService.oauth2getUserInfo(code);
+      String[] res = this.wxCpService.oauth2getUserInfo(code);
       response.getWriter().println("<h1>result</h1>");
       response.getWriter().println(Arrays.toString(res));
     } catch (WxErrorException e) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -61,7 +61,7 @@ public class WxConsts {
   /**
    * 群发反馈消息代码所对应的文字描述
    */
-  public static final Map<String, String> MASS_ST_2_DESC = new HashMap<String, String>();
+  public static final Map<String, String> MASS_ST_2_DESC = new HashMap<>();
   ///////////////////////
   // 微信端推送过来的事件类型
   ///////////////////////

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxAccessToken.java
Patch:
@@ -16,15 +16,15 @@ public static WxAccessToken fromJson(String json) {
   }
 
   public String getAccessToken() {
-    return accessToken;
+    return this.accessToken;
   }
 
   public void setAccessToken(String accessToken) {
     this.accessToken = accessToken;
   }
 
   public int getExpiresIn() {
-    return expiresIn;
+    return this.expiresIn;
   }
 
   public void setExpiresIn(int expiresIn) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/exception/WxErrorException.java
Patch:
@@ -14,7 +14,7 @@ public WxErrorException(WxError error) {
   }
 
   public WxError getError() {
-    return error;
+    return this.error;
   }
 
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/session/TooManyActiveSessionsException.java
Patch:
@@ -40,7 +40,7 @@ public TooManyActiveSessionsException(String message,
                                         int maxActive) {
     super(message);
 
-    maxActiveSessions = maxActive;
+    this.maxActiveSessions = maxActive;
   }
 
   /**
@@ -49,6 +49,6 @@ public TooManyActiveSessionsException(String message,
    * @return The maximum number of sessions allowed by the session manager.
    */
   public int getMaxActiveSessions() {
-    return maxActiveSessions;
+    return this.maxActiveSessions;
   }
 }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/LogExceptionHandler.java
Patch:
@@ -13,7 +13,7 @@ public class LogExceptionHandler implements WxErrorExceptionHandler {
   @Override
   public void handle(WxErrorException e) {
 
-    log.error("Error happens", e);
+    this.log.error("Error happens", e);
 
   }
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/crypto/PKCS7Encoder.java
Patch:
@@ -47,7 +47,7 @@ public static byte[] encode(int count) {
    * @return 删除补位字符后的明文
    */
   public static byte[] decode(byte[] decrypted) {
-    int pad = (int) decrypted[decrypted.length - 1];
+    int pad = decrypted[decrypted.length - 1];
     if (pad < 1 || pad > 32) {
       pad = 0;
     }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/InputStreamResponseHandler.java
Patch:
@@ -14,6 +14,7 @@ public class InputStreamResponseHandler implements ResponseHandler<InputStream>
 
   public static final ResponseHandler<InputStream> INSTANCE = new InputStreamResponseHandler();
 
+  @Override
   public InputStream handleResponse(final HttpResponse response) throws IOException {
     final StatusLine statusLine = response.getStatusLine();
     final HttpEntity entity = response.getEntity();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/MediaDownloadRequestExecutor.java
Patch:
@@ -70,7 +70,7 @@ public File execute(CloseableHttpClient httpclient, HttpHost httpProxy, String u
         return null;
       }
       String[] name_ext = fileName.split("\\.");
-      File localFile = FileUtils.createTmpFile(inputStream, name_ext[0], name_ext[1], tmpDirFile);
+      File localFile = FileUtils.createTmpFile(inputStream, name_ext[0], name_ext[1], this.tmpDirFile);
       return localFile;
 
     } finally {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/URIUtil.java
Patch:
@@ -35,7 +35,7 @@ public static String encodeURIComponent(String input) {
   private static String getHex(byte buf[]) {
     StringBuilder o = new StringBuilder(buf.length * 3);
     for (int i = 0; i < buf.length; i++) {
-      int n = (int) buf[i] & 0xff;
+      int n = buf[i] & 0xff;
       o.append("%");
       if (n < 0x10) {
         o.append("0");

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/Utf8ResponseHandler.java
Patch:
@@ -19,6 +19,7 @@ public class Utf8ResponseHandler implements ResponseHandler<String> {
 
   public static final ResponseHandler<String> INSTANCE = new Utf8ResponseHandler();
 
+  @Override
   public String handleResponse(final HttpResponse response) throws IOException {
     final StatusLine statusLine = response.getStatusLine();
     final HttpEntity entity = response.getEntity();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxAccessTokenAdapter.java
Patch:
@@ -18,6 +18,7 @@
  */
 public class WxAccessTokenAdapter implements JsonDeserializer<WxAccessToken> {
 
+  @Override
   public WxAccessToken deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
     WxAccessToken accessToken = new WxAccessToken();
     JsonObject accessTokenJsonObject = json.getAsJsonObject();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxErrorAdapter.java
Patch:
@@ -18,6 +18,7 @@
  */
 public class WxErrorAdapter implements JsonDeserializer<WxError> {
 
+  @Override
   public WxError deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
     WxError wxError = new WxError();
     JsonObject wxErrorJsonObject = json.getAsJsonObject();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxMediaUploadResultAdapter.java
Patch:
@@ -18,6 +18,7 @@
  */
 public class WxMediaUploadResultAdapter implements JsonDeserializer<WxMediaUploadResult> {
 
+  @Override
   public WxMediaUploadResult deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
     WxMediaUploadResult uploadResult = new WxMediaUploadResult();
     JsonObject uploadResultJsonObject = json.getAsJsonObject();

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/json/WxMenuGsonAdapter.java
Patch:
@@ -29,6 +29,7 @@
  */
 public class WxMenuGsonAdapter implements JsonSerializer<WxMenu>, JsonDeserializer<WxMenu> {
 
+  @Override
   public JsonElement serialize(WxMenu menu, Type typeOfSrc, JsonSerializationContext context) {
     JsonObject json = new JsonObject();
 
@@ -75,6 +76,7 @@ protected JsonObject convertToJson(WxMenuRule menuRule) {
     return matchRule;
   }
 
+  @Override
   public WxMenu deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
     /*
      * 操蛋的微信

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/xml/XStreamInitializer.java
Patch:
@@ -25,9 +25,9 @@ public HierarchicalStreamWriter createWriter(Writer out) {
 
           @Override
           protected void writeText(QuickWriter writer, String text) {
-            if (text.startsWith(PREFIX_CDATA) && text.endsWith(SUFFIX_CDATA)) {
+            if (text.startsWith(this.PREFIX_CDATA) && text.endsWith(this.SUFFIX_CDATA)) {
               writer.write(text);
-            } else if (text.startsWith(PREFIX_MEDIA_ID) && text.endsWith(SUFFIX_MEDIA_ID)) {
+            } else if (text.startsWith(this.PREFIX_MEDIA_ID) && text.endsWith(this.SUFFIX_MEDIA_ID)) {
               writer.write(text);
             } else {
               super.writeText(writer, text);

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpCustomMessageAPITest.java
Patch:
@@ -21,7 +21,7 @@ public class WxMpCustomMessageAPITest {
   protected WxMpServiceImpl wxService;
 
   public void testSendCustomMessage() throws WxErrorException {
-    ApiTestModule.WxXmlMpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlMpInMemoryConfigStorage) wxService.getWxMpConfigStorage();
+    ApiTestModule.WxXmlMpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlMpInMemoryConfigStorage) this.wxService.getWxMpConfigStorage();
     WxMpCustomMessage message = new WxMpCustomMessage();
     message.setMsgType(WxConsts.CUSTOM_MSG_TEXT);
     message.setToUser(configStorage.getOpenId());
@@ -31,7 +31,7 @@ public void testSendCustomMessage() throws WxErrorException {
   }
 
   public void testSendCustomMessageWithKfAccount() throws WxErrorException {
-    ApiTestModule.WxXmlMpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlMpInMemoryConfigStorage) wxService.getWxMpConfigStorage();
+    ApiTestModule.WxXmlMpInMemoryConfigStorage configStorage = (ApiTestModule.WxXmlMpInMemoryConfigStorage) this.wxService.getWxMpConfigStorage();
     WxMpCustomMessage message = new WxMpCustomMessage();
     message.setMsgType(WxConsts.CUSTOM_MSG_TEXT);
     message.setToUser(configStorage.getOpenId());

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpJsAPITest.java
Patch:
@@ -24,7 +24,7 @@ public class WxMpJsAPITest {
 
 
   public void testJsapiTicket() throws WxErrorException {
-    String jsapiTicket = wxService.getJsapiTicket(false);
+    String jsapiTicket = this.wxService.getJsapiTicket(false);
     System.out.println(jsapiTicket);
     Assert.assertNotNull(jsapiTicket);
   }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpMessageRouterTest.java
Patch:
@@ -163,7 +163,7 @@ public WxEchoMpMessageHandler(StringBuffer sb, String echoStr) {
     @Override
     public WxMpXmlOutMessage handle(WxMpXmlMessage wxMessage, Map<String, Object> context, WxMpService wxMpService,
         WxSessionManager sessionManager) {
-      sb.append(this.echoStr).append(',');
+      this.sb.append(this.echoStr).append(',');
       return null;
     }
 

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpMiscAPITest.java
Patch:
@@ -23,7 +23,7 @@ public class WxMpMiscAPITest {
 
   @Test
   public void testGetCallbackIP() throws WxErrorException {
-    String[] ipArray = wxService.getCallbackIP();
+    String[] ipArray = this.wxService.getCallbackIP();
     System.out.println(Arrays.toString(ipArray));
     Assert.assertNotNull(ipArray);
     Assert.assertNotEquals(ipArray.length, 0);

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpShortUrlAPITest.java
Patch:
@@ -20,7 +20,7 @@ public class WxMpShortUrlAPITest {
   protected WxMpServiceImpl wxService;
 
   public void testShortUrl() throws WxErrorException {
-    String shortUrl = wxService.shortUrl("www.baidu.com");
+    String shortUrl = this.wxService.shortUrl("www.baidu.com");
     Assert.assertNotNull(shortUrl);
   }
 

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/impl/WxMpGroupServiceImplTest.java
Patch:
@@ -35,15 +35,15 @@ public void testGroupGet() throws WxErrorException {
     Assert.assertNotNull(groupList);
     Assert.assertTrue(groupList.size() > 0);
     for (WxMpGroup g : groupList) {
-      group = g;
+      this.group = g;
       Assert.assertNotNull(g.getName());
     }
   }
   
   @Test(dependsOnMethods={"testGroupGet", "testGroupCreate"})
   public void getGroupUpdate() throws WxErrorException {
-    group.setName("分组改名");
-    this.wxService.getGroupService().groupUpdate(group);
+    this.group.setName("分组改名");
+    this.wxService.getGroupService().groupUpdate(this.group);
   }
 
 }

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/DemoGuessNumberHandler.java
Patch:
@@ -30,7 +30,7 @@ private boolean isUserWantGuess(WxMpXmlMessage message) {
   }
 
   private boolean isUserAnswering(WxMpXmlMessage message) {
-    return pattern.matcher(message.getContent()).matches();
+    return this.pattern.matcher(message.getContent()).matches();
   }
 
   @Override
@@ -68,7 +68,7 @@ protected void letsGo(WxMpXmlMessage wxMessage, WxMpService wxMpService, WxSessi
     }
 
     session.setAttribute("guessing", Boolean.TRUE);
-    session.setAttribute("number", random.nextInt(100));
+    session.setAttribute("number", this.random.nextInt(100));
   }
 
 

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpDemoInMemoryConfigStorage.java
Patch:
@@ -15,8 +15,8 @@ class WxMpDemoInMemoryConfigStorage extends WxMpInMemoryConfigStorage {
 
   @Override
   public String toString() {
-    return "SimpleWxConfigProvider [appId=" + appId + ", secret=" + secret + ", accessToken=" + accessToken
-        + ", expiresTime=" + expiresTime + ", token=" + token + ", aesKey=" + aesKey + "]";
+    return "SimpleWxConfigProvider [appId=" + this.appId + ", secret=" + this.secret + ", accessToken=" + this.accessToken
+        + ", expiresTime=" + this.expiresTime + ", token=" + this.token + ", aesKey=" + this.aesKey + "]";
   }
 
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpUserQuery.java
Patch:
@@ -24,7 +24,6 @@ public WxMpUserQuery() {
   /**
    * 语言使用默认(zh_CN)
    * 
-   * @description
    * @param openIdList
    */
   public WxMpUserQuery(List<String> openIdList) {
@@ -98,7 +97,6 @@ public WxMpUserQuery remove(String openId, String lang) {
   /**
    * 获取查询参数列表
    * 
-   * @return
    */
   public List<WxMpUserQueryParam> getQueryParamList() {
     return this.queryParamList;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -46,7 +46,8 @@ public File execute(CloseableHttpClient httpclient, HttpHost httpProxy, String u
       httpGet.setConfig(config);
     }
 
-    try (CloseableHttpResponse response = httpclient.execute(httpGet)) {
+    try (CloseableHttpResponse response = httpclient.execute(httpGet);
+        InputStream inputStream = InputStreamResponseHandler.INSTANCE.handleResponse(response);) {
       Header[] contentTypeHeader = response.getHeaders("Content-Type");
       if (contentTypeHeader != null && contentTypeHeader.length > 0) {
         // 出错
@@ -55,8 +56,6 @@ public File execute(CloseableHttpClient httpclient, HttpHost httpProxy, String u
           throw new WxErrorException(WxError.fromJson(responseContent));
         }
       }
-      InputStream inputStream = InputStreamResponseHandler.INSTANCE.handleResponse(response);
-
       return FileUtils.createTmpFile(inputStream, UUID.randomUUID().toString(), "jpg");
     } finally {
       httpGet.releaseConnection();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -54,7 +54,7 @@ public class WxMpMessageRouter {
 
   private static final int DEFAULT_THREAD_POOL_SIZE = 100;
 
-  private final List<WxMpMessageRouterRule> rules = new ArrayList<WxMpMessageRouterRule>();
+  private final List<WxMpMessageRouterRule> rules = new ArrayList<>();
 
   private final WxMpService wxMpService;
 
@@ -139,7 +139,7 @@ public WxMpXmlOutMessage route(final WxMpXmlMessage wxMessage) {
       return null;
     }
 
-    final List<WxMpMessageRouterRule> matchRules = new ArrayList<WxMpMessageRouterRule>();
+    final List<WxMpMessageRouterRule> matchRules = new ArrayList<>();
     // 收集匹配的规则
     for (final WxMpMessageRouterRule rule : this.rules) {
       if (rule.test(wxMessage)) {
@@ -155,7 +155,7 @@ public WxMpXmlOutMessage route(final WxMpXmlMessage wxMessage) {
     }
 
     WxMpXmlOutMessage res = null;
-    final List<Future> futures = new ArrayList<Future>();
+    final List<Future> futures = new ArrayList<>();
     for (final WxMpMessageRouterRule rule : matchRules) {
       // 返回最后一个非异步的rule的执行结果
       if(rule.isAsync()) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassNews.java
Patch:
@@ -17,7 +17,7 @@ public class WxMpMassNews implements Serializable {
    * 
    */
   private static final long serialVersionUID = 565937155013581016L;
-  private List<WxMpMassNewsArticle> articles = new ArrayList<WxMpMassNewsArticle>();
+  private List<WxMpMassNewsArticle> articles = new ArrayList<>();
 
   public List<WxMpMassNewsArticle> getArticles() {
     return this.articles;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMaterial.java
Patch:
@@ -22,7 +22,7 @@ public WxMpMaterial(String name, File file, String videoTitle, String videoIntro
   }
 
   public Map<String, String> getForm() {
-    Map<String, String> form = new HashMap<String, String>();
+    Map<String, String> form = new HashMap<>();
     form.put("title", this.videoTitle);
     form.put("introduction", this.videoIntroduction);
     return form;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMaterialNews.java
Patch:
@@ -12,7 +12,7 @@ public class WxMpMaterialNews implements Serializable {
    * 
    */
   private static final long serialVersionUID = -3283203652013494976L;
-  private List<WxMpMaterialNewsArticle> articles = new ArrayList<WxMpMaterialNewsArticle>();
+  private List<WxMpMaterialNewsArticle> articles = new ArrayList<>();
 
   public List<WxMpMaterialNewsArticle> getArticles() {
     return this.articles;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpTemplateMessage.java
Patch:
@@ -16,7 +16,7 @@ public class WxMpTemplateMessage implements Serializable {
   private String templateId;
   private String url;
   private String topColor;
-  private List<WxMpTemplateData> data = new ArrayList<WxMpTemplateData>();
+  private List<WxMpTemplateData> data = new ArrayList<>();
 
   public String getToUser() {
     return this.toUser;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutNewsMessage.java
Patch:
@@ -20,7 +20,7 @@ public class WxMpXmlOutNewsMessage extends WxMpXmlOutMessage {
   protected int articleCount;
   
   @XStreamAlias("Articles")
-  protected final List<Item> articles = new ArrayList<Item>();
+  protected final List<Item> articles = new ArrayList<>();
   
   public WxMpXmlOutNewsMessage() {
     this.msgType = WxConsts.XML_MSG_NEWS;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/custombuilder/NewsBuilder.java
Patch:
@@ -17,7 +17,7 @@
  */
 public final class NewsBuilder extends BaseBuilder<NewsBuilder> {
 
-  private List<WxMpCustomMessage.WxArticle> articles = new ArrayList<WxMpCustomMessage.WxArticle>();
+  private List<WxMpCustomMessage.WxArticle> articles = new ArrayList<>();
   
   public NewsBuilder() {
     this.msgType = WxConsts.CUSTOM_MSG_NEWS;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -11,7 +11,7 @@
  */
 public final class NewsBuilder extends BaseBuilder<NewsBuilder, WxMpXmlOutNewsMessage> {
 
-  protected final List<WxMpXmlOutNewsMessage.Item> articles = new ArrayList<WxMpXmlOutNewsMessage.Item>();
+  protected final List<WxMpXmlOutNewsMessage.Item> articles = new ArrayList<>();
   
   public NewsBuilder addArticle(WxMpXmlOutNewsMessage.Item item) {
     this.articles.add(item);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpUserList.java
Patch:
@@ -14,7 +14,7 @@ public class WxMpUserList {
 
   protected int total = -1;
   protected int count = -1;
-  protected List<String> openIds = new ArrayList<String>();
+  protected List<String> openIds = new ArrayList<>();
   protected String nextOpenId;
   public int getTotal() {
     return this.total;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/xml/XStreamTransformer.java
Patch:
@@ -45,7 +45,7 @@ public static <T> String toXml(Class<T> clazz, T object) {
   }
 
   private static Map<Class, XStream> configXStreamInstance() {
-    Map<Class, XStream> map = new HashMap<Class, XStream>();
+    Map<Class, XStream> map = new HashMap<>();
     map.put(WxMpXmlMessage.class, config_WxMpXmlMessage());
     map.put(WxMpXmlOutMusicMessage.class, config_WxMpXmlOutMusicMessage());
     map.put(WxMpXmlOutNewsMessage.class, config_WxMpXmlOutNewsMessage());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/Industry.java
Patch:
@@ -13,23 +13,23 @@ public class Industry implements Serializable {
     private String secondClass;
 
     public String getId() {
-        return id;
+        return this.id;
     }
 
     public void setId(String id) {
         this.id = id;
     }
 
     public String getFirstClass() {
-        return firstClass;
+        return this.firstClass;
     }
 
     public void setFirstClass(String firstClass) {
         this.firstClass = firstClass;
     }
 
     public String getSecondClass() {
-        return secondClass;
+        return this.secondClass;
     }
 
     public void setSecondClass(String secondClass) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpCustomMessage.java
Patch:
@@ -182,7 +182,7 @@ public static NewsBuilder NEWS() {
   }
   
   public String getKfAccount() {
-    return kfAccount;
+    return this.kfAccount;
   }
   
   public void setKfAccount(String kfAccount) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpIndustry.java
Patch:
@@ -22,15 +22,15 @@ public String toJson() {
     }
 
     public Industry getPrimaryIndustry() {
-        return primaryIndustry;
+        return this.primaryIndustry;
     }
 
     public void setPrimaryIndustry(Industry primaryIndustry) {
         this.primaryIndustry = primaryIndustry;
     }
 
     public Industry getSecondIndustry() {
-        return secondIndustry;
+        return this.secondIndustry;
     }
 
     public void setSecondIndustry(Industry secondIndustry) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassVideo.java
Patch:
@@ -16,23 +16,23 @@ public class WxMpMassVideo implements Serializable {
   private String description;
 
   public String getTitle() {
-    return title;
+    return this.title;
   }
 
   public void setTitle(String title) {
     this.title = title;
   }
 
   public String getDescription() {
-    return description;
+    return this.description;
   }
 
   public void setDescription(String description) {
     this.description = description;
   }
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpTemplateData.java
Patch:
@@ -26,23 +26,23 @@ public WxMpTemplateData(String name, String value, String color) {
   }
 
   public String getName() {
-    return name;
+    return this.name;
   }
 
   public void setName(String name) {
     this.name = name;
   }
 
   public String getValue() {
-    return value;
+    return this.value;
   }
 
   public void setValue(String value) {
     this.value = value;
   }
 
   public String getColor() {
-    return color;
+    return this.color;
   }
   public void setColor(String color) {
     this.color = color;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutImageMessage.java
Patch:
@@ -13,7 +13,7 @@ public class WxMpXmlOutImageMessage extends WxMpXmlOutMessage {
   private String mediaId;
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutTextMessage.java
Patch:
@@ -17,7 +17,7 @@ public WxMpXmlOutTextMessage() {
   }
   
   public String getContent() {
-    return content;
+    return this.content;
   }
 
   public void setContent(String content) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutVoiceMessage.java
Patch:
@@ -17,7 +17,7 @@ public WxMpXmlOutVoiceMessage() {
   }
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/custombuilder/MusicBuilder.java
Patch:
@@ -57,9 +57,9 @@ public WxMpCustomMessage build() {
     WxMpCustomMessage m = super.build();
     m.setMusicUrl(this.musicUrl);
     m.setHqMusicUrl(this.hqMusicUrl);
-    m.setTitle(title);
-    m.setDescription(description);
-    m.setThumbMediaId(thumbMediaId);
+    m.setTitle(this.title);
+    m.setDescription(this.description);
+    m.setThumbMediaId(this.thumbMediaId);
     return m;
   }
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/custombuilder/VideoBuilder.java
Patch:
@@ -51,9 +51,9 @@ public VideoBuilder thumbMediaId(String thumb_media_id) {
   public WxMpCustomMessage build() {
     WxMpCustomMessage m = super.build();
     m.setMediaId(this.mediaId);
-    m.setTitle(title);
-    m.setDescription(description);
-    m.setThumbMediaId(thumbMediaId);
+    m.setTitle(this.title);
+    m.setDescription(this.description);
+    m.setThumbMediaId(this.thumbMediaId);
     return m;
   }
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/kefu/result/WxMpKfMsgList.java
Patch:
@@ -21,23 +21,23 @@ public class WxMpKfMsgList {
   private Long msgId;
 
   public List<WxMpKfMsgRecord> getRecords() {
-    return records;
+    return this.records;
   }
 
   public void setRecords(List<WxMpKfMsgRecord> records) {
     this.records = records;
   }
 
   public Integer getNumber() {
-    return number;
+    return this.number;
   }
 
   public void setNumber(Integer number) {
     this.number = number;
   }
 
   public Long getMsgId() {
-    return msgId;
+    return this.msgId;
   }
 
   public void setMsgId(Long msgId) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -21,7 +21,7 @@ public NewsBuilder addArticle(WxMpXmlOutNewsMessage.Item item) {
   @Override
   public WxMpXmlOutNewsMessage build() {
     WxMpXmlOutNewsMessage m = new WxMpXmlOutNewsMessage();
-    for(WxMpXmlOutNewsMessage.Item item : articles) {
+    for(WxMpXmlOutNewsMessage.Item item : this.articles) {
       m.addArticle(item);
     }
     setCommon(m);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/outxmlbuilder/VideoBuilder.java
Patch:
@@ -30,9 +30,9 @@ public VideoBuilder mediaId(String mediaId) {
   public WxMpXmlOutVideoMessage build() {
     WxMpXmlOutVideoMessage m = new WxMpXmlOutVideoMessage();
     setCommon(m);
-    m.setTitle(title);
-    m.setDescription(description);
-    m.setMediaId(mediaId);
+    m.setTitle(this.title);
+    m.setDescription(this.description);
+    m.setMediaId(this.mediaId);
     return m;
   }
   

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/outxmlbuilder/VoiceBuilder.java
Patch:
@@ -19,7 +19,7 @@ public VoiceBuilder mediaId(String mediaId) {
   public WxMpXmlOutVoiceMessage build() {
     WxMpXmlOutVoiceMessage m = new WxMpXmlOutVoiceMessage();
     setCommon(m);
-    m.setMediaId(mediaId);
+    m.setMediaId(this.mediaId);
     return m;
   }
   

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMediaImgUploadResult.java
Patch:
@@ -15,7 +15,7 @@ public static WxMediaImgUploadResult fromJson(String json) {
   }
 
   public String getUrl() {
-    return url;
+    return this.url;
   }
 
   public void setUrl(String url) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpMaterialUploadResult.java
Patch:
@@ -10,15 +10,15 @@ public class WxMpMaterialUploadResult implements Serializable {
   private String url;
 
   public String getMediaId() {
-    return mediaId;
+    return this.mediaId;
   }
 
   public void setMediaId(String mediaId) {
     this.mediaId = mediaId;
   }
 
   public String getUrl() {
-    return url;
+    return this.url;
   }
 
   public void setUrl(String url) {
@@ -31,7 +31,7 @@ public static WxMpMaterialUploadResult fromJson(String json) {
 
   @Override
   public String toString() {
-    return "WxMpMaterialUploadResult [media_id=" + mediaId + ", url=" + url + "]";
+    return "WxMpMaterialUploadResult [media_id=" + this.mediaId + ", url=" + this.url + "]";
   }
 
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpQrCodeTicket.java
Patch:
@@ -16,7 +16,7 @@ public class WxMpQrCodeTicket implements Serializable {
   protected String url;
 
   public String getTicket() {
-    return ticket;
+    return this.ticket;
   }
 
   public void setTicket(String ticket) {
@@ -27,15 +27,15 @@ public void setTicket(String ticket) {
    * 如果返回-1说明是永久
    */
   public int getExpire_seconds() {
-    return expire_seconds;
+    return this.expire_seconds;
   }
 
   public void setExpire_seconds(int expire_seconds) {
     this.expire_seconds = expire_seconds;
   }
 
   public String getUrl() {
-    return url;
+    return this.url;
   }
 
   public void setUrl(String url) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpUserService.java
Patch:
@@ -1,12 +1,12 @@
 package me.chanjar.weixin.mp.api;
 
-import java.util.List;
-
 import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.mp.bean.WxMpUserQuery;
 import me.chanjar.weixin.mp.bean.result.WxMpUser;
 import me.chanjar.weixin.mp.bean.result.WxMpUserList;
 
+import java.util.List;
+
 /**
  * 用户管理和统计相关操作接口
  *
@@ -42,7 +42,7 @@ public interface WxMpUserService {
    * 详情请见: http://mp.weixin.qq.com/wiki/index.php?title=批量获取用户基本信息
    * </pre>
    *
-   * @param openid 用户openid, lang 使用默认(zh_CN 简体)
+   * @param openidList 用户openid列表
    */
   List<WxMpUser> userInfoList(List<String> openidList) throws WxErrorException;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -591,7 +591,7 @@ public void setWxCpConfigStorage(WxCpConfigStorage wxConfigProvider) {
     this.wxCpConfigStorage = wxConfigProvider;
     ApacheHttpClientBuilder apacheHttpClientBuilder = wxCpConfigStorage.getApacheHttpClientBuilder();
     if (null == apacheHttpClientBuilder) {
-      apacheHttpClientBuilder = DefaultApacheHttpHttpClientBuilder.get();
+      apacheHttpClientBuilder = DefaultApacheHttpClientBuilder.get();
     }
     apacheHttpClientBuilder.httpProxyHost(wxCpConfigStorage.getHttp_proxy_host())
             .httpProxyPort(wxCpConfigStorage.getHttp_proxy_port())

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/impl/WxMpServiceImpl.java
Patch:
@@ -457,7 +457,7 @@ public void setWxMpConfigStorage(WxMpConfigStorage wxConfigProvider) {
   private void initHttpClient() {
     ApacheHttpClientBuilder apacheHttpClientBuilder = this.wxMpConfigStorage.getApacheHttpClientBuilder();
     if (null == apacheHttpClientBuilder) {
-      apacheHttpClientBuilder = DefaultApacheHttpHttpClientBuilder.get();
+      apacheHttpClientBuilder = DefaultApacheHttpClientBuilder.get();
     }
     
     apacheHttpClientBuilder.httpProxyHost(this.wxMpConfigStorage.getHttpProxyHost())

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouterRule.java
Patch:
@@ -211,6 +211,9 @@ protected WxMpXmlOutMessage service(WxMpXmlMessage wxMessage,
       WxMpXmlOutMessage res = null;
       for (WxMpMessageHandler handler : this.handlers) {
         // 返回最后handler的结果
+        if(handler == null){
+          continue;
+        }
         res = handler.handle(wxMessage, context, wxMpService, sessionManager);
       }
       return res;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -483,9 +483,8 @@ public String qrCodePictureUrl(String ticket) throws WxErrorException {
     try {
       return String.format(url, URLEncoder.encode(ticket, Charsets.UTF_8.name()));
     } catch (UnsupportedEncodingException e) {
-      WxError error = new WxError();
-      error.setErrorCode(-1);
-      error.setErrorMsg(e.getMessage());
+      WxError error = WxError.newBuilder().setErrorCode(-1)
+            .setErrorMsg(e.getMessage()).build();
       throw new WxErrorException(error);
     }
   }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/crypto/WxCryptUtil.java
Patch:
@@ -83,7 +83,7 @@ public String encrypt(String plainText) {
     String encryptedXml = encrypt(genRandomStr(), plainText);
 
     // 生成安全签名
-    String timeStamp = timeStamp = Long.toString(System.currentTimeMillis() / 1000l);
+    String timeStamp = Long.toString(System.currentTimeMillis() / 1000l);
     String nonce = genRandomStr();
 
     try {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/JoddGetRequestExecutor.java
Patch:
@@ -33,7 +33,7 @@ public String execute(CloseableHttpClient httpclient, HttpHost httpProxy, String
         if (httpProxy != null) {
             ProxyInfo proxyInfoObj = new ProxyInfo(
                 ProxyInfo.ProxyType.HTTP,
-                httpProxy.getAddress().getHostAddress(),
+                httpProxy.getHostName(),
                 httpProxy.getPort(), "", "");
             provider.useProxy(proxyInfoObj);
         }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/JoddGetRequestExecutor.java
Patch:
@@ -33,7 +33,7 @@ public String execute(CloseableHttpClient httpclient, HttpHost httpProxy, String
         if (httpProxy != null) {
             ProxyInfo proxyInfoObj = new ProxyInfo(
                 ProxyInfo.ProxyType.HTTP,
-                httpProxy.getAddress().getHostAddress(),
+                httpProxy.getHostName(),
                 httpProxy.getPort(), "", "");
             provider.useProxy(proxyInfoObj);
         }

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/JoddGetRequestExecutor.java
Patch:
@@ -43,6 +43,7 @@ public String execute(CloseableHttpClient httpclient, HttpHost httpProxy, String
         request.charset("UTF-8");
 
         HttpResponse response = request.open(provider).send();
+        response.charset("UTF-8");
         String result = response.bodyText();
 
         WxError error = WxError.fromJson(result);

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/JoddPostRequestExecutor.java
Patch:
@@ -37,6 +37,7 @@ public String execute(CloseableHttpClient httpclient, HttpHost httpProxy, String
         request.bodyText(postEntity);
 
         HttpResponse response = request.open(provider).send();
+        response.charset("UTF-8");
         String result = response.bodyText();
 
         WxError error = WxError.fromJson(result);

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/outxmlbuilder/TransferCustomerServiceBuilder.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * 客服消息builder
  * <pre>
- * 用法: WxMpCustomMessage m = WxMpCustomMessage.TRANSFER_CUSTOMER_SERVICE().content(...).toUser(...).build();
+ * 用法: WxMpCustomMessage m = WxMpXmlOutMessage.TRANSFER_CUSTOMER_SERVICE().content(...).toUser(...).build();
  * </pre>
  *
  * @author chanjarster
@@ -25,4 +25,4 @@ public WxMpXmlOutTransferCustomerServiceMessage build() {
     m.setKfAccount(kfAccount);
     return m;
   }
-}
\ No newline at end of file
+}

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -835,9 +835,8 @@ public WxMpPrepayIdResult getPrepayId(final Map<String, String> parameters) {
       WxMpPrepayIdResult wxMpPrepayIdResult = (WxMpPrepayIdResult) xstream.fromXML(responseContent);
       return wxMpPrepayIdResult;
     } catch (IOException e) {
-      e.printStackTrace();
+      throw new RuntimeException("Failed to get prepay id due to IO exception.", e);
     }
-    return new WxMpPrepayIdResult();
   }
 
   final String[] REQUIRED_ORDER_PARAMETERS = new String[] { "appid", "mch_id", "body", "out_trade_no", "total_fee", "spbill_create_ip", "notify_url",
@@ -875,7 +874,7 @@ public Map<String, String> getJSSDKPayInfo(Map<String, String> parameters) {
     WxMpPrepayIdResult wxMpPrepayIdResult = getPrepayId(parameters);
     String prepayId = wxMpPrepayIdResult.getPrepay_id();
     if (prepayId == null || prepayId.equals("")) {
-      throw new RuntimeException("get prepayid error");
+      throw new RuntimeException(String.format("Failed to get prepay id due to error code '%s'(%s).", wxMpPrepayIdResult.getErr_code(), wxMpPrepayIdResult.getErr_code_des()));
     }
 
     Map<String, String> payInfo = new HashMap<String, String>();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -835,9 +835,8 @@ public WxMpPrepayIdResult getPrepayId(final Map<String, String> parameters) {
       WxMpPrepayIdResult wxMpPrepayIdResult = (WxMpPrepayIdResult) xstream.fromXML(responseContent);
       return wxMpPrepayIdResult;
     } catch (IOException e) {
-      e.printStackTrace();
+      throw new RuntimeException("Failed to get prepay id due to IO exception.", e);
     }
-    return new WxMpPrepayIdResult();
   }
 
   final String[] REQUIRED_ORDER_PARAMETERS = new String[] { "appid", "mch_id", "body", "out_trade_no", "total_fee", "spbill_create_ip", "notify_url",
@@ -875,7 +874,7 @@ public Map<String, String> getJSSDKPayInfo(Map<String, String> parameters) {
     WxMpPrepayIdResult wxMpPrepayIdResult = getPrepayId(parameters);
     String prepayId = wxMpPrepayIdResult.getPrepay_id();
     if (prepayId == null || prepayId.equals("")) {
-      throw new RuntimeException("get prepayid error");
+      throw new RuntimeException(String.format("Failed to get prepay id due to error code '%s'(%s).", wxMpPrepayIdResult.getErr_code(), wxMpPrepayIdResult.getErr_code_des()));
     }
 
     Map<String, String> payInfo = new HashMap<String, String>();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxUserListGsonAdapter.java
Patch:
@@ -22,7 +22,7 @@ public WxMpUserList deserialize(JsonElement json, Type typeOfT, JsonDeserializat
     wxMpUserList.setTotal(GsonHelper.getInteger(o, "total"));
     wxMpUserList.setCount(GsonHelper.getInteger(o, "count"));
     wxMpUserList.setNextOpenId(GsonHelper.getString(o, "next_openid"));
-    if (!o.get("data").isJsonNull() && !o.get("data").getAsJsonObject().get("openid").isJsonNull()) {
+    if (o.get("data") != null && !o.get("data").isJsonNull() && !o.get("data").getAsJsonObject().get("openid").isJsonNull()) {
       JsonArray data = o.get("data").getAsJsonObject().get("openid").getAsJsonArray();
       for (int i = 0; i < data.size(); i++) {
         wxMpUserList.getOpenIds().add(GsonHelper.getAsString(data.get(i)));

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/MediaUploadRequestExecutor.java
Patch:
@@ -11,6 +11,7 @@
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.client.methods.HttpPost;
 import org.apache.http.entity.ContentType;
+import org.apache.http.entity.mime.HttpMultipartMode;
 import org.apache.http.entity.mime.MultipartEntityBuilder;
 
 import me.chanjar.weixin.common.bean.result.WxError;
@@ -35,6 +36,7 @@ public WxMediaUploadResult execute(CloseableHttpClient httpclient, HttpHost http
       HttpEntity entity = MultipartEntityBuilder
             .create()
             .addBinaryBody("media", file)
+            .setMode(HttpMultipartMode.RFC6532)
             .build();
       httpPost.setEntity(entity);
       httpPost.setHeader("Content-Type", ContentType.MULTIPART_FORM_DATA.toString());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -555,7 +555,7 @@ public <T, E> T execute(RequestExecutor<T, E> executor, String uri, E data) thro
     throw new RuntimeException("微信服务端异常，超出重试次数");
   }
 
-  protected <T, E> T executeInternal(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
+  protected synchronized <T, E> T executeInternal(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
     if (uri.indexOf("access_token=") != -1) {
       throw new IllegalArgumentException("uri参数中不允许有access_token: " + uri);
     }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -408,7 +408,7 @@ WxMediaUploadResult mediaUpload(String mediaType, String fileType, InputStream i
    * </pre>
    * @param redirectUri
    * @param state
-   * @return code
+   * @return url
    */
   String oauth2buildAuthorizationUrl(String redirectUri, String state);
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -526,7 +526,7 @@ public interface WxMpService {
    * </pre>
    * @param scope
    * @param state
-   * @return code
+   * @return url
    */
   public String oauth2buildAuthorizationUrl(String scope, String state);
 
@@ -539,7 +539,7 @@ public interface WxMpService {
    *   用户授权完成后的重定向链接，无需urlencode, 方法内会进行encode
    * @param scope
    * @param state
-   * @return code
+   * @return url
    */
   public String oauth2buildAuthorizationUrl(String redirectURI, String scope, String state);
   /**

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -29,6 +29,7 @@ public class WxConsts {
   public static final String CUSTOM_MSG_MUSIC = "music";
   public static final String CUSTOM_MSG_NEWS = "news";
   public static final String CUSTOM_MSG_FILE = "file";
+  public static final String CUSTOM_MSG_TRANSFER_CUSTOMER_SERVICE = "transfer_customer_service";
   
   ///////////////////////
   // 群发消息的消息类型

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -551,6 +551,9 @@ public <T, E> T execute(RequestExecutor<T, E> executor, String uri, E data) thro
   }
 
   protected <T, E> T executeInternal(RequestExecutor<T, E> executor, String uri, E data) throws WxErrorException {
+    if (uri.indexOf("access_token=") != -1) {
+      throw new IllegalArgumentException("uri参数中不允许有access_token: " + uri);
+    }
     String accessToken = getAccessToken(false);
 
     String uriWithAccessToken = uri;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -7,6 +7,7 @@
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 import com.thoughtworks.xstream.XStream;
+
 import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.bean.WxMenu;
 import me.chanjar.weixin.common.bean.WxJsapiSignature;
@@ -27,6 +28,7 @@
 import me.chanjar.weixin.mp.bean.result.*;
 import me.chanjar.weixin.mp.util.http.QrCodeRequestExecutor;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
+
 import org.apache.http.Consts;
 import org.apache.http.HttpHost;
 import org.apache.http.auth.AuthScope;
@@ -214,7 +216,7 @@ public WxMediaUploadResult mediaUpload(String mediaType, File file) throws WxErr
   
   public File mediaDownload(String media_id) throws WxErrorException {
     String url = "http://file.api.weixin.qq.com/cgi-bin/media/get";
-    return execute(new MediaDownloadRequestExecutor(), url, "media_id=" + media_id);
+    return execute(new MediaDownloadRequestExecutor(wxMpConfigStorage.getTmpDirFile()), url, "media_id=" + media_id);
   }
 
   public WxMpMassUploadResult massNewsUpload(WxMpMassNews news) throws WxErrorException {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpTagAPITest.java
Patch:
@@ -42,7 +42,7 @@ public void testTagGet() throws Exception {
   public void testTagAddUsers() throws Exception {
     List<String> userIds = new ArrayList<String>();
     userIds.add(((ApiTestModule.WxXmlCpInMemoryConfigStorage)configStorage).getUserId());
-    wxService.tagAddUsers(tagId, userIds);
+    wxService.tagAddUsers(tagId, userIds, null);
   }
 
   @Test(dependsOnMethods = "testTagAddUsers")

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -399,7 +399,7 @@ WxMediaUploadResult mediaUpload(String mediaType, String fileType, InputStream i
    * @param tagId
    * @param userIds
    */
-  void tagAddUsers(String tagId, List<String> userIds) throws WxErrorException;
+  void tagAddUsers(String tagId, List<String> userIds, List<String> partyIds) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -445,7 +445,7 @@ public String oauth2buildAuthorizationUrl(String redirectUri, String state) {
 
   @Override
   public String[] oauth2getUserInfo(String code) throws WxErrorException {
-    return oauth2getUserInfo(code, wxCpConfigStorage.getAgentId());
+    return oauth2getUserInfo(wxCpConfigStorage.getAgentId(), code);
   }
 
   @Override

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpMessageGsonAdapter.java
Patch:
@@ -34,7 +34,7 @@ public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializat
       messageJson.addProperty("toparty", message.getToParty());
     }
     if (StringUtils.isNotBlank(message.getToTag())) {
-      messageJson.addProperty("totag", message.getToUser());
+      messageJson.addProperty("totag", message.getToTag());
     }
     if (WxConsts.CUSTOM_MSG_TEXT.equals(message.getMsgType())) {
       JsonObject text = new JsonObject();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -25,6 +25,8 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpTemplateMessage.class, new WxMpTemplateMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpSemanticQueryResult.class, new WxMpSemanticQueryResultAdapter());
     INSTANCE.registerTypeAdapter(WxMpOAuth2AccessToken.class, new WxMpOAuth2AccessTokenAdapter());
+    INSTANCE.registerTypeAdapter(WxMpUserSummary.class, new WxMpUserSummaryGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpUserCumulate.class, new WxMpUserCumulateGsonAdapter());
   }
   
   public static Gson create() {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -353,10 +353,11 @@ WxMediaUploadResult mediaUpload(String mediaType, String fileType, InputStream i
    * 构造oauth2授权的url连接
    * 详情请见: http://qydev.weixin.qq.com/wiki/index.php?title=企业获取code
    * </pre>
+   * @param redirectUri
    * @param state
    * @return code
    */
-  String oauth2buildAuthorizationUrl(String state);
+  String oauth2buildAuthorizationUrl(String redirectUri, String state);
 
   /**
    * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -412,10 +412,10 @@ public void tagRemoveUsers(String tagId, List<String> userIds) throws WxErrorExc
   }
 
   @Override
-  public String oauth2buildAuthorizationUrl(String state) {
+  public String oauth2buildAuthorizationUrl(String redirectUri, String state) {
     String url = "https://open.weixin.qq.com/connect/oauth2/authorize?" ;
     url += "appid=" + wxCpConfigStorage.getCorpId();
-    url += "&redirect_uri=" + URIUtil.encodeURIComponent(wxCpConfigStorage.getOauth2redirectUri());
+    url += "&redirect_uri=" + URIUtil.encodeURIComponent(redirectUri);
     url += "&response_type=code";
     url += "&scope=snsapi_base";
     if (state != null) {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpDemoServer.java
Patch:
@@ -62,7 +62,7 @@ public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> co
         @Override
         public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> context,
             WxCpService wxCpService, WxSessionManager sessionManager) {
-          String href = "<a href=\"" + wxCpService.oauth2buildAuthorizationUrl(null)
+          String href = "<a href=\"" + wxCpService.oauth2buildAuthorizationUrl(wxCpConfigStorage.getOauth2redirectUri(), null)
               + "\">测试oauth2</a>";
           return WxCpXmlOutMessage
               .TEXT()

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxAccessToken.java
Patch:
@@ -2,7 +2,9 @@
 
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 
-public class WxAccessToken {
+import java.io.Serializable;
+
+public class WxAccessToken implements Serializable {
 
   private String accessToken;
   

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxJsapiSignature.java
Patch:
@@ -1,9 +1,11 @@
 package me.chanjar.weixin.common.bean;
 
+import java.io.Serializable;
+
 /**
  * jspai signature
  */
-public class WxJsapiSignature {
+public class WxJsapiSignature implements Serializable {
 
   private String noncestr;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxMenu.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -12,7 +13,7 @@
  * @author Daniel Qian
  *
  */
-public class WxMenu {
+public class WxMenu implements Serializable {
 
   private List<WxMenuButton> buttons = new ArrayList<WxMenuButton>();
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/result/WxError.java
Patch:
@@ -2,13 +2,15 @@
 
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 微信错误码说明
  * http://mp.weixin.qq.com/wiki/index.php?title=全局返回码说明
  * @author Daniel Qian
  *
  */
-public class WxError {
+public class WxError implements Serializable {
 
   private int errorCode;
   

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/result/WxMediaUploadResult.java
Patch:
@@ -2,7 +2,9 @@
 
 import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 
-public class WxMediaUploadResult {
+import java.io.Serializable;
+
+public class WxMediaUploadResult implements Serializable {
 
   private String type;
   private String mediaId;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpDepart.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 微信部门
  *
  * @author Daniel Qian
  */
-public class WxCpDepart {
+public class WxCpDepart implements Serializable {
 
   private Integer id;
   private String name;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpMessage.java
Patch:
@@ -3,6 +3,7 @@
 import me.chanjar.weixin.cp.bean.messagebuilder.*;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -11,7 +12,7 @@
  * @author Daniel Qian
  *
  */
-public class WxCpMessage {
+public class WxCpMessage implements Serializable {
 
   private String toUser;
   private String toParty;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpTag.java
Patch:
@@ -2,10 +2,12 @@
 
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * Created by Daniel Qian
  */
-public class WxCpTag {
+public class WxCpTag implements Serializable {
 
   private String id;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpUser.java
Patch:
@@ -2,6 +2,7 @@
 
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -10,7 +11,7 @@
  *
  * @author Daniel Qian
  */
-public class WxCpUser {
+public class WxCpUser implements Serializable {
 
   private String userId;
   private String name;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlMessage.java
Patch:
@@ -10,6 +10,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -25,7 +26,7 @@
  * @author Daniel Qian
  */
 @XStreamAlias("xml")
-public class WxCpXmlMessage {
+public class WxCpXmlMessage implements Serializable {
 
   ///////////////////////
   // 以下都是微信推送过来的消息的xml的element所对应的属性

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpCustomMessage.java
Patch:
@@ -3,6 +3,7 @@
 import me.chanjar.weixin.mp.bean.custombuilder.*;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -11,7 +12,7 @@
  * @author chanjarster
  *
  */
-public class WxMpCustomMessage {
+public class WxMpCustomMessage implements Serializable {
 
   private String toUser;
   private String msgType;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpGroup.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 微信用户分组
  * @author chanjarster
  *
  */
-public class WxMpGroup {
+public class WxMpGroup implements Serializable {
 
   private long id = -1;
   private String name;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassGroupMessage.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 分组群发的消息
  * 
  * @author chanjarster
  */
-public class WxMpMassGroupMessage {
+public class WxMpMassGroupMessage implements Serializable {
   
   private Long groupId;
   private String msgtype;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassNews.java
Patch:
@@ -2,6 +2,7 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -10,7 +11,7 @@
  * @author chanjarster
  *
  */
-public class WxMpMassNews {
+public class WxMpMassNews implements Serializable {
 
   private List<WxMpMassNewsArticle> articles = new ArrayList<WxMpMassNewsArticle>();
   

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassOpenIdsMessage.java
Patch:
@@ -2,6 +2,7 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -10,7 +11,7 @@
  * 
  * @author chanjarster
  */
-public class WxMpMassOpenIdsMessage {
+public class WxMpMassOpenIdsMessage implements Serializable {
   
   private List<String> toUsers = new ArrayList<String>();
   private String msgType;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpMassVideo.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 群发时用到的视频素材
  * 
  * @author chanjarster
  */
-public class WxMpMassVideo {
+public class WxMpMassVideo implements Serializable {
 
   private String mediaId;
   private String title;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpSemanticQuery.java
Patch:
@@ -2,14 +2,16 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 语义理解查询用对象
  *
  * http://mp.weixin.qq.com/wiki/index.php?title=语义理解
  *
  * @author Daniel Qian
  */
-public class WxMpSemanticQuery {
+public class WxMpSemanticQuery implements Serializable {
 
   private String query;
   private String category;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpTemplateData.java
Patch:
@@ -1,9 +1,11 @@
 package me.chanjar.weixin.mp.bean;
 
+import java.io.Serializable;
+
 /**
  * @author Daniel Qian
  */
-public class WxMpTemplateData {
+public class WxMpTemplateData implements Serializable {
 
   private String name;
   private String value;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpTemplateMessage.java
Patch:
@@ -2,10 +2,11 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
-public class WxMpTemplateMessage {
+public class WxMpTemplateMessage implements Serializable {
 
   private String toUser;
   private String templateId;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlMessage.java
Patch:
@@ -10,6 +10,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -25,7 +26,7 @@
  * @author chanjarster
  */
 @XStreamAlias("xml")
-public class WxMpXmlMessage {
+public class WxMpXmlMessage implements Serializable {
 
   ///////////////////////
   // 以下都是微信推送过来的消息的xml的element所对应的属性

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutMessage.java
Patch:
@@ -8,8 +8,10 @@
 import me.chanjar.weixin.mp.util.crypto.WxMpCryptUtil;
 import me.chanjar.weixin.mp.util.xml.XStreamTransformer;
 
+import java.io.Serializable;
+
 @XStreamAlias("xml")
-public abstract class WxMpXmlOutMessage {
+public abstract class WxMpXmlOutMessage implements Serializable {
 
   @XStreamAlias("ToUserName")
   @XStreamConverter(value=XStreamCDataConverter.class)

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpMassSendResult.java
Patch:
@@ -2,6 +2,8 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * <pre>
  * 群发消息一发送就返回的结果
@@ -13,7 +15,7 @@
  * @author chanjarster
  *
  */
-public class WxMpMassSendResult {
+public class WxMpMassSendResult implements Serializable {
 
   private String errorCode;
   private String errorMsg;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpMassUploadResult.java
Patch:
@@ -2,6 +2,8 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * <pre>
  * 上传群发用的素材的结果
@@ -10,7 +12,7 @@
  * @author chanjarster
  *
  */
-public class WxMpMassUploadResult {
+public class WxMpMassUploadResult implements Serializable {
 
   private String type;
   private String mediaId;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpOAuth2AccessToken.java
Patch:
@@ -2,7 +2,9 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
-public class WxMpOAuth2AccessToken {
+import java.io.Serializable;
+
+public class WxMpOAuth2AccessToken implements Serializable {
 
   private String accessToken;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpQrCodeTicket.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 换取二维码的Ticket
  * 
  * @author chanjarster
  */
-public class WxMpQrCodeTicket {
+public class WxMpQrCodeTicket implements Serializable {
   
   protected String ticket;
   protected int expire_seconds = -1;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpSemanticQueryResult.java
Patch:
@@ -2,14 +2,16 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 语义理解查询结果对象
  *
  * http://mp.weixin.qq.com/wiki/index.php?title=语义理解
  *
  * @author Daniel Qian
  */
-public class WxMpSemanticQueryResult {
+public class WxMpSemanticQueryResult implements Serializable {
 
   private String query;
   private String type;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpUser.java
Patch:
@@ -2,12 +2,14 @@
 
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
+import java.io.Serializable;
+
 /**
  * 微信用户信息
  * @author chanjarster
  *
  */
-public class WxMpUser {
+public class WxMpUser implements Serializable {
 
   protected Boolean subscribe;
   protected String openId;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouter.java
Patch:
@@ -204,7 +204,8 @@ protected boolean isDuplicateMessage(WxCpXmlMessage wxMessage) {
       messageId = String.valueOf(wxMessage.getCreateTime())
           + "-" +String.valueOf(wxMessage.getAgentId() == null ? "" : wxMessage.getAgentId())
           + "-" + wxMessage.getFromUserName()
-          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey());
+          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey())
+          + "-" + String.valueOf(wxMessage.getEvent() == null ? "" : wxMessage.getEvent())
       ;
     } else {
       messageId = String.valueOf(wxMessage.getMsgId());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -203,7 +203,8 @@ protected boolean isDuplicateMessage(WxMpXmlMessage wxMessage) {
     if (wxMessage.getMsgId() == null) {
       messageId = String.valueOf(wxMessage.getCreateTime())
           + "-" + wxMessage.getFromUserName()
-          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey());
+          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey())
+          + "-" + String.valueOf(wxMessage.getEvent() == null ? "" : wxMessage.getEvent())
       ;
     } else {
       messageId = String.valueOf(wxMessage.getMsgId());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -140,7 +140,7 @@ public String getJsapiTicket(boolean forceRefresh) throws WxErrorException {
     if (wxCpConfigStorage.isJsapiTicketExpired()) {
       synchronized (globalJsapiTicketRefreshLock) {
         if (wxCpConfigStorage.isJsapiTicketExpired()) {
-          String url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi";
+          String url = "https://qyapi.weixin.qq.com/cgi-bin/get_jsapi_ticket";
           String responseContent = execute(new SimpleGetRequestExecutor(), url, null);
           JsonElement tmpJsonElement = Streams.parse(new JsonReader(new StringReader(responseContent)));
           JsonObject tmpJsonObject = tmpJsonElement.getAsJsonObject();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouter.java
Patch:
@@ -204,7 +204,7 @@ protected boolean isDuplicateMessage(WxCpXmlMessage wxMessage) {
       messageId = String.valueOf(wxMessage.getCreateTime())
           + "-" +String.valueOf(wxMessage.getAgentId() == null ? "" : wxMessage.getAgentId())
           + "-" + wxMessage.getFromUserName()
-          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEvent());
+          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey());
       ;
     } else {
       messageId = String.valueOf(wxMessage.getMsgId());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -203,7 +203,7 @@ protected boolean isDuplicateMessage(WxMpXmlMessage wxMessage) {
     if (wxMessage.getMsgId() == null) {
       messageId = String.valueOf(wxMessage.getCreateTime())
           + "-" + wxMessage.getFromUserName()
-          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEvent());
+          + "-" + String.valueOf(wxMessage.getEventKey() == null ? "" : wxMessage.getEventKey());
       ;
     } else {
       messageId = String.valueOf(wxMessage.getMsgId());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -435,7 +435,7 @@ public WxMpUser oauth2getUserInfo(WxMpOAuth2AccessToken oAuth2AccessToken, Strin
   @Override
   public boolean oauth2validateAccessToken(WxMpOAuth2AccessToken oAuth2AccessToken) {
     String url = "https://api.weixin.qq.com/sns/auth?";
-    url += "access_token=" + oAuth2AccessToken;
+    url += "access_token=" + oAuth2AccessToken.getAccessToken();
     url += "&openid=" + oAuth2AccessToken.getOpenId();
 
     try {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxErrorExceptionHandler.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.common.util;
+package me.chanjar.weixin.common.api;
 
 import me.chanjar.weixin.common.exception.WxErrorException;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxMessageDuplicateChecker.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.common.util;
+package me.chanjar.weixin.common.api;
 
 /**
  * <pre>

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxMessageInMemoryDuplicateChecker.java
Patch:
@@ -1,4 +1,4 @@
-package me.chanjar.weixin.common.util;
+package me.chanjar.weixin.common.api;
 
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/bean/WxJsapiSignature.java
Patch:
@@ -1,9 +1,9 @@
-package me.chanjar.weixin.mp.bean.result;
+package me.chanjar.weixin.common.bean;
 
 /**
  * jspai signature
  */
-public class WxMpJsapiSignature {
+public class WxJsapiSignature {
 
   private String noncestr;
 

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/LogExceptionHandler.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.common.util;
 
+import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
 import me.chanjar.weixin.common.exception.WxErrorException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/util/WxMessageInMemoryDuplicateCheckerTest.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.common.util;
 
+import me.chanjar.weixin.common.api.WxMessageInMemoryDuplicateChecker;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouterRule.java
Patch:
@@ -2,7 +2,7 @@
 
 import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
-import me.chanjar.weixin.common.util.WxErrorExceptionHandler;
+import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouterRule.java
Patch:
@@ -2,7 +2,7 @@
 
 import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
-import me.chanjar.weixin.common.util.WxErrorExceptionHandler;
+import me.chanjar.weixin.common.api.WxErrorExceptionHandler;
 import me.chanjar.weixin.mp.bean.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.WxMpXmlOutMessage;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -1,10 +1,9 @@
 package me.chanjar.weixin.mp.api;
 
 import me.chanjar.weixin.common.bean.WxMenu;
+import me.chanjar.weixin.common.bean.WxJsapiSignature;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import me.chanjar.weixin.common.exception.WxErrorException;
-import me.chanjar.weixin.common.session.WxSession;
-import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.*;
@@ -86,7 +85,7 @@ public interface WxMpService {
    * @param url       url
    * @return
    */
-  public WxMpJsapiSignature createJsapiSignature(String url) throws WxErrorException;
+  public WxJsapiSignature createJsapiSignature(String url) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -16,7 +16,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpMassGroupMessage.class, new WxMpMassGroupMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassOpenIdsMessage.class, new WxMpMassOpenIdsMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpGroup.class, new WxMpGroupGsonAdapter());
-    INSTANCE.registerTypeAdapter(WxMpUser.class, new WxUserGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpUser.class, new WxMpUserGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpUserList.class, new WxUserListGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassVideo.class, new WxMpMassVideoAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassSendResult.class, new WxMpMassSendResultAdapter());

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -83,12 +83,10 @@ public interface WxMpService {
    *
    * 详情请见：http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html#.E9.99.84.E5.BD.951-JS-SDK.E4.BD.BF.E7.94.A8.E6.9D.83.E9.99.90.E7.AD.BE.E5.90.8D.E7.AE.97.E6.B3.95
    * </pre>
-   * @param timestamp 时间戳
-   * @param noncestr  用户自己生成的随机字符串
    * @param url       url
    * @return
    */
-  public String createJsapiSignature(long timestamp, String noncestr, String url) throws WxErrorException;
+  public WxMpJsapiSignature createJsapiSignature(String url) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -89,6 +89,7 @@ public class WxConsts {
   public static final String EVT_PIC_WEIXIN = "pic_weixin";
   public static final String EVT_LOCATION_SELECT = "location_select";
   public static final String EVT_TEMPLATESENDJOBFINISH = "TEMPLATESENDJOBFINISH";
+  public static final String EVT_ENTER_AGENT = "enter_agent";
 
   ///////////////////////
   // 上传多媒体文件的类型

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageHandler.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
@@ -24,6 +25,6 @@ public interface WxCpMessageHandler {
   public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage,
                                   Map<String, Object> context,
                                   WxCpService wxCpService,
-                                  WxSessionManager sessionManager);
+                                  WxSessionManager sessionManager) throws WxErrorException;
 
 }

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageInterceptor.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 
@@ -24,6 +25,6 @@ public interface WxCpMessageInterceptor {
   public boolean intercept(WxCpXmlMessage wxMessage,
                           Map<String, Object> context,
                           WxCpService wxCpService,
-                          WxSessionManager sessionManager);
+                          WxSessionManager sessionManager) throws WxErrorException;
 
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageHandler.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.WxMpXmlOutMessage;
@@ -23,6 +24,6 @@ public interface WxMpMessageHandler {
   public WxMpXmlOutMessage handle(WxMpXmlMessage wxMessage,
                                   Map<String, Object> context,
                                   WxMpService wxMpService,
-                                  WxSessionManager sessionManager);
+                                  WxSessionManager sessionManager) throws WxErrorException;
 
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageInterceptor.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.mp.api;
 
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.mp.bean.WxMpXmlMessage;
 
@@ -24,6 +25,6 @@ public interface WxMpMessageInterceptor {
   public boolean intercept(WxMpXmlMessage wxMessage,
                             Map<String, Object> context,
                             WxMpService wxMpService,
-                            WxSessionManager sessionManager);
+                            WxSessionManager sessionManager) throws WxErrorException;
 
 }

File: weixin-java-common/src/test/java/me/chanjar/weixin/common/util/WxMessageInMemoryDuplicateCheckerTest.java
Patch:
@@ -12,21 +12,21 @@ public void test() throws InterruptedException {
 
     // 第一次检查
     for (Long msgId : msgIds) {
-      boolean result = checker.isDuplicate(msgId);
+      boolean result = checker.isDuplicate(String.valueOf(msgId));
       Assert.assertFalse(result);
     }
 
     // 过1秒再检查
     Thread.sleep(1000l);
     for (Long msgId : msgIds) {
-      boolean result = checker.isDuplicate(msgId);
+      boolean result = checker.isDuplicate(String.valueOf(msgId));
       Assert.assertTrue(result);
     }
 
     // 过1.5秒再检查
     Thread.sleep(1500l);
     for (Long msgId : msgIds) {
-      boolean result = checker.isDuplicate(msgId);
+      boolean result = checker.isDuplicate(String.valueOf(msgId));
       Assert.assertFalse(result);
     }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouter.java
Patch:
@@ -150,7 +150,7 @@ public void run() {
       } else {
         res = rule.service(wxMessage);
         // 在同步操作结束，session访问结束
-        log.trace("End session access after sync operation finish {}", wxMessage.getFromUserName());
+        log.debug("End session access: async=false, sessionId={}", wxMessage.getFromUserName());
         sessionEndAccess(wxMessage);
       }
     }
@@ -162,7 +162,7 @@ public void run() {
           for (Future future : futures) {
             try {
               future.get();
-              log.trace("End session access after async operation finish {}", wxMessage.getFromUserName());
+              log.debug("End session access: async=true, sessionId={}", wxMessage.getFromUserName());
               // 异步操作结束，session访问结束
               sessionEndAccess(wxMessage);
             } catch (InterruptedException e) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -148,7 +148,7 @@ public void run() {
       } else {
         res = rule.service(wxMessage);
         // 在同步操作结束，session访问结束
-        log.trace("End session access after sync operation finish {}", wxMessage.getFromUserName());
+        log.debug("End session access: async=false, sessionId={}", wxMessage.getFromUserName());
         sessionEndAccess(wxMessage);
       }
     }
@@ -160,7 +160,7 @@ public void run() {
           for (Future future : futures) {
             try {
               future.get();
-              log.trace("End session access after async operation finish {}", wxMessage.getFromUserName());
+              log.debug("End session access: async=true, sessionId={}", wxMessage.getFromUserName());
               // 异步操作结束，session访问结束
               sessionEndAccess(wxMessage);
             } catch (InterruptedException e) {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/WxMessageInMemoryDuplicateChecker.java
Patch:
@@ -82,6 +82,9 @@ public void run() {
 
   @Override
   public boolean isDuplicate(Long wxMsgId) {
+    if (wxMsgId == null) {
+      return false;
+    }
     checkBackgroundProcessStarted();
     Long timestamp = msgId2Timestamp.putIfAbsent(wxMsgId, System.currentTimeMillis());
     if (timestamp == null) {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageHandler.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
+import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -392,7 +392,7 @@ public WxMediaUploadResult mediaUpload(String mediaType, String fileType, InputS
   /**
    * <pre>
    * 设置WxSessionManager，只有当需要使用个性化的WxSessionManager的时候才需要调用此方法，
-   * WxCpService默认使用的是{@link me.chanjar.weixin.common.session.InMemorySessionManager}
+   * WxCpService默认使用的是{@link me.chanjar.weixin.common.session.StandardSessionManager}
    * </pre>
    * @param sessionManager
    */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -12,7 +12,7 @@
 import me.chanjar.weixin.common.bean.result.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import me.chanjar.weixin.common.exception.WxErrorException;
-import me.chanjar.weixin.common.session.InMemorySessionManager;
+import me.chanjar.weixin.common.session.StandardSessionManager;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.StringUtils;
@@ -66,7 +66,7 @@ public class WxCpServiceImpl implements WxCpService {
 
   private int maxRetryTimes = 5;
 
-  protected WxSessionManager sessionManager = new InMemorySessionManager();
+  protected WxSessionManager sessionManager = new StandardSessionManager();
 
   public boolean checkSignature(String msgSignature, String timestamp, String nonce, String data) {
     try {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -10,7 +10,7 @@
 import me.chanjar.weixin.common.bean.result.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import me.chanjar.weixin.common.exception.WxErrorException;
-import me.chanjar.weixin.common.session.InMemorySessionManager;
+import me.chanjar.weixin.common.session.StandardSessionManager;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.StringUtils;
 import me.chanjar.weixin.common.util.crypto.SHA1;
@@ -68,7 +68,7 @@ public class WxMpServiceImpl implements WxMpService {
 
   private int maxRetryTimes = 5;
 
-  protected WxSessionManager sessionManager = new InMemorySessionManager();
+  protected WxSessionManager sessionManager = new StandardSessionManager();
 
   public boolean checkSignature(String timestamp, String nonce, String signature) {
     try {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/session/InternalSessionFacade.java
Patch:
@@ -10,7 +10,7 @@ public class InternalSessionFacade implements WxSession {
   private WxSession session = null;
 
   public InternalSessionFacade(WxSession session) {
-    session = session;
+    this.session = session;
   }
 
   @Override

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpService.java
Patch:
@@ -392,7 +392,7 @@ public WxMediaUploadResult mediaUpload(String mediaType, String fileType, InputS
   /**
    * <pre>
    * 设置WxSessionManager，只有当需要使用个性化的WxSessionManager的时候才需要调用此方法，
-   * WxCpService默认使用的是{@link me.chanjar.weixin.common.session.SessionManagerImpl}
+   * WxCpService默认使用的是{@link me.chanjar.weixin.common.session.InMemorySessionManager}
    * </pre>
    * @param sessionManager
    */

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -12,7 +12,7 @@
 import me.chanjar.weixin.common.bean.result.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import me.chanjar.weixin.common.exception.WxErrorException;
-import me.chanjar.weixin.common.session.SessionManagerImpl;
+import me.chanjar.weixin.common.session.InMemorySessionManager;
 import me.chanjar.weixin.common.session.WxSession;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.StringUtils;
@@ -46,7 +46,6 @@
 import java.io.StringReader;
 import java.util.List;
 import java.util.UUID;
-import java.util.concurrent.atomic.AtomicBoolean;
 
 public class WxCpServiceImpl implements WxCpService {
 
@@ -67,7 +66,7 @@ public class WxCpServiceImpl implements WxCpService {
 
   private int maxRetryTimes = 5;
 
-  protected WxSessionManager sessionManager = new SessionManagerImpl();
+  protected WxSessionManager sessionManager = new InMemorySessionManager();
 
   public boolean checkSignature(String msgSignature, String timestamp, String nonce, String data) {
     try {

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/demo/WxCpDemoServer.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.demo;
 
+import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.cp.api.*;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
@@ -46,7 +47,7 @@ private static void initWeixin() {
       WxCpMessageHandler handler = new WxCpMessageHandler() {
         @Override
         public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> context,
-            WxCpService wxCpService) {
+            WxCpService wxCpService, WxSessionManager sessionManager) {
           WxCpXmlOutTextMessage m = WxCpXmlOutMessage
               .TEXT()
               .content("测试加密消息")
@@ -60,7 +61,7 @@ public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> co
       WxCpMessageHandler oauth2handler = new WxCpMessageHandler() {
         @Override
         public WxCpXmlOutMessage handle(WxCpXmlMessage wxMessage, Map<String, Object> context,
-            WxCpService wxCpService) {
+            WxCpService wxCpService, WxSessionManager sessionManager) {
           String href = "<a href=\"" + wxCpService.oauth2buildAuthorizationUrl(null)
               + "\">测试oauth2</a>";
           return WxCpXmlOutMessage

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -10,8 +10,7 @@
 import me.chanjar.weixin.common.bean.result.WxError;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import me.chanjar.weixin.common.exception.WxErrorException;
-import me.chanjar.weixin.common.session.SessionManagerImpl;
-import me.chanjar.weixin.common.session.WxSession;
+import me.chanjar.weixin.common.session.InMemorySessionManager;
 import me.chanjar.weixin.common.session.WxSessionManager;
 import me.chanjar.weixin.common.util.StringUtils;
 import me.chanjar.weixin.common.util.crypto.SHA1;
@@ -69,7 +68,7 @@ public class WxMpServiceImpl implements WxMpService {
 
   private int maxRetryTimes = 5;
 
-  protected WxSessionManager sessionManager = new SessionManagerImpl();
+  protected WxSessionManager sessionManager = new InMemorySessionManager();
 
   public boolean checkSignature(String timestamp, String nonce, String signature) {
     try {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/WxMsgIdMemoryDuplicateChecker.java
Patch:
@@ -9,7 +9,7 @@
  * 将每个消息id保存在内存里，每隔5秒清理已经过期的消息id，每个消息id的过期时间是15秒
  * </pre>
  */
-public class WxMsgIdInMemoryDuplicateChecker implements WxMsgIdDuplicateChecker {
+public class WxMsgIdMemoryDuplicateChecker implements WxMsgIdDuplicateChecker {
 
   /**
    * 一个消息ID在内存的过期时间：15秒
@@ -30,7 +30,7 @@ public class WxMsgIdInMemoryDuplicateChecker implements WxMsgIdDuplicateChecker
    * 每隔多少周期检查消息ID是否过期：5秒
    * </pre>
    */
-  public WxMsgIdInMemoryDuplicateChecker() {
+  public WxMsgIdMemoryDuplicateChecker() {
     this.timeToLive = 15 * 1000l;
     this.clearPeriod = 5 * 1000l;
     this.start();
@@ -41,7 +41,7 @@ public WxMsgIdInMemoryDuplicateChecker() {
    * @param timeToLive 一个消息ID在内存的过期时间：毫秒
    * @param clearPeriod 每隔多少周期检查消息ID是否过期：毫秒
    */
-  public WxMsgIdInMemoryDuplicateChecker(Long timeToLive, Long clearPeriod) {
+  public WxMsgIdMemoryDuplicateChecker(Long timeToLive, Long clearPeriod) {
     this.timeToLive = timeToLive;
     this.clearPeriod = clearPeriod;
     this.start();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -70,7 +70,7 @@ public interface WxMpService {
    * @param url       url
    * @return
    */
-  public String createJsapiSignature(String timestamp, String noncestr, String url) throws WxErrorException;
+  public String createJsapiSignature(long timestamp, String noncestr, String url) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -127,7 +127,7 @@ public String getJsapiTicket(boolean forceRefresh) throws WxErrorException {
     return wxMpConfigStorage.getJsapiTicket();
   }
 
-  public String createJsapiSignature(String timestamp, String noncestr, String url) throws WxErrorException {
+  public String createJsapiSignature(long timestamp, String noncestr, String url) throws WxErrorException {
     String jsapiTicket = getJsapiTicket(false);
     try {
       return SHA1.genWithAmple(

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBaseAPITest.java
Patch:
@@ -25,7 +25,6 @@ public void testRefreshAccessToken() throws WxErrorException {
     wxService.getAccessToken(false);
 
     String after = configStorage.getAccessToken();
-
     Assert.assertNotEquals(before, after);
     Assert.assertTrue(StringUtils.isNotBlank(after));
   }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -126,8 +126,8 @@ public String createJsapiSignature(String timestamp, String noncestr, String url
     try {
       return SHA1.genWithAmple(
           "jsapi_ticket=" + jsapiTicket,
-          "timestamp=" + timestamp,
           "noncestr=" + noncestr,
+          "timestamp=" + timestamp,
           "url=" + url
       );
     } catch (NoSuchAlgorithmException e) {

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpBaseAPITest.java
Patch:
@@ -14,7 +14,7 @@
  */
 @Test(groups = "baseAPI")
 @Guice(modules = ApiTestModule.class)
-public class WxBaseAPITest {
+public class WxMpBaseAPITest {
 
   @Inject
   protected WxMpServiceImpl wxService;

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageHandler.java
Patch:
@@ -1,10 +1,10 @@
 package me.chanjar.weixin.cp.api;
 
-import java.util.Map;
-
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
 
+import java.util.Map;
+
 /**
  * 处理微信推送消息的处理器接口
  * @author Daniel Qian

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageInterceptor.java
Patch:
@@ -1,9 +1,9 @@
 package me.chanjar.weixin.cp.api;
 
-import java.util.Map;
-
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 
+import java.util.Map;
+
 /**
  * 微信消息拦截器，可以用来做验证
  * @author Daniel Qian

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouter.java
Patch:
@@ -1,5 +1,8 @@
 package me.chanjar.weixin.cp.api;
 
+import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
+import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -8,9 +11,6 @@
 import java.util.concurrent.Executors;
 import java.util.regex.Pattern;
 
-import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
-import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
-
 /**
  * <pre>
  * 微信消息路由器，通过代码化的配置，把来自微信的消息交给handler处理

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpMessage.java
Patch:
@@ -1,11 +1,11 @@
 package me.chanjar.weixin.cp.bean;
 
-import java.util.ArrayList;
-import java.util.List;
-
 import me.chanjar.weixin.cp.bean.messagebuilder.*;
 import me.chanjar.weixin.cp.util.json.WxCpGsonBuilder;
 
+import java.util.ArrayList;
+import java.util.List;
+
 /**
  * 消息
  * @author Daniel Qian

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/outxmlbuilder/NewsBuilder.java
Patch:
@@ -1,11 +1,11 @@
 package me.chanjar.weixin.cp.bean.outxmlbuilder;
 
-import java.util.ArrayList;
-import java.util.List;
-
 import me.chanjar.weixin.cp.bean.WxCpXmlOutNewsMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutNewsMessage.Item;
 
+import java.util.ArrayList;
+import java.util.List;
+
 /**
  * 图文消息builder
  * @author Daniel Qian

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpUserGsonAdapter.java
Patch:
@@ -8,12 +8,12 @@
  */
 package me.chanjar.weixin.cp.util.json;
 
-import java.lang.reflect.Type;
-
 import com.google.gson.*;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.cp.bean.WxCpUser;
 
+import java.lang.reflect.Type;
+
 /**
  * @author Daniel Qian
  */

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageRouterTest.java
Patch:
@@ -1,14 +1,14 @@
 package me.chanjar.weixin.cp.api;
 
-import java.util.Map;
-
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
 import org.testng.Assert;
 import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 
+import java.util.Map;
+
 /**
  * 测试消息路由器
  * @author Daniel Qian

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpUserAPITest.java
Patch:
@@ -1,9 +1,9 @@
 package me.chanjar.weixin.cp.api;
 
 import com.google.inject.Inject;
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.cp.bean.WxCpDepart;
 import me.chanjar.weixin.cp.bean.WxCpUser;
-import me.chanjar.weixin.common.exception.WxErrorException;
 import org.testng.Assert;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/bean/WxCpMessageTest.java
Patch:
@@ -1,11 +1,10 @@
 package me.chanjar.weixin.cp.bean;
 
 import me.chanjar.weixin.common.api.WxConsts;
+import me.chanjar.weixin.cp.bean.WxCpMessage.WxArticle;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 
-import me.chanjar.weixin.cp.bean.WxCpMessage.WxArticle;
-
 @Test
 public class WxCpMessageTest {
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -2,10 +2,10 @@
 
 import me.chanjar.weixin.common.bean.WxMenu;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.*;
-import me.chanjar.weixin.common.exception.WxErrorException;
 
 import java.io.File;
 import java.io.IOException;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/result/WxMpOAuth2AccessToken.java
Patch:
@@ -1,6 +1,5 @@
 package me.chanjar.weixin.mp.bean.result;
 
-import me.chanjar.weixin.common.util.json.WxGsonBuilder;
 import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;
 
 /**

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/http/QrCodeRequestExecutor.java
Patch:
@@ -1,12 +1,12 @@
 package me.chanjar.weixin.mp.util.http;
 
 import me.chanjar.weixin.common.bean.result.WxError;
+import me.chanjar.weixin.common.exception.WxErrorException;
 import me.chanjar.weixin.common.util.fs.FileUtils;
 import me.chanjar.weixin.common.util.http.InputStreamResponseHandler;
 import me.chanjar.weixin.common.util.http.RequestExecutor;
 import me.chanjar.weixin.common.util.http.Utf8ResponseHandler;
 import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;
-import me.chanjar.weixin.common.exception.WxErrorException;
 import org.apache.http.Header;
 import org.apache.http.HttpHost;
 import org.apache.http.client.ClientProtocolException;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -4,7 +4,6 @@
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.*;
-import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 
 public class WxMpGsonBuilder {
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpOAuth2AccessTokenAdapter.java
Patch:
@@ -1,7 +1,6 @@
 package me.chanjar.weixin.mp.util.json;
 
 import com.google.gson.*;
-import me.chanjar.weixin.common.bean.WxAccessToken;
 import me.chanjar.weixin.common.util.json.GsonHelper;
 import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpSemanticQueryResultAdapter.java
Patch:
@@ -10,8 +10,6 @@
 
 import com.google.gson.*;
 import me.chanjar.weixin.common.util.json.GsonHelper;
-import me.chanjar.weixin.mp.bean.result.WxMpMassSendResult;
-import me.chanjar.weixin.mp.bean.result.WxMpQrCodeTicket;
 import me.chanjar.weixin.mp.bean.result.WxMpSemanticQueryResult;
 
 import java.lang.reflect.Type;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/api/WxMpMessageRouterTest.java
Patch:
@@ -1,14 +1,14 @@
 package me.chanjar.weixin.mp.api;
 
-import java.util.Map;
-
 import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.mp.bean.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.WxMpXmlOutMessage;
 import org.testng.Assert;
 import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 
+import java.util.Map;
+
 /**
  * 测试消息路由器
  * @author chanjarster

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/bean/WxMpCustomMessageTest.java
Patch:
@@ -1,11 +1,10 @@
 package me.chanjar.weixin.mp.bean;
 
 import me.chanjar.weixin.common.api.WxConsts;
+import me.chanjar.weixin.mp.bean.WxMpCustomMessage.WxArticle;
 import org.testng.Assert;
 import org.testng.annotations.Test;
 
-import me.chanjar.weixin.mp.bean.WxMpCustomMessage.WxArticle;
-
 @Test
 public class WxMpCustomMessageTest {
 

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/bean/WxMpXmlOutImageMessageTest.java
Patch:
@@ -7,7 +7,7 @@
 public class WxMpXmlOutImageMessageTest {
 
   public void test() {
-    WxMpMpXmlOutImageMessage m = new WxMpMpXmlOutImageMessage();
+    WxMpXmlOutImageMessage m = new WxMpXmlOutImageMessage();
     m.setMediaId("ddfefesfsdfef");
     m.setCreateTime(1122l);
     m.setFromUserName("from");
@@ -25,7 +25,7 @@ public void test() {
   }
   
   public void testBuild() {
-    WxMpMpXmlOutImageMessage m = WxMpXmlOutMessage.IMAGE().mediaId("ddfefesfsdfef").fromUser("from").toUser("to").build();
+    WxMpXmlOutImageMessage m = WxMpXmlOutMessage.IMAGE().mediaId("ddfefesfsdfef").fromUser("from").toUser("to").build();
     String expected = "<xml>"
         + "<ToUserName><![CDATA[to]]></ToUserName>"
         + "<FromUserName><![CDATA[from]]></FromUserName>"

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -14,7 +14,7 @@ public class WxMpGsonBuilder {
     INSTANCE.disableHtmlEscaping();
     INSTANCE.registerTypeAdapter(WxMpCustomMessage.class, new WxMpCustomMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassNews.class, new WxMpMassNewsGsonAdapter());
-    INSTANCE.registerTypeAdapter(WxMpMassGroupMessage.class, new WxMpMassMessageGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpMassGroupMessage.class, new WxMpMassGroupMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassOpenIdsMessage.class, new WxMpMassOpenIdsMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpGroup.class, new WxMpGroupGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpUser.class, new WxUserGsonAdapter());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpServiceImpl.java
Patch:
@@ -335,7 +335,7 @@ public String[] oauth2getUserInfo(String code) throws WxErrorException {
     String url = "https://qyapi.weixin.qq.com/cgi-bin/user/getuserinfo?";
     url += "access_token=" + wxCpConfigStorage.getAccessToken();
     url += "&code=" + code;
-    url += "agendid=" + wxCpConfigStorage.getAgentId();
+    url += "&agendid=" + wxCpConfigStorage.getAgentId();
 
     try {
       RequestExecutor<String, String> executor = new SimpleGetRequestExecutor();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpService.java
Patch:
@@ -315,8 +315,9 @@ public interface WxMpService {
    * </pre>
    * @param templateMessage
    * @throws WxErrorException
+   * @return msgid
    */
-  public void templateSend(WxMpTemplateMessage templateMessage) throws WxErrorException;
+  public String templateSend(WxMpTemplateMessage templateMessage) throws WxErrorException;
 
   /**
    * <pre>

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpMessageRouter.java
Patch:
@@ -77,6 +77,9 @@ public WxCpXmlOutMessage route(final WxCpXmlMessage wxMessage) {
     for (final Rule rule : rules) {
       if (rule.test(wxMessage)) {
         matchRules.add(rule);
+        if(!rule.reEnter) {
+          break;
+        }
       }
     }
 
@@ -91,9 +94,6 @@ public WxCpXmlOutMessage route(final WxCpXmlMessage wxMessage) {
         public void run() {
           for (final Rule rule : matchRules) {
             rule.service(wxMessage);
-            if (!rule.reEnter) {
-              break;
-            }
           }
         }
       });

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpMessageRouter.java
Patch:
@@ -77,6 +77,9 @@ public WxMpXmlOutMessage route(final WxMpXmlMessage wxMessage) {
     for (final Rule rule : rules) {
       if (rule.test(wxMessage)) {
         matchRules.add(rule);
+        if(!rule.reEnter) {
+          break;
+        }
       }
     }
     
@@ -91,9 +94,6 @@ public WxMpXmlOutMessage route(final WxMpXmlMessage wxMessage) {
         public void run() {
           for (final Rule rule : matchRules) {
             rule.service(wxMessage);
-            if (!rule.reEnter) {
-              break;
-            }
           }
         }
       });

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/api/WxCpConfigStorage.java
Patch:
@@ -27,6 +27,8 @@ public interface WxCpConfigStorage {
 
   public int getExpiresIn();
 
+  public String getOauth2redirectUri();
+
   public String getHttp_proxy_host();
 
   public int getHttp_proxy_port();

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpInMemoryConfigStorage.java
Patch:
@@ -16,11 +16,12 @@ public class WxMpInMemoryConfigStorage implements WxMpConfigStorage {
   protected String aesKey;
   protected int expiresIn;
 
+  protected String oauth2redirectUri;
+
   protected String http_proxy_host;
   protected int http_proxy_port;
   protected String http_proxy_username;
   protected String http_proxy_password;
-  protected String oauth2redirectUri;
 
   public void updateAccessToken(WxAccessToken accessToken) {
     updateAccessToken(accessToken.getAccessToken(), accessToken.getExpiresIn());

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpDemoServer.java
Patch:
@@ -16,9 +16,6 @@
 import java.io.InputStream;
 import java.util.Map;
 
-/**
- * @author Daniel Qian
- */
 public class WxMpDemoServer {
 
   private static WxMpConfigStorage wxMpConfigStorage;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/demo/WxMpOAuth2Servlet.java
Patch:
@@ -22,9 +22,6 @@
 import java.io.InputStream;
 import java.util.Map;
 
-/**
- * @author Daniel Qian
- */
 public class WxMpOAuth2Servlet extends HttpServlet {
 
   protected WxMpService wxMpService;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpConfigStorage.java
Patch:
@@ -25,7 +25,7 @@ public interface WxMpConfigStorage {
 
   public int getExpiresIn();
 
-  public String getOauth2redirectUrl();
+  public String getOauth2redirectUri();
 
   public String getHttp_proxy_host();
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpServiceImpl.java
Patch:
@@ -27,13 +27,11 @@
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.client.methods.HttpGet;
-import org.apache.http.client.utils.URIUtils;
 import org.apache.http.impl.client.BasicCredentialsProvider;
 import org.apache.http.impl.client.BasicResponseHandler;
 import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.http.impl.client.HttpClients;
 
-import javax.print.DocFlavor;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -303,7 +301,7 @@ public WxMpSemanticQueryResult semanticQuery(WxMpSemanticQuery semanticQuery) th
   public String oauth2buildAuthorizationUrl(String scope, String state) {
     String url = "https://open.weixin.qq.com/connect/oauth2/authorize?" ;
     url += "appid=" + wxMpConfigStorage.getAppId();
-    url += "&redirect_uri=" + URIUtil.encodeURIComponent(wxMpConfigStorage.getOauth2redirectUrl());
+    url += "&redirect_uri=" + URIUtil.encodeURIComponent(wxMpConfigStorage.getOauth2redirectUri());
     url += "&response_type=code";
     url += "&scope=" + scope;
     if (state != null) {

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -4,6 +4,7 @@
 import com.google.gson.GsonBuilder;
 import me.chanjar.weixin.mp.bean.*;
 import me.chanjar.weixin.mp.bean.result.*;
+import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;
 
 public class WxMpGsonBuilder {
 
@@ -24,6 +25,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpQrCodeTicket.class, new WxQrCodeTicketAdapter());
     INSTANCE.registerTypeAdapter(WxMpTemplateMessage.class, new WxMpTemplateMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMpSemanticQueryResult.class, new WxMpSemanticQueryResultAdapter());
+    INSTANCE.registerTypeAdapter(WxMpOAuth2AccessToken.class, new WxMpOAuth2AccessTokenAdapter());
   }
   
   public static Gson create() {

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/xml/XmlTransformer.java
Patch:
@@ -59,6 +59,7 @@ public static <T> void toXml(Class<T> clazz, T object, Writer writer) throws JAX
     Marshaller m = JAXB_CONTEXT.createMarshaller();
     m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
     m.setProperty(CharacterEscapeHandler.class.getName(), CHAR_ESCAPE_HANDLER);
+    m.setProperty(Marshaller.JAXB_FRAGMENT, true);
     m.marshal(object, writer);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/xml/XmlTransformer.java
Patch:
@@ -56,6 +56,7 @@ public static <T> void toXml(Class<T> clazz, T object, Writer writer) throws JAX
     Marshaller m = JAXB_CONTEXT.createMarshaller();
     m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
     m.setProperty(CharacterEscapeHandler.class.getName(), CHAR_ESCAPE_HANDLER);
+    m.setProperty(Marshaller.JAXB_FRAGMENT, true);
     m.marshal(object, writer);
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/api/WxMpConfigStorage.java
Patch:
@@ -25,6 +25,8 @@ public interface WxMpConfigStorage {
 
   public int getExpiresIn();
 
+  public String getOauth2redirectUrl();
+
   public String getHttp_proxy_host();
 
   public int getHttp_proxy_port();

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpMessageGsonAdapter.java
Patch:
@@ -31,7 +31,7 @@ public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializat
     messageJson.addProperty("msgtype", message.getMsgType());
 
     if (StringUtils.isNotBlank(message.getToParty())) {
-      messageJson.addProperty("toparty", message.getToUser());
+      messageJson.addProperty("toparty", message.getToParty());
     }
     if (StringUtils.isNotBlank(message.getToTag())) {
       messageJson.addProperty("totag", message.getToUser());

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/bean/WxCpXmlOutNewsMessage.java
Patch:
@@ -10,7 +10,7 @@
 
 @XmlRootElement(name = "xml")
 @XmlAccessorType(XmlAccessType.FIELD)
-public class WxCpXmlOutMewsMessage extends WxCpXmlOutMessage {
+public class WxCpXmlOutNewsMessage extends WxCpXmlOutMessage {
 
   @XmlElement(name = "ArticleCount")
   protected int articleCount;
@@ -19,7 +19,7 @@ public class WxCpXmlOutMewsMessage extends WxCpXmlOutMessage {
   @XmlElement(name = "item")
   protected final List<Item> articles = new ArrayList<Item>();
   
-  public WxCpXmlOutMewsMessage() {
+  public WxCpXmlOutNewsMessage() {
     this.msgType = WxConsts.XML_MSG_NEWS;
   }
 

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/xml/XmlTransformer.java
Patch:
@@ -79,7 +79,7 @@ private static JAXBContext initJAXBContext() {
       return JAXBContext.newInstance(
           WxCpXmlOutMessage.class,
           WxCpXmlOutImageMessage.class,
-          WxCpXmlOutMewsMessage.class,
+          WxCpXmlOutNewsMessage.class,
           WxCpXmlOutTextMessage.class,
           WxCpXmlOutVideoMessage.class,
           WxCpXmlOutVoiceMessage.class,

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/bean/WxMpXmlOutNewsMessage.java
Patch:
@@ -10,7 +10,7 @@
 
 @XmlRootElement(name = "xml")
 @XmlAccessorType(XmlAccessType.FIELD)
-public class WxMpXmlOutMewsMessage extends WxMpXmlOutMessage {
+public class WxMpXmlOutNewsMessage extends WxMpXmlOutMessage {
 
   @XmlElement(name = "ArticleCount")
   protected int articleCount;
@@ -19,7 +19,7 @@ public class WxMpXmlOutMewsMessage extends WxMpXmlOutMessage {
   @XmlElement(name = "item")
   protected final List<Item> articles = new ArrayList<Item>();
   
-  public WxMpXmlOutMewsMessage() {
+  public WxMpXmlOutNewsMessage() {
     this.msgType = WxConsts.XML_MSG_NEWS;
   }
 

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/xml/XmlTransformer.java
Patch:
@@ -76,7 +76,7 @@ private static JAXBContext initJAXBContext() {
       return JAXBContext.newInstance(
           WxMpXmlOutMessage.class,
           WxMpMpXmlOutImageMessage.class,
-          WxMpXmlOutMewsMessage.class,
+          WxMpXmlOutNewsMessage.class,
           WxMpXmlOutMusicMessage.class,
           WxMpXmlOutTextMessage.class,
           WxMpXmlOutVideoMessage.class,

File: weixin-java-cp/src/main/java/me/chanjar/weixin/cp/util/json/WxCpMessageGsonAdapter.java
Patch:
@@ -75,6 +75,7 @@ public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializat
     }
 
     if (WxConsts.CUSTOM_MSG_NEWS.equals(message.getMsgType())) {
+      JsonObject newsJsonObject = new JsonObject();
       JsonArray articleJsonArray = new JsonArray();
       for (WxCpMessage.WxArticle article : message.getArticles()) {
         JsonObject articleJson = new JsonObject();
@@ -84,7 +85,8 @@ public JsonElement serialize(WxCpMessage message, Type typeOfSrc, JsonSerializat
         articleJson.addProperty("picurl", article.getPicUrl());
         articleJsonArray.add(articleJson);
       }
-      messageJson.add("articles", articleJsonArray);
+      newsJsonObject.add("articles", articleJsonArray);
+      messageJson.add("news", newsJsonObject);
     }
     
     return messageJson;

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpCustomMessageGsonAdapter.java
Patch:
@@ -64,6 +64,7 @@ public JsonElement serialize(WxMpCustomMessage message, Type typeOfSrc, JsonSeri
     }
     
     if (WxConsts.CUSTOM_MSG_NEWS.equals(message.getMsgType())) {
+      JsonObject newsJsonObject = new JsonObject();
       JsonArray articleJsonArray = new JsonArray();
       for (WxMpCustomMessage.WxArticle article : message.getArticles()) {
         JsonObject articleJson = new JsonObject();
@@ -73,7 +74,8 @@ public JsonElement serialize(WxMpCustomMessage message, Type typeOfSrc, JsonSeri
         articleJson.addProperty("picurl", article.getPicUrl());
         articleJsonArray.add(articleJson);
       }
-      messageJson.add("articles", articleJsonArray);
+      newsJsonObject.add("articles", articleJsonArray);
+      messageJson.add("news", newsJsonObject);
     }
     
     return messageJson;

File: weixin-java-mp/src/test/java/me/chanjar/weixin/mp/bean/WxMpCustomMessageTest.java
Patch:
@@ -108,7 +108,7 @@ public void testNewsReply() {
     reply.getArticles().add(article2);
 
     
-    Assert.assertEquals(reply.toJson(), "{\"touser\":\"OPENID\",\"msgtype\":\"news\",\"articles\":[{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"},{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"}]}");
+    Assert.assertEquals(reply.toJson(), "{\"touser\":\"OPENID\",\"msgtype\":\"news\",\"news\":{\"articles\":[{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"},{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"}]}}");
   }
   
   public void testNewsBuild() {
@@ -125,8 +125,8 @@ public void testNewsBuild() {
     article2.setTitle("Happy Day");
 
     WxMpCustomMessage reply = WxMpCustomMessage.NEWS().toUser("OPENID").addArticle(article1).addArticle(article2).build();
-    
-    Assert.assertEquals(reply.toJson(), "{\"touser\":\"OPENID\",\"msgtype\":\"news\",\"articles\":[{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"},{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"}]}");
+
+    Assert.assertEquals(reply.toJson(), "{\"touser\":\"OPENID\",\"msgtype\":\"news\",\"news\":{\"articles\":[{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"},{\"title\":\"Happy Day\",\"description\":\"Is Really A Happy Day\",\"url\":\"URL\",\"picurl\":\"PIC_URL\"}]}}");
   }
   
 }

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -23,6 +23,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpMassUploadResult.class, new WxMpMassUploadResultAdapter());
     INSTANCE.registerTypeAdapter(WxMpQrCodeTicket.class, new WxQrCodeTicketAdapter());
     INSTANCE.registerTypeAdapter(WxMpTemplateMessage.class, new WxMpTemplateMessageGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxMpSemanticQueryResult.class, new WxMpSemanticQueryResultAdapter());
   }
   
   public static Gson create() {

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/util/http/RequestExecutor.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 
+import org.apache.http.HttpHost;
 import org.apache.http.client.ClientProtocolException;
 import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.http.impl.client.HttpClients;
@@ -17,8 +18,6 @@
  */
 public interface RequestExecutor<T, E> {
 
-  public static final CloseableHttpClient httpclient = HttpClients.createDefault();
+  public T execute(CloseableHttpClient httpclient, HttpHost httpProxy, String uri, E data) throws WxErrorException, ClientProtocolException, IOException;
 
-  public T execute(String uri, E data) throws WxErrorException, ClientProtocolException, IOException;
-  
 }

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMediaAPITest.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.result.WxMediaUploadResult;
 import org.testng.Assert;
 import org.testng.annotations.DataProvider;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageAPITest.java
Patch:
@@ -1,5 +1,6 @@
 package me.chanjar.weixin.cp.api;
 
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.cp.bean.WxCpMessage;
 import org.testng.annotations.Guice;
 import org.testng.annotations.Test;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxCpMessageRouterTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.util.Map;
 
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.cp.bean.WxCpXmlMessage;
 import me.chanjar.weixin.cp.bean.WxCpXmlOutMessage;
 import org.testng.Assert;

File: weixin-java-cp/src/test/java/me/chanjar/weixin/cp/api/WxMenuAPITest.java
Patch:
@@ -2,6 +2,7 @@
 
 import javax.xml.bind.JAXBException;
 
+import me.chanjar.weixin.common.api.WxConsts;
 import me.chanjar.weixin.common.bean.WxMenu;
 import org.testng.Assert;
 import org.testng.annotations.DataProvider;

File: weixin-java-common/src/main/java/me/chanjar/weixin/common/api/WxConsts.java
Patch:
@@ -88,6 +88,7 @@ public class WxConsts {
   public static final String EVT_PIC_PHOTO_OR_ALBUM = "pic_photo_or_album";
   public static final String EVT_PIC_WEIXIN = "pic_weixin";
   public static final String EVT_LOCATION_SELECT = "location_select";
+  public static final String EVT_TEMPLATESENDJOBFINISH = "TEMPLATESENDJOBFINISH";
 
   ///////////////////////
   // 上传多媒体文件的类型

File: weixin-java-mp/src/main/java/me/chanjar/weixin/mp/util/json/WxMpGsonBuilder.java
Patch:
@@ -22,6 +22,7 @@ public class WxMpGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMpMassSendResult.class, new WxMpMassSendResultAdapter());
     INSTANCE.registerTypeAdapter(WxMpMassUploadResult.class, new WxMpMassUploadResultAdapter());
     INSTANCE.registerTypeAdapter(WxMpQrCodeTicket.class, new WxQrCodeTicketAdapter());
+    INSTANCE.registerTypeAdapter(WxMpTemplateMessage.class, new WxMpTemplateMessageGsonAdapter());
   }
   
   public static Gson create() {

File: src/main/java/me/chanjar/weixin/api/WxConsts.java
Patch:
@@ -78,7 +78,7 @@ public class WxConsts {
   public static final String EVT_UNSUBSCRIBE = "unsubscribe";
   public static final String EVT_SCAN = "SCAN";
   public static final String EVT_LOCATION = "LOCATION";
-  public static final String EVT_CLICK = "LOCATION";
+  public static final String EVT_CLICK = "CLICK";
   public static final String EVT_VIEW = "VIEW";
   public static final String EVT_MASS_SEND_JOB_FINISH = "MASSSENDJOBFINISH";
 

File: src/test/java/me/chanjar/weixin/api/WxBaseAPITest.java
Patch:
@@ -33,9 +33,9 @@ public void testRefreshAccessToken() throws WxErrorException {
   }
 
   public void testCheckSignature() throws WxErrorException {
-    String timestamp = "23234235423246";
-    String nonce = "y7didfkcmvnbd90sdofjkiefhsd";
-    String signature = "77b6651628dfb9a64bfb0d3432ee053ac566a459";
+    String timestamp = "1413729506";
+    String nonce = "1753282854";
+    String signature = "af210121811dce2d6f306612cb133cba490e818b";
     Assert.assertTrue(wxService.checkSignature(timestamp, nonce, signature));
   }
 

File: src/test/java/me/chanjar/weixin/api/WxMessageRouterTest.java
Patch:
@@ -71,7 +71,7 @@ public void testConcurrency() throws InterruptedException {
     router.rule().handler(new WxMessageHandler() {
       @Override
       public WxXmlOutMessage handle(WxXmlMessage wxMessage, Map<String, Object> context) {
-        // TODO Auto-generated method stub
+        System.out.println(wxMessage.toString());
         return null;
       }
     }).end();

File: src/main/java/chanjarster/weixin/bean/custombuilder/ImageBuilder.java
Patch:
@@ -18,7 +18,7 @@ public ImageBuilder() {
     this.msgtype = WxConsts.CUSTOM_MSG_IMAGE;
   }
 
-  public ImageBuilder media_id(String media_id) {
+  public ImageBuilder mediaId(String media_id) {
     this.media_id = media_id;
     return this;
   }

File: src/main/java/chanjarster/weixin/bean/custombuilder/MusicBuilder.java
Patch:
@@ -27,12 +27,12 @@ public MusicBuilder() {
     this.msgtype = WxConsts.CUSTOM_MSG_MUSIC;
   }
 
-  public MusicBuilder musicurl(String musicurl) {
+  public MusicBuilder musicUrl(String musicurl) {
     this.musicurl = musicurl;
     return this;
   }
 
-  public MusicBuilder hqmusicurl(String hqmusicurl) {
+  public MusicBuilder hqmusicUrl(String hqmusicurl) {
     this.hqmusicurl = hqmusicurl;
     return this;
   }
@@ -47,7 +47,7 @@ public MusicBuilder description(String description) {
     return this;
   }
 
-  public MusicBuilder thumb_media_id(String thumb_media_id) {
+  public MusicBuilder thumbMediaId(String thumb_media_id) {
     this.thumb_media_id = thumb_media_id;
     return this;
   }

File: src/main/java/chanjarster/weixin/bean/custombuilder/VideoBuilder.java
Patch:
@@ -27,7 +27,7 @@ public VideoBuilder() {
     this.msgtype = WxConsts.CUSTOM_MSG_VIDEO;
   }
 
-  public VideoBuilder media_id(String media_id) {
+  public VideoBuilder mediaId(String media_id) {
     this.media_id = media_id;
     return this;
   }
@@ -42,7 +42,7 @@ public VideoBuilder description(String description) {
     return this;
   }
 
-  public VideoBuilder thumb_media_id(String thumb_media_id) {
+  public VideoBuilder thumbMediaId(String thumb_media_id) {
     this.thumb_media_id = thumb_media_id;
     return this;
   }

File: src/main/java/chanjarster/weixin/bean/custombuilder/VoiceBuilder.java
Patch:
@@ -18,7 +18,7 @@ public VoiceBuilder() {
     this.msgtype = WxConsts.CUSTOM_MSG_VOICE;
   }
 
-  public VoiceBuilder media_id(String media_id) {
+  public VoiceBuilder mediaId(String media_id) {
     this.media_id = media_id;
     return this;
   }

File: src/main/java/chanjarster/weixin/bean/outxmlbuilder/MusicBuilder.java
Patch:
@@ -25,7 +25,7 @@ public MusicBuilder description(String description) {
     return this;
   }
 
-  public MusicBuilder hQMusicUrl(String hQMusicUrl) {
+  public MusicBuilder hqmusicUrl(String hQMusicUrl) {
     this.hQMusicUrl = hQMusicUrl;
     return this;
   }

File: src/test/java/chanjarster/weixin/bean/WxXmlOutIMusicMessageTest.java
Patch:
@@ -41,7 +41,7 @@ public void testBuild() {
           .touser("toUser")
           .title("title")
           .description("ddfff")
-          .hQMusicUrl("hQMusicUrl")
+          .hqmusicUrl("hQMusicUrl")
           .musicUrl("musicUrl")
           .thumbMediaId("thumbMediaId")
           .build();

File: src/main/java/chanjarster/weixin/bean/outxmlbuilder/BaseBuilder.java
Patch:
@@ -9,8 +9,6 @@ public abstract class BaseBuilder<BuilderType, ValueType> {
   
   protected String fromUserName;
   
-  protected String msgtype;
-
   public BuilderType touser(String touser) {
     this.toUserName = touser;
     return (BuilderType) this;
@@ -26,7 +24,6 @@ public BuilderType fromUser(String fromusername) {
   public void setCommon(WxXmlOutMessage m) {
     m.setToUserName(this.toUserName);
     m.setFromUserName(this.fromUserName);
-    m.setMsgType(this.msgtype);
     m.setCreateTime(System.currentTimeMillis() / 1000l);
   }
   

File: src/main/java/chanjarster/weixin/api/WxConsts.java
Patch:
@@ -13,7 +13,7 @@ public class WxConsts {
   public static final String XML_MSG_VOICE = "voice";
   public static final String XML_MSG_VIDEO = "video";
   public static final String XML_MSG_NEWS = "news";
-  public static final String XML_MSG_MUSIC = "news";
+  public static final String XML_MSG_MUSIC = "music";
   public static final String XML_MSG_LOCATION = "location";
   public static final String XML_MSG_LINK = "link";
   public static final String XML_MSG_EVENT = "event";

File: src/main/java/chanjarster/weixin/api/WxMessageHandler.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.Map;
 
 import chanjarster.weixin.bean.WxXmlMessage;
+import chanjarster.weixin.bean.WxXmlOutMessage;
 
 /**
  * 处理微信推送消息的处理器接口
@@ -17,6 +18,6 @@ public interface WxMessageHandler {
    * @param context  上下文，如果handler或interceptor之间有信息要传递，可以用这个
    * @return xml格式的消息，如果在异步规则里处理的话，可以返回null
    */
-  public WxXmlMessage handle(WxXmlMessage wxMessage, Map<String, Object> context);
+  public WxXmlOutMessage handle(WxXmlMessage wxMessage, Map<String, Object> context);
   
 }

File: src/test/java/chanjarster/weixin/api/WxMessageRouterTest.java
Patch:
@@ -7,6 +7,7 @@
 import org.testng.annotations.Test;
 
 import chanjarster.weixin.bean.WxXmlMessage;
+import chanjarster.weixin.bean.WxXmlOutMessage;
 
 /**
  * 测试消息路由器
@@ -65,7 +66,7 @@ public void testConcurrency() throws InterruptedException {
     final WxMessageRouter router = new WxMessageRouter();
     router.rule().handler(new WxMessageHandler() {
       @Override
-      public WxXmlMessage handle(WxXmlMessage wxMessage, Map<String, Object> context) {
+      public WxXmlOutMessage handle(WxXmlMessage wxMessage, Map<String, Object> context) {
         // TODO Auto-generated method stub
         return null;
       }
@@ -144,7 +145,7 @@ public WxEchoMessageHandler(StringBuffer sb, String echoStr) {
     }
 
     @Override
-    public WxXmlMessage handle(WxXmlMessage wxMessage, Map<String, Object> context) {
+    public WxXmlOutMessage handle(WxXmlMessage wxMessage, Map<String, Object> context) {
       sb.append(this.echoStr).append(',');
       return null;
     }

File: src/main/java/chanjarster/weixin/bean/custombuilder/BaseBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.bean.WxCustomMessage;
 

File: src/main/java/chanjarster/weixin/bean/custombuilder/ImageBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.api.WxConsts;
 import chanjarster.weixin.bean.WxCustomMessage;

File: src/main/java/chanjarster/weixin/bean/custombuilder/MusicBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.api.WxConsts;
 import chanjarster.weixin.bean.WxCustomMessage;

File: src/main/java/chanjarster/weixin/bean/custombuilder/NewsArticleBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.bean.WxCustomMessage;
 

File: src/main/java/chanjarster/weixin/bean/custombuilder/NewsBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import java.util.ArrayList;
 import java.util.List;

File: src/main/java/chanjarster/weixin/bean/custombuilder/TextBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.api.WxConsts;
 import chanjarster.weixin.bean.WxCustomMessage;

File: src/main/java/chanjarster/weixin/bean/custombuilder/VideoBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.api.WxConsts;
 import chanjarster.weixin.bean.WxCustomMessage;

File: src/main/java/chanjarster/weixin/bean/custombuilder/VoiceBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package chanjarster.weixin.bean.custom;
+package chanjarster.weixin.bean.custombuilder;
 
 import chanjarster.weixin.api.WxConsts;
 import chanjarster.weixin.bean.WxCustomMessage;

File: src/main/java/chanjarster/weixin/api/WxMessageHandler.java
Patch:
@@ -15,7 +15,8 @@ public interface WxMessageHandler {
    * 
    * @param wxMessage
    * @param context  上下文，如果handler或interceptor之间有信息要传递，可以用这个
+   * @return xml格式的消息，如果在异步规则里处理的话，可以返回null
    */
-  public void handle(WxXmlMessage wxMessage, Map<String, Object> context);
+  public WxXmlMessage handle(WxXmlMessage wxMessage, Map<String, Object> context);
   
 }

File: src/main/java/chanjarster/weixin/api/WxService.java
Patch:
@@ -276,7 +276,7 @@ public interface WxService {
    * 换取临时二维码ticket
    * 详情请见: http://mp.weixin.qq.com/wiki/index.php?title=生成带参数的二维码
    * </pre>
-   * @param scene_id          参数。目前只支持1--100000
+   * @param scene_id          参数。
    * @param expire_seconds    过期秒数，默认60秒，最小60秒，最大1800秒
    * @return
    * @throws WxErrorException
@@ -288,7 +288,7 @@ public interface WxService {
    * 换取永久二维码ticket
    * 详情请见: http://mp.weixin.qq.com/wiki/index.php?title=生成带参数的二维码
    * </pre>
-   * @param scene_id    参数。目前只支持1--100000
+   * @param scene_id    参数。永久二维码时最大值为100000（目前参数只支持1--100000）
    * @return
    * @throws WxErrorException
    */

File: src/main/java/chanjarster/weixin/util/fs/FileUtils.java
Patch:
@@ -5,7 +5,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 
-public class FileUtil {
+public class FileUtils {
 
   /**
    * 创建临时文件

File: src/main/java/chanjarster/weixin/util/http/MediaDownloadRequestExecutor.java
Patch:
@@ -15,10 +15,10 @@
 
 import chanjarster.weixin.bean.result.WxError;
 import chanjarster.weixin.exception.WxErrorException;
-import chanjarster.weixin.util.fs.FileUtil;
+import chanjarster.weixin.util.fs.FileUtils;
 
 /**
- * 下载媒体文件请求执行器，请求的参数是String, 返回的结果是String
+ * 下载媒体文件请求执行器，请求的参数是String, 返回的结果是File
  * @author chanjarster
  *
  */
@@ -52,7 +52,7 @@ public File execute(String uri, String queryParam) throws WxErrorException, Clie
       return null;
     }
     String[] name_ext = fileName.split("\\.");
-    File localFile = FileUtil.createTmpFile(inputStream, name_ext[0], name_ext[1]);
+    File localFile = FileUtils.createTmpFile(inputStream, name_ext[0], name_ext[1]);
     return localFile;
   }
 

File: src/main/java/chanjarster/weixin/api/WxConsts.java
Patch:
@@ -17,6 +17,7 @@ public class WxConsts {
   public static final String XML_MSG_LOCATION = "location";
   public static final String XML_MSG_LINK = "link";
   public static final String XML_MSG_EVENT = "event";
+  public static final String XML_TRANSFER_CUSTOMER_SERVICE = "transfer_customer_service";
   
   ///////////////////////
   // 客服消息的消息类型

File: src/main/java/chanjarster/weixin/util/json/WxGsonBuilder.java
Patch:
@@ -7,6 +7,7 @@
 import chanjarster.weixin.bean.WxMassOpenIdsMessage;
 import chanjarster.weixin.bean.WxMenu;
 import chanjarster.weixin.bean.result.WxUser;
+import chanjarster.weixin.bean.result.WxUserList;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
@@ -24,6 +25,7 @@ public class WxGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMassOpenIdsMessage.class, new WxMassOpenIdsMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxGroup.class, new WxGroupGsonAdapter());
     INSTANCE.registerTypeAdapter(WxUser.class, new WxUserGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxUserList.class, new WxUserListGsonAdapter());
   }
   
   public static Gson create() {

File: src/main/java/chanjarster/weixin/util/json/WxGsonBuilder.java
Patch:
@@ -6,6 +6,7 @@
 import chanjarster.weixin.bean.WxMassNews;
 import chanjarster.weixin.bean.WxMassOpenIdsMessage;
 import chanjarster.weixin.bean.WxMenu;
+import chanjarster.weixin.bean.result.WxUser;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
@@ -22,7 +23,7 @@ public class WxGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMassGroupMessage.class, new WxMassMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMassOpenIdsMessage.class, new WxMassOpenIdsMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxGroup.class, new WxGroupGsonAdapter());
-    
+    INSTANCE.registerTypeAdapter(WxUser.class, new WxUserGsonAdapter());
   }
   
   public static Gson create() {

File: src/test/java/chanjarster/weixin/api/WxGroupAPITest.java
Patch:
@@ -58,6 +58,6 @@ public void getGroupUpdate() throws WxErrorException {
   @Test(dependsOnMethods={"testGroupGet", "testGroupCreate"})
   public void getGroupMoveUser() throws WxErrorException {
     WxXmlConfigStorage configStorage = (WxXmlConfigStorage) wxService.wxConfigStorage;
-    wxService.groupMoveUser(configStorage.getOpenId(), group.getId());
+    wxService.userUpdateGroup(configStorage.getOpenId(), group.getId());
   }
 }

File: src/test/java/chanjarster/weixin/api/WxMassMessageAPITest.java
Patch:
@@ -32,7 +32,7 @@ public class WxMassMessageAPITest {
   @Inject
   protected WxServiceImpl wxService;
 
-  @Test(enabled = false)
+  @Test
   public void testSendMassTextByOpenIds() throws WxErrorException {
     // 发送群发消息
     WxXmlConfigStorage configProvider = (WxXmlConfigStorage) wxService.wxConfigStorage;
@@ -46,7 +46,7 @@ public void testSendMassTextByOpenIds() throws WxErrorException {
     Assert.assertNotNull(massResult.getMsg_id());
   }
 
-  @Test(enabled = true, dataProvider="massMessages")
+  @Test(dataProvider="massMessages")
   public void testSendMassByOpenIds(String massMsgType, String mediaId) throws WxErrorException, IOException {
     // 发送群发消息
     WxXmlConfigStorage configProvider = (WxXmlConfigStorage) wxService.wxConfigStorage;

File: src/main/java/chanjarster/weixin/bean/WxGroup.java
Patch:
@@ -9,7 +9,7 @@
  */
 public class WxGroup {
 
-  private long id;
+  private long id = -1;
   private String name;
   private long count;
   public long getId() {

File: src/main/java/chanjarster/weixin/bean/WxGroup.java
Patch:
@@ -35,7 +35,7 @@ public static WxGroup fromJson(String json) {
     return WxGsonBuilder.create().fromJson(json, WxGroup.class);
   }
   
-  public String toJson(String json) {
+  public String toJson() {
     return WxGsonBuilder.create().toJson(this);
   }
   @Override

File: src/test/java/chanjarster/weixin/api/WxCustomMessageAPITest.java
Patch:
@@ -22,10 +22,10 @@ public class WxCustomMessageAPITest {
   protected WxServiceImpl wxService;
 
   public void testSendCustomMessage() throws WxErrorException {
-    WxXmlConfigStorage configProvider = (WxXmlConfigStorage) wxService.wxConfigStorage;
+    WxXmlConfigStorage configStorage = (WxXmlConfigStorage) wxService.wxConfigStorage;
     WxCustomMessage message = new WxCustomMessage();
     message.setMsgtype(WxConsts.CUSTOM_MSG_TEXT);
-    message.setTouser(configProvider.getOpenId());
+    message.setTouser(configStorage.getOpenId());
     message.setContent("欢迎欢迎，热烈欢迎\n换行测试\n超链接:<a href=\"http://www.baidu.com\">Hello World</a>");
 
     wxService.customMessageSend(message);

File: src/main/java/chanjarster/weixin/api/WxConfigStorage.java
Patch:
@@ -3,7 +3,7 @@
 import chanjarster.weixin.bean.WxAccessToken;
 
 /**
- * 微信配置的工具类
+ * 微信客户端配置存储
  * @author chanjarster
  *
  */

File: src/main/java/chanjarster/weixin/bean/WxMassVideo.java
Patch:
@@ -9,9 +9,9 @@
  */
 public class WxMassVideo {
 
-  protected String media_id;
-  protected String title;
-  protected String description;
+  private String media_id;
+  private String title;
+  private String description;
 
   public String getTitle() {
     return title;

File: src/main/java/chanjarster/weixin/bean/result/WxMassSendResult.java
Patch:
@@ -15,9 +15,9 @@
  */
 public class WxMassSendResult {
 
-  protected String errcode;
-  protected String errmsg;
-  protected String msg_id;
+  private String errcode;
+  private String errmsg;
+  private String msg_id;
 
   public String getErrcode() {
     return errcode;

File: src/main/java/chanjarster/weixin/bean/result/WxMassUploadResult.java
Patch:
@@ -12,9 +12,9 @@
  */
 public class WxMassUploadResult {
 
-  protected String type;
-  protected String media_id;
-  protected long created_at;
+  private String type;
+  private String media_id;
+  private long created_at;
 
   public String getType() {
     return type;

File: src/main/java/chanjarster/weixin/util/json/WxGsonBuilder.java
Patch:
@@ -1,6 +1,7 @@
 package chanjarster.weixin.util.json;
 
 import chanjarster.weixin.bean.WxCustomMessage;
+import chanjarster.weixin.bean.WxGroup;
 import chanjarster.weixin.bean.WxMassGroupMessage;
 import chanjarster.weixin.bean.WxMassNews;
 import chanjarster.weixin.bean.WxMassOpenIdsMessage;
@@ -20,6 +21,8 @@ public class WxGsonBuilder {
     INSTANCE.registerTypeAdapter(WxMassNews.class, new WxMassNewsGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMassGroupMessage.class, new WxMassMessageGsonAdapter());
     INSTANCE.registerTypeAdapter(WxMassOpenIdsMessage.class, new WxMassOpenIdsMessageGsonAdapter());
+    INSTANCE.registerTypeAdapter(WxGroup.class, new WxGroupGsonAdapter());
+    
   }
   
   public static Gson create() {

File: src/test/java/chanjarster/weixin/api/WxMenuAPITest.java
Patch:
@@ -18,7 +18,7 @@
  * @author chanjarster
  *
  */
-@Test(dependsOnGroups="baseAPI")
+@Test(groups="menuAPI", dependsOnGroups="baseAPI")
 @Guice(modules = ApiTestModule.class)
 public class WxMenuAPITest {
 

File: src/test/java/chanjarster/weixin/api/WxMessageRouterTest.java
Patch:
@@ -50,6 +50,7 @@ public void testSimple(WxXmlMessage message, String expected) {
   public void test() {
     
   }
+  
   @DataProvider(name="messages-1")
   public Object[][] messages2() {
     WxXmlMessage message1 = new WxXmlMessage();

