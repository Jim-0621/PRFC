File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbSyncService.java
Patch:
@@ -294,7 +294,7 @@ private void insert(BatchExecutor batchExecutor, MappingConfig config, SingleDml
             batchExecutor.execute(insertSql.toString(), values);
         } catch (SQLException e) {
             if (skipDupException
-                && (e.getMessage().contains("Duplicate entry") || e.getMessage().startsWith("ORA-00001:"))) {
+                && (e.getMessage().contains("Duplicate entry") || e.getMessage().contains("duplicate key") || e.getMessage().startsWith("ORA-00001:"))) {
                 // ignore
                 // TODO 增加更多关系数据库的主键冲突的错误码
             } else {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/support/SyncUtil.java
Patch:
@@ -313,6 +313,9 @@ public static String getBacktickByDbType(String dbTypeName) {
             case mariadb:
             case oceanbase:
                 return "`";
+        //  当dbType 为 postgresql时，返回双引号(避免表名为postgresql的关键字时，sql查询报错)
+            case postgresql:
+                return "\"";
             default:
                 return "";
         }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/QueryLogEvent.java
Patch:
@@ -740,9 +740,11 @@ private final void unpackVariables(LogBuffer buffer, final int end) throws IOExc
                     case Q_DEFAULT_TABLE_ENCRYPTION:
                         // *start++ = thd->variables.default_table_encryption;
                         buffer.forward(1);
+                        break;
                     case Q_DDL_SKIP_REWRITE:
                         // *start++ = thd->variables.binlog_ddl_skip_rewrite;
                         buffer.forward(1);
+                        break;
                     case Q_HRNOW:
                         // https://github.com/alibaba/canal/issues/4940
                         // percona 和 mariadb各自扩展mysql binlog的格式后有冲突
@@ -779,6 +781,7 @@ private final void unpackVariables(LogBuffer buffer, final int end) throws IOExc
                         int count = buffer.getUint8();
                         // character_set_collations= Lex_cstring((const char *) pos0 , (const char *) pos);
                         buffer.forward(count * 4);
+                        break;
                     default:
                         /*
                          * That's why you must write status vars in growing

File: client-adapter/clickhouse/src/main/java/com/alibaba/otter/canal/client/adapter/clickhouse/service/ClickHouseEtlService.java
Patch:
@@ -126,13 +126,13 @@ protected boolean executeSqlImport(DataSource srcDS, String sql, List<Object> va
 
                             int i = 1;
                             for (Map.Entry<String, String> entry : columnsMap.entrySet()) {
-                                String targetClolumnName = entry.getKey();
+                                String targetColumnName = entry.getKey();
                                 String srcColumnName = entry.getValue();
                                 if (srcColumnName == null) {
-                                    srcColumnName = targetClolumnName;
+                                    srcColumnName = targetColumnName;
                                 }
 
-                                Integer type = columnType.get(targetClolumnName.toLowerCase());
+                                Integer type = columnType.get(targetColumnName.toLowerCase());
                                 Object value = rs.getObject(srcColumnName);
                                 if (value != null) {
                                     SyncUtil.setPStmt(type, pstmt, value, i);

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/rest/CommonRest.java
Patch:
@@ -217,7 +217,7 @@ public Map<String, String> etl(@PathVariable String destination) {
             resStatus = "off";
         }
         Map<String, String> res = new LinkedHashMap<>();
-        res.put("stauts", resStatus);
+        res.put("status", resStatus);
         return res;
     }
 }

File: client-adapter/phoenix/src/main/java/com/alibaba/otter/canal/client/adapter/phoenix/service/PhoenixEtlService.java
Patch:
@@ -352,13 +352,13 @@ private static boolean executeSqlImport(DataSource srcDS, Connection targetDSCon
                             Map<String, Object> insertValues = new HashMap<>();
                             int i = 1;
                             for (Map.Entry<String, String> entry : columnsMap.entrySet()) {
-                                String targetClolumnName = entry.getKey();
+                                String targetColumnName = entry.getKey();
                                 String srcColumnName = entry.getValue();
                                 if (srcColumnName == null) {
-                                    srcColumnName = targetClolumnName;
+                                    srcColumnName = targetColumnName;
                                 }
 
-                                Integer type = columnType.get(targetClolumnName.toLowerCase());
+                                Integer type = columnType.get(targetColumnName.toLowerCase());
 
                                 try {
                                     Object value = rs.getObject(srcColumnName);

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbEtlService.java
Patch:
@@ -122,13 +122,13 @@ protected boolean executeSqlImport(DataSource srcDS, String sql, List<Object> va
 
                             int i = 1;
                             for (Map.Entry<String, String> entry : columnsMap.entrySet()) {
-                                String targetClolumnName = entry.getKey();
+                                String targetColumnName = entry.getKey();
                                 String srcColumnName = entry.getValue();
                                 if (srcColumnName == null) {
-                                    srcColumnName = targetClolumnName;
+                                    srcColumnName = targetColumnName;
                                 }
 
-                                Integer type = columnType.get(targetClolumnName.toLowerCase());
+                                Integer type = columnType.get(targetColumnName.toLowerCase());
                                 Object value = rs.getObject(srcColumnName);
                                 if (value != null) {
                                     SyncUtil.setPStmt(type, pstmt, value, i);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -726,7 +726,7 @@ private EntryPosition findStartPosition(MysqlConnection mysqlConnection) {
     @SuppressWarnings("unused")
     private SlaveEntryPosition findSlavePosition(MysqlConnection mysqlConnection) {
         try {
-            String showSql = "show slave stauts";
+            String showSql = "show slave status";
             if (mysqlConnection.atLeastMySQL84()) {
                 // 兼容mysql 8.4
                 showSql = "show replica status";

File: client-adapter/clickhouse/src/main/java/com/alibaba/otter/canal/client/adapter/clickhouse/service/ClickHouseEtlService.java
Patch:
@@ -40,7 +40,7 @@ public ClickHouseEtlService(DataSource targetDS, MappingConfig config){
     public EtlResult importData(List<String> params) {
         DbMapping dbMapping = config.getDbMapping();
         DruidDataSource dataSource = DatasourceConfig.DATA_SOURCES.get(config.getDataSourceKey());
-        String sql = "SELECT * FROM " + SyncUtil.getDbTableName(dbMapping, dataSource.getDbType());
+        String sql = "SELECT * FROM " + SyncUtil.getSourceDbTableName(dbMapping, dataSource.getDbType());
         return importData(sql, params);
     }
 

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbEtlService.java
Patch:
@@ -39,7 +39,7 @@ public EtlResult importData(List<String> params) {
         DbMapping dbMapping = config.getDbMapping();
         // 获取源数据源，根据数据库类型拼装数据库名和表名
         DruidDataSource dataSource = DatasourceConfig.DATA_SOURCES.get(config.getDataSourceKey());
-        String sql = "SELECT * FROM " + SyncUtil.getDbTableName(dbMapping, dataSource.getDbType());
+        String sql = "SELECT * FROM " + SyncUtil.getSourceDbTableName(dbMapping, dataSource.getDbType());
         return importData(sql, params);
     }
 

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/QueryLogEvent.java
Patch:
@@ -819,7 +819,7 @@ private static final String findCodeName(final int code) {
             case Q_MASTER_DATA_WRITTEN_CODE:
                 return "Q_MASTER_DATA_WRITTEN_CODE";
             case Q_INVOKER:
-                return "case Q_INVOKER";
+                return "Q_INVOKER";
             case Q_MICROSECONDS:
                 return "Q_MICROSECONDS";
             case Q_UPDATED_DB_NAMES:

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannelPool.java
Patch:
@@ -109,7 +109,7 @@ private static SSLSocket createSslSocket(Socket socket, SslInfo sslInfo) throws
         }
         logger.info("SSL protocol: {}", StringUtils.join(protocolArr, ","));
         sslSocket.setEnabledProtocols(protocolArr);
-        // sslSocket.setEnabledCipherSuites("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA".split(","));
+        sslSocket.setSoTimeout(BioSocketChannel.SO_TIMEOUT);
         sslSocket.startHandshake();
         logger.info("SSL socket handshake success.");
         return sslSocket;

File: connector/pulsarmq-connector/src/main/java/com/alibaba/otter/canal/connector/pulsarmq/config/PulsarMQConstants.java
Patch:
@@ -66,14 +66,13 @@ public class PulsarMQConstants {
      */
     public static final String PULSARMQ_LISTENER_NAME             = ROOT + "." + "listenerName";
 
-
     /**
      * Pulsar 开启chunking
      */
-    public static final String PULSARMQ_ENABLE_CHUNKING             = ROOT + "." + "enableChunking";
+    public static final String PULSARMQ_ENABLE_CHUNKING           = ROOT + "." + "enableChunking";
 
     /**
      * Pulsar 压缩算法
      */
-    public static final String PULSARMQ_COMPRESSION_TYPE             = ROOT + "." + "compressionType";
+    public static final String PULSARMQ_COMPRESSION_TYPE          = ROOT + "." + "compressionType";
 }

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/YamlUtils.java
Patch:
@@ -25,7 +25,7 @@
 public class YamlUtils {
 
     public static <T> T resourceYmlToObj(String resource, String prefix, Class<T> clazz) {
-        if (!StringUtils.startsWithIgnoreCase("classpath:", resource)) {
+        if (!StringUtils.startsWithIgnoreCase(resource, "classpath:")) {
             resource = "classpath:" + resource;
         }
         ClassPathResource classPathResource = new ClassPathResource(resource);

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/PlainCanalInstanceGenerator.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * 基于manager生成对应的{@linkplain CanalInstance}
- * 
+ *
  * @author jianghang 2012-7-12 下午05:37:09
  * @version 1.0.0
  */
@@ -70,7 +70,7 @@ public CanalInstance generate(String destination) {
     // ================ setter / getter ================
 
     private BeanFactory getBeanFactory(String springXml) {
-        if (!StringUtils.startsWithIgnoreCase("classpath:", springXml)) {
+        if (!StringUtils.startsWithIgnoreCase(springXml, "classpath:")) {
             springXml = "classpath:" + springXml;
         }
         ApplicationContext applicationContext = new ClassPathXmlApplicationContext(springXml);

File: instance/spring/src/main/java/com/alibaba/otter/canal/instance/spring/SpringCanalInstanceGenerator.java
Patch:
@@ -45,7 +45,7 @@ public CanalInstance generate(String destination) {
     }
 
     private BeanFactory getBeanFactory(String springXml) {
-        if (!StringUtils.startsWithIgnoreCase("classpath:", springXml)) {
+        if (!StringUtils.startsWithIgnoreCase(springXml, "classpath:")) {
             springXml = "classpath:" + springXml;
         }
         ApplicationContext applicationContext = new ClassPathXmlApplicationContext(springXml);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/TableMetaTSDBBuilder.java
Patch:
@@ -30,7 +30,7 @@ public static TableMetaTSDB build(String destination, String springXml) {
             if (applicationContext == null) {
                 synchronized (contexts) {
                     if (applicationContext == null) {
-                        if (!StringUtils.startsWithIgnoreCase("classpath:", springXml)) {
+                        if (!StringUtils.startsWithIgnoreCase(springXml, "classpath:")) {
                             springXml = "classpath:" + springXml;
                         }
                         applicationContext = new ClassPathXmlApplicationContext(springXml);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParser.java
Patch:
@@ -116,7 +116,6 @@ private MysqlConnection buildMysqlConnection() {
         MysqlConnection connection = new MysqlConnection(runningInfo.getAddress(),
             runningInfo.getUsername(),
             runningInfo.getPassword(),
-            connectionCharsetNumber,
             runningInfo.getDefaultDatabaseName());
         connection.getConnector().setReceiveBufferSize(64 * 1024);
         connection.getConnector().setSendBufferSize(64 * 1024);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -305,8 +305,8 @@ private MysqlConnection buildMysqlConnection(AuthenticationInfo runningInfo) {
         MysqlConnection connection = new MysqlConnection(runningInfo.getAddress(),
             runningInfo.getUsername(),
             runningInfo.getPassword(),
-            connectionCharsetNumber,
-            runningInfo.getDefaultDatabaseName());
+            runningInfo.getDefaultDatabaseName(),
+            runningInfo.getSslInfo());
         connection.getConnector().setReceiveBufferSize(receiveBufferSize);
         connection.getConnector().setSendBufferSize(sendBufferSize);
         connection.getConnector().setSoTimeout(defaultConnectionTimeoutInSeconds * 1000);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/RdsBinlogEventParserProxy.java
Patch:
@@ -51,7 +51,6 @@ public void start() {
             rdsLocalBinlogEventParser.setDestination(destination);
             rdsLocalBinlogEventParser.setAlarmHandler(this.getAlarmHandler());
             rdsLocalBinlogEventParser.setConnectionCharsetStd(this.connectionCharset);
-            rdsLocalBinlogEventParser.setConnectionCharsetNumber(this.connectionCharsetNumber);
             rdsLocalBinlogEventParser.setEnableTsdb(this.enableTsdb);
             rdsLocalBinlogEventParser.setEventBlackFilter(this.eventBlackFilter);
             rdsLocalBinlogEventParser.setFilterQueryDcl(this.filterQueryDcl);

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerTest.java
Patch:
@@ -253,7 +253,6 @@ private Canal buildCanal() {
 
         parameter.setDefaultConnectionTimeoutInSeconds(30);
         parameter.setConnectionCharset("UTF-8");
-        parameter.setConnectionCharsetNumber((byte) 33);
         parameter.setReceiveBufferSize(8 * 1024);
         parameter.setSendBufferSize(8 * 1024);
 

File: server/src/test/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded_FileModeTest.java
Patch:
@@ -40,7 +40,6 @@ protected Canal buildCanal() {
 
         parameter.setDefaultConnectionTimeoutInSeconds(30);
         parameter.setConnectionCharset("UTF-8");
-        parameter.setConnectionCharsetNumber((byte) 33);
         parameter.setReceiveBufferSize(8 * 1024);
         parameter.setSendBufferSize(8 * 1024);
 

File: server/src/test/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded_StandaloneTest.java
Patch:
@@ -43,7 +43,6 @@ protected Canal buildCanal() {
 
         parameter.setDefaultConnectionTimeoutInSeconds(30);
         parameter.setConnectionCharset("UTF-8");
-        parameter.setConnectionCharsetNumber((byte) 33);
         parameter.setReceiveBufferSize(8 * 1024);
         parameter.setSendBufferSize(8 * 1024);
 

File: server/src/test/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded_StandbyTest.java
Patch:
@@ -55,7 +55,6 @@ protected Canal buildCanal() {
 
         parameter.setDefaultConnectionTimeoutInSeconds(30);
         parameter.setConnectionCharset("UTF-8");
-        parameter.setConnectionCharsetNumber((byte) 33);
         parameter.setReceiveBufferSize(8 * 1024);
         parameter.setSendBufferSize(8 * 1024);
 

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/YamlUtils.java
Patch:
@@ -25,6 +25,9 @@
 public class YamlUtils {
 
     public static <T> T resourceYmlToObj(String resource, String prefix, Class<T> clazz) {
+        if (!StringUtils.startsWithIgnoreCase("classpath:", resource)) {
+            resource = "classpath:" + resource;
+        }
         ClassPathResource classPathResource = new ClassPathResource(resource);
 
         String content;

File: instance/spring/src/test/java/com/alibaba/otter/canal/instance/spring/integrated/DefaultSpringInstanceTest.java
Patch:
@@ -24,7 +24,7 @@ public class DefaultSpringInstanceTest {
     @Before
     public void start() {
         System.setProperty("canal.instance.destination", "retl");
-        context = new ClassPathXmlApplicationContext(new String[] { "spring/default-instance.xml" });
+        context = new ClassPathXmlApplicationContext(new String[] { "classpath:spring/default-instance.xml" });
     }
 
     @After

File: instance/spring/src/test/java/com/alibaba/otter/canal/instance/spring/integrated/GroupSpringInstanceTest.java
Patch:
@@ -24,7 +24,7 @@ public class GroupSpringInstanceTest {
     @Before
     public void start() {
         System.setProperty("canal.instance.destination", "retl");
-        context = new ClassPathXmlApplicationContext(new String[] { "spring/group-instance.xml" });
+        context = new ClassPathXmlApplicationContext(new String[] { "classpath:spring/group-instance.xml" });
     }
 
     @After

File: instance/spring/src/test/java/com/alibaba/otter/canal/instance/spring/integrated/MemorySpringInstanceTest.java
Patch:
@@ -24,7 +24,7 @@ public class MemorySpringInstanceTest {
     @Before
     public void start() {
         System.setProperty("canal.instance.destination", "retl");
-        context = new ClassPathXmlApplicationContext(new String[] { "spring/memory-instance.xml" });
+        context = new ClassPathXmlApplicationContext(new String[] { "classpath:spring/memory-instance.xml" });
     }
 
     @After

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/TableMetaTSDBBuilder.java
Patch:
@@ -30,6 +30,9 @@ public static TableMetaTSDB build(String destination, String springXml) {
             if (applicationContext == null) {
                 synchronized (contexts) {
                     if (applicationContext == null) {
+                        if (!StringUtils.startsWithIgnoreCase("classpath:", springXml)) {
+                            springXml = "classpath:" + springXml;
+                        }
                         applicationContext = new ClassPathXmlApplicationContext(springXml);
                         contexts.put(destination, applicationContext);
                     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java
Patch:
@@ -258,7 +258,7 @@ private String getFullName(String schema, String table) {
             .append('`')
             .append('.')
             .append('`')
-            .append(table)
+            .append(StringUtils.replace(table,"`","``"))
             .append('`')
             .toString();
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/support/AuthenticationInfo.java
Patch:
@@ -2,7 +2,7 @@
 
 import java.net.InetSocketAddress;
 
-import com.alibaba.druid.filter.config.ConfigTools;
+import com.alibaba.otter.canal.common.utils.CommonUtils;
 import org.apache.commons.lang.builder.ToStringBuilder;
 import org.apache.commons.lang.builder.ToStringStyle;
 
@@ -25,7 +25,7 @@ public class AuthenticationInfo {
 
     public void initPwd() throws Exception{
         if (enableDruid) {
-            this.password = ConfigTools.decrypt(pwdPublicKey, password);
+            this.password = CommonUtils.decryptDruidPassword(pwdPublicKey, password);
         }
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta_Random_DDL_Test.java
Patch:
@@ -14,7 +14,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 
-import com.alibaba.druid.sql.repository.Schema;
+import com.alibaba.polardbx.druid.sql.repository.Schema;
 import com.alibaba.otter.canal.parse.inbound.TableMeta;
 
 /**

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java
Patch:
@@ -291,7 +291,7 @@ public StringBuilder toJsonString(StringBuilder buf, Charset charset) {
                         if (i > 0) {
                             buf.append(", ");
                         }
-                        buf.append('"').append(key(i, charset)).append('"');
+                        buf.append('"').append(escapse(key(i, charset))).append('"');
                         buf.append(": ");
                         element(i, charset).toJsonString(buf, charset);
                     }

File: common/src/main/java/com/alibaba/otter/canal/common/utils/ExecutorTemplate.java
Patch:
@@ -44,7 +44,7 @@ public void submit(Runnable task) {
         check(future);
     }
 
-    public void submit(Callable<Exception> task) {
+    public void submit(Callable task) {
         Future future = executor.submit(task);
         futures.add(future);
         check(future);

File: client/src/main/java/com/alibaba/otter/canal/client/kafka/KafkaCanalConnector.java
Patch:
@@ -78,14 +78,15 @@ public void connect() {
             return;
         }
 
-        connected = true;
         if (kafkaConsumer == null && !flatMessage) {
             kafkaConsumer = new KafkaConsumer<>(properties);
-
         }
+
         if (kafkaConsumer2 == null && flatMessage) {
             kafkaConsumer2 = new KafkaConsumer<>(properties);
         }
+
+        connected = true;
     }
 
     /**

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AdapterProcessor.java
Patch:
@@ -224,7 +224,7 @@ private void process() {
                                     logger.error("finish turn off switch of destination:" + canalDestination);
                                 } else {
                                     canalMsgConsumer.ack();
-                                    logger.error(e.getMessage() + " Error sync but ACK!");
+                                    logger.error(e.getMessage() + " Error sync but ACK!", e);
                                 }
                             }
                             Thread.sleep(500);

File: client/src/main/java/com/alibaba/otter/canal/client/CanalMessageDeserializer.java
Patch:
@@ -51,7 +51,7 @@ public static Message deserializer(byte[] data, boolean lazyParseEntry) {
                 }
             }
         } catch (Exception e) {
-            throw new CanalClientException("deserializer failed", e);
+            throw new CanalClientException("deserializer failed by " + e.getMessage(), e);
         }
     }
 }

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/util/CanalMessageSerializerUtil.java
Patch:
@@ -79,7 +79,7 @@ public static byte[] serializer(Message data, boolean filterTransactionEntry) {
                 }
             }
         } catch (Exception e) {
-            throw new RuntimeException("Error when serializing message to byte[] ");
+            throw new RuntimeException("Error when serializing message to byte[] by " + e.getMessage() , e);
         }
         return null;
     }
@@ -125,7 +125,7 @@ public static Message deserializer(byte[] data, boolean lazyParseEntry) {
                 }
             }
         } catch (Exception e) {
-            throw new CanalClientException("deserializer failed", e);
+            throw new CanalClientException("deserializer failed by " + e.getMessage(), e);
         }
     }
 }

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/ClientAuthenticationHandler.java
Patch:
@@ -56,12 +56,14 @@ public void messageReceived(final ChannelHandlerContext ctx, MessageEvent e) thr
                     byte[] errorBytes = NettyUtils.errorPacket(400,
                         MessageFormatter.format("auth failed for seed is null", clientAuth.getUsername()).getMessage());
                     NettyUtils.write(ctx.getChannel(), errorBytes, null);
+                    break;
                 }
 
                 if (!embeddedServer.auth(clientAuth.getUsername(), clientAuth.getPassword().toStringUtf8(), seed)) {
                     byte[] errorBytes = NettyUtils.errorPacket(400,
                         MessageFormatter.format("auth failed for user:{}", clientAuth.getUsername()).getMessage());
                     NettyUtils.write(ctx.getChannel(), errorBytes, null);
+                    break;
                 }
 
                 // 如果存在订阅信息

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/ExecuteLoadQueryLogEvent.java
Patch:
@@ -52,9 +52,9 @@ public final class ExecuteLoadQueryLogEvent extends QueryLogEvent {
     public static final int ELQ_FN_POS_END_OFFSET   = ELQ_FILE_ID_OFFSET + 8;
     public static final int ELQ_DUP_HANDLING_OFFSET = ELQ_FILE_ID_OFFSET + 12;
 
-    public ExecuteLoadQueryLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent)
-                                                                                                                   throws IOException{
-        super(header, buffer, descriptionEvent);
+    public ExecuteLoadQueryLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent,
+                                    boolean compatiablePercona) throws IOException{
+        super(header, buffer, descriptionEvent, compatiablePercona);
 
         buffer.position(descriptionEvent.commonHeaderLen + ELQ_FILE_ID_OFFSET);
 

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/mariadb/QueryCompressedLogEvent.java
Patch:
@@ -1 +1 @@
-package com.taobao.tddl.dbsync.binlog.event.mariadb;import java.io.IOException;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;import com.taobao.tddl.dbsync.binlog.event.QueryLogEvent;/** * mariadb compress query event *  * @author jianghang * @since 1.1.7 */public class QueryCompressedLogEvent extends QueryLogEvent {    public QueryCompressedLogEvent(LogHeader header, LogBuffer buffer,                                   FormatDescriptionLogEvent descriptionEvent) throws IOException{        super(header, buffer, descriptionEvent, true);    }}
\ No newline at end of file
+package com.taobao.tddl.dbsync.binlog.event.mariadb;import java.io.IOException;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;import com.taobao.tddl.dbsync.binlog.event.QueryLogEvent;/** * mariadb compress query event *  * @author jianghang * @since 1.1.7 */public class QueryCompressedLogEvent extends QueryLogEvent {    public QueryCompressedLogEvent(LogHeader header, LogBuffer buffer,                                   FormatDescriptionLogEvent descriptionEvent) throws IOException{        super(header, buffer, descriptionEvent,false, true);    }}
\ No newline at end of file

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/config/EbeanConfig.java
Patch:
@@ -10,6 +10,7 @@
 
 import javax.sql.DataSource;
 
+import org.springframework.beans.factory.annotation.Value;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalStarter.java
Patch:
@@ -115,7 +115,6 @@ public synchronized void start() throws Throwable {
             CanalAdminController canalAdmin = new CanalAdminController(this);
             canalAdmin.setUser(user);
             canalAdmin.setPasswd(passwd);
-
             String ip = CanalController.getProperty(properties, CanalConstants.CANAL_IP);
 
             logger.debug("canal admin port:{}, canal admin user:{}, canal admin password: {}, canal ip:{}",

File: connector/pulsarmq-connector/src/main/java/com/alibaba/otter/canal/connector/pulsarmq/producer/CanalPulsarMQProducer.java
Patch:
@@ -13,6 +13,7 @@
 import org.slf4j.LoggerFactory;
 
 import com.alibaba.fastjson2.JSON;
+import com.alibaba.fastjson2.JSONWriter;
 import com.alibaba.fastjson2.JSONWriter.Feature;
 import com.alibaba.otter.canal.common.utils.ExecutorTemplate;
 import com.alibaba.otter.canal.common.utils.NamedThreadFactory;
@@ -330,7 +331,7 @@ private void sendMessage(String topic, int partition, List<FlatMessage> flatMess
             try {
                 MessageId msgResultId = producer.newMessage()
                     .property(MSG_PROPERTY_PARTITION_NAME, String.valueOf(partition))
-                    .value(JSON.toJSONBytes(f, Feature.WriteNulls))
+                    .value(JSON.toJSONBytes(f, Feature.WriteNulls, JSONWriter.Feature.LargeObject))
                     .send()
                 //
                 ;

File: connector/rabbitmq-connector/src/main/java/com/alibaba/otter/canal/connector/rabbitmq/producer/CanalRabbitMQProducer.java
Patch:
@@ -165,7 +165,8 @@ private void send(MQDestination canalDestination, String topicName, Message mess
             // 串行分区
             List<FlatMessage> flatMessages = MQMessageUtils.messageConverter(datas, messageSub.getId());
             for (FlatMessage flatMessage : flatMessages) {
-                byte[] message = JSON.toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls);
+                byte[] message = JSON
+                    .toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls, JSONWriter.Feature.LargeObject);
                 if (logger.isDebugEnabled()) {
                     logger.debug("send message:{} to destination:{}", message, canalDestination.getCanalDestination());
                 }

File: connector/rocketmq-connector/src/main/java/com/alibaba/otter/canal/connector/rocketmq/producer/CanalRocketMQProducer.java
Patch:
@@ -263,7 +263,7 @@ public void send(final MQDestination destination, String topicName,
                             List<Message> messages = flatMessagePart.stream()
                                     .map(flatMessage -> new Message(topicName,
                                             ((RocketMQProducerConfig) this.mqProperties).getTag(),
-                                            JSON.toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls)))
+                                            JSON.toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls, JSONWriter.Feature.LargeObject)))
                                     .collect(Collectors.toList());
                             // 批量发送
                             sendMessage(messages, index);
@@ -278,7 +278,7 @@ public void send(final MQDestination destination, String topicName,
                 List<Message> messages = flatMessages.stream()
                         .map(flatMessage -> new Message(topicName,
                                 ((RocketMQProducerConfig) this.mqProperties).getTag(),
-                                JSON.toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls)))
+                                JSON.toJSONBytes(flatMessage, JSONWriter.Feature.WriteNulls,JSONWriter.Feature.LargeObject)))
                         .collect(Collectors.toList());
                 // 批量发送
                 sendMessage(messages, partition);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/admin/CanalAdminController.java
Patch:
@@ -37,7 +37,7 @@ public class CanalAdminController implements CanalAdmin {
     private static final Logger logger = LoggerFactory.getLogger(CanalAdminController.class);
     private String              user;
     private String              passwd;
-    private CanalStarter         canalStater;
+    private CanalStarter        canalStater;
 
     public CanalAdminController(CanalStarter canalStater){
         this.canalStater = canalStater;

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/DirectLogFetcherTest.java
Patch:
@@ -8,11 +8,13 @@
 
 import com.taobao.tddl.dbsync.binlog.event.mariadb.BinlogCheckPointLogEvent;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import com.taobao.tddl.dbsync.binlog.event.*;
 import com.taobao.tddl.dbsync.binlog.event.mariadb.AnnotateRowsEvent;
 
+@Ignore
 public class DirectLogFetcherTest extends BaseLogFetcherTest {
 
     @Test

File: server/src/main/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded.java
Patch:
@@ -73,7 +73,7 @@ public void start() {
         if (!isStart()) {
             super.start();
             // 如果存在provider,则启动metrics service
-            if(metricsPort < 0) {
+            if(metricsPort > 0) {
                 loadCanalMetrics();
                 metrics.setServerPort(metricsPort);
                 metrics.initialize();

File: client-adapter/es6x/src/main/java/com/alibaba/otter/canal/client/adapter/es6x/ES6xAdapter.java
Patch:
@@ -59,12 +59,12 @@ public void init(OuterAdapterConfig configuration, Properties envProperties) {
     public Map<String, Object> count(String task) {
         ESSyncConfig config = esSyncConfig.get(task);
         ESSyncConfig.ESMapping mapping = config.getEsMapping();
-        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.get_index(), mapping.get_type()).size(0)
+        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.getIndex(), mapping.getType()).size(0)
             .getResponse();
 
         long rowCount = response.getHits().getTotalHits();
         Map<String, Object> res = new LinkedHashMap<>();
-        res.put("esIndex", mapping.get_index());
+        res.put("esIndex", mapping.getIndex());
         res.put("count", rowCount);
         return res;
     }

File: client-adapter/es6x/src/test/java/com/alibaba/otter/canal/client/adapter/es6x/test/ConfigLoadTest.java
Patch:
@@ -29,9 +29,9 @@ public void testLoad() {
         Assert.assertNotNull(config);
         Assert.assertEquals("defaultDS", config.getDataSourceKey());
         ESSyncConfig.ESMapping esMapping = config.getEsMapping();
-        Assert.assertEquals("mytest_user", esMapping.get_index());
-        Assert.assertEquals("_doc", esMapping.get_type());
-        Assert.assertEquals("id", esMapping.get_id());
+        Assert.assertEquals("mytest_user", esMapping.getIndex());
+        Assert.assertEquals("_doc", esMapping.getType());
+        Assert.assertEquals("id", esMapping.getId());
         Assert.assertNotNull(esMapping.getSql());
 
         // Map<String, List<ESSyncConfig>> dbTableEsSyncConfig =

File: client-adapter/es7x/src/main/java/com/alibaba/otter/canal/client/adapter/es7x/ES7xAdapter.java
Patch:
@@ -59,11 +59,11 @@ public void init(OuterAdapterConfig configuration, Properties envProperties) {
     public Map<String, Object> count(String task) {
         ESSyncConfig config = esSyncConfig.get(task);
         ESSyncConfig.ESMapping mapping = config.getEsMapping();
-        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.get_index()).size(0).getResponse();
+        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.getIndex()).size(0).getResponse();
 
         long rowCount = response.getHits().getTotalHits().value;
         Map<String, Object> res = new LinkedHashMap<>();
-        res.put("esIndex", mapping.get_index());
+        res.put("esIndex", mapping.getIndex());
         res.put("count", rowCount);
         return res;
     }

File: client-adapter/es8x/src/main/java/com/alibaba/otter/canal/client/adapter/es8x/ES8xAdapter.java
Patch:
@@ -53,11 +53,11 @@ public void init(OuterAdapterConfig configuration, Properties envProperties) {
     public Map<String, Object> count(String task) {
         ESSyncConfig config = esSyncConfig.get(task);
         ESSyncConfig.ESMapping mapping = config.getEsMapping();
-        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.get_index()).size(0).getResponse();
+        SearchResponse response = this.esConnection.new ESSearchRequest(mapping.getIndex()).size(0).getResponse();
 
         long rowCount = response.getHits().getTotalHits().value;
         Map<String, Object> res = new LinkedHashMap<>();
-        res.put("esIndex", mapping.get_index());
+        res.put("esIndex", mapping.getIndex());
         res.put("count", rowCount);
         return res;
     }

File: client-adapter/escore/src/main/java/com/alibaba/otter/canal/client/adapter/es/core/config/SchemaItem.java
Patch:
@@ -136,8 +136,8 @@ public TableItem getMainTable() {
     }
 
     public FieldItem getIdFieldItem(ESSyncConfig.ESMapping mapping) {
-        if (mapping.get_id() != null) {
-            return getSelectFields().get(mapping.get_id());
+        if (mapping.getId() != null) {
+            return getSelectFields().get(mapping.getId());
         } else {
             return getSelectFields().get(mapping.getPk());
         }

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/PlainCanalInstanceGenerator.java
Patch:
@@ -61,6 +61,7 @@ public CanalInstance generate(String destination) {
                 throw new CanalException(e);
             } finally {
                 System.setProperty("canal.instance.destination", "");
+                com.alibaba.otter.canal.instance.spring.support.PropertyPlaceholderConfigurer.propertiesLocal.remove();
             }
         }
     }

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/connector/SimpleAdminConnectors.java
Patch:
@@ -38,12 +38,12 @@ public static <R> R execute(String ip, int port, String user, String passwd, Fun
     }
 
     private static String getDesensitizationPassword(String password) {
-        String defaultPassword = "******";
+        String defaultPassword = "*****";
 
-        if (Strings.isNullOrEmpty(password) || password.length() < 6) {
+        if (Strings.isNullOrEmpty(password) || password.length() < 5) {
             return defaultPassword;
         } else {
-            return String.format("%s******", password.substring(0, 3));
+            return String.format("%s*****", password.substring(0, 3));
         }
     }
 }

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/service/impl/UserServiceImpl.java
Patch:
@@ -21,7 +21,7 @@ public class UserServiceImpl implements UserService {
 
     private static byte[] seeds = "canal is best!".getBytes();
 
-    private static final Integer PASSWORD_LENGTH = 6;
+    private static final Integer PASSWORD_LENGTH = 5;
 
     public User find4Login(String username, String password) {
         if (StringUtils.isEmpty(username) || StringUtils.isEmpty(password)) {

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RotateLogEvent.java
Patch:
@@ -88,9 +88,10 @@ public RotateLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEv
 
         final int filenameOffset = headerSize + postHeaderLen;
         int filenameLen = buffer.limit() - filenameOffset;
-        if (filenameLen > FN_REFLEN - 1) filenameLen = FN_REFLEN - 1;
+        if (filenameLen > FN_REFLEN - 1) {
+            filenameLen = FN_REFLEN - 1;
+        }
         buffer.position(filenameOffset);
-
         filename = buffer.getFixString(filenameLen);
     }
 

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/mariadb/DeleteRowsCompressLogEvent.java
Patch:
@@ -0,0 +1 @@
+package com.taobao.tddl.dbsync.binlog.event.mariadb;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.DeleteRowsLogEvent;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;/** * mariadb compress rows event *  * @author jianghang * @since 1.1.7 */public class DeleteRowsCompressLogEvent extends DeleteRowsLogEvent {    public DeleteRowsCompressLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent){        super(header, buffer, descriptionEvent, true);    }}
\ No newline at end of file

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/mariadb/QueryCompressedLogEvent.java
Patch:
@@ -0,0 +1 @@
+package com.taobao.tddl.dbsync.binlog.event.mariadb;import java.io.IOException;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;import com.taobao.tddl.dbsync.binlog.event.QueryLogEvent;/** * mariadb compress query event *  * @author jianghang * @since 1.1.7 */public class QueryCompressedLogEvent extends QueryLogEvent {    public QueryCompressedLogEvent(LogHeader header, LogBuffer buffer,                                   FormatDescriptionLogEvent descriptionEvent) throws IOException{        super(header, buffer, descriptionEvent, true);    }}
\ No newline at end of file

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/mariadb/UpdateRowsCompressLogEvent.java
Patch:
@@ -0,0 +1 @@
+package com.taobao.tddl.dbsync.binlog.event.mariadb;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;import com.taobao.tddl.dbsync.binlog.event.UpdateRowsLogEvent;/** * mariadb compress rows event *  * @author jianghang * @since 1.1.7 */public class UpdateRowsCompressLogEvent extends UpdateRowsLogEvent {    public UpdateRowsCompressLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent){        super(header, buffer, descriptionEvent, false, true);    }}
\ No newline at end of file

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/mariadb/WriteRowsCompressLogEvent.java
Patch:
@@ -0,0 +1 @@
+package com.taobao.tddl.dbsync.binlog.event.mariadb;import com.taobao.tddl.dbsync.binlog.LogBuffer;import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;import com.taobao.tddl.dbsync.binlog.event.LogHeader;import com.taobao.tddl.dbsync.binlog.event.WriteRowsLogEvent;/** * mariadb compress rows event *  * @author jianghang * @since 1.1.7 */public class WriteRowsCompressLogEvent extends WriteRowsLogEvent {    public WriteRowsCompressLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent){        super(header, buffer, descriptionEvent,  true);    }}
\ No newline at end of file

File: parse/src/test/java/com/alibaba/otter/canal/parse/MysqlBinlogDumpPerformanceTest.java
Patch:
@@ -22,12 +22,12 @@ public class MysqlBinlogDumpPerformanceTest {
 
     public static void main(String args[]) {
         final MysqlEventParser controller = new MysqlEventParser();
-        final EntryPosition startPosition = new EntryPosition("mysql-bin.000007", 89796293L, 100L);
+        final EntryPosition startPosition = new EntryPosition("binlog.000002", 4L, 100L);
         controller.setConnectionCharset("UTF-8");
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
         controller.setFilterQueryDml(true);
-        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("100.81.154.142", 3306), "canal", "canal"));
+        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "canal", "canal"));
         controller.setMasterPosition(startPosition);
         controller.setEnableTsdb(false);
         controller.setDestination("example");

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AdapterProcessor.java
Patch:
@@ -1,14 +1,12 @@
 package com.alibaba.otter.canal.adapter.launcher.loader;
 
-import com.alibaba.otter.canal.connector.core.spi.ProxyCanalMsgConsumer;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Properties;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
-import java.util.stream.Collectors;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -24,6 +22,7 @@
 import com.alibaba.otter.canal.connector.core.consumer.CommonMessage;
 import com.alibaba.otter.canal.connector.core.spi.CanalMsgConsumer;
 import com.alibaba.otter.canal.connector.core.spi.ExtensionLoader;
+import com.alibaba.otter.canal.connector.core.spi.ProxyCanalMsgConsumer;
 
 /**
  * 适配处理器

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterLoader.java
Patch:
@@ -1,6 +1,5 @@
 package com.alibaba.otter.canal.adapter.launcher.loader;
 
-import com.alibaba.otter.canal.client.adapter.ProxyOuterAdapter;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -17,14 +16,15 @@
 import org.springframework.core.env.Environment;
 import org.springframework.core.env.PropertySource;
 import org.springframework.core.env.StandardEnvironment;
+import org.springframework.util.CollectionUtils;
 
 import com.alibaba.otter.canal.adapter.launcher.config.SpringContext;
 import com.alibaba.otter.canal.client.adapter.OuterAdapter;
+import com.alibaba.otter.canal.client.adapter.ProxyOuterAdapter;
 import com.alibaba.otter.canal.client.adapter.support.CanalClientConfig;
 import com.alibaba.otter.canal.client.adapter.support.ExtensionLoader;
 import com.alibaba.otter.canal.client.adapter.support.OuterAdapterConfig;
 import com.alibaba.otter.canal.client.adapter.support.Util;
-import org.springframework.util.CollectionUtils;
 
 /**
  * 外部适配器的加载器
@@ -74,7 +74,7 @@ public void init() {
                 // canalOuterAdapters 存在初始化失败的情况，导致canalOuterAdapters的数量，可能小于group.getOuterAdapters
                 // 由于group下的 所有OuterAdapter实例都会重复消费同一批消息，因此不允许部分adapter初始化成功，必须全部初始化成功才允许消费
                 if(CollectionUtils.isEmpty(canalOuterAdapters) || canalOuterAdapters.size() != group.getOuterAdapters().size() ){
-                        String msg = String.format("instance=%s,groupId=%s 下的canalOuterAdapters未加载成功，请检查rdb.yml文件格式是否正确",
+                    String msg = String.format("instance=%s,groupId=%s Load OuterAdapters is Empty，pls check rdb.yml",
                                 canalAdapter.getInstance(),group.getGroupId());
                         throw new RuntimeException(msg);
                  }

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AdapterProcessor.java
Patch:
@@ -87,6 +87,7 @@ public void start() {
     public void writeOut(final List<CommonMessage> commonMessages) {
         List<Future<Boolean>> futures = new ArrayList<>();
         // 组间适配器并行运行
+        // 当 canalOuterAdapters 初始化失败时，消息将会全部丢失
         canalOuterAdapters.forEach(outerAdapters -> {
             futures.add(groupInnerExecutorService.submit(() -> {
                 try {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/RdbAdapter.java
Patch:
@@ -84,6 +84,7 @@ public void init(OuterAdapterConfig configuration, Properties envProperties) {
         // 从jdbc url获取db类型
         Map<String, String> properties = configuration.getProperties();
         String dbType = JdbcUtils.getDbType(properties.get("jdbc.url"), null);
+        // 当.yml文件编码格式存在问题，此处rdb yml文件构建 可能会抛出异常
         Map<String, MappingConfig> rdbMappingTmp = ConfigLoader.load(envProperties);
         // 过滤不匹配的key的配置
         rdbMappingTmp.forEach((key, config) -> {

File: client-adapter/es6x/src/test/java/com/alibaba/otter/canal/client/adapter/es6x/test/sync/Common.java
Patch:
@@ -5,6 +5,7 @@
 import java.sql.Statement;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.Properties;
 
 import javax.sql.DataSource;
 
@@ -26,7 +27,7 @@ public static ES6xAdapter init() {
         outerAdapterConfig.setProperties(properties);
 
         ES6xAdapter esAdapter = new ES6xAdapter();
-        esAdapter.init(outerAdapterConfig, null);
+        esAdapter.init(outerAdapterConfig, new Properties());
         return esAdapter;
     }
 

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/GtidLogEvent.java
Patch:
@@ -23,8 +23,8 @@ public class GtidLogEvent extends LogEvent {
     private boolean         commitFlag;
     private UUID            sid;
     private long            gno;
-    private Long            lastCommitted;
-    private Long            sequenceNumber;
+    private long            lastCommitted;
+    private long            sequenceNumber;
 
     public GtidLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent){
         super(header);

File: connector/rabbitmq-connector/src/main/java/com/alibaba/otter/canal/connector/rabbitmq/config/RabbitMQConstants.java
Patch:
@@ -15,9 +15,9 @@ public class RabbitMQConstants {
     public static final String RABBITMQ_VIRTUAL_HOST     = ROOT + "." + "virtual.host";
     public static final String RABBITMQ_USERNAME         = ROOT + "." + "username";
     public static final String RABBITMQ_PASSWORD         = ROOT + "." + "password";
-    public static final String RABBITMQ_QUEUE         = ROOT + "." + "queue";
-    public static final String RABBITMQ_ROUTING_KEY         = ROOT + "." + "routingKey";
-    public static final String RABBITMQ_DELIVERY_MODE         = ROOT + "." + "deliveryMode";
+    public static final String RABBITMQ_QUEUE            = ROOT + "." + "queue";
+    public static final String RABBITMQ_ROUTING_KEY      = ROOT + "." + "routingKey";
+    public static final String RABBITMQ_DELIVERY_MODE    = ROOT + "." + "deliveryMode";
 
     public static final String RABBITMQ_RESOURCE_OWNERID = ROOT + "." + "rabbitmq.resource.ownerId";
 }

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/CanalKafkaClientExample.java
Patch:
@@ -34,7 +34,8 @@ public CanalKafkaClientExample(String zkServers, String servers, String topic, I
 
     public static void main(String[] args) {
         try {
-            final CanalKafkaClientExample kafkaCanalClientExample = new CanalKafkaClientExample(AbstractKafkaTest.zkServers,
+            final CanalKafkaClientExample kafkaCanalClientExample = new CanalKafkaClientExample(
+                AbstractKafkaTest.zkServers,
                 AbstractKafkaTest.servers,
                 AbstractKafkaTest.topic,
                 AbstractKafkaTest.partition,

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/CanalKafkaClientFlatMessageExample.java
Patch:
@@ -35,7 +35,8 @@ public CanalKafkaClientFlatMessageExample(String zkServers, String servers, Stri
 
     public static void main(String[] args) {
         try {
-            final CanalKafkaClientFlatMessageExample kafkaCanalClientExample = new CanalKafkaClientFlatMessageExample(AbstractKafkaTest.zkServers,
+            final CanalKafkaClientFlatMessageExample kafkaCanalClientExample = new CanalKafkaClientFlatMessageExample(
+                AbstractKafkaTest.zkServers,
                 AbstractKafkaTest.servers,
                 AbstractKafkaTest.topic,
                 AbstractKafkaTest.partition,

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/CanalKafkaOffsetClientExample.java
Patch:
@@ -43,7 +43,8 @@ public CanalKafkaOffsetClientExample(String servers, String topic, Integer parti
 
     public static void main(String[] args) {
         try {
-            final CanalKafkaOffsetClientExample kafkaCanalClientExample = new CanalKafkaOffsetClientExample(AbstractKafkaTest.servers,
+            final CanalKafkaOffsetClientExample kafkaCanalClientExample = new CanalKafkaOffsetClientExample(
+                AbstractKafkaTest.servers,
                 AbstractKafkaTest.topic,
                 AbstractKafkaTest.partition,
                 AbstractKafkaTest.groupId);

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/producer/MQMessageUtils.java
Patch:
@@ -433,9 +433,7 @@ public static List<FlatMessage> messageConverter(EntryRowData[] datas, long id)
                             }
                         }
                         // update操作将记录修改前的值
-                        if (!rowOld.isEmpty()) {
-                            old.add(rowOld);
-                        }
+                        old.add(rowOld);
                     }
                 }
                 if (!sqlType.isEmpty()) {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/support/SyncUtil.java
Patch:
@@ -281,6 +281,7 @@ public static String getBacktickByDbType(String dbTypeName) {
         // 只有当dbType为MySQL/MariaDB或OceanBase时返回反引号
         switch (dbType) {
             case mysql:
+                return "`";
             case mariadb:
             case oceanbase:
                 return "`";

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogEvent.java
Patch:
@@ -229,7 +229,7 @@ public abstract class LogEvent {
     public static final int    DELETE_ROWS_COMPRESSED_EVENT             = 171;
 
     /** end marker */
-    public static final int    ENUM_END_EVENT                           = 165;
+    public static final int    ENUM_END_EVENT                           = 171;
 
     /**
      * 1 byte length, 1 byte format Length is total length in bytes, including 2

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/QueryLogEvent.java
Patch:
@@ -711,6 +711,7 @@ private final void unpackVariables(LogBuffer buffer, final int end) throws IOExc
                     case Q_XID:
                         // xid= uint8korr(pos);
                         buffer.forward(8);
+                        break;
                     case Q_GTID_FLAGS3:
                         // gtid_flags_extra= *pos++;
                         // if (gtid_flags_extra & (Gtid_log_event::FL_COMMIT_ALTER_E1 |
@@ -725,6 +726,7 @@ private final void unpackVariables(LogBuffer buffer, final int end) throws IOExc
                         if ((gtid_flags_extra & (FL_COMMIT_ALTER_E1 | FL_ROLLBACK_ALTER_E1))> 0) {
                             buffer.forward(8);
                         }
+                        break;
                     default:
                         /*
                          * That's why you must write status vars in growing

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/plain/PlainCanalConfigClient.java
Patch:
@@ -74,7 +74,7 @@ public PlainCanal findServer(String md5) {
             md5 = "";
         }
         String url = configURL + "/api/v1/config/server_polling?ip=" + localIp + "&port=" + adminPort + "&md5=" + md5
-                     + "&register=" + (autoRegister ? 1 : 0) + "&cluster=" + autoCluster + "&name=" + name;
+                     + "&register=" + (autoRegister ? 1 : 0) + "&cluster=" + StringUtils.stripToEmpty(autoCluster) + "&name=" + StringUtils.stripToEmpty(name);
         return queryConfig(url);
     }
 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/UUIDSet.java
Patch:
@@ -181,9 +181,7 @@ public static List<Interval> combine(List<Interval> intervals) {
             int j;
             for (j = i + 1; j < len; j++) {
                 if (intervals.get(i).stop >= intervals.get(j).start) {
-                    if (intervals.get(i).stop < intervals.get(j).stop) {
-                        intervals.get(i).stop = intervals.get(j).stop;
-                    }
+                    intervals.get(i).stop = intervals.get(j).stop;
                 } else {
                     break;
                 }

File: driver/src/test/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlGTIDSetTest.java
Patch:
@@ -42,10 +42,9 @@ public void testUpdate() {
         MysqlGTIDSet mysqlGTIDSet1 = MysqlGTIDSet.parse(gtid1);
 
         String gtid2 = "726757ad-4455-11e8-ae04-0242ac110002:1-20304074";
-        MysqlGTIDSet mysqlGTIDSet2 = MysqlGTIDSet.parse(gtid2);
 
         mysqlGTIDSet1.update(gtid2);
-        assertEquals("726757ad-4455-11e8-ae04-0242ac110002:1-25536412", mysqlGTIDSet1.toString());
+        assertEquals("726757ad-4455-11e8-ae04-0242ac110002:1-20304074", mysqlGTIDSet1.toString());
     }
 
     @Test

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/plain/PlainCanalConfigClient.java
Patch:
@@ -16,6 +16,7 @@
 import com.alibaba.otter.canal.common.CanalException;
 import com.alibaba.otter.canal.common.CanalLifeCycle;
 import com.alibaba.otter.canal.protocol.SecurityUtil;
+import com.google.common.net.UrlEscapers;
 
 /**
  * 远程配置获取
@@ -84,7 +85,7 @@ public PlainCanal findInstance(String destination, String md5) {
         if (StringUtils.isEmpty(md5)) {
             md5 = "";
         }
-        String url = configURL + "/api/v1/config/instance_polling/" + destination + "?md5=" + md5;
+        String url = configURL + "/api/v1/config/instance_polling/" + UrlEscapers.urlPathSegmentEscaper().escape(destination) + "?md5=" + md5;
         return queryConfig(url);
     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -80,7 +80,8 @@ public boolean apply(EntryPosition position, String schema, String ddl, String e
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create user")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "alter user")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop user")
-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create database")) {
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create database")
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "alter schema")) {
                     repository.console(ddl);
                 }
             } catch (Throwable e) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/DatabaseTableMeta.java
Patch:
@@ -209,6 +209,7 @@ private boolean dumpTableMeta(MysqlConnection connection, final CanalEventFilter
             for (String schema : schemas) {
                 // filter views
                 packet = connection.query("show full tables from `" + schema + "` where Table_type = 'BASE TABLE'");
+                columnSize = packet.getFieldDescriptors().size();
                 int tableNameColumnIndex = 0; // default index is 0
                 List<String> tables = new ArrayList<>();
                 for (int line = 0; line < packet.getFieldValues().size() / columnSize; line++) {

File: parse/src/test/java/com/alibaba/otter/canal/parse/DirectLogFetcherTest.java
Patch:
@@ -13,6 +13,7 @@
 
 import org.apache.commons.lang.StringUtils;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -45,6 +46,7 @@
 import com.taobao.tddl.dbsync.binlog.event.XidLogEvent;
 import com.taobao.tddl.dbsync.binlog.event.mariadb.AnnotateRowsEvent;
 
+@Ignore
 public class DirectLogFetcherTest {
 
     protected final Logger logger         = LoggerFactory.getLogger(this.getClass());

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/LogEventTest.java
Patch:
@@ -63,13 +63,13 @@ public void getTypeNameInputPositiveOutputNotNull3() {
     public void getTypeNameInputPositiveOutputNotNull4() {
 
         // Arrange
-        final int type = 36;
+        final int type = 80;
 
         // Act
         final String actual = LogEvent.getTypeName(type);
 
         // Assert result
-        Assert.assertEquals("Unknown", actual);
+        Assert.assertTrue(actual.startsWith("Unknown"));
     }
 
     // Test written by Diffblue Cover.

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogDecoder.java
Patch:
@@ -418,7 +418,7 @@ public static LogEvent decode(LogBuffer buffer, LogHeader header, LogContext con
                 logPosition.position = header.getLogPos();
                 return event;
             }
-            com.alibaba.otter.canal.client.adapter.rdb.service.RdbSyncService.lambda    default:
+            default:
                 /*
                  * Create an object of Ignorable_log_event for unrecognized
                  * sub-class. So that SLAVE SQL THREAD will only update the

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -733,7 +733,7 @@ final Serializable fetchValue(String columnName, int columnIndex, int type, fina
 
                 String second = null;
                 if (intpart == 0) {
-                    second = "00:00:00";
+                    second = frac < 0 ? "-00:00:00" : "00:00:00";
                 } else {
                     // 目前只记录秒，不处理us frac
                     // if (cal == null) cal = Calendar.getInstance();

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogEvent.java
Patch:
@@ -283,6 +283,9 @@ public abstract class LogEvent {
     public static final int    MYSQL_TYPE_TIMESTAMP2                    = 17;
     public static final int    MYSQL_TYPE_DATETIME2                     = 18;
     public static final int    MYSQL_TYPE_TIME2                         = 19;
+    public static final int    MYSQL_TYPE_TYPED_ARRAY                   = 20;
+    public static final int    MYSQL_TYPE_INVALID                       = 243;
+    public static final int    MYSQL_TYPE_BOOL                          = 244;
     public static final int    MYSQL_TYPE_JSON                          = 245;
     public static final int    MYSQL_TYPE_NEWDECIMAL                    = 246;
     public static final int    MYSQL_TYPE_ENUM                          = 247;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -1133,6 +1133,8 @@ final Serializable fetchValue(String columnName, int columnIndex, int type, fina
                 length = len;
                 break;
             }
+            case LogEvent.MYSQL_TYPE_BOOL :
+            case LogEvent.MYSQL_TYPE_INVALID :
             default:
                 logger.error(String.format("!! Don't know how to handle column type=%d meta=%d (%04X)",
                     type,

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/Util.java
Patch:
@@ -30,6 +30,8 @@ public class Util {
 
     private static final Logger logger = LoggerFactory.getLogger(Util.class);
 
+    public static final String AUTO_GENERATED_PREFIX = "AUTO_GENERATED_";
+
     /**
      * 通过DS执行sql
      */

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/CanalAdapterApplication.java
Patch:
@@ -13,6 +13,8 @@
 @SpringBootApplication
 public class CanalAdapterApplication {
     public static void main(String[] args) {
+        // 支持rocketmq client 配置日志路径
+        System.setProperty("rocketmq.client.logUseSlf4j","true");
 
         SpringApplication application = new SpringApplication(CanalAdapterApplication.class);
         application.setBannerMode(Banner.Mode.OFF);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -36,6 +36,9 @@ public static void main(String[] args) {
             logger.info("## set default uncaught exception handler");
             setGlobalUncaughtExceptionHandler();
 
+            // 支持rocketmq client 配置日志路径
+            System.setProperty("rocketmq.client.logUseSlf4j","true");
+
             logger.info("## load canal configurations");
             String conf = System.getProperty("canal.conf", "classpath:canal.properties");
             Properties properties = new Properties();

File: client-adapter/escore/src/main/java/com/alibaba/otter/canal/client/adapter/es/core/ESAdapter.java
Patch:
@@ -163,14 +163,14 @@ public void addSyncConfigToCache(String configName, ESSyncConfig config) {
                                                                           + "-"
                                                                           + StringUtils.trimToEmpty(config.getGroupId())
                                                                           + "_"
-                                                                          + schema
+                                                                          + tableItem.getSchema() == null ? schema : tableItem.getSchema()
                                                                           + "-"
                                                                           + tableItem.getTableName(),
                         k -> new ConcurrentHashMap<>());
                 } else {
                     esSyncConfigMap = dbTableEsSyncConfig.computeIfAbsent(StringUtils.trimToEmpty(config.getDestination())
                                                                           + "_"
-                                                                          + schema
+                                                                          + tableItem.getSchema() == null ? schema : tableItem.getSchema()
                                                                           + "-"
                                                                           + tableItem.getTableName(),
                         k -> new ConcurrentHashMap<>());

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/PlainCanalInstanceGenerator.java
Patch:
@@ -13,7 +13,6 @@
 import com.alibaba.otter.canal.instance.core.CanalInstanceGenerator;
 import com.alibaba.otter.canal.instance.manager.plain.PlainCanal;
 import com.alibaba.otter.canal.instance.manager.plain.PlainCanalConfigClient;
-import com.alibaba.otter.canal.instance.spring.SpringCanalInstanceGenerator;
 import com.alibaba.otter.canal.parse.CanalEventParser;
 
 /**
@@ -24,7 +23,7 @@
  */
 public class PlainCanalInstanceGenerator implements CanalInstanceGenerator {
 
-    private static final Logger    logger      = LoggerFactory.getLogger(SpringCanalInstanceGenerator.class);
+    private static final Logger    logger      = LoggerFactory.getLogger(PlainCanalInstanceGenerator.class);
     private String                 springXml;
     private PlainCanalConfigClient canalConfigClient;
     private String                 defaultName = "instance";

File: protocol/src/test/java/com/alibaba/otter/canal/protocol/ProtocolTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.alibaba.otter.canal.server;
+package com.alibaba.otter.canal.protocol;
 
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
 import com.alibaba.otter.canal.protocol.CanalEntry.EntryType;

File: protocol/src/test/java/com/alibaba/otter/canal/protocol/SecurityUtilTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.alibaba.otter.canal.server;
+package com.alibaba.otter.canal.protocol;
 
 import java.security.NoSuchAlgorithmException;
 

File: connector/kafka-connector/src/main/java/com/alibaba/otter/canal/connector/kafka/consumer/CanalKafkaConsumer.java
Patch:
@@ -9,6 +9,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.TimeUnit;
 
+import com.alibaba.otter.canal.common.utils.PropertiesUtils;
 import org.apache.kafka.clients.consumer.ConsumerRecord;
 import org.apache.kafka.clients.consumer.ConsumerRecords;
 import org.apache.kafka.clients.consumer.KafkaConsumer;
@@ -53,6 +54,8 @@ public void init(Properties properties, String topic, String groupId) {
             String k = (String) entry.getKey();
             Object v = entry.getValue();
             if (k.startsWith(PREFIX_KAFKA_CONFIG) && v != null) {
+                // check env config
+                v = PropertiesUtils.getProperty(properties, k);
                 kafkaProperties.put(k.substring(PREFIX_KAFKA_CONFIG.length()), v);
             }
         }

File: connector/kafka-connector/src/main/java/com/alibaba/otter/canal/connector/kafka/producer/CanalKafkaProducer.java
Patch:
@@ -102,6 +102,8 @@ private void loadKafkaProperties(Properties properties) {
             String key = (String) entry.getKey();
             Object value = entry.getValue();
             if (key.startsWith(PREFIX_KAFKA_CONFIG) && value != null) {
+                // check env config
+                value = PropertiesUtils.getProperty(properties, key);
                 key = key.substring(PREFIX_KAFKA_CONFIG.length());
                 kafkaProperties.put(key, value);
             }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/BinlogDownloadQueue.java
Patch:
@@ -223,7 +223,7 @@ private static void saveFile(File parentFile, String fileName, HttpResponse resp
                 TarArchiveEntry tarArchiveEntry = null;
                 while ((tarArchiveEntry = tais.getNextTarEntry()) != null) {
                     String name = tarArchiveEntry.getName();
-                    File tarFile = new File(parentFile, name);
+                    File tarFile = new File(parentFile, name + ".tmp");
                     logger.info("start to download file " + tarFile.getName());
                     if (tarFile.exists()) {
                         tarFile.delete();
@@ -244,7 +244,7 @@ private static void saveFile(File parentFile, String fileName, HttpResponse resp
                 }
                 tais.close();
             } else {
-                File file = new File(parentFile, fileName);
+                File file = new File(parentFile, fileName + ".tmp");
                 if (file.exists()) {
                     file.delete();
                 }

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AdapterProcessor.java
Patch:
@@ -63,7 +63,7 @@ public AdapterProcessor(CanalClientConfig canalClientConfig, String destination,
         // load connector consumer
         ExtensionLoader<CanalMsgConsumer> loader = new ExtensionLoader<>(CanalMsgConsumer.class);
         canalMsgConsumer = loader
-            .getExtension(canalClientConfig.getMode().toLowerCase(), CONNECTOR_SPI_DIR, CONNECTOR_STANDBY_SPI_DIR);
+            .getExtension(canalClientConfig.getMode().toLowerCase(),destination ,CONNECTOR_SPI_DIR, CONNECTOR_STANDBY_SPI_DIR);
 
         Properties properties = canalClientConfig.getConsumerProperties();
         properties.put(CanalConstants.CANAL_MQ_FLAT_MESSAGE, canalClientConfig.getFlatMessage());

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/URLClassExtensionLoader.java
Patch:
@@ -21,7 +21,9 @@ public Class<?> loadClass(String name) throws ClassNotFoundException {
 
         if (name.startsWith("java.") || name.startsWith("org.slf4j.") || name.startsWith("org.apache.logging")
             || name.startsWith("org.apache.zookeeper.") || name.startsWith("org.I0Itec.zkclient.")
-            || name.startsWith("org.apache.commons.logging.")) {
+            || name.startsWith("org.apache.commons.logging.")
+            || name.startsWith("com.alibaba.druid")
+            ) {
             // || name.startsWith("org.apache.hadoop."))
             // {
             c = super.loadClass(name);

File: connector/rabbitmq-connector/src/main/java/com/alibaba/otter/canal/connector/rabbitmq/producer/CanalRabbitMQProducer.java
Patch:
@@ -175,8 +175,8 @@ private void sendMessage(String queueName, byte[] message) {
     public void stop() {
         logger.info("## Stop RabbitMQ producer##");
         try {
-            this.connect.close();
             this.channel.close();
+            this.connect.close();
             super.stop();
         } catch (AlreadyClosedException ex) {
             logger.error("Connection is already closed", ex);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -303,7 +303,7 @@ private void sendRegisterSlave() throws IOException {
                 err.fromBytes(body);
                 throw new IOException("Error When doing Register slave:" + err.toString());
             } else {
-                throw new IOException("unpexpected packet with field_count=" + body[0]);
+                throw new IOException("Unexpected packet with field_count=" + body[0]);
             }
         }
     }

File: parse/src/test/java/com/alibaba/otter/canal/parse/DirectLogFetcherTest.java
Patch:
@@ -149,7 +149,7 @@ private void sendRegisterSlave(MysqlConnector connector, int slaveId) throws IOE
                 err.fromBytes(body);
                 throw new IOException("Error When doing Register slave:" + err.toString());
             } else {
-                throw new IOException("unpexpected packet with field_count=" + body[0]);
+                throw new IOException("Unexpected packet with field_count=" + body[0]);
             }
         }
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.otter.canal.parse.driver.mysql.MysqlUpdateExecutor;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.HeaderPacket;
-import com.alibaba.otter.canal.parse.driver.mysql.packets.MysqlGTIDSet;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.BinlogDumpCommandPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.BinlogDumpGTIDCommandPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.RegisterSlaveCommandPacket;
@@ -444,7 +443,8 @@ private void updateSettings() throws IOException {
             // mysql5.6需要设置slave_uuid避免被server kill链接
             update("set @slave_uuid=uuid()");
         } catch (Exception e) {
-            if (!StringUtils.contains(e.getMessage(), "Unknown system variable")) {
+            if (!StringUtils.contains(e.getMessage(), "Unknown system variable")
+                && !StringUtils.contains(e.getMessage(), "slave_uuid can't be set")) {
                 logger.warn("update slave_uuid failed", e);
             }
         }

File: example/src/main/java/com/alibaba/otter/canal/example/BaseCanalClientTest.java
Patch:
@@ -31,7 +31,8 @@ public class BaseCanalClientTest {
     protected static final String             SEP                = SystemUtils.LINE_SEPARATOR;
     protected static final String             DATE_FORMAT        = "yyyy-MM-dd HH:mm:ss";
     protected volatile boolean                running            = false;
-    protected Thread.UncaughtExceptionHandler handler            = (t, e) -> logger.error("parse events has an error", e);
+    protected Thread.UncaughtExceptionHandler handler            = (t, e) -> logger.error("parse events has an error",
+                                                                     e);
     protected Thread                          thread             = null;
     protected CanalConnector                  connector;
     protected static String                   context_format     = null;
@@ -148,7 +149,7 @@ protected void printEntry(List<Entry> entrys) {
                             entry.getHeader().getGtid(), String.valueOf(delayTime) });
 
                 if (eventType == EventType.QUERY || rowChage.getIsDdl()) {
-                    logger.info(" sql ----> " + rowChage.getSql() + SEP);
+                    logger.info("ddl : " + rowChage.getIsDdl() + " ,  sql ----> " + rowChage.getSql() + SEP);
                     continue;
                 }
 

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/AbstractKafkaTest.java
Patch:
@@ -13,8 +13,8 @@ public abstract class AbstractKafkaTest extends BaseCanalClientTest {
     public static String  topic     = "example";
     public static Integer partition = null;
     public static String  groupId   = "g4";
-    public static String  servers   = "slave1:6667,slave2:6667,slave3:6667";
-    public static String  zkServers = "slave1:2181,slave2:2181,slave3:2181";
+    public static String  servers   = "127.0.0.1:9092";
+    public static String  zkServers = "127.0.0.1:2181";
 
     public void sleep(long time) {
         try {

File: connector/rabbitmq-connector/src/main/java/com/alibaba/otter/canal/connector/rabbitmq/config/RabbitMQConstants.java
Patch:
@@ -15,7 +15,6 @@ public class RabbitMQConstants {
     public static final String RABBITMQ_VIRTUAL_HOST     = ROOT + "." + "virtual.host";
     public static final String RABBITMQ_USERNAME         = ROOT + "." + "username";
     public static final String RABBITMQ_PASSWORD         = ROOT + "." + "password";
-    public static final String RABBITMQ_DELIVERY_NODE    = ROOT + "." + "deliveryMode";
 
     public static final String RABBITMQ_RESOURCE_OWNERID = ROOT + "." + "rabbitmq.resource.ownerId";
 }

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/PlainCanalInstanceGenerator.java
Patch:
@@ -14,6 +14,7 @@
 import com.alibaba.otter.canal.instance.manager.plain.PlainCanal;
 import com.alibaba.otter.canal.instance.manager.plain.PlainCanalConfigClient;
 import com.alibaba.otter.canal.instance.spring.SpringCanalInstanceGenerator;
+import com.alibaba.otter.canal.parse.CanalEventParser;
 
 /**
  * 基于manager生成对应的{@linkplain CanalInstance}
@@ -35,7 +36,7 @@ public PlainCanalInstanceGenerator(Properties canalConfig){
     }
 
     public CanalInstance generate(String destination) {
-        synchronized (CanalInstanceGenerator.class) {
+        synchronized (CanalEventParser.class) {
             try {
                 PlainCanal canal = canalConfigClient.findInstance(destination, null);
                 if (canal == null) {

File: instance/spring/src/main/java/com/alibaba/otter/canal/instance/spring/SpringCanalInstanceGenerator.java
Patch:
@@ -9,6 +9,7 @@
 import com.alibaba.otter.canal.common.CanalException;
 import com.alibaba.otter.canal.instance.core.CanalInstance;
 import com.alibaba.otter.canal.instance.core.CanalInstanceGenerator;
+import com.alibaba.otter.canal.parse.CanalEventParser;
 
 /**
  * @author zebin.xuzb @ 2012-7-12
@@ -22,7 +23,7 @@ public class SpringCanalInstanceGenerator implements CanalInstanceGenerator {
     private BeanFactory         beanFactory;
 
     public CanalInstance generate(String destination) {
-        synchronized (CanalInstanceGenerator.class) {
+        synchronized (CanalEventParser.class) {
             try {
                 // 设置当前正在加载的通道，加载spring查找文件时会用到该变量
                 System.setProperty("canal.instance.destination", destination);

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/config/WebConfig.java
Patch:
@@ -84,7 +84,9 @@ public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletRespo
             }
         })
             .addPathPatterns("/api/**")
-            .excludePathPatterns("/api/**/config/**")
+            .excludePathPatterns("/api/**/config/server_polling")
+            .excludePathPatterns("/api/**/config/instances_polling")
+            .excludePathPatterns("/api/**/config/instance_polling/**")
             .excludePathPatterns("/api/**/user/login")
             .excludePathPatterns("/api/**/user/logout")
             .excludePathPatterns("/api/**/user/info");

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/UUIDSet.java
Patch:
@@ -181,7 +181,9 @@ public static List<Interval> combine(List<Interval> intervals) {
             int j;
             for (j = i + 1; j < len; j++) {
                 if (intervals.get(i).stop >= intervals.get(j).start) {
-                    intervals.get(i).stop = intervals.get(j).stop;
+                    if (intervals.get(i).stop < intervals.get(j).stop) {
+                        intervals.get(i).stop = intervals.get(j).stop;
+                    }
                 } else {
                     break;
                 }

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/spi/URLClassExtensionLoader.java
Patch:
@@ -20,6 +20,7 @@ public Class<?> loadClass(String name) throws ClassNotFoundException {
         }
 
         if (name.startsWith("java.") || name.startsWith("org.slf4j.") || name.startsWith("org.apache.logging")
+            || name.startsWith("org.apache.zookeeper.") || name.startsWith("org.I0Itec.zkclient.")
             || name.startsWith("org.apache.commons.logging.")) {
             // || name.startsWith("org.apache.hadoop."))
             // {

File: example/src/main/java/com/alibaba/otter/canal/example/SimpleCanalClientTest.java
Patch:
@@ -22,7 +22,7 @@ public static void main(String args[]) {
         // 根据ip，直接创建链接，无HA的功能
         String destination = "example";
         String ip = AddressUtils.getHostIp();
-        CanalConnector connector = CanalConnectors.newSingleConnector(new InetSocketAddress(ip, 11111),
+        CanalConnector connector = CanalConnectors.newSingleConnector(new InetSocketAddress("127.0.0.1", 11111),
                 destination,
                 "canal",
                 "canal");

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/dao/MetaBaseDAO.java
Patch:
@@ -9,22 +9,22 @@
 
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang.StringUtils;
-import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
+import org.mybatis.spring.support.SqlSessionDaoSupport;
 
 /**
  * @author agapple 2017年10月14日 上午1:05:22
  * @since 1.0.25
  */
 @SuppressWarnings("deprecation")
-public class MetaBaseDAO extends SqlMapClientDaoSupport {
+public class MetaBaseDAO extends SqlSessionDaoSupport {
 
     protected boolean isH2 = false;
 
     protected void initTable(String tableName) throws Exception {
         Connection conn = null;
         InputStream input = null;
         try {
-            DataSource dataSource = getDataSource();
+            DataSource dataSource = getSqlSessionFactory().getConfiguration().getEnvironment().getDataSource();
             conn = dataSource.getConnection();
             String name = "mysql";
             isH2 = isH2(conn);

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogContext.java
Patch:
@@ -24,7 +24,7 @@ public final class LogContext {
 
     private GTIDSet                           gtidSet;
 
-    private GtidLogEvent                      gtidLogEvent; // save current gtid log event
+    private LogEvent                          gtidLogEvent; // save current gtid log event
 
     public LogContext(){
         this.formatDescription = FormatDescriptionLogEvent.FORMAT_DESCRIPTION_EVENT_5_x;
@@ -75,11 +75,11 @@ public void setGtidSet(GTIDSet gtidSet) {
         this.gtidSet = gtidSet;
     }
 
-    public GtidLogEvent getGtidLogEvent() {
+    public LogEvent getGtidLogEvent() {
         return gtidLogEvent;
     }
 
-    public void setGtidLogEvent(GtidLogEvent gtidLogEvent) {
+    public void setGtidLogEvent(LogEvent gtidLogEvent) {
         this.gtidLogEvent = gtidLogEvent;
     }
 }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/LogHeader.java
Patch:
@@ -316,10 +316,11 @@ public String getCurrentGtidLastCommit() {
         return gtidMap.get(CURRENT_GTID_LAST_COMMIT);
     }
 
-    public void putGtid(GTIDSet gtidSet, GtidLogEvent event) {
+    public void putGtid(GTIDSet gtidSet, LogEvent gtidEvent) {
         if (gtidSet != null) {
             gtidMap.put(GTID_SET_STRING, gtidSet.toString());
-            if (event != null) {
+            if (gtidEvent != null && gtidEvent instanceof GtidLogEvent) {
+                GtidLogEvent event = (GtidLogEvent)gtidEvent;
                 gtidMap.put(CURRENT_GTID_STRING, event.getGtidStr());
                 gtidMap.put(CURRENT_GTID_SN, String.valueOf(event.getSequenceNumber()));
                 gtidMap.put(CURRENT_GTID_LAST_COMMIT, String.valueOf(event.getLastCommitted()));

File: common/src/main/java/com/alibaba/otter/canal/common/utils/BooleanMutex.java
Patch:
@@ -32,7 +32,7 @@
  */
 public class BooleanMutex {
 
-    private Sync sync;
+    private final Sync sync;
 
     public BooleanMutex(){
         sync = new Sync();
@@ -47,7 +47,7 @@ public BooleanMutex(Boolean mutex){
     /**
      * 阻塞等待Boolean为true
      * 
-     * @throws InterruptedException
+     * @throws InterruptedException if the current thread is interrupted
      */
     public void get() throws InterruptedException {
         sync.innerGet();
@@ -86,7 +86,7 @@ public boolean state() {
      * Synchronization control for BooleanMutex. Uses AQS sync state to
      * represent run status
      */
-    private final class Sync extends AbstractQueuedSynchronizer {
+    private static final class Sync extends AbstractQueuedSynchronizer {
 
         private static final long serialVersionUID = 2559471934544126329L;
         /** State value representing that TRUE */

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/MetaLogPositionManager.java
Patch:
@@ -73,6 +73,6 @@ public LogPosition getLatestIndexBy(String destination) {
     @Override
     public void persistLogPosition(String destination, LogPosition logPosition) throws CanalParseException {
         // do nothing
-        logger.info("persist LogPosition:{}", destination, logPosition);
+        logger.info("destination [{}] persist LogPosition:{}", destination, logPosition);
     }
 }

File: server/src/main/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded.java
Patch:
@@ -184,7 +184,7 @@ public void subscribe(ClientIdentity clientIdentity) throws CanalServerException
             }
             logger.info("subscribe successfully, {} with first position:{} ", clientIdentity, position);
         } else {
-            logger.info("subscribe successfully, use last cursor position:{} ", clientIdentity, position);
+            logger.info("subscribe successfully, {} use last cursor position:{} ", clientIdentity, position);
         }
 
         // 通知下订阅关系变化

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/connector/SimpleAdminConnector.java
Patch:
@@ -108,9 +108,7 @@ public void connect() throws ServiceException {
             }
 
             connected = true;
-        } catch (IOException e) {
-            throw new ServiceException(e);
-        } catch (NoSuchAlgorithmException e) {
+        } catch (IOException | NoSuchAlgorithmException e) {
             throw new ServiceException(e);
         }
     }

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/config/bind/DefaultPropertyNamePatternsMatcher.java
Patch:
@@ -70,8 +70,8 @@ public boolean matches(String propertyName) {
                 return false;
             }
         }
-        for (int i = 0; i < match.length; i++) {
-            if (match[i]) {
+        for (boolean b : match) {
+            if (b) {
                 return true;
             }
         }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/admin/CanalAdminController.java
Patch:
@@ -192,7 +192,7 @@ public String listCanalLog() {
         Collection<File> files = org.apache.commons.io.FileUtils.listFiles(new File("../logs/canal/"),
             TrueFileFilter.TRUE,
             TrueFileFilter.TRUE);
-        List<String> names = files.stream().map(f -> f.getName()).collect(Collectors.toList());
+        List<String> names = files.stream().map(File::getName).collect(Collectors.toList());
         return Joiner.on(",").join(names);
     }
 
@@ -206,7 +206,7 @@ public String listInstanceLog(String destination) {
         Collection<File> files = org.apache.commons.io.FileUtils.listFiles(new File("../logs/" + destination + "/"),
             TrueFileFilter.TRUE,
             TrueFileFilter.TRUE);
-        List<String> names = files.stream().map(f -> f.getName()).collect(Collectors.toList());
+        List<String> names = files.stream().map(File::getName).collect(Collectors.toList());
         return Joiner.on(",").join(names);
     }
 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/MysqlGTIDSet.java
Patch:
@@ -89,8 +89,8 @@ public static MysqlGTIDSet parse(String gtidData) {
             // 存在多个GTID时会有回车符
             String[] uuidStrs = gtidData.replaceAll("\n", "").split(",");
             m = new HashMap<>(uuidStrs.length);
-            for (int i = 0; i < uuidStrs.length; i++) {
-                UUIDSet uuidSet = UUIDSet.parse(uuidStrs[i]);
+            for (String uuidStr : uuidStrs) {
+                UUIDSet uuidSet = UUIDSet.parse(uuidStr);
                 m.put(uuidSet.SID.toString(), uuidSet);
             }
         }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/UUIDSet.java
Patch:
@@ -80,7 +80,7 @@ public int compareTo(Interval o) {
             if (equals(o)) {
                 return 1;
             }
-            return start > o.start ? 1 : (start == o.start ? 0 : -1);
+            return Long.compare(start, o.start);
         }
     }
 

File: meta/src/main/java/com/alibaba/otter/canal/meta/ZooKeeperMetaManager.java
Patch:
@@ -191,7 +191,7 @@ public PositionRange removeBatch(ClientIdentity clientIdentity, Long batchId) th
         }
 
         // 找到最小的Id
-        ArrayList<Long> batchIds = new ArrayList<Long>(nodes.size());
+        ArrayList<Long> batchIds = new ArrayList<>(nodes.size());
         for (String batchIdString : nodes) {
             batchIds.add(Long.valueOf(batchIdString));
         }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/local/BinLogFileQueue.java
Patch:
@@ -230,7 +230,7 @@ public boolean accept(File dir, String name) {
             }
         }, null));
         // 排一下序列
-        Collections.sort(files, Comparator.comparing(File::getName));
+        files.sort(Comparator.comparing(File::getName));
         return files;
     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/PeriodMixedLogPositionManager.java
Patch:
@@ -83,7 +83,7 @@ public void start() {
 
         // 启动定时工作任务
         executorService.scheduleAtFixedRate(() -> {
-            List<String> tasks = new ArrayList<String>(persistTasks);
+            List<String> tasks = new ArrayList<>(persistTasks);
             for (String destination : tasks) {
                 try {
                     // 定时将内存中的最新值刷到zookeeper中，多次变更只刷一次

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/SecurityUtil.java
Patch:
@@ -84,8 +84,8 @@ public static final byte[] scramble411(byte[] pass, byte[] seed) throws NoSuchAl
      */
     public static String byte2HexStr(byte[] b) {
         StringBuilder hs = new StringBuilder();
-        for (int n = 0; n < b.length; n++) {
-            String hex = (Integer.toHexString(b[n] & 0XFF));
+        for (byte value : b) {
+            String hex = (Integer.toHexString(value & 0XFF));
             if (hex.length() == 1) {
                 hs.append("0" + hex);
             } else {

File: store/src/main/java/com/alibaba/otter/canal/store/model/Events.java
Patch:
@@ -20,7 +20,7 @@ public class Events<EVENT> implements Serializable {
     private static final long serialVersionUID = -7337454954300706044L;
 
     private PositionRange     positionRange    = new PositionRange();
-    private List<EVENT>       events           = new ArrayList<EVENT>();
+    private List<EVENT>       events           = new ArrayList<>();
 
     public List<EVENT> getEvents() {
         return events;

File: store/src/test/java/com/alibaba/otter/canal/store/memory/buffer/MemoryEventStoreMultiThreadTest.java
Patch:
@@ -109,8 +109,7 @@ public void run() {
                 }
                 try {
                     eventStore.put(event);
-                } catch (CanalStoreException e) {
-                } catch (InterruptedException e) {
+                } catch (CanalStoreException | InterruptedException e) {
                 }
             }
         }

File: admin/admin-web/src/main/java/com/alibaba/otter/canal/admin/service/CanalInstanceService.java
Patch:
@@ -26,8 +26,6 @@ public interface CanalInstanceService {
 
     Map<String, String> remoteInstanceLog(Long id, Long nodeId);
 
-    Map<String, String> remoteInstanceMeta(Long id, Long nodeId);
-
     boolean remoteOperation(Long id, Long nodeId, String option);
 
     boolean instanceOperation(Long id, String option);

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/config/bind/PropertiesConfigurationFactory.java
Patch:
@@ -282,7 +282,7 @@ private Set<String> getNames(Iterable<String> prefixes) {
             PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(this.target.getClass());
             for (PropertyDescriptor descriptor : descriptors) {
                 String name = descriptor.getName();
-                if (!"class".equals(name)) {
+                if (!name.equals("class")) {
                     RelaxedNames relaxedNames = RelaxedNames.forCamelCase(name);
                     if (prefixes == null) {
                         for (String relaxedName : relaxedNames) {

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java
Patch:
@@ -78,7 +78,7 @@ private static boolean isText(String columnType) {
 
     public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
-            || ("".equals(value) && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
+            || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
         }
 

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/MessageUtil.java
Patch:
@@ -38,6 +38,7 @@ public static List<Dml> parse4Dml(String destination, String groupId, Message me
             CanalEntry.EventType eventType = rowChange.getEventType();
 
             final Dml dml = new Dml();
+            dml.setIsDdl(rowChange.getIsDdl());
             dml.setDestination(destination);
             dml.setGroupId(groupId);
             dml.setDatabase(entry.getHeader().getSchemaName());

File: client-adapter/escore/src/main/java/com/alibaba/otter/canal/client/adapter/es/core/service/ESSyncService.java
Patch:
@@ -95,11 +95,11 @@ public void sync(ESSyncConfig config, Dml dml) {
             long begin = System.currentTimeMillis();
 
             String type = dml.getType();
-            if (type != null && "INSERT".equalsIgnoreCase(type)) {
+            if (type != null && type.equalsIgnoreCase("INSERT")) {
                 insert(config, dml);
-            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
                 update(config, dml);
-            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
                 delete(config, dml);
             } else {
                 return;

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/config/MappingConfig.java
Patch:
@@ -312,7 +312,7 @@ public void setColumns(Map<String, String> columns) {
                         columnItem.setRowKey(true);
                         rowKeyColumn = columnItem;
                     } else {
-                        if (field == null || "".equals(field)) {
+                        if (field == null || field.equals("")) {
                             columnItem.setFamily(family);
                             columnItem.setQualifier(columnField.getKey());
                         } else {

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/service/HbaseSyncService.java
Patch:
@@ -31,11 +31,11 @@ public HbaseSyncService(HbaseTemplate hbaseTemplate){
     public void sync(MappingConfig config, Dml dml) {
         if (config != null) {
             String type = dml.getType();
-            if (type != null && "INSERT".equalsIgnoreCase(type)) {
+            if (type != null && type.equalsIgnoreCase("INSERT")) {
                 insert(config, dml);
-            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
                 update(config, dml);
-            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
                 delete(config, dml);
             }
             if (logger.isDebugEnabled()) {

File: client-adapter/kudu/src/main/java/com/alibaba/otter/canal/client/adapter/kudu/service/KuduSyncService.java
Patch:
@@ -47,11 +47,11 @@ public KuduSyncService(KuduTemplate kuduTemplate){
     public void sync(KuduMappingConfig config, Dml dml) {
         if (config != null) {
             String type = dml.getType();
-            if (type != null && "INSERT".equalsIgnoreCase(type)) {
+            if (type != null && type.equalsIgnoreCase("INSERT")) {
                 insert(config, dml);
-            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
                 upsert(config, dml);
-            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
+            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
                 delete(config, dml);
             }
             if (logger.isDebugEnabled()) {

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/config/CuratorClient.java
Patch:
@@ -3,6 +3,7 @@
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
 
+import org.apache.commons.lang.StringUtils;
 import org.apache.curator.framework.CuratorFramework;
 import org.apache.curator.framework.CuratorFrameworkFactory;
 import org.apache.curator.retry.ExponentialBackoffRetry;
@@ -24,7 +25,7 @@ public class CuratorClient {
 
     @PostConstruct
     public void init() {
-        if (adapterCanalConfig.getZookeeperHosts() != null) {
+        if (StringUtils.isNotEmpty(adapterCanalConfig.getZookeeperHosts())) {
             curator = CuratorFrameworkFactory.builder()
                 .connectString(adapterCanalConfig.getZookeeperHosts())
                 .retryPolicy(new ExponentialBackoffRetry(1000, 3))

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/rest/CommonRest.java
Patch:
@@ -181,11 +181,11 @@ public List<Map<String, String>> destinations() {
      */
     @PutMapping("/syncSwitch/{destination}/{status}")
     public Result etl(@PathVariable String destination, @PathVariable String status) {
-        if ("on".equals(status)) {
+        if (status.equals("on")) {
             syncSwitch.on(destination);
             logger.info("#Destination: {} sync on", destination);
             return Result.createSuccess("实例: " + destination + " 开启同步成功");
-        } else if ("off".equals(status)) {
+        } else if (status.equals("off")) {
             syncSwitch.off(destination);
             logger.info("#Destination: {} sync off", destination);
             return Result.createSuccess("实例: " + destination + " 关闭同步成功");

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/support/SyncUtil.java
Patch:
@@ -71,7 +71,7 @@ public static void setPStmt(int type, PreparedStatement pstmt, Object value, int
                 if (value instanceof Boolean) {
                     pstmt.setBoolean(i, (Boolean) value);
                 } else if (value instanceof String) {
-                    boolean v = !"0".equals(value);
+                    boolean v = !value.equals("0");
                     pstmt.setBoolean(i, v);
                 } else if (value instanceof Number) {
                     boolean v = ((Number) value).intValue() != 0;

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/producer/MQMessageUtils.java
Patch:
@@ -49,7 +49,7 @@ public class MQMessageUtils {
                                                                                      int i = pkHashConfig.lastIndexOf(":");
                                                                                      if (i > 0) {
                                                                                          String pkStr = pkHashConfig.substring(i + 1);
-                                                                                         if ("$pk$".equalsIgnoreCase(pkStr)) {
+                                                                                         if (pkStr.equalsIgnoreCase("$pk$")) {
                                                                                              data.hashMode.autoPkHash = true;
                                                                                          } else {
                                                                                              data.hashMode.pkNames = Lists.newArrayList(StringUtils.split(pkStr,

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/util/JdbcTypeUtil.java
Patch:
@@ -78,7 +78,7 @@ private static boolean isText(String columnType) {
 
     public static Object typeConvert(String tableName, String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
-            || ("".equals(value) && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
+            || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
         }
 

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/util/MessageUtil.java
Patch:
@@ -42,6 +42,7 @@ public static List<CommonMessage> convert(Message message) {
             CanalEntry.EventType eventType = rowChange.getEventType();
 
             final CommonMessage msg = new CommonMessage();
+            msg.setIsDdl(rowChange.getIsDdl());
             msg.setDatabase(entry.getHeader().getSchemaName());
             msg.setTable(entry.getHeader().getTableName());
             msg.setType(eventType.toString());

File: connector/rocketmq-connector/src/main/java/com/alibaba/otter/canal/connector/rocketmq/consumer/CanalRocketMQConsumer.java
Patch:
@@ -47,7 +47,6 @@ public class CanalRocketMQConsumer implements CanalMsgConsumer {
     private String                                             nameServer;
     private String                                             topic;
     private String                                             groupName;
-    private volatile boolean                                   connected            = false;
     private DefaultMQPushConsumer                              rocketMQConsumer;
     private BlockingQueue<ConsumerBatchMessage<CommonMessage>> messageBlockingQueue;
     private int                                                batchSize            = -1;
@@ -135,7 +134,6 @@ public void connect() {
             });
             rocketMQConsumer.start();
         } catch (MQClientException ex) {
-            connected = false;
             logger.error("Start RocketMQ consumer error", ex);
         }
     }
@@ -231,6 +229,5 @@ public void ack() {
     public void disconnect() {
         rocketMQConsumer.unsubscribe(topic);
         rocketMQConsumer.shutdown();
-        connected = false;
     }
 }

File: example/src/main/java/com/alibaba/otter/canal/example/AbstractCanalClientTest.java
Patch:
@@ -76,16 +76,17 @@ protected void process() {
 
                     if (batchId != -1) {
                         connector.ack(batchId); // 提交确认
-                        // connector.rollback(batchId); // 处理失败, 回滚数据
                     }
                 }
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 logger.error("process error!", e);
                 try {
                     Thread.sleep(1000L);
                 } catch (InterruptedException e1) {
                     // ignore
                 }
+
+                connector.rollback(); // 处理失败, 回滚数据
             } finally {
                 connector.disconnect();
                 MDC.remove("destination");

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/CanalKafkaClientFlatMessageExample.java
Patch:
@@ -117,8 +117,7 @@ private void process() {
                         }
                         for (FlatMessage message : messages) {
                             long batchId = message.getId();
-                            int size = message.getData() == null ? 0 : message.getData().size();
-                            if (batchId == -1 || size == 0) {
+                            if (batchId == -1 || message.getData() == null) {
                                 // try {
                                 // Thread.sleep(1000);
                                 // } catch (InterruptedException e) {

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -5,7 +5,6 @@
 import java.net.InetSocketAddress;
 import java.net.URL;
 import java.net.URLClassLoader;
-import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
@@ -294,7 +293,7 @@ private CanalEventParser doInitEventParser(SourcingType type, List<InetSocketAdd
             }
             mysqlEventParser.setDestination(destination);
             // 编码参数
-            mysqlEventParser.setConnectionCharset(Charset.forName(parameters.getConnectionCharset()));
+            mysqlEventParser.setConnectionCharset(parameters.getConnectionCharset());
             mysqlEventParser.setConnectionCharsetNumber(parameters.getConnectionCharsetNumber());
             // 网络相关参数
             mysqlEventParser.setDefaultConnectionTimeoutInSeconds(parameters.getDefaultConnectionTimeoutInSeconds());
@@ -375,7 +374,7 @@ public TableMetaTSDB build(String destination, String springXml) {
             LocalBinlogEventParser localBinlogEventParser = new LocalBinlogEventParser();
             localBinlogEventParser.setDestination(destination);
             localBinlogEventParser.setBufferSize(parameters.getReceiveBufferSize());
-            localBinlogEventParser.setConnectionCharset(Charset.forName(parameters.getConnectionCharset()));
+            localBinlogEventParser.setConnectionCharset(parameters.getConnectionCharset());
             localBinlogEventParser.setConnectionCharsetNumber(parameters.getConnectionCharsetNumber());
             localBinlogEventParser.setDirectory(parameters.getLocalBinlogDirectory());
             localBinlogEventParser.setProfilingEnabled(false);

File: meta/src/main/java/com/alibaba/otter/canal/meta/FileMixedMetaManager.java
Patch:
@@ -130,9 +130,9 @@ public void run() {
     }
 
     public void stop() {
-        super.stop();
-
         flushDataToFile();// 刷新数据
+
+        super.stop();
         executor.shutdownNow();
         destinations.clear();
         batches.clear();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -393,13 +393,13 @@ private void updateSettings() throws IOException {
             logger.warn("update wait_timeout failed", e);
         }
         try {
-            update("set net_write_timeout=1800");
+            update("set net_write_timeout=7200");
         } catch (Exception e) {
             logger.warn("update net_write_timeout failed", e);
         }
 
         try {
-            update("set net_read_timeout=1800");
+            update("set net_read_timeout=7200");
         } catch (Exception e) {
             logger.warn("update net_read_timeout failed", e);
         }
@@ -522,7 +522,7 @@ private void loadBinlogChecksum() {
             rs = query("select @@global.binlog_checksum");
             List<String> columnValues = rs.getFieldValues();
             if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0) != null
-                && "CRC32".equals(columnValues.get(0).toUpperCase())) {
+                && columnValues.get(0).toUpperCase().equals("CRC32")) {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
             } else {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/RdsBinlogEventParserProxy.java
Patch:
@@ -55,7 +55,7 @@ public void start() {
             rdsLocalBinlogEventParser.setLogPositionManager(this.getLogPositionManager());
             rdsLocalBinlogEventParser.setDestination(destination);
             rdsLocalBinlogEventParser.setAlarmHandler(this.getAlarmHandler());
-            rdsLocalBinlogEventParser.setConnectionCharset(this.connectionCharset);
+            rdsLocalBinlogEventParser.setConnectionCharsetStd(this.connectionCharset);
             rdsLocalBinlogEventParser.setConnectionCharsetNumber(this.connectionCharsetNumber);
             rdsLocalBinlogEventParser.setEnableTsdb(this.enableTsdb);
             rdsLocalBinlogEventParser.setEventBlackFilter(this.eventBlackFilter);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/request/DescribeBackupPolicyRequest.java
Patch:
@@ -31,7 +31,7 @@ protected RdsBackupPolicy processResult(HttpResponse response) throws Exception
         JSONObject jsonObj = JSON.parseObject(result);
         RdsBackupPolicy policy = new RdsBackupPolicy();
         policy.setBackupRetentionPeriod(jsonObj.getString("BackupRetentionPeriod"));
-        policy.setBackupLog("Enable".equalsIgnoreCase(jsonObj.getString("BackupLog")));
+        policy.setBackupLog(jsonObj.getString("BackupLog").equalsIgnoreCase("Enable"));
         policy.setLogBackupRetentionPeriod(jsonObj.getIntValue("LogBackupRetentionPeriod"));
         policy.setPreferredBackupPeriod(jsonObj.getString("PreferredBackupPeriod"));
         policy.setPreferredBackupTime(jsonObj.getString("PreferredBackupTime"));

File: parse/src/test/java/com/alibaba/otter/canal/parse/MysqlBinlogDumpPerformanceTest.java
Patch:
@@ -1,10 +1,11 @@
 package com.alibaba.otter.canal.parse;
 
 import java.net.InetSocketAddress;
-import java.nio.charset.Charset;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicLong;
 
+import org.junit.Ignore;
+
 import com.alibaba.otter.canal.common.AbstractCanalLifeCycle;
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser;
@@ -15,15 +16,14 @@
 import com.alibaba.otter.canal.protocol.position.LogPosition;
 import com.alibaba.otter.canal.sink.CanalEventSink;
 import com.alibaba.otter.canal.sink.exception.CanalSinkException;
-import org.junit.Ignore;
 
 @Ignore
 public class MysqlBinlogDumpPerformanceTest {
 
     public static void main(String args[]) {
         final MysqlEventParser controller = new MysqlEventParser();
         final EntryPosition startPosition = new EntryPosition("mysql-bin.000007", 89796293L, 100L);
-        controller.setConnectionCharset(Charset.forName("UTF-8"));
+        controller.setConnectionCharset("UTF-8");
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
         controller.setFilterQueryDml(true);

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogDumpTest.java
Patch:
@@ -31,7 +31,7 @@ public void testSimple() {
         final EntryPosition startPosition = new EntryPosition("mysql-bin.000003", 123L);
 
         controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "canal", "canal"));
-        controller.setConnectionCharset(Charset.forName("UTF-8"));
+        controller.setConnectionCharsetStd(Charset.forName("UTF-8"));
         controller.setDirectory(directory);
         controller.setMasterPosition(startPosition);
         controller.setEventSink(new AbstractCanalEventSinkTest<List<Entry>>() {

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -32,7 +32,7 @@ public void testSimple() {
         final MysqlEventParser controller = new MysqlEventParser();
         final EntryPosition startPosition = new EntryPosition("mysql-bin.000001", 4L);
         // startPosition.setGtid("f1ceb61a-a5d5-11e7-bdee-107c3dbcf8a7:1-17");
-        controller.setConnectionCharset(Charset.forName("UTF-8"));
+        controller.setConnectionCharsetStd(Charset.forName("UTF-8"));
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
         controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "root", "hello"));

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/RdsLocalBinlogDumpTest.java
Patch:
@@ -34,7 +34,7 @@ public void testSimple() {
         String directory = "/tmp/rds";
         final RdsLocalBinlogEventParser controller = new RdsLocalBinlogEventParser();
         controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "root", "hello"));
-        controller.setConnectionCharset(Charset.forName("UTF-8"));
+        controller.setConnectionCharsetStd(Charset.forName("UTF-8"));
         controller.setDirectory(directory);
         controller.setAccesskey("");
         controller.setSecretkey("");

File: server/src/main/java/com/alibaba/otter/canal/admin/handler/SessionHandler.java
Patch:
@@ -116,9 +116,6 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Ex
                                 message = canalAdmin.instanceLog(destination, file, count);
                             }
                             break;
-                        case "meta":
-                            message = canalAdmin.instanceMeta(destination, file);
-                            break;
                         default:
                             byte[] errorBytes = AdminNettyUtils.errorPacket(301,
                                 MessageFormatter.format("LogAdmin type={} is unknown", type).getMessage());

File: example/src/main/java/com/alibaba/otter/canal/example/kafka/CanalKafkaClientFlatMessageExample.java
Patch:
@@ -117,7 +117,7 @@ private void process() {
                         }
                         for (FlatMessage message : messages) {
                             long batchId = message.getId();
-                            int size = message.getData().size();
+                            int size = message.getData() == null ? 0 : message.getData().size();
                             if (batchId == -1 || size == 0) {
                                 // try {
                                 // Thread.sleep(1000);

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/config/bind/PropertiesConfigurationFactory.java
Patch:
@@ -282,7 +282,7 @@ private Set<String> getNames(Iterable<String> prefixes) {
             PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors(this.target.getClass());
             for (PropertyDescriptor descriptor : descriptors) {
                 String name = descriptor.getName();
-                if (!name.equals("class")) {
+                if (!"class".equals(name)) {
                     RelaxedNames relaxedNames = RelaxedNames.forCamelCase(name);
                     if (prefixes == null) {
                         for (String relaxedName : relaxedNames) {

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java
Patch:
@@ -78,7 +78,7 @@ private static boolean isText(String columnType) {
 
     public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
-            || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
+            || ("".equals(value) && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
         }
 

File: client-adapter/escore/src/main/java/com/alibaba/otter/canal/client/adapter/es/core/service/ESSyncService.java
Patch:
@@ -95,11 +95,11 @@ public void sync(ESSyncConfig config, Dml dml) {
             long begin = System.currentTimeMillis();
 
             String type = dml.getType();
-            if (type != null && type.equalsIgnoreCase("INSERT")) {
+            if (type != null && "INSERT".equalsIgnoreCase(type)) {
                 insert(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
+            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
                 update(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
+            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
                 delete(config, dml);
             } else {
                 return;

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/config/MappingConfig.java
Patch:
@@ -312,7 +312,7 @@ public void setColumns(Map<String, String> columns) {
                         columnItem.setRowKey(true);
                         rowKeyColumn = columnItem;
                     } else {
-                        if (field == null || field.equals("")) {
+                        if (field == null || "".equals(field)) {
                             columnItem.setFamily(family);
                             columnItem.setQualifier(columnField.getKey());
                         } else {

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/service/HbaseSyncService.java
Patch:
@@ -31,11 +31,11 @@ public HbaseSyncService(HbaseTemplate hbaseTemplate){
     public void sync(MappingConfig config, Dml dml) {
         if (config != null) {
             String type = dml.getType();
-            if (type != null && type.equalsIgnoreCase("INSERT")) {
+            if (type != null && "INSERT".equalsIgnoreCase(type)) {
                 insert(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
+            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
                 update(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
+            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
                 delete(config, dml);
             }
             if (logger.isDebugEnabled()) {

File: client-adapter/kudu/src/main/java/com/alibaba/otter/canal/client/adapter/kudu/service/KuduSyncService.java
Patch:
@@ -47,11 +47,11 @@ public KuduSyncService(KuduTemplate kuduTemplate){
     public void sync(KuduMappingConfig config, Dml dml) {
         if (config != null) {
             String type = dml.getType();
-            if (type != null && type.equalsIgnoreCase("INSERT")) {
+            if (type != null && "INSERT".equalsIgnoreCase(type)) {
                 insert(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("UPDATE")) {
+            } else if (type != null && "UPDATE".equalsIgnoreCase(type)) {
                 upsert(config, dml);
-            } else if (type != null && type.equalsIgnoreCase("DELETE")) {
+            } else if (type != null && "DELETE".equalsIgnoreCase(type)) {
                 delete(config, dml);
             }
             if (logger.isDebugEnabled()) {

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/rest/CommonRest.java
Patch:
@@ -181,11 +181,11 @@ public List<Map<String, String>> destinations() {
      */
     @PutMapping("/syncSwitch/{destination}/{status}")
     public Result etl(@PathVariable String destination, @PathVariable String status) {
-        if (status.equals("on")) {
+        if ("on".equals(status)) {
             syncSwitch.on(destination);
             logger.info("#Destination: {} sync on", destination);
             return Result.createSuccess("实例: " + destination + " 开启同步成功");
-        } else if (status.equals("off")) {
+        } else if ("off".equals(status)) {
             syncSwitch.off(destination);
             logger.info("#Destination: {} sync off", destination);
             return Result.createSuccess("实例: " + destination + " 关闭同步成功");

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/support/SyncUtil.java
Patch:
@@ -71,7 +71,7 @@ public static void setPStmt(int type, PreparedStatement pstmt, Object value, int
                 if (value instanceof Boolean) {
                     pstmt.setBoolean(i, (Boolean) value);
                 } else if (value instanceof String) {
-                    boolean v = !value.equals("0");
+                    boolean v = !"0".equals(value);
                     pstmt.setBoolean(i, v);
                 } else if (value instanceof Number) {
                     boolean v = ((Number) value).intValue() != 0;

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/producer/MQMessageUtils.java
Patch:
@@ -49,7 +49,7 @@ public class MQMessageUtils {
                                                                                      int i = pkHashConfig.lastIndexOf(":");
                                                                                      if (i > 0) {
                                                                                          String pkStr = pkHashConfig.substring(i + 1);
-                                                                                         if (pkStr.equalsIgnoreCase("$pk$")) {
+                                                                                         if ("$pk$".equalsIgnoreCase(pkStr)) {
                                                                                              data.hashMode.autoPkHash = true;
                                                                                          } else {
                                                                                              data.hashMode.pkNames = Lists.newArrayList(StringUtils.split(pkStr,

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/util/JdbcTypeUtil.java
Patch:
@@ -78,7 +78,7 @@ private static boolean isText(String columnType) {
 
     public static Object typeConvert(String tableName, String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
-            || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
+            || ("".equals(value) && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
         }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -522,7 +522,7 @@ private void loadBinlogChecksum() {
             rs = query("select @@global.binlog_checksum");
             List<String> columnValues = rs.getFieldValues();
             if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0) != null
-                && columnValues.get(0).toUpperCase().equals("CRC32")) {
+                && "CRC32".equals(columnValues.get(0).toUpperCase())) {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
             } else {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/request/DescribeBackupPolicyRequest.java
Patch:
@@ -31,7 +31,7 @@ protected RdsBackupPolicy processResult(HttpResponse response) throws Exception
         JSONObject jsonObj = JSON.parseObject(result);
         RdsBackupPolicy policy = new RdsBackupPolicy();
         policy.setBackupRetentionPeriod(jsonObj.getString("BackupRetentionPeriod"));
-        policy.setBackupLog(jsonObj.getString("BackupLog").equalsIgnoreCase("Enable"));
+        policy.setBackupLog("Enable".equalsIgnoreCase(jsonObj.getString("BackupLog")));
         policy.setLogBackupRetentionPeriod(jsonObj.getIntValue("LogBackupRetentionPeriod"));
         policy.setPreferredBackupPeriod(jsonObj.getString("PreferredBackupPeriod"));
         policy.setPreferredBackupTime(jsonObj.getString("PreferredBackupTime"));

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -275,7 +275,7 @@ private Entry parseQueryEvent(QueryLogEvent event, boolean isSeek) {
 
             Header header = createHeader(event.getHeader(), schemaName, tableName, type);
             RowChange.Builder rowChangeBuider = RowChange.newBuilder();
-            if (type == EventType.QUERY && !isDml) {
+            if (type != EventType.QUERY && !isDml) {
                 rowChangeBuider.setIsDdl(true);
             }
             rowChangeBuider.setSql(queryString);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -275,7 +275,7 @@ private Entry parseQueryEvent(QueryLogEvent event, boolean isSeek) {
 
             Header header = createHeader(event.getHeader(), schemaName, tableName, type);
             RowChange.Builder rowChangeBuider = RowChange.newBuilder();
-            if (type != EventType.QUERY && !isDml) {
+            if (type == EventType.QUERY && !isDml) {
                 rowChangeBuider.setIsDdl(true);
             }
             rowChangeBuider.setSql(queryString);

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java
Patch:
@@ -167,7 +167,7 @@ private static Json_Value parse_scalar(int type, LogBuffer buffer, long len, Str
                 int type_byte = buffer.getUint8();
                 int position = buffer.position();
                 // Then there's the length of the value.
-                int q_max_bytes = (int) Math.min(len, 5);
+                int q_max_bytes = (int) Math.min(len - 1, 5);
                 long q_tlen = 0;
                 long q_str_len = 0;
                 long q_n = 0;

File: connector/core/src/main/java/com/alibaba/otter/canal/connector/core/producer/MQDestination.java
Patch:
@@ -7,6 +7,7 @@
  * @version 1.0.0
  */
 public class MQDestination {
+
     private String  canalDestination;
     private String  topic;
     private Integer partition;

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/client/QuitCommandPacket.java
Patch:
@@ -13,8 +13,6 @@
  */
 public class QuitCommandPacket extends CommandPacket {
 
-    public static final byte[] QUIT = new byte[] { 1, 0, 0, 0, 1 };
-
     public QuitCommandPacket(){
         setCommand((byte) 0x01);
     }
@@ -28,7 +26,6 @@ public void fromBytes(byte[] data) throws IOException {
     public byte[] toBytes() throws IOException {
         ByteArrayOutputStream out = new ByteArrayOutputStream();
         out.write(getCommand());
-        out.write(QUIT);
         return out.toByteArray();
     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -934,4 +934,7 @@ public void setRdsOssMode(boolean rdsOssMode) {
         this.rdsOssMode = rdsOssMode;
     }
 
+    public void setDumpErrorCount(int dumpErrorCount) {
+        this.dumpErrorCount = dumpErrorCount;
+    }
 }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -756,7 +756,7 @@ final Serializable fetchValue(String columnName, int columnIndex, int type, fina
                     }
 
                     int d = (int) ((intpart >> 12) % (1 << 10));
-                    if (d > 100) {
+                    if (d >= 100) {
                         builder.append(String.valueOf(d));
                     } else {
                         appendNumber2(builder, d);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -55,6 +55,7 @@ public class CanalConstants {
     public static final String CANAL_MQ_CANALBATCHSIZE              = ROOT + "." + "mq.canalBatchSize";
     public static final String CANAL_MQ_CANALGETTIMEOUT             = ROOT + "." + "mq.canalGetTimeout";
     public static final String CANAL_MQ_FLATMESSAGE                 = ROOT + "." + "mq.flatMessage";
+    public static final String CANAL_MQ_PARALLELTHREADSIZE          = ROOT + "." + "mq.parallelThreadSize";
     public static final String CANAL_MQ_COMPRESSION_TYPE            = ROOT + "." + "mq.compressionType";
     public static final String CANAL_MQ_ACKS                        = ROOT + "." + "mq.acks";
     public static final String CANAL_MQ_TRANSACTION                 = ROOT + "." + "mq.transaction";

File: server/src/main/java/com/alibaba/otter/canal/common/AbstractMQProducer.java
Patch:
@@ -4,6 +4,7 @@
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
+import com.alibaba.otter.canal.common.utils.NamedThreadFactory;
 import com.alibaba.otter.canal.spi.CanalMQProducer;
 
 /**
@@ -22,6 +23,7 @@ public void init(MQProperties mqProperties) {
             0,
             TimeUnit.SECONDS,
             new ArrayBlockingQueue<Runnable>(parallelThreadSize * 2),
+            new NamedThreadFactory("MQParallel"),
             new ThreadPoolExecutor.CallerRunsPolicy());
 
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -79,7 +79,8 @@ public boolean apply(EntryPosition position, String schema, String ddl, String e
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "revoke")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create user")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "alter user")
-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop user")) {
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop user")
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create database")) {
                     repository.console(ddl);
                 }
             } catch (Throwable e) {

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/support/ESConnection.java
Patch:
@@ -61,7 +61,8 @@ public ESConnection(String[] hosts, Map<String, String> properties, ESClientMode
         this.mode = mode;
         if (mode == ESClientMode.TRANSPORT) {
             Settings.Builder settingBuilder = Settings.builder();
-            properties.forEach(settingBuilder::put);
+            // properties.forEach(settingBuilder::put);
+            settingBuilder.put("cluster.name", properties.get("properties"));
             Settings settings = settingBuilder.build();
             transportClient = new PreBuiltTransportClient(settings);
             for (String host : hosts) {

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/model/CanalCluster.java
Patch:
@@ -1,6 +1,7 @@
 package com.alibaba.otter.canal.admin.model;
 
 import io.ebean.Finder;
+import io.ebean.annotation.WhenModified;
 
 import javax.persistence.Entity;
 import javax.persistence.Id;
@@ -34,6 +35,7 @@ public CanalClusterFinder(){
     private Long   id;
     private String name;
     private String zkHosts;
+    @WhenModified
     private Date   modifiedTime;
 
     public Long getId() {

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/model/CanalConfig.java
Patch:
@@ -1,6 +1,7 @@
 package com.alibaba.otter.canal.admin.model;
 
 import io.ebean.Finder;
+import io.ebean.annotation.WhenModified;
 
 import java.util.Date;
 
@@ -37,6 +38,7 @@ public CanalConfigFinder(){
     private String content;
     private String contentMd5;
     private String status;
+    @WhenModified
     private Date   modifiedTime;
 
     public void init() {

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/model/CanalInstanceConfig.java
Patch:
@@ -5,6 +5,7 @@
 import javax.persistence.*;
 
 import io.ebean.Finder;
+import io.ebean.annotation.WhenModified;
 
 /**
  * Canal实例配置信息实体类
@@ -44,6 +45,7 @@ public CanalInstanceConfigFinder(){
     private String       content;
     private String       contentMd5;
     private String       status;         // 1: 正常 0: 停止
+    @WhenModified
     private Date         modifiedTime;
 
     @Transient

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/model/NodeServer.java
Patch:
@@ -1,6 +1,7 @@
 package com.alibaba.otter.canal.admin.model;
 
 import io.ebean.Finder;
+import io.ebean.annotation.WhenModified;
 
 import java.util.Date;
 
@@ -42,6 +43,7 @@ public NodeServerFinder(){
     private Integer      metricPort;
     private Integer      tcpPort;
     private String       status;
+    @WhenModified
     private Date         modifiedTime;
 
     public void init() {

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/model/User.java
Patch:
@@ -1,6 +1,7 @@
 package com.alibaba.otter.canal.admin.model;
 
 import io.ebean.Finder;
+import io.ebean.annotation.WhenCreated;
 
 import javax.persistence.Entity;
 import javax.persistence.Id;
@@ -36,6 +37,7 @@ public UserFinder(){
     private String introduction;
     private String avatar;
     private String name;
+    @WhenCreated
     private Date   creationDate;
 
     @Transient

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -46,7 +46,7 @@ public static void main(String[] args) {
                 properties.load(new FileInputStream(conf));
             }
 
-            final CanalStater canalStater = new CanalStater(properties);
+            final CanalStarter canalStater = new CanalStarter(properties);
             String managerAddress = CanalController.getProperty(properties, CanalConstants.CANAL_ADMIN_MANAGER);
             if (StringUtils.isNotEmpty(managerAddress)) {
                 String user = CanalController.getProperty(properties, CanalConstants.CANAL_ADMIN_USER);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalStarter.java
Patch:
@@ -20,9 +20,9 @@
  * @author rewerma 2018-12-30 下午05:12:16
  * @version 1.0.1
  */
-public class CanalStater {
+public class CanalStarter {
 
-    private static final Logger logger          = LoggerFactory.getLogger(CanalStater.class);
+    private static final Logger logger          = LoggerFactory.getLogger(CanalStarter.class);
 
     private CanalController     controller      = null;
     private CanalMQProducer     canalMQProducer = null;
@@ -33,7 +33,7 @@ public class CanalStater {
 
     private CanalAdminWithNetty canalAdmin;
 
-    public CanalStater(Properties properties){
+    public CanalStarter(Properties properties){
         this.properties = properties;
     }
 

File: example/src/main/java/com/alibaba/otter/canal/example/ClusterCanalClientTest.java
Patch:
@@ -26,7 +26,7 @@ public static void main(String args[]) {
         // "stability_test", "", "");
 
         // 基于zookeeper动态获取canal server的地址，建立链接，其中一台server发生crash，可以支持failover
-        CanalConnector connector = CanalConnectors.newClusterConnector("127.0.0.1:2181", destination, "", "");
+        CanalConnector connector = CanalConnectors.newClusterConnector("127.0.0.1:2181", destination, "canal", "canal");
 
         final ClusterCanalClientTest clientTest = new ClusterCanalClientTest(destination);
         clientTest.setConnector(connector);

File: example/src/main/java/com/alibaba/otter/canal/example/SimpleCanalClientPermanceTest.java
Patch:
@@ -24,8 +24,8 @@ public static void main(String args[]) {
         try {
             final CanalConnector connector = CanalConnectors.newSingleConnector(new InetSocketAddress(ip, 11111),
                 destination,
-                "",
-                "");
+                "canal",
+                "canal");
 
             Thread ackThread = new Thread(new Runnable() {
 

File: example/src/main/java/com/alibaba/otter/canal/example/SimpleCanalClientTest.java
Patch:
@@ -24,8 +24,8 @@ public static void main(String args[]) {
         String ip = AddressUtils.getHostIp();
         CanalConnector connector = CanalConnectors.newSingleConnector(new InetSocketAddress(ip, 11111),
             destination,
-            "",
-            "");
+            "canal",
+            "canal");
 
         final SimpleCanalClientTest clientTest = new SimpleCanalClientTest(destination);
         clientTest.setConnector(connector);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -521,13 +521,14 @@ private void loadBinlogChecksum() {
         try {
             rs = query("select @@global.binlog_checksum");
             List<String> columnValues = rs.getFieldValues();
-            if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0) != null && columnValues.get(0).toUpperCase().equals("CRC32")) {
+            if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0) != null
+                && columnValues.get(0).toUpperCase().equals("CRC32")) {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
             } else {
                 binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;
             }
         } catch (Throwable e) {
-            logger.error("", e);
+            // logger.error("", e);
             binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;
         }
     }

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/controller/CanalClusterController.java
Patch:
@@ -11,15 +11,15 @@
 import com.alibaba.otter.canal.admin.model.BaseModel;
 import com.alibaba.otter.canal.admin.model.CanalCluster;
 import com.alibaba.otter.canal.admin.model.NodeServer;
-import com.alibaba.otter.canal.admin.service.CanalClusterServic;
+import com.alibaba.otter.canal.admin.service.CanalClusterService;
 import com.alibaba.otter.canal.admin.service.NodeServerService;
 
 @RestController
 @RequestMapping("/api/{env}/canal")
 public class CanalClusterController {
 
     @Autowired
-    CanalClusterServic canalClusterServic;
+    CanalClusterService canalClusterServic;
 
     @Autowired
     NodeServerService  nodeServerService;

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/service/CanalClusterService.java
Patch:
@@ -4,7 +4,7 @@
 
 import com.alibaba.otter.canal.admin.model.CanalCluster;
 
-public interface CanalClusterServic {
+public interface CanalClusterService {
 
     void save(CanalCluster canalCluster);
 

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/service/PollingConfigService.java
Patch:
@@ -3,7 +3,9 @@
 import com.alibaba.otter.canal.admin.model.CanalConfig;
 import com.alibaba.otter.canal.admin.model.CanalInstanceConfig;
 
-public interface PollingConfigServer {
+public interface PollingConfigService {
+
+    public boolean autoRegister(String ip, Integer adminPort, String cluster);
 
     CanalConfig getChangedConfig(String ip, Integer port, String md5);
 

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/service/impl/CanalClusterServiceImpl.java
Patch:
@@ -10,10 +10,10 @@
 import com.alibaba.otter.canal.admin.model.CanalCluster;
 import com.alibaba.otter.canal.admin.model.CanalInstanceConfig;
 import com.alibaba.otter.canal.admin.model.NodeServer;
-import com.alibaba.otter.canal.admin.service.CanalClusterServic;
+import com.alibaba.otter.canal.admin.service.CanalClusterService;
 
 @Service
-public class CanalClusterServiceImpl implements CanalClusterServic {
+public class CanalClusterServiceImpl implements CanalClusterService {
 
     public void save(CanalCluster canalCluster) {
         canalCluster.save();

File: common/src/main/java/com/alibaba/otter/canal/common/zookeeper/running/ServerRunningMonitor.java
Patch:
@@ -111,11 +111,13 @@ public synchronized void start() {
 
     }
 
-    public void release() {
+    public boolean release() {
         if (zkClient != null) {
             releaseRunning(); // 尝试一下release
+            return true;
         } else {
             processActiveExit(); // 没有zk，直接退出
+            return false;
         }
     }
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -23,8 +23,8 @@ public class CanalConstants {
     public static final String CANAL_ADMIN_PORT                     = ROOT + "." + "admin.port";
     public static final String CANAL_ADMIN_USER                     = ROOT + "." + "admin.user";
     public static final String CANAL_ADMIN_PASSWD                   = ROOT + "." + "admin.passwd";
-    public static final String CANAL_ADMIN_AUTO_REGISTER            = ROOT + "." + "admin.auto.register";
-    public static final String CANAL_ADMIN_AUTO_CLUSTER             = ROOT + "." + "admin.auto.cluster";
+    public static final String CANAL_ADMIN_AUTO_REGISTER            = ROOT + "." + "admin.register.auto";
+    public static final String CANAL_ADMIN_AUTO_CLUSTER             = ROOT + "." + "admin.register.cluster";
     public static final String CANAL_ZKSERVERS                      = ROOT + "." + "zkServers";
     public static final String CANAL_WITHOUT_NETTY                  = ROOT + "." + "withoutNetty";
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -104,7 +104,6 @@ public PlainCanalConfigClient apply(String managerAddress) {
         }
 
         // 准备canal server
-        cid = Long.valueOf(getProperty(properties, CanalConstants.CANAL_ID));
         ip = getProperty(properties, CanalConstants.CANAL_IP);
         registerIp = getProperty(properties, CanalConstants.CANAL_REGISTER_IP);
         port = Integer.valueOf(getProperty(properties, CanalConstants.CANAL_PORT));

File: common/src/test/java/com/alibaba/otter/canal/common/ServerRunningTest.java
Patch:
@@ -111,8 +111,7 @@ public void run() {
         sleep(30000L);
     }
 
-    private ServerRunningMonitor buildServerRunning(final CountDownLatch countLatch, final final String ip,
-                                                    final int port) {
+    private ServerRunningMonitor buildServerRunning(final CountDownLatch countLatch, final String ip, final int port) {
         ServerRunningData serverData = new ServerRunningData(ip + ":" + port);
         ServerRunningMonitor runningMonitor = new ServerRunningMonitor(serverData);
         runningMonitor.setDestination(destination);

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/controller/CanalInstanceController.java
Patch:
@@ -162,6 +162,6 @@ public BaseModel<Map<String, String>> instanceLog(@PathVariable Long id, @PathVa
      */
     @GetMapping(value = "/active/instances/{serverId}")
     public BaseModel<List<CanalInstanceConfig>> activeInstances(@PathVariable Long serverId, @PathVariable String env) {
-        return BaseModel.getInstance(canalInstanceConfigService.findActiveInstanceByServerId(serverId));
+        return BaseModel.getInstance(canalInstanceConfigService.findActiveInstaceByServerId(serverId));
     }
 }

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/service/CanalInstanceService.java
Patch:
@@ -20,6 +20,8 @@ public interface CanalInstanceService {
 
     CanalInstanceConfig detail(Long id);
 
+    CanalInstanceConfig findOne(String name);
+
     void updateContent(CanalInstanceConfig canalInstanceConfig);
 
     void delete(Long id);
@@ -30,5 +32,5 @@ public interface CanalInstanceService {
 
     boolean instanceOperation(Long id, String option);
 
-    List<CanalInstanceConfig> findActiveInstanceByServerId(Long serverId);
+    List<CanalInstanceConfig> findActiveInstaceByServerId(Long serverId);
 }

File: common/src/main/java/com/alibaba/otter/canal/common/zookeeper/running/ServerRunningData.java
Patch:
@@ -16,15 +16,15 @@ public class ServerRunningData implements Serializable {
 
     private static final long serialVersionUID = 92260481691855281L;
 
+    @Deprecated
     private Long              cid;
     private String            address;
     private boolean           active           = true;
 
     public ServerRunningData(){
     }
 
-    public ServerRunningData(Long cid, String address){
-        this.cid = cid;
+    public ServerRunningData(String address){
         this.address = address;
     }
 

File: server/src/main/java/com/alibaba/otter/canal/server/CanalMQStarter.java
Patch:
@@ -42,7 +42,7 @@ public CanalMQStarter(CanalMQProducer canalMQProducer){
         this.canalMQProducer = canalMQProducer;
     }
 
-    public synchronized void start(MQProperties properties) {
+    public synchronized void start(MQProperties properties, String destinations) {
         try {
             if (running) {
                 return;
@@ -60,8 +60,8 @@ public synchronized void start(MQProperties properties) {
             executorService = Executors.newCachedThreadPool();
             logger.info("## start the MQ workers.");
 
-            String[] destinations = StringUtils.split(System.getProperty("canal.destinations"), ",");
-            for (String destination : destinations) {
+            String[] dsts = StringUtils.split(destinations, ",");
+            for (String destination : dsts) {
                 destination = destination.trim();
                 CanalMQRunnable canalMQRunnable = new CanalMQRunnable(destination);
                 canalMQWorks.put(destination, canalMQRunnable);

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/controller/CanalInstanceController.java
Patch:
@@ -162,6 +162,6 @@ public BaseModel<Map<String, String>> instanceLog(@PathVariable Long id, @PathVa
      */
     @GetMapping(value = "/active/instances/{serverId}")
     public BaseModel<List<CanalInstanceConfig>> activeInstances(@PathVariable Long serverId, @PathVariable String env) {
-        return BaseModel.getInstance(canalInstanceConfigService.findActiveInstaceByServerId(serverId));
+        return BaseModel.getInstance(canalInstanceConfigService.findActiveInstanceByServerId(serverId));
     }
 }

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/service/CanalInstanceService.java
Patch:
@@ -20,8 +20,6 @@ public interface CanalInstanceService {
 
     CanalInstanceConfig detail(Long id);
 
-    CanalInstanceConfig findOne(String name);
-
     void updateContent(CanalInstanceConfig canalInstanceConfig);
 
     void delete(Long id);
@@ -32,5 +30,5 @@ public interface CanalInstanceService {
 
     boolean instanceOperation(Long id, String option);
 
-    List<CanalInstanceConfig> findActiveInstaceByServerId(Long serverId);
+    List<CanalInstanceConfig> findActiveInstanceByServerId(Long serverId);
 }

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/controller/CanalInstanceController.java
Patch:
@@ -38,8 +38,7 @@ public class CanalInstanceController {
      * @return 实例列表
      */
     @GetMapping(value = "/instances")
-    public BaseModel<List<CanalInstanceConfig>> nodeServers(CanalInstanceConfig canalInstanceConfig,
-                                                            @PathVariable String env) {
+    public BaseModel<List<CanalInstanceConfig>> list(CanalInstanceConfig canalInstanceConfig, @PathVariable String env) {
         return BaseModel.getInstance(canalInstanceConfigService.findList(canalInstanceConfig));
     }
 

File: canal-admin/canal-admin-server/src/test/java/com/alibaba/otter/canal/admin/SimpleAdminConnectorTest.java
Patch:
@@ -1,9 +1,11 @@
 package com.alibaba.otter.canal.admin;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 import com.alibaba.otter.canal.admin.connector.SimpleAdminConnector;
 
+@Ignore
 public class SimpleAdminConnectorTest {
 
     @Test

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/plain/PlainCanalConfigClient.java
Patch:
@@ -53,7 +53,7 @@ public PlainCanal findServer(String md5) {
         if (StringUtils.isEmpty(md5)) {
             md5 = "";
         }
-        String url = configURL + "/api/v1/config/server_poll?md5=" + md5;
+        String url = configURL + "/api/v1/config/server_polling?md5=" + md5;
         return queryConfig(url);
     }
 
@@ -64,7 +64,7 @@ public PlainCanal findInstance(String destination, String md5) {
         if (StringUtils.isEmpty(md5)) {
             md5 = "";
         }
-        String url = configURL + "/api/v1/config/instance_poll/" + destination + "?md5=" + md5;
+        String url = configURL + "/api/v1/config/instance_polling/" + destination + "?md5=" + md5;
         return queryConfig(url);
     }
 
@@ -75,7 +75,7 @@ public String findInstances(String ip, String port, String md5) {
         if (StringUtils.isEmpty(md5)) {
             md5 = "";
         }
-        String url = configURL + "/api/v1/config/instances_poll?md5=" + md5 + "&ip=" + ip + "&port=" + port;
+        String url = configURL + "/api/v1/config/instances_polling?md5=" + md5 + "&ip=" + ip + "&port=" + port;
         ResponseModel<CanalConfig> config = doQuery(url);
         if (config.data != null) {
             return config.data.content;

File: canal-admin/canal-admin-server/src/main/java/com/alibaba/otter/canal/admin/config/WebConfig.java
Patch:
@@ -74,8 +74,8 @@ public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletRespo
                         httpServletResponse.setContentType("application/json;charset=UTF-8");
                         PrintWriter out = httpServletResponse.getWriter();
                         out.print(json);
-                    } catch (Exception e) {
-                        e.printStackTrace();
+                    } catch (Throwable e) {
+                        throw new RuntimeException(e);
                     }
                     return false;
                 }
@@ -84,6 +84,7 @@ public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletRespo
             }
         })
             .addPathPatterns("/api/**")
+            .excludePathPatterns("/api/**/config/**")
             .excludePathPatterns("/api/**/user/login")
             .excludePathPatterns("/api/**/user/logout")
             .excludePathPatterns("/api/**/user/info");

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -19,6 +19,7 @@ public class CanalConstants {
     public static final String CANAL_USER                           = ROOT + "." + "user";
     public static final String CANAL_PASSWD                         = ROOT + "." + "passwd";
     public static final String CANAL_METRICS_PULL_PORT              = ROOT + "." + "metrics.pull.port";
+    public static final String CANAL_ADMIN_MANAGER                  = ROOT + "." + "admin.manager";
     public static final String CANAL_ADMIN_PORT                     = ROOT + "." + "admin.port";
     public static final String CANAL_ADMIN_USER                     = ROOT + "." + "admin.user";
     public static final String CANAL_ADMIN_PASSWD                   = ROOT + "." + "admin.passwd";

File: common/src/main/java/com/alibaba/otter/canal/common/zookeeper/running/ServerRunningMonitor.java
Patch:
@@ -148,6 +148,7 @@ private void initRunning() {
             activeData = serverData;
             processActiveEnter();// 触发一下事件
             mutex.set(true);
+            release = false;
         } catch (ZkNodeExistsException e) {
             bytes = zkClient.readData(path, true);
             if (bytes == null) {// 如果不存在节点，立即尝试一次

File: driver/src/test/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnectorTest.java
Patch:
@@ -4,11 +4,10 @@
 import java.net.InetSocketAddress;
 
 import org.junit.Assert;
-import org.junit.Ignore;
 import org.junit.Test;
 
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket;
-@Ignore
+
 public class MysqlConnectorTest {
 
     @Test

File: server/src/main/java/com/alibaba/otter/canal/common/CanalMessageSerializer.java
Patch:
@@ -9,6 +9,7 @@
 import com.alibaba.otter.canal.protocol.CanalPacket;
 import com.alibaba.otter.canal.protocol.CanalPacket.PacketType;
 import com.alibaba.otter.canal.protocol.Message;
+import com.alibaba.otter.canal.server.netty.NettyUtils;
 import com.google.protobuf.ByteString;
 import com.google.protobuf.CodedOutputStream;
 import com.google.protobuf.WireFormat;
@@ -66,6 +67,7 @@ public static byte[] serializer(Message data, boolean filterTransactionEntry) {
 
                         CanalPacket.Packet.Builder packetBuilder = CanalPacket.Packet.newBuilder();
                         packetBuilder.setType(PacketType.MESSAGES);
+                        packetBuilder.setVersion(NettyUtils.VERSION);
                         packetBuilder.setBody(messageBuilder.build().toByteString());
                         return packetBuilder.build().toByteArray();
                     }

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AbstractCanalAdapterWorker.java
Patch:
@@ -6,7 +6,6 @@
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 
-import com.alibaba.fastjson.JSON;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -152,8 +151,9 @@ protected boolean mqWriteOutData(int retry, long timeout, int i, final boolean f
                     if (flatMessage) {
                         // batch write
                         writeOut((List<FlatMessage>) messages);
-                        //FIXME xxx
-                        messages.forEach((message -> System.out.println(JSON.toJSONString(message))));
+                        // FIXME xxx
+                        // messages.forEach((message ->
+                        // System.out.println(JSON.toJSONString(message))));
                     } else {
                         for (final Object message : messages) {
                             writeOut((Message) message);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -14,6 +14,7 @@ public class CanalConstants {
     public static final String ROOT                                 = "canal";
     public static final String CANAL_ID                             = ROOT + "." + "id";
     public static final String CANAL_IP                             = ROOT + "." + "ip";
+    public static final String CANAL_REGISTER_IP                    = ROOT + "." + "register.ip";
     public static final String CANAL_PORT                           = ROOT + "." + "port";
     public static final String CANAL_METRICS_PULL_PORT              = ROOT + "." + "metrics.pull.port";
     public static final String CANAL_ADMIN_JMX_PORT                 = ROOT + "." + "admin.jmx.port";

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java
Patch:
@@ -317,7 +317,7 @@ public StringBuilder toJsonString(StringBuilder buf, String charsetName) {
                     buf.append("true");
                     break;
                 case LITERAL_NULL:
-                    buf.append("NULL");
+                    buf.append("null");
                     break;
                 case OPAQUE:
                     String text = null;

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -177,6 +177,7 @@ private void send(MQProperties.CanalDestination canalDestination, String topicNa
 
                     // 每条记录需要flush
                     produce(topicName, records, true);
+                    records.clear();
                 }
             }
         }

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/service/HbaseEtlService.java
Patch:
@@ -79,7 +79,7 @@ public EtlResult importData(List<String> params) {
             createTable();
 
             // 拼接sql
-            String sql = "SELECT * FROM " + config.getHbaseMapping().getDatabase() + "." + hbaseMapping.getTable();
+            String sql = "SELECT * FROM `" + config.getHbaseMapping().getDatabase() + "`.`" + hbaseMapping.getTable() + "`";
 
             return super.importData(sql, params);
         } catch (Exception e) {

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/support/ESTemplate.java
Patch:
@@ -210,16 +210,16 @@ public void commit() {
                     }
                 }
             }
+            resetBulkRequestBuilder();
         }
     }
 
     /**
-     * 如果大于批量数则提交批次, 调用后es bulk请求后，numberOfActions不会清理，需要主动调用函数清0，否则不能起到批量请求的效果
+     * 如果大于批量数则提交批次
      */
     private void commitBulk() {
         if (getBulk().numberOfActions() >= MAX_BATCH_SIZE) {
             commit();
-            resetBulkRequestBuilder();
         }
     }
 

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/support/ESTemplate.java
Patch:
@@ -210,16 +210,16 @@ public void commit() {
                     }
                 }
             }
+            resetBulkRequestBuilder();
         }
     }
 
     /**
-     * 如果大于批量数则提交批次, 调用后es bulk请求后，numberOfActions不会清理，需要主动调用函数清0，否则不能起到批量请求的效果
+     * 如果大于批量数则提交批次
      */
     private void commitBulk() {
         if (getBulk().numberOfActions() >= MAX_BATCH_SIZE) {
             commit();
-            resetBulkRequestBuilder();
         }
     }
 

File: server/src/main/java/com/alibaba/otter/canal/server/CanalMQStarter.java
Patch:
@@ -10,6 +10,7 @@
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.slf4j.MDC;
 
 import com.alibaba.otter.canal.common.MQProperties;
 import com.alibaba.otter.canal.instance.core.CanalInstance;
@@ -137,7 +138,7 @@ private void worker(String destination, AtomicBoolean destinationRunning) {
         }
 
         logger.info("## start the MQ producer: {}.", destination);
-
+        MDC.put("destination", destination);
         final ClientIdentity clientIdentity = new ClientIdentity(destination, (short) 1001, "");
         while (running && destinationRunning.get()) {
             try {

File: server/src/main/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded.java
Patch:
@@ -432,8 +432,7 @@ public void ack(ClientIdentity clientIdentity, long batchId) throws CanalServerE
         }
 
         // 可定时清理数据
-        canalInstance.getEventStore().ack(positionRanges.getEnd());
-
+        canalInstance.getEventStore().ack(positionRanges.getEnd(), positionRanges.getEndSeq());
     }
 
     /**

File: store/src/test/java/com/alibaba/otter/cancel/store/memory/buffer/MemoryEventStoreMemBatchTest.java
Patch:
@@ -300,10 +300,11 @@ public void testAck() {
         first = eventStore.getFirstPosition();
         lastest = eventStore.getLatestPosition();
         List<Event> entrys = new ArrayList<Event>(entrys2.getEvents());
-        Assert.assertEquals(first, entrys2.getPositionRange().getStart());
+        // Assert.assertEquals(first, entrys2.getPositionRange().getStart());
         Assert.assertEquals(lastest, entrys2.getPositionRange().getEnd());
 
-        Assert.assertEquals(first, CanalEventUtils.createPosition(entrys.get(0)));
+        // Assert.assertEquals(first,
+        // CanalEventUtils.createPosition(entrys.get(0)));
         Assert.assertEquals(lastest, CanalEventUtils.createPosition(entrys.get(entrys.size() - 1)));
 
         // 全部ack掉

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbSyncService.java
Patch:
@@ -272,7 +272,7 @@ private void insert(BatchExecutor batchExecutor, MappingConfig config, SingleDml
             batchExecutor.execute(insertSql.toString(), values);
         } catch (SQLException e) {
             if (skipDupException
-                && (e.getMessage().contains("Duplicate entry") || e.getMessage().startsWith("ORA-00001: 违反唯一约束条件"))) {
+                && (e.getMessage().contains("Duplicate entry") || e.getMessage().startsWith("ORA-00001:"))) {
                 // ignore
                 // TODO 增加更多关系数据库的主键冲突的错误码
             } else {

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -473,6 +473,7 @@ public static FlatMessage[] messagePartition(FlatMessage flatMessage, Integer pa
                             flatMessageTmp.setMysqlType(flatMessage.getMysqlType());
                             flatMessageTmp.setEs(flatMessage.getEs());
                             flatMessageTmp.setTs(flatMessage.getTs());
+                            flatMessageTmp.setPkNames(flatMessage.getPkNames());
                         }
                         List<Map<String, String>> data = flatMessageTmp.getData();
                         if (data == null) {

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESSyncService.java
Patch:
@@ -436,7 +436,7 @@ private void singleTableSimpleFiledInsert(ESSyncConfig config, Dml dml, Map<Stri
         Object idVal = esTemplate.getESDataFromDmlData(mapping, data, esFieldData);
 
         if (logger.isTraceEnabled()) {
-            logger.trace("Single table insert ot es index, destination:{}, table: {}, index: {}, id: {}",
+            logger.trace("Single table insert to es index, destination:{}, table: {}, index: {}, id: {}",
                 config.getDestination(),
                 dml.getTable(),
                 mapping.get_index(),

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -203,7 +203,7 @@ private void produce(String topicName, int partition, FlatMessage flatMessage) t
             null,
             JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
         if (kafkaProperties.getTransaction()) {
-            producer2.send(record).get();
+            producer2.send(record);
         } else {
             producer2.send(record).get();
         }

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/support/ESSyncUtil.java
Patch:
@@ -209,7 +209,7 @@ public static Object typeConvert(Object val, String esType) {
                     if (value.contains(";")) {
                         separator = ";";
                     } else if (value.contains("|")) {
-                        separator = "|";
+                        separator = "\\|";
                     } else if (value.contains("-")) {
                         separator = "-";
                     }

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -203,9 +203,9 @@ private void produce(String topicName, int partition, FlatMessage flatMessage) t
             null,
             JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
         if (kafkaProperties.getTransaction()) {
-            producer2.send(record);
+            producer2.send(record).get();
         } else {
-            producer2.send(record);
+            producer2.send(record).get();
         }
     }
 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -37,7 +37,7 @@ public class MysqlConnector {
     private String              password;
 
     private byte                charsetNumber     = 33;
-    private String              defaultSchema     = "test";
+    private String              defaultSchema;
     private int                 soTimeout         = 30 * 1000;
     private int                 connTimeout       = 5 * 1000;
     private int                 receiveBufferSize = 16 * 1024;
@@ -187,7 +187,7 @@ private void negotiate(SocketChannel channel) throws IOException {
         clientAuth.setServerCapabilities(handshakePacket.serverCapabilities);
         clientAuth.setDatabaseName(defaultSchema);
         clientAuth.setScrumbleBuff(joinAndCreateScrumbleBuff(handshakePacket));
-        clientAuth.setAuthPluginName(handshakePacket.authPluginName);
+        clientAuth.setAuthPluginName("mysql_native_password".getBytes());
 
         byte[] clientAuthPkgBody = clientAuth.toBytes();
         HeaderPacket h = new HeaderPacket();

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/client/ClientAuthenticationPacket.java
Patch:
@@ -17,7 +17,7 @@ public class ClientAuthenticationPacket extends PacketWithHeaderPacket {
     private int    clientCapability = Capability.CLIENT_LONG_PASSWORD | Capability.CLIENT_LONG_FLAG
                                       | Capability.CLIENT_PROTOCOL_41 | Capability.CLIENT_INTERACTIVE
                                       | Capability.CLIENT_TRANSACTIONS | Capability.CLIENT_SECURE_CONNECTION
-                                      | Capability.CLIENT_MULTI_STATEMENTS;
+                                      | Capability.CLIENT_MULTI_STATEMENTS | Capability.CLIENT_PLUGIN_AUTH;
     private String username;
     private String password;
     private byte   charsetNumber;

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -221,7 +221,7 @@ public static Message[] messagePartition(Message message, Integer partitionsNum,
                         partitionEntries[pkHash].add(entry);
                     } else {
                         for (CanalEntry.RowData rowData : rowChange.getRowDatasList()) {
-                            int hashCode = table.hashCode();
+                            int hashCode = database.hashCode();
                             if (hashMode.autoPkHash) {
                                 // isEmpty use default pkNames
                                 for (CanalEntry.Column column : rowData.getAfterColumnsList()) {
@@ -230,7 +230,6 @@ public static Message[] messagePartition(Message message, Integer partitionsNum,
                                     }
                                 }
                             } else {
-                            	hashCode = database.hashCode();
                                 for (CanalEntry.Column column : rowData.getAfterColumnsList()) {
                                     if (checkPkNamesHasContain(hashMode.pkNames, column.getName())) {
                                         hashCode = hashCode ^ column.getValue().hashCode();
@@ -438,7 +437,7 @@ public static FlatMessage[] messagePartition(FlatMessage flatMessage, Integer pa
 
                     int idx = 0;
                     for (Map<String, String> row : flatMessage.getData()) {
-                        int hashCode = table.hashCode();
+                        int hashCode = database.hashCode();
                         for (String pkName : pkNames) {
                             String value = row.get(pkName);
                             if (value == null) {

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESSyncService.java
Patch:
@@ -7,7 +7,6 @@
 
 import javax.sql.DataSource;
 
-import com.alibaba.otter.canal.client.adapter.support.Util;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -23,6 +22,7 @@
 import com.alibaba.otter.canal.client.adapter.es.support.ESTemplate;
 import com.alibaba.otter.canal.client.adapter.support.DatasourceConfig;
 import com.alibaba.otter.canal.client.adapter.support.Dml;
+import com.alibaba.otter.canal.client.adapter.support.Util;
 
 /**
  * ES 同步 Service

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -77,9 +77,7 @@ public boolean apply(EntryPosition position, String schema, String ddl, String e
                 if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "flush")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "grant")
                     && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create user")
-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop user")
-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "create database")
-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop database")) {
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "drop user")) {
                     repository.console(ddl);
                 }
             } catch (Throwable e) {

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -509,7 +509,7 @@ public static HashMode getPartitionHashColumns(String name, String pkHashConfigs
     }
 
     private static Set<String> matchTopics(String name, String dynamicTopicConfigs) {
-        String[] router = StringUtils.split(dynamicTopicConfigs, ';');
+        String[] router = StringUtils.split(dynamicTopicConfigs, ',');
         Set<String> topics = new HashSet<>();
         for (String item : router) {
             int i = item.indexOf(":");

File: server/src/main/java/com/alibaba/otter/canal/server/CanalMQStarter.java
Patch:
@@ -53,9 +53,6 @@ public synchronized void start(MQProperties properties) {
                 System.setProperty("canal.instance.filter.transaction.entry", "true");
             }
 
-            // 设置为raw避免ByteString->Entry的二次解析
-            System.setProperty("canal.instance.memory.rawEntry", "false");
-
             canalServer = CanalServerWithEmbedded.instance();
 
             // 对应每个instance启动一个worker线程

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/ESAdapter.java
Patch:
@@ -30,6 +30,7 @@
 import com.alibaba.otter.canal.client.adapter.es.service.ESSyncService;
 import com.alibaba.otter.canal.client.adapter.es.support.ESTemplate;
 import com.alibaba.otter.canal.client.adapter.support.*;
+import org.slf4j.MDC;
 
 /**
  * ES外部适配器
@@ -70,6 +71,7 @@ public Map<String, Map<String, ESSyncConfig>> getDbTableEsSyncConfig() {
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
         try {
+            MDC.put("adapter", "es");
             this.envProperties = envProperties;
             Map<String, ESSyncConfig> esSyncConfigTmp = ESSyncConfigLoader.load(envProperties);
             // 过滤不匹配的key的配置
@@ -239,6 +241,7 @@ public void destroy() {
         if (transportClient != null) {
             transportClient.close();
         }
+        MDC.remove("adapter");
     }
 
     @Override

File: client-adapter/elasticsearch/src/test/java/com/alibaba/otter/canal/client/adapter/es/test/SqlParseTest.java
Patch:
@@ -15,7 +15,8 @@ public class SqlParseTest {
 
     @Test
     public void parseTest() {
-        String sql = "select a.id, concat(a.name,'_test') as name, a.role_id, b.name as role_name, c.labels from user a "
+        String sql = "select a.id, CASE WHEN a.id <= 500 THEN '1' else '2' end as id2, "
+                     + "concat(a.name,'_test') as name, a.role_id, b.name as role_name, c.labels from user a "
                      + "left join role b on a.role_id=b.id "
                      + "left join (select user_id, group_concat(label,',') as labels from user_label "
                      + "group by user_id) c on c.user_id=a.id";

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.otter.canal.client.adapter.hbase.service.HbaseSyncService;
 import com.alibaba.otter.canal.client.adapter.hbase.support.HbaseTemplate;
 import com.alibaba.otter.canal.client.adapter.support.*;
+import org.slf4j.MDC;
 
 /**
  * HBase外部适配器
@@ -59,6 +60,7 @@ public Map<String, Map<String, MappingConfig>> getMappingConfigCache() {
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
         try {
+            MDC.put("adapter", "hbase");
             this.envProperties = envProperties;
             Map<String, MappingConfig> hbaseMappingTmp = MappingConfigLoader.load(envProperties);
             // 过滤不匹配的key的配置
@@ -222,6 +224,7 @@ public void destroy() {
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
+        MDC.remove("adapter");
     }
 
     @Override

File: client-adapter/logger/src/main/java/com/alibaba/otter/canal/client/adapter/logger/LoggerAdapterExample.java
Patch:
@@ -5,6 +5,7 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.slf4j.MDC;
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.serializer.SerializerFeature;
@@ -27,7 +28,7 @@ public class LoggerAdapterExample implements OuterAdapter {
 
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
-
+        MDC.put("adapter", "logger");
     }
 
     public void sync(List<Dml> dmls) {
@@ -42,6 +43,6 @@ public void sync(Dml dml) {
 
     @Override
     public void destroy() {
-
+        MDC.remove("adapter");
     }
 }

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/RdbAdapter.java
Patch:
@@ -14,6 +14,7 @@
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.slf4j.MDC;
 
 import com.alibaba.druid.pool.DruidDataSource;
 import com.alibaba.otter.canal.client.adapter.OuterAdapter;
@@ -75,6 +76,7 @@ public Map<String, MirrorDbConfig> getMirrorDbConfigCache() {
      */
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
+        MDC.put("adapter", "rdb");
         this.envProperties = envProperties;
         Map<String, MappingConfig> rdbMappingTmp = ConfigLoader.load(envProperties);
         // 过滤不匹配的key的配置
@@ -302,5 +304,6 @@ public void destroy() {
         if (dataSource != null) {
             dataSource.close();
         }
+        MDC.remove("adapter");
     }
 }

File: client/src/main/java/com/alibaba/otter/canal/client/rocketmq/RocketMQCanalConnector.java
Patch:
@@ -12,7 +12,6 @@
 import org.apache.rocketmq.client.consumer.listener.MessageListenerOrderly;
 import org.apache.rocketmq.client.consumer.rebalance.AllocateMessageQueueAveragely;
 import org.apache.rocketmq.client.exception.MQClientException;
-import org.apache.rocketmq.common.consumer.ConsumeFromWhere;
 import org.apache.rocketmq.common.message.MessageExt;
 import org.apache.rocketmq.remoting.RPCHook;
 import org.slf4j.Logger;
@@ -84,7 +83,6 @@ public void connect() throws CanalClientException {
         }
         rocketMQConsumer = new DefaultMQPushConsumer(groupName, rpcHook, new AllocateMessageQueueAveragely());
         rocketMQConsumer.setVipChannelEnabled(false);
-        rocketMQConsumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_LAST_OFFSET);
         if (!StringUtils.isBlank(nameServer)) {
             rocketMQConsumer.setNamesrvAddr(nameServer);
         }

File: client/src/main/java/com/alibaba/otter/canal/client/rocketmq/RocketMQCanalConnector.java
Patch:
@@ -12,6 +12,7 @@
 import org.apache.rocketmq.client.consumer.listener.MessageListenerOrderly;
 import org.apache.rocketmq.client.consumer.rebalance.AllocateMessageQueueAveragely;
 import org.apache.rocketmq.client.exception.MQClientException;
+import org.apache.rocketmq.common.consumer.ConsumeFromWhere;
 import org.apache.rocketmq.common.message.MessageExt;
 import org.apache.rocketmq.remoting.RPCHook;
 import org.slf4j.Logger;
@@ -83,6 +84,7 @@ public void connect() throws CanalClientException {
         }
         rocketMQConsumer = new DefaultMQPushConsumer(groupName, rpcHook, new AllocateMessageQueueAveragely());
         rocketMQConsumer.setVipChannelEnabled(false);
+        rocketMQConsumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_LAST_OFFSET);
         if (!StringUtils.isBlank(nameServer)) {
             rocketMQConsumer.setNamesrvAddr(nameServer);
         }

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -126,7 +126,7 @@ public void send(MQProperties.CanalDestination canalDestination, Message message
                 producerTmp.commitTransaction();
             }
             callback.commit();
-        } catch (Exception e) {
+        } catch (Throwable e) {
             logger.error(e.getMessage(), e);
             if (kafkaProperties.getTransaction()) {
                 producerTmp.abortTransaction();

File: server/src/main/java/com/alibaba/otter/canal/rocketmq/CanalRocketMQProducer.java
Patch:
@@ -75,7 +75,7 @@ public void send(final MQProperties.CanalDestination destination, com.alibaba.ot
                 send(destination, destination.getTopic(), data);
             }
             callback.commit();
-        } catch (Exception e) {
+        } catch (Throwable e) {
             callback.rollback();
         }
     }

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/ESAdapter.java
Patch:
@@ -30,6 +30,7 @@
 import com.alibaba.otter.canal.client.adapter.es.service.ESSyncService;
 import com.alibaba.otter.canal.client.adapter.es.support.ESTemplate;
 import com.alibaba.otter.canal.client.adapter.support.*;
+import org.slf4j.MDC;
 
 /**
  * ES外部适配器
@@ -70,6 +71,7 @@ public Map<String, Map<String, ESSyncConfig>> getDbTableEsSyncConfig() {
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
         try {
+            MDC.put("adapter", "es");
             this.envProperties = envProperties;
             Map<String, ESSyncConfig> esSyncConfigTmp = ESSyncConfigLoader.load(envProperties);
             // 过滤不匹配的key的配置
@@ -239,6 +241,7 @@ public void destroy() {
         if (transportClient != null) {
             transportClient.close();
         }
+        MDC.remove("adapter");
     }
 
     @Override

File: client-adapter/elasticsearch/src/test/java/com/alibaba/otter/canal/client/adapter/es/test/SqlParseTest.java
Patch:
@@ -15,7 +15,8 @@ public class SqlParseTest {
 
     @Test
     public void parseTest() {
-        String sql = "select a.id, concat(a.name,'_test') as name, a.role_id, b.name as role_name, c.labels from user a "
+        String sql = "select a.id, CASE WHEN a.id <= 500 THEN '1' else '2' end as id2, "
+                     + "concat(a.name,'_test') as name, a.role_id, b.name as role_name, c.labels from user a "
                      + "left join role b on a.role_id=b.id "
                      + "left join (select user_id, group_concat(label,',') as labels from user_label "
                      + "group by user_id) c on c.user_id=a.id";

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.otter.canal.client.adapter.hbase.service.HbaseSyncService;
 import com.alibaba.otter.canal.client.adapter.hbase.support.HbaseTemplate;
 import com.alibaba.otter.canal.client.adapter.support.*;
+import org.slf4j.MDC;
 
 /**
  * HBase外部适配器
@@ -59,6 +60,7 @@ public Map<String, Map<String, MappingConfig>> getMappingConfigCache() {
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
         try {
+            MDC.put("adapter", "hbase");
             this.envProperties = envProperties;
             Map<String, MappingConfig> hbaseMappingTmp = MappingConfigLoader.load(envProperties);
             // 过滤不匹配的key的配置
@@ -222,6 +224,7 @@ public void destroy() {
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
+        MDC.remove("adapter");
     }
 
     @Override

File: client-adapter/logger/src/main/java/com/alibaba/otter/canal/client/adapter/logger/LoggerAdapterExample.java
Patch:
@@ -5,6 +5,7 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.slf4j.MDC;
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.serializer.SerializerFeature;
@@ -27,7 +28,7 @@ public class LoggerAdapterExample implements OuterAdapter {
 
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
-
+        MDC.put("adapter", "logger");
     }
 
     public void sync(List<Dml> dmls) {
@@ -42,6 +43,6 @@ public void sync(Dml dml) {
 
     @Override
     public void destroy() {
-
+        MDC.remove("adapter");
     }
 }

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/RdbAdapter.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.otter.canal.client.adapter.rdb.service.RdbSyncService;
 import com.alibaba.otter.canal.client.adapter.rdb.support.SyncUtil;
 import com.alibaba.otter.canal.client.adapter.support.*;
+import org.slf4j.MDC;
 
 /**
  * RDB适配器实现类
@@ -67,6 +68,7 @@ public Map<String, MirrorDbConfig> getMirrorDbConfigCache() {
      */
     @Override
     public void init(OuterAdapterConfig configuration, Properties envProperties) {
+        MDC.put("adapter", "rdb");
         this.envProperties = envProperties;
         Map<String, MappingConfig> rdbMappingTmp = ConfigLoader.load(envProperties);
         // 过滤不匹配的key的配置
@@ -294,5 +296,6 @@ public void destroy() {
         if (dataSource != null) {
             dataSource.close();
         }
+        MDC.remove("adapter");
     }
 }

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESEtlService.java
Patch:
@@ -247,7 +247,7 @@ private boolean executeSqlImport(DataSource ds, String sql, ESMapping mapping, A
 
                         Object idVal = null;
                         if (mapping.get_id() != null) {
-                            idVal = rs.getObject(mapping.get_id());
+                            idVal = esFieldData.get(mapping.get_id());
                         }
 
                         if (idVal != null) {
@@ -271,7 +271,7 @@ private boolean executeSqlImport(DataSource ds, String sql, ESMapping mapping, A
                                 bulkRequestBuilder.add(indexRequestBuilder);
                             }
                         } else {
-                            idVal = rs.getObject(mapping.getPk());
+                            idVal = esFieldData.get(mapping.getPk());
                             SearchResponse response = transportClient.prepareSearch(mapping.get_index())
                                 .setTypes(mapping.get_type())
                                 .setQuery(QueryBuilders.termQuery(mapping.getPk(), idVal))

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/Util.java
Patch:
@@ -144,7 +144,7 @@ public static String cleanColumn(String column) {
         return column;
     }
 
-    private static String timeZone; // 当前时区
+    public static String timeZone; // 当前时区
     private static DateTimeZone dateTimeZone;
 
     static {

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -49,6 +49,7 @@ public void init(MQProperties kafkaProperties) {
         properties.put("max.request.size", kafkaProperties.getMaxRequestSize());
         properties.put("buffer.memory", kafkaProperties.getBufferMemory());
         properties.put("key.serializer", StringSerializer.class.getName());
+        properties.put("max.in.flight.requests.per.connection", 1);
 
         if (!kafkaProperties.getProperties().isEmpty()) {
             properties.putAll(kafkaProperties.getProperties());
@@ -160,7 +161,7 @@ record = new ProducerRecord<>(topicName, 0, null, message);
 
             if (record != null) {
                 if (kafkaProperties.getTransaction()) {
-                    producer.send(record);
+                    producer.send(record).get();
                 } else {
                     producer.send(record).get();
                 }
@@ -212,7 +213,7 @@ private void produce(String topicName, int partition, FlatMessage flatMessage) t
         if (kafkaProperties.getTransaction()) {
             producer2.send(record);
         } else {
-            producer2.send(record).get();
+            producer2.send(record);
         }
     }
 

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java
Patch:
@@ -76,7 +76,7 @@ private static boolean isText(String columnType) {
                || "TEXT".equalsIgnoreCase(columnType) || "TINYTEXT".equalsIgnoreCase(columnType);
     }
 
-    public static Object typeConvert(String columnName, String value, int sqlType, String mysqlType) {
+    public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
             || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
@@ -161,7 +161,7 @@ public static Object typeConvert(String columnName, String value, int sqlType, S
             }
             return res;
         } catch (Exception e) {
-            logger.error("table: {} column: {}, failed convert type {} to {}", columnName, value, sqlType);
+            logger.error("table: {} column: {}, failed convert type {} to {}", tableName, columnName, value, sqlType);
             return value;
         }
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlMultiStageCoprocessor.java
Patch:
@@ -106,8 +106,8 @@ public void start() {
 
         // stage 3
         SequenceBarrier dmlParserSequenceBarrier = disruptorMsgBuffer.newBarrier(simpleParserStage.getSequence());
-        WorkHandler<MessageEvent>[] workHandlers = new DmlParserStage[parserThreadCount];
-        for (int i = 0; i < parserThreadCount; i++) {
+        WorkHandler<MessageEvent>[] workHandlers = new DmlParserStage[tc];
+        for (int i = 0; i < tc; i++) {
             workHandlers[i] = new DmlParserStage();
         }
         workerPool = new WorkerPool<MessageEvent>(disruptorMsgBuffer,

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlMultiStageCoprocessor.java
Patch:
@@ -106,8 +106,8 @@ public void start() {
 
         // stage 3
         SequenceBarrier dmlParserSequenceBarrier = disruptorMsgBuffer.newBarrier(simpleParserStage.getSequence());
-        WorkHandler<MessageEvent>[] workHandlers = new DmlParserStage[parserThreadCount];
-        for (int i = 0; i < parserThreadCount; i++) {
+        WorkHandler<MessageEvent>[] workHandlers = new DmlParserStage[tc];
+        for (int i = 0; i < tc; i++) {
             workHandlers[i] = new DmlParserStage();
         }
         workerPool = new WorkerPool<MessageEvent>(disruptorMsgBuffer,

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java
Patch:
@@ -76,7 +76,7 @@ private static boolean isText(String columnType) {
                || "TEXT".equalsIgnoreCase(columnType) || "TINYTEXT".equalsIgnoreCase(columnType);
     }
 
-    public static Object typeConvert(String columnName, String value, int sqlType, String mysqlType) {
+    public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {
         if (value == null
             || (value.equals("") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {
             return null;
@@ -161,7 +161,7 @@ public static Object typeConvert(String columnName, String value, int sqlType, S
             }
             return res;
         } catch (Exception e) {
-            logger.error("table: {} column: {}, failed convert type {} to {}", columnName, value, sqlType);
+            logger.error("table: {} column: {}, failed convert type {} to {}", tableName, columnName, value, sqlType);
             return value;
         }
     }

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -96,7 +96,7 @@ public void init(OuterAdapterConfig configuration, Properties envProperties) {
             hbaseSyncService = new HbaseSyncService(hbaseTemplate);
 
             configMonitor = new HbaseConfigMonitor();
-            configMonitor.init(this);
+            configMonitor.init(this, envProperties);
         } catch (Exception e) {
             throw new RuntimeException(e);
         }

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -49,6 +49,7 @@ public void init(MQProperties kafkaProperties) {
         properties.put("max.request.size", kafkaProperties.getMaxRequestSize());
         properties.put("buffer.memory", kafkaProperties.getBufferMemory());
         properties.put("key.serializer", StringSerializer.class.getName());
+        properties.put("max.in.flight.requests.per.connection", 1);
 
         if (!kafkaProperties.getProperties().isEmpty()) {
             properties.putAll(kafkaProperties.getProperties());

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -499,7 +499,7 @@ private static Set<String> matchTopics(String name, String dynamicTopicConfigs)
                     topics.add(topic);
                 }
             } else if (matchDynamicTopic(name, item)) {
-                topics.add(name);
+                topics.add(name.toLowerCase());
             }
         }
         return topics.isEmpty() ? null : topics;

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -499,7 +499,7 @@ private static Set<String> matchTopics(String name, String dynamicTopicConfigs)
                     topics.add(topic);
                 }
             } else if (matchDynamicTopic(name, item)) {
-                topics.add(name);
+                topics.add(name.toLowerCase());
             }
         }
         return topics.isEmpty() ? null : topics;

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -294,7 +294,7 @@ private CanalEventParser doInitEventParser(SourcingType type, List<InetSocketAdd
             mysqlEventParser.setFallbackIntervalInSeconds(parameters.getFallbackIntervalInSeconds());
             mysqlEventParser.setProfilingEnabled(false);
             mysqlEventParser.setFilterTableError(parameters.getFilterTableError());
-            mysqlEventParser.setParallel(parameters.isParallel());
+            mysqlEventParser.setParallel(parameters.getParallel());
             mysqlEventParser.setIsGTIDMode(BooleanUtils.toBoolean(parameters.getGtidEnable()));
             // tsdb
             if (parameters.getTsdbSnapshotInterval() != null) {
@@ -341,7 +341,7 @@ public TableMetaTSDB build(String destination, String springXml) {
             localBinlogEventParser.setDetectingEnable(parameters.getDetectingEnable());
             localBinlogEventParser.setDetectingIntervalInSeconds(parameters.getDetectingIntervalInSeconds());
             localBinlogEventParser.setFilterTableError(parameters.getFilterTableError());
-            localBinlogEventParser.setParallel(parameters.isParallel());
+            localBinlogEventParser.setParallel(parameters.getParallel());
             // 数据库信息，反查表结构时需要
             if (!CollectionUtils.isEmpty(dbAddresses)) {
                 localBinlogEventParser.setMasterInfo(new AuthenticationInfo(dbAddresses.get(0),

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/group/GroupEventSink.java
Patch:
@@ -51,7 +51,7 @@ protected boolean doSink(List<Event> events) {
             try {
                 barrier.await(event);// 进行timeline的归并调度处理
                 if (filterTransactionEntry) {
-                    return super.doSink(Arrays.asList(event));
+                    super.doSink(Arrays.asList(event));
                 } else if (i == size - 1) {
                     // 针对事务数据，只有到最后一条数据都通过后，才进行sink操作，保证原子性
                     // 同时批量sink，也要保证在最后一条数据释放状态之前写出数据，否则就有并发问题

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -417,9 +417,9 @@ public static FlatMessage[] messagePartition(FlatMessage flatMessage, Integer pa
                         pkNames = flatMessage.getPkNames();
                     }
 
-                    int hashCode = table.hashCode();
                     int idx = 0;
                     for (Map<String, String> row : flatMessage.getData()) {
+                        int hashCode = table.hashCode();
                         if (!hashMode.tableHash) {
                             for (String pkName : pkNames) {
                                 String value = row.get(pkName);

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -417,9 +417,9 @@ public static FlatMessage[] messagePartition(FlatMessage flatMessage, Integer pa
                         pkNames = flatMessage.getPkNames();
                     }
 
-                    int hashCode = table.hashCode();
                     int idx = 0;
                     for (Map<String, String> row : flatMessage.getData()) {
+                        int hashCode = table.hashCode();
                         if (!hashMode.tableHash) {
                             for (String pkName : pkNames) {
                                 String value = row.get(pkName);

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/MessageUtil.java
Patch:
@@ -43,6 +43,7 @@ public static List<Dml> parse4Dml(String destination, String groupId, Message me
             dml.setTable(entry.getHeader().getTableName());
             dml.setType(eventType.toString());
             dml.setEs(entry.getHeader().getExecuteTime());
+            dml.setIsDdl(rowChange.getIsDdl());
             dml.setTs(System.currentTimeMillis());
             dml.setSql(rowChange.getSql());
             dmls.add(dml);

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/config/ESSyncConfigLoader.java
Patch:
@@ -28,7 +28,9 @@ public static synchronized Map<String, ESSyncConfig> load(Properties envProperti
         Map<String, String> configContentMap = MappingConfigsLoader.loadConfigs("es");
         configContentMap.forEach((fileName, content) -> {
             ESSyncConfig config = YmlConfigBinder.bindYmlToObj(null, content, ESSyncConfig.class, null, envProperties);
-
+            if (config == null) {
+                return;
+            }
             try {
                 config.validate();
             } catch (Exception e) {

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/config/MappingConfigLoader.java
Patch:
@@ -34,6 +34,9 @@ public static Map<String, MappingConfig> load(Properties envProperties) {
         configContentMap.forEach((fileName, content) -> {
             MappingConfig config = YmlConfigBinder
                 .bindYmlToObj(null, content, MappingConfig.class, null, envProperties);
+            if (config == null) {
+                return;
+            }
             try {
                 config.validate();
             } catch (Exception e) {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/config/ConfigLoader.java
Patch:
@@ -36,6 +36,9 @@ public static Map<String, MappingConfig> load(Properties envProperties) {
         configContentMap.forEach((fileName, content) -> {
             MappingConfig config = YmlConfigBinder
                 .bindYmlToObj(null, content, MappingConfig.class, null, envProperties);
+            if (config == null) {
+                return;
+            }
             try {
                 config.validate();
             } catch (Exception e) {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbMirrorDbSyncService.java
Patch:
@@ -59,7 +59,7 @@ public void sync(List<Dml> dmls) {
             if (mirrorDbConfig.getMappingConfig() == null) {
                 continue;
             }
-            if (StringUtils.isNotEmpty(mirrorDbConfig.getMappingConfig().getGroupId())) {
+            if (dml.getGroupId() != null && StringUtils.isNotEmpty(mirrorDbConfig.getMappingConfig().getGroupId())) {
                 if (!mirrorDbConfig.getMappingConfig().getGroupId().equals(dml.getGroupId())) {
                     continue; // 如果groupId不匹配则过滤
                 }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -48,6 +48,7 @@ public class CanalConstants {
     public static final String CANAL_MQ_FLATMESSAGE              = ROOT + "." + "mq.flatMessage";
     public static final String CANAL_MQ_COMPRESSION_TYPE         = ROOT + "." + "mq.compressionType";
     public static final String CANAL_MQ_ACKS                     = ROOT + "." + "mq.acks";
+    public static final String CANAL_MQ_TRANSACTION              = ROOT + "." + "mq.transaction";
     public static final String CANAL_ALIYUN_ACCESSKEY            = ROOT + "." + "aliyun.accessKey";
     public static final String CANAL_ALIYUN_SECRETKEY            = ROOT + "." + "aliyun.secretKey";
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -708,7 +708,7 @@ private boolean parseOneRow(RowData.Builder rowDataBuilder, RowsLogEvent event,
                 }
             }
 
-            buffer.nextValue(fieldMeta.getColumnName(), i, info.type, info.meta, isBinary);
+            buffer.nextValue(columnBuilder.getName(), i, info.type, info.meta, isBinary);
             int javaType = buffer.getJavaType();
             if (buffer.isNull()) {
                 columnBuilder.setIsNull(true);

File: meta/src/main/java/com/alibaba/otter/canal/meta/ZooKeeperMetaManager.java
Patch:
@@ -56,7 +56,7 @@ public void start() {
     }
 
     public void stop() {
-        zkClientx = null;
+        zkClientx = null; //关闭时置空
         super.stop();
     }
 
@@ -102,7 +102,7 @@ public void unsubscribe(ClientIdentity clientIdentity) throws CanalMetaManagerEx
     }
 
     public List<ClientIdentity> listAllSubscribeInfo(String destination) throws CanalMetaManagerException {
-        if (zkClientx == null) {
+        if (zkClientx == null) { //重新加载时可能为空
             return new ArrayList<ClientIdentity>();
         }
         String path = ZookeeperPathUtils.getDestinationPath(destination);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -508,6 +508,7 @@ public void stop() throws Throwable {
             zkclientx.close();
         }
 
+        //关闭时清理缓存
         if (instanceConfigs != null) {
             instanceConfigs.clear();
         }

File: meta/src/main/java/com/alibaba/otter/canal/meta/ZooKeeperMetaManager.java
Patch:
@@ -56,7 +56,7 @@ public void start() {
     }
 
     public void stop() {
-        zkClientx = null;
+        zkClientx = null; //关闭时置空
         super.stop();
     }
 
@@ -102,7 +102,7 @@ public void unsubscribe(ClientIdentity clientIdentity) throws CanalMetaManagerEx
     }
 
     public List<ClientIdentity> listAllSubscribeInfo(String destination) throws CanalMetaManagerException {
-        if (zkClientx == null) {
+        if (zkClientx == null) { //重新加载时可能为空
             return new ArrayList<ClientIdentity>();
         }
         String path = ZookeeperPathUtils.getDestinationPath(destination);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -503,6 +503,8 @@ public void stop() throws Throwable {
         if (zkclientx != null) {
             zkclientx.close();
         }
+
+        ZkClientx.clearClients();
     }
 
     private void initCid(String path) {

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/ESAdapter.java
Patch:
@@ -127,6 +127,9 @@ public void init(OuterAdapterConfig configuration) {
     }
 
     public void sync(List<Dml> dmls) {
+        if (dmls == null || dmls.isEmpty()) {
+            return;
+        }
         for (Dml dml : dmls) {
             sync(dml);
         }

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -94,6 +94,9 @@ public void init(OuterAdapterConfig configuration) {
     }
 
     public void sync(List<Dml> dmls) {
+        if (dmls == null || dmls.isEmpty()) {
+            return;
+        }
         for (Dml dml : dmls) {
             sync(dml);
         }

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -86,7 +86,7 @@ public void send(MQProperties.CanalDestination canalDestination, Message message
                 .messageTopics(message, canalDestination.getTopic(), canalDestination.getDynamicTopic());
 
             for (Map.Entry<String, Message> entry : messageMap.entrySet()) {
-                String topicName = entry.getKey();
+                String topicName = entry.getKey().replace('.', '_');
                 Message messageSub = entry.getValue();
                 if (logger.isDebugEnabled()) {
                     logger.debug("## Send message to kafka topic: " + topicName);

File: server/src/main/java/com/alibaba/otter/canal/rocketmq/CanalRocketMQProducer.java
Patch:
@@ -67,7 +67,7 @@ public void send(final MQProperties.CanalDestination destination, com.alibaba.ot
                 .messageTopics(data, destination.getTopic(), destination.getDynamicTopic());
 
             for (Map.Entry<String, com.alibaba.otter.canal.protocol.Message> entry : messageMap.entrySet()) {
-                String topicName = entry.getKey();
+                String topicName = entry.getKey().replace('.', '_');
                 com.alibaba.otter.canal.protocol.Message messageSub = entry.getValue();
                 send(destination, topicName, messageSub, callback);
             }

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/ESAdapter.java
Patch:
@@ -127,6 +127,9 @@ public void init(OuterAdapterConfig configuration) {
     }
 
     public void sync(List<Dml> dmls) {
+        if (dmls == null || dmls.isEmpty()) {
+            return;
+        }
         for (Dml dml : dmls) {
             sync(dml);
         }

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -94,6 +94,9 @@ public void init(OuterAdapterConfig configuration) {
     }
 
     public void sync(List<Dml> dmls) {
+        if (dmls == null || dmls.isEmpty()) {
+            return;
+        }
         for (Dml dml : dmls) {
             sync(dml);
         }

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -86,7 +86,7 @@ public void send(MQProperties.CanalDestination canalDestination, Message message
                 .messageTopics(message, canalDestination.getTopic(), canalDestination.getDynamicTopic());
 
             for (Map.Entry<String, Message> entry : messageMap.entrySet()) {
-                String topicName = entry.getKey();
+                String topicName = entry.getKey().replace('.', '_');
                 Message messageSub = entry.getValue();
                 if (logger.isDebugEnabled()) {
                     logger.debug("## Send message to kafka topic: " + topicName);

File: server/src/main/java/com/alibaba/otter/canal/rocketmq/CanalRocketMQProducer.java
Patch:
@@ -67,7 +67,7 @@ public void send(final MQProperties.CanalDestination destination, com.alibaba.ot
                 .messageTopics(data, destination.getTopic(), destination.getDynamicTopic());
 
             for (Map.Entry<String, com.alibaba.otter.canal.protocol.Message> entry : messageMap.entrySet()) {
-                String topicName = entry.getKey();
+                String topicName = entry.getKey().replace('.', '_');
                 com.alibaba.otter.canal.protocol.Message messageSub = entry.getValue();
                 send(destination, topicName, messageSub, callback);
             }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -77,8 +77,9 @@ public void onChange(Properties properties) {
                 });
             }
 
-            while (running)
-                ;
+            while (running) {
+                Thread.sleep(1000);
+            }
 
             if (managerDbConfigMonitor != null) {
                 managerDbConfigMonitor.destroy();

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -77,8 +77,9 @@ public void onChange(Properties properties) {
                 });
             }
 
-            while (running)
-                ;
+            while (running) {
+                Thread.sleep(1000);
+            }
 
             if (managerDbConfigMonitor != null) {
                 managerDbConfigMonitor.destroy();

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbMirrorDbSyncService.java
Patch:
@@ -35,10 +35,11 @@ public class RdbMirrorDbSyncService {
     private RdbSyncService              rdbSyncService;                                                // rdbSyncService代理
 
     public RdbMirrorDbSyncService(Map<String, MirrorDbConfig> mirrorDbConfigCache, DataSource dataSource,
-                                  Integer threads, Map<String, Map<String, Integer>> columnsTypeCache){
+                                  Integer threads, Map<String, Map<String, Integer>> columnsTypeCache,
+                                  boolean skipDupException){
         this.mirrorDbConfigCache = mirrorDbConfigCache;
         this.dataSource = dataSource;
-        this.rdbSyncService = new RdbSyncService(dataSource, threads, columnsTypeCache);
+        this.rdbSyncService = new RdbSyncService(dataSource, threads, columnsTypeCache, skipDupException);
     }
 
     /**

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java
Patch:
@@ -32,7 +32,7 @@ static final class Entry {
     }
 
     // Character set data used in lookups. The array will be sparse.
-    static final Entry[] entries = new Entry[0xff];
+    static final Entry[] entries = new Entry[2048];
 
     static Entry getEntry(final int id) {
         if (id >= 0 && id < entries.length) {
@@ -95,7 +95,7 @@ static void putEntry(final int charsetId, String mysqlCharset, String mysqlColla
         putEntry(34, "cp1250", "cp1250_czech_cs", "Cp1250");
         putEntry(35, "ucs2", "ucs2_general_ci", "UnicodeBig");
         putEntry(36, "cp866", "cp866_general_ci", "Cp866");
-        putEntry(37, "keybcs2", "keybcs2_general_ci", "Cp895");
+        putEntry(37, "keybcs2", "keybcs2_general_ci", "Cp852");
         putEntry(38, "macce", "macce_general_ci", "MacCentralEurope");
         putEntry(39, "macroman", "macroman_general_ci", "MacRoman");
         putEntry(40, "cp852", "cp852_general_ci", "Cp852");
@@ -129,7 +129,7 @@ static void putEntry(final int charsetId, String mysqlCharset, String mysqlColla
         putEntry(70, "greek", "greek_bin", "ISO8859_7");
         putEntry(71, "hebrew", "hebrew_bin", "ISO8859_8");
         putEntry(72, "hp8", "hp8_bin", "US-ASCII");
-        putEntry(73, "keybcs2", "keybcs2_bin", "Cp895");
+        putEntry(73, "keybcs2", "keybcs2_bin", "Cp852");
         putEntry(74, "koi8r", "koi8r_bin", "KOI8_R");
         putEntry(75, "koi8u", "koi8u_bin", "KOI8_U");
         putEntry(77, "latin2", "latin2_bin", "ISO8859_2");

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/request/AbstractRequest.java
Patch:
@@ -160,7 +160,7 @@ private String makeSignature(TreeMap<String, String> paramMap) throws Exception
     }
 
     public final String formatUTCTZ(Date date) {
-        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd'T'HH:mm:ss'Z'");
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
         sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
         return sdf.format(date);
     }

File: instance/core/src/main/java/com/alibaba/otter/canal/instance/core/CanalMQConfig.java
Patch:
@@ -6,7 +6,7 @@ public class CanalMQConfig {
     private Integer partition;
     private Integer partitionsNum;
     private String  partitionHash;
-    private String dynamicTopic;
+    private String  dynamicTopic;
 
     public String getTopic() {
         return topic;

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESSyncService.java
Patch:
@@ -100,7 +100,7 @@ public void sync(ESSyncConfig config, Dml dml) {
                     dml.getDestination(),
                     config.getEsMapping().get_index());
             }
-        } catch (Exception e) {
+        } catch (Throwable e) {
             logger.error("sync error, es index: {}, DML : {}", config.getEsMapping().get_index(), dml);
             throw new RuntimeException(e);
         }

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESSyncService.java
Patch:
@@ -102,13 +102,13 @@ public void sync(ESSyncConfig config, Dml dml) {
             }
         } catch (Exception e) {
             logger.error("sync error, es index: {}, DML : {}", config.getEsMapping().get_index(), dml);
-            logger.error(e.getMessage(), e);
+            throw new RuntimeException(e);
         }
     }
 
     /**
      * 插入操作dml
-     * 
+     *
      * @param config es配置
      * @param dml dml数据
      */
@@ -429,7 +429,7 @@ private void singleTableSimpleFiledInsert(ESSyncConfig config, Dml dml, Map<Stri
 
     /**
      * 主表(单表)复杂字段insert
-     * 
+     *
      * @param config es配置
      * @param dml dml信息
      * @param data 单行dml数据

File: server/src/main/java/com/alibaba/otter/canal/server/CanalMQStarter.java
Patch:
@@ -137,6 +137,7 @@ private void worker(String destination, AtomicBoolean destinationRunning) {
                 CanalMQConfig mqConfig = canalInstance.getMqConfig();
                 canalDestination.setTopic(mqConfig.getTopic());
                 canalDestination.setPartition(mqConfig.getPartition());
+                canalDestination.setDynamicTopic(mqConfig.getDynamicTopic());
                 canalDestination.setPartitionsNum(mqConfig.getPartitionsNum());
                 canalDestination.setPartitionHash(mqConfig.getPartitionHash());
 

File: client-adapter/elasticsearch/src/main/java/com/alibaba/otter/canal/client/adapter/es/service/ESSyncService.java
Patch:
@@ -102,13 +102,13 @@ public void sync(ESSyncConfig config, Dml dml) {
             }
         } catch (Exception e) {
             logger.error("sync error, es index: {}, DML : {}", config.getEsMapping().get_index(), dml);
-            logger.error(e.getMessage(), e);
+            throw new RuntimeException(e);
         }
     }
 
     /**
      * 插入操作dml
-     * 
+     *
      * @param config es配置
      * @param dml dml数据
      */
@@ -429,7 +429,7 @@ private void singleTableSimpleFiledInsert(ESSyncConfig config, Dml dml, Map<Stri
 
     /**
      * 主表(单表)复杂字段insert
-     * 
+     *
      * @param config es配置
      * @param dml dml信息
      * @param data 单行dml数据

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -115,7 +115,9 @@ public void sync(Dml dml) {
         String database = dml.getDatabase();
         String table = dml.getTable();
         Map<String, MappingConfig> configMap = mappingConfigCache.get(destination + "." + database + "." + table);
-        configMap.values().forEach(config -> hbaseSyncService.sync(config, dml));
+        if (configMap != null) {
+            configMap.values().forEach(config -> hbaseSyncService.sync(config, dml));
+        }
     }
 
     @Override

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java
Patch:
@@ -115,7 +115,9 @@ public void sync(Dml dml) {
         String database = dml.getDatabase();
         String table = dml.getTable();
         Map<String, MappingConfig> configMap = mappingConfigCache.get(destination + "." + database + "." + table);
-        configMap.values().forEach(config -> hbaseSyncService.sync(config, dml));
+        if (configMap != null) {
+            configMap.values().forEach(config -> hbaseSyncService.sync(config, dml));
+        }
     }
 
     @Override

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbMirrorDbSyncService.java
Patch:
@@ -74,8 +74,9 @@ public void sync(List<Dml> dmls) {
                 rdbSyncService.sync(dmlList, dml -> {
                     MirrorDbConfig mirrorDbConfig = mirrorDbConfigCache
                         .get(dml.getDestination() + "." + dml.getDatabase());
-                    String destination = StringUtils.trimToEmpty(dml.getDestination());
-                    String database = dml.getDatabase();
+                    if (mirrorDbConfig == null) {
+                        return false;
+                    }
                     String table = dml.getTable();
                     MappingConfig config = mirrorDbConfig.getTableConfig().get(table);
 

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/service/RdbMirrorDbSyncService.java
Patch:
@@ -74,8 +74,9 @@ public void sync(List<Dml> dmls) {
                 rdbSyncService.sync(dmlList, dml -> {
                     MirrorDbConfig mirrorDbConfig = mirrorDbConfigCache
                         .get(dml.getDestination() + "." + dml.getDatabase());
-                    String destination = StringUtils.trimToEmpty(dml.getDestination());
-                    String database = dml.getDatabase();
+                    if (mirrorDbConfig == null) {
+                        return false;
+                    }
                     String table = dml.getTable();
                     MappingConfig config = mirrorDbConfig.getTableConfig().get(table);
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -30,6 +30,7 @@
 import com.alibaba.fastsql.sql.ast.statement.SQLTableElement;
 import com.alibaba.fastsql.sql.dialect.mysql.ast.MySqlPrimaryKey;
 import com.alibaba.fastsql.sql.dialect.mysql.ast.MySqlUnique;
+import com.alibaba.fastsql.sql.dialect.mysql.ast.expr.MySqlOrderingExpr;
 import com.alibaba.fastsql.sql.repository.Schema;
 import com.alibaba.fastsql.sql.repository.SchemaObject;
 import com.alibaba.fastsql.sql.repository.SchemaRepository;
@@ -258,6 +259,8 @@ private String getSqlName(SQLExpr sqlName) {
             return ((SQLCharExpr) sqlName).getText();
         } else if (sqlName instanceof SQLMethodInvokeExpr) {
             return DruidDdlParser.unescapeName(((SQLMethodInvokeExpr) sqlName).getMethodName());
+        } else if (sqlName instanceof MySqlOrderingExpr) {
+            return getSqlName(((MySqlOrderingExpr) sqlName).getExpr());
         } else {
             return sqlName.toString();
         }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -508,6 +508,7 @@ private void loadBinlogChecksum() {
             rs = query("select @@global.binlog_checksum");
         } catch (Throwable e) {
             // ignore
+            return;
         }
 
         List<String> columnValues = rs.getFieldValues();

File: server/src/main/java/com/alibaba/otter/canal/common/MQMessageUtils.java
Patch:
@@ -36,10 +36,10 @@ public List<PartitionData> apply(String pkHashConfigs) {
                                                                                List<PartitionData> datas = Lists.newArrayList();
                                                                                String[] pkHashConfigArray = StringUtils.split(pkHashConfigs,
                                                                                    ",");
-                                                                               // schema.table#id^name
+                                                                               // schema.table:id^name
                                                                                for (String pkHashConfig : pkHashConfigArray) {
                                                                                    PartitionData data = new PartitionData();
-                                                                                   int i = pkHashConfig.lastIndexOf("#");
+                                                                                   int i = pkHashConfig.lastIndexOf(":");
                                                                                    if (i > 0) {
                                                                                        data.pkNames = Lists.newArrayList(StringUtils.split(pkHashConfig.substring(i + 1),
                                                                                            '^'));

File: filter/src/main/java/com/alibaba/otter/canal/filter/aviater/AviaterRegexFilter.java
Patch:
@@ -129,4 +129,5 @@ private List<String> completionPattern(List<String> patterns) {
     public String toString() {
         return pattern;
     }
+
 }

File: filter/src/main/java/com/alibaba/otter/canal/filter/aviater/RegexFunction.java
Patch:
@@ -12,7 +12,7 @@
 
 /**
  * 提供aviator regex的代码扩展
- * 
+ *
  * @author jianghang 2012-7-23 上午10:29:23
  */
 public class RegexFunction extends AbstractFunction {

File: server/src/main/java/com/alibaba/otter/canal/common/MQProperties.java
Patch:
@@ -1,6 +1,5 @@
 package com.alibaba.otter.canal.common;
 
-import java.util.Map;
 
 /**
  * kafka 配置项

File: client/src/main/java/com/alibaba/otter/canal/client/impl/ClusterNodeAccessStrategy.java
Patch:
@@ -15,7 +15,6 @@
 import com.alibaba.otter.canal.common.zookeeper.ZkClientx;
 import com.alibaba.otter.canal.common.zookeeper.ZookeeperPathUtils;
 import com.alibaba.otter.canal.common.zookeeper.running.ServerRunningData;
-import com.alibaba.otter.canal.protocol.exception.CanalClientException;
 
 /**
  * 集群模式的调度策略
@@ -25,13 +24,15 @@
  */
 public class ClusterNodeAccessStrategy implements CanalNodeAccessStrategy {
 
+    private String                           destination;
     private IZkChildListener                 childListener;                                      // 监听所有的服务器列表
     private IZkDataListener                  dataListener;                                       // 监听当前的工作节点
     private ZkClientx                        zkClient;
     private volatile List<InetSocketAddress> currentAddress = new ArrayList<InetSocketAddress>();
     private volatile InetSocketAddress       runningAddress = null;
 
     public ClusterNodeAccessStrategy(String destination, ZkClientx zkClient){
+        this.destination = destination;
         this.zkClient = zkClient;
         childListener = new IZkChildListener() {
 
@@ -73,7 +74,7 @@ public SocketAddress nextNode() {
         } else if (!currentAddress.isEmpty()) { // 如果不存在已经启动的服务，可能服务是一种lazy启动，随机选择一台触发服务器进行启动
             return currentAddress.get(0);// 默认返回第一个节点，之前已经做过shuffle
         } else {
-            throw new CanalClientException("no alive canal server");
+            throw new ServerNotFoundException("no alive canal server for " + destination);
         }
     }
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -50,6 +50,8 @@ public static void main(String[] args) throws Throwable {
             if (canalMQProducer != null) {
                 // disable netty
                 System.setProperty(CanalConstants.CANAL_WITHOUT_NETTY, "true");
+                System.setProperty(CanalConstants.CANAL_DESTINATIONS,
+                    properties.getProperty(CanalConstants.CANAL_DESTINATIONS));
             }
 
             logger.info("## start the canal server.");

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -50,6 +50,8 @@ public static void main(String[] args) throws Throwable {
             if (canalMQProducer != null) {
                 // disable netty
                 System.setProperty(CanalConstants.CANAL_WITHOUT_NETTY, "true");
+                System.setProperty(CanalConstants.CANAL_DESTINATIONS,
+                    properties.getProperty(CanalConstants.CANAL_DESTINATIONS));
             }
 
             logger.info("## start the canal server.");

File: common/src/main/java/com/alibaba/otter/canal/common/utils/BooleanMutex.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.concurrent.locks.AbstractQueuedSynchronizer;
 
 /**
- * 实现一个互斥实现，基于Cocurrent中的AbstractQueuedSynchronizer实现了自己的sync <br/>
+ * 实现一个互斥实现，基于Cocurrent中的AQS实现了自己的sync <br/>
  * 应用场景：系统初始化/授权控制，没权限时阻塞等待。有权限时所有线程都可以快速通过
  * 
  * <pre>

File: store/src/main/java/com/alibaba/otter/canal/store/model/Event.java
Patch:
@@ -71,8 +71,8 @@ public Event(LogIdentity logIdentity, CanalEntry.Entry entry, boolean raw){
             this.rawLength = rawEntry.size();
         } else {
             this.entry = entry;
-            // 按照3倍的event length预估
-            this.rawLength = entry.getHeader().getEventLength() * 3;
+            // 按照6倍的event length预估
+            this.rawLength = entry.getHeader().getEventLength() * 6;
         }
     }
 

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/CanalAdapterApplication.java
Patch:
@@ -3,7 +3,6 @@
 import org.springframework.boot.Banner;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.builder.SpringApplicationBuilder;
 
 /**
  * 启动入口

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/common/SyncSwitch.java
Patch:
@@ -64,11 +64,12 @@ public void init() {
         }
     }
 
+    @SuppressWarnings("resource")
     private synchronized void startListen(String destination, BooleanMutex mutex) {
         try {
             String path = SYN_SWITCH_ZK_NODE + destination;
             CuratorFramework curator = curatorClient.getCurator();
-            final NodeCache nodeCache = new NodeCache(curator, path);
+            NodeCache nodeCache = new NodeCache(curator, path);
             nodeCache.start();
             nodeCache.getListenable().addListener(() -> initMutex(curator, destination, mutex));
         } catch (Exception e) {

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/config/AdapterCanalConfig.java
Patch:
@@ -47,6 +47,7 @@ public Map<String, DatasourceConfig> getSrcDataSources() {
         return srcDataSources;
     }
 
+    @SuppressWarnings("resource")
     public void setSrcDataSources(Map<String, DatasourceConfig> srcDataSources) {
         this.srcDataSources = srcDataSources;
 

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -44,8 +44,7 @@ protected void process() {
         while (!running)
             ;
         ExecutorService workerExecutor = Executors.newSingleThreadExecutor();
-        int retry = canalClientConfig.getRetries() == null
-                    || canalClientConfig.getRetries() == 0 ? 1 : canalClientConfig.getRetries();
+        int retry = canalClientConfig.getRetries() == null || canalClientConfig.getRetries() == 0 ? 1 : canalClientConfig.getRetries();
         long timeout = canalClientConfig.getTimeout() == null ? 30000 : canalClientConfig.getTimeout(); // 默认超时30秒
 
         while (running) {

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterLoader.java
Patch:
@@ -122,6 +122,8 @@ public void init() {
                         canalAdapter.getInstance(),
                         group.getGroupId(),
                         canalOuterAdapterGroups,
+                        canalClientConfig.getAccessKey(),
+                        canalClientConfig.getSecretKey(),
                         canalClientConfig.getFlatMessage());
                     canalMQWorker.put(canalAdapter.getInstance() + "-rocketmq-" + group.getGroupId(), rocketMQWorker);
                     rocketMQWorker.start();

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/config/AdapterCanalConfig.java
Patch:
@@ -37,8 +37,6 @@ public void setCanalAdapters(List<CanalAdapter> canalAdapters) {
                 for (CanalAdapter canalAdapter : canalAdapters) {
                     if (canalAdapter.getInstance() != null) {
                         DESTINATIONS.add(canalAdapter.getInstance());
-                    } else if (canalAdapter.getTopic() != null) {
-                        DESTINATIONS.add(canalAdapter.getInstance());
                     }
                 }
             }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -47,6 +47,8 @@ public class CanalConstants {
     public static final String CANAL_MQ_FLATMESSAGE              = ROOT + "." + "mq.flatMessage";
     public static final String CANAL_MQ_COMPRESSION_TYPE         = ROOT + "." + "mq.compressionType";
     public static final String CANAL_MQ_ACKS                     = ROOT + "." + "mq.acks";
+    public static final String CANAL_ALIYUN_ACCESSKEY            = ROOT + "." + "aliyun.accessKey";
+    public static final String CANAL_ALIYUN_SECRETKEY            = ROOT + "." + "aliyun.secretKey";
 
     public static String getInstanceModeKey(String destination) {
         return MessageFormat.format(INSTANCE_MODE_TEMPLATE, destination);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -747,7 +747,7 @@ public boolean sink(LogEvent event) {
                         if (justForPositionTimestamp && logPosition.getPostion() == null && event.getWhen() > 0) {
                             // 初始位点
                             entryPosition = new EntryPosition(searchBinlogFile,
-                                event.getLogPos(),
+                                event.getLogPos() - event.getEventLen(),
                                 event.getWhen() * 1000,
                                 event.getServerId());
                             logPosition.setPostion(entryPosition);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -657,7 +657,7 @@ private boolean parseOneRow(RowData.Builder rowDataBuilder, RowsLogEvent event,
                                                   + tableMeta.getFullName() + ", db fieldMeta : "
                                                   + fieldMeta.toString() + " , binlog fieldMeta : " + info.toString()
                                                   + " , on : " + event.getHeader().getLogFileName() + ":"
-                                                  + event.getHeader().getLogPos());
+                                                  + (event.getHeader().getLogPos() - event.getHeader().getEventLen()));
                 }
             }
 

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/OuterAdapter.java
Patch:
@@ -29,7 +29,7 @@ public interface OuterAdapter {
      *
      * @param dml 数据包
      */
-    void sync(Dml dml);
+    void sync(List<Dml> dmls);
 
     /**
      * 外部适配器销毁接口

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -29,12 +29,12 @@ public class MysqlDumpTest {
     @Test
     public void testSimple() {
         final MysqlEventParser controller = new MysqlEventParser();
-        final EntryPosition startPosition = new EntryPosition("mysql-bin.000012", 34051L, 100L);
+        final EntryPosition startPosition = new EntryPosition("mysql-bin.000001", 4L);
         // startPosition.setGtid("f1ceb61a-a5d5-11e7-bdee-107c3dbcf8a7:1-17");
         controller.setConnectionCharset(Charset.forName("UTF-8"));
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
-        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "canal", "canal"));
+        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3306), "root", "hello"));
         controller.setMasterPosition(startPosition);
         controller.setEnableTsdb(true);
         controller.setDestination("example");

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -406,7 +406,8 @@ private void updateSettings() throws IOException {
             // 如果不设置会出现错误： Slave can not handle replication events with the
             // checksum that master is configured to log
             // 但也不能乱设置，需要和mysql server的checksum配置一致，不然RotateLogEvent会出现乱码
-            update("set @master_binlog_checksum= '@@global.binlog_checksum'");
+            // '@@global.binlog_checksum'需要去掉单引号,在mysql 5.6.29下导致master退出
+            update("set @master_binlog_checksum= @@global.binlog_checksum");
         } catch (Exception e) {
             logger.warn("update master_binlog_checksum failed", e);
         }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -45,6 +45,8 @@ public class CanalConstants {
     public static final String CANAL_MQ_CANALBATCHSIZE           = ROOT + "." + "mq.canalBatchSize";
     public static final String CANAL_MQ_CANALGETTIMEOUT          = ROOT + "." + "mq.canalGetTimeout";
     public static final String CANAL_MQ_FLATMESSAGE              = ROOT + "." + "mq.flatMessage";
+    public static final String CANAL_MQ_COMPRESSION_TYPE         = ROOT + "." + "mq.compressionType";
+    public static final String CANAL_MQ_ACKS                     = ROOT + "." + "mq.acks";
 
     public static String getInstanceModeKey(String destination) {
         return MessageFormat.format(INSTANCE_MODE_TEMPLATE, destination);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -100,6 +100,8 @@ private static MQProperties buildMQPosition(Properties properties) {
             CanalConstants.CANAL_MQ_CANALGETTIMEOUT)));
         mqProperties.setFlatMessage(Boolean.valueOf(CanalController.getProperty(properties,
             CanalConstants.CANAL_MQ_FLATMESSAGE)));
+        mqProperties.setCompressionType(CanalController.getProperty(properties,CanalConstants.CANAL_MQ_COMPRESSION_TYPE));
+        mqProperties.setAcks(CanalController.getProperty(properties,CanalConstants.CANAL_MQ_ACKS));
         return mqProperties;
     }
 

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -37,7 +37,8 @@ public void init(MQProperties kafkaProperties) {
         this.kafkaProperties = kafkaProperties;
         Properties properties = new Properties();
         properties.put("bootstrap.servers", kafkaProperties.getServers());
-        properties.put("acks", "all");
+        properties.put("acks", kafkaProperties.getAcks());
+        properties.put("compression.type",kafkaProperties.getCompressionType());
         properties.put("retries", kafkaProperties.getRetries());
         properties.put("batch.size", kafkaProperties.getBatchSize());
         properties.put("linger.ms", kafkaProperties.getLingerMs());

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -45,6 +45,8 @@ public class CanalConstants {
     public static final String CANAL_MQ_CANALBATCHSIZE           = ROOT + "." + "mq.canalBatchSize";
     public static final String CANAL_MQ_CANALGETTIMEOUT          = ROOT + "." + "mq.canalGetTimeout";
     public static final String CANAL_MQ_FLATMESSAGE              = ROOT + "." + "mq.flatMessage";
+    public static final String CANAL_MQ_COMPRESSION_TYPE         = ROOT + "." + "mq.compressionType";
+    public static final String CANAL_MQ_ACKS                     = ROOT + "." + "mq.acks";
 
     public static String getInstanceModeKey(String destination) {
         return MessageFormat.format(INSTANCE_MODE_TEMPLATE, destination);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -100,6 +100,8 @@ private static MQProperties buildMQPosition(Properties properties) {
             CanalConstants.CANAL_MQ_CANALGETTIMEOUT)));
         mqProperties.setFlatMessage(Boolean.valueOf(CanalController.getProperty(properties,
             CanalConstants.CANAL_MQ_FLATMESSAGE)));
+        mqProperties.setCompressionType(CanalController.getProperty(properties,CanalConstants.CANAL_MQ_COMPRESSION_TYPE));
+        mqProperties.setAcks(CanalController.getProperty(properties,CanalConstants.CANAL_MQ_ACKS));
         return mqProperties;
     }
 

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -37,7 +37,8 @@ public void init(MQProperties kafkaProperties) {
         this.kafkaProperties = kafkaProperties;
         Properties properties = new Properties();
         properties.put("bootstrap.servers", kafkaProperties.getServers());
-        properties.put("acks", "all");
+        properties.put("acks", kafkaProperties.getAcks());
+        properties.put("compression.type",kafkaProperties.getCompressionType());
         properties.put("retries", kafkaProperties.getRetries());
         properties.put("batch.size", kafkaProperties.getBatchSize());
         properties.put("linger.ms", kafkaProperties.getLingerMs());

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -651,7 +651,7 @@ private EntryPosition findEndPosition(MysqlConnection mysqlConnection) {
                 throw new CanalParseException("command : 'show master status' has an error! pls check. you need (at least one of) the SUPER,REPLICATION CLIENT privilege(s) for this operation");
             }
             EntryPosition endPosition = new EntryPosition(fields.get(0), Long.valueOf(fields.get(1)));
-            if (isGTIDMode && fields.size() > 4) {
+            if (isGTIDMode() && fields.size() > 4) {
                 endPosition.setGtid(fields.get(4));
             }
             return endPosition;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -213,6 +213,7 @@ private void processTableElement(SQLTableElement element, TableMeta tableMeta) {
                     fieldMeta.setNullable(true);
                 } else if (constraint instanceof SQLColumnPrimaryKey) {
                     fieldMeta.setKey(true);
+                    fieldMeta.setNullable(false);
                 } else if (constraint instanceof SQLColumnUniqueKey) {
                     fieldMeta.setUnique(true);
                 }
@@ -225,6 +226,7 @@ private void processTableElement(SQLTableElement element, TableMeta tableMeta) {
                 String name = getSqlName(pk.getExpr());
                 FieldMeta field = tableMeta.getFieldMetaByName(name);
                 field.setKey(true);
+                field.setNullable(false);
             }
         } else if (element instanceof MySqlUnique) {
             MySqlUnique column = (MySqlUnique) element;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -213,6 +213,7 @@ private void processTableElement(SQLTableElement element, TableMeta tableMeta) {
                     fieldMeta.setNullable(true);
                 } else if (constraint instanceof SQLColumnPrimaryKey) {
                     fieldMeta.setKey(true);
+                    fieldMeta.setNullable(false);
                 } else if (constraint instanceof SQLColumnUniqueKey) {
                     fieldMeta.setUnique(true);
                 }
@@ -225,6 +226,7 @@ private void processTableElement(SQLTableElement element, TableMeta tableMeta) {
                 String name = getSqlName(pk.getExpr());
                 FieldMeta field = tableMeta.getFieldMetaByName(name);
                 field.setKey(true);
+                field.setNullable(false);
             }
         } else if (element instanceof MySqlUnique) {
             MySqlUnique column = (MySqlUnique) element;

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/config/MappingConfigLoader.java
Patch:
@@ -125,7 +125,7 @@ public static String readConfigContent(String config) {
         InputStream in = null;
         try {
             // 先取本地文件，再取类路径
-            File configFile = new File("../config/" + config);
+            File configFile = new File("../conf/" + config);
             if (configFile.exists()) {
                 in = new FileInputStream(configFile);
             } else {

File: client-adapter/rdb/src/main/java/com/alibaba/otter/canal/client/adapter/rdb/config/MappingConfigLoader.java
Patch:
@@ -72,7 +72,7 @@ public static String readConfigContent(String config) {
         InputStream in = null;
         try {
             // 先取本地文件，再取类路径
-            File configFile = new File("../config/" + config);
+            File configFile = new File("../conf/" + config);
             if (configFile.exists()) {
                 in = new FileInputStream(configFile);
             } else {

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -104,7 +104,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                             ProducerRecord<String, String> record = new ProducerRecord<String, String>(canalDestination.getTopic(),
                                 canalDestination.getPartition(),
                                 null,
-                                JSON.toJSONString(flatMessage));
+                                JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
                             producer2.send(record).get();
                         } catch (Exception e) {
                             logger.error(e.getMessage(), e);
@@ -126,7 +126,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                                         ProducerRecord<String, String> record = new ProducerRecord<String, String>(canalDestination.getTopic(),
                                             i,
                                             null,
-                                            JSON.toJSONString(flatMessagePart));
+                                            JSON.toJSONString(flatMessagePart, SerializerFeature.WriteMapNullValue));
                                         producer2.send(record).get();
                                     } catch (Exception e) {
                                         logger.error(e.getMessage(), e);

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -104,7 +104,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                             ProducerRecord<String, String> record = new ProducerRecord<String, String>(canalDestination.getTopic(),
                                 canalDestination.getPartition(),
                                 null,
-                                JSON.toJSONString(flatMessage));
+                                JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
                             producer2.send(record).get();
                         } catch (Exception e) {
                             logger.error(e.getMessage(), e);
@@ -126,7 +126,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                                         ProducerRecord<String, String> record = new ProducerRecord<String, String>(canalDestination.getTopic(),
                                             i,
                                             null,
-                                            JSON.toJSONString(flatMessagePart));
+                                            JSON.toJSONString(flatMessagePart, SerializerFeature.WriteMapNullValue));
                                         producer2.send(record).get();
                                     } catch (Exception e) {
                                         logger.error(e.getMessage(), e);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -417,7 +417,7 @@ public Boolean getProfilingEnabled() {
     }
 
     protected LogPosition buildLastTransactionPosition(List<CanalEntry.Entry> entries) { // 初始化一下
-        for (int i = entries.size() - 1; i > 0; i--) {
+        for (int i = entries.size() - 1; i >= 0; i--) {
             CanalEntry.Entry entry = entries.get(i);
             if (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) {// 尽量记录一个事务做为position
                 return buildLastPosition(entry);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -417,7 +417,7 @@ public Boolean getProfilingEnabled() {
     }
 
     protected LogPosition buildLastTransactionPosition(List<CanalEntry.Entry> entries) { // 初始化一下
-        for (int i = entries.size() - 1; i > 0; i--) {
+        for (int i = entries.size() - 1; i >= 0; i--) {
             CanalEntry.Entry entry = entries.get(i);
             if (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) {// 尽量记录一个事务做为position
                 return buildLastPosition(entry);

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -105,7 +105,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                                 canalDestination.getPartition(),
                                 null,
                                 JSON.toJSONString(flatMessage));
-                            producer2.send(record);
+                            producer2.send(record).get();
                         } catch (Exception e) {
                             logger.error(e.getMessage(), e);
                             // producer.abortTransaction();

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java
Patch:
@@ -68,7 +68,7 @@ protected void parseRowsEvent(RowsLogEvent event) {
                     // update需要处理before/after
                     System.out.println("-------> before");
                     parseOneRow(event, buffer, columns, false);
-                    if (!buffer.nextOneRow(changeColumns)) {
+                    if (!buffer.nextOneRow(changeColumns, true)) {
                         break;
                     }
                     System.out.println("-------> after");
@@ -97,7 +97,7 @@ protected void parseOneRow(RowsLogEvent event, RowsLogBuffer buffer, BitSet cols
             }
 
             ColumnInfo info = columnInfo[i];
-            buffer.nextValue(info.type, info.meta);
+            buffer.nextValue(null , i ,info.type, info.meta);
 
             if (buffer.isNull()) {
                 //

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogBuffer.java
Patch:
@@ -1484,7 +1484,9 @@ private final int fillBitmap0(BitSet bitmap, int pos, final int len) {
 
         for (int bit = 0; bit < len; bit += 8) {
             int flag = ((int) buf[pos++]) & 0xff;
-            if (flag == 0) continue;
+            if (flag == 0) {
+                continue;
+            }
             if ((flag & 0x01) != 0) bitmap.set(bit);
             if ((flag & 0x02) != 0) bitmap.set(bit + 1);
             if ((flag & 0x04) != 0) bitmap.set(bit + 2);

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/FormatDescriptionLogEvent.java
Patch:
@@ -211,6 +211,7 @@ public FormatDescriptionLogEvent(final int binlogVersion){
                 postHeaderLen[TRANSACTION_CONTEXT_EVENT - 1] = TRANSACTION_CONTEXT_HEADER_LEN;
                 postHeaderLen[VIEW_CHANGE_EVENT - 1] = VIEW_CHANGE_HEADER_LEN;
                 postHeaderLen[XA_PREPARE_LOG_EVENT - 1] = XA_PREPARE_HEADER_LEN;
+                postHeaderLen[PARTIAL_UPDATE_ROWS_EVENT - 1] = ROWS_HEADER_LEN_V2;
 
                 // mariadb 10
                 postHeaderLen[ANNOTATE_ROWS_EVENT - 1] = ANNOTATE_ROWS_HEADER_LEN;

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/DirectLogFetcherTest.java
Patch:
@@ -45,6 +45,7 @@ public void testSimple() {
                         parseRowsEvent((WriteRowsLogEvent) event);
                         break;
                     case LogEvent.UPDATE_ROWS_EVENT_V1:
+                    case LogEvent.PARTIAL_UPDATE_ROWS_EVENT:
                     case LogEvent.UPDATE_ROWS_EVENT:
                         parseRowsEvent((UpdateRowsLogEvent) event);
                         break;

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/FileLogFetcherTest.java
Patch:
@@ -53,6 +53,7 @@ public void testSimple() {
                             parseRowsEvent((WriteRowsLogEvent) event);
                             break;
                         case LogEvent.UPDATE_ROWS_EVENT_V1:
+                        case LogEvent.PARTIAL_UPDATE_ROWS_EVENT:
                         case LogEvent.UPDATE_ROWS_EVENT:
                             parseRowsEvent((UpdateRowsLogEvent) event);
                             break;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlMultiStageCoprocessor.java
Patch:
@@ -275,6 +275,7 @@ public void onEvent(MessageEvent event, long sequence, boolean endOfBatch) throw
                         needDmlParse = true;
                         break;
                     case LogEvent.UPDATE_ROWS_EVENT_V1:
+                    case LogEvent.PARTIAL_UPDATE_ROWS_EVENT:
                     case LogEvent.UPDATE_ROWS_EVENT:
                         tableMeta = logEventConvert.parseRowsEventForTableMeta((UpdateRowsLogEvent) logEvent);
                         needDmlParse = true;

File: parse/src/test/java/com/alibaba/otter/canal/parse/MysqlBinlogParsePerformanceTest.java
Patch:
@@ -89,6 +89,7 @@ public static void consumer(BlockingQueue<LogBuffer> buffer) throws IOException,
                     parseRowsEvent((WriteRowsLogEvent) event, sum);
                     break;
                 case LogEvent.UPDATE_ROWS_EVENT_V1:
+                case LogEvent.PARTIAL_UPDATE_ROWS_EVENT:
                 case LogEvent.UPDATE_ROWS_EVENT:
                     parseRowsEvent((UpdateRowsLogEvent) event, sum);
                     break;
@@ -154,7 +155,7 @@ public static void parseRowsEvent(RowsLogEvent event, AtomicLong sum) {
                     parseOneRow(event, buffer, columns, false);
                 } else {
                     parseOneRow(event, buffer, columns, false);
-                    if (!buffer.nextOneRow(changeColumns)) {
+                    if (!buffer.nextOneRow(changeColumns, true)) {
                         break;
                     }
                     parseOneRow(event, buffer, changeColumns, true);
@@ -182,7 +183,7 @@ public static void parseOneRow(RowsLogEvent event, RowsLogBuffer buffer, BitSet
             }
 
             ColumnInfo info = columnInfo[i];
-            buffer.nextValue(info.type, info.meta);
+            buffer.nextValue(null, i, info.type, info.meta);
             if (buffer.isNull()) {
             } else {
                 buffer.getValue();

File: client/src/main/java/com/alibaba/otter/canal/client/CanalMessageDeserializer.java
Patch:
@@ -32,10 +32,12 @@ public static Message deserializer(byte[] data, boolean lazyParseEntry) {
                         if (lazyParseEntry) {
                             // byteString
                             result.setRawEntries(messages.getMessagesList());
+                            result.setRaw(true);
                         } else {
                             for (ByteString byteString : messages.getMessagesList()) {
                                 result.addEntry(CanalEntry.Entry.parseFrom(byteString));
                             }
+                            result.setRaw(false);
                         }
                         return result;
                     }

File: client/src/main/java/com/alibaba/otter/canal/client/CanalMessageDeserializer.java
Patch:
@@ -32,10 +32,12 @@ public static Message deserializer(byte[] data, boolean lazyParseEntry) {
                         if (lazyParseEntry) {
                             // byteString
                             result.setRawEntries(messages.getMessagesList());
+                            result.setRaw(true);
                         } else {
                             for (ByteString byteString : messages.getMessagesList()) {
                                 result.addEntry(CanalEntry.Entry.parseFrom(byteString));
                             }
+                            result.setRaw(false);
                         }
                         return result;
                     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -567,8 +567,7 @@ public Entry parseRowsEvent(RowsLogEvent event, TableMeta tableMeta) {
     }
 
     private EntryPosition createPosition(LogHeader logHeader) {
-        return new EntryPosition(logHeader.getLogFileName(),
-            logHeader.getLogPos(),
+        return new EntryPosition(logHeader.getLogFileName(), logHeader.getLogPos() - logHeader.getEventLen(), // startPos
             logHeader.getWhen() * 1000L,
             logHeader.getServerId()); // 记录到秒
     }
@@ -818,6 +817,7 @@ private Header createHeader(LogHeader logHeader, String schemaName, String table
         Header.Builder headerBuilder = Header.newBuilder();
         headerBuilder.setVersion(version);
         headerBuilder.setLogfileName(logHeader.getLogFileName());
+        // 记录的是该binlog的start offest
         headerBuilder.setLogfileOffset(logHeader.getLogPos() - logHeader.getEventLen());
         headerBuilder.setServerId(logHeader.getServerId());
         headerBuilder.setServerenCode(UTF_8);// 经过java输出后所有的编码为unicode

File: server/src/main/java/com/alibaba/otter/canal/rocketmq/CanalRocketMQProducer.java
Patch:
@@ -47,7 +47,8 @@ public void send(final MQProperties.CanalDestination destination, com.alibaba.ot
                      Callback callback) {
         if (!mqProperties.getFlatMessage()) {
             try {
-                Message message = new Message(destination.getTopic(), CanalMessageSerializer.serializer(data));
+                Message message = new Message(destination.getTopic(), CanalMessageSerializer.serializer(data,
+                    mqProperties.isFilterTransactionEntry()));
                 logger.debug("send message:{} to destination:{}, partition: {}",
                     message,
                     destination.getCanalDestination(),

File: common/src/main/java/com/alibaba/otter/canal/common/utils/BooleanMutex.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.concurrent.locks.AbstractQueuedSynchronizer;
 
 /**
- * 实现一个互斥实现，基于Cocurrent中的{@linkplain AbstractQueuedSynchronizer}实现了自己的sync <br/>
+ * 实现一个互斥实现，基于Cocurrent中的AbstractQueuedSynchronizer实现了自己的sync <br/>
  * 应用场景：系统初始化/授权控制，没权限时阻塞等待。有权限时所有线程都可以快速通过
  * 
  * <pre>

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/FastsqlSchemaTest.java
Patch:
@@ -19,6 +19,8 @@ public class FastsqlSchemaTest {
     public void testSimple() throws FileNotFoundException, IOException {
         SchemaRepository repository = new SchemaRepository(JdbcConstants.MYSQL);
         String sql = "create table yushitai_test.card_record ( id bigint auto_increment, name varchar(32) DEFAULT NULL) auto_increment=256 "
+                     + "ALTER TABLE yushitai_test.card_record ADD COLUMN remark2 varchar(255) DEFAULT NULL , ALGORITHM=inplace,LOCK=NONE;"
+                     + "ALTER TABLE yushitai_test.card_record modify COLUMN name varchar(64) DEFAULT NULL , ALGORITHM=copy,LOCK=SHARED; "
                      + "alter table yushitai_test.card_record add index index_name(name) ;"
                      + "alter table yushitai_test.card_record add index index_name(name) ;"
                      + "alter table yushitai_test.card_record add Constraint pk_id PRIMARY KEY (id);"

File: client/src/main/java/com/alibaba/otter/canal/client/kafka/KafkaCanalConnector.java
Patch:
@@ -87,9 +87,11 @@ public void connect() {
     public void disconnect() {
         if (kafkaConsumer != null) {
             kafkaConsumer.close();
+            kafkaConsumer = null;
         }
         if (kafkaConsumer2 != null) {
             kafkaConsumer2.close();
+            kafkaConsumer2 = null;
         }
 
         connected = false;

File: client/src/main/java/com/alibaba/otter/canal/client/kafka/KafkaCanalConnector.java
Patch:
@@ -87,9 +87,11 @@ public void connect() {
     public void disconnect() {
         if (kafkaConsumer != null) {
             kafkaConsumer.close();
+            kafkaConsumer = null;
         }
         if (kafkaConsumer2 != null) {
             kafkaConsumer2.close();
+            kafkaConsumer2 = null;
         }
 
         connected = false;

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -26,7 +26,7 @@ public class CanalAdapterKafkaWorker extends AbstractCanalAdapterWorker {
 
     public CanalAdapterKafkaWorker(String bootstrapServers, String topic, String groupId,
                                    List<List<OuterAdapter>> canalOuterAdapters, boolean flatMessage){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.topic = topic;
         this.canalDestination = topic;
         this.flatMessage = flatMessage;

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterRocketMQWorker.java
Patch:
@@ -24,12 +24,12 @@ public class CanalAdapterRocketMQWorker extends AbstractCanalAdapterWorker {
 
     public CanalAdapterRocketMQWorker(String nameServers, String topic, String groupId,
                                       List<List<OuterAdapter>> canalOuterAdapters, boolean flatMessage){
-        logger.info("RocketMQ consumer config topic:{}, nameServer:{}, groupId:{}", topic, nameServers, groupId);
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.topic = topic;
         this.flatMessage = flatMessage;
         this.canalDestination = topic;
         this.connector = RocketMQCanalConnectors.newRocketMQConnector(nameServers, topic, groupId, flatMessage);
+        logger.info("RocketMQ consumer config topic:{}, nameServer:{}, groupId:{}", topic, nameServers, groupId);
     }
 
     @Override

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterWorker.java
Patch:
@@ -34,7 +34,7 @@ public class CanalAdapterWorker extends AbstractCanalAdapterWorker {
      */
     public CanalAdapterWorker(String canalDestination, SocketAddress address,
                               List<List<OuterAdapter>> canalOuterAdapters){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.canalDestination = canalDestination;
         groupInnerExecutorService = Executors.newFixedThreadPool(canalOuterAdapters.size());
         connector = CanalConnectors.newSingleConnector(address, canalDestination, "", "");
@@ -49,7 +49,7 @@ public CanalAdapterWorker(String canalDestination, SocketAddress address,
      */
     public CanalAdapterWorker(String canalDestination, String zookeeperHosts,
                               List<List<OuterAdapter>> canalOuterAdapters){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.canalDestination = canalDestination;
         groupInnerExecutorService = Executors.newFixedThreadPool(canalOuterAdapters.size());
         connector = CanalConnectors.newClusterConnector(zookeeperHosts, canalDestination, "", "");

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -26,7 +26,7 @@ public class CanalAdapterKafkaWorker extends AbstractCanalAdapterWorker {
 
     public CanalAdapterKafkaWorker(String bootstrapServers, String topic, String groupId,
                                    List<List<OuterAdapter>> canalOuterAdapters, boolean flatMessage){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.topic = topic;
         this.canalDestination = topic;
         this.flatMessage = flatMessage;

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterRocketMQWorker.java
Patch:
@@ -24,12 +24,12 @@ public class CanalAdapterRocketMQWorker extends AbstractCanalAdapterWorker {
 
     public CanalAdapterRocketMQWorker(String nameServers, String topic, String groupId,
                                       List<List<OuterAdapter>> canalOuterAdapters, boolean flatMessage){
-        logger.info("RocketMQ consumer config topic:{}, nameServer:{}, groupId:{}", topic, nameServers, groupId);
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.topic = topic;
         this.flatMessage = flatMessage;
         this.canalDestination = topic;
         this.connector = RocketMQCanalConnectors.newRocketMQConnector(nameServers, topic, groupId, flatMessage);
+        logger.info("RocketMQ consumer config topic:{}, nameServer:{}, groupId:{}", topic, nameServers, groupId);
     }
 
     @Override

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterWorker.java
Patch:
@@ -34,7 +34,7 @@ public class CanalAdapterWorker extends AbstractCanalAdapterWorker {
      */
     public CanalAdapterWorker(String canalDestination, SocketAddress address,
                               List<List<OuterAdapter>> canalOuterAdapters){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.canalDestination = canalDestination;
         groupInnerExecutorService = Executors.newFixedThreadPool(canalOuterAdapters.size());
         connector = CanalConnectors.newSingleConnector(address, canalDestination, "", "");
@@ -49,7 +49,7 @@ public CanalAdapterWorker(String canalDestination, SocketAddress address,
      */
     public CanalAdapterWorker(String canalDestination, String zookeeperHosts,
                               List<List<OuterAdapter>> canalOuterAdapters){
-        this.canalOuterAdapters = canalOuterAdapters;
+        super(canalOuterAdapters);
         this.canalDestination = canalDestination;
         groupInnerExecutorService = Executors.newFixedThreadPool(canalOuterAdapters.size());
         connector = CanalConnectors.newClusterConnector(zookeeperHosts, canalDestination, "", "");

File: client/src/test/java/com/alibaba/otter/canal/client/running/kafka/CanalKafkaClientExample.java
Patch:
@@ -108,8 +108,7 @@ private void process() {
                 connector.subscribe();
                 while (running) {
                     try {
-                        List<Message> messages = connector.getWithoutAck(1L, TimeUnit.SECONDS); // 获取message
-
+                        List<Message> messages = connector.getListWithoutAck(100L, TimeUnit.MILLISECONDS); // 获取message
                         if (messages == null) {
                             continue;
                         }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -387,7 +387,7 @@ private InstanceConfig parseInstanceConfig(Properties properties, String destina
         return config;
     }
 
-    public String getProperty(Properties properties, String key) {
+    public static String getProperty(Properties properties, String key) {
         key = StringUtils.trim(key);
         String value = System.getProperty(key);
 

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/FlatMessage.java
Patch:
@@ -277,7 +277,6 @@ public static FlatMessage[] messagePartition(FlatMessage flatMessage, Integer pa
             partitionsNum = 1;
         }
         FlatMessage[] partitionMessages = new FlatMessage[partitionsNum];
-
         String pk = pkHashConfig.get(flatMessage.getDatabase() + "." + flatMessage.getTable());
         if (pk == null || flatMessage.getIsDdl()) {
             partitionMessages[0] = flatMessage;

File: server/src/main/java/com/alibaba/otter/canal/common/MQProperties.java
Patch:
@@ -12,15 +12,15 @@
  */
 public class MQProperties {
 
-    private String                 servers                = "localhost:6667";
+    private String                 servers                = "127.0.0.1:6667";
     private int                    retries                = 0;
     private int                    batchSize              = 16384;
     private int                    lingerMs               = 1;
     private long                   bufferMemory           = 33554432L;
     private boolean                filterTransactionEntry = true;
     private String                 producerGroup          = "Canal-Producer";
     private int                    canalBatchSize         = 50;
-    private Long                   canalGetTimeout;
+    private Long                   canalGetTimeout        = 100L;
     private boolean                flatMessage            = true;
 
     private List<CanalDestination> canalDestinations      = new ArrayList<CanalDestination>();

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/AbstractCanalAdapterWorker.java
Patch:
@@ -51,7 +51,6 @@ protected void writeOut(final Message message) {
                     adapters.forEach(adapter -> {
                         long begin = System.currentTimeMillis();
                         MessageUtil.parse4Dml(canalDestination, message, adapter::sync);
-
                         if (logger.isDebugEnabled()) {
                             logger.debug("{} elapsed time: {}",
                                 adapter.getClass().getName(),

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/Result.java
Patch:
@@ -11,6 +11,7 @@
  */
 public class Result implements Serializable {
 
+    private static final long serialVersionUID = -3276409502352405716L;
     public Integer code = 20000;
     public Object  data;
     public String  message;

File: client-adapter/launcher/src/main/java/com/alibaba/otter/canal/adapter/launcher/loader/CanalAdapterWorker.java
Patch:
@@ -90,7 +90,6 @@ protected void process() {
                     long batchId = message.getId();
                     try {
                         int size = message.getEntries().size();
-
                         if (batchId == -1 || size == 0) {
                             Thread.sleep(1000);
                         } else {
@@ -131,7 +130,6 @@ protected void process() {
                     // ignore
                 }
             }
-
         }
     }
 }

File: client/src/main/java/com/alibaba/otter/canal/client/rocketmq/RocketMQCanalConnectors.java
Patch:
@@ -3,7 +3,7 @@
 /**
  * RocketMQ connector provider.
  */
-public class RocketMQCanalConnectorProvider {
+public class RocketMQCanalConnectors {
 
     /**
      * Create RocketMQ connector
@@ -18,7 +18,7 @@ public static RocketMQCanalConnector newRocketMQConnector(String nameServers, St
     }
 
     public static RocketMQCanalConnector newRocketMQConnector(String nameServers, String topic, String groupId,
-        boolean flatMessage) {
+                                                              boolean flatMessage) {
         return new RocketMQCanalConnector(nameServers, topic, groupId, flatMessage);
     }
 }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -57,6 +57,7 @@ public void run() {
 
             CanalMQProducer canalMQProducer = null;
             String serverMode = controller.getProperty(properties, CanalConstants.CANAL_SERVER_MODE);
+            serverMode = "rocketmq";
             if (serverMode.equalsIgnoreCase("kafka")) {
                 canalMQProducer = new CanalKafkaProducer();
             } else if (serverMode.equalsIgnoreCase("rocketmq")) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParser.java
Patch:
@@ -55,6 +55,8 @@ protected void preDump(ErosaConnection connection) {
             ((DatabaseTableMeta) tableMetaTSDB).setConnection(metaConnection);
             ((DatabaseTableMeta) tableMetaTSDB).setFilter(eventFilter);
             ((DatabaseTableMeta) tableMetaTSDB).setBlackFilter(eventBlackFilter);
+            ((DatabaseTableMeta) tableMetaTSDB).setSnapshotInterval(tsdbSnapshotInterval);
+            ((DatabaseTableMeta) tableMetaTSDB).setSnapshotExpire(tsdbSnapshotExpire);
         }
 
         tableMetaCache = new TableMetaCache(metaConnection, tableMetaTSDB);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -121,6 +121,8 @@ protected void preDump(ErosaConnection connection) {
                 ((DatabaseTableMeta) tableMetaTSDB).setConnection(metaConnection);
                 ((DatabaseTableMeta) tableMetaTSDB).setFilter(eventFilter);
                 ((DatabaseTableMeta) tableMetaTSDB).setBlackFilter(eventBlackFilter);
+                ((DatabaseTableMeta) tableMetaTSDB).setSnapshotInterval(tsdbSnapshotInterval);
+                ((DatabaseTableMeta) tableMetaTSDB).setSnapshotExpire(tsdbSnapshotExpire);
             }
 
             tableMetaCache = new TableMetaCache(metaConnection, tableMetaTSDB);

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -367,7 +367,7 @@ final Serializable fetchValue(int type, final int meta, boolean isBinary) {
                     // 转化为unsign long
                     switch (len) {
                         case 1:
-                            value = buffer.getInt8();
+                            value = buffer.getUint8();
                             break;
                         case 2:
                             value = buffer.getBeUint16();

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -147,6 +147,7 @@ protected void initEventStore() {
             memoryEventStore.setBufferMemUnit(parameters.getMemoryStorageBufferMemUnit());
             memoryEventStore.setBatchMode(BatchMode.valueOf(parameters.getStorageBatchMode().name()));
             memoryEventStore.setDdlIsolation(parameters.getDdlIsolation());
+            memoryEventStore.setRaw(parameters.getMemoryStorageRawEntry());
             eventStore = memoryEventStore;
         } else if (mode.isFile()) {
             // 后续版本支持

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/Message.java
Patch:
@@ -38,6 +38,7 @@ public Message(long id, boolean raw, List entries){
         } else {
             this.entries = entries == null ? new ArrayList<Entry>() : entries;
         }
+        this.raw = raw;
     }
 
     public Message(long id){

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -859,7 +859,7 @@ final Serializable fetchValue(int type, final int meta, boolean isBinary) {
                     // 转化为unsign long
                     switch (len) {
                         case 1:
-                            value = buffer.getInt8();
+                            value = buffer.getUint8();
                             break;
                         case 2:
                             value = buffer.getUint16();

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/Message.java
Patch:
@@ -19,7 +19,6 @@ public class Message implements Serializable {
     private static final long      serialVersionUID = 1234034768477580009L;
 
     private long                   id;
-    @Deprecated
     private List<CanalEntry.Entry> entries          = new ArrayList<CanalEntry.Entry>();
     // row data for performance, see:
     // https://github.com/alibaba/canal/issues/726

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.Properties;
 import java.util.concurrent.Future;
 
+import com.alibaba.fastjson.serializer.SerializerFeature;
 import org.apache.kafka.clients.producer.KafkaProducer;
 import org.apache.kafka.clients.producer.Producer;
 import org.apache.kafka.clients.producer.ProducerRecord;
@@ -141,7 +142,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                                     canalDestination.getTopic(),
                                     0,
                                     null,
-                                    JSON.toJSONString(flatMessage));
+                                    JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
                                 producer2.send(record).get();
                             } catch (Exception e) {
                                 logger.error(e.getMessage(), e);

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.Properties;
 import java.util.concurrent.Future;
 
+import com.alibaba.fastjson.serializer.SerializerFeature;
 import org.apache.kafka.clients.producer.KafkaProducer;
 import org.apache.kafka.clients.producer.Producer;
 import org.apache.kafka.clients.producer.ProducerRecord;
@@ -141,7 +142,7 @@ record = new ProducerRecord<String, Message>(canalDestination.getTopic(), 0, nul
                                     canalDestination.getTopic(),
                                     0,
                                     null,
-                                    JSON.toJSONString(flatMessage));
+                                    JSON.toJSONString(flatMessage, SerializerFeature.WriteMapNullValue));
                                 producer2.send(record).get();
                             } catch (Exception e) {
                                 logger.error(e.getMessage(), e);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/MysqlGTIDSet.java
Patch:
@@ -86,7 +86,8 @@ public static MysqlGTIDSet parse(String gtidData) {
         if (gtidData == null || gtidData.length() < 1) {
             m = new HashMap<String, UUIDSet>();
         } else {
-            String[] uuidStrs = gtidData.split(",");
+            // 存在多个GTID时会有回车符
+            String[] uuidStrs = gtidData.replaceAll("\n", "").split(",");
             m = new HashMap<String, UUIDSet>(uuidStrs.length);
             for (int i = 0; i < uuidStrs.length; i++) {
                 UUIDSet uuidSet = UUIDSet.parse(uuidStrs[i]);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/MysqlGTIDSet.java
Patch:
@@ -86,7 +86,8 @@ public static MysqlGTIDSet parse(String gtidData) {
         if (gtidData == null || gtidData.length() < 1) {
             m = new HashMap<String, UUIDSet>();
         } else {
-            String[] uuidStrs = gtidData.split(",");
+            // 存在多个GTID时会有回车符
+            String[] uuidStrs = gtidData.replaceAll("\n", "").split(",");
             m = new HashMap<String, UUIDSet>(uuidStrs.length);
             for (int i = 0; i < uuidStrs.length; i++) {
                 UUIDSet uuidSet = UUIDSet.parse(uuidStrs[i]);

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/Dml.java
Patch:
@@ -94,6 +94,7 @@ public void clear() {
         table = null;
         type = null;
         ts = null;
+        es = null;
         data = null;
         old = null;
         sql = null;

File: client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/MessageUtil.java
Patch:
@@ -45,6 +45,7 @@ public static void parse4Dml(Message message, Consumer<Dml> consumer) {
             dml.setDatabase(entry.getHeader().getSchemaName());
             dml.setTable(entry.getHeader().getTableName());
             dml.setType(eventType.toString());
+            dml.setEs(entry.getHeader().getExecuteTime());
             dml.setTs(System.currentTimeMillis());
             dml.setSql(rowChange.getSql());
             List<Map<String, Object>> data = new ArrayList<>();
@@ -118,6 +119,7 @@ public static Dml flatMessage2Dml(FlatMessage flatMessage) {
         dml.setTable(flatMessage.getTable());
         dml.setType(flatMessage.getType());
         dml.setTs(flatMessage.getTs());
+        dml.setEs(flatMessage.getEs());
         dml.setSql(flatMessage.getSql());
         if (flatMessage.getSqlType() == null || flatMessage.getMysqlType() == null) {
             throw new RuntimeException("SqlType or mysqlType is null");

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogDecoder.java
Patch:
@@ -189,20 +189,23 @@ public static LogEvent decode(LogBuffer buffer, LogHeader header, LogContext con
                 /* updating position in context */
                 logPosition.position = header.getLogPos();
                 event.fillTable(context);
+                header.putGtid(context.getGtidSet(), gtidLogEvent);
                 return event;
             }
             case LogEvent.UPDATE_ROWS_EVENT_V1: {
                 RowsLogEvent event = new UpdateRowsLogEvent(header, buffer, descriptionEvent);
                 /* updating position in context */
                 logPosition.position = header.getLogPos();
                 event.fillTable(context);
+                header.putGtid(context.getGtidSet(), gtidLogEvent);
                 return event;
             }
             case LogEvent.DELETE_ROWS_EVENT_V1: {
                 RowsLogEvent event = new DeleteRowsLogEvent(header, buffer, descriptionEvent);
                 /* updating position in context */
                 logPosition.position = header.getLogPos();
                 event.fillTable(context);
+                header.putGtid(context.getGtidSet(), gtidLogEvent);
                 return event;
             }
             case LogEvent.ROTATE_EVENT: {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/MultiStageCoprocessor.java
Patch:
@@ -25,6 +25,4 @@ public interface MultiStageCoprocessor extends CanalLifeCycle {
     public boolean publish(LogBuffer buffer);
 
     public boolean publish(LogEvent event);
-
-    public void reset();
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -317,10 +317,10 @@ public boolean sink(EVENT event) {
                     eventSink.interrupt();
                     transactionBuffer.reset();// 重置一下缓冲队列，重新记录数据
                     binlogParser.reset();// 重新置位
-                    if (multiStageCoprocessor != null) {
+                    if (multiStageCoprocessor != null && multiStageCoprocessor.isStart()) {
                         // 处理 RejectedExecutionException
                         try {
-                            multiStageCoprocessor.reset();
+                            multiStageCoprocessor.stop();
                         } catch (Throwable t) {
                             logger.debug("multi processor rejected:", t);
                         }

File: client/src/main/java/com/alibaba/otter/canal/client/kafka/KafkaCanalConnector.java
Patch:
@@ -13,7 +13,6 @@
 import org.apache.kafka.common.serialization.StringDeserializer;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.otter.canal.client.CanalMessageDeserializer;
 import com.alibaba.otter.canal.protocol.FlatMessage;
 import com.alibaba.otter.canal.protocol.Message;
 
@@ -50,7 +49,7 @@ public KafkaCanalConnector(String servers, String topic, Integer partition, Stri
         properties.put("max.poll.records", "100");
         properties.put("key.deserializer", StringDeserializer.class.getName());
         if (!flatMessage) {
-            properties.put("value.deserializer", CanalMessageDeserializer.class.getName());
+            properties.put("value.deserializer", MessageDeserializer.class.getName());
         } else {
             properties.put("value.deserializer", StringDeserializer.class.getName());
         }

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/SessionHandler.java
Patch:
@@ -50,7 +50,7 @@ public SessionHandler(CanalServerWithEmbedded embeddedServer){
         this.embeddedServer = embeddedServer;
     }
 
-    @SuppressWarnings({ "deprecation", "deprecation" })
+    @SuppressWarnings({ "deprecation" })
     public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Exception {
         logger.info("message receives in session handler...");
         long start = System.nanoTime();

File: server/src/test/java/com/alibaba/otter/canal/server/ProtocolTest.java
Patch:
@@ -56,6 +56,7 @@ public void testSimple() throws IOException {
         }
     }
 
+    @SuppressWarnings("deprecation")
     private byte[] buildData(Message message) throws IOException {
         List<ByteString> rowEntries = message.getRawEntries();
         // message size

File: client-launcher/src/main/java/com/alibaba/otter/canal/client/adapter/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -30,7 +30,7 @@ public class CanalAdapterKafkaWorker extends AbstractCanalAdapterWorker {
     private boolean             flatMessage;
 
     public CanalAdapterKafkaWorker(String bootstrapServers, String topic, String groupId,
-                                   List<List<CanalOuterAdapter>> canalOuterAdapters, boolean flatMessage){
+        List<List<CanalOuterAdapter>> canalOuterAdapters, boolean flatMessage){
         this.canalOuterAdapters = canalOuterAdapters;
         this.groupInnerExecutorService = Executors.newFixedThreadPool(canalOuterAdapters.size());
         this.topic = topic;
@@ -171,4 +171,4 @@ public void run() {
         connector.disconnect();
         logger.info("=============> Disconnect topic: {} <=============", this.topic);
     }
-}
+}
\ No newline at end of file

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -323,7 +323,7 @@ private Message receiveMessages() throws IOException {
         Packet p = Packet.parseFrom(data);
         switch (p.getType()) {
             case MESSAGES: {
-                if (!p.getCompression().equals(Compression.NONE)) {
+                if (!p.getCompression().equals(Compression.COMPRESSIONCOMPATIBLEPROTO2)) {
                     throw new CanalClientException("compression is not supported in this connector");
                 }
 

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -323,7 +323,7 @@ private Message receiveMessages() throws IOException {
         Packet p = Packet.parseFrom(data);
         switch (p.getType()) {
             case MESSAGES: {
-                if (!p.getCompression().equals(Compression.NONE) && !p.getCompression().equals(Compression.COMPRESSIONCOMPATIBLEPROTO2)) {
+                if (!p.getCompression().equals(Compression.COMPRESSIONCOMPATIBLEPROTO2)) {
                     throw new CanalClientException("compression is not supported in this connector");
                 }
 

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -323,7 +323,7 @@ private Message receiveMessages() throws IOException {
         Packet p = Packet.parseFrom(data);
         switch (p.getType()) {
             case MESSAGES: {
-                if (!p.getCompression().equals(Compression.NONE)) {
+                if (!p.getCompression().equals(Compression.NONE) && !p.getCompression().equals(Compression.COMPRESSIONCOMPATIBLEPROTO2)) {
                     throw new CanalClientException("compression is not supported in this connector");
                 }
 

File: client/src/main/java/com/alibaba/otter/canal/client/kafka/MessageDeserializer.java
Patch:
@@ -36,7 +36,8 @@ public Message deserialize(String topic, byte[] data) {
                 CanalPacket.Packet p = CanalPacket.Packet.parseFrom(data);
                 switch (p.getType()) {
                     case MESSAGES: {
-                        if (!p.getCompression().equals(CanalPacket.Compression.NONE)) {
+                        if (!p.getCompression().equals(CanalPacket.Compression.NONE)
+                                && !p.getCompression().equals(CanalPacket.Compression.COMPRESSIONCOMPATIBLEPROTO2)) {
                             throw new CanalClientException("compression is not supported in this connector");
                         }
 

File: server/src/main/java/com/alibaba/otter/canal/kafka/CanalKafkaProducer.java
Patch:
@@ -79,8 +79,8 @@ record = new ProducerRecord<String, Message>(topic.getTopic(), topic.getPartitio
                 } else {
                     record = new ProducerRecord<String, Message>(topic.getTopic(), message);
                 }
-                Future<RecordMetadata> future = producer.send(record);
-                future.get();
+
+                producer.send(record);
             } else {
                 // 发送扁平数据json
                 List<FlatMessage> flatMessages = FlatMessage.messageConverter(message);

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -159,7 +159,7 @@ private InetSocketAddress doConnect() throws CanalClientException {
             }
             //
             Handshake handshake = Handshake.parseFrom(p.getBody());
-            supportedCompressions.addAll(handshake.getSupportedCompressionsList());
+            supportedCompressions.add(handshake.getSupportedCompressions());
             //
             ClientAuth ca = ClientAuth.newBuilder()
                 .setUsername(username != null ? username : "")

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithNettyTest.java
Patch:
@@ -66,6 +66,8 @@ public CanalInstance generate(String destination) {
 
     @Test
     public void testAuth() {
+
+
         try {
             SocketChannel channel = SocketChannel.open();
             channel.connect(new InetSocketAddress("127.0.0.1", 1088));
@@ -80,7 +82,7 @@ public void testAuth() {
             }
             //
             Handshake handshake = Handshake.parseFrom(p.getBody());
-            System.out.println(handshake.getSupportedCompressionsList());
+            System.out.println(handshake.getSupportedCompressions());
             //
             ClientAuth ca = ClientAuth.newBuilder()
                 .setUsername("")

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -159,7 +159,7 @@ private InetSocketAddress doConnect() throws CanalClientException {
             }
             //
             Handshake handshake = Handshake.parseFrom(p.getBody());
-            supportedCompressions.addAll(handshake.getSupportedCompressionsList());
+            supportedCompressions.add(handshake.getSupportedCompressions());
             //
             ClientAuth ca = ClientAuth.newBuilder()
                 .setUsername(username != null ? username : "")

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithNettyTest.java
Patch:
@@ -66,6 +66,8 @@ public CanalInstance generate(String destination) {
 
     @Test
     public void testAuth() {
+
+
         try {
             SocketChannel channel = SocketChannel.open();
             channel.connect(new InetSocketAddress("127.0.0.1", 1088));
@@ -80,7 +82,7 @@ public void testAuth() {
             }
             //
             Handshake handshake = Handshake.parseFrom(p.getBody());
-            System.out.println(handshake.getSupportedCompressionsList());
+            System.out.println(handshake.getSupportedCompressions());
             //
             ClientAuth ca = ClientAuth.newBuilder()
                 .setUsername("")

File: client-launcher/src/main/java/com/alibaba/otter/canal/client/adapter/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -33,7 +33,7 @@ public CanalAdapterKafkaWorker(String zkServers, String bootstrapServers, String
         this.topic = topic;
         this.canalDestination = topic;
         connector = KafkaCanalConnectors.newKafkaConnector(zkServers, bootstrapServers, topic, null, groupId);
-        // connector.setSessionTimeout(5L, TimeUnit.MINUTES);
+        connector.setSessionTimeout(5L, TimeUnit.MINUTES);
 
         // super.initSwitcher(topic);
     }

File: client-launcher/src/main/java/com/alibaba/otter/canal/client/adapter/loader/CanalAdapterKafkaWorker.java
Patch:
@@ -33,7 +33,7 @@ public CanalAdapterKafkaWorker(String zkServers, String bootstrapServers, String
         this.topic = topic;
         this.canalDestination = topic;
         connector = KafkaCanalConnectors.newKafkaConnector(zkServers, bootstrapServers, topic, null, groupId);
-        // connector.setSessionTimeout(5L, TimeUnit.MINUTES);
+        connector.setSessionTimeout(5L, TimeUnit.MINUTES);
 
         // super.initSwitcher(topic);
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/SocketChannel.java
Patch:
@@ -21,5 +21,7 @@ public interface SocketChannel {
 
     public SocketAddress getRemoteSocketAddress();
 
+    public SocketAddress getLocalSocketAddress();
+
     public void close();
 }

File: parse/src/test/java/com/alibaba/otter/canal/parse/MysqlBinlogDumpPerformanceTest.java
Patch:
@@ -20,12 +20,12 @@ public class MysqlBinlogDumpPerformanceTest {
 
     public static void main(String args[]) {
         final MysqlEventParser controller = new MysqlEventParser();
-        final EntryPosition startPosition = new EntryPosition("mysql-bin.001699", 120L, 100L);
+        final EntryPosition startPosition = new EntryPosition("mysql-bin.000007", 89796293L, 100L);
         controller.setConnectionCharset(Charset.forName("UTF-8"));
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
         controller.setFilterQueryDml(true);
-        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("127.0.0.1", 3328), "root", "hello"));
+        controller.setMasterInfo(new AuthenticationInfo(new InetSocketAddress("100.81.154.142", 3306), "canal", "canal"));
         controller.setMasterPosition(startPosition);
         controller.setEnableTsdb(false);
         controller.setDestination("example");

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -387,7 +387,7 @@ private InstanceConfig parseInstanceConfig(Properties properties, String destina
         return config;
     }
 
-    private String getProperty(Properties properties, String key) {
+    public String getProperty(Properties properties, String key) {
         key = StringUtils.trim(key);
         String value = System.getProperty(key);
 

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogContext.java
Patch:
@@ -4,9 +4,7 @@
 import java.util.Map;
 
 import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
-import com.alibaba.otter.canal.parse.driver.mysql.packets.MysqlGTIDSet;
 import com.taobao.tddl.dbsync.binlog.event.FormatDescriptionLogEvent;
-import com.taobao.tddl.dbsync.binlog.event.GtidLogEvent;
 import com.taobao.tddl.dbsync.binlog.event.TableMapLogEvent;
 
 /**

File: dbsync/src/test/java/com/taobao/tddl/dbsync/FetcherPerformanceTest.java
Patch:
@@ -15,9 +15,7 @@ public static void main(String args[]) {
         DirectLogFetcher fetcher = new DirectLogFetcher();
         try {
             Class.forName("com.mysql.jdbc.Driver");
-            Connection connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306",
-                "root",
-                "hello");
+            Connection connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306", "root", "hello");
             Statement statement = connection.createStatement();
             statement.execute("SET @master_binlog_checksum='@@global.binlog_checksum'");
             statement.execute("SET @mariadb_slave_capability='" + LogEvent.MARIA_SLAVE_CAPABILITY_MINE + "'");

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -8,8 +8,6 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicLong;
 
-import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
-import com.alibaba.otter.canal.parse.inbound.mysql.MysqlMultiStageCoprocessor;
 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.apache.commons.lang.math.RandomUtils;
@@ -21,11 +19,13 @@
 import com.alibaba.otter.canal.common.alarm.CanalAlarmHandler;
 import com.alibaba.otter.canal.filter.CanalEventFilter;
 import com.alibaba.otter.canal.parse.CanalEventParser;
+import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.MysqlGTIDSet;
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.exception.PositionNotFoundException;
 import com.alibaba.otter.canal.parse.exception.TableIdNotFoundException;
 import com.alibaba.otter.canal.parse.inbound.EventTransactionBuffer.TransactionFlushCallback;
+import com.alibaba.otter.canal.parse.inbound.mysql.MysqlMultiStageCoprocessor;
 import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/ParserExceptionHandler.java
Patch:
@@ -5,5 +5,6 @@
  * @since 1.0.25
  */
 public interface ParserExceptionHandler {
+
     void handle(Throwable e);
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/AbstractMysqlEventParser.java
Patch:
@@ -9,7 +9,6 @@
 import com.alibaba.otter.canal.filter.CanalEventFilter;
 import com.alibaba.otter.canal.filter.aviater.AviaterRegexFilter;
 import com.alibaba.otter.canal.parse.CanalEventParser;
-import com.alibaba.otter.canal.parse.driver.mysql.packets.MysqlGTIDSet;
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.inbound.AbstractEventParser;
 import com.alibaba.otter.canal.parse.inbound.BinlogParser;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlMultiStageCoprocessor.java
Patch:
@@ -83,8 +83,8 @@ public void start() {
             ringBufferSize,
             new BlockingWaitStrategy());
         int tc = parserThreadCount > 0 ? parserThreadCount : 1;
-        this.parserExecutor = Executors.newFixedThreadPool(tc,
-            new NamedThreadFactory("MultiStageCoprocessor-Parser-" + destination));
+        this.parserExecutor = Executors.newFixedThreadPool(tc, new NamedThreadFactory("MultiStageCoprocessor-Parser-"
+                                                                                      + destination));
 
         this.stageExecutor = Executors.newFixedThreadPool(2, new NamedThreadFactory("MultiStageCoprocessor-other-"
                                                                                     + destination));

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.alibaba.otter.canal.common.AbstractCanalLifeCycle;
 import com.alibaba.otter.canal.filter.aviater.AviaterRegexFilter;
-import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.exception.TableIdNotFoundException;
 import com.alibaba.otter.canal.parse.inbound.BinlogParser;

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/SimpleDdlParserTest.java
Patch:
@@ -226,7 +226,7 @@ public void testIndex() {
         Assert.assertEquals("retl", result.getSchemaName());
         Assert.assertEquals("retl_mark", result.getTableName());
 
-        //test index name contains 'on' -- version
+        // test index name contains 'on' -- version
         queryString = "create index schema_new_index_version_s_idx on q_contract_account (contract_id,main_contract_id)";
         result = SimpleDdlParser.parse(queryString, "retl");
         Assert.assertNotNull(result);

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -435,7 +435,7 @@ public void cleanUntil(Position position) throws CanalStoreException {
                     if (batchMode.isMemSize()) {
                         ackMemSize.addAndGet(memsize);
                         // 尝试清空buffer中的内存，将ack之前的内存全部释放掉
-                        for (long index = sequence + 1; index <= next; index++) {
+                        for (long index = sequence + 1; index < next; index++) {
                             entries[getIndex(index)] = null;// 设置为null
                         }
                     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -179,6 +179,8 @@ public void dump(GTIDSet gtidSet, SinkFunction func) throws IOException {
             fetcher.start(connector.getChannel());
             LogDecoder decoder = new LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);
             LogContext context = new LogContext();
+            // fix bug: #890 将gtid传输至context中，供decode使用
+            context.setGtidSet(gtidSet);
             while (fetcher.fetch()) {
                 accumulateReceivedBytes(fetcher.limit());
                 LogEvent event = null;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -179,6 +179,8 @@ public void dump(GTIDSet gtidSet, SinkFunction func) throws IOException {
             fetcher.start(connector.getChannel());
             LogDecoder decoder = new LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);
             LogContext context = new LogContext();
+            // fix bug: #890 将gtid传输至context中，供decode使用
+            context.setGtidSet(gtidSet);
             while (fetcher.fetch()) {
                 accumulateReceivedBytes(fetcher.limit());
                 LogEvent event = null;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/SimpleDdlParser.java
Patch:
@@ -44,8 +44,8 @@ public class SimpleDdlParser {
      * http://dev.mysql.com/doc/refman/5.6/en/create-index.html
      * </pre>
      */
-    public static final String CREATE_INDEX_PATTERN   = "^\\s*CREATE\\s*(UNIQUE)?(FULLTEXT)?(SPATIAL)?\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
-    public static final String DROP_INDEX_PATTERN     = "^\\s*DROP\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
+    public static final String CREATE_INDEX_PATTERN   = "^\\s*CREATE\\s*(UNIQUE)?(FULLTEXT)?(SPATIAL)?\\s*INDEX\\s*(.*?)\\s+ON\\s+(.*?)$";
+    public static final String DROP_INDEX_PATTERN     = "^\\s*DROP\\s*INDEX\\s*(.*?)\\s+ON\\s+(.*?)$";
 
     public static DdlResult parse(String queryString, String schmeaName) {
         queryString = removeComment(queryString); // 去除/* */的sql注释内容

File: prometheus/src/main/java/com/alibaba/otter/canal/prometheus/impl/EntryCollector.java
Patch:
@@ -53,9 +53,9 @@ public List<MetricFamilySamples> collect() {
         for (EntryMetricsHolder emh : instances.values()) {
             long now = System.currentTimeMillis();
             long latest = emh.latestExecTime.get();
-            if (now >= latest) {
-                delay.addMetric(emh.destLabelValues, (now - latest));
-            }
+            // execTime > now，delay显示为0
+            long d = (now >= latest) ? (now - latest) : 0;
+            delay.addMetric(emh.destLabelValues, d);
             transactions.addMetric(emh.destLabelValues, emh.transactionCounter.doubleValue());
         }
         mfs.add(delay);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/SimpleDdlParser.java
Patch:
@@ -44,8 +44,8 @@ public class SimpleDdlParser {
      * http://dev.mysql.com/doc/refman/5.6/en/create-index.html
      * </pre>
      */
-    public static final String CREATE_INDEX_PATTERN   = "^\\s*CREATE\\s*(UNIQUE)?(FULLTEXT)?(SPATIAL)?\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
-    public static final String DROP_INDEX_PATTERN     = "^\\s*DROP\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
+    public static final String CREATE_INDEX_PATTERN   = "^\\s*CREATE\\s*(UNIQUE)?(FULLTEXT)?(SPATIAL)?\\s*INDEX\\s*(.*?)\\s+ON\\s+(.*?)$";
+    public static final String DROP_INDEX_PATTERN     = "^\\s*DROP\\s*INDEX\\s*(.*?)\\s+ON\\s+(.*?)$";
 
     public static DdlResult parse(String queryString, String schmeaName) {
         queryString = removeComment(queryString); // 去除/* */的sql注释内容

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -170,7 +170,7 @@ private Entry parseHeartbeatLogEvent(HeartbeatLogEvent logEvent) {
         return entryBuilder.build();
     }
 
-    public Entry parseGTIDLogEvent(GtidLogEvent logEvent) {
+    private Entry parseGTIDLogEvent(GtidLogEvent logEvent) {
         LogHeader logHeader = logEvent.getHeader();
         String value = logEvent.getSid().toString() + ":" + logEvent.getGno();
         Pair.Builder builder = Pair.newBuilder();

File: client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/config/MappingConfigLoader.java
Patch:
@@ -45,7 +45,7 @@ public static Map<String, MappingConfig> load() {
                 continue;
             }
             c = c.trim();
-            if (c.startsWith("#")) {
+            if (c.equals("") || c.startsWith("#")) {
                 continue;
             }
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -15,6 +15,7 @@ public class CanalConstants {
     public static final String CANAL_ID                          = ROOT + "." + "id";
     public static final String CANAL_IP                          = ROOT + "." + "ip";
     public static final String CANAL_PORT                        = ROOT + "." + "port";
+    public static final String CANAL_METRICS_PULL_PORT           = ROOT + "." + "metrics.pull.port";
     public static final String CANAL_ZKSERVERS                   = ROOT + "." + "zkServers";
     public static final String CANAL_WITHOUT_NETTY               = ROOT + "." + "withoutNetty";
 

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -545,6 +545,9 @@ private boolean isDdl(EventType type) {
     }
 
     // ================ setter / getter ==================
+    public int getBufferSize() {
+        return this.bufferSize;
+    }
 
     public void setBufferSize(int bufferSize) {
         this.bufferSize = bufferSize;

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -417,7 +417,7 @@ public void cleanUntil(Position position) throws CanalStoreException {
                     if (batchMode.isMemSize()) {
                         ackMemSize.addAndGet(memsize);
                         // 尝试清空buffer中的内存，将ack之前的内存全部释放掉
-                        for (long index = sequence + 1; index < next; index++) {
+                        for (long index = sequence + 1; index <= next; index++) {
                             entries[getIndex(index)] = null;// 设置为null
                         }
                     }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -15,7 +15,6 @@ public class CanalConstants {
     public static final String CANAL_ID                          = ROOT + "." + "id";
     public static final String CANAL_IP                          = ROOT + "." + "ip";
     public static final String CANAL_PORT                        = ROOT + "." + "port";
-    public static final String CANAL_METRICS_PULL_PORT           = ROOT + "." + "metrics.pull.port";
     public static final String CANAL_ZKSERVERS                   = ROOT + "." + "zkServers";
     public static final String CANAL_WITHOUT_NETTY               = ROOT + "." + "withoutNetty";
 

File: prometheus/src/main/java/com/alibaba/otter/canal/prometheus/impl/ParserCollector.java
Patch:
@@ -21,6 +21,7 @@
 
 import static com.alibaba.otter.canal.prometheus.CanalInstanceExports.DEST;
 import static com.alibaba.otter.canal.prometheus.CanalInstanceExports.DEST_LABELS_LIST;
+import static java.util.concurrent.TimeUnit.NANOSECONDS;
 
 /**
  * @author Chuanyi Li

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/FileLogFetcher.java
Patch:
@@ -168,7 +168,9 @@ public boolean fetch() throws IOException {
      * @see com.taobao.tddl.dbsync.binlog.LogFetcher#close()
      */
     public void close() throws IOException {
-        if (fin != null) fin.close();
+        if (fin != null) {
+            fin.close();
+        }
 
         fin = null;
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/exception/ServerIdNotMatchException.java
Patch:
@@ -8,6 +8,8 @@
  */
 public class ServerIdNotMatchException extends CanalException{
 
+    private static final long serialVersionUID = -6124989280379293953L;
+
     public ServerIdNotMatchException(String errorCode) {
         super(errorCode);
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/MultiStageCoprocessor.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.otter.canal.common.CanalLifeCycle;
 import com.taobao.tddl.dbsync.binlog.LogBuffer;
+import com.taobao.tddl.dbsync.binlog.LogEvent;
 
 /**
  * 针对解析器提供一个多阶段协同的处理
@@ -23,7 +24,7 @@ public interface MultiStageCoprocessor extends CanalLifeCycle {
      */
     public boolean publish(LogBuffer buffer);
 
-    public boolean publish(LogBuffer buffer, String binlogFileName);
+    public boolean publish(LogEvent event);
 
     public void reset();
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/HttpHelper.java
Patch:
@@ -155,6 +155,7 @@ public boolean isTrusted(X509Certificate[] x509Certificates, String s) throws Ce
                     .register("https", new SSLConnectionSocketFactory(sslContext, NoopHostnameVerifier.INSTANCE))
                     .build()))
                 .build();
+
             // ---------------- 创建支持https 的client成功---------
 
             URI uri = new URIBuilder(url).build();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -68,7 +68,8 @@ public boolean apply(EntryPosition position, String schema, String ddl, String e
 
             try {
                 // druid暂时flush privileges语法解析有问题
-                if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "flush")) {
+                if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "flush")
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "grant")) {
                     repository.console(ddl);
                 }
             } catch (Throwable e) {

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -15,6 +15,7 @@ public class CanalConstants {
     public static final String CANAL_ID                          = ROOT + "." + "id";
     public static final String CANAL_IP                          = ROOT + "." + "ip";
     public static final String CANAL_PORT                        = ROOT + "." + "port";
+    public static final String CANAL_METRICS_PULL_PORT           = ROOT + "." + "metrics.pull.port";
     public static final String CANAL_ZKSERVERS                   = ROOT + "." + "zkServers";
     public static final String CANAL_WITHOUT_NETTY               = ROOT + "." + "withoutNetty";
 

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -545,6 +545,9 @@ private boolean isDdl(EventType type) {
     }
 
     // ================ setter / getter ==================
+    public int getBufferSize() {
+        return this.bufferSize;
+    }
 
     public void setBufferSize(int bufferSize) {
         this.bufferSize = bufferSize;

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -417,7 +417,7 @@ public void cleanUntil(Position position) throws CanalStoreException {
                     if (batchMode.isMemSize()) {
                         ackMemSize.addAndGet(memsize);
                         // 尝试清空buffer中的内存，将ack之前的内存全部释放掉
-                        for (long index = sequence + 1; index < next; index++) {
+                        for (long index = sequence + 1; index <= next; index++) {
                             entries[getIndex(index)] = null;// 设置为null
                         }
                     }

File: store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java
Patch:
@@ -417,7 +417,7 @@ public void cleanUntil(Position position) throws CanalStoreException {
                     if (batchMode.isMemSize()) {
                         ackMemSize.addAndGet(memsize);
                         // 尝试清空buffer中的内存，将ack之前的内存全部释放掉
-                        for (long index = sequence + 1; index < next; index++) {
+                        for (long index = sequence + 1; index <= next; index++) {
                             entries[getIndex(index)] = null;// 设置为null
                         }
                     }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -15,7 +15,6 @@ public class CanalConstants {
     public static final String CANAL_ID                          = ROOT + "." + "id";
     public static final String CANAL_IP                          = ROOT + "." + "ip";
     public static final String CANAL_PORT                        = ROOT + "." + "port";
-    public static final String CANAL_METRICS_PULL_PORT           = ROOT + "." + "metrics.pull.port";
     public static final String CANAL_ZKSERVERS                   = ROOT + "." + "zkServers";
     public static final String CANAL_WITHOUT_NETTY               = ROOT + "." + "withoutNetty";
 

File: prometheus/src/main/java/com/alibaba/otter/canal/prometheus/impl/ParserCollector.java
Patch:
@@ -21,6 +21,7 @@
 
 import static com.alibaba.otter.canal.prometheus.CanalInstanceExports.DEST;
 import static com.alibaba.otter.canal.prometheus.CanalInstanceExports.DEST_LABELS_LIST;
+import static java.util.concurrent.TimeUnit.NANOSECONDS;
 
 /**
  * @author Chuanyi Li

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/FileLogFetcher.java
Patch:
@@ -168,7 +168,9 @@ public boolean fetch() throws IOException {
      * @see com.taobao.tddl.dbsync.binlog.LogFetcher#close()
      */
     public void close() throws IOException {
-        if (fin != null) fin.close();
+        if (fin != null) {
+            fin.close();
+        }
 
         fin = null;
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/exception/ServerIdNotMatchException.java
Patch:
@@ -8,6 +8,8 @@
  */
 public class ServerIdNotMatchException extends CanalException{
 
+    private static final long serialVersionUID = -6124989280379293953L;
+
     public ServerIdNotMatchException(String errorCode) {
         super(errorCode);
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/MultiStageCoprocessor.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.otter.canal.common.CanalLifeCycle;
 import com.taobao.tddl.dbsync.binlog.LogBuffer;
+import com.taobao.tddl.dbsync.binlog.LogEvent;
 
 /**
  * 针对解析器提供一个多阶段协同的处理
@@ -23,7 +24,7 @@ public interface MultiStageCoprocessor extends CanalLifeCycle {
      */
     public boolean publish(LogBuffer buffer);
 
-    public boolean publish(LogBuffer buffer, String binlogFileName);
+    public boolean publish(LogEvent event);
 
     public void reset();
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/rds/HttpHelper.java
Patch:
@@ -155,6 +155,7 @@ public boolean isTrusted(X509Certificate[] x509Certificates, String s) throws Ce
                     .register("https", new SSLConnectionSocketFactory(sslContext, NoopHostnameVerifier.INSTANCE))
                     .build()))
                 .build();
+
             // ---------------- 创建支持https 的client成功---------
 
             URI uri = new URIBuilder(url).build();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -68,7 +68,8 @@ public boolean apply(EntryPosition position, String schema, String ddl, String e
 
             try {
                 // druid暂时flush privileges语法解析有问题
-                if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "flush")) {
+                if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "flush")
+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), "grant")) {
                     repository.console(ddl);
                 }
             } catch (Throwable e) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -88,8 +88,6 @@ public class LogEventConvert extends AbstractCanalLifeCycle implements BinlogPar
     private volatile AviaterRegexFilter nameBlackFilter;
 
     private TableMetaCache              tableMetaCache;
-    private String                      binlogFileName      = "mysql-bin.000001";
-
     private Charset                     charset             = Charset.defaultCharset();
     private boolean                     filterQueryDcl      = false;
     private boolean                     filterQueryDml      = false;
@@ -761,6 +759,8 @@ private boolean parseOneRow(RowData.Builder rowDataBuilder, RowsLogEvent event,
                         } else {
                             // byte数组，直接使用iso-8859-1保留对应编码，浪费内存
                             columnBuilder.setValue(new String((byte[]) value, ISO_8859_1));
+                            // columnBuilder.setValueBytes(ByteString.copyFrom((byte[])
+                            // value));
                             javaType = Types.BLOB;
                         }
                         break;

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -34,6 +34,7 @@
 import com.alibaba.otter.canal.instance.manager.CanalConfigClient;
 import com.alibaba.otter.canal.instance.manager.ManagerCanalInstanceGenerator;
 import com.alibaba.otter.canal.instance.spring.SpringCanalInstanceGenerator;
+import com.alibaba.otter.canal.parse.CanalEventParser;
 import com.alibaba.otter.canal.server.embedded.CanalServerWithEmbedded;
 import com.alibaba.otter.canal.server.exception.CanalServerException;
 import com.alibaba.otter.canal.server.netty.CanalServerWithNetty;
@@ -303,7 +304,7 @@ public CanalInstance generate(String destination) {
                     return instanceGenerator.generate(destination);
                 } else if (config.getMode().isSpring()) {
                     SpringCanalInstanceGenerator instanceGenerator = new SpringCanalInstanceGenerator();
-                    synchronized (this) {
+                    synchronized (CanalEventParser.class) {
                         try {
                             // 设置当前正在加载的通道，加载spring查找文件时会用到该变量
                             System.setProperty(CanalConstants.CANAL_DESTINATION_PROPERTY, destination);

File: kafka/src/main/java/com/alibaba/otter/canal/kafka/producer/CanalKafkaStarter.java
Patch:
@@ -121,7 +121,7 @@ private static void worker(CanalDestination destination) {
                     Message message = server.getWithoutAck(clientIdentity, kafkaProperties.getCanalBatchSize()); // 获取指定数量的数据
                     long batchId = message.getId();
                     try {
-                        int size = message.getEntries().size();
+                        int size = message.isRaw() ?  message.getRawEntries().size() : message.getEntries().size();
                         if (batchId != -1 && size != 0) {
                             if (!StringUtils.isEmpty(destination.getTopic())) {
                                 Topic topic = new Topic();

File: kafka/src/main/java/com/alibaba/otter/canal/kafka/producer/CanalKafkaStarter.java
Patch:
@@ -121,7 +121,7 @@ private static void worker(CanalDestination destination) {
                     Message message = server.getWithoutAck(clientIdentity, kafkaProperties.getCanalBatchSize()); // 获取指定数量的数据
                     long batchId = message.getId();
                     try {
-                        int size = message.getEntries().size();
+                        int size = message.isRaw() ?  message.getRawEntries().size() : message.getEntries().size();
                         if (batchId != -1 && size != 0) {
                             if (!StringUtils.isEmpty(destination.getTopic())) {
                                 Topic topic = new Topic();

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -32,7 +32,7 @@ public class MysqlConnector {
     private String              password;
 
     private byte                charsetNumber     = 33;
-    private String              defaultSchema     = "retl";
+    private String              defaultSchema     = "test";
     private int                 soTimeout         = 30 * 1000;
     private int                 connTimeout       = 5 * 1000;
     private int                 receiveBufferSize = 16 * 1024;

File: kafka-client/src/main/java/com/alibaba/otter/canal/kafka/client/MessageDeserializer.java
Patch:
@@ -29,7 +29,9 @@ public void configure(Map<String, ?> configs, boolean isKey) {
     @Override
     public Message deserialize(String topic, byte[] data) {
         try {
-            if (data == null) return null;
+            if (data == null) {
+                return null;
+            }
             else {
                 CanalPacket.Packet p = CanalPacket.Packet.parseFrom(data);
                 switch (p.getType()) {

File: kafka-client/src/main/java/com/alibaba/otter/canal/kafka/client/running/ClientRunningData.java
Patch:
@@ -8,8 +8,8 @@
  */
 public class ClientRunningData {
 
-    private String groupId;
-    private String address;
+    private String  groupId;
+    private String  address;
     private boolean active = true;
 
     public String getGroupId() {

File: kafka/src/main/java/com/alibaba/otter/canal/kafka/CanalServerStarter.java
Patch:
@@ -17,9 +17,9 @@
  */
 public class CanalServerStarter {
 
-    private static final String CLASSPATH_URL_PREFIX = "classpath:";
-    private static final Logger logger               = LoggerFactory.getLogger(CanalServerStarter.class);
-    private volatile static boolean running          = false;
+    private static final String     CLASSPATH_URL_PREFIX = "classpath:";
+    private static final Logger     logger               = LoggerFactory.getLogger(CanalServerStarter.class);
+    private volatile static boolean running              = false;
 
     public static void init() {
         try {

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/GtidLogEvent.java
Patch:
@@ -44,13 +44,14 @@ public GtidLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEven
         gno = buffer.getLong64();
 
         // support gtid lastCommitted and sequenceNumber
-        // 42 = 1+16+8+1+8+8
-        if (buffer.capacity() > 42 && buffer.getUint8() == LOGICAL_TIMESTAMP_TYPE_CODE) {
+        // fix bug #776
+        if (buffer.hasRemaining() && buffer.remaining() > 16 && buffer.getUint8() == LOGICAL_TIMESTAMP_TYPE_CODE) {
             lastCommitted = buffer.getLong64();
             sequenceNumber = buffer.getLong64();
         }
 
 
+
         // ignore gtid info read
         // sid.copy_from((uchar *)ptr_buffer);
         // ptr_buffer+= ENCODED_SID_LENGTH;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/GtidLogEvent.java
Patch:
@@ -44,13 +44,14 @@ public GtidLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEven
         gno = buffer.getLong64();
 
         // support gtid lastCommitted and sequenceNumber
-        // 42 = 1+16+8+1+8+8
-        if (buffer.capacity() > 42 && buffer.getUint8() == LOGICAL_TIMESTAMP_TYPE_CODE) {
+        // fix bug #776
+        if (buffer.hasRemaining() && buffer.remaining() > 16 && buffer.getUint8() == LOGICAL_TIMESTAMP_TYPE_CODE) {
             lastCommitted = buffer.getLong64();
             sequenceNumber = buffer.getLong64();
         }
 
 
+
         // ignore gtid info read
         // sid.copy_from((uchar *)ptr_buffer);
         // ptr_buffer+= ENCODED_SID_LENGTH;

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/client/BinlogDumpCommandPacket.java
Patch:
@@ -54,7 +54,7 @@ public byte[] toBytes() throws IOException {
         // 1. write 4 bytes bin-log position to start at
         ByteHelper.writeUnsignedIntLittleEndian(binlogPosition, out);
         // 2. write 2 bytes bin-log flags
-        int binlog_flags = BINLOG_DUMP_NON_BLOCK;
+        int binlog_flags = 0;
         binlog_flags |= BINLOG_SEND_ANNOTATE_ROWS_EVENT;
         out.write(binlog_flags);
         out.write(0x00);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/client/BinlogDumpCommandPacket.java
Patch:
@@ -54,7 +54,7 @@ public byte[] toBytes() throws IOException {
         // 1. write 4 bytes bin-log position to start at
         ByteHelper.writeUnsignedIntLittleEndian(binlogPosition, out);
         // 2. write 2 bytes bin-log flags
-        int binlog_flags = BINLOG_DUMP_NON_BLOCK;
+        int binlog_flags = 0;
         binlog_flags |= BINLOG_SEND_ANNOTATE_ROWS_EVENT;
         out.write(binlog_flags);
         out.write(0x00);

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -42,8 +42,8 @@ public void testSimple() {
         controller.setEventFilter(new AviaterRegexFilter("test\\..*"));
         controller.setEventBlackFilter(new AviaterRegexFilter("canal_tsdb\\..*"));
         controller.setParallel(true);
-        controller.setParallelBufferSize(4096);
-        controller.setParallelThreadSize(16);
+        controller.setParallelBufferSize(256);
+        controller.setParallelThreadSize(2);
         controller.setIsGTIDMode(false);
         controller.setEventSink(new AbstractCanalEventSinkTest<List<Entry>>() {
 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannelPool.java
Patch:
@@ -16,8 +16,6 @@ public static BioSocketChannel open(SocketAddress address) throws Exception {
         socket.setKeepAlive(true);
         socket.setReuseAddress(true);
         socket.connect(address, BioSocketChannel.DEFAULT_CONNECT_TIMEOUT);
-        System.out.println(socket.getReceiveBufferSize());
-        System.out.println(socket.getSendBufferSize());
         return new BioSocketChannel(socket);
     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/DirectLogFetcher.java
Patch:
@@ -64,9 +64,6 @@ public void start(SocketChannel channel) throws IOException {
         if ("1".equals(dbsemi)) {
             issemi = true;
         }
-        // 和mysql driver一样，提供buffer机制，提升读取binlog速度
-        // this.input = new
-        // BufferedInputStream(channel.socket().getInputStream(), 16384);
     }
 
     /**

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.otter.canal.parse.driver.mysql.socket;
 
+import java.io.BufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -24,7 +25,7 @@ public class BioSocketChannel implements SocketChannel {
 
     BioSocketChannel(Socket socket) throws IOException{
         this.socket = socket;
-        this.input = socket.getInputStream();
+        this.input = new BufferedInputStream(socket.getInputStream(), 16384);
         this.output = socket.getOutputStream();
     }
 
@@ -164,5 +165,4 @@ public void close() {
         this.socket = null;
     }
 
-
 }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannelPool.java
Patch:
@@ -16,6 +16,8 @@ public static BioSocketChannel open(SocketAddress address) throws Exception {
         socket.setKeepAlive(true);
         socket.setReuseAddress(true);
         socket.connect(address, BioSocketChannel.DEFAULT_CONNECT_TIMEOUT);
+        System.out.println(socket.getReceiveBufferSize());
+        System.out.println(socket.getSendBufferSize());
         return new BioSocketChannel(socket);
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -41,6 +41,9 @@ public void testSimple() {
         controller.setTsdbSpringXml("classpath:tsdb/h2-tsdb.xml");
         controller.setEventFilter(new AviaterRegexFilter("test\\..*"));
         controller.setEventBlackFilter(new AviaterRegexFilter("canal_tsdb\\..*"));
+        controller.setParallel(true);
+        controller.setParallelBufferSize(4096);
+        controller.setParallelThreadSize(16);
         controller.setIsGTIDMode(false);
         controller.setEventSink(new AbstractCanalEventSinkTest<List<Entry>>() {
 

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -319,7 +319,8 @@ public Message getWithoutAck(int batchSize, Long timeout, TimeUnit unit) throws
     }
 
     private Message receiveMessages() throws IOException {
-        Packet p = Packet.parseFrom(readNextPacket());
+        byte[] data = readNextPacket();
+        Packet p = Packet.parseFrom(data);
         switch (p.getType()) {
             case MESSAGES: {
                 if (!p.getCompression().equals(Compression.NONE)) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/MultiStageCoprocessor.java
Patch:
@@ -21,9 +21,9 @@ public interface MultiStageCoprocessor extends CanalLifeCycle {
     /**
      * 网络数据投递
      */
-    public void publish(LogBuffer buffer);
+    public boolean publish(LogBuffer buffer);
 
-    public void publish(LogBuffer buffer, String binlogFileName);
+    public boolean publish(LogBuffer buffer, String binlogFileName);
 
     public void reset();
 }

File: server/src/main/java/com/alibaba/otter/canal/server/netty/NettyUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class NettyUtils {
 
     private static final Logger logger           = LoggerFactory.getLogger(NettyUtils.class);
-    private static int          HEADER_LENGTH    = 4;
+    public static int           HEADER_LENGTH    = 4;
     public static Timer         hashedWheelTimer = new HashedWheelTimer();
 
     public static void write(Channel channel, byte[] body, ChannelFutureListener channelFutureListner) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/DatabaseTableMeta.java
Patch:
@@ -70,7 +70,9 @@ public boolean init(final String destination) {
 
             @Override
             public Thread newThread(Runnable r) {
-                return new Thread(r, "[scheduler-table-meta-snapshot]");
+                Thread thread = new Thread(r, "[scheduler-table-meta-snapshot]");
+                thread.setDaemon(true);
+                return thread;
             }
         });
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -94,7 +94,7 @@ public TableMeta find(String schema, String table) {
                 tableMeta = tableMetas.get(keys);
                 if (tableMeta == null) {
                     Schema schemaRep = repository.findSchema(schema);
-                    if (schema == null) {
+                    if (schemaRep == null) {
                         return null;
                     }
                     SchemaObject data = schemaRep.findTable(table);

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/HeartBeatEntryEventHandler.java
Patch:
@@ -18,7 +18,7 @@ public class HeartBeatEntryEventHandler extends AbstractCanalEventDownStreamHand
     public List<Event> before(List<Event> events) {
         boolean existHeartBeat = false;
         for (Event event : events) {
-            if (event.getEntry().getEntryType() == EntryType.HEARTBEAT) {
+            if (event.getEntryType() == EntryType.HEARTBEAT) {
                 existHeartBeat = true;
             }
         }
@@ -29,7 +29,7 @@ public List<Event> before(List<Event> events) {
             // 目前heartbeat和其他事件是分离的，保险一点还是做一下检查处理
             List<Event> result = new ArrayList<Event>();
             for (Event event : events) {
-                if (event.getEntry().getEntryType() != EntryType.HEARTBEAT) {
+                if (event.getEntryType() != EntryType.HEARTBEAT) {
                     result.add(event);
                 }
             }

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/group/TimelineBarrier.java
Patch:
@@ -139,7 +139,7 @@ private void single(long timestamp) throws InterruptedException {
     }
 
     private Long getTimestamp(Event event) {
-        return event.getEntry().getHeader().getExecuteTime();
+        return event.getExecuteTime();
     }
 
 }

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/group/TimelineTransactionBarrier.java
Patch:
@@ -113,11 +113,11 @@ private void reset() {
     }
 
     private boolean isTransactionBegin(Event event) {
-        return event.getEntry().getEntryType() == EntryType.TRANSACTIONBEGIN;
+        return event.getEntryType() == EntryType.TRANSACTIONBEGIN;
     }
 
     private boolean isTransactionEnd(Event event) {
-        return event.getEntry().getEntryType() == EntryType.TRANSACTIONEND;
+        return event.getEntryType() == EntryType.TRANSACTIONEND;
     }
 
 }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogContext.java
Patch:
@@ -58,7 +58,6 @@ public final void clearAllTables() {
 
     public void reset() {
         formatDescription = FormatDescriptionLogEvent.FORMAT_DESCRIPTION_EVENT_5_x;
-
         mapOfTable.clear();
     }
 }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogDecoder.java
Patch:
@@ -109,6 +109,8 @@ public LogEvent decode(LogBuffer buffer, LogContext context) throws IOException
                         /* Decoding binary-log to event */
                         event = decode(buffer, header, context);
                         if (event != null) {
+                            // set logFileName
+                            event.getHeader().setLogFileName(context.getLogPosition().getFileName());
                             event.setSemival(buffer.semival);
                         }
                     } catch (IOException e) {

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogEvent.java
Patch:
@@ -194,7 +194,7 @@ public final BitSet getChangeColumns() {
     }
 
     public final RowsLogBuffer getRowsBuf(String charsetName) {
-        return new RowsLogBuffer(rowsBuf.duplicate(), columnLen, charsetName);
+        return new RowsLogBuffer(rowsBuf, columnLen, charsetName);
     }
 
     public final int getFlags(final int flags) {

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/SocketChannel.java
Patch:
@@ -15,6 +15,8 @@ public interface SocketChannel {
 
     public byte[] read(int readSize, int timeout) throws IOException;
 
+    public void read(byte[] data, int off, int len, int timeout) throws IOException;
+
     public boolean isConnected();
 
     public SocketAddress getRemoteSocketAddress();

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/client/BinlogDumpCommandPacket.java
Patch:
@@ -54,7 +54,7 @@ public byte[] toBytes() throws IOException {
         // 1. write 4 bytes bin-log position to start at
         ByteHelper.writeUnsignedIntLittleEndian(binlogPosition, out);
         // 2. write 2 bytes bin-log flags
-        int binlog_flags = 0;
+        int binlog_flags = BINLOG_DUMP_NON_BLOCK;
         binlog_flags |= BINLOG_SEND_ANNOTATE_ROWS_EVENT;
         out.write(binlog_flags);
         out.write(0x00);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannelPool.java
Patch:
@@ -11,8 +11,6 @@ public abstract class BioSocketChannelPool {
 
     public static BioSocketChannel open(SocketAddress address) throws Exception {
         Socket socket = new Socket();
-        socket.setReceiveBufferSize(32 * 1024);
-        socket.setSendBufferSize(32 * 1024);
         socket.setSoTimeout(BioSocketChannel.SO_TIMEOUT);
         socket.setTcpNoDelay(true);
         socket.setKeepAlive(true);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/NettySocketChannelPool.java
Patch:
@@ -37,11 +37,10 @@ public abstract class NettySocketChannelPool {
     static {
         boot.group(group)
             .channel(NioSocketChannel.class)
-            .option(ChannelOption.SO_RCVBUF, 32 * 1024)
-            .option(ChannelOption.SO_SNDBUF, 32 * 1024)
             .option(ChannelOption.TCP_NODELAY, true)
             // 如果是延时敏感型应用，建议关闭Nagle算法
             .option(ChannelOption.SO_KEEPALIVE, true)
+            .option(ChannelOption.SO_REUSEADDR, true)
             .option(ChannelOption.RCVBUF_ALLOCATOR, AdaptiveRecvByteBufAllocator.DEFAULT)
             .option(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT)
             //

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -267,7 +267,8 @@ private Entry parseQueryEvent(QueryLogEvent event, boolean isSeek) {
 
             Header header = createHeader(binlogFileName, event.getHeader(), schemaName, tableName, type);
             RowChange.Builder rowChangeBuider = RowChange.newBuilder();
-            if (type != EventType.QUERY) {
+            if (type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE
+                && type != EventType.DELETE) {
                 rowChangeBuider.setIsDdl(true);
             }
             rowChangeBuider.setSql(queryString);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -763,7 +763,7 @@ public boolean sink(LogEvent event) {
                         }
 
                         if (StringUtils.equals(endPosition.getJournalName(), logfilename)
-                            && endPosition.getPosition() < logfileoffset) {
+                            && endPosition.getPosition() <= logfileoffset) {
                             return false;
                         }
 

File: client/src/main/java/com/alibaba/otter/canal/client/CanalConnector.java
Patch:
@@ -152,6 +152,7 @@ public interface CanalConnector {
 
     /**
      * 中断的阻塞，用于优雅停止client
+     * 
      * @throws CanalClientException
      */
     void stopRunning() throws CanalClientException;

File: common/src/main/java/com/alibaba/otter/canal/common/zookeeper/running/ServerRunningMonitor.java
Patch:
@@ -4,7 +4,6 @@
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.TimeUnit;
 
-import com.alibaba.otter.canal.common.CanalException;
 import org.I0Itec.zkclient.IZkDataListener;
 import org.I0Itec.zkclient.exception.ZkException;
 import org.I0Itec.zkclient.exception.ZkInterruptedException;

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -434,13 +434,13 @@ public void handleSessionEstablishmentError(Throwable error) throws Exception {
         }
 
         // 启动网络接口
-        if(canalServer!=null) {
+        if (canalServer != null) {
             canalServer.start();
         }
     }
 
     public void stop() throws Throwable {
-        if(canalServer!=null) {
+        if (canalServer != null) {
             canalServer.stop();
         }
 

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -59,6 +59,7 @@ public void run() {
 
     private static void setGlobalUncaughtExceptionHandler() {
         Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
+
             @Override
             public void uncaughtException(Thread t, Throwable e) {
                 logger.error("UnCaughtException", e);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -53,7 +53,7 @@ public MysqlConnector(InetSocketAddress address, String username, String passwor
         String addr = address.getHostString();
         int port = address.getPort();
         this.address = new InetSocketAddress(addr, port);
-        
+
         this.username = username;
         this.password = password;
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/GTIDSet.java
Patch:
@@ -3,8 +3,7 @@
 import java.io.IOException;
 
 /**
- * Created by hiwjd on 2018/4/23.
- * hiwjd0@gmail.com
+ * Created by hiwjd on 2018/4/23. hiwjd0@gmail.com
  */
 public interface GTIDSet {
 
@@ -17,6 +16,7 @@ public interface GTIDSet {
 
     /**
      * 更新当前实例
+     * 
      * @param str
      * @throws Exception
      */

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/NettySocketChannelPool.java
Patch:
@@ -29,8 +29,8 @@
 @SuppressWarnings({ "rawtypes", "deprecation" })
 public abstract class NettySocketChannelPool {
 
-    private static EventLoopGroup              group     = new NioEventLoopGroup();                         // 非阻塞IO线程组
-    private static Bootstrap                   boot      = new Bootstrap();                                 // 主
+    private static EventLoopGroup              group     = new NioEventLoopGroup();                              // 非阻塞IO线程组
+    private static Bootstrap                   boot      = new Bootstrap();                                      // 主
     private static Map<Channel, SocketChannel> chManager = new ConcurrentHashMap<Channel, SocketChannel>();
     private static final Logger                logger    = LoggerFactory.getLogger(NettySocketChannelPool.class);
 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/utils/ByteHelper.java
Patch:
@@ -108,7 +108,7 @@ public static byte[] readBinaryCodedLengthBytes(byte[] data, int index) throws I
 
         return out.toByteArray();
     }
-    
+
     public static void write8ByteUnsignedIntLittleEndian(long data, ByteArrayOutputStream out) {
         out.write((byte) (data & 0xFF));
         out.write((byte) (data >>> 8));
@@ -119,7 +119,7 @@ public static void write8ByteUnsignedIntLittleEndian(long data, ByteArrayOutputS
         out.write((byte) (data >>> 48));
         out.write((byte) (data >>> 56));
     }
-    
+
     public static void writeUnsignedIntLittleEndian(long data, ByteArrayOutputStream out) {
         out.write((byte) (data & 0xFF));
         out.write((byte) (data >>> 8));

File: example/src/main/java/com/alibaba/otter/canal/example/AbstractCanalClientTest.java
Patch:
@@ -13,7 +13,6 @@
 import org.springframework.util.CollectionUtils;
 
 import com.alibaba.otter.canal.client.CanalConnector;
-import com.alibaba.otter.canal.client.impl.ClusterCanalConnector;
 import com.alibaba.otter.canal.protocol.CanalEntry.Column;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
 import com.alibaba.otter.canal.protocol.CanalEntry.EntryType;

File: kafka-client/src/main/java/com/alibaba/otter/canal/kafka/client/KafkaCanalConnectors.java
Patch:
@@ -7,6 +7,7 @@
  * @version 1.0.0
  */
 public class KafkaCanalConnectors {
+
     /**
      * 创建kafka客户端链接
      *
@@ -28,7 +29,7 @@ public static KafkaCanalConnector newKafkaConnector(String servers, String topic
      * @param groupId
      * @return
      */
-    public static KafkaCanalConnector newKafkaConnector(String servers, String topic,  String groupId) {
+    public static KafkaCanalConnector newKafkaConnector(String servers, String topic, String groupId) {
         return new KafkaCanalConnector(servers, topic, null, groupId);
     }
 }

File: kafka-client/src/test/java/com/alibaba/otter/canal/kafka/client/running/AbstractKafkaTest.java
Patch:
@@ -10,10 +10,10 @@
  */
 public abstract class AbstractKafkaTest {
 
-    public static String topic = "example";
+    public static String  topic     = "example";
     public static Integer partition = null;
-    public static String groupId    = "g1";
-    public static String servers    = "slave1:6667,slave2:6667,slave3:6667";
+    public static String  groupId   = "g1";
+    public static String  servers   = "slave1:6667,slave2:6667,slave3:6667";
 
     public void sleep(long time) {
         try {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/ErosaConnection.java
Patch:
@@ -1,9 +1,9 @@
 package com.alibaba.otter.canal.parse.inbound;
 
-import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
-
 import java.io.IOException;
 
+import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
+
 /**
  * 通用的Erosa的链接接口, 用于一般化处理mysql/oracle的解析过程
  * 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinLogConnection.java
Patch:
@@ -4,12 +4,12 @@
 import java.io.IOException;
 import java.util.List;
 
-import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import org.apache.commons.lang.NotImplementedException;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import com.alibaba.otter.canal.parse.inbound.ErosaConnection;
 import com.alibaba.otter.canal.parse.inbound.SinkFunction;
 import com.alibaba.otter.canal.parse.inbound.mysql.local.BinLogFileQueue;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -8,17 +8,17 @@
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 
-import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
-import com.alibaba.otter.canal.parse.driver.mysql.packets.client.BinlogDumpGTIDCommandPacket;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import com.alibaba.otter.canal.parse.driver.mysql.MysqlConnector;
 import com.alibaba.otter.canal.parse.driver.mysql.MysqlQueryExecutor;
 import com.alibaba.otter.canal.parse.driver.mysql.MysqlUpdateExecutor;
+import com.alibaba.otter.canal.parse.driver.mysql.packets.GTIDSet;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.HeaderPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.BinlogDumpCommandPacket;
+import com.alibaba.otter.canal.parse.driver.mysql.packets.client.BinlogDumpGTIDCommandPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.RegisterSlaveCommandPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.client.SemiAckCommandPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.ErrorPacket;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/dao/MetaHistoryDO.java
Patch:
@@ -87,7 +87,6 @@ public void setUseSchema(String useSchema) {
         this.useSchema = useSchema;
     }
 
-
     public String getExtra() {
         return extra;
     }

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/position/EntryPosition.java
Patch:
@@ -1,6 +1,5 @@
 package com.alibaba.otter.canal.protocol.position;
 
-
 /**
  * 数据库对象的唯一标示
  * 

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/ClientAuthenticationHandler.java
Patch:
@@ -34,7 +34,7 @@ public class ClientAuthenticationHandler extends SimpleChannelHandler {
 
     private static final Logger     logger                                  = LoggerFactory.getLogger(ClientAuthenticationHandler.class);
     private final int               SUPPORTED_VERSION                       = 3;
-    private final int               defaultSubscriptorDisconnectIdleTimeout = 5 * 60 * 1000;
+    private final int               defaultSubscriptorDisconnectIdleTimeout = 60 * 60 * 1000;
     private CanalServerWithEmbedded embeddedServer;
 
     public ClientAuthenticationHandler(){

File: example/src/main/java/com/alibaba/otter/canal/example/AbstractCanalClientTest.java
Patch:
@@ -38,7 +38,6 @@ public class AbstractCanalClientTest {
     protected static final String             SEP                = SystemUtils.LINE_SEPARATOR;
     protected static final String             DATE_FORMAT        = "yyyy-MM-dd HH:mm:ss";
     protected volatile boolean                running            = false;
-    private volatile boolean                  waiting            = true;
     protected Thread.UncaughtExceptionHandler handler            = new Thread.UncaughtExceptionHandler() {
 
                                                                      public void uncaughtException(Thread t, Throwable e) {
@@ -97,6 +96,7 @@ protected void stop() {
             return;
         }
         connector.stopRunning();
+        running = false;
         if (thread != null) {
             try {
                 thread.join();
@@ -115,7 +115,6 @@ protected void process() {
                 MDC.put("destination", destination);
                 connector.connect();
                 connector.subscribe();
-                waiting = false;
                 while (running) {
                     Message message = connector.getWithoutAck(batchSize); // 获取指定数量的数据
                     long batchId = message.getId();

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/ClientAuthenticationHandler.java
Patch:
@@ -34,7 +34,7 @@ public class ClientAuthenticationHandler extends SimpleChannelHandler {
 
     private static final Logger     logger                                  = LoggerFactory.getLogger(ClientAuthenticationHandler.class);
     private final int               SUPPORTED_VERSION                       = 3;
-    private final int               defaultSubscriptorDisconnectIdleTimeout = 5 * 60 * 1000;
+    private final int               defaultSubscriptorDisconnectIdleTimeout = 60 * 60 * 1000;
     private CanalServerWithEmbedded embeddedServer;
 
     public ClientAuthenticationHandler(){

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -98,7 +98,7 @@ public CanalConfigClient apply(String managerAddress) {
         embededCanalServer = CanalServerWithEmbedded.instance();
         embededCanalServer.setCanalInstanceGenerator(instanceGenerator);// 设置自定义的instanceGenerator
         String canalWithoutNetty = getProperty(properties, CanalConstants.CANAL_WITHOUT_NETTY);
-        if (canalWithoutNetty == null || "true".equals(canalWithoutNetty)) {
+        if (canalWithoutNetty == null || "false".equals(canalWithoutNetty)) {
             canalServer = CanalServerWithNetty.instance();
             canalServer.setIp(ip);
             canalServer.setPort(port);

File: kafka/src/main/java/com/alibaba/otter/canal/kafka/CanalServerStarter.java
Patch:
@@ -30,7 +30,7 @@ public static void init() {
             Properties properties = new Properties();
             if (conf.startsWith(CLASSPATH_URL_PREFIX)) {
                 conf = StringUtils.substringAfter(conf, CLASSPATH_URL_PREFIX);
-                properties.load(com.alibaba.otter.canal.deployer.CanalLauncher.class.getClassLoader().getResourceAsStream(conf));
+                properties.load(CanalLauncher.class.getClassLoader().getResourceAsStream(conf));
             } else {
                 properties.load(new FileInputStream(conf));
             }

File: kafka/src/main/java/com/alibaba/otter/canal/kafka/producer/CanalKafkaStarter.java
Patch:
@@ -35,7 +35,7 @@ public static void init() {
         try {
 
             logger.info("## load kafka configurations");
-            String conf = System.getProperty("canal.conf", "classpath:kafka.yml");
+            String conf = System.getProperty("kafka.conf", "classpath:kafka.yml");
 
             KafkaProperties kafkaProperties;
             if (conf.startsWith(CLASSPATH_URL_PREFIX)) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -467,7 +467,7 @@ private Entry parseRowsEvent(RowsLogEvent event) {
                 // 处理alisql模式的test.heartbeat心跳数据
                 // 心跳表基本无权限,需要mock一个tableMeta
                 FieldMeta idMeta = new FieldMeta("id", "smallint(6)", false, true, null);
-                FieldMeta typeMeta = new FieldMeta("type", "int(11)", true, false, null);
+                FieldMeta typeMeta = new FieldMeta("ts", "int(11)", true, false, null);
                 tableMeta = new TableMeta(table.getDbName(), table.getTableName(), Arrays.asList(idMeta, typeMeta));
             }
 

File: meta/src/main/java/com/alibaba/otter/canal/meta/MemoryMetaManager.java
Patch:
@@ -83,7 +83,8 @@ public synchronized void unsubscribe(ClientIdentity clientIdentity) throws Canal
     }
 
     public synchronized List<ClientIdentity> listAllSubscribeInfo(String destination) throws CanalMetaManagerException {
-        return destinations.get(destination);
+        // fixed issue #657, fixed ConcurrentModificationException
+        return Lists.newArrayList(destinations.get(destination));
     }
 
     public Position getCursor(ClientIdentity clientIdentity) throws CanalMetaManagerException {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -16,6 +16,7 @@
 import com.alibaba.fastsql.sql.ast.SQLStatement;
 import com.alibaba.fastsql.sql.ast.expr.SQLCharExpr;
 import com.alibaba.fastsql.sql.ast.expr.SQLIdentifierExpr;
+import com.alibaba.fastsql.sql.ast.expr.SQLMethodInvokeExpr;
 import com.alibaba.fastsql.sql.ast.expr.SQLNullExpr;
 import com.alibaba.fastsql.sql.ast.expr.SQLPropertyExpr;
 import com.alibaba.fastsql.sql.ast.statement.SQLColumnConstraint;
@@ -243,6 +244,8 @@ private String getSqlName(SQLExpr sqlName) {
             return DruidDdlParser.unescapeName(((SQLIdentifierExpr) sqlName).getName());
         } else if (sqlName instanceof SQLCharExpr) {
             return ((SQLCharExpr) sqlName).getText();
+        } else if (sqlName instanceof SQLMethodInvokeExpr) {
+            return DruidDdlParser.unescapeName(((SQLMethodInvokeExpr) sqlName).getMethodName());
         } else {
             return sqlName.toString();
         }

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -457,8 +457,10 @@ private void waitClientRunning() {
                 }
 
                 running = true;
-
                 mutex.get();// 阻塞等待
+            } else {
+                // 单机模式直接设置为running
+                running = true;
             }
         } catch (InterruptedException e) {
             Thread.currentThread().interrupt();

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java
Patch:
@@ -103,8 +103,8 @@ static void putEntry(final int charsetId, String mysqlCharset, String mysqlColla
         putEntry(42, "latin7", "latin7_general_cs", "ISO8859_7");
         putEntry(43, "macce", "macce_bin", "MacCentralEurope");
         putEntry(44, "cp1250", "cp1250_croatian_ci", "Cp1250");
-        putEntry(45, "utf8mb4", "utf8mb4_general_ci", "MacCentralEurope");
-        putEntry(46, "utf8mb4", "utf8mb4_bin", "MacCentralEurope");
+        putEntry(45, "utf8mb4", "utf8mb4_general_ci", "UTF-8");
+        putEntry(46, "utf8mb4", "utf8mb4_bin", "UTF-8");
         putEntry(47, "latin1", "latin1_bin", "ISO8859_1");
         putEntry(48, "latin1", "latin1_general_ci", "ISO8859_1");
         putEntry(49, "latin1", "latin1_general_cs", "ISO8859_1");

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -27,7 +27,8 @@ public class MysqlDumpTest {
     @Test
     public void testSimple() {
         final MysqlEventParser controller = new MysqlEventParser();
-        final EntryPosition startPosition = new EntryPosition("mysql-bin.000010", 154L);
+        final EntryPosition startPosition = new EntryPosition("mysql-bin.000010", 154L, 100L);
+        startPosition.setGtid("f1ceb61a-a5d5-11e7-bdee-107c3dbcf8a7:1-17");
         controller.setConnectionCharset(Charset.forName("UTF-8"));
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/GtidLogEvent.java
Patch:
@@ -1,11 +1,11 @@
 package com.taobao.tddl.dbsync.binlog.event;
 
-import com.taobao.tddl.dbsync.binlog.LogBuffer;
-import com.taobao.tddl.dbsync.binlog.LogEvent;
-
 import java.nio.ByteBuffer;
 import java.util.UUID;
 
+import com.taobao.tddl.dbsync.binlog.LogBuffer;
+import com.taobao.tddl.dbsync.binlog.LogEvent;
+
 /**
  * @author jianghang 2013-4-8 上午12:36:29
  * @version 1.0.3

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -27,8 +27,7 @@ public class MysqlDumpTest {
     @Test
     public void testSimple() {
         final MysqlEventParser controller = new MysqlEventParser();
-        final EntryPosition startPosition = new EntryPosition("mysql-bin.000001", 104606L);
-
+        final EntryPosition startPosition = new EntryPosition("mysql-bin.000010", 154L);
         controller.setConnectionCharset(Charset.forName("UTF-8"));
         controller.setSlaveId(3344L);
         controller.setDetectingEnable(false);
@@ -39,6 +38,7 @@ public void testSimple() {
         controller.setTsdbSpringXml("classpath:tsdb/h2-tsdb.xml");
         controller.setEventFilter(new AviaterRegexFilter("test\\..*"));
         controller.setEventBlackFilter(new AviaterRegexFilter("canal_tsdb\\..*"));
+        controller.setIsGTIDMode(true);
         controller.setEventSink(new AbstractCanalEventSinkTest<List<Entry>>() {
 
             public boolean sink(List<Entry> entrys, InetSocketAddress remoteAddress, String destination)

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -263,7 +263,7 @@ private CanalEventParser doInitEventParser(SourcingType type, List<InetSocketAdd
                 mysqlEventParser.setMasterPosition(masterPosition);
 
                 if (parameters.getPositions().size() > 1) {
-                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(0),
+                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(1),
                         EntryPosition.class);
                     mysqlEventParser.setStandbyPosition(standbyPosition);
                 }

File: example/src/main/java/com/alibaba/otter/canal/example/AbstractCanalClientTest.java
Patch:
@@ -4,7 +4,6 @@
 import java.util.Date;
 import java.util.List;
 
-import com.alibaba.otter.canal.client.impl.ClusterCanalConnector;
 import org.apache.commons.lang.SystemUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -13,6 +12,7 @@
 import org.springframework.util.CollectionUtils;
 
 import com.alibaba.otter.canal.client.CanalConnector;
+import com.alibaba.otter.canal.client.impl.ClusterCanalConnector;
 import com.alibaba.otter.canal.protocol.CanalEntry.Column;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
 import com.alibaba.otter.canal.protocol.CanalEntry.EntryType;
@@ -84,8 +84,8 @@ public void run() {
         });
 
         thread.setUncaughtExceptionHandler(handler);
-        thread.start();
         running = true;
+        thread.start();
     }
 
     protected void stop() {
@@ -112,7 +112,6 @@ protected void stop() {
 
     protected void process() {
         int batchSize = 5 * 1024;
-        while (!running);   //waiting until running == true
         while (running) {
             try {
                 MDC.put("destination", destination);

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -263,7 +263,7 @@ private CanalEventParser doInitEventParser(SourcingType type, List<InetSocketAdd
                 mysqlEventParser.setMasterPosition(masterPosition);
 
                 if (parameters.getPositions().size() > 1) {
-                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(0),
+                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(1),
                         EntryPosition.class);
                     mysqlEventParser.setStandbyPosition(standbyPosition);
                 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinLogConnection.java
Patch:
@@ -8,7 +8,6 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.inbound.ErosaConnection;
 import com.alibaba.otter.canal.parse.inbound.SinkFunction;
 import com.alibaba.otter.canal.parse.inbound.mysql.local.BinLogFileQueue;
@@ -91,7 +90,7 @@ public void dump(String binlogfilename, Long binlogPosition, SinkFunction func)
                 while (fetcher.fetch()) {
                     event = decoder.decode(fetcher, context);
                     if (event == null) {
-                        throw new CanalParseException("parse failed");
+                        continue;
                     }
 
                     if (!func.sink(event)) {

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java
Patch:
@@ -56,7 +56,7 @@ public byte[] read(int readSize) throws IOException {
                 }
             } catch (SocketTimeoutException te) {
                 if (Thread.interrupted()) {
-                    throw new ClosedByInterruptException("Interrupted while reading.");
+                    throw new ClosedByInterruptException();
                 }
             }
         }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java
Patch:
@@ -2,12 +2,12 @@
 
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.InterruptedIOException;
 import java.io.OutputStream;
 import java.net.Socket;
 import java.net.SocketAddress;
 import java.net.SocketException;
 import java.net.SocketTimeoutException;
+import java.nio.channels.ClosedByInterruptException;
 
 /**
  * 使用BIO进行dump
@@ -56,7 +56,7 @@ public byte[] read(int readSize) throws IOException {
                 }
             } catch (SocketTimeoutException te) {
                 if (Thread.interrupted()) {
-                    throw new InterruptedIOException("Interrupted while reading.");
+                    throw new ClosedByInterruptException("Interrupted while reading.");
                 }
             }
         }
@@ -81,7 +81,7 @@ public byte[] read(int readSize, int timeout) throws IOException {
                 }
             } catch (SocketTimeoutException te) {
                 if (Thread.interrupted()) {
-                    throw new InterruptedIOException("Interrupted while reading.");
+                    throw new ClosedByInterruptException();
                 }
                 accTimeout += SO_TIMEOUT;
             }

File: example/src/main/java/com/alibaba/otter/canal/example/AbstractCanalClientTest.java
Patch:
@@ -56,7 +56,7 @@ public void uncaughtException(Thread t, Throwable e) {
         context_format += "****************************************************" + SEP;
 
         row_format = SEP
-                     + "----------------> binlog[{}:{}] , name[{},{}] , eventType : {} , executeTime : {}({}) , delay : {}ms"
+                     + "----------------> binlog[{}:{}] , name[{},{}] , eventType : {} , executeTime : {}({}) , delay : {} ms"
                      + SEP;
 
         transaction_format = SEP + "================> binlog[{}:{}] , executeTime : {}({}) , delay : {}ms" + SEP;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -6,6 +6,7 @@
 import java.net.InetSocketAddress;
 import java.nio.charset.Charset;
 import java.util.List;
+import java.util.concurrent.TimeUnit;
 
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
@@ -306,7 +307,8 @@ private void updateSettings() throws IOException {
          * in the binary log file for a period longer than interval.
          */
         try {
-            update("SET @master_heartbeat_period=" + MASTER_HEARTBEAT_PERIOD_SECONDS);
+            long periodNano = TimeUnit.SECONDS.toNanos(MASTER_HEARTBEAT_PERIOD_SECONDS);
+            update("SET @master_heartbeat_period=" + periodNano);
         } catch (Exception e) {
             logger.warn("update master_heartbeat_period failed", e);
         }

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalConstants.java
Patch:
@@ -32,6 +32,8 @@ public class CanalConstants {
 
     public static final String CANAL_DESTINATION_PROPERTY        = ROOT + ".instance.destination";
 
+    public static final String CANAL_SOCKETCHANNEL               = ROOT + "." + "socketChannel";
+
     public static String getInstanceModeKey(String destination) {
         return MessageFormat.format(INSTANCE_MODE_TEMPLATE, destination);
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/utils/PacketManager.java
Patch:
@@ -28,7 +28,7 @@ public static byte[] readBytes(SocketChannel ch, int len, int timeout) throws IO
     }
 
     public static void writePkg(SocketChannel ch, byte[]... srcs) throws IOException {
-        ch.writeChannel(srcs);
+        ch.write(srcs);
     }
 
     public static void writeBody(SocketChannel ch, byte[] body) throws IOException {
@@ -39,6 +39,6 @@ public static void writeBody0(SocketChannel ch, byte[] body, byte packetSeqNumbe
         HeaderPacket header = new HeaderPacket();
         header.setPacketBodyLength(body.length);
         header.setPacketSequenceNumber(packetSeqNumber);
-        ch.writeChannel(header.toBytes(), body);
+        ch.write(header.toBytes(), body);
     }
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/DirectLogFetcher.java
Patch:
@@ -23,8 +23,8 @@ public class DirectLogFetcher extends LogFetcher {
 
     // Master heartbeat interval
     public static final int MASTER_HEARTBEAT_PERIOD_SECONDS = 15;
-    // +1s 确保 timeout > heartbeat interval
-    private static final int READ_TIMEOUT_MILLISECONDS = (MASTER_HEARTBEAT_PERIOD_SECONDS + 1) * 1000;
+    // +10s 确保 timeout > heartbeat interval
+    private static final int READ_TIMEOUT_MILLISECONDS = (MASTER_HEARTBEAT_PERIOD_SECONDS + 10) * 1000;
 
     /** Command to dump binlog */
     public static final byte      COM_BINLOG_DUMP   = 18;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/DatabaseTableMeta.java
Patch:
@@ -296,7 +296,7 @@ private boolean compareTableMetaDbAndMemory(MysqlConnection connection, MemoryTa
             ResultSetPacket packet = connection.query("show create table " + getFullName(schema, table));
             if (packet.getFieldValues().size() > 1) {
                 createDDL = packet.getFieldValues().get(1);
-                tableMetaFromDB.setFields(TableMetaCache.parserTableMeta(schema, table, packet));
+                tableMetaFromDB.setFields(TableMetaCache.parseTableMeta(schema, table, packet));
             }
         } catch (IOException e) {
             if (e.getMessage().contains("errorNumber=1146")) {

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -43,8 +43,8 @@ public class MysqlConnector {
     // mysql connectinnId
     private long                connectionId      = -1;
     private AtomicBoolean       connected         = new AtomicBoolean(false);
-    
-    public static final int timeout = 3000; // 3s
+
+    public static final int     timeout           = 5 * 1000;                                     // 5s
 
     public MysqlConnector(){
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/SocketChannelPool.java
Patch:
@@ -7,13 +7,12 @@
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelHandlerContext;
-import io.netty.channel.SimpleChannelInboundHandler;
 import io.netty.channel.ChannelInitializer;
 import io.netty.channel.ChannelOption;
 import io.netty.channel.EventLoopGroup;
+import io.netty.channel.SimpleChannelInboundHandler;
 import io.netty.channel.nio.NioEventLoopGroup;
 import io.netty.channel.socket.nio.NioSocketChannel;
-import io.netty.util.ReferenceCountUtil;
 
 import java.io.IOException;
 import java.net.SocketAddress;
@@ -103,7 +102,7 @@ protected void channelRead0(ChannelHandlerContext ctx, ByteBuf msg) throws Excep
 
         @Override
         public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
-            //need output error for troubeshooting.
+            // need output error for troubeshooting.
             logger.error("business error.", cause);
             ctx.close();
         }

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/group/TimelineTransactionBarrier.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 import com.alibaba.otter.canal.protocol.CanalEntry.EntryType;
+import com.alibaba.otter.canal.sink.exception.CanalSinkException;
 import com.alibaba.otter.canal.store.model.Event;
 
 /**

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/group/TimelineTransactionBarrier.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 import com.alibaba.otter.canal.protocol.CanalEntry.EntryType;
+import com.alibaba.otter.canal.sink.exception.CanalSinkException;
 import com.alibaba.otter.canal.store.model.Event;
 
 /**

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java
Patch:
@@ -104,6 +104,7 @@ public static List<FieldMeta> parserTableMeta(ResultSetPacket packet) {
                                                                                       * size),
                 "YES"));
             meta.setKey("PRI".equalsIgnoreCase(packet.getFieldValues().get(nameMaps.get(COLUMN_KEY) + i * size)));
+            meta.setUnique("UNI".equalsIgnoreCase(packet.getFieldValues().get(nameMaps.get(COLUMN_KEY) + i * size)));
             // 特殊处理引号
             meta.setDefaultValue(DruidDdlParser.unescapeQuotaName(packet.getFieldValues()
                 .get(nameMaps.get(COLUMN_DEFAULT) + i * size)));

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java
Patch:
@@ -53,7 +53,7 @@ public TableMetaCache(MysqlConnection con, TableMetaTSDB tableMetaTSDB){
                 public TableMeta load(String name) throws Exception {
                     try {
                         return getTableMetaByDB(name);
-                    } catch (CanalParseException e) {
+                    } catch (Throwable e) {
                         // 尝试做一次retry操作
                         try {
                             connection.reconnect();

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogBuffer.java
Patch:
@@ -20,7 +20,7 @@ public class LogBuffer {
 
     protected int    origin, limit;
     protected int    position;
-    protected int 	 semival;
+    protected int    semival;
 
     protected LogBuffer(){
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/DatabaseTableMeta.java
Patch:
@@ -248,7 +248,7 @@ private boolean applySnapshotToDB(EntryPosition position, boolean init) {
         boolean compareAll = true;
         for (Schema schema : tmpMemoryTableMeta.getRepository().getSchemas()) {
             for (String table : schema.showTables()) {
-                if (!compareTableMetaDbAndMemory(connection, schema.getName(), table)) {
+                if (!compareTableMetaDbAndMemory(connection, tmpMemoryTableMeta, schema.getName(), table)) {
                     compareAll = false;
                 }
             }
@@ -284,7 +284,8 @@ private boolean applySnapshotToDB(EntryPosition position, boolean init) {
         return false;
     }
 
-    private boolean compareTableMetaDbAndMemory(MysqlConnection connection, final String schema, final String table) {
+    private boolean compareTableMetaDbAndMemory(MysqlConnection connection, MemoryTableMeta memoryTableMeta,
+                                                final String schema, final String table) {
         TableMeta tableMetaFromMem = memoryTableMeta.find(schema, table);
 
         TableMeta tableMetaFromDB = new TableMeta();

File: common/src/main/java/com/alibaba/otter/canal/common/utils/JsonUtils.java
Patch:
@@ -10,6 +10,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.TypeReference;
+import com.alibaba.fastjson.parser.ParserConfig;
 import com.alibaba.fastjson.serializer.JSONSerializer;
 import com.alibaba.fastjson.serializer.ObjectSerializer;
 import com.alibaba.fastjson.serializer.PropertyFilter;
@@ -28,6 +29,7 @@ public class JsonUtils {
         SerializeConfig.getGlobalInstance().put(InetAddress.class, InetAddressSerializer.instance);
         SerializeConfig.getGlobalInstance().put(Inet4Address.class, InetAddressSerializer.instance);
         SerializeConfig.getGlobalInstance().put(Inet6Address.class, InetAddressSerializer.instance);
+        ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
     }
 
     public static <T> T unmarshalFromByte(byte[] bytes, Class<T> targetClass) {

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -101,7 +101,8 @@ public void disconnect() throws IOException {
                     MysqlUpdateExecutor executor = new MysqlUpdateExecutor(connector);
                     executor.update("KILL CONNECTION " + connectionId);
                 } catch (Exception e) {
-                    throw new IOException("KILL DUMP " + connectionId + " failure", e);
+                    // 忽略具体异常
+                    logger.info("KILL DUMP " + connectionId + " failure", e);
                 } finally {
                     if (connector != null) {
                         connector.disconnect();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java
Patch:
@@ -187,7 +187,7 @@ private static void processName(DdlResult ddlResult, String schema, SQLExpr sqlN
     }
 
     public static String unescapeName(String name) {
-        if (name.length() > 2) {
+        if (name != null && name.length() > 2) {
             char c0 = name.charAt(0);
             char x0 = name.charAt(name.length() - 1);
             if ((c0 == '"' && x0 == '"') || (c0 == '`' && x0 == '`')) {
@@ -199,7 +199,7 @@ public static String unescapeName(String name) {
     }
 
     public static String unescapeQuotaName(String name) {
-        if (name.length() > 2) {
+        if (name != null && name.length() > 2) {
             char c0 = name.charAt(0);
             char x0 = name.charAt(name.length() - 1);
             if (c0 == '\'' && x0 == '\'') {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java
Patch:
@@ -187,7 +187,7 @@ private void processTableElement(SQLTableElement element, TableMeta tableMeta) {
             if (column.getDefaultExpr() == null || column.getDefaultExpr() instanceof SQLNullExpr) {
                 fieldMeta.setDefaultValue(null);
             } else {
-                fieldMeta.setDefaultValue(getSqlName(column.getDefaultExpr()));
+                fieldMeta.setDefaultValue(DruidDdlParser.unescapeQuotaName(getSqlName(column.getDefaultExpr())));
             }
 
             fieldMeta.setColumnName(name);
@@ -232,6 +232,7 @@ private String getSqlName(SQLExpr sqlName) {
             return sqlName.toString();
         }
     }
+    
 
     public SchemaRepository getRepository() {
         return repository;

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/monitor/SpringInstanceConfigMonitor.java
Patch:
@@ -208,8 +208,7 @@ private void notifyReload(String destination) {
                 action.reload(destination);
                 logger.info("auto notify reload {} successful.", destination);
             } catch (Throwable e) {
-                logger.error(String.format("scan reload found[%s] but reload failed",
-                    destination), e);
+                logger.error(String.format("scan reload found[%s] but reload failed", destination), e);
             }
         }
     }
@@ -312,5 +311,4 @@ public void setLastModified(long lastModified) {
         }
 
     }
-
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -156,6 +156,7 @@ private void sendBinlogDump(String binlogfilename, Long binlogPosition) throws I
         BinlogDumpCommandPacket binlogDumpCmd = new BinlogDumpCommandPacket();
         binlogDumpCmd.binlogFileName = binlogfilename;
         binlogDumpCmd.binlogPosition = binlogPosition;
+        // binlogDumpCmd.slaveServerId = this.slaveId;
         binlogDumpCmd.slaveServerId = this.slaveId;
         byte[] cmdBody = binlogDumpCmd.toBytes();
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java
Patch:
@@ -140,21 +140,21 @@ public static List<DdlResult> parse(String queryString, String schmeaName) {
             } else if (statement instanceof SQLInsertStatement) {
                 DdlResult ddlResult = new DdlResult();
                 SQLInsertStatement insert = (SQLInsertStatement) statement;
-                processName(ddlResult, schmeaName, insert.getTableName(), true);
+                processName(ddlResult, schmeaName, insert.getTableName(), false);
                 ddlResult.setType(EventType.INSERT);
                 ddlResults.add(ddlResult);
             } else if (statement instanceof SQLUpdateStatement) {
                 DdlResult ddlResult = new DdlResult();
                 SQLUpdateStatement update = (SQLUpdateStatement) statement;
                 // 拿到的表名可能为null,比如update a,b set a.id=x
-                processName(ddlResult, schmeaName, update.getTableName(), true);
+                processName(ddlResult, schmeaName, update.getTableName(), false);
                 ddlResult.setType(EventType.UPDATE);
                 ddlResults.add(ddlResult);
             } else if (statement instanceof SQLDeleteStatement) {
                 DdlResult ddlResult = new DdlResult();
                 SQLDeleteStatement delete = (SQLDeleteStatement) statement;
                 // 拿到的表名可能为null,比如delete a,b from a where a.id = b.id
-                processName(ddlResult, schmeaName, delete.getTableName(), true);
+                processName(ddlResult, schmeaName, delete.getTableName(), false);
                 ddlResult.setType(EventType.DELETE);
                 ddlResults.add(ddlResult);
             }

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/TableMetaManagerTest.java
Patch:
@@ -26,7 +26,7 @@
 public class TableMetaManagerTest {
 
     @Resource
-    TableMetaManager tableMetaManager;
+    DatabaseTableMeta tableMetaManager;
 
     @Test
     public void testSimple() throws FileNotFoundException, IOException {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/TableMetaManager.java
Patch:
@@ -46,10 +46,11 @@ public class TableMetaManager implements TableMetaTSDB {
 
     private static Logger              logger        = LoggerFactory.getLogger(TableMetaManager.class);
     private static Pattern             pattern       = Pattern.compile("Duplicate entry '.*' for key '*'");
+    private static Pattern             h2Pattern     = Pattern.compile("Unique index or primary key violation");
     private static final EntryPosition INIT_POSITION = new EntryPosition("0", 0L, -2L, -1L);
     private String                     destination;
     private MemoryTableMeta            memoryTableMeta;
-    private MysqlConnection            connection;                                                         // 查询meta信息的链接
+    private MysqlConnection            connection;                                                              // 查询meta信息的链接
     private CanalEventFilter           filter;
     private CanalEventFilter           blackFilter;
     private EntryPosition              lastPosition;
@@ -466,7 +467,7 @@ public MysqlConnection getConnection() {
     }
 
     public boolean isUkDuplicateException(Throwable t) {
-        if (pattern.matcher(t.getMessage()).find()) {
+        if (pattern.matcher(t.getMessage()).find() || h2Pattern.matcher(t.getMessage()).find()) {
             // 违反外键约束时也抛出这种异常，所以这里还要判断包含字符串Duplicate entry
             return true;
         }

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -36,7 +36,7 @@ public void testSimple() {
         controller.setMasterPosition(startPosition);
         controller.setEnableTsdb(true);
         controller.setDestination("example");
-        controller.setTsdbSpringXml("classpath:tsdb/mysql-tsdb.xml");
+        controller.setTsdbSpringXml("classpath:tsdb/h2-tsdb.xml");
         controller.setEventFilter(new AviaterRegexFilter("test\\..*"));
         controller.setEventBlackFilter(new AviaterRegexFilter("canal_tsdb\\..*"));
         controller.setEventSink(new AbstractCanalEventSinkTest<List<Entry>>() {

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/TableMetaManagerTest.java
Patch:
@@ -22,7 +22,7 @@
  * @since 3.2.5
  */
 @RunWith(SpringJUnit4ClassRunner.class)
-@ContextConfiguration(locations = { "/tsdb/mysql-tsdb.xml" })
+@ContextConfiguration(locations = { "/tsdb/h2-tsdb.xml" })
 public class TableMetaManagerTest {
 
     @Resource
@@ -40,8 +40,7 @@ public void testSimple() throws FileNotFoundException, IOException {
         tableMetaManager.apply(position, "tddl5_00", createSql, null);
 
         String alterSql = "alter table `test` add column name varchar(32) after c_varchar";
-        position = new EntryPosition("mysql-bin.001115", 139177334L, 3065927853L, 1501660815000L);
+        position = new EntryPosition("mysql-bin.001115", 139177334L, 3065927854L, 1501660815000L);
         tableMetaManager.apply(position, "tddl5_00", alterSql, null);
-
     }
 }

File: meta/src/main/java/com/alibaba/otter/canal/meta/FileMixedMetaManager.java
Patch:
@@ -367,7 +367,7 @@ public void setDataDir(String dataDir) {
         this.dataDir = new File(dataDir);
     }
 
-    public void setDataDir(File dataDir) {
+    public void setDataDirByFile(File dataDir) {
         this.dataDir = dataDir;
     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParser.java
Patch:
@@ -50,7 +50,7 @@ protected void preDump(ErosaConnection connection) {
             throw new CanalParseException(e);
         }
 
-        tableMetaCache = new TableMetaCache(metaConnection, tableMetaManager);
+        tableMetaCache = new TableMetaCache(metaConnection, tableMetaTSDB);
         ((LogEventConvert) binlogParser).setTableMetaCache(tableMetaCache);
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParserTest.java
Patch:
@@ -31,7 +31,7 @@ public class LocalBinlogEventParserTest {
     public void setUp() {
         URL url = Thread.currentThread().getContextClassLoader().getResource("dummy.txt");
         File dummyFile = new File(url.getFile());
-        directory = new File("/Users/wanshao/projects/canal/parse/src/test/resources/binlog/tsdb").getPath();
+        directory = new File(dummyFile + "/binlog/tsdb").getPath();
     }
 
     @Test

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -275,7 +275,7 @@ public boolean sink(EVENT event) {
         parseThread.setUncaughtExceptionHandler(handler);
         parseThread.setName(String.format("destination = %s , address = %s , EventParser",
             destination,
-            runningInfo == null ? null : runningInfo.getAddress().toString()));
+            runningInfo == null ? null : runningInfo.getAddress()));
         parseThread.start();
     }
 

File: example/src/main/java/com/alibaba/otter/canal/example/ClusterCanalClientTest.java
Patch:
@@ -28,7 +28,7 @@ public static void main(String args[]) {
         // "stability_test", "", "");
 
         // 基于zookeeper动态获取canal server的地址，建立链接，其中一台server发生crash，可以支持failover
-        CanalConnector connector = CanalConnectors.newClusterConnector("10.218.140.189:2181", destination, "", "");
+        CanalConnector connector = CanalConnectors.newClusterConnector("127.0.0.1:2181", destination, "", "");
 
         final ClusterCanalClientTest clientTest = new ClusterCanalClientTest(destination);
         clientTest.setConnector(connector);

File: instance/core/src/main/java/com/alibaba/otter/canal/instance/core/AbstractCanalInstance.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.List;
 
-import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -17,6 +16,7 @@
 import com.alibaba.otter.canal.parse.inbound.AbstractEventParser;
 import com.alibaba.otter.canal.parse.inbound.group.GroupEventParser;
 import com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser;
+import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import com.alibaba.otter.canal.protocol.CanalEntry;
 import com.alibaba.otter.canal.protocol.ClientIdentity;
 import com.alibaba.otter.canal.sink.CanalEventSink;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/DirectLogFetcher.java
Patch:
@@ -4,11 +4,11 @@
 import java.io.InterruptedIOException;
 import java.net.SocketTimeoutException;
 import java.nio.channels.ClosedByInterruptException;
-import com.alibaba.otter.canal.parse.driver.mysql.socket.SocketChannel;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import com.alibaba.otter.canal.parse.driver.mysql.socket.SocketChannel;
 import com.taobao.tddl.dbsync.binlog.LogFetcher;
 
 /**

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java
Patch:
@@ -1,7 +1,6 @@
 package com.alibaba.otter.canal.parse.driver.mysql;
 
 import java.io.IOException;
-import com.alibaba.otter.canal.parse.driver.mysql.socket.SocketChannel;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -12,6 +11,7 @@
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetHeaderPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.RowDataPacket;
+import com.alibaba.otter.canal.parse.driver.mysql.socket.SocketChannel;
 import com.alibaba.otter.canal.parse.driver.mysql.utils.PacketManager;
 
 /**
@@ -88,7 +88,7 @@ public ResultSetPacket query(String queryString) throws IOException {
         for (RowDataPacket r : rowData) {
             resultSet.getFieldValues().addAll(r.getColumns());
         }
-        resultSet.setSourceAddress(channel.socket().getRemoteSocketAddress());
+        resultSet.setSourceAddress(channel.getRemoteSocketAddress());
 
         return resultSet;
     }

File: example/src/main/java/com/alibaba/otter/canal/example/ClusterCanalClientTest.java
Patch:
@@ -28,7 +28,7 @@ public static void main(String args[]) {
         // "stability_test", "", "");
 
         // 基于zookeeper动态获取canal server的地址，建立链接，其中一台server发生crash，可以支持failover
-        CanalConnector connector = CanalConnectors.newClusterConnector("127.0.0.1:2181", destination, "", "");
+        CanalConnector connector = CanalConnectors.newClusterConnector("10.218.140.189:2181", destination, "", "");
 
         final ClusterCanalClientTest clientTest = new ClusterCanalClientTest(destination);
         clientTest.setConnector(connector);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -5,6 +5,7 @@
 import java.nio.charset.Charset;
 import java.util.List;
 
+import org.apache.commons.lang.StringUtils;
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -38,7 +39,6 @@ public MysqlConnection(){
     }
 
     public MysqlConnection(InetSocketAddress address, String username, String password){
-
         connector = new MysqlConnector(address, username, password);
     }
 
@@ -138,7 +138,7 @@ private void sendBinlogDump(String binlogfilename, Long binlogPosition) throws I
         HeaderPacket binlogDumpHeader = new HeaderPacket();
         binlogDumpHeader.setPacketBodyLength(cmdBody.length);
         binlogDumpHeader.setPacketSequenceNumber((byte) 0x00);
-        PacketManager.writePkg(connector.getChannel(), binlogDumpHeader.toBytes(),cmdBody);
+        PacketManager.writePkg(connector.getChannel(), binlogDumpHeader.toBytes(), cmdBody);
         connector.setDumping(true);
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/DirectLogFetcherTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
-import java.nio.ByteBuffer;
 
 import org.junit.Assert;
 import org.junit.Test;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -191,6 +191,9 @@ public boolean sink(EVENT event) {
                                 } catch (TableIdNotFoundException e) {
                                     throw e;
                                 } catch (Throwable e) {
+                                    if (e.getCause() instanceof TableIdNotFoundException) {
+                                        throw (TableIdNotFoundException) e.getCause();
+                                    }
                                     // 记录一下，出错的位点信息
                                     processSinkError(e,
                                         this.lastPosition,

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/FailbackLogPositionManager.java
Patch:
@@ -42,7 +42,7 @@ public void start() {
         }
 
         if (!secondary.isStart()) {
-            primary.start();
+            secondary.start();
         }
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/index/MetaLogPositionManagerTest.java
Patch:
@@ -45,8 +45,7 @@ public void testAll() {
         metaManager.setZooKeeperMetaManager(zooKeeperMetaManager);
         metaManager.start();
 
-        MetaLogPositionManager logPositionManager = new MetaLogPositionManager();
-        logPositionManager.setMetaManager(metaManager);
+        MetaLogPositionManager logPositionManager = new MetaLogPositionManager(metaManager);
         logPositionManager.start();
         // 构建meta信息
         ClientIdentity client1 = new ClientIdentity(destination, (short) 1);

File: parse/src/test/java/com/alibaba/otter/canal/parse/index/ZooKeeperLogPositionManagerTest.java
Patch:
@@ -25,8 +25,7 @@ public void tearDown() {
 
     @Test
     public void testAll() {
-        ZooKeeperLogPositionManager logPositionManager = new ZooKeeperLogPositionManager();
-        logPositionManager.setZkClientx(zkclientx);
+        ZooKeeperLogPositionManager logPositionManager = new ZooKeeperLogPositionManager(zkclientx);
         logPositionManager.start();
 
         doTest(logPositionManager);

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/FailbackLogPositionManager.java
Patch:
@@ -43,7 +43,7 @@ public void start() {
         }
 
         if (!secondary.isStart()) {
-            primary.start();
+            secondary.start();
         }
     }
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/index/MetaLogPositionManagerTest.java
Patch:
@@ -45,8 +45,7 @@ public void testAll() {
         metaManager.setZooKeeperMetaManager(zooKeeperMetaManager);
         metaManager.start();
 
-        MetaLogPositionManager logPositionManager = new MetaLogPositionManager();
-        logPositionManager.setMetaManager(metaManager);
+        MetaLogPositionManager logPositionManager = new MetaLogPositionManager(metaManager);
         logPositionManager.start();
         // 构建meta信息
         ClientIdentity client1 = new ClientIdentity(destination, (short) 1);

File: parse/src/test/java/com/alibaba/otter/canal/parse/index/ZooKeeperLogPositionManagerTest.java
Patch:
@@ -25,8 +25,7 @@ public void tearDown() {
 
     @Test
     public void testAll() {
-        ZooKeeperLogPositionManager logPositionManager = new ZooKeeperLogPositionManager();
-        logPositionManager.setZkClientx(zkclientx);
+        ZooKeeperLogPositionManager logPositionManager = new ZooKeeperLogPositionManager(zkclientx);
         logPositionManager.start();
 
         doTest(logPositionManager);

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -349,7 +349,9 @@ protected CanalLogPositionManager initLogPositionManager() {
         } else if (indexMode.isMixed()) {
             MemoryLogPositionManager memoryLogPositionManager = new MemoryLogPositionManager();
             ZooKeeperLogPositionManager zooKeeperLogPositionManager = new ZooKeeperLogPositionManager(getZkclientx());
-            logPositionManager = new PeriodMixedLogPositionManager(memoryLogPositionManager, zooKeeperLogPositionManager, 1000L);
+            logPositionManager = new PeriodMixedLogPositionManager(memoryLogPositionManager,
+                zooKeeperLogPositionManager,
+                1000L);
         } else if (indexMode.isMeta()) {
             logPositionManager = new MetaLogPositionManager(metaManager);
         } else if (indexMode.isMemoryMetaFailback()) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -8,7 +8,6 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicLong;
 
-import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.apache.commons.lang.math.RandomUtils;
@@ -23,6 +22,7 @@
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.exception.TableIdNotFoundException;
 import com.alibaba.otter.canal.parse.inbound.EventTransactionBuffer.TransactionFlushCallback;
+import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
@@ -44,7 +44,7 @@ public abstract class AbstractEventParser<EVENT> extends AbstractCanalLifeCycle
 
     protected final Logger                           logger                     = LoggerFactory.getLogger(this.getClass());
 
-    protected CanalLogPositionManager logPositionManager         = null;
+    protected CanalLogPositionManager                logPositionManager         = null;
     protected CanalEventSink<List<CanalEntry.Entry>> eventSink                  = null;
     protected CanalEventFilter                       eventFilter                = null;
     protected CanalEventFilter                       eventBlackFilter           = null;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParser.java
Patch:
@@ -2,14 +2,14 @@
 
 import java.io.IOException;
 
-import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import org.apache.commons.lang.StringUtils;
 
 import com.alibaba.otter.canal.parse.CanalEventParser;
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.inbound.ErosaConnection;
 import com.alibaba.otter.canal.parse.inbound.mysql.dbsync.LogEventConvert;
 import com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache;
+import com.alibaba.otter.canal.parse.index.CanalLogPositionManager;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.position.EntryPosition;
 import com.alibaba.otter.canal.protocol.position.LogPosition;

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/AbstractLogPositionManager.java
Patch:
@@ -3,8 +3,7 @@
 import com.alibaba.otter.canal.common.AbstractCanalLifeCycle;
 
 /**
- * Created by yinxiu on 17/3/17.
- * Email: marklin.hz@gmail.com
+ * Created by yinxiu on 17/3/17. Email: marklin.hz@gmail.com
  */
 public abstract class AbstractLogPositionManager extends AbstractCanalLifeCycle implements CanalLogPositionManager {
 }

File: parse/src/main/java/com/alibaba/otter/canal/parse/index/CanalLogPositionManager.java
Patch:
@@ -5,8 +5,7 @@
 import com.alibaba.otter.canal.protocol.position.LogPosition;
 
 /**
- * Created by yinxiu on 17/3/17.
- * Email: marklin.hz@gmail.com
+ * Created by yinxiu on 17/3/17. Email: marklin.hz@gmail.com
  */
 public interface CanalLogPositionManager extends CanalLifeCycle {
 

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/group/GroupEventPaserTest.java
Patch:
@@ -2,13 +2,13 @@
 
 import java.net.InetSocketAddress;
 
-import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import org.junit.Test;
 
 import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.inbound.AbstractBinlogParser;
 import com.alibaba.otter.canal.parse.inbound.BinlogParser;
 import com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser;
+import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
 import com.alibaba.otter.canal.protocol.position.EntryPosition;
@@ -71,6 +71,7 @@ private MysqlEventParser buildEventParser(int slaveId) {
         mysqlEventPaser.setBinlogParser(buildParser(buildAuthentication()));
         mysqlEventPaser.setEventSink(new EntryEventSink());
         mysqlEventPaser.setLogPositionManager(new AbstractLogPositionManager() {
+
             @Override
             public LogPosition getLatestIndexBy(String destination) {
                 return null;

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/LocalBinlogEventParserTest.java
Patch:
@@ -7,12 +7,12 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicLong;
 
-import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 
 import com.alibaba.otter.canal.parse.helper.TimeoutChecker;
+import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import com.alibaba.otter.canal.parse.stub.AbstractCanalEventSinkTest;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlDumpTest.java
Patch:
@@ -4,11 +4,11 @@
 import java.nio.charset.Charset;
 import java.util.List;
 
-import com.alibaba.otter.canal.parse.exception.CanalParseException;
-import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import org.junit.Assert;
 import org.junit.Test;
 
+import com.alibaba.otter.canal.parse.exception.CanalParseException;
+import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import com.alibaba.otter.canal.parse.stub.AbstractCanalEventSinkTest;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry.Column;
@@ -85,6 +85,7 @@ public boolean sink(List<Entry> entrys, InetSocketAddress remoteAddress, String
 
         });
         controller.setLogPositionManager(new AbstractLogPositionManager() {
+
             @Override
             public LogPosition getLatestIndexBy(String destination) {
                 return null;

File: parse/src/test/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParserTest.java
Patch:
@@ -5,12 +5,12 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicLong;
 
-import com.alibaba.otter.canal.parse.exception.CanalParseException;
-import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import org.junit.Assert;
 import org.junit.Test;
 
+import com.alibaba.otter.canal.parse.exception.CanalParseException;
 import com.alibaba.otter.canal.parse.helper.TimeoutChecker;
+import com.alibaba.otter.canal.parse.index.AbstractLogPositionManager;
 import com.alibaba.otter.canal.parse.stub.AbstractCanalEventSinkTest;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
@@ -69,6 +69,7 @@ public boolean sink(List<Entry> entrys, InetSocketAddress remoteAddress, String
         });
 
         controller.setLogPositionManager(new AbstractLogPositionManager() {
+
             @Override
             public LogPosition getLatestIndexBy(String destination) {
                 return null;

File: common/src/main/java/com/alibaba/otter/canal/common/utils/JsonUtils.java
Patch:
@@ -90,7 +90,7 @@ public static class InetAddressSerializer implements ObjectSerializer {
 
         @Override
         public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features)
-                                                                                                     throws IOException {
+                                                                                                                   throws IOException {
             if (object == null) {
                 serializer.writeNull();
                 return;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -952,9 +952,9 @@ final Serializable fetchValue(int type, final int meta, boolean isBinary) {
                 len = buffer.getUint16();
                 buffer.forward(meta - 2);
                 int position = buffer.position();
-                Json_Value jsonValue = JsonConversion.parse_value(buffer.getUint8(), buffer, len - 1);
+                Json_Value jsonValue = JsonConversion.parse_value(buffer.getUint8(), buffer, len - 1, charsetName);
                 StringBuilder builder = new StringBuilder();
-                jsonValue.toJsonString(builder);
+                jsonValue.toJsonString(builder, charsetName);
                 value = builder.toString();
                 buffer.position(position + len);
                 // byte[] binary = new byte[len];

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
+import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
 import java.util.List;
 
@@ -147,7 +148,8 @@ private void sendBinlogDump(String binlogfilename, Long binlogPosition) throws I
         HeaderPacket binlogDumpHeader = new HeaderPacket();
         binlogDumpHeader.setPacketBodyLength(cmdBody.length);
         binlogDumpHeader.setPacketSequenceNumber((byte) 0x00);
-        PacketManager.write(connector.getChannel(), binlogDumpHeader.toBytes(), cmdBody);
+        PacketManager.write(connector.getChannel(), new ByteBuffer[] { ByteBuffer.wrap(binlogDumpHeader.toBytes()),
+                ByteBuffer.wrap(cmdBody) });
 
         connector.setDumping(true);
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java
Patch:
@@ -24,9 +24,9 @@ public class MysqlQueryExecutor {
 
     private SocketChannel channel;
 
-    public MysqlQueryExecutor(MysqlConnector connector){
+    public MysqlQueryExecutor(MysqlConnector connector) throws IOException{
         if (!connector.isConnected()) {
-            throw new RuntimeException("should execute connector.connect() first");
+            throw new IOException("should execute connector.connect() first");
         }
 
         this.channel = connector.getChannel();

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java
Patch:
@@ -23,9 +23,9 @@ public class MysqlUpdateExecutor {
 
     private SocketChannel       channel;
 
-    public MysqlUpdateExecutor(MysqlConnector connector){
+    public MysqlUpdateExecutor(MysqlConnector connector) throws IOException{
         if (!connector.isConnected()) {
-            throw new RuntimeException("should execute connector.connect() first");
+            throw new IOException("should execute connector.connect() first");
         }
 
         this.channel = connector.getChannel();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -182,7 +182,7 @@ protected TimerTask buildHeartBeatTimeTask(ErosaConnection connection) {
     protected void stopHeartBeat() {
         TimerTask heartBeatTimerTask = this.heartBeatTimerTask;
         super.stopHeartBeat();
-        if (heartBeatTimerTask != null) {
+        if (heartBeatTimerTask != null && heartBeatTimerTask instanceof MysqlDetectingTimeTask) {
             MysqlConnection mysqlConnection = ((MysqlDetectingTimeTask) heartBeatTimerTask).getMysqlConnection();
             try {
                 mysqlConnection.disconnect();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -282,7 +282,8 @@ private void loadBinlogChecksum() {
         }
 
         List<String> columnValues = rs.getFieldValues();
-        if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0)!=null && columnValues.get(0).toUpperCase().equals("CRC32")) {
+        if (columnValues != null && columnValues.size() >= 1 && columnValues.get(0) != null
+            && columnValues.get(0).toUpperCase().equals("CRC32")) {
             binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
         } else {
             binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -83,7 +83,7 @@ public void update(String cmd) throws IOException {
      */
     public void seek(String binlogfilename, Long binlogPosition, SinkFunction func) throws IOException {
         updateSettings();
-
+        loadBinlogChecksum();
         sendBinlogDump(binlogfilename, binlogPosition);
         DirectLogFetcher fetcher = new DirectLogFetcher(connector.getReceiveBufferSize());
         fetcher.start(connector.getChannel());
@@ -94,6 +94,7 @@ public void seek(String binlogfilename, Long binlogPosition, SinkFunction func)
         decoder.handle(LogEvent.XID_EVENT);
         LogContext context = new LogContext();
         context.setLogPosition(new LogPosition(binlogfilename));
+        context.setFormatDescription(new FormatDescriptionLogEvent(4, binlogChecksum));
         while (fetcher.fetch()) {
             LogEvent event = null;
             event = decoder.decode(fetcher, context);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -180,6 +180,7 @@ protected TimerTask buildHeartBeatTimeTask(ErosaConnection connection) {
     }
 
     protected void stopHeartBeat() {
+        TimerTask heartBeatTimerTask = this.heartBeatTimerTask;
         super.stopHeartBeat();
 
         if (heartBeatTimerTask != null) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -180,6 +180,7 @@ protected TimerTask buildHeartBeatTimeTask(ErosaConnection connection) {
     }
 
     protected void stopHeartBeat() {
+        TimerTask heartBeatTimerTask = this.heartBeatTimerTask;
         super.stopHeartBeat();
 
         if (heartBeatTimerTask != null) {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -279,8 +279,9 @@ private void loadBinlogChecksum(){
         }
 
         List<String> columnValues = rs.getFieldValues();
-        if(columnValues.get(0).toUpperCase().equals("CRC32")){
-        	binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
+        if (columnValues.size() > 0 && columnValues.get(0) != null
+                && columnValues.get(0).toUpperCase().equals("CRC32")) {
+                binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
         }else{
         	binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;
         }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -279,8 +279,9 @@ private void loadBinlogChecksum(){
         }
 
         List<String> columnValues = rs.getFieldValues();
-        if(columnValues.get(0).toUpperCase().equals("CRC32")){
-        	binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
+        if (columnValues.size() > 0 && columnValues.get(0) != null
+                && columnValues.get(0).toUpperCase().equals("CRC32")) {
+                binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_CRC32;
         }else{
         	binlogChecksum = LogEvent.BINLOG_CHECKSUM_ALG_OFF;
         }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlConnector.java
Patch:
@@ -104,7 +104,7 @@ public void disconnect() throws IOException {
                     executor.update("KILL CONNECTION " + connectionId);
                 } catch (Exception e) {
                     // 忽略具体异常
-                    logger.warn("KILL DUMP " + connectionId + " failure:" + ExceptionUtils.getStackTrace(e));
+                    logger.info("KILL DUMP " + connectionId + " failure:" + ExceptionUtils.getStackTrace(e));
                 } finally {
                     if (connector != null) {
                         connector.disconnect();

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -957,11 +957,10 @@ final Serializable fetchValue(int type, final int meta, boolean isBinary) {
                 jsonValue.toJsonString(builder);
                 value = builder.toString();
                 buffer.position(position + len);
-
                 // byte[] binary = new byte[len];
                 // buffer.fillBytes(binary, 0, len);
                 // value = binary;
-                javaType = Types.VARBINARY;
+                javaType = Types.VARCHAR;
                 length = len;
                 break;
             }

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/SessionHandler.java
Patch:
@@ -66,17 +66,16 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Ex
                             Short.valueOf(sub.getClientId()),
                             sub.getFilter());
                         MDC.put("destination", clientIdentity.getDestination());
-                        
+
                         // 尝试启动，如果已经启动，忽略
                         if (!embeddedServer.isStart(clientIdentity.getDestination())) {
                             ServerRunningMonitor runningMonitor = ServerRunningMonitors.getRunningMonitor(clientIdentity.getDestination());
                             if (!runningMonitor.isStart()) {
                                 runningMonitor.start();
                             }
                         }
-                        
-                        embeddedServer.subscribe(clientIdentity);
 
+                        embeddedServer.subscribe(clientIdentity);
                         ctx.setAttachment(clientIdentity);// 设置状态数据
                         NettyUtils.ack(ctx.getChannel(), null);
                     } else {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -13,6 +13,7 @@
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.springframework.util.CollectionUtils;
 
+import com.alibaba.otter.canal.common.utils.JsonUtils;
 import com.alibaba.otter.canal.parse.CanalEventParser;
 import com.alibaba.otter.canal.parse.CanalHASwitchable;
 import com.alibaba.otter.canal.parse.driver.mysql.packets.server.FieldPacket;
@@ -412,7 +413,7 @@ protected EntryPosition findStartPositionInternal(ErosaConnection connection) {
                     }
                 }
                 // 其余情况
-                logger.warn("prepare to find start position just last position");
+                logger.warn("prepare to find start position just last position\n {}",JsonUtils.marshalToString(logPosition));
                 return logPosition.getPostion();
             } else {
                 // 针对切换的情况，考虑回退时间

File: server/src/main/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded.java
Patch:
@@ -131,6 +131,8 @@ public boolean isStart(String destination) {
      */
     @Override
     public void subscribe(ClientIdentity clientIdentity) throws CanalServerException {
+    	checkStart(clientIdentity.getDestination());
+    	
         CanalInstance canalInstance = canalInstances.get(clientIdentity.getDestination());
         if (!canalInstance.getMetaManager().isStart()) {
             canalInstance.getMetaManager().start();

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/SessionHandler.java
Patch:
@@ -66,15 +66,16 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Ex
                             Short.valueOf(sub.getClientId()),
                             sub.getFilter());
                         MDC.put("destination", clientIdentity.getDestination());
-                        embeddedServer.subscribe(clientIdentity);
-
+                        
                         // 尝试启动，如果已经启动，忽略
                         if (!embeddedServer.isStart(clientIdentity.getDestination())) {
                             ServerRunningMonitor runningMonitor = ServerRunningMonitors.getRunningMonitor(clientIdentity.getDestination());
                             if (!runningMonitor.isStart()) {
                                 runningMonitor.start();
                             }
                         }
+                        
+                        embeddedServer.subscribe(clientIdentity);
 
                         ctx.setAttachment(clientIdentity);// 设置状态数据
                         NettyUtils.ack(ctx.getChannel(), null);

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/monitor/SpringInstanceConfigMonitor.java
Patch:
@@ -175,6 +175,7 @@ private void notifyStop(String destination) {
         InstanceAction action = actions.remove(destination);
         try {
             action.stop(destination);
+            lastFiles.remove(destination);
             logger.info("auto notify stop {} successful.", destination);
         } catch (Throwable e) {
             logger.error("scan delete found[{}] but stop failed", destination, ExceptionUtils.getFullStackTrace(e));

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/monitor/SpringInstanceConfigMonitor.java
Patch:
@@ -175,6 +175,7 @@ private void notifyStop(String destination) {
         InstanceAction action = actions.remove(destination);
         try {
             action.stop(destination);
+            lastFiles.remove(destination);
             logger.info("auto notify stop {} successful.", destination);
         } catch (Throwable e) {
             logger.error("scan delete found[{}] but stop failed", destination, ExceptionUtils.getFullStackTrace(e));

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -6,6 +6,7 @@
 import java.nio.charset.Charset;
 import java.util.List;
 
+import com.taobao.tddl.dbsync.binlog.LogPosition;
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -89,6 +90,7 @@ public void seek(String binlogfilename, Long binlogPosition, SinkFunction func)
         decoder.handle(LogEvent.QUERY_EVENT);
         decoder.handle(LogEvent.XID_EVENT);
         LogContext context = new LogContext();
+        context.setLogPosition(new LogPosition(binlogfilename));
         while (fetcher.fetch()) {
             LogEvent event = null;
             event = decoder.decode(fetcher, context);
@@ -110,6 +112,7 @@ public void dump(String binlogfilename, Long binlogPosition, SinkFunction func)
         fetcher.start(connector.getChannel());
         LogDecoder decoder = new LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);
         LogContext context = new LogContext();
+        context.setLogPosition(new LogPosition(binlogfilename));
         while (fetcher.fetch()) {
             LogEvent event = null;
             event = decoder.decode(fetcher, context);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -6,6 +6,7 @@
 import java.nio.charset.Charset;
 import java.util.List;
 
+import com.taobao.tddl.dbsync.binlog.LogPosition;
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -89,6 +90,7 @@ public void seek(String binlogfilename, Long binlogPosition, SinkFunction func)
         decoder.handle(LogEvent.QUERY_EVENT);
         decoder.handle(LogEvent.XID_EVENT);
         LogContext context = new LogContext();
+        context.setLogPosition(new LogPosition(binlogfilename));
         while (fetcher.fetch()) {
             LogEvent event = null;
             event = decoder.decode(fetcher, context);
@@ -110,6 +112,7 @@ public void dump(String binlogfilename, Long binlogPosition, SinkFunction func)
         fetcher.start(connector.getChannel());
         LogDecoder decoder = new LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);
         LogContext context = new LogContext();
+        context.setLogPosition(new LogPosition(binlogfilename));
         while (fetcher.fetch()) {
             LogEvent event = null;
             event = decoder.decode(fetcher, context);

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -395,7 +395,7 @@ protected EntryPosition findStartPositionInternal(ErosaConnection connection) {
                     // binlog定位位点失败,可能有两个原因:
                     // 1. binlog位点被删除
                     // 2.vip模式的mysql,发生了主备切换,判断一下serverId是否变化,针对这种模式可以发起一次基于时间戳查找合适的binlog位点
-                    boolean case2 = (standbyInfo.getAddress() == null)
+                    boolean case2 = (standbyInfo == null || standbyInfo.getAddress() == null)
                                     && logPosition.getPostion().getServerId() != null
                                     && !logPosition.getPostion().getServerId().equals(findServerId(mysqlConnection));
                     if (case2) {

File: meta/src/main/java/com/alibaba/otter/canal/meta/PeriodMixedMetaManager.java
Patch:
@@ -142,8 +142,8 @@ public void run() {
     }
 
     public void updateCursor(ClientIdentity clientIdentity, Position position) throws CanalMetaManagerException {
-        updateCursorTasks.add(clientIdentity);// 添加到任务队列中进行触发
         super.updateCursor(clientIdentity, position);
+        updateCursorTasks.add(clientIdentity);// 添加到任务队列中进行触发
     }
 
     public Position getCursor(ClientIdentity clientIdentity) throws CanalMetaManagerException {

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java
Patch:
@@ -281,7 +281,7 @@ public StringBuilder toJsonString(StringBuilder buf) {
                             buf.append(", ");
                         }
                         buf.append('"').append(key(i)).append('"');
-                        buf.append(" :");
+                        buf.append(": ");
                         element(i).toJsonString(buf);
                     }
                     buf.append("}");

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -68,7 +68,7 @@ public class MysqlEventParser extends AbstractMysqlEventParser implements CanalE
 
     // update by yishun.chen,特殊异常处理参数
     private int                dumpErrorCount                    = 0;        // binlogDump失败异常计数
-    private int                dumpErrorCountThreshold           = 3;        // binlogDump失败异常计数阀值
+    private int                dumpErrorCountThreshold           = 2;        // binlogDump失败异常计数阀值
 
     protected ErosaConnection buildErosaConnection() {
         return buildMysqlConnection(this.runningInfo);
@@ -395,7 +395,8 @@ protected EntryPosition findStartPositionInternal(ErosaConnection connection) {
                     // binlog定位位点失败,可能有两个原因:
                     // 1. binlog位点被删除
                     // 2.vip模式的mysql,发生了主备切换,判断一下serverId是否变化,针对这种模式可以发起一次基于时间戳查找合适的binlog位点
-                    boolean case2 = standbyInfo == null && logPosition.getPostion().getServerId() != null
+                    boolean case2 = (standbyInfo.getAddress() == null)
+                                    && logPosition.getPostion().getServerId() != null
                                     && !logPosition.getPostion().getServerId().equals(findServerId(mysqlConnection));
                     if (case2) {
                         long timestamp = logPosition.getPostion().getTimestamp();

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/LogEvent.java
Patch:
@@ -267,6 +267,7 @@ public abstract class LogEvent {
     public static final int    MYSQL_TYPE_TIMESTAMP2                    = 17;
     public static final int    MYSQL_TYPE_DATETIME2                     = 18;
     public static final int    MYSQL_TYPE_TIME2                         = 19;
+    public static final int    MYSQL_TYPE_JSON                          = 245;
     public static final int    MYSQL_TYPE_NEWDECIMAL                    = 246;
     public static final int    MYSQL_TYPE_ENUM                          = 247;
     public static final int    MYSQL_TYPE_SET                           = 248;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/TableMapLogEvent.java
Patch:
@@ -402,6 +402,7 @@ private final void decodeFields(LogBuffer buffer, final int len) {
                 case MYSQL_TYPE_DOUBLE:
                 case MYSQL_TYPE_FLOAT:
                 case MYSQL_TYPE_GEOMETRY:
+                case MYSQL_TYPE_JSON:
                     /*
                      * These types store a single byte.
                      */

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/AbstractMysqlEventParser.java
Patch:
@@ -88,7 +88,7 @@ public void setFilterQueryDml(boolean filterQueryDml) {
     public void setFilterQueryDdl(boolean filterQueryDdl) {
         this.filterQueryDdl = filterQueryDdl;
     }
-    
+
     public void setFilterRows(boolean filterRows) {
         this.filterRows = filterRows;
     }

File: store/src/main/java/com/alibaba/otter/canal/store/helper/CanalEventUtils.java
Patch:
@@ -51,6 +51,8 @@ public static LogPosition createPosition(Event event) {
         position.setJournalName(event.getEntry().getHeader().getLogfileName());
         position.setPosition(event.getEntry().getHeader().getLogfileOffset());
         position.setTimestamp(event.getEntry().getHeader().getExecuteTime());
+        // add serverId at 2016-06-28
+        position.setServerId(event.getEntry().getHeader().getServerId());
 
         LogPosition logPosition = new LogPosition();
         logPosition.setPostion(position);

File: client/src/main/java/com/alibaba/otter/canal/client/impl/ClusterCanalConnector.java
Patch:
@@ -47,7 +47,7 @@ public void connect() throws CanalClientException {
                     currentConnector = new SimpleCanalConnector(null, username, password, destination) {
 
                         @Override
-                        public SocketAddress getAddress() {
+                        public SocketAddress getNextAddress() {
                             return accessStrategy.nextNode();
                         }
 

File: client/src/main/java/com/alibaba/otter/canal/client/impl/running/ClientRunningMonitor.java
Patch:
@@ -64,6 +64,8 @@ public void handleDataChange(String dataPath, Object data) throws Exception {
             public void handleDataDeleted(String dataPath) throws Exception {
                 MDC.put("destination", destination);
                 mutex.set(false);
+                // 触发一下退出,可能是人为干预的释放操作或者网络闪断引起的session expired timeout
+                processActiveExit();
                 if (!release && activeData != null && isMine(activeData.getAddress())) {
                     // 如果上一次active的状态就是本机，则即时触发一下active抢占
                     initRunning();

File: client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java
Patch:
@@ -28,7 +28,7 @@ public class CanalConnectors {
      */
     public static CanalConnector newSingleConnector(SocketAddress address, String destination, String username,
                                                     String password) {
-        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination, null);
+        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination);
         canalConnector.setSoTimeout(30 * 1000);
         return canalConnector;
     }

File: client/src/main/java/com/alibaba/otter/canal/client/CanalNodeAccessStrategy.java
Patch:
@@ -10,5 +10,7 @@
  */
 public interface CanalNodeAccessStrategy {
 
+    SocketAddress currentNode();
+
     SocketAddress nextNode();
 }

File: client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java
Patch:
@@ -28,7 +28,7 @@ public class CanalConnectors {
      */
     public static CanalConnector newSingleConnector(SocketAddress address, String destination, String username,
                                                     String password) {
-        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination);
+        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination, null);
         canalConnector.setSoTimeout(30 * 1000);
         return canalConnector;
     }

File: client/src/main/java/com/alibaba/otter/canal/client/impl/ClusterCanalConnector.java
Patch:
@@ -45,7 +45,7 @@ public void connect() throws CanalClientException {
             int times = 0;
             while (true) {
                 try {
-                    currentConnector = new SimpleCanalConnector(nextAddress, username, password, destination);
+                    currentConnector = new SimpleCanalConnector(nextAddress, username, password, destination, accessStrategy);
                     currentConnector.setSoTimeout(soTimeout);
                     if (filter != null) {
                         currentConnector.setFilter(filter);
@@ -57,7 +57,7 @@ public void connect() throws CanalClientException {
                     currentConnector.connect();
                     break;
                 } catch (Exception e) {
-                    logger.warn("failed to connect to:{} after retry {} times", nextAddress, times);
+                    logger.warn("failed to connect to:{} after retry {} times", currentConnector.getAddress(), times);
                     currentConnector.disconnect();
                     currentConnector = null;
                     // retry for #retryTimes for each node when trying to

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -350,7 +350,7 @@ private Entry parseRowsEvent(RowsLogEvent event) {
             rowChangeBuider.setEventType(eventType);
             RowsLogBuffer buffer = event.getRowsBuf(charset.name());
             BitSet columns = event.getColumns();
-            BitSet changeColumns = event.getColumns();
+            BitSet changeColumns = event.getChangeColumns();
             boolean tableError = false;
             TableMeta tableMeta = null;
             if (tableMetaCache != null) {// 入错存在table meta cache
@@ -380,7 +380,7 @@ private Entry parseRowsEvent(RowsLogEvent event) {
                         break;
                     }
 
-                    tableError |= parseOneRow(rowDataBuilder, event, buffer, event.getChangeColumns(), true, tableMeta);
+                    tableError |= parseOneRow(rowDataBuilder, event, buffer, changeColumns, true, tableMeta);
                 }
 
                 rowChangeBuider.addRowDatas(rowDataBuilder.build());

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java
Patch:
@@ -231,6 +231,8 @@ public boolean sink(EVENT event) {
                             sendAlarm(destination, ExceptionUtils.getFullStackTrace(e));
                         }
                     } finally {
+                        // 重新置为中断状态
+                        Thread.interrupted();
                         // 关闭一下链接
                         afterDump(erosaConnection);
                         try {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -141,6 +141,8 @@ private void sendBinlogDump(String binlogfilename, Long binlogPosition) throws I
         binlogDumpHeader.setPacketSequenceNumber((byte) 0x00);
         PacketManager.write(connector.getChannel(), new ByteBuffer[] { ByteBuffer.wrap(binlogDumpHeader.toBytes()),
                 ByteBuffer.wrap(cmdBody) });
+
+        connector.setDumping(true);
     }
 
     public MysqlConnection fork() {

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java
Patch:
@@ -28,7 +28,6 @@
 import com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache;
 import com.alibaba.otter.canal.parse.support.AuthenticationInfo;
 import com.alibaba.otter.canal.protocol.CanalEntry;
-import com.alibaba.otter.canal.protocol.CanalEntry.Entry;
 import com.alibaba.otter.canal.protocol.position.EntryPosition;
 import com.alibaba.otter.canal.protocol.position.LogPosition;
 import com.taobao.tddl.dbsync.binlog.LogEvent;

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -305,6 +305,9 @@ private Entry parseXidEvent(XidLogEvent event) {
     }
 
     private Entry parseRowsEvent(RowsLogEvent event) {
+        if (filterQueryDml) {
+            return null;
+        }
         try {
             TableMapLogEvent table = event.getTable();
             if (table == null) {

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithNettyTest.java
Patch:
@@ -49,7 +49,7 @@ public class CanalServerWithNettyTest {
 
     @Before
     public void setUp() {
-        CanalServerWithEmbedded embeddedServer = CanalServerWithEmbedded.instance();
+        CanalServerWithEmbedded embeddedServer = new CanalServerWithEmbedded();
         embeddedServer.setCanalInstanceGenerator(new CanalInstanceGenerator() {
 
             public CanalInstance generate(String destination) {
@@ -58,7 +58,8 @@ public CanalInstance generate(String destination) {
             }
         });
 
-        nettyServer = new CanalServerWithNetty(embeddedServer);
+        nettyServer = CanalServerWithNetty.instance();
+        nettyServer.setEmbeddedServer(embeddedServer);
         nettyServer.setPort(1088);
         nettyServer.start();
     }

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java
Patch:
@@ -623,8 +623,9 @@ private boolean isUpdate(List<Column> bfColumns, String newValue, int index) {
                 if (column.getIsNull() && newValue == null) {
                     // 如果全是null
                     return false;
-                } else if (newValue != null && column.getValue().equals(newValue)) {
-                    // 如果不围null，并且相等
+                } else if (newValue != null && (!column.getIsNull() && column.getValue().equals(newValue))) {
+                    // fixed issue #135, old column is Null
+                    // 如果不为null，并且相等
                     return false;
                 }
             }

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java
Patch:
@@ -163,10 +163,13 @@ static int mysqlToJavaType(int type, final int meta, boolean isBinary) {
 
             case LogEvent.MYSQL_TYPE_TIMESTAMP:
             case LogEvent.MYSQL_TYPE_DATETIME:
+            case LogEvent.MYSQL_TYPE_TIMESTAMP2:
+            case LogEvent.MYSQL_TYPE_DATETIME2:
                 javaType = Types.TIMESTAMP;
                 break;
 
             case LogEvent.MYSQL_TYPE_TIME:
+            case LogEvent.MYSQL_TYPE_TIME2:
                 javaType = Types.TIME;
                 break;
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/SimpleDdlParser.java
Patch:
@@ -31,8 +31,9 @@ public class SimpleDdlParser {
     public static final String INSERT_PATTERN         = "^\\s*(INSERT|MERGE|REPLACE)(.*)$";
     public static final String UPDATE_PATTERN         = "^\\s*UPDATE(.*)$";
     public static final String DELETE_PATTERN         = "^\\s*DELETE(.*)$";
-    public static final String RENAME_PATTERN         = "^\\s*RENAME\\s*TABLE\\s*(.*?)\\s*TO\\s*(.*?)$";
-    public static final String RENAME_REMNANT_PATTERN = "^\\s*(.*?)\\s*TO\\s*(.*?)$";
+    public static final String RENAME_PATTERN         = "^\\s*RENAME\\s+TABLE\\s+(.+?)\\s+TO\\s+(.+?)$";
+    public static final String RENAME_REMNANT_PATTERN = "^\\s*(.+?)\\s+TO\\s+(.+?)$";
+
     /**
      * <pre>
      * CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/SimpleDdlParser.java
Patch:
@@ -31,8 +31,9 @@ public class SimpleDdlParser {
     public static final String INSERT_PATTERN         = "^\\s*(INSERT|MERGE|REPLACE)(.*)$";
     public static final String UPDATE_PATTERN         = "^\\s*UPDATE(.*)$";
     public static final String DELETE_PATTERN         = "^\\s*DELETE(.*)$";
-    public static final String RENAME_PATTERN         = "^\\s*RENAME\\s*TABLE\\s*(.*?)\\s*TO\\s*(.*?)$";
-    public static final String RENAME_REMNANT_PATTERN = "^\\s*(.*?)\\s*TO\\s*(.*?)$";
+    public static final String RENAME_PATTERN         = "^\\s*RENAME\\s+TABLE\\s+(.+?)\\s+TO\\s+(.+?)$";
+    public static final String RENAME_REMNANT_PATTERN = "^\\s*(.+?)\\s+TO\\s+(.+?)$";
+
     /**
      * <pre>
      * CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/server/FieldPacket.java
Patch:
@@ -74,6 +74,8 @@ public void fromBytes(byte[] data) throws IOException {
         this.decimals = data[index];
         index++;
         //
+        index += 2;//skip filter
+        //
         if (index < data.length) {
             reader.setIndex(index);
             this.definition = reader.readLengthCodedString(data);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/server/FieldPacket.java
Patch:
@@ -74,6 +74,8 @@ public void fromBytes(byte[] data) throws IOException {
         this.decimals = data[index];
         index++;
         //
+        index += 2;//skip filter
+        //
         if (index < data.length) {
             reader.setIndex(index);
             this.definition = reader.readLengthCodedString(data);

File: dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/DirectLogFetcherTest.java
Patch:
@@ -6,7 +6,6 @@
 import java.sql.Statement;
 
 import org.junit.Assert;
-
 import org.junit.Test;
 
 import com.taobao.tddl.dbsync.binlog.event.DeleteRowsLogEvent;
@@ -30,7 +29,7 @@ public void testSimple() {
             statement.execute("SET @master_binlog_checksum='@@global.binlog_checksum'");
             statement.execute("SET @mariadb_slave_capability='" + LogEvent.MARIA_SLAVE_CAPABILITY_MINE + "'");
 
-            fecther.open(connection, "mysql-bin.000010", 4L, 2);
+            fecther.open(connection, "mysql-bin.000001", 4L, 2);
 
             LogDecoder decoder = new LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);
             LogContext context = new LogContext();

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/SimpleDdlParser.java
Patch:
@@ -27,7 +27,7 @@ public class SimpleDdlParser {
     public static final String DROP_PATTERN         = "^\\s*DROP\\s*(TEMPORARY)?\\s*TABLE\\s*(.*)$";
     public static final String ALERT_PATTERN        = "^\\s*ALTER\\s*(IGNORE)?\\s*TABLE\\s*(.*)$";
     public static final String TRUNCATE_PATTERN     = "^\\s*TRUNCATE\\s*(TABLE)?\\s*(.*)$";
-    public static final String TABLE_PATTERN        = "^(IF\\s*NOT\\s*EXISTS\\s*)?(IF\\s*EXISTS\\s*)?(`?.+?`?[;\\(\\s]+?)?.*$"; // 采用非贪婪模式
+    public static final String TABLE_PATTERN        = "^(IF\\s*NOT\\s*EXISTS\\s*)?(IF\\s*EXISTS\\s*)?(`?.+?`?[;\\(\\s]+?)?.*$";         // 采用非贪婪模式
     public static final String INSERT_PATTERN       = "^\\s*(INSERT|MERGE|REPLACE)(.*)$";
     public static final String UPDATE_PATTERN       = "^\\s*UPDATE(.*)$";
     public static final String DELETE_PATTERN       = "^\\s*DELETE(.*)$";
@@ -42,7 +42,7 @@ public class SimpleDdlParser {
      * http://dev.mysql.com/doc/refman/5.6/en/create-index.html
      * </pre>
      */
-    public static final String CREATE_INDEX_PATTERN = "^\\s*CREATE\\s*.*?\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
+    public static final String CREATE_INDEX_PATTERN = "^\\s*CREATE\\s*(UNIQUE)?(FULLTEXT)?(SPATIAL)?\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
     public static final String DROP_INDEX_PATTERN   = "^\\s*DROP\\s*INDEX\\s*(.*?)\\s*ON\\s*(.*?)$";
 
     public static DdlResult parse(String queryString, String schmeaName) {
@@ -77,7 +77,7 @@ public static DdlResult parse(String queryString, String schmeaName) {
             return result;
         }
 
-        result = parseDdl(queryString, schmeaName, CREATE_INDEX_PATTERN, 2);
+        result = parseDdl(queryString, schmeaName, CREATE_INDEX_PATTERN, 5);
         if (result != null) {
             result.setType(EventType.CINDEX);
             return result;

File: common/src/main/java/com/google/common/collect/MigrateMap.java
Patch:
@@ -6,11 +6,13 @@
 
 public class MigrateMap {
 
+    @SuppressWarnings("deprecation")
     public static <K, V> ConcurrentMap<K, V> makeComputingMap(MapMaker maker,
                                                               Function<? super K, ? extends V> computingFunction) {
         return maker.makeComputingMap(computingFunction);
     }
 
+    @SuppressWarnings("deprecation")
     public static <K, V> ConcurrentMap<K, V> makeComputingMap(Function<? super K, ? extends V> computingFunction) {
         return new MapMaker().makeComputingMap(computingFunction);
     }

File: client/src/main/java/com/alibaba/otter/canal/client/impl/SimpleCanalConnector.java
Patch:
@@ -102,7 +102,7 @@ public void connect() throws CanalClientException {
                 rollback();
             }
         }
-        
+
         connected = true;
     }
 
@@ -411,7 +411,6 @@ public void processActiveExit() {
         }
     }
 
-
     private void waitClientRunning() {
         try {
             if (zkClientx != null) {

File: common/src/main/java/com/alibaba/otter/canal/common/utils/AddressUtils.java
Patch:
@@ -38,7 +38,8 @@ public static boolean isAvailablePort(int port) {
     private static boolean isValidHostAddress(InetAddress address) {
         if (address == null || address.isLoopbackAddress()) return false;
         String name = address.getHostAddress();
-        return (name != null && !EMPTY_IP.equals(name) && !LOCALHOST_IP.equals(name) && IP_PATTERN.matcher(name).matches());
+        return (name != null && !EMPTY_IP.equals(name) && !LOCALHOST_IP.equals(name) && IP_PATTERN.matcher(name)
+            .matches());
     }
 
     public static String getHostIp() {

File: common/src/main/java/com/alibaba/otter/canal/common/zookeeper/running/ServerRunningMonitors.java
Patch:
@@ -11,7 +11,8 @@
 public class ServerRunningMonitors {
 
     private static ServerRunningData serverData;
-    private static Map               runningMonitors; // <String, ServerRunningMonitor>
+    private static Map               runningMonitors; // <String,
+                                                      // ServerRunningMonitor>
 
     public static ServerRunningData getServerData() {
         return serverData;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/PreviousGtidsLogEvent.java
Patch:
@@ -4,16 +4,14 @@
 import com.taobao.tddl.dbsync.binlog.LogEvent;
 
 /**
- * 
  * @author jianghang 2013-4-8 上午12:36:29
  * @version 1.0.3
  * @since mysql 5.6
  */
-public class PreviousGtidsLogEvent  extends LogEvent{
+public class PreviousGtidsLogEvent extends LogEvent {
 
     public PreviousGtidsLogEvent(LogHeader header, LogBuffer buffer, FormatDescriptionLogEvent descriptionEvent){
         super(header);
         // do nothing , just for mysql gtid search function
     }
 }
-

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalLauncher.java
Patch:
@@ -42,7 +42,7 @@ public void run() {
                         controller.stop();
                     } catch (Throwable e) {
                         logger.warn("##something goes wrong when stopping canal Server:\n{}",
-                                    ExceptionUtils.getFullStackTrace(e));
+                            ExceptionUtils.getFullStackTrace(e));
                     } finally {
                         logger.info("## canal server is down.");
                     }
@@ -51,7 +51,7 @@ public void run() {
             });
         } catch (Throwable e) {
             logger.error("## Something goes wrong when starting up the canal Server:\n{}",
-                         ExceptionUtils.getFullStackTrace(e));
+                ExceptionUtils.getFullStackTrace(e));
             System.exit(0);
         }
     }

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/IPacket.java
Patch:
@@ -12,6 +12,7 @@
  * @see 1.0
  */
 public interface IPacket {
+
     /**
      * un-marshal raw bytes into {@link IPacket} state for application usage.<br>
      * 

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/packets/server/HandshakeInitializationPacket.java
Patch:
@@ -75,7 +75,8 @@ public void fromBytes(byte[] data) {
         // 8. bypass filtered bytes
         index += 13;
         // 9. read rest of scramble_buff
-        this.restOfScrambleBuff = ByteHelper.readFixedLengthBytes(data, index, 12); // 虽然Handshake Initialization
+        this.restOfScrambleBuff = ByteHelper.readFixedLengthBytes(data, index, 12); // 虽然Handshake
+                                                                                    // Initialization
         // Packet规定最后13个byte是剩下的scrumble,
         // 但实际上最后一个字节是0, 不应该包含在scrumble中.
         // end read

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/utils/ByteHelper.java
Patch:
@@ -23,7 +23,7 @@ public static void writeNullTerminatedString(String str, ByteArrayOutputStream o
         out.write(str.getBytes());
         out.write(MSC.NULL_TERMINATED_STRING_DELIMITER);
     }
-    
+
     public static void writeNullTerminated(byte[] data, ByteArrayOutputStream out) throws IOException {
         out.write(data);
         out.write(MSC.NULL_TERMINATED_STRING_DELIMITER);

File: driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/utils/LengthCodedStringReader.java
Patch:
@@ -26,7 +26,7 @@ public String readLengthCodedString(byte[] data) throws IOException {
 
         try {
             return new String(ArrayUtils.subarray(data, getIndex(), (int) (getIndex() + length)),
-                              encoding == null ? CODE_PAGE_1252 : encoding);
+                encoding == null ? CODE_PAGE_1252 : encoding);
         } finally {
             setIndex((int) (getIndex() + length));
         }

File: example/src/main/java/com/alibaba/otter/canal/example/SimpleCanalClientTest.java
Patch:
@@ -24,7 +24,7 @@ public static void main(String args[]) {
         // 根据ip，直接创建链接，无HA的功能
         String destination = "example";
         CanalConnector connector = CanalConnectors.newSingleConnector(new InetSocketAddress(AddressUtils.getHostIp(),
-                                                                                            11111), destination, "", "");
+            11111), destination, "", "");
 
         final SimpleCanalClientTest clientTest = new SimpleCanalClientTest(destination);
         clientTest.setConnector(connector);

File: instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java
Patch:
@@ -115,8 +115,7 @@ public CanalInstanceWithManager(Canal canal, String filter){
     public void start() {
         super.start();
         // 初始化metaManager
-        logger.info("start CannalInstance for {}-{} with parameters:{}", canalId, destination,
-                parameters);
+        logger.info("start CannalInstance for {}-{} with parameters:{}", canalId, destination, parameters);
 
         if (!metaManager.isStart()) {
             metaManager.start();

File: protocol/src/main/java/com/alibaba/otter/canal/protocol/ClientIdentity.java
Patch:
@@ -1,6 +1,7 @@
 package com.alibaba.otter.canal.protocol;
 
 import java.io.Serializable;
+
 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.lang.builder.ToStringBuilder;
 
@@ -10,8 +11,7 @@
  * @author zebin.xuzb @ 2012-6-20
  * @version 1.0.0
  */
-public class ClientIdentity implements Serializable
-{
+public class ClientIdentity implements Serializable {
 
     private String destination;
     private short  clientId;

File: server/src/main/java/com/alibaba/otter/canal/server/netty/handler/FixedHeaderFrameDecoder.java
Patch:
@@ -16,6 +16,6 @@ public class FixedHeaderFrameDecoder extends ReplayingDecoder<VoidEnum> {
 
     protected Object decode(ChannelHandlerContext ctx, Channel channel, ChannelBuffer buffer, VoidEnum state)
                                                                                                              throws Exception {
-         return buffer.readBytes(buffer.readInt());
+        return buffer.readBytes(buffer.readInt());
     }
 }

File: sink/src/main/java/com/alibaba/otter/canal/sink/entry/EntryEventSink.java
Patch:
@@ -132,8 +132,9 @@ protected boolean doFilter(Event event) {
             boolean need = filter.filter(name);
             if (!need) {
                 logger.debug("filter name[{}] entry : {}:{}",
-                        name, event.getEntry().getHeader().getLogfileName(),
-                        event.getEntry().getHeader().getLogfileOffset());
+                    name,
+                    event.getEntry().getHeader().getLogfileName(),
+                    event.getEntry().getHeader().getLogfileOffset());
             }
 
             return need;

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -33,7 +33,7 @@
 import com.alibaba.otter.canal.instance.manager.CanalConfigClient;
 import com.alibaba.otter.canal.instance.manager.ManagerCanalInstanceGenerator;
 import com.alibaba.otter.canal.instance.spring.SpringCanalInstanceGenerator;
-import com.alibaba.otter.canal.server.embeded.CanalServerWithEmbeded;
+import com.alibaba.otter.canal.server.embedded.CanalServerWithEmbedded;
 import com.alibaba.otter.canal.server.exception.CanalServerException;
 import com.alibaba.otter.canal.server.netty.CanalServerWithNetty;
 import com.google.common.base.Function;
@@ -59,7 +59,7 @@ public class CanalController {
     private boolean                                  autoScan = true;
     private InstanceAction                           defaultAction;
     private Map<InstanceMode, InstanceConfigMonitor> instanceConfigMonitors;
-    private CanalServerWithEmbeded                   embededCanalServer;
+    private CanalServerWithEmbedded embededCanalServer;
     private CanalServerWithNetty                     canalServer;
 
     private CanalInstanceGenerator                   instanceGenerator;
@@ -87,7 +87,7 @@ public CanalConfigClient apply(String managerAddress) {
         cid = Long.valueOf(getProperty(properties, CanalConstants.CANAL_ID));
         ip = getProperty(properties, CanalConstants.CANAL_IP);
         port = Integer.valueOf(getProperty(properties, CanalConstants.CANAL_PORT));
-        embededCanalServer = new CanalServerWithEmbeded();
+        embededCanalServer = new CanalServerWithEmbedded();
         embededCanalServer.setCanalInstanceGenerator(instanceGenerator);// 设置自定义的instanceGenerator
         canalServer = new CanalServerWithNetty(embededCanalServer);
         canalServer.setIp(ip);

File: server/src/main/java/com/alibaba/otter/canal/server/embedded/CanalServerWithEmbedded.java
Patch:
@@ -1,4 +1,4 @@
-package com.alibaba.otter.canal.server.embeded;
+package com.alibaba.otter.canal.server.embedded;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -37,9 +37,9 @@
  * @author zebin.xuzb
  * @version 1.0.0
  */
-public class CanalServerWithEmbeded extends AbstractCanalLifeCycle implements CanalServer {
+public class CanalServerWithEmbedded extends AbstractCanalLifeCycle implements CanalServer {
 
-    private static final Logger        logger = LoggerFactory.getLogger(CanalServerWithEmbeded.class);
+    private static final Logger        logger = LoggerFactory.getLogger(CanalServerWithEmbedded.class);
     private Map<String, CanalInstance> canalInstances;
     // private Map<ClientIdentity, Position> lastRollbackPostions;
     private CanalInstanceGenerator     canalInstanceGenerator;

File: server/src/test/java/com/alibaba/otter/canal/server/BaseCanalServerWithEmbededTest.java
Patch:
@@ -14,7 +14,7 @@
 import com.alibaba.otter.canal.parse.CanalHASwitchable;
 import com.alibaba.otter.canal.protocol.ClientIdentity;
 import com.alibaba.otter.canal.protocol.Message;
-import com.alibaba.otter.canal.server.embeded.CanalServerWithEmbeded;
+import com.alibaba.otter.canal.server.embedded.CanalServerWithEmbedded;
 
 public abstract class BaseCanalServerWithEmbededTest {
 
@@ -26,12 +26,12 @@ public abstract class BaseCanalServerWithEmbededTest {
     protected static final String  PASSWORD       = "retl";
     protected static final String  FILTER         = "retl\\..*,erosa.zk_complaint_bizdata";
 
-    private CanalServerWithEmbeded server;
+    private CanalServerWithEmbedded server;
     private ClientIdentity         clientIdentity = new ClientIdentity(DESTINATION, (short) 1);                               ;
 
     @Before
     public void setUp() {
-        server = new CanalServerWithEmbeded();
+        server = new CanalServerWithEmbedded();
         server.setCanalInstanceGenerator(new CanalInstanceGenerator() {
 
             public CanalInstance generate(String destination) {

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithEmbedded_StandaloneTest.java
Patch:
@@ -11,7 +11,7 @@
 import com.alibaba.otter.canal.instance.manager.model.CanalParameter.SourcingType;
 import com.alibaba.otter.canal.instance.manager.model.CanalParameter.StorageMode;
 
-public class CanalServerWithEmbeded_StandaloneTest extends BaseCanalServerWithEmbededTest {
+public class CanalServerWithEmbedded_StandaloneTest extends BaseCanalServerWithEmbededTest {
 
     protected Canal buildCanal() {
         Canal canal = new Canal();

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithEmbedded_StandbyTest.java
Patch:
@@ -15,7 +15,7 @@
 import com.alibaba.otter.canal.instance.manager.model.CanalParameter.SourcingType;
 import com.alibaba.otter.canal.instance.manager.model.CanalParameter.StorageMode;
 
-public class CanalServerWithEmbeded_StandbyTest extends BaseCanalServerWithEmbededTest {
+public class CanalServerWithEmbedded_StandbyTest extends BaseCanalServerWithEmbededTest {
 
     private ZkClient zkClient = new ZkClient(cluster1);
 

File: server/src/test/java/com/alibaba/otter/canal/server/CanalServerWithNettyTest.java
Patch:
@@ -31,7 +31,7 @@
 import com.alibaba.otter.canal.protocol.CanalPacket.PacketType;
 import com.alibaba.otter.canal.protocol.CanalPacket.Sub;
 import com.alibaba.otter.canal.protocol.CanalPacket.Unsub;
-import com.alibaba.otter.canal.server.embeded.CanalServerWithEmbeded;
+import com.alibaba.otter.canal.server.embedded.CanalServerWithEmbedded;
 import com.alibaba.otter.canal.server.netty.CanalServerWithNetty;
 
 public class CanalServerWithNettyTest {
@@ -49,7 +49,7 @@ public class CanalServerWithNettyTest {
 
     @Before
     public void setUp() {
-        CanalServerWithEmbeded embededServer = new CanalServerWithEmbeded();
+        CanalServerWithEmbedded embededServer = new CanalServerWithEmbedded();
         embededServer.setCanalInstanceGenerator(new CanalInstanceGenerator() {
 
             public CanalInstance generate(String destination) {

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/FileLogFetcher.java
Patch:
@@ -129,11 +129,11 @@ public boolean fetch() throws IOException {
             }
         } else if (limit > 0) {
             System.arraycopy(buffer, origin, buffer, 0, limit);
+            position -= origin;
+            origin = 0;
             final int len = fin.read(buffer, limit, buffer.length - limit);
             if (len >= 0) {
                 limit += len;
-                position -= origin;
-                origin = 0;
 
                 /* More binlog to fetch */
                 return true;

File: dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/FileLogFetcher.java
Patch:
@@ -129,11 +129,11 @@ public boolean fetch() throws IOException {
             }
         } else if (limit > 0) {
             System.arraycopy(buffer, origin, buffer, 0, limit);
+            position -= origin;
+            origin = 0;
             final int len = fin.read(buffer, limit, buffer.length - limit);
             if (len >= 0) {
                 limit += len;
-                position -= origin;
-                origin = 0;
 
                 /* More binlog to fetch */
                 return true;

File: deployer/src/main/java/com/alibaba/otter/canal/deployer/CanalController.java
Patch:
@@ -182,7 +182,8 @@ public void processStop() {
                 public void start(String destination) {
                     InstanceConfig config = instanceConfigs.get(destination);
                     if (config == null) {
-                        config = new InstanceConfig(globalInstanceConfig);
+                        // 重新读取一下instance config
+                        config = parseInstanceConfig(properties, destination);
                         instanceConfigs.put(destination, config);
                     }
 

File: parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlConnection.java
Patch:
@@ -84,6 +84,7 @@ public void seek(String binlogfilename, Long binlogPosition, SinkFunction func)
         fetcher.start(connector.getChannel());
         LogDecoder decoder = new LogDecoder();
         decoder.handle(LogEvent.ROTATE_EVENT);
+        decoder.handle(LogEvent.FORMAT_DESCRIPTION_EVENT);
         decoder.handle(LogEvent.QUERY_EVENT);
         decoder.handle(LogEvent.XID_EVENT);
         LogContext context = new LogContext();
@@ -202,7 +203,6 @@ private void updateSettings() throws IOException {
             logger.warn(ExceptionUtils.getFullStackTrace(e));
         }
 
-        
         try {
             // mariadb针对特殊的类型，需要设置session变量
             update("SET @mariadb_slave_capability='" + LogEvent.MARIA_SLAVE_CAPABILITY_MINE + "'");

