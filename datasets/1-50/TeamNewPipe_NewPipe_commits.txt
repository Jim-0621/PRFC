File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -462,7 +462,6 @@ public void handleIntent(@NonNull final Intent intent) {
         if (oldPlayerType != playerType && playQueue != null) {
             // If playerType changes from one to another we should reload the player
             // (to disable/enable video stream or to set quality)
-            setRecovery();
             reloadPlayQueueManager();
         }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/SubscriptionsExportService.java
Patch:
@@ -76,7 +76,7 @@ public int onStartCommand(final Intent intent, final int flags, final int startI
 
         try {
             outFile = new StoredFileHelper(this, path, "application/json");
-            outputStream = new SharpOutputStream(outFile.getStream());
+            outputStream = new SharpOutputStream(outFile.openAndTruncateStream());
         } catch (final IOException e) {
             handleError(e);
             return START_NOT_STICKY;

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -462,7 +462,9 @@ public void handleIntent(@NonNull final Intent intent) {
         if (oldPlayerType != playerType && playQueue != null) {
             // If playerType changes from one to another we should reload the player
             // (to disable/enable video stream or to set quality)
-            setRecovery();
+            if (playerType != PlayerType.POPUP) {
+                setRecovery();
+            }
             reloadPlayQueueManager();
         }
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -154,6 +154,6 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " AND :streamUrl = :streamUrl"
 
             + " GROUP BY " + JOIN_PLAYLIST_ID
-            + " ORDER BY " + PLAYLIST_DISPLAY_INDEX)
+            + " ORDER BY " + PLAYLIST_DISPLAY_INDEX + ", " + PLAYLIST_NAME)
     Flowable<List<PlaylistDuplicatesEntry>> getPlaylistDuplicatesMetadata(String streamUrl);
 }

File: app/src/main/java/org/schabi/newpipe/info_list/dialog/StreamDialogDefaultEntry.java
Patch:
@@ -114,7 +114,8 @@ public enum StreamDialogDefaultEntry {
             fetchStreamInfoAndSaveToDatabase(fragment.requireContext(), item.getServiceId(),
                     item.getUrl(), info -> {
                         // Ensure the fragment is attached and its state hasn't been saved to avoid
-                        // showing dialog during lifecycle changes or when the activity is paused.
+                        // showing dialog during lifecycle changes or when the activity is paused,
+                        // e.g. by selecting the download option and opening a different fragment.
                         if (fragment.isAdded() && !fragment.isStateSaved()) {
                             final DownloadDialog downloadDialog =
                                     new DownloadDialog(fragment.requireContext(), info);

File: app/src/main/java/org/schabi/newpipe/local/dialog/PlaylistAppendDialog.java
Patch:
@@ -160,7 +160,8 @@ private void onPlaylistSelected(@NonNull final LocalPlaylistManager manager,
                 .subscribe(ignored -> {
                     successToast.show();
 
-                    if (playlist.thumbnailUrl.equals(PlaylistEntity.DEFAULT_THUMBNAIL)) {
+                    if (playlist.thumbnailUrl != null
+                            && playlist.thumbnailUrl.equals(PlaylistEntity.DEFAULT_THUMBNAIL)) {
                         playlistDisposables.add(manager
                                 .changePlaylistThumbnail(playlist.getUid(), streams.get(0).getUid(),
                                         false)

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -13,6 +13,8 @@
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -22,8 +24,6 @@
 
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import icepick.State;
-
 public abstract class BaseStateFragment<I> extends BaseFragment implements ViewContract<I> {
     @State
     protected AtomicBoolean wasLoading = new AtomicBoolean();
@@ -134,6 +134,7 @@ public void hideLoading() {
         hideErrorPanel();
     }
 
+    @Override
     public void showEmptyState() {
         isLoading.set(false);
         if (emptyStateView != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.stream.Description;
@@ -19,8 +21,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class DescriptionFragment extends BaseDescriptionFragment {
 
     @State
@@ -31,7 +31,7 @@ public DescriptionFragment(final StreamInfo streamInfo) {
     }
 
     public DescriptionFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -56,6 +56,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.preference.PreferenceManager;
 
+import com.evernote.android.state.State;
 import com.google.android.exoplayer2.PlaybackException;
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.material.appbar.AppBarLayout;
@@ -127,7 +128,6 @@
 import java.util.concurrent.TimeUnit;
 import java.util.function.Consumer;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -9,6 +9,8 @@
 
 import androidx.annotation.NonNull;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -24,7 +26,6 @@
 import java.util.List;
 import java.util.Queue;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -143,7 +144,7 @@ public void startLoading(final boolean forceLoad) {
         currentWorker = loadResult(forceLoad)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .subscribe((@NonNull L result) -> {
+                .subscribe((@NonNull final L result) -> {
                     isLoading.set(false);
                     currentInfo = result;
                     currentNextPage = result.getNextPage();

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelAboutFragment.java
Patch:
@@ -10,6 +10,8 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
@@ -20,8 +22,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class ChannelAboutFragment extends BaseDescriptionFragment {
     @State
     protected ChannelInfo channelInfo;
@@ -31,7 +31,7 @@ public class ChannelAboutFragment extends BaseDescriptionFragment {
     }
 
     public ChannelAboutFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -12,6 +12,8 @@
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.core.text.HtmlCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.CommentRepliesHeaderBinding;
 import org.schabi.newpipe.error.UserAction;
@@ -30,7 +32,6 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -29,7 +31,6 @@
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 
 /**

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -15,6 +15,7 @@
 import androidx.annotation.Nullable;
 import androidx.viewbinding.ViewBinding;
 
+import com.evernote.android.state.State;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.reactivestreams.Subscriber;
@@ -45,7 +46,6 @@
 import java.util.List;
 import java.util.Objects;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -368,6 +368,7 @@ private void deleteEntry(final int index) {
         }
     }
 
+    @Override
     public PlayQueue getPlayQueue() {
         return getPlayQueue(0);
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -27,6 +27,8 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.core.text.util.LinkifyCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -44,8 +46,6 @@
 import java.util.Collections;
 import java.util.List;
 
-import icepick.State;
-
 public class SubscriptionsImportFragment extends BaseFragment {
     @State
     int currentServiceId = Constants.NO_SERVICE_ID;

File: app/src/main/java/org/schabi/newpipe/info_list/dialog/StreamDialogDefaultEntry.java
Patch:
@@ -114,7 +114,7 @@ public enum StreamDialogDefaultEntry {
             fetchStreamInfoAndSaveToDatabase(fragment.requireContext(), item.getServiceId(),
                     item.getUrl(), info -> {
                         // Ensure the fragment is attached and its state hasn't been saved to avoid
-                        // showing the dialog during lifecycle changes or when the activity is paused.
+                        // showing dialog during lifecycle changes or when the activity is paused.
                         if (fragment.isAdded() && !fragment.isStateSaved()) {
                             final DownloadDialog downloadDialog =
                                     new DownloadDialog(fragment.requireContext(), info);

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -13,6 +13,8 @@
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -22,8 +24,6 @@
 
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import icepick.State;
-
 public abstract class BaseStateFragment<I> extends BaseFragment implements ViewContract<I> {
     @State
     protected AtomicBoolean wasLoading = new AtomicBoolean();
@@ -134,6 +134,7 @@ public void hideLoading() {
         hideErrorPanel();
     }
 
+    @Override
     public void showEmptyState() {
         isLoading.set(false);
         if (emptyStateView != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.stream.Description;
@@ -19,8 +21,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class DescriptionFragment extends BaseDescriptionFragment {
 
     @State
@@ -31,7 +31,7 @@ public DescriptionFragment(final StreamInfo streamInfo) {
     }
 
     public DescriptionFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -56,6 +56,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.preference.PreferenceManager;
 
+import com.evernote.android.state.State;
 import com.google.android.exoplayer2.PlaybackException;
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.material.appbar.AppBarLayout;
@@ -127,7 +128,6 @@
 import java.util.concurrent.TimeUnit;
 import java.util.function.Consumer;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -9,6 +9,8 @@
 
 import androidx.annotation.NonNull;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -24,7 +26,6 @@
 import java.util.List;
 import java.util.Queue;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -143,7 +144,7 @@ public void startLoading(final boolean forceLoad) {
         currentWorker = loadResult(forceLoad)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .subscribe((@NonNull L result) -> {
+                .subscribe((@NonNull final L result) -> {
                     isLoading.set(false);
                     currentInfo = result;
                     currentNextPage = result.getNextPage();

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelAboutFragment.java
Patch:
@@ -10,6 +10,8 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
@@ -20,8 +22,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class ChannelAboutFragment extends BaseDescriptionFragment {
     @State
     protected ChannelInfo channelInfo;
@@ -31,7 +31,7 @@ public class ChannelAboutFragment extends BaseDescriptionFragment {
     }
 
     public ChannelAboutFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -12,6 +12,8 @@
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.core.text.HtmlCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.CommentRepliesHeaderBinding;
 import org.schabi.newpipe.error.UserAction;
@@ -30,7 +32,6 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -29,7 +31,6 @@
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 
 /**

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -15,6 +15,7 @@
 import androidx.annotation.Nullable;
 import androidx.viewbinding.ViewBinding;
 
+import com.evernote.android.state.State;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.reactivestreams.Subscriber;
@@ -45,7 +46,6 @@
 import java.util.List;
 import java.util.Objects;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -368,6 +368,7 @@ private void deleteEntry(final int index) {
         }
     }
 
+    @Override
     public PlayQueue getPlayQueue() {
         return getPlayQueue(0);
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -27,6 +27,8 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.core.text.util.LinkifyCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -44,8 +46,6 @@
 import java.util.Collections;
 import java.util.List;
 
-import icepick.State;
-
 public class SubscriptionsImportFragment extends BaseFragment {
     @State
     int currentServiceId = Constants.NO_SERVICE_ID;

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -13,6 +13,8 @@
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -22,8 +24,6 @@
 
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import icepick.State;
-
 public abstract class BaseStateFragment<I> extends BaseFragment implements ViewContract<I> {
     @State
     protected AtomicBoolean wasLoading = new AtomicBoolean();
@@ -134,6 +134,7 @@ public void hideLoading() {
         hideErrorPanel();
     }
 
+    @Override
     public void showEmptyState() {
         isLoading.set(false);
         if (emptyStateView != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.stream.Description;
@@ -19,8 +21,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class DescriptionFragment extends BaseDescriptionFragment {
 
     @State
@@ -31,7 +31,7 @@ public DescriptionFragment(final StreamInfo streamInfo) {
     }
 
     public DescriptionFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -56,6 +56,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.preference.PreferenceManager;
 
+import com.evernote.android.state.State;
 import com.google.android.exoplayer2.PlaybackException;
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.material.appbar.AppBarLayout;
@@ -127,7 +128,6 @@
 import java.util.concurrent.TimeUnit;
 import java.util.function.Consumer;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -9,6 +9,8 @@
 
 import androidx.annotation.NonNull;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -24,7 +26,6 @@
 import java.util.List;
 import java.util.Queue;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -143,7 +144,7 @@ public void startLoading(final boolean forceLoad) {
         currentWorker = loadResult(forceLoad)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .subscribe((@NonNull L result) -> {
+                .subscribe((@NonNull final L result) -> {
                     isLoading.set(false);
                     currentInfo = result;
                     currentNextPage = result.getNextPage();

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelAboutFragment.java
Patch:
@@ -10,6 +10,8 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
@@ -20,8 +22,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class ChannelAboutFragment extends BaseDescriptionFragment {
     @State
     protected ChannelInfo channelInfo;
@@ -31,7 +31,7 @@ public class ChannelAboutFragment extends BaseDescriptionFragment {
     }
 
     public ChannelAboutFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -12,6 +12,8 @@
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.core.text.HtmlCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.CommentRepliesHeaderBinding;
 import org.schabi.newpipe.error.UserAction;
@@ -30,7 +32,6 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -29,7 +31,6 @@
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 
 /**

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -15,6 +15,7 @@
 import androidx.annotation.Nullable;
 import androidx.viewbinding.ViewBinding;
 
+import com.evernote.android.state.State;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.reactivestreams.Subscriber;
@@ -45,7 +46,6 @@
 import java.util.List;
 import java.util.Objects;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -368,6 +368,7 @@ private void deleteEntry(final int index) {
         }
     }
 
+    @Override
     public PlayQueue getPlayQueue() {
         return getPlayQueue(0);
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -27,6 +27,8 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.core.text.util.LinkifyCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -44,8 +46,6 @@
 import java.util.Collections;
 import java.util.List;
 
-import icepick.State;
-
 public class SubscriptionsImportFragment extends BaseFragment {
     @State
     int currentServiceId = Constants.NO_SERVICE_ID;

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -13,6 +13,8 @@
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -22,8 +24,6 @@
 
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import icepick.State;
-
 public abstract class BaseStateFragment<I> extends BaseFragment implements ViewContract<I> {
     @State
     protected AtomicBoolean wasLoading = new AtomicBoolean();
@@ -134,6 +134,7 @@ public void hideLoading() {
         hideErrorPanel();
     }
 
+    @Override
     public void showEmptyState() {
         isLoading.set(false);
         if (emptyStateView != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.stream.Description;
@@ -19,8 +21,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class DescriptionFragment extends BaseDescriptionFragment {
 
     @State
@@ -31,7 +31,7 @@ public DescriptionFragment(final StreamInfo streamInfo) {
     }
 
     public DescriptionFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -56,6 +56,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.preference.PreferenceManager;
 
+import com.evernote.android.state.State;
 import com.google.android.exoplayer2.PlaybackException;
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.material.appbar.AppBarLayout;
@@ -127,7 +128,6 @@
 import java.util.concurrent.TimeUnit;
 import java.util.function.Consumer;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -9,6 +9,8 @@
 
 import androidx.annotation.NonNull;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -24,7 +26,6 @@
 import java.util.List;
 import java.util.Queue;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -143,7 +144,7 @@ public void startLoading(final boolean forceLoad) {
         currentWorker = loadResult(forceLoad)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .subscribe((@NonNull L result) -> {
+                .subscribe((@NonNull final L result) -> {
                     isLoading.set(false);
                     currentInfo = result;
                     currentNextPage = result.getNextPage();

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelAboutFragment.java
Patch:
@@ -10,6 +10,8 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
@@ -20,8 +22,6 @@
 
 import java.util.List;
 
-import icepick.State;
-
 public class ChannelAboutFragment extends BaseDescriptionFragment {
     @State
     protected ChannelInfo channelInfo;
@@ -31,7 +31,7 @@ public class ChannelAboutFragment extends BaseDescriptionFragment {
     }
 
     public ChannelAboutFragment() {
-        // keep empty constructor for IcePick when resuming fragment from memory
+        // keep empty constructor for State when resuming fragment from memory
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -12,6 +12,8 @@
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.core.text.HtmlCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.CommentRepliesHeaderBinding;
 import org.schabi.newpipe.error.UserAction;
@@ -30,7 +32,6 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -11,6 +11,8 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
@@ -29,7 +31,6 @@
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;
 
-import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 
 /**

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -15,6 +15,7 @@
 import androidx.annotation.Nullable;
 import androidx.viewbinding.ViewBinding;
 
+import com.evernote.android.state.State;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.reactivestreams.Subscriber;
@@ -45,7 +46,6 @@
 import java.util.List;
 import java.util.Objects;
 
-import icepick.State;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
@@ -368,6 +368,7 @@ private void deleteEntry(final int index) {
         }
     }
 
+    @Override
     public PlayQueue getPlayQueue() {
         return getPlayQueue(0);
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -27,6 +27,8 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.core.text.util.LinkifyCompat;
 
+import com.evernote.android.state.State;
+
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
@@ -44,8 +46,6 @@
 import java.util.Collections;
 import java.util.List;
 
-import icepick.State;
-
 public class SubscriptionsImportFragment extends BaseFragment {
     @State
     int currentServiceId = Constants.NO_SERVICE_ID;

File: app/src/main/java/org/schabi/newpipe/info_list/dialog/StreamDialogDefaultEntry.java
Patch:
@@ -113,7 +113,7 @@ public enum StreamDialogDefaultEntry {
     DOWNLOAD(R.string.download, (fragment, item) ->
             fetchStreamInfoAndSaveToDatabase(fragment.requireContext(), item.getServiceId(),
                     item.getUrl(), info -> {
-                        if (fragment.getContext() != null) {
+                        if (fragment.isAdded() && !fragment.isStateSaved()) {
                             final DownloadDialog downloadDialog =
                                     new DownloadDialog(fragment.requireContext(), info);
                             downloadDialog.show(fragment.getChildFragmentManager(),

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -154,6 +154,6 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " AND :streamUrl = :streamUrl"
 
             + " GROUP BY " + JOIN_PLAYLIST_ID
-            + " ORDER BY " + PLAYLIST_DISPLAY_INDEX)
+            + " ORDER BY " + PLAYLIST_DISPLAY_INDEX + ", " + PLAYLIST_NAME)
     Flowable<List<PlaylistDuplicatesEntry>> getPlaylistDuplicatesMetadata(String streamUrl);
 }

File: app/src/main/java/org/schabi/newpipe/settings/DownloadSettingsFragment.java
Patch:
@@ -30,7 +30,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.io.UnsupportedEncodingException;
 import java.net.URI;
 
 public class DownloadSettingsFragment extends BasePreferenceFragment {
@@ -125,7 +124,7 @@ private void showPathInSummary(final String prefKey, @StringRes final int defaul
 
         try {
             rawUri = decodeUrlUtf8(rawUri);
-        } catch (final UnsupportedEncodingException e) {
+        } catch (final IllegalArgumentException e) {
             // nothing to do
         }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -352,6 +352,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
             });
             ellipsizer.setContent(description);
             headerBinding.playlistDescriptionReadMore.setOnClickListener(v -> ellipsizer.toggle());
+            headerBinding.playlistDescription.setOnClickListener(v -> ellipsizer.toggle());
         } else {
             headerBinding.playlistDescription.setVisibility(View.GONE);
             headerBinding.playlistDescriptionReadMore.setVisibility(View.GONE);

File: app/src/main/java/org/schabi/newpipe/error/UserAction.java
Patch:
@@ -6,6 +6,7 @@
 public enum UserAction {
     USER_REPORT("user report"),
     UI_ERROR("ui error"),
+    DATABASE_IMPORT_EXPORT("database import or export"),
     SUBSCRIPTION_CHANGE("subscription change"),
     SUBSCRIPTION_UPDATE("subscription update"),
     SUBSCRIPTION_GET("get subscription"),

File: app/src/main/java/org/schabi/newpipe/streams/io/StoredDirectoryHelper.java
Patch:
@@ -11,7 +11,6 @@
 import android.net.Uri;
 import android.os.ParcelFileDescriptor;
 import android.provider.DocumentsContract;
-import android.system.ErrnoException;
 import android.system.Os;
 import android.system.StructStatVfs;
 import android.util.Log;
@@ -207,7 +206,9 @@ public long getFreeStorageSpace() {
 
             // this is the same formula used inside the FsStat class
             return stat.f_bavail * stat.f_frsize;
-        } catch (final IOException | ErrnoException e) {
+        } catch (final Throwable e) {
+            // ignore any error
+            Log.e(TAG, "Could not get free storage space", e);
             return Long.MAX_VALUE;
         }
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -506,7 +506,7 @@ private void setStreamCountAndOverallDuration(final List<StreamInfoItem> list,
                 Localization.concatenateStrings(
                     Localization.localizeStreamCount(activity, streamCount),
                     Localization.getDurationString(playlistOverallDurationSeconds,
-                            isDurationComplete))
+                            isDurationComplete, true))
             );
         }
     }

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -837,7 +837,8 @@ private void setStreamCountAndOverallDuration(final ArrayList<LocalItem> itemsLi
             headerBinding.playlistStreamCount.setText(
                     Localization.concatenateStrings(
                             Localization.localizeStreamCount(activity, streamCount),
-                            Localization.getDurationString(playlistOverallDurationSeconds))
+                            Localization.getDurationString(playlistOverallDurationSeconds,
+                                                            true, true))
             );
         }
     }

File: app/src/main/java/org/schabi/newpipe/database/subscription/SubscriptionEntity.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.database.subscription;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.Ignore;
@@ -95,11 +96,12 @@ public void setName(final String name) {
         this.name = name;
     }
 
+    @Nullable
     public String getAvatarUrl() {
         return avatarUrl;
     }
 
-    public void setAvatarUrl(final String avatarUrl) {
+    public void setAvatarUrl(@Nullable final String avatarUrl) {
         this.avatarUrl = avatarUrl;
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
+import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 
@@ -38,7 +39,8 @@ public final class CommentRepliesFragment
 
     public static final String TAG = CommentRepliesFragment.class.getSimpleName();
 
-    private CommentsInfoItem commentsInfoItem; // the comment to show replies of
+    @State
+    CommentsInfoItem commentsInfoItem; // the comment to show replies of
     private final CompositeDisposable disposables = new CompositeDisposable();
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentRepliesFragment.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.Queue;
 import java.util.function.Supplier;
 
+import icepick.State;
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 
@@ -38,7 +39,8 @@ public final class CommentRepliesFragment
 
     public static final String TAG = CommentRepliesFragment.class.getSimpleName();
 
-    private CommentsInfoItem commentsInfoItem; // the comment to show replies of
+    @State
+    CommentsInfoItem commentsInfoItem; // the comment to show replies of
     private final CompositeDisposable disposables = new CompositeDisposable();
 
 

File: app/src/main/java/org/schabi/newpipe/database/subscription/SubscriptionEntity.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.database.subscription;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.Ignore;
@@ -95,11 +96,12 @@ public void setName(final String name) {
         this.name = name;
     }
 
+    @Nullable
     public String getAvatarUrl() {
         return avatarUrl;
     }
 
-    public void setAvatarUrl(final String avatarUrl) {
+    public void setAvatarUrl(@Nullable final String avatarUrl) {
         this.avatarUrl = avatarUrl;
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -506,7 +506,7 @@ private void setStreamCountAndOverallDuration(final List<StreamInfoItem> list,
                 Localization.concatenateStrings(
                     Localization.localizeStreamCount(activity, streamCount),
                     Localization.getDurationString(playlistOverallDurationSeconds,
-                            isDurationComplete))
+                            isDurationComplete, true))
             );
         }
     }

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -837,7 +837,8 @@ private void setStreamCountAndOverallDuration(final ArrayList<LocalItem> itemsLi
             headerBinding.playlistStreamCount.setText(
                     Localization.concatenateStrings(
                             Localization.localizeStreamCount(activity, streamCount),
-                            Localization.getDurationString(playlistOverallDurationSeconds))
+                            Localization.getDurationString(playlistOverallDurationSeconds,
+                                                            true, true))
             );
         }
     }

File: app/src/main/java/org/schabi/newpipe/error/UserAction.java
Patch:
@@ -6,6 +6,7 @@
 public enum UserAction {
     USER_REPORT("user report"),
     UI_ERROR("ui error"),
+    DATABASE_IMPORT_EXPORT("database import or export"),
     SUBSCRIPTION_CHANGE("subscription change"),
     SUBSCRIPTION_UPDATE("subscription update"),
     SUBSCRIPTION_GET("get subscription"),

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -30,6 +30,9 @@ public DescriptionFragment(final StreamInfo streamInfo) {
         this.streamInfo = streamInfo;
     }
 
+    public DescriptionFragment() {
+    }
+
 
     @Nullable
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelAboutFragment.java
Patch:
@@ -30,6 +30,8 @@ public class ChannelAboutFragment extends BaseDescriptionFragment {
         this.channelInfo = channelInfo;
     }
 
+    public ChannelAboutFragment() {
+    }
 
     @Override
     protected void initViews(final View rootView, final Bundle savedInstanceState) {

File: app/src/main/java/org/schabi/newpipe/local/bookmark/MergedPlaylistManager.java
Patch:
@@ -39,7 +39,7 @@ public static Flowable<List<PlaylistLocalItem>> getMergedOrderedPlaylists(
      * @param remotePlaylists remote playlists, already sorted by display index
      * @return merged playlists
      */
-    private static List<PlaylistLocalItem> merge(
+    public static List<PlaylistLocalItem> merge(
             final List<PlaylistMetadataEntry> localPlaylists,
             final List<PlaylistRemoteEntity> remotePlaylists) {
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java
Patch:
@@ -21,7 +21,6 @@
 
 @Entity(tableName = REMOTE_PLAYLIST_TABLE,
         indices = {
-                @Index(value = {REMOTE_PLAYLIST_NAME}),
                 @Index(value = {REMOTE_PLAYLIST_SERVICE_ID, REMOTE_PLAYLIST_URL}, unique = true)
         })
 public class PlaylistRemoteEntity implements PlaylistLocalItem {

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -183,7 +183,7 @@ protected void onPostCreate(final Bundle savedInstanceState) {
         final App app = App.getApp();
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(app);
 
-        if (prefs.getBoolean(app.getString(R.string.update_app_key), true)) {
+        if (prefs.getBoolean(app.getString(R.string.update_app_key), false)) {
             // Start the worker which is checking all conditions
             // and eventually searching for a new version.
             NewVersionWorker.enqueueNewVersionCheckingWork(app, false);

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -7,6 +7,7 @@
 import androidx.annotation.NonNull;
 import androidx.preference.PreferenceManager;
 
+import org.schabi.newpipe.App;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.ErrorUtil;
@@ -163,15 +164,14 @@ protected void migrate(@NonNull final Context context) {
     private static final int VERSION = 6;
 
 
-    public static void runMigrationsIfNeeded(@NonNull final Context context,
-                                             final boolean isFirstRun) {
+    public static void runMigrationsIfNeeded(@NonNull final Context context) {
         // setup migrations and check if there is something to do
         sp = PreferenceManager.getDefaultSharedPreferences(context);
         final String lastPrefVersionKey = context.getString(R.string.last_used_preferences_version);
         final int lastPrefVersion = sp.getInt(lastPrefVersionKey, 0);
 
         // no migration to run, already up to date
-        if (isFirstRun) {
+        if (App.getApp().isFirstRun()) {
             sp.edit().putInt(lastPrefVersionKey, VERSION).apply();
             return;
         } else if (lastPrefVersion == VERSION) {

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -411,7 +411,7 @@ private void startMission(Intent intent) {
         mission.threadCount = threads;
         mission.source = source;
         mission.nearLength = nearLength;
-        mission.recoveryInfo = recovery.toArray(MissionRecoveryInfo[]::new);
+        mission.recoveryInfo = recovery.toArray(new MissionRecoveryInfo[0]);
 
         if (ps != null)
             ps.setTemporalDir(DownloadManager.pickAvailableTemporalDir(this));

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -874,6 +874,7 @@ private static Comparator<AudioStream> getAudioTrackNameComparator(
 
         return Comparator.comparing(AudioStream::getAudioLocale, Comparator.nullsLast(
                         Comparator.comparing(locale -> locale.getDisplayName(appLoc))))
-                .thenComparing(AudioStream::getAudioTrackType);
+                .thenComparing(AudioStream::getAudioTrackType, Comparator.nullsLast(
+                        Comparator.naturalOrder()));
     }
 }

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -411,7 +411,7 @@ private void startMission(Intent intent) {
         mission.threadCount = threads;
         mission.source = source;
         mission.nearLength = nearLength;
-        mission.recoveryInfo = recovery.toArray(MissionRecoveryInfo[]::new);
+        mission.recoveryInfo = recovery.toArray(new MissionRecoveryInfo[0]);
 
         if (ps != null)
             ps.setTemporalDir(DownloadManager.pickAvailableTemporalDir(this));

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -874,6 +874,7 @@ private static Comparator<AudioStream> getAudioTrackNameComparator(
 
         return Comparator.comparing(AudioStream::getAudioLocale, Comparator.nullsLast(
                         Comparator.comparing(locale -> locale.getDisplayName(appLoc))))
-                .thenComparing(AudioStream::getAudioTrackType);
+                .thenComparing(AudioStream::getAudioTrackType, Comparator.nullsLast(
+                        Comparator.naturalOrder()));
     }
 }

File: app/src/main/java/org/schabi/newpipe/util/text/TextLinkifier.java
Patch:
@@ -92,7 +92,7 @@ public static void fromDescription(@NonNull final TextView textView,
      * {@link HtmlCompat#fromHtml(String, int)}.
      * </p>
      *
-     * @param textView           the {@link TextView} to set the the HTML string block linked
+     * @param textView           the {@link TextView} to set the HTML string block linked
      * @param htmlBlock          the HTML string block to be linked
      * @param htmlCompatFlag     the int flag to be set when {@link HtmlCompat#fromHtml(String,
      *                           int)} will be called

File: app/src/main/java/org/schabi/newpipe/util/text/TextLinkifier.java
Patch:
@@ -92,7 +92,7 @@ public static void fromDescription(@NonNull final TextView textView,
      * {@link HtmlCompat#fromHtml(String, int)}.
      * </p>
      *
-     * @param textView           the {@link TextView} to set the the HTML string block linked
+     * @param textView           the {@link TextView} to set the HTML string block linked
      * @param htmlBlock          the HTML string block to be linked
      * @param htmlCompatFlag     the int flag to be set when {@link HtmlCompat#fromHtml(String,
      *                           int)} will be called

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentInfoItemHolder.java
Patch:
@@ -148,7 +148,7 @@ public void updateFromItem(final InfoItem infoItem,
         itemHeartView.setVisibility(item.isHeartedByUploader() ? View.VISIBLE : View.GONE);
 
         final boolean hasReplies = item.getReplies() != null;
-        repliesButton.setOnClickListener(hasReplies ? (v) -> openRepliesFragment(item) : null);
+        repliesButton.setOnClickListener(hasReplies ? v -> openRepliesFragment(item) : null);
         repliesButton.setVisibility(hasReplies ? View.VISIBLE : View.GONE);
         repliesButton.setText(hasReplies
                 ? Localization.replyCount(itemBuilder.getContext(), item.getReplyCount()) : "");

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -194,7 +194,6 @@ private void setupTabs() {
         }
 
         binding.pager.setAdapter(null);
-        binding.pager.setOffscreenPageLimit(tabsList.size());
         binding.pager.setAdapter(pagerAdapter);
 
         updateTabsIconAndDescription();

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -194,7 +194,6 @@ private void setupTabs() {
         }
 
         binding.pager.setAdapter(null);
-        binding.pager.setOffscreenPageLimit(tabsList.size());
         binding.pager.setAdapter(pagerAdapter);
 
         updateTabsIconAndDescription();

File: app/src/main/java/org/schabi/newpipe/player/mediaitem/MediaItemTag.java
Patch:
@@ -81,8 +81,9 @@ default String makeMediaId() {
 
     @NonNull
     default MediaItem asMediaItem() {
+        final String thumbnailUrl = getThumbnailUrl();
         final MediaMetadata mediaMetadata = new MediaMetadata.Builder()
-                .setArtworkUri(Uri.parse(getThumbnailUrl()))
+                .setArtworkUri(thumbnailUrl == null ? null : Uri.parse(thumbnailUrl))
                 .setArtist(getUploaderName())
                 .setDescription(getTitle())
                 .setDisplayTitle(getTitle())

File: app/src/main/java/org/schabi/newpipe/util/FilenameUtils.java
Patch:
@@ -7,6 +7,7 @@
 
 import org.schabi.newpipe.R;
 
+import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 public final class FilenameUtils {
@@ -51,7 +52,7 @@ public static String createFilename(final Context context, final String title) {
 
         final Pattern pattern = Pattern.compile(charset);
 
-        return createFilename(title, pattern, replacementChar);
+        return createFilename(title, pattern, Matcher.quoteReplacement(replacementChar));
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -85,6 +85,7 @@
 import org.schabi.newpipe.fragments.BackPressable;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.EmptyFragment;
+import org.schabi.newpipe.fragments.MainFragment;
 import org.schabi.newpipe.fragments.list.comments.CommentsFragment;
 import org.schabi.newpipe.fragments.list.videos.RelatedItemsFragment;
 import org.schabi.newpipe.ktx.AnimationType;
@@ -482,6 +483,8 @@ private void setOnClickListeners() {
                 // commit previous pending changes to database
                 if (fragment instanceof LocalPlaylistFragment) {
                     ((LocalPlaylistFragment) fragment).commitChanges();
+                } else if (fragment instanceof MainFragment) {
+                    ((MainFragment) fragment).commitPlaylistTabs();
                 }
 
                 disposables.add(PlaylistDialog.createCorrespondingDialog(requireContext(),

File: app/src/main/java/org/schabi/newpipe/fragments/detail/BaseDescriptionFragment.java
Patch:
@@ -224,6 +224,7 @@ protected void addImagesMetadataItem(final LayoutInflater inflater,
                     case LOW:
                         urls.append(getString(R.string.image_quality_low));
                         break;
+                    default: // unreachable, Image.ResolutionLevel.UNKNOWN is already filtered out
                     case MEDIUM:
                         urls.append(getString(R.string.image_quality_medium));
                         break;

File: app/src/main/java/org/schabi/newpipe/util/external_communication/ShareUtils.java
Patch:
@@ -269,8 +269,8 @@ public static void shareText(@NonNull final Context context,
      *
      * <p>
      * For Android 10+ users, a content preview is shown, which includes the title of the shared
-     * content and an image preview the content, if its URL is not null or empty and its
-     * corresponding image is in the image cache.
+     * content and an image preview the content, if the preferred image chosen by {@link
+     * ImageStrategy#choosePreferredImage(List)} is in the image cache.
      * </p>
      *
      * @param context the context to use

File: app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java
Patch:
@@ -63,6 +63,7 @@ public static void initSettings(final Context context) {
         PreferenceManager.setDefaultValues(context, R.xml.player_notification_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.update_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.debug_settings, true);
+        PreferenceManager.setDefaultValues(context, R.xml.backup_restore_settings, true);
 
         saveDefaultVideoDownloadDirectory(context);
         saveDefaultAudioDownloadDirectory(context);

File: app/src/main/java/org/schabi/newpipe/settings/SettingsResourceRegistry.java
Patch:
@@ -41,6 +41,7 @@ private SettingsResourceRegistry() {
         add(UpdateSettingsFragment.class, R.xml.update_settings);
         add(VideoAudioSettingsFragment.class, R.xml.video_audio_settings);
         add(ExoPlayerSettingsFragment.class, R.xml.exoplayer_settings);
+        add(BackupRestoreSettingsFragment.class, R.xml.backup_restore_settings);
     }
 
     private SettingRegistryEntry add(

File: app/src/main/java/org/schabi/newpipe/streams/io/StoredDirectoryHelper.java
Patch:
@@ -170,8 +170,8 @@ public boolean isDirect() {
 
     /**
      * Only using Java I/O. Creates the directory named by this abstract pathname, including any
-     * necessary but nonexistent parent directories.  Note that if this
-     * operation fails it may have succeeded in creating some of the necessary
+     * necessary but nonexistent parent directories.
+     * Note that if this operation fails it may have succeeded in creating some of the necessary
      * parent directories.
      *
      * @return <code>true</code> if and only if the directory was created,

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -7,15 +7,15 @@
 import org.schabi.newpipe.extractor.stream.AudioStream;
 import org.schabi.newpipe.extractor.stream.Stream;
 import org.schabi.newpipe.extractor.stream.VideoStream;
-import org.schabi.newpipe.util.StreamItemAdapter.StreamSizeWrapper;
+import org.schabi.newpipe.util.StreamItemAdapter.StreamInfoWrapper;
 
 import java.util.List;
 
 public class SecondaryStreamHelper<T extends Stream> {
     private final int position;
-    private final StreamSizeWrapper<T> streams;
+    private final StreamInfoWrapper<T> streams;
 
-    public SecondaryStreamHelper(@NonNull final StreamSizeWrapper<T> streams,
+    public SecondaryStreamHelper(@NonNull final StreamInfoWrapper<T> streams,
                                  final T selectedStream) {
         this.streams = streams;
         this.position = streams.getStreamsList().indexOf(selectedStream);

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -80,6 +80,8 @@ public void onDestroyView() {
         if (errorPanelHelper != null) {
             errorPanelHelper.dispose();
         }
+        emptyStateView = null;
+        emptyStateMessageView = null;
     }
 
     protected void onRetryButtonClicked() {

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -80,6 +80,8 @@ public void onDestroyView() {
         if (errorPanelHelper != null) {
             errorPanelHelper.dispose();
         }
+        emptyStateView = null;
+        emptyStateMessageView = null;
     }
 
     protected void onRetryButtonClicked() {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -146,6 +146,7 @@ protected void initViews(final View rootView, final Bundle savedInstanceState) {
         binding.viewPager.setAdapter(tabAdapter);
         binding.tabLayout.setupWithViewPager(binding.viewPager);
 
+        setTitle(name);
         binding.channelTitleView.setText(name);
         if (!PicassoHelper.getShouldLoadImages()) {
             // do not waste space for the banner if it is not going to be loaded

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -130,7 +130,9 @@ protected void initViews(final View rootView, final Bundle savedInstanceState) {
     @Override
     public void onSaveInstanceState(final @NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
-        outState.putInt("LastTab", binding.tabLayout.getSelectedTabPosition());
+        if (binding != null) {
+            outState.putInt("LastTab", binding.tabLayout.getSelectedTabPosition());
+        }
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/detail/BaseDescriptionFragment.java
Patch:
@@ -33,7 +33,7 @@
 
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 
-public abstract class BaseInfoFragment extends BaseFragment {
+public abstract class BaseDescriptionFragment extends BaseFragment {
     final CompositeDisposable descriptionDisposables = new CompositeDisposable();
     FragmentDescriptionBinding binding;
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -20,7 +20,7 @@
 
 import icepick.State;
 
-public class DescriptionFragment extends BaseInfoFragment {
+public class DescriptionFragment extends BaseDescriptionFragment {
 
     @State
     StreamInfo streamInfo = null;

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -301,9 +301,10 @@ private void updateTabs() {
                 final String description = currentInfo.getDescription();
                 if (description != null && !description.isEmpty()
                         && ChannelTabHelper.showChannelTab(
-                        context, preferences, R.string.show_channel_tabs_info)) {
+                        context, preferences, R.string.show_channel_tabs_about)) {
                     tabAdapter.addFragment(
-                            ChannelInfoFragment.getInstance(currentInfo), "Info");
+                            ChannelAboutFragment.getInstance(currentInfo),
+                            context.getString(R.string.channel_tab_about));
                 }
             }
         }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -297,7 +297,7 @@ private void updateTabs() {
                     final String tab = linkHandler.getContentFilters().get(0);
                     if (ChannelTabHelper.showChannelTab(context, preferences, tab)) {
                         tabAdapter.addFragment(
-                                ChannelTabFragment.getInstance(serviceId, linkHandler),
+                                ChannelTabFragment.getInstance(serviceId, linkHandler, name),
                                 context.getString(ChannelTabHelper.getTranslationKey(tab)));
                     }
                 }

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -158,7 +158,8 @@ public static Single<ChannelTabInfo> getChannelTab(final int serviceId,
                                                        final boolean forceLoad) {
         checkServiceId(serviceId);
         return checkCache(forceLoad, serviceId,
-                tabHandler.getUrl() + tabHandler.getTab().name(), InfoItem.InfoType.CHANNEL,
+                tabHandler.getUrl() + "/"
+                        + tabHandler.getTab().name(), InfoItem.InfoType.CHANNEL,
                 Single.fromCallable(() ->
                         ChannelTabInfo.getInfo(NewPipe.getService(serviceId), tabHandler)));
     }

File: app/src/main/java/org/schabi/newpipe/util/ChannelTabs.java
Patch:
@@ -26,7 +26,7 @@ private static int getShowTabKey(final Tab tab) {
             case Channels:
                 return R.string.show_channel_tabs_channels;
             case Albums:
-                break;
+                return R.string.show_channel_tabs_albums;
         }
         return -1;
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelInfoFragment.java
Patch:
@@ -79,7 +79,7 @@ private void loadDescription() {
 
     private void setupMetadata(final LayoutInflater inflater,
                                final LinearLayout layout) {
-        Context context = getContext();
+        final Context context = getContext();
 
         if (channelInfo.getSubscriberCount() != UNKNOWN_SUBSCRIBER_COUNT) {
             addMetadataItem(inflater, layout, R.string.metadata_subscribers,

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelTabFragment.java
Patch:
@@ -46,7 +46,7 @@ public ChannelTabFragment() {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    public void onCreate(Bundle savedInstanceState) {
+    public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setHasOptionsMenu(false);
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelVideosFragment.java
Patch:
@@ -117,7 +117,7 @@ public void onResume() {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    public void onCreate(Bundle savedInstanceState) {
+    public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setHasOptionsMenu(false);
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelVideosFragment.java
Patch:
@@ -132,13 +132,13 @@ public void onAttach(@NonNull final Context context) {
     public View onCreateView(@NonNull final LayoutInflater inflater,
                              @Nullable final ViewGroup container,
                              @Nullable final Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_channel_videos, container, false);
+        channelBinding = FragmentChannelVideosBinding.inflate(inflater, container, false);
+        return channelBinding.getRoot();
     }
 
     @Override
     public void onViewCreated(@NonNull final View rootView, final Bundle savedInstanceState) {
         super.onViewCreated(rootView, savedInstanceState);
-        channelBinding = FragmentChannelVideosBinding.bind(rootView);
         showContentNotSupportedIfNeeded();
     }
 

File: app/src/main/java/org/schabi/newpipe/streams/io/StoredFileHelper.java
Patch:
@@ -130,7 +130,7 @@ public StoredFileHelper(final Context context, @Nullable final Uri parent,
             final DocumentFile file = DocumentFile.fromSingleUri(context, path);
 
             if (file == null) {
-                throw new RuntimeException("SAF not available");
+                throw new IOException("SAF not available");
             }
 
             this.context = context;

File: app/src/main/java/org/schabi/newpipe/util/StateSaver.java
Patch:
@@ -309,7 +309,7 @@ public static void clearStateFiles() {
     }
 
     /**
-     * Used for describe how to save/read the objects.
+     * Used for describing how to save/read the objects.
      * <p>
      * Queue was chosen by its FIFO property.
      */

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -945,7 +945,7 @@ private String getSearchEditString() {
         return searchEditText.getText().toString();
     }
 
-    private Boolean isSearchEditBlank() {
+    private boolean isSearchEditBlank() {
         return isBlank(getSearchEditString());
     }
 

File: app/src/main/java/org/schabi/newpipe/database/Migrations.java
Patch:
@@ -239,8 +239,8 @@ public void migrate(@NonNull final SupportSQLiteDatabase database) {
     public static final Migration MIGRATION_7_8 = new Migration(DB_VER_7, DB_VER_8) {
         @Override
         public void migrate(@NonNull final SupportSQLiteDatabase database) {
-            database.execSQL("DELETE FROM search_history WHERE id NOT IN (SELECT id FROM "
-                    + "(SELECT id FROM search_history GROUP BY trim(search), service_id) tmp)");
+            database.execSQL("DELETE FROM search_history WHERE id NOT IN (SELECT id FROM (SELECT "
+                    + "MIN(id) as id FROM search_history GROUP BY trim(search), service_id ) tmp)");
             database.execSQL("UPDATE search_history SET search = trim(search)");
         }
     };

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -573,7 +573,7 @@ private void showContentNotSupportedIfNeeded() {
         channelBinding.errorContentNotSupported.setVisibility(View.VISIBLE);
         channelBinding.channelKaomoji.setText("(︶︹︺)");
         channelBinding.channelKaomoji.setTextSize(TypedValue.COMPLEX_UNIT_SP, 45f);
-        channelBinding.channelNoVideos.setVisibility(View.GONE);
+        channelBinding.emptyStateMessage.setVisibility(View.GONE);
     }
 
     private PlayQueue getPlayQueue() {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -573,7 +573,7 @@ private void showContentNotSupportedIfNeeded() {
         channelBinding.errorContentNotSupported.setVisibility(View.VISIBLE);
         channelBinding.channelKaomoji.setText("(︶︹︺)");
         channelBinding.channelKaomoji.setTextSize(TypedValue.COMPLEX_UNIT_SP, 45f);
-        channelBinding.channelNoVideos.setVisibility(View.GONE);
+        channelBinding.emptyStateMessage.setVisibility(View.GONE);
     }
 
     private PlayQueue getPlayQueue() {

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -313,6 +313,7 @@ public void onViewCreated(@NonNull final View view,
         selectedSubtitleIndex = getSubtitleIndexBy(subtitleStreamsAdapter.getAll());
 
         dialogBinding.qualitySpinner.setOnItemSelectedListener(this);
+        dialogBinding.audioStreamSpinner.setOnItemSelectedListener(this);
         dialogBinding.audioTrackSpinner.setOnItemSelectedListener(this);
         dialogBinding.videoAudioGroup.setOnCheckedChangeListener(this);
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -313,6 +313,7 @@ public void onViewCreated(@NonNull final View view,
         selectedSubtitleIndex = getSubtitleIndexBy(subtitleStreamsAdapter.getAll());
 
         dialogBinding.qualitySpinner.setOnItemSelectedListener(this);
+        dialogBinding.audioStreamSpinner.setOnItemSelectedListener(this);
         dialogBinding.audioTrackSpinner.setOnItemSelectedListener(this);
         dialogBinding.videoAudioGroup.setOnCheckedChangeListener(this);
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -448,7 +448,7 @@ private void setupAudioSpinner() {
         dialogBinding.audioStreamSpinner.setVisibility(View.VISIBLE);
         dialogBinding.audioTrackSpinner.setVisibility(
                 wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE);
-        dialogBinding.defaultAudioTrackPresentText.setVisibility(View.GONE);
+        dialogBinding.audioTrackPresentInVideoText.setVisibility(View.GONE);
     }
 
     private void setupVideoSpinner() {
@@ -469,7 +469,7 @@ private void onVideoStreamSelected() {
 
         dialogBinding.audioTrackSpinner.setVisibility(
                 isVideoOnly && wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE);
-        dialogBinding.defaultAudioTrackPresentText.setVisibility(
+        dialogBinding.audioTrackPresentInVideoText.setVisibility(
                 !isVideoOnly && wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE);
     }
 
@@ -484,7 +484,7 @@ private void setupSubtitleSpinner() {
         setRadioButtonsState(true);
         dialogBinding.audioStreamSpinner.setVisibility(View.GONE);
         dialogBinding.audioTrackSpinner.setVisibility(View.GONE);
-        dialogBinding.defaultAudioTrackPresentText.setVisibility(View.GONE);
+        dialogBinding.audioTrackPresentInVideoText.setVisibility(View.GONE);
     }
 
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -470,9 +470,7 @@ private void onVideoStreamSelected() {
         dialogBinding.audioTrackSpinner.setVisibility(
                 isVideoOnly && wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE);
         dialogBinding.defaultAudioTrackPresentText.setVisibility(
-                !isVideoOnly && wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE
-
-        );
+                !isVideoOnly && wrappedAudioTracks.size() > 1 ? View.VISIBLE : View.GONE);
     }
 
     private void setupSubtitleSpinner() {

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -797,7 +797,8 @@ private static Comparator<AudioStream> getAudioTrackComparator(
      * @return Comparator
      */
     static Comparator<AudioStream> getAudioTrackComparator(
-            final Locale preferredLanguage, final boolean preferOriginalAudio,
+            final Locale preferredLanguage,
+            final boolean preferOriginalAudio,
             final boolean preferDescriptiveAudio) {
         final String langCode = preferredLanguage.getISO3Language();
         final List<AudioTrackType> trackTypeRanking = preferDescriptiveAudio

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -667,11 +667,8 @@ private void onAudioTrackClick(final int itemId) {
                 return;
             }
 
-            player.saveStreamProgressState();
             final String newAudioTrack = availableStreams.get(itemId).getAudioTrackId();
-            player.setRecovery();
             player.setAudioTrack(newAudioTrack);
-            player.reloadPlayQueueManager();
         });
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -263,7 +263,9 @@ public Player(@NonNull final PlayerService service) {
         final PlayerDataSource dataSource = new PlayerDataSource(context,
                 new DefaultBandwidthMeter.Builder(context).build());
         loadController = new LoadController();
-        renderFactory = new DefaultRenderersFactory(context);
+        renderFactory = new DefaultRenderersFactory(context)
+                .setEnableDecoderFallback(prefs.getBoolean(
+                        context.getString(R.string.use_exoplayer_decoder_fallback_key), false));
 
         videoResolver = new VideoPlaybackResolver(context, dataSource, getQualityResolver());
         audioResolver = new AudioPlaybackResolver(context, dataSource);

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -111,12 +111,12 @@ protected void migrate(final Context context) {
     public static final Migration MIGRATION_4_5 = new Migration(4, 5) {
         @Override
         protected void migrate(final Context context) {
-            boolean brightnessGestureSwitch = sp.getBoolean(
+            final boolean brightnessGestureSwitch = sp.getBoolean(
                     context.getString(R.string.left_gesture_control_key), true);
-            boolean volumeGestureSwitch = sp.getBoolean(
+            final boolean volumeGestureSwitch = sp.getBoolean(
                     context.getString(R.string.right_gesture_control_key), true);
 
-            SharedPreferences.Editor editor = sp.edit();
+            final SharedPreferences.Editor editor = sp.edit();
 
             if (volumeGestureSwitch) {
                 if (!brightnessGestureSwitch) {

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -112,9 +112,9 @@ protected void migrate(final Context context) {
         @Override
         protected void migrate(final Context context) {
             boolean brightnessGestureSwitch = sp.getBoolean(
-                    context.getString(R.string.left_gesture_control_key), false);
+                    context.getString(R.string.left_gesture_control_key), true);
             boolean volumeGestureSwitch = sp.getBoolean(
-                    context.getString(R.string.right_gesture_control_key), false);
+                    context.getString(R.string.right_gesture_control_key), true);
 
             SharedPreferences.Editor editor = sp.edit();
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -261,6 +261,7 @@ private void updateSecondaryStreams() {
         final StreamSizeWrapper<AudioStream> audioStreams = getWrappedAudioStreams();
         final var secondaryStreams = new SparseArrayCompat<SecondaryStreamHelper<AudioStream>>(4);
         final List<VideoStream> videoStreams = wrappedVideoStreams.getStreamsList();
+        wrappedVideoStreams.resetSizes();
 
         for (int i = 0; i < videoStreams.size(); i++) {
             if (!videoStreams.get(i).isVideoOnly()) {

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -239,13 +239,12 @@ public static List<AudioStream> getFilteredAudioStreams(
         }
 
         // Filter unknown audio tracks if there are multiple tracks
-        java.util.stream.Stream<AudioStream> cs = collectedStreams.values().stream();
         if (collectedStreams.size() > 1) {
-            cs = cs.filter(s -> s.getAudioTrackId() != null);
+            collectedStreams.remove("");
         }
 
         // Sort collected streams by name
-        return cs.sorted(Comparator.comparing(audioStream ->
+        return collectedStreams.values().stream().sorted(Comparator.comparing(audioStream ->
                 Localization.audioTrackName(context, audioStream))).collect(Collectors.toList());
     }
 

File: app/src/main/java/org/schabi/newpipe/player/ui/VideoPlayerUi.java
Patch:
@@ -1093,7 +1093,6 @@ private void buildLanguageMenu() {
 
         for (int i = 0; i < availableStreams.size(); i++) {
             final AudioStream audioStream = availableStreams.get(i);
-            // TODO: ensure that audio streams have track names
             if (audioStream.getAudioTrackName() == null) {
                 continue;
             }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -29,7 +29,6 @@
 import static com.google.android.exoplayer2.Player.RepeatMode;
 import static org.schabi.newpipe.extractor.ServiceList.YouTube;
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
-import static org.schabi.newpipe.player.helper.PlayerHelper.isPlaybackResumeEnabled;
 import static org.schabi.newpipe.player.helper.PlayerHelper.nextRepeatMode;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrievePlaybackParametersFromPrefs;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrieveSeekDurationFromPreferences;
@@ -115,6 +114,7 @@
 import org.schabi.newpipe.player.ui.PlayerUiList;
 import org.schabi.newpipe.player.ui.PopupPlayerUi;
 import org.schabi.newpipe.player.ui.VideoPlayerUi;
+import org.schabi.newpipe.util.DependentPreferenceHelper;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ListHelper;
 import org.schabi.newpipe.util.NavigationHelper;
@@ -391,7 +391,7 @@ public void handleIntent(@NonNull final Intent intent) {
             simpleExoPlayer.setPlayWhenReady(playWhenReady);
 
         } else if (intent.getBooleanExtra(RESUME_PLAYBACK, false)
-                && isPlaybackResumeEnabled(this)
+                && DependentPreferenceHelper.getResumePlaybackEnabled(context)
                 && !samePlayQueue
                 && !newQueue.isEmpty()
                 && newQueue.getItem() != null

File: app/src/main/java/org/schabi/newpipe/NewPipeDatabase.java
Patch:
@@ -6,6 +6,7 @@
 import static org.schabi.newpipe.database.Migrations.MIGRATION_3_4;
 import static org.schabi.newpipe.database.Migrations.MIGRATION_4_5;
 import static org.schabi.newpipe.database.Migrations.MIGRATION_5_6;
+import static org.schabi.newpipe.database.Migrations.MIGRATION_6_7;
 
 import android.content.Context;
 import android.database.Cursor;
@@ -26,7 +27,7 @@ private static AppDatabase getDatabase(final Context context) {
         return Room
                 .databaseBuilder(context.getApplicationContext(), AppDatabase.class, DATABASE_NAME)
                 .addMigrations(MIGRATION_1_2, MIGRATION_2_3, MIGRATION_3_4, MIGRATION_4_5,
-                        MIGRATION_5_6)
+                        MIGRATION_5_6, MIGRATION_6_7)
                 .build();
     }
 

File: app/src/main/java/org/schabi/newpipe/database/AppDatabase.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.database;
 
-import static org.schabi.newpipe.database.Migrations.DB_VER_6;
+import static org.schabi.newpipe.database.Migrations.DB_VER_7;
 
 import androidx.room.Database;
 import androidx.room.RoomDatabase;
@@ -38,7 +38,7 @@
                 FeedEntity.class, FeedGroupEntity.class, FeedGroupSubscriptionEntity.class,
                 FeedLastUpdatedEntity.class
         },
-        version = DB_VER_6
+        version = DB_VER_7
 )
 public abstract class AppDatabase extends RoomDatabase {
     public static final String DATABASE_NAME = "newpipe.db";

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -280,10 +280,10 @@ private void showLocalDialog(final PlaylistMetadataEntry selectedItem) {
                 showDeleteDialog(selectedItem.name,
                         localPlaylistManager.deletePlaylist(selectedItem.uid));
             } else if (isThumbnailPermanent && items.get(index).equals(unsetThumbnail)) {
-                final String thumbnailUrl = localPlaylistManager
-                        .getAutomaticPlaylistThumbnail(selectedItem.uid);
+                final long thumbnailStreamId = localPlaylistManager
+                        .getAutomaticPlaylistThumbnailStreamId(selectedItem.uid);
                 localPlaylistManager
-                        .changePlaylistThumbnail(selectedItem.uid, thumbnailUrl, false)
+                        .changePlaylistThumbnail(selectedItem.uid, thumbnailStreamId, false)
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe();
             }

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -160,7 +160,7 @@ private void openPrivacyPolicyDialog(final Context context, final String action)
                 .setMessage(R.string.start_accept_privacy_policy)
                 .setCancelable(false)
                 .setNeutralButton(R.string.read_privacy_policy, (dialog, which) ->
-                        ShareUtils.openUrlInBrowser(context,
+                        ShareUtils.openUrlInApp(context,
                                 context.getString(R.string.privacy_policy_url)))
                 .setPositiveButton(R.string.accept, (dialog, which) -> {
                     if (action.equals("EMAIL")) { // send on email
@@ -171,9 +171,9 @@ private void openPrivacyPolicyDialog(final Context context, final String action)
                                         + getString(R.string.app_name) + " "
                                         + BuildConfig.VERSION_NAME)
                                 .putExtra(Intent.EXTRA_TEXT, buildJson());
-                        ShareUtils.openIntentInApp(context, i, true);
+                        ShareUtils.openIntentInApp(context, i);
                     } else if (action.equals("GITHUB")) { // open the NewPipe issue page on GitHub
-                        ShareUtils.openUrlInBrowser(this, ERROR_GITHUB_ISSUE_URL, false);
+                        ShareUtils.openUrlInApp(this, ERROR_GITHUB_ISSUE_URL);
                     }
                 })
                 .setNegativeButton(R.string.decline, (dialog, which) -> {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -204,8 +204,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 break;
             case R.id.menu_item_rss:
                 if (currentInfo != null) {
-                    ShareUtils.openUrlInBrowser(
-                            requireContext(), currentInfo.getFeedUrl(), false);
+                    ShareUtils.openUrlInApp(requireContext(), currentInfo.getFeedUrl());
                 }
                 break;
             case R.id.menu_item_openInBrowser:

File: app/src/main/java/org/schabi/newpipe/util/text/UrlLongPressClickableSpan.java
Patch:
@@ -30,7 +30,7 @@ final class UrlLongPressClickableSpan extends LongPressClickableSpan {
     public void onClick(@NonNull final View view) {
         if (!InternalUrlsHandler.handleUrlDescriptionTimestamp(
                 disposables, context, url)) {
-            ShareUtils.openUrlInBrowser(context, url, false);
+            ShareUtils.openUrlInApp(context, url);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -160,7 +160,7 @@ private void openPrivacyPolicyDialog(final Context context, final String action)
                 .setMessage(R.string.start_accept_privacy_policy)
                 .setCancelable(false)
                 .setNeutralButton(R.string.read_privacy_policy, (dialog, which) ->
-                        ShareUtils.openUrlInBrowser(context,
+                        ShareUtils.openUrlInApp(context,
                                 context.getString(R.string.privacy_policy_url)))
                 .setPositiveButton(R.string.accept, (dialog, which) -> {
                     if (action.equals("EMAIL")) { // send on email
@@ -171,9 +171,9 @@ private void openPrivacyPolicyDialog(final Context context, final String action)
                                         + getString(R.string.app_name) + " "
                                         + BuildConfig.VERSION_NAME)
                                 .putExtra(Intent.EXTRA_TEXT, buildJson());
-                        ShareUtils.openIntentInApp(context, i, true);
+                        ShareUtils.openIntentInApp(context, i);
                     } else if (action.equals("GITHUB")) { // open the NewPipe issue page on GitHub
-                        ShareUtils.openUrlInBrowser(this, ERROR_GITHUB_ISSUE_URL, false);
+                        ShareUtils.openUrlInApp(this, ERROR_GITHUB_ISSUE_URL);
                     }
                 })
                 .setNegativeButton(R.string.decline, (dialog, which) -> {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -204,8 +204,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 break;
             case R.id.menu_item_rss:
                 if (currentInfo != null) {
-                    ShareUtils.openUrlInBrowser(
-                            requireContext(), currentInfo.getFeedUrl(), false);
+                    ShareUtils.openUrlInApp(requireContext(), currentInfo.getFeedUrl());
                 }
                 break;
             case R.id.menu_item_openInBrowser:

File: app/src/main/java/org/schabi/newpipe/util/text/UrlLongPressClickableSpan.java
Patch:
@@ -30,7 +30,7 @@ final class UrlLongPressClickableSpan extends LongPressClickableSpan {
     public void onClick(@NonNull final View view) {
         if (!InternalUrlsHandler.handleUrlDescriptionTimestamp(
                 disposables, context, url)) {
-            ShareUtils.openUrlInBrowser(context, url, false);
+            ShareUtils.openUrlInApp(context, url);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -29,7 +29,6 @@
 import static com.google.android.exoplayer2.Player.RepeatMode;
 import static org.schabi.newpipe.extractor.ServiceList.YouTube;
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
-import static org.schabi.newpipe.player.helper.PlayerHelper.isPlaybackResumeEnabled;
 import static org.schabi.newpipe.player.helper.PlayerHelper.nextRepeatMode;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrievePlaybackParametersFromPrefs;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrieveSeekDurationFromPreferences;
@@ -115,6 +114,7 @@
 import org.schabi.newpipe.player.ui.PlayerUiList;
 import org.schabi.newpipe.player.ui.PopupPlayerUi;
 import org.schabi.newpipe.player.ui.VideoPlayerUi;
+import org.schabi.newpipe.util.DependentPreferenceHelper;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ListHelper;
 import org.schabi.newpipe.util.NavigationHelper;
@@ -391,7 +391,7 @@ public void handleIntent(@NonNull final Intent intent) {
             simpleExoPlayer.setPlayWhenReady(playWhenReady);
 
         } else if (intent.getBooleanExtra(RESUME_PLAYBACK, false)
-                && isPlaybackResumeEnabled(this)
+                && DependentPreferenceHelper.getResumePlaybackEnabled(context)
                 && !samePlayQueue
                 && !newQueue.isEmpty()
                 && newQueue.getItem() != null

File: app/src/main/java/org/schabi/newpipe/NewPipeDatabase.java
Patch:
@@ -6,6 +6,7 @@
 import static org.schabi.newpipe.database.Migrations.MIGRATION_3_4;
 import static org.schabi.newpipe.database.Migrations.MIGRATION_4_5;
 import static org.schabi.newpipe.database.Migrations.MIGRATION_5_6;
+import static org.schabi.newpipe.database.Migrations.MIGRATION_6_7;
 
 import android.content.Context;
 import android.database.Cursor;
@@ -26,7 +27,7 @@ private static AppDatabase getDatabase(final Context context) {
         return Room
                 .databaseBuilder(context.getApplicationContext(), AppDatabase.class, DATABASE_NAME)
                 .addMigrations(MIGRATION_1_2, MIGRATION_2_3, MIGRATION_3_4, MIGRATION_4_5,
-                        MIGRATION_5_6)
+                        MIGRATION_5_6, MIGRATION_6_7)
                 .build();
     }
 

File: app/src/main/java/org/schabi/newpipe/database/AppDatabase.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.database;
 
-import static org.schabi.newpipe.database.Migrations.DB_VER_6;
+import static org.schabi.newpipe.database.Migrations.DB_VER_7;
 
 import androidx.room.Database;
 import androidx.room.RoomDatabase;
@@ -38,7 +38,7 @@
                 FeedEntity.class, FeedGroupEntity.class, FeedGroupSubscriptionEntity.class,
                 FeedLastUpdatedEntity.class
         },
-        version = DB_VER_6
+        version = DB_VER_7
 )
 public abstract class AppDatabase extends RoomDatabase {
     public static final String DATABASE_NAME = "newpipe.db";

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -280,10 +280,10 @@ private void showLocalDialog(final PlaylistMetadataEntry selectedItem) {
                 showDeleteDialog(selectedItem.name,
                         localPlaylistManager.deletePlaylist(selectedItem.uid));
             } else if (isThumbnailPermanent && items.get(index).equals(unsetThumbnail)) {
-                final String thumbnailUrl = localPlaylistManager
-                        .getAutomaticPlaylistThumbnail(selectedItem.uid);
+                final long thumbnailStreamId = localPlaylistManager
+                        .getAutomaticPlaylistThumbnailStreamId(selectedItem.uid);
                 localPlaylistManager
-                        .changePlaylistThumbnail(selectedItem.uid, thumbnailUrl, false)
+                        .changePlaylistThumbnail(selectedItem.uid, thumbnailStreamId, false)
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe();
             }

File: app/src/main/java/org/schabi/newpipe/local/history/HistoryRecordManager.java
Patch:
@@ -87,7 +87,7 @@ public HistoryRecordManager(final Context context) {
      * Marks a stream item as watched such that it is hidden from the feed if watched videos are
      * hidden. Adds a history entry and updates the stream progress to 100%.
      *
-     * @see FeedViewModel#togglePlayedItems
+     * @see FeedViewModel#changeVisibilityState
      * @param info the item to mark as watched
      * @return a Maybe containing the ID of the item if successful
      */

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -348,7 +348,7 @@ public void handleIntent(@NonNull final Intent intent) {
         final boolean playbackSkipSilence = getPrefs().getBoolean(getContext().getString(
                 R.string.playback_skip_silence_key), getPlaybackSkipSilence());
 
-        final boolean samePlayQueue = playQueue != null && playQueue.equals(newQueue);
+        final boolean samePlayQueue = playQueue != null && playQueue.equalStreamsAndIndex(newQueue);
         final int repeatMode = intent.getIntExtra(REPEAT_MODE, getRepeatMode());
         final boolean playWhenReady = intent.getBooleanExtra(PLAY_WHEN_READY, true);
         final boolean isMuted = intent.getBooleanExtra(IS_MUTED, isMuted());

File: app/src/test/java/org/schabi/newpipe/player/playqueue/PlayQueueTest.java
Patch:
@@ -177,7 +177,7 @@ public void sameStreamsDifferentIndex() {
             final List<PlayQueueItem> streams = Collections.nCopies(5, item1);
             final PlayQueue queue1 = makePlayQueue(1, streams);
             final PlayQueue queue2 = makePlayQueue(4, streams);
-            assertEquals(queue1, queue2);
+            assertNotEquals(queue1, queue2);
         }
 
         @Test

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -527,6 +527,9 @@ public boolean equals(@Nullable final Object obj) {
         if (size() != other.size()) {
             return false;
         }
+        if (other.getIndex() != getIndex()) {
+            return false;
+        }
         for (int i = 0; i < size(); i++) {
             final PlayQueueItem stream = streams.get(i);
             final PlayQueueItem otherStream = other.streams.get(i);

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -172,13 +172,13 @@ public final class VideoDetailFragment
 
     private final SharedPreferences.OnSharedPreferenceChangeListener preferenceChangeListener =
             (sharedPreferences, key) -> {
-                if (key.equals(getString(R.string.show_comments_key))) {
+                if (getString(R.string.show_comments_key).equals(key)) {
                     showComments = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
-                } else if (key.equals(getString(R.string.show_next_video_key))) {
+                } else if (getString(R.string.show_next_video_key).equals(key)) {
                     showRelatedItems = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
-                } else if (key.equals(getString(R.string.show_description_key))) {
+                } else if (getString(R.string.show_description_key).equals(key)) {
                     showDescription = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
                 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -474,7 +474,7 @@ public void handleError() {
     @Override
     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
                                           final String key) {
-        if (key.equals(getString(R.string.list_view_mode_key))) {
+        if (getString(R.string.list_view_mode_key).equals(key)) {
             updateFlags |= LIST_MODE_UPDATE_FLAG;
         }
     }

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -261,7 +261,7 @@ public void handleError() {
     @Override
     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
                                           final String key) {
-        if (key.equals(getString(R.string.list_view_mode_key))) {
+        if (getString(R.string.list_view_mode_key).equals(key)) {
             updateFlags |= LIST_MODE_UPDATE_FLAG;
         }
     }

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsManager.java
Patch:
@@ -73,7 +73,7 @@ public void unsetSavedTabsListener() {
 
     private SharedPreferences.OnSharedPreferenceChangeListener getPreferenceChangeListener() {
         return (sp, key) -> {
-            if (key.equals(savedTabsKey)) {
+            if (savedTabsKey.equals(key)) {
                 if (savedTabsChangeListener != null) {
                     savedTabsChangeListener.onTabsChanged();
                 }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -172,13 +172,13 @@ public final class VideoDetailFragment
 
     private final SharedPreferences.OnSharedPreferenceChangeListener preferenceChangeListener =
             (sharedPreferences, key) -> {
-                if (key.equals(getString(R.string.show_comments_key))) {
+                if (getString(R.string.show_comments_key).equals(key)) {
                     showComments = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
-                } else if (key.equals(getString(R.string.show_next_video_key))) {
+                } else if (getString(R.string.show_next_video_key).equals(key)) {
                     showRelatedItems = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
-                } else if (key.equals(getString(R.string.show_description_key))) {
+                } else if (getString(R.string.show_description_key).equals(key)) {
                     showDescription = sharedPreferences.getBoolean(key, true);
                     tabSettingsChanged = true;
                 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -474,7 +474,7 @@ public void handleError() {
     @Override
     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
                                           final String key) {
-        if (key.equals(getString(R.string.list_view_mode_key))) {
+        if (getString(R.string.list_view_mode_key).equals(key)) {
             updateFlags |= LIST_MODE_UPDATE_FLAG;
         }
     }

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -261,7 +261,7 @@ public void handleError() {
     @Override
     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
                                           final String key) {
-        if (key.equals(getString(R.string.list_view_mode_key))) {
+        if (getString(R.string.list_view_mode_key).equals(key)) {
             updateFlags |= LIST_MODE_UPDATE_FLAG;
         }
     }

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsManager.java
Patch:
@@ -73,7 +73,7 @@ public void unsetSavedTabsListener() {
 
     private SharedPreferences.OnSharedPreferenceChangeListener getPreferenceChangeListener() {
         return (sp, key) -> {
-            if (key.equals(savedTabsKey)) {
+            if (savedTabsKey.equals(key)) {
                 if (savedTabsChangeListener != null) {
                     savedTabsChangeListener.onTabsChanged();
                 }

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -631,8 +631,7 @@ private void handleChoice(final String selectedChoiceKey) {
         }
 
         if (selectedChoiceKey.equals(getString(R.string.popup_player_key))
-                && !PermissionHelper.isPopupEnabled(this)) {
-            PermissionHelper.showPopupEnablementToast(this);
+                && !PermissionHelper.isPopupEnabledElseAsk(this)) {
             finish();
             return;
         }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1068,8 +1068,7 @@ private void openBackgroundPlayer(final boolean append) {
     }
 
     private void openPopupPlayer(final boolean append) {
-        if (!PermissionHelper.isPopupEnabled(activity)) {
-            PermissionHelper.showPopupEnablementToast(activity);
+        if (!PermissionHelper.isPopupEnabledElseAsk(activity)) {
             return;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -143,11 +143,9 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 NavigationHelper.playOnMainPlayer(this, player.getPlayQueue(), true);
                 return true;
             case R.id.action_switch_popup:
-                if (PermissionHelper.isPopupEnabled(this)) {
+                if (PermissionHelper.isPopupEnabledElseAsk(this)) {
                     this.player.setRecovery();
                     NavigationHelper.playOnPopupPlayer(this, player.getPlayQueue(), true);
-                } else {
-                    PermissionHelper.showPopupEnablementToast(this);
                 }
                 return true;
             case R.id.action_switch_background:

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -57,7 +57,7 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " WHERE " + JOIN_PLAYLIST_ID + " = :playlistId "
             + " AND " + STREAM_URL + " = :streamURL"
     )
-    Flowable<Integer> getDuplicates(long playlistId, String streamURL);
+    Flowable<Integer> getDuplicateCount(long playlistId, String streamURL);
 
     @Query("SELECT " + JOIN_PLAYLIST_ID
             + " FROM " + STREAM_TABLE
@@ -67,7 +67,6 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
     )
     Flowable<List<Long>> getDuplicatePlaylists(String streamURL);
 
-
     @Query("SELECT COALESCE(MAX(" + JOIN_INDEX + "), -1)"
             + " FROM " + PLAYLIST_STREAM_JOIN_TABLE
             + " WHERE " + JOIN_PLAYLIST_ID + " = :playlistId")

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsJsonHelper.java
Patch:
@@ -20,6 +20,7 @@ public final class TabsJsonHelper {
 
     private static final List<Tab> FALLBACK_INITIAL_TABS_LIST = List.of(
             Tab.Type.DEFAULT_KIOSK.getTab(),
+            Tab.Type.FEED.getTab(),
             Tab.Type.SUBSCRIPTIONS.getTab(),
             Tab.Type.BOOKMARKS.getTab());
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -90,7 +90,7 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " FROM " + PLAYLIST_TABLE
             + " LEFT JOIN " + PLAYLIST_STREAM_JOIN_TABLE
             + " ON " + PLAYLIST_ID + " = " + JOIN_PLAYLIST_ID
-            + " GROUP BY " + JOIN_PLAYLIST_ID
+            + " GROUP BY " + PLAYLIST_ID
             + " ORDER BY " + PLAYLIST_NAME + " COLLATE NOCASE ASC")
     Flowable<List<PlaylistMetadataEntry>> getPlaylistMetadata();
 }

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -631,8 +631,7 @@ private void handleChoice(final String selectedChoiceKey) {
         }
 
         if (selectedChoiceKey.equals(getString(R.string.popup_player_key))
-                && !PermissionHelper.isPopupEnabled(this)) {
-            PermissionHelper.showPopupEnablementToast(this);
+                && !PermissionHelper.isPopupEnabledElseAsk(this)) {
             finish();
             return;
         }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1066,8 +1066,7 @@ private void openBackgroundPlayer(final boolean append) {
     }
 
     private void openPopupPlayer(final boolean append) {
-        if (!PermissionHelper.isPopupEnabled(activity)) {
-            PermissionHelper.showPopupEnablementToast(activity);
+        if (!PermissionHelper.isPopupEnabledElseAsk(activity)) {
             return;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -143,11 +143,9 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 NavigationHelper.playOnMainPlayer(this, player.getPlayQueue(), true);
                 return true;
             case R.id.action_switch_popup:
-                if (PermissionHelper.isPopupEnabled(this)) {
+                if (PermissionHelper.isPopupEnabledElseAsk(this)) {
                     this.player.setRecovery();
                     NavigationHelper.playOnPopupPlayer(this, player.getPlayQueue(), true);
-                } else {
-                    PermissionHelper.showPopupEnablementToast(this);
                 }
                 return true;
             case R.id.action_switch_background:

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsJsonHelper.java
Patch:
@@ -20,6 +20,7 @@ public final class TabsJsonHelper {
 
     private static final List<Tab> FALLBACK_INITIAL_TABS_LIST = List.of(
             Tab.Type.DEFAULT_KIOSK.getTab(),
+            Tab.Type.FEED.getTab(),
             Tab.Type.SUBSCRIPTIONS.getTab(),
             Tab.Type.BOOKMARKS.getTab());
 

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -758,10 +758,10 @@ private void playback() {
             while (buffer.size() > 0) {
                 final ResultRunnable runnable = buffer.elementAt(0);
                 buffer.removeElementAt(0);
-                getActivityContext().runOnUiThread(() -> {
+                getActivityContext().runOnUiThread(() ->
                     // execute queued task with new context, in case activity has been recreated
-                    runnable.run(getActivityContext());
-                });
+                    runnable.run(getActivityContext())
+                );
             }
             done();
         }

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -80,7 +80,7 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " FROM " + PLAYLIST_TABLE
             + " LEFT JOIN " + PLAYLIST_STREAM_JOIN_TABLE
             + " ON " + PLAYLIST_ID + " = " + JOIN_PLAYLIST_ID
-            + " GROUP BY " + JOIN_PLAYLIST_ID
+            + " GROUP BY " + PLAYLIST_ID
             + " ORDER BY " + PLAYLIST_NAME + " COLLATE NOCASE ASC")
     Flowable<List<PlaylistMetadataEntry>> getPlaylistMetadata();
 }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -566,8 +566,6 @@ public void onItemSelected(final AdapterView<?> parent,
     }
 
     private void onItemSelectedSetFileName() {
-        final String setSubtitleLanguageCode = subtitleStreamsAdapter.getItem(selectedSubtitleIndex)
-                .getLanguageTag();
         final String fileName = FilenameUtils.createFilename(getContext(),
                 currentInfo.getName());
         switch (dialogBinding.videoAudioGroup.getCheckedRadioButtonId()) {
@@ -576,7 +574,9 @@ private void onItemSelectedSetFileName() {
                 dialogBinding.fileName.setText(fileName);
                 break;
             case R.id.subtitle_button:
-                dialogBinding.fileName.setText(fileName + getString(
+                final String setSubtitleLanguageCode = subtitleStreamsAdapter
+                        .getItem(selectedSubtitleIndex).getLanguageTag();
+                dialogBinding.fileName.setText(getString(
                         R.string.caption_file_name, fileName, setSubtitleLanguageCode));
                 break;
         }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2096,7 +2096,7 @@ private void setupBrightness() {
 
     /**
      * Make changes to the UI to accommodate for better usability on bigger screens such as TVs
-     * or in Android's desktop mode (DeX etc.)
+     * or in Android's desktop mode (DeX etc).
      */
     private void accommodateForTvAndDesktopMode() {
         if (DeviceUtils.isTv(getContext())) {

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -159,7 +159,7 @@ public DownloadDialog() {
      * @param context the context to use just to obtain preferences and strings (will not be stored)
      * @param info    the info from which to obtain downloadable streams and other info (e.g. title)
      */
-    public DownloadDialog(final Context context, @NonNull final StreamInfo info) {
+    public DownloadDialog(@NonNull final Context context, @NonNull final StreamInfo info) {
         this.currentInfo = info;
 
         // TODO: Adapt this code when the downloader support other types of stream deliveries

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -95,7 +95,7 @@ public void updateFromItem(final InfoItem infoItem,
 
         itemContentView.setLines(COMMENT_DEFAULT_LINES);
         commentText = item.getCommentText();
-        itemContentView.setText(commentText);
+        itemContentView.setText(commentText, TextView.BufferType.SPANNABLE);
         itemContentView.setOnTouchListener(CommentTextOnTouchListener.INSTANCE);
 
         if (itemContentView.getLineCount() == 0) {

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -115,7 +115,7 @@ public void updateFromItem(final InfoItem infoItem,
 
         itemContentView.setLines(COMMENT_DEFAULT_LINES);
         commentText = item.getCommentText();
-        itemContentView.setText(commentText);
+        itemContentView.setText(commentText, TextView.BufferType.SPANNABLE);
         itemContentView.setOnTouchListener(CommentTextOnTouchListener.INSTANCE);
 
         if (itemContentView.getLineCount() == 0) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SuggestionListAdapter.java
Patch:
@@ -80,13 +80,14 @@ private static class SuggestionItemCallback extends DiffUtil.ItemCallback<Sugges
         @Override
         public boolean areItemsTheSame(@NonNull final SuggestionItem oldItem,
                                        @NonNull final SuggestionItem newItem) {
-            return oldItem.query.equals(newItem.query);
+            return oldItem.fromHistory == newItem.fromHistory
+                    && oldItem.query.equals(newItem.query);
         }
 
         @Override
         public boolean areContentsTheSame(@NonNull final SuggestionItem oldItem,
                                           @NonNull final SuggestionItem newItem) {
-            return oldItem.equals(newItem);
+            return true; // items' contents never change; the list of items themselves does
         }
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/notification/NotificationPlayerUi.java
Patch:
@@ -43,7 +43,7 @@ public void destroy() {
     @Override
     public void onThumbnailLoaded(@Nullable final Bitmap bitmap) {
         super.onThumbnailLoaded(bitmap);
-        notificationUtil.createNotificationIfNeededAndUpdate(false);
+        notificationUtil.updateThumbnail();
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -946,8 +946,8 @@ public void handleSuggestions(@NonNull final List<SuggestionItem> suggestions) {
         if (DEBUG) {
             Log.d(TAG, "handleSuggestions() called with: suggestions = [" + suggestions + "]");
         }
-        searchBinding.suggestionsList.smoothScrollToPosition(0);
-        suggestionListAdapter.submitList(suggestions);
+        suggestionListAdapter.submitList(suggestions,
+                () -> searchBinding.suggestionsList.scrollToPosition(0));
 
         if (suggestionsPanelVisible && isErrorPanelVisible()) {
             hideLoading();

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SuggestionListAdapter.java
Patch:
@@ -80,13 +80,14 @@ private static class SuggestionItemCallback extends DiffUtil.ItemCallback<Sugges
         @Override
         public boolean areItemsTheSame(@NonNull final SuggestionItem oldItem,
                                        @NonNull final SuggestionItem newItem) {
-            return oldItem.query.equals(newItem.query);
+            return oldItem.fromHistory == newItem.fromHistory
+                    && oldItem.query.equals(newItem.query);
         }
 
         @Override
         public boolean areContentsTheSame(@NonNull final SuggestionItem oldItem,
                                           @NonNull final SuggestionItem newItem) {
-            return oldItem.equals(newItem);
+            return true; // items' contents never change; the list of items themselves does
         }
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/PlayerService.java
Patch:
@@ -28,6 +28,7 @@
 import android.os.IBinder;
 import android.util.Log;
 
+import org.schabi.newpipe.player.mediasession.MediaSessionPlayerUi;
 import org.schabi.newpipe.util.ThemeHelper;
 
 
@@ -73,9 +74,8 @@ public int onStartCommand(final Intent intent, final int flags, final int startI
         }
 
         player.handleIntent(intent);
-        if (player.getMediaSessionManager() != null) {
-            player.getMediaSessionManager().handleMediaButtonIntent(intent);
-        }
+        player.UIs().get(MediaSessionPlayerUi.class)
+                .ifPresent(ui -> ui.handleMediaButtonIntent(intent));
 
         return START_NOT_STICKY;
     }

File: app/src/main/java/org/schabi/newpipe/player/ui/PlayerUi.java
Patch:
@@ -29,7 +29,8 @@ public abstract class PlayerUi {
     @NonNull protected final Player player;
 
     /**
-     * @param player the player instance that will be usable throughout the lifetime of this UI
+     * @param player the player instance that will be usable throughout the lifetime of this UI; its
+     *               context should already have been initialized
      */
     protected PlayerUi(@NonNull final Player player) {
         this.context = player.getContext();

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -222,7 +222,7 @@ public final class Player implements PlaybackListener, Listener {
     // UIs, listeners and disposables
     //////////////////////////////////////////////////////////////////////////*/
 
-    @SuppressWarnings("MemberName") // keep the unusual member name
+    @SuppressWarnings({"MemberName", "java:S116"}) // keep the unusual member name
     private final PlayerUiList UIs;
 
     private BroadcastReceiver broadcastReceiver;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -42,7 +42,7 @@ public void updateFromItem(final InfoItem infoItem,
         itemTitleView.setText(item.getName());
         itemAdditionalDetailView.setText(getDetailLine(item));
 
-        PicassoHelper.loadThumbnail(item.getThumbnailUrl()).into(itemThumbnailView);
+        PicassoHelper.loadAvatar(item.getThumbnailUrl()).into(itemThumbnailView);
 
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnChannelSelectedListener() != null) {

File: app/src/test/java/org/schabi/newpipe/util/ListHelperTest.java
Patch:
@@ -140,15 +140,15 @@ public void getSortedStreamVideosExceptHighResolutionsTest() {
 
     @Test
     public void getDefaultResolutionTest() {
-        final List<VideoStream> testList = List.of(
+        final List<VideoStream> testList = new ArrayList<>(List.of(
                 generateVideoStream("mpeg_4-720", MediaFormat.MPEG_4, "720p", false),
                 generateVideoStream("v3gpp-240", MediaFormat.v3GPP, "240p", false),
                 generateVideoStream("webm-480",  MediaFormat.WEBM, "480p", false),
                 generateVideoStream("webm-240", MediaFormat.WEBM, "240p", false),
                 generateVideoStream("mpeg_4-240", MediaFormat.MPEG_4, "240p", false),
                 generateVideoStream("webm-144", MediaFormat.WEBM, "144p", false),
                 generateVideoStream("mpeg_4-360", MediaFormat.MPEG_4, "360p", false),
-                generateVideoStream("webm-360", MediaFormat.WEBM, "360p", false));
+                generateVideoStream("webm-360", MediaFormat.WEBM, "360p", false)));
         VideoStream result = testList.get(ListHelper.getDefaultResolutionIndex(
                 "720p", BEST_RESOLUTION_KEY, MediaFormat.MPEG_4, testList));
         assertEquals("720p", result.getResolution());

File: app/src/test/java/org/schabi/newpipe/util/ListHelperTest.java
Patch:
@@ -140,15 +140,15 @@ public void getSortedStreamVideosExceptHighResolutionsTest() {
 
     @Test
     public void getDefaultResolutionTest() {
-        final List<VideoStream> testList = List.of(
+        final List<VideoStream> testList = new ArrayList<>(List.of(
                 generateVideoStream("mpeg_4-720", MediaFormat.MPEG_4, "720p", false),
                 generateVideoStream("v3gpp-240", MediaFormat.v3GPP, "240p", false),
                 generateVideoStream("webm-480",  MediaFormat.WEBM, "480p", false),
                 generateVideoStream("webm-240", MediaFormat.WEBM, "240p", false),
                 generateVideoStream("mpeg_4-240", MediaFormat.MPEG_4, "240p", false),
                 generateVideoStream("webm-144", MediaFormat.WEBM, "144p", false),
                 generateVideoStream("mpeg_4-360", MediaFormat.MPEG_4, "360p", false),
-                generateVideoStream("webm-360", MediaFormat.WEBM, "360p", false));
+                generateVideoStream("webm-360", MediaFormat.WEBM, "360p", false)));
         VideoStream result = testList.get(ListHelper.getDefaultResolutionIndex(
                 "720p", BEST_RESOLUTION_KEY, MediaFormat.MPEG_4, testList));
         assertEquals("720p", result.getResolution());

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -42,7 +42,7 @@ public void updateFromItem(final InfoItem infoItem,
         itemTitleView.setText(item.getName());
         itemAdditionalDetailView.setText(getDetailLine(item));
 
-        PicassoHelper.loadThumbnail(item.getThumbnailUrl()).into(itemThumbnailView);
+        PicassoHelper.loadAvatar(item.getThumbnailUrl()).into(itemThumbnailView);
 
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnChannelSelectedListener() != null) {

File: app/src/main/java/org/schabi/newpipe/DownloaderImpl.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import static org.schabi.newpipe.MainActivity.DEBUG;
-
 import android.content.Context;
 
 import androidx.annotation.NonNull;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1555,8 +1555,8 @@ public void handleResult(@NonNull final StreamInfo info) {
             binding.detailUploaderThumbnailView.setVisibility(View.GONE);
         }
 
-        final Drawable buddyDrawable
-                = AppCompatResources.getDrawable(activity, R.drawable.placeholder_person);
+        final Drawable buddyDrawable =
+                AppCompatResources.getDrawable(activity, R.drawable.placeholder_person);
         binding.detailSubChannelThumbnailView.setImageDrawable(buddyDrawable);
         binding.detailUploaderThumbnailView.setImageDrawable(buddyDrawable);
 
@@ -2030,6 +2030,7 @@ private void hideSystemUi() {
     }
 
     // Listener implementation
+    @Override
     public void hideSystemUiIfNeeded() {
         if (isFullscreen()
                 && bottomSheetBehavior.getState() == BottomSheetBehavior.STATE_EXPANDED) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1305,7 +1305,7 @@ private boolean isAutoplayEnabled() {
     }
 
     private void addVideoPlayerView() {
-        if (!isPlayerAvailable()) {
+        if (!isPlayerAvailable() || getView() == null) {
             return;
         }
         setHeightThumbnail();

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -60,7 +60,7 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.ktx.ExceptionUtils;
 import org.schabi.newpipe.local.dialog.PlaylistDialog;
-import org.schabi.newpipe.player.PlayerService;
+import org.schabi.newpipe.player.PlayerType;
 import org.schabi.newpipe.player.helper.PlayerHelper;
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.ChannelPlayQueue;
@@ -630,8 +630,8 @@ private boolean canHandleChoiceLikeShowInfo(final String selectedChoiceKey) {
         }
 
         // ...the player is not running or in normal Video-mode/type
-        final PlayerService.PlayerType playerType = PlayerHolder.getInstance().getType();
-        return playerType == null || playerType == PlayerService.PlayerType.MAIN;
+        final PlayerType playerType = PlayerHolder.getInstance().getType();
+        return playerType == null || playerType == PlayerType.MAIN;
     }
 
     private void openAddToPlaylistDialog() {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -90,7 +90,7 @@
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.player.Player;
 import org.schabi.newpipe.player.PlayerService;
-import org.schabi.newpipe.player.PlayerService.PlayerType;
+import org.schabi.newpipe.player.PlayerType;
 import org.schabi.newpipe.player.event.OnKeyDownListener;
 import org.schabi.newpipe.player.event.PlayerServiceExtendedEventListener;
 import org.schabi.newpipe.player.helper.PlayerHelper;

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -43,7 +43,7 @@
 import org.schabi.newpipe.ktx.AnimationType;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.local.feed.notifications.NotificationHelper;
-import org.schabi.newpipe.player.PlayerService.PlayerType;
+import org.schabi.newpipe.player.PlayerType;
 import org.schabi.newpipe.player.playqueue.ChannelPlayQueue;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.util.ExtractorHelper;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -43,7 +43,7 @@
 import org.schabi.newpipe.info_list.dialog.StreamDialogDefaultEntry;
 import org.schabi.newpipe.local.dialog.PlaylistDialog;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
-import org.schabi.newpipe.player.PlayerService.PlayerType;
+import org.schabi.newpipe.player.PlayerType;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.PlaylistPlayQueue;
 import org.schabi.newpipe.util.ExtractorHelper;

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -43,7 +43,7 @@
 import org.schabi.newpipe.info_list.dialog.InfoItemDialog;
 import org.schabi.newpipe.local.BaseLocalListFragment;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.player.PlayerService.PlayerType;
+import org.schabi.newpipe.player.PlayerType;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
 import org.schabi.newpipe.util.Localization;

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -32,7 +32,6 @@
 import static org.schabi.newpipe.player.helper.PlayerHelper.isPlaybackResumeEnabled;
 import static org.schabi.newpipe.player.helper.PlayerHelper.nextRepeatMode;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrievePlaybackParametersFromPrefs;
-import static org.schabi.newpipe.player.helper.PlayerHelper.retrievePlayerTypeFromIntent;
 import static org.schabi.newpipe.player.helper.PlayerHelper.retrieveSeekDurationFromPreferences;
 import static org.schabi.newpipe.player.helper.PlayerHelper.savePlaybackParametersToPrefs;
 import static org.schabi.newpipe.player.notification.NotificationConstants.ACTION_CLOSE;
@@ -95,7 +94,6 @@
 import org.schabi.newpipe.extractor.stream.VideoStream;
 import org.schabi.newpipe.fragments.detail.VideoDetailFragment;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.player.PlayerService.PlayerType;
 import org.schabi.newpipe.player.event.PlayerEventListener;
 import org.schabi.newpipe.player.event.PlayerServiceEventListener;
 import org.schabi.newpipe.player.helper.AudioReactor;
@@ -308,7 +306,7 @@ public void handleIntent(@NonNull final Intent intent) {
         }
 
         final PlayerType oldPlayerType = playerType;
-        playerType = retrievePlayerTypeFromIntent(intent);
+        playerType = PlayerType.retrieveFromIntent(intent);
         initUIsForCurrentPlayerType();
         // We need to setup audioOnly before super(), see "sourceOf"
         isAudioOnly = audioPlayerSelected();

File: app/src/main/java/org/schabi/newpipe/player/notification/NotificationUtil.java
Patch:
@@ -132,7 +132,7 @@ private synchronized void updateNotification() {
 
         // also update content intent, in case the user switched players
         notificationBuilder.setContentIntent(PendingIntent.getActivity(player.getContext(),
-                NOTIFICATION_ID, getIntentForNotification(player), FLAG_UPDATE_CURRENT));
+                NOTIFICATION_ID, getIntentForNotification(), FLAG_UPDATE_CURRENT));
         notificationBuilder.setContentTitle(player.getVideoTitle());
         notificationBuilder.setContentText(player.getUploaderName());
         notificationBuilder.setTicker(player.getVideoTitle());
@@ -321,7 +321,7 @@ private NotificationCompat.Action getAction(@DrawableRes final int drawable,
                         new Intent(intentAction), FLAG_UPDATE_CURRENT));
     }
 
-    private Intent getIntentForNotification(final Player player) {
+    private Intent getIntentForNotification() {
         if (player.audioPlayerSelected() || player.popupPlayerSelected()) {
             // Means we play in popup or audio only. Let's show the play queue
             return NavigationHelper.getPlayQueueActivityIntent(player.getContext());

File: app/src/main/java/org/schabi/newpipe/player/playback/PlayerMediaSession.java
Patch:
@@ -10,8 +10,6 @@
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 import org.schabi.newpipe.player.ui.VideoPlayerUi;
 
-import java.util.Optional;
-
 public class PlayerMediaSession implements MediaSessionCallback {
     private final Player player;
 

File: app/src/main/java/org/schabi/newpipe/player/ui/MainPlayerUi.java
Patch:
@@ -497,7 +497,7 @@ private void showHideKodiButton() {
     //region Captions (text tracks)
 
     @Override
-    protected void setupSubtitleView(float captionScale) {
+    protected void setupSubtitleView(final float captionScale) {
         final DisplayMetrics metrics = context.getResources().getDisplayMetrics();
         final int minimumLength = Math.min(metrics.heightPixels, metrics.widthPixels);
         final float captionRatioInverse = 20f + 4f * (1.0f - captionScale);

File: app/src/main/java/org/schabi/newpipe/player/ui/PlayerUiList.java
Patch:
@@ -35,7 +35,7 @@ public void addAndPrepare(final PlayerUi playerUi) {
     }
 
     /**
-     * Destroys all matching player UIs and removes them from the list
+     * Destroys all matching player UIs and removes them from the list.
      * @param playerUiType the class of the player UI to destroy; the {@link
      *                     Class#isInstance(Object)} method will be used, so even subclasses will be
      *                     destroyed and removed
@@ -67,7 +67,7 @@ public <T> Optional<T> get(final Class<T> playerUiType) {
     }
 
     /**
-     * Calls the provided consumer on all player UIs in the list
+     * Calls the provided consumer on all player UIs in the list.
      * @param consumer the consumer to call with player UIs
      */
     public void call(final Consumer<PlayerUi> consumer) {

File: app/src/main/java/org/schabi/newpipe/settings/custom/NotificationActionsPreference.java
Patch:
@@ -28,7 +28,6 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.ListRadioIconItemBinding;
 import org.schabi.newpipe.databinding.SingleChoiceDialogViewBinding;
-import org.schabi.newpipe.player.PlayerService;
 import org.schabi.newpipe.player.notification.NotificationConstants;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/main/java/org/schabi/newpipe/player/ui/PlayerUi.java
Patch:
@@ -19,7 +19,6 @@
 import java.util.List;
 
 public abstract class PlayerUi {
-    private static final String TAG = PlayerUi.class.getSimpleName();
 
     @NonNull protected Context context;
     @NonNull protected Player player;

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java
Patch:
@@ -11,12 +11,12 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.ktx.ViewUtils;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.util.PicassoHelper;
 import org.schabi.newpipe.util.Localization;
+import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.views.AnimatedProgressBar;
 
 import java.time.format.DateTimeFormatter;
@@ -59,7 +59,7 @@ public void updateFromItem(final LocalItem localItem,
         itemVideoTitleView.setText(item.getStreamEntity().getTitle());
         itemAdditionalDetailsView.setText(Localization
                 .concatenateStrings(item.getStreamEntity().getUploader(),
-                        NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));
+                        ServiceHelper.getNameOfServiceById(item.getStreamEntity().getServiceId())));
 
         if (item.getStreamEntity().getDuration() > 0) {
             itemDurationView.setText(Localization

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItemBuilder.java
Patch:
@@ -5,9 +5,9 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 
 public class PlayQueueItemBuilder {
     private static final String TAG = PlayQueueItemBuilder.class.toString();
@@ -25,7 +25,7 @@ public void buildStreamInfoItem(final PlayQueueItemHolder holder, final PlayQueu
             holder.itemVideoTitleView.setText(item.getTitle());
         }
         holder.itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getUploader(),
-                NewPipe.getNameOfService(item.getServiceId())));
+                ServiceHelper.getNameOfServiceById(item.getServiceId())));
 
         if (item.getDuration() > 0) {
             holder.itemDurationView.setText(Localization.getDurationString(item.getDuration()));

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java
Patch:
@@ -11,12 +11,12 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.ktx.ViewUtils;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.util.PicassoHelper;
 import org.schabi.newpipe.util.Localization;
+import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.views.AnimatedProgressBar;
 
 import java.time.format.DateTimeFormatter;
@@ -59,7 +59,7 @@ public void updateFromItem(final LocalItem localItem,
         itemVideoTitleView.setText(item.getStreamEntity().getTitle());
         itemAdditionalDetailsView.setText(Localization
                 .concatenateStrings(item.getStreamEntity().getUploader(),
-                        NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));
+                        ServiceHelper.getNameOfServiceById(item.getStreamEntity().getServiceId())));
 
         if (item.getStreamEntity().getDuration() > 0) {
             itemDurationView.setText(Localization

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItemBuilder.java
Patch:
@@ -5,9 +5,9 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 
 public class PlayQueueItemBuilder {
     private static final String TAG = PlayQueueItemBuilder.class.toString();
@@ -25,7 +25,7 @@ public void buildStreamInfoItem(final PlayQueueItemHolder holder, final PlayQueu
             holder.itemVideoTitleView.setText(item.getTitle());
         }
         holder.itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getUploader(),
-                NewPipe.getNameOfService(item.getServiceId())));
+                ServiceHelper.getNameOfServiceById(item.getServiceId())));
 
         if (item.getDuration() > 0) {
             holder.itemDurationView.setText(Localization.getDurationString(item.getDuration()));

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java
Patch:
@@ -11,12 +11,12 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.ktx.ViewUtils;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.util.PicassoHelper;
 import org.schabi.newpipe.util.Localization;
+import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.views.AnimatedProgressBar;
 
 import java.time.format.DateTimeFormatter;
@@ -59,7 +59,7 @@ public void updateFromItem(final LocalItem localItem,
         itemVideoTitleView.setText(item.getStreamEntity().getTitle());
         itemAdditionalDetailsView.setText(Localization
                 .concatenateStrings(item.getStreamEntity().getUploader(),
-                        NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));
+                        ServiceHelper.getNameOfServiceById(item.getStreamEntity().getServiceId())));
 
         if (item.getStreamEntity().getDuration() > 0) {
             itemDurationView.setText(Localization

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItemBuilder.java
Patch:
@@ -5,9 +5,9 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.PicassoHelper;
+import org.schabi.newpipe.util.ServiceHelper;
 
 public class PlayQueueItemBuilder {
     private static final String TAG = PlayQueueItemBuilder.class.toString();
@@ -25,7 +25,7 @@ public void buildStreamInfoItem(final PlayQueueItemHolder holder, final PlayQueu
             holder.itemVideoTitleView.setText(item.getTitle());
         }
         holder.itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getUploader(),
-                NewPipe.getNameOfService(item.getServiceId())));
+                ServiceHelper.getNameOfServiceById(item.getServiceId())));
 
         if (item.getDuration() > 0) {
             holder.itemDurationView.setText(Localization.getDurationString(item.getDuration()));

File: app/src/main/java/org/schabi/newpipe/player/resolver/AudioPlaybackResolver.java
Patch:
@@ -17,7 +17,6 @@
 import org.schabi.newpipe.player.mediaitem.StreamInfoTag;
 import org.schabi.newpipe.util.ListHelper;
 
-import java.io.IOException;
 import java.util.List;
 
 public class AudioPlaybackResolver implements PlaybackResolver {
@@ -55,8 +54,8 @@ public MediaSource resolve(@NonNull final StreamInfo info) {
         try {
             return PlaybackResolver.buildMediaSource(
                     dataSource, audio, info, PlaybackResolver.cacheKeyOf(info, audio), tag);
-        } catch (final IOException e) {
-            Log.e(TAG, "Unable to create audio source:", e);
+        } catch (final ResolverException e) {
+            Log.e(TAG, "Unable to create audio source", e);
             return null;
         }
     }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -663,8 +663,7 @@ protected void initListeners() {
             binding.detailControlsCrashThePlayer.setOnClickListener(
                     v -> VideoDetailPlayerCrasher.onCrashThePlayer(
                             this.getContext(),
-                            this.player,
-                            getLayoutInflater())
+                            this.player)
             );
         }
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -663,8 +663,7 @@ protected void initListeners() {
             binding.detailControlsCrashThePlayer.setOnClickListener(
                     v -> VideoDetailPlayerCrasher.onCrashThePlayer(
                             this.getContext(),
-                            this.player,
-                            getLayoutInflater())
+                            this.player)
             );
         }
 

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -46,8 +46,8 @@
 import org.schabi.newpipe.player.MainPlayer.PlayerType;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
-import org.schabi.newpipe.util.DebounceSavable;
-import org.schabi.newpipe.util.DebounceSaver;
+import org.schabi.newpipe.util.debounce.DebounceSavable;
+import org.schabi.newpipe.util.debounce.DebounceSaver;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
@@ -112,7 +112,7 @@ public void onCreate(final Bundle savedInstanceState) {
         disposables = new CompositeDisposable();
 
         isLoadingComplete = new AtomicBoolean();
-        debounceSaver = new DebounceSaver(10000, this);
+        debounceSaver = new DebounceSaver(this);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/settings/SelectPlaylistFragment.java
Patch:
@@ -90,8 +90,8 @@ private void loadPlaylists() {
         final LocalPlaylistManager localPlaylistManager = new LocalPlaylistManager(database);
         final RemotePlaylistManager remotePlaylistManager = new RemotePlaylistManager(database);
 
-        disposable = Flowable.combineLatest(localPlaylistManager.getPlaylists(),
-                remotePlaylistManager.getPlaylists(), PlaylistLocalItem::merge)
+        disposable = Flowable.combineLatest(localPlaylistManager.getDisplayIndexOrderedPlaylists(),
+                remotePlaylistManager.getDisplayIndexOrderedPlaylists(), PlaylistLocalItem::merge)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(this::displayPlaylists, this::onError);
     }

File: app/src/main/java/org/schabi/newpipe/util/debounce/DebounceSavable.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.util;
+package org.schabi.newpipe.util.debounce;
 
 import org.schabi.newpipe.error.ErrorInfo;
 

File: app/src/main/java/org/schabi/newpipe/util/ServiceHelper.java
Patch:
@@ -33,15 +33,15 @@ public static int getIcon(final int serviceId) {
             case 0:
                 return R.drawable.ic_smart_display;
             case 1:
-                return R.drawable.ic_placeholder_cloud;
+                return R.drawable.ic_cloud;
             case 2:
                 return R.drawable.ic_placeholder_media_ccc;
             case 3:
                 return R.drawable.ic_placeholder_peertube;
             case 4:
                 return R.drawable.ic_placeholder_bandcamp;
             default:
-                return R.drawable.ic_placeholder_circle;
+                return R.drawable.ic_circle;
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -207,7 +207,7 @@ private void showAddItemDialog(final Context c) {
 
         new AlertDialog.Builder(c)
                 .setTitle(R.string.peertube_instance_add_title)
-                .setIcon(R.drawable.place_holder_peertube)
+                .setIcon(R.drawable.ic_placeholder_peertube)
                 .setView(dialogBinding.getRoot())
                 .setNegativeButton(R.string.cancel, null)
                 .setPositiveButton(R.string.ok, (dialog1, which) -> {
@@ -411,7 +411,7 @@ void bind(final int position, final TabViewHolder holder) {
                         lastChecked = instanceRB;
                     }
                 });
-                instanceIconView.setImageResource(R.drawable.place_holder_peertube);
+                instanceIconView.setImageResource(R.drawable.ic_placeholder_peertube);
             }
 
             @SuppressLint("ClickableViewAccessibility")

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -77,7 +77,7 @@ public class ChannelFragment extends BaseListInfoFragment<StreamInfoItem, Channe
     private final CompositeDisposable disposables = new CompositeDisposable();
     private Disposable subscribeButtonMonitor;
 
-    private boolean channelContentNotSupported;
+    private boolean channelContentNotSupported = false;
 
     /*//////////////////////////////////////////////////////////////////////////
     // Views

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -72,6 +72,7 @@
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.ListHelper;
+import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.PermissionHelper;
 import org.schabi.newpipe.util.ThemeHelper;
@@ -127,8 +128,10 @@ protected void onCreate(final Bundle savedInstanceState) {
             }
         }
 
+        ThemeHelper.setDayNightMode(this);
         setTheme(ThemeHelper.isLightThemeSelected(this)
                 ? R.style.RouterActivityThemeLight : R.style.RouterActivityThemeDark);
+        Localization.assureCorrectAppLanguage(this);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/database/history/model/StreamHistoryEntity.java
Patch:
@@ -51,7 +51,7 @@ public StreamHistoryEntity(final long streamUid, @NonNull final OffsetDateTime a
 
     @Ignore
     public StreamHistoryEntity(final long streamUid, @NonNull final OffsetDateTime accessDate) {
-        this(streamUid, accessDate, 1);
+        this(streamUid, accessDate, 0); // start with 0 views (adding views will be done elsewhere)
     }
 
     public long getStreamUid() {

File: app/src/main/java/org/schabi/newpipe/database/history/model/StreamHistoryEntity.java
Patch:
@@ -51,7 +51,7 @@ public StreamHistoryEntity(final long streamUid, @NonNull final OffsetDateTime a
 
     @Ignore
     public StreamHistoryEntity(final long streamUid, @NonNull final OffsetDateTime accessDate) {
-        this(streamUid, accessDate, 1);
+        this(streamUid, accessDate, 0);
     }
 
     public long getStreamUid() {

File: app/src/main/java/org/schabi/newpipe/player/helper/PlaybackParameterDialog.java
Patch:
@@ -38,8 +38,6 @@
 import java.util.function.DoubleFunction;
 import java.util.function.DoubleSupplier;
 
-import javax.annotation.Nonnull;
-
 import icepick.Icepick;
 import icepick.State;
 
@@ -498,7 +496,7 @@ private SeekBar.OnSeekBarChangeListener getTempoOrPitchSeekbarChangeListener(
     ) {
         return new SimpleOnSeekBarChangeListener() {
             @Override
-            public void onProgressChanged(@Nonnull final SeekBar seekBar,
+            public void onProgressChanged(@NonNull final SeekBar seekBar,
                                           final int progress,
                                           final boolean fromUser) {
                 if (fromUser) { // ensure that the user triggered the change

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -426,7 +426,7 @@ public static int getProgressiveLoadIntervalBytes(@NonNull final Context context
                 context.getString(R.string.progressive_load_interval_key),
                 context.getString(R.string.progressive_load_interval_default_value));
 
-        if (context.getString(R.string.progressive_load_interval_default_value)
+        if (context.getString(R.string.progressive_load_interval_exoplayer_default_value)
                 .equals(preferredIntervalBytes)) {
             return ProgressiveMediaSource.DEFAULT_LOADING_CHECK_INTERVAL_BYTES;
         }

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -426,7 +426,7 @@ public static int getProgressiveLoadIntervalBytes(@NonNull final Context context
                 context.getString(R.string.progressive_load_interval_key),
                 context.getString(R.string.progressive_load_interval_default_value));
 
-        if (context.getString(R.string.progressive_load_interval_default_value)
+        if (context.getString(R.string.progressive_load_interval_exoplayer_default_value)
                 .equals(preferredIntervalBytes)) {
             return ProgressiveMediaSource.DEFAULT_LOADING_CHECK_INTERVAL_BYTES;
         }

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistItemHolder.java
Patch:
@@ -3,7 +3,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.local.LocalItemBuilder;
@@ -16,7 +15,7 @@
 public class LocalPlaylistItemHolder extends PlaylistItemHolder {
 
     public LocalPlaylistItemHolder(final LocalItemBuilder infoItemBuilder, final ViewGroup parent) {
-        this(infoItemBuilder, R.layout.list_playlist_mini_item, parent);
+        super(infoItemBuilder, parent);
     }
 
     LocalPlaylistItemHolder(final LocalItemBuilder infoItemBuilder, final int layoutId,

File: app/src/main/java/org/schabi/newpipe/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -3,7 +3,6 @@
 import android.text.TextUtils;
 import android.view.ViewGroup;
 
-import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.extractor.NewPipe;
@@ -18,7 +17,7 @@ public class RemotePlaylistItemHolder extends PlaylistItemHolder {
 
     public RemotePlaylistItemHolder(final LocalItemBuilder infoItemBuilder,
                                     final ViewGroup parent) {
-        this(infoItemBuilder, R.layout.list_playlist_mini_item, parent);
+        super(infoItemBuilder, parent);
     }
 
     RemotePlaylistItemHolder(final LocalItemBuilder infoItemBuilder, final int layoutId,

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -84,7 +84,7 @@ private void setupUploadDate() {
     private void setupDescription() {
         final Description description = streamInfo.getDescription();
         if (description == null || isEmpty(description.getContent())
-                || description == Description.emptyDescription) {
+                || description == Description.EMPTY_DESCRIPTION) {
             binding.detailDescriptionView.setVisibility(View.GONE);
             binding.detailSelectDescriptionButton.setVisibility(View.GONE);
             return;

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -193,7 +193,7 @@ private void restoreDefaults() {
                 .setNegativeButton(R.string.cancel, null)
                 .setPositiveButton(R.string.yes, (dialog, which) -> {
                     sharedPreferences.edit().remove(savedInstanceListKey).apply();
-                    selectInstance(PeertubeInstance.defaultInstance);
+                    selectInstance(PeertubeInstance.DEFAULT_INSTANCE);
                     updateInstanceList();
                     instanceListAdapter.notifyDataSetChanged();
                 })

File: app/src/main/java/us/shandian/giga/get/DownloadMissionRecover.java
Patch:
@@ -132,7 +132,7 @@ private void resolveStream() throws IOException, ExtractionException, HttpError
         switch (mRecovery.getKind()) {
             case 'a':
                 for (AudioStream audio : mExtractor.getAudioStreams()) {
-                    if (audio.average_bitrate == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
+                    if (audio.getAverageBitrate() == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
                         url = audio.getUrl();
                         break;
                     }

File: app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistMetadataEntry.java
Patch:
@@ -17,7 +17,7 @@ public class PlaylistMetadataEntry implements PlaylistLocalItem {
     @ColumnInfo(name = PLAYLIST_THUMBNAIL_URL)
     public final String thumbnailUrl;
     @ColumnInfo(name = PLAYLIST_DISPLAY_INDEX)
-    public final long displayIndex;
+    public long displayIndex;
     @ColumnInfo(name = PLAYLIST_STREAM_COUNT)
     public final long streamCount;
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java
Patch:
@@ -54,7 +54,7 @@ public class PlaylistRemoteEntity implements PlaylistLocalItem {
     private String uploader;
 
     @ColumnInfo(name = REMOTE_PLAYLIST_DISPLAY_INDEX)
-    private long displayIndex;
+    private long displayIndex = -1; // Make sure the new item is on the top
 
     @ColumnInfo(name = REMOTE_PLAYLIST_STREAM_COUNT)
     private Long streamCount;

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -142,7 +142,6 @@ public void removeItem(final LocalItem data) {
     }
 
     public boolean swapItems(final int fromAdapterPosition, final int toAdapterPosition) {
-        // todo: reuse this code?
         final int actualFrom = adapterOffsetWithoutHeader(fromAdapterPosition);
         final int actualTo = adapterOffsetWithoutHeader(toAdapterPosition);
 

File: app/src/main/java/org/schabi/newpipe/local/dialog/PlaylistAppendDialog.java
Patch:
@@ -85,7 +85,7 @@ public void selected(final LocalItem selectedItem) {
         final View newPlaylistButton = view.findViewById(R.id.newPlaylist);
         newPlaylistButton.setOnClickListener(ignored -> openCreatePlaylistDialog());
 
-        playlistDisposables.add(playlistManager.getPlaylists()
+        playlistDisposables.add(playlistManager.getDisplayIndexOrderedPlaylists()
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(this::onPlaylistsReceived));
     }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -84,7 +84,7 @@ private void setupUploadDate() {
     private void setupDescription() {
         final Description description = streamInfo.getDescription();
         if (description == null || isEmpty(description.getContent())
-                || description == Description.emptyDescription) {
+                || description == Description.EMPTY_DESCRIPTION) {
             binding.detailDescriptionView.setVisibility(View.GONE);
             binding.detailSelectDescriptionButton.setVisibility(View.GONE);
             return;

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -193,7 +193,7 @@ private void restoreDefaults() {
                 .setNegativeButton(R.string.cancel, null)
                 .setPositiveButton(R.string.yes, (dialog, which) -> {
                     sharedPreferences.edit().remove(savedInstanceListKey).apply();
-                    selectInstance(PeertubeInstance.defaultInstance);
+                    selectInstance(PeertubeInstance.DEFAULT_INSTANCE);
                     updateInstanceList();
                     instanceListAdapter.notifyDataSetChanged();
                 })

File: app/src/main/java/us/shandian/giga/get/DownloadMissionRecover.java
Patch:
@@ -132,7 +132,7 @@ private void resolveStream() throws IOException, ExtractionException, HttpError
         switch (mRecovery.getKind()) {
             case 'a':
                 for (AudioStream audio : mExtractor.getAudioStreams()) {
-                    if (audio.average_bitrate == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
+                    if (audio.getAverageBitrate() == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
                         url = audio.getUrl();
                         break;
                     }

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -142,6 +142,7 @@ public void removeItem(final LocalItem data) {
     }
 
     public boolean swapItems(final int fromAdapterPosition, final int toAdapterPosition) {
+        // todo: reuse this code?
         final int actualFrom = adapterOffsetWithoutHeader(fromAdapterPosition);
         final int actualTo = adapterOffsetWithoutHeader(toAdapterPosition);
 

File: app/src/main/java/org/schabi/newpipe/player/mediasource/FailedMediaSource.java
Patch:
@@ -78,7 +78,7 @@ public PlayQueueItem getStream() {
         return playQueueItem;
     }
 
-    public Throwable getError() {
+    public Exception getError() {
         return error;
     }
 

File: app/src/main/java/org/schabi/newpipe/player/mediaitem/MediaItemTag.java
Patch:
@@ -26,7 +26,7 @@
  **/
 public interface MediaItemTag {
 
-    List<Throwable> getErrors();
+    List<Exception> getErrors();
 
     int getServiceId();
 

File: app/src/main/java/org/schabi/newpipe/player/mediaitem/PlaceholderTag.java
Patch:
@@ -29,7 +29,7 @@ private PlaceholderTag(@Nullable final Object extras) {
 
     @NonNull
     @Override
-    public List<Throwable> getErrors() {
+    public List<Exception> getErrors() {
         return Collections.emptyList();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/mediaitem/StreamInfoTag.java
Patch:
@@ -47,7 +47,7 @@ public static StreamInfoTag of(@NonNull final StreamInfo streamInfo) {
     }
 
     @Override
-    public List<Throwable> getErrors() {
+    public List<Exception> getErrors() {
         return Collections.emptyList();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/mediasource/FailedMediaSource.java
Patch:
@@ -36,7 +36,7 @@ public class FailedMediaSource extends BaseMediaSource implements ManagedMediaSo
 
     private final String TAG = "FailedMediaSource@" + Integer.toHexString(hashCode());
     private final PlayQueueItem playQueueItem;
-    private final Throwable error;
+    private final Exception error;
     private final long retryTimestamp;
     private final MediaItem mediaItem;
     /**
@@ -51,7 +51,7 @@ public class FailedMediaSource extends BaseMediaSource implements ManagedMediaSo
      * @param retryTimestamp epoch timestamp when this MediaSource can be refreshed
      */
     public FailedMediaSource(@NonNull final PlayQueueItem playQueueItem,
-                             @NonNull final Throwable error,
+                             @NonNull final Exception error,
                              final long retryTimestamp) {
         this.playQueueItem = playQueueItem;
         this.error = error;
@@ -68,7 +68,7 @@ public static FailedMediaSource of(@NonNull final PlayQueueItem playQueueItem,
     }
 
     public static FailedMediaSource of(@NonNull final PlayQueueItem playQueueItem,
-                                       @NonNull final Throwable error,
+                                       @NonNull final Exception error,
                                        final long retryWaitMillis) {
         return new FailedMediaSource(playQueueItem, error,
                 System.currentTimeMillis() + retryWaitMillis);

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -441,7 +441,8 @@ private Single<ManagedMediaSource> getLoadedMediaSource(@NonNull final PlayQueue
             if (throwable instanceof ExtractionException) {
                 return FailedMediaSource.of(stream, new StreamInfoLoadException(throwable));
             }
-            return FailedMediaSource.of(stream, throwable, /*immediatelyRetryable=*/0L);
+            return FailedMediaSource
+                    .of(stream, new Exception(throwable), /*immediatelyRetryable=*/0L);
         });
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/DescriptionFragment.java
Patch:
@@ -84,7 +84,7 @@ private void setupUploadDate() {
     private void setupDescription() {
         final Description description = streamInfo.getDescription();
         if (description == null || isEmpty(description.getContent())
-                || description == Description.emptyDescription) {
+                || description == Description.EMPTY_DESCRIPTION) {
             binding.detailDescriptionView.setVisibility(View.GONE);
             binding.detailSelectDescriptionButton.setVisibility(View.GONE);
             return;

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -185,7 +185,7 @@ private void restoreDefaults() {
                 .setNegativeButton(R.string.cancel, null)
                 .setPositiveButton(R.string.ok, (dialog, which) -> {
                     sharedPreferences.edit().remove(savedInstanceListKey).apply();
-                    selectInstance(PeertubeInstance.defaultInstance);
+                    selectInstance(PeertubeInstance.DEFAULT_INSTANCE);
                     updateInstanceList();
                     instanceListAdapter.notifyDataSetChanged();
                 })

File: app/src/main/java/us/shandian/giga/get/DownloadMissionRecover.java
Patch:
@@ -132,7 +132,7 @@ private void resolveStream() throws IOException, ExtractionException, HttpError
         switch (mRecovery.getKind()) {
             case 'a':
                 for (AudioStream audio : mExtractor.getAudioStreams()) {
-                    if (audio.average_bitrate == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
+                    if (audio.getAverageBitrate() == mRecovery.getDesiredBitrate() && audio.getFormat() == mRecovery.getFormat()) {
                         url = audio.getUrl();
                         break;
                     }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2791,7 +2791,7 @@ public void onPlaybackSynchronize(@NonNull final PlayQueueItem item, final boole
                     + "index=[" + currentPlayQueueIndex + "] with "
                     + "playlist length=[" + currentPlaylistSize + "]");
 
-        } else if (wasBlocked || currentPlaylistIndex != currentPlayQueueIndex) {
+        } else if (wasBlocked || currentPlaylistIndex != currentPlayQueueIndex || !isPlaying()) {
             if (DEBUG) {
                 Log.d(TAG, "Playback - Rewinding to correct "
                         + "index=[" + currentPlayQueueIndex + "], "

File: app/src/main/java/org/schabi/newpipe/player/mediaitem/StreamInfoTag.java
Patch:
@@ -91,11 +91,13 @@ public StreamType getStreamType() {
         return streamInfo.getStreamType();
     }
 
+    @NonNull
     @Override
     public Optional<StreamInfo> getMaybeStreamInfo() {
         return Optional.of(streamInfo);
     }
 
+    @NonNull
     @Override
     public Optional<Quality> getMaybeQuality() {
         return Optional.ofNullable(quality);

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerServiceEventListener.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.player.event;
 
-import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.PlaybackException;
 
 public interface PlayerServiceEventListener extends PlayerEventListener {
     void onFullscreenStateChanged(boolean fullscreen);
@@ -9,7 +9,7 @@ public interface PlayerServiceEventListener extends PlayerEventListener {
 
     void onMoreOptionsLongClicked();
 
-    void onPlayerError(ExoPlaybackException error);
+    void onPlayerError(PlaybackException error, boolean isCatchableException);
 
     void hideSystemUiIfNeeded();
 }

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -14,7 +14,7 @@
 import androidx.media.AudioFocusRequestCompat;
 import androidx.media.AudioManagerCompat;
 
-import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.ExoPlayer;
 import com.google.android.exoplayer2.analytics.AnalyticsListener;
 
 public class AudioReactor implements AudioManager.OnAudioFocusChangeListener, AnalyticsListener {
@@ -27,14 +27,14 @@ public class AudioReactor implements AudioManager.OnAudioFocusChangeListener, An
     private static final int FOCUS_GAIN_TYPE = AudioManagerCompat.AUDIOFOCUS_GAIN;
     private static final int STREAM_TYPE = AudioManager.STREAM_MUSIC;
 
-    private final SimpleExoPlayer player;
+    private final ExoPlayer player;
     private final Context context;
     private final AudioManager audioManager;
 
     private final AudioFocusRequestCompat request;
 
     public AudioReactor(@NonNull final Context context,
-                        @NonNull final SimpleExoPlayer player) {
+                        @NonNull final ExoPlayer player) {
         this.player = player;
         this.context = context;
         this.audioManager = ContextCompat.getSystemService(context, AudioManager.class);

File: app/src/main/java/org/schabi/newpipe/player/helper/MediaSessionManager.java
Patch:
@@ -19,7 +19,6 @@
 import org.schabi.newpipe.MainActivity;
 import org.schabi.newpipe.player.mediasession.MediaSessionCallback;
 import org.schabi.newpipe.player.mediasession.PlayQueueNavigator;
-import org.schabi.newpipe.player.mediasession.PlayQueuePlaybackController;
 
 import java.util.Optional;
 
@@ -55,7 +54,6 @@ public MediaSessionManager(@NonNull final Context context,
                 .build());
 
         sessionConnector = new MediaSessionConnector(mediaSession);
-        sessionConnector.setControlDispatcher(new PlayQueuePlaybackController(callback));
         sessionConnector.setQueueNavigator(new PlayQueueNavigator(mediaSession, callback));
         sessionConnector.setPlayer(player);
     }

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -51,9 +51,10 @@ public interface PlaybackListener {
      * May be called anytime at any amount once unblock is called.
      * </p>
      *
-     * @param item
+     * @param item          item the player should be playing/synchronized to
+     * @param wasBlocked    was the player recently released from blocking state
      */
-    void onPlaybackSynchronize(@NonNull PlayQueueItem item);
+    void onPlaybackSynchronize(@NonNull PlayQueueItem item, boolean wasBlocked);
 
     /**
      * Requests the listener to resolve a stream info into a media source

File: app/src/main/java/org/schabi/newpipe/player/playback/SurfaceHolderCallback.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Context;
 import android.view.SurfaceHolder;
 
-import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Player;
 import com.google.android.exoplayer2.video.DummySurface;
 
 /**
@@ -25,10 +25,10 @@
 public final class SurfaceHolderCallback implements SurfaceHolder.Callback {
 
     private final Context context;
-    private final SimpleExoPlayer player;
+    private final Player player;
     private DummySurface dummySurface;
 
-    public SurfaceHolderCallback(final Context context, final SimpleExoPlayer player) {
+    public SurfaceHolderCallback(final Context context, final Player player) {
         this.context = context;
         this.player = player;
     }

File: app/src/main/java/org/schabi/newpipe/player/resolver/AudioPlaybackResolver.java
Patch:
@@ -12,6 +12,8 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.player.helper.PlayerDataSource;
 import org.schabi.newpipe.player.helper.PlayerHelper;
+import org.schabi.newpipe.player.mediaitem.MediaItemTag;
+import org.schabi.newpipe.player.mediaitem.StreamInfoTag;
 import org.schabi.newpipe.util.ListHelper;
 
 public class AudioPlaybackResolver implements PlaybackResolver {
@@ -40,7 +42,7 @@ public MediaSource resolve(@NonNull final StreamInfo info) {
         }
 
         final AudioStream audio = info.getAudioStreams().get(index);
-        final MediaSourceTag tag = new MediaSourceTag(info);
+        final MediaItemTag tag = StreamInfoTag.of(info);
         return buildMediaSource(dataSource, audio.getUrl(), PlayerHelper.cacheKeyOf(info, audio),
                 MediaFormat.getSuffixById(audio.getFormatId()), tag);
     }

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -228,6 +228,7 @@ public int getItemCount() {
         return count;
     }
 
+    @SuppressWarnings("FinalParameters")
     @Override
     public int getItemViewType(int position) {
         if (DEBUG) {
@@ -300,6 +301,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull final ViewGroup paren
         }
     }
 
+    @SuppressWarnings("FinalParameters")
     @Override
     public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, int position) {
         if (DEBUG) {

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -682,6 +682,7 @@ public void seek(final boolean forward) {
     //////////////////////////////////////////////////////////////////////////*/
     //region Playback initialization via intent
 
+    @SuppressWarnings("MethodLength")
     public void handleIntent(@NonNull final Intent intent) {
         // fail fast if no play queue was provided
         final String queueCache = intent.getStringExtra(PLAY_QUEUE_KEY);

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItem.java
Patch:
@@ -52,6 +52,7 @@ public class PlayQueueItem implements Serializable {
                 item.getUploaderUrl(), item.getStreamType());
     }
 
+    @SuppressWarnings("ParameterNumber")
     private PlayQueueItem(@Nullable final String name, @Nullable final String url,
                           final int serviceId, final long duration,
                           @Nullable final String thumbnailUrl, @Nullable final String uploader,

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -142,6 +142,7 @@ public void close() throws IOException {
         outStream = null;
     }
 
+    @SuppressWarnings("MethodLength")
     public void build(final SharpStream output) throws IOException {
         if (done) {
             throw new RuntimeException("already done");

File: app/src/main/java/org/schabi/newpipe/streams/WebMWriter.java
Patch:
@@ -121,6 +121,7 @@ public void close() {
         clustersOffsetsSizes = null;
     }
 
+    @SuppressWarnings("MethodLength")
     public void build(final SharpStream out) throws IOException, RuntimeException {
         if (!out.canRewind()) {
             throw new IOException("The output stream must be allow seek");

File: app/src/main/java/org/schabi/newpipe/player/playback/PlayerMediaSession.java
Patch:
@@ -88,6 +88,8 @@ public MediaDescriptionCompat getQueueMetadata(final int index) {
     @Override
     public void play() {
         player.play();
+        // hide the player controls even if the play command came from the media session
+        player.hideControls(0, 0);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/QueueItemMenuUtil.java
Patch:
@@ -14,7 +14,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 import org.schabi.newpipe.util.NavigationHelper;
-import org.schabi.newpipe.util.SaveUploaderUrlHelper;
+import org.schabi.newpipe.util.SparseItemUtil;
 
 import java.util.Collections;
 
@@ -62,7 +62,8 @@ public static void openPopupMenu(final PlayQueue playQueue,
 
                     return true;
                 case R.id.menu_item_channel_details:
-                    SaveUploaderUrlHelper.saveUploaderUrlIfNeeded(context, item,
+                    SparseItemUtil.fetchUploaderUrlIfSparse(context, item.getServiceId(),
+                            item.getUrl(), item.getUploaderUrl(),
                             // An intent must be used here.
                             // Opening with FragmentManager transactions is not working,
                             // as PlayQueueActivity doesn't use fragments.

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -73,7 +73,6 @@
 import android.util.DisplayMetrics;
 import android.util.Log;
 import android.util.TypedValue;
-import android.view.ContextThemeWrapper;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -89,7 +88,6 @@
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
-import android.widget.PopupMenu;
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.SeekBar;
@@ -99,7 +97,9 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.content.res.AppCompatResources;
+import androidx.appcompat.view.ContextThemeWrapper;
 import androidx.appcompat.widget.AppCompatImageButton;
+import androidx.appcompat.widget.PopupMenu;
 import androidx.core.content.ContextCompat;
 import androidx.core.graphics.Insets;
 import androidx.core.view.GestureDetectorCompat;

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3215,6 +3215,9 @@ public void closeItemsList() {
                         binding.itemsListPanel.setTranslationY(
                                 -binding.itemsListPanel.getHeight() * 5);
                     });
+
+            // clear focus, otherwise a white rectangle remains on top of the player
+            binding.itemsListClose.clearFocus();
             binding.playPauseButton.requestFocus();
         }
     }

File: app/src/main/java/org/schabi/newpipe/database/history/dao/StreamHistoryDAO.java
Patch:
@@ -3,6 +3,7 @@
 import androidx.annotation.Nullable;
 import androidx.room.Dao;
 import androidx.room.Query;
+import androidx.room.RewriteQueriesToDropUnusedColumns;
 
 import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntry;
@@ -67,6 +68,7 @@ public Flowable<List<StreamHistoryEntity>> listByService(final int serviceId) {
     @Query("DELETE FROM " + STREAM_HISTORY_TABLE + " WHERE " + JOIN_STREAM_ID + " = :streamId")
     public abstract int deleteStreamHistory(long streamId);
 
+    @RewriteQueriesToDropUnusedColumns
     @Query("SELECT * FROM " + STREAM_TABLE
 
             // Select the latest entry and watch count for each stream id on history table

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -2,6 +2,7 @@
 
 import androidx.room.Dao;
 import androidx.room.Query;
+import androidx.room.RewriteQueriesToDropUnusedColumns;
 import androidx.room.Transaction;
 
 import org.schabi.newpipe.database.BasicDAO;
@@ -52,6 +53,7 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " WHERE " + JOIN_PLAYLIST_ID + " = :playlistId")
     Flowable<Integer> getMaximumIndexOf(long playlistId);
 
+    @RewriteQueriesToDropUnusedColumns
     @Transaction
     @Query("SELECT * FROM " + STREAM_TABLE + " INNER JOIN "
             // get ids of streams of the given playlist

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -272,7 +272,7 @@ public void held(final StreamInfoItem selectedItem) {
             }
         });
 
-        infoListAdapter.setOnChannelSelectedListener(new OnClickGesture<ChannelInfoItem>() {
+        infoListAdapter.setOnChannelSelectedListener(new OnClickGesture<>() {
             @Override
             public void selected(final ChannelInfoItem selectedItem) {
                 try {
@@ -288,7 +288,7 @@ public void selected(final ChannelInfoItem selectedItem) {
             }
         });
 
-        infoListAdapter.setOnPlaylistSelectedListener(new OnClickGesture<PlaylistInfoItem>() {
+        infoListAdapter.setOnPlaylistSelectedListener(new OnClickGesture<>() {
             @Override
             public void selected(final PlaylistInfoItem selectedItem) {
                 try {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -64,7 +64,7 @@
 import io.reactivex.rxjava3.functions.Function;
 import io.reactivex.rxjava3.schedulers.Schedulers;
 
-public class ChannelFragment extends BaseListInfoFragment<ChannelInfo>
+public class ChannelFragment extends BaseListInfoFragment<StreamInfoItem, ChannelInfo>
         implements View.OnClickListener {
 
     private static final int BUTTON_DEBOUNCE_INTERVAL = 100;
@@ -374,7 +374,7 @@ private void updateSubscribeButton(final boolean isSubscribed) {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    protected Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
+    protected Single<ListExtractor.InfoItemsPage<StreamInfoItem>> loadMoreItemsLogic() {
         return ExtractorHelper.getMoreChannelItems(serviceId, url, currentNextPage);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java
Patch:
@@ -15,14 +15,15 @@
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.comments.CommentsInfo;
+import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.ktx.ViewUtils;
 import org.schabi.newpipe.util.ExtractorHelper;
 
 import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 
-public class CommentsFragment extends BaseListInfoFragment<CommentsInfo> {
+public class CommentsFragment extends BaseListInfoFragment<CommentsInfoItem, CommentsInfo> {
     private final CompositeDisposable disposables = new CompositeDisposable();
 
     private TextView emptyStateDesc;
@@ -67,7 +68,7 @@ public void onDestroy() {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    protected Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
+    protected Single<ListExtractor.InfoItemsPage<CommentsInfoItem>> loadMoreItemsLogic() {
         return ExtractorHelper.getMoreCommentItems(serviceId, currentInfo, currentNextPage);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -21,6 +21,7 @@
 import org.schabi.newpipe.extractor.kiosk.KioskInfo;
 import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
+import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.KioskTranslator;
@@ -53,7 +54,7 @@
  * </p>
  */
 
-public class KioskFragment extends BaseListInfoFragment<KioskInfo> {
+public class KioskFragment extends BaseListInfoFragment<StreamInfoItem, KioskInfo> {
     @State
     String kioskId = "";
     String kioskTranslatedName;
@@ -145,7 +146,7 @@ public Single<KioskInfo> loadResult(final boolean forceReload) {
     }
 
     @Override
-    public Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
+    public Single<ListExtractor.InfoItemsPage<StreamInfoItem>> loadMoreItemsLogic() {
         return ExtractorHelper.getMoreKioskItems(serviceId, url, currentNextPage);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -69,7 +69,7 @@
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
 
-public class PlaylistFragment extends BaseListInfoFragment<PlaylistInfo> {
+public class PlaylistFragment extends BaseListInfoFragment<StreamInfoItem, PlaylistInfo> {
 
     private static final String PICASSO_PLAYLIST_TAG = "PICASSO_PLAYLIST_TAG";
 
@@ -254,7 +254,7 @@ public void onDestroy() {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    protected Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
+    protected Single<ListExtractor.InfoItemsPage<StreamInfoItem>> loadMoreItemsLogic() {
         return ExtractorHelper.getMorePlaylistItems(serviceId, url, currentNextPage);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedItemsFragment.java
Patch:
@@ -15,6 +15,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.RelatedItemsHeaderBinding;
 import org.schabi.newpipe.error.UserAction;
+import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
@@ -26,7 +27,7 @@
 
 import io.reactivex.rxjava3.core.Single;
 
-public class RelatedItemsFragment extends BaseListInfoFragment<RelatedItemInfo>
+public class RelatedItemsFragment extends BaseListInfoFragment<InfoItem, RelatedItemInfo>
         implements SharedPreferences.OnSharedPreferenceChangeListener {
     private static final String INFO_KEY = "related_info_key";
 
@@ -86,7 +87,7 @@ protected Supplier<View> getListHeaderSupplier() {
     }
 
     @Override
-    protected Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
+    protected Single<ListExtractor.InfoItemsPage<InfoItem>> loadMoreItemsLogic() {
         return Single.fromCallable(ListExtractor.InfoItemsPage::emptyPage);
     }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/ImportExportJsonHelper.java
Patch:
@@ -25,7 +25,6 @@
 import com.grack.nanojson.JsonArray;
 import com.grack.nanojson.JsonObject;
 import com.grack.nanojson.JsonParser;
-import com.grack.nanojson.JsonSink;
 import com.grack.nanojson.JsonWriter;
 
 import org.schabi.newpipe.BuildConfig;
@@ -125,10 +124,11 @@ public static void writeTo(final List<SubscriptionItem> items, final OutputStrea
     /**
      * @see #writeTo(List, OutputStream, ImportExportEventListener)
      * @param items         the list of subscriptions items
-     * @param writer        the output {@link JsonSink}
+     * @param writer        the output {@link JsonAppendableWriter}
      * @param eventListener listener for the events generated
      */
-    public static void writeTo(final List<SubscriptionItem> items, final JsonSink writer,
+    public static void writeTo(final List<SubscriptionItem> items,
+                               final JsonAppendableWriter writer,
                                @Nullable final ImportExportEventListener eventListener) {
         if (eventListener != null) {
             eventListener.onSizeReceived(items.size());

File: app/src/main/java/org/schabi/newpipe/util/SerializedCache.java
Patch:
@@ -19,7 +19,7 @@ public final class SerializedCache {
     private static final boolean DEBUG = MainActivity.DEBUG;
     private static final SerializedCache INSTANCE = new SerializedCache();
     private static final int MAX_ITEMS_ON_CACHE = 5;
-    private static final LruCache<String, CacheData> LRU_CACHE =
+    private static final LruCache<String, CacheData<?>> LRU_CACHE =
             new LruCache<>(MAX_ITEMS_ON_CACHE);
     private static final String TAG = "SerializedCache";
 
@@ -47,7 +47,7 @@ public <T> T get(@NonNull final String key, @NonNull final Class<T> type) {
             Log.d(TAG, "get() called with: key = [" + key + "]");
         }
         synchronized (LRU_CACHE) {
-            final CacheData data = LRU_CACHE.get(key);
+            final CacheData<?> data = LRU_CACHE.get(key);
             return data != null ? getItem(data, type) : null;
         }
     }
@@ -91,7 +91,7 @@ public long size() {
     }
 
     @Nullable
-    private <T> T getItem(@NonNull final CacheData data, @NonNull final Class<T> type) {
+    private <T> T getItem(@NonNull final CacheData<?> data, @NonNull final Class<T> type) {
         return type.isAssignableFrom(data.type) ? type.cast(data.item) : null;
     }
 

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemDialog.java
Patch:
@@ -252,7 +252,7 @@ public Builder setAction(@NonNull final StreamDialogDefaultEntry entry,
          * @return the current {@link Builder} instance
          */
         public Builder addEnqueueEntriesIfNeeded() {
-            if (PlayerHolder.getInstance().isPlayerOpen()) {
+            if (PlayerHolder.getInstance().isPlayQueueReady()) {
                 addEntry(StreamDialogDefaultEntry.ENQUEUE);
 
                 if (PlayerHolder.getInstance().getQueueSize() > 1) {

File: app/src/main/java/org/schabi/newpipe/error/UserAction.java
Patch:
@@ -28,8 +28,8 @@ public enum UserAction {
     DOWNLOAD_FAILED("download failed"),
     PREFERENCES_MIGRATION("migration of preferences"),
     SHARE_TO_NEWPIPE("share to newpipe"),
-    CHECK_FOR_NEW_APP_VERSION("check for new app version");
-
+    CHECK_FOR_NEW_APP_VERSION("check for new app version"),
+    OPEN_INFO_ITEM_DIALOG("open info item dialog");
 
     private final String message;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -145,9 +145,6 @@ protected void showStreamDialog(final StreamInfoItem item) {
         final InfoItemDialog.Builder dialogBuilder = new InfoItemDialog.Builder(
                 activity, this, item);
 
-        dialogBuilder.addDefaultEntriesAtBeginning();
-        dialogBuilder.addDefaultEntriesAtEnd();
-
         dialogBuilder.setAction(StreamDialogDefaultEntry.START_HERE_ON_BACKGROUND,
                 (fragment, infoItem) -> NavigationHelper.playOnBackgroundPlayer(
                         context, getPlayQueueStartingAt(infoItem), true));

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -335,10 +335,8 @@ private void showStreamDialog(final StreamStatisticsEntry item) {
         final InfoItemDialog.Builder dialogBuilder = new InfoItemDialog.Builder(
                 activity, this, infoItem);
 
-        // set entries
-        dialogBuilder.addDefaultEntriesAtBeginning();
+        // set entries in the middle; the others are added automatically
         dialogBuilder.addEntry(StreamDialogDefaultEntry.DELETE);
-        dialogBuilder.addDefaultEntriesAtEnd();
 
         // set custom actions
         dialogBuilder.setAction(StreamDialogDefaultEntry.START_HERE_ON_BACKGROUND,

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -320,7 +320,7 @@ static int getMostCompactAudioIndex(@Nullable final MediaFormat format,
      * @param targetedFormat The target format type or null if it doesn't matter
      * @param audioStreams   List of audio streams
      * @param comparator     The comparator used for determining the max/best/highest ranked value
-     * @return Index of audio stream that produces the most compact results or -1 if not found
+     * @return Index of audio stream that produces the highest ranked result or -1 if not found
      */
     private static int getAudioIndexByHighestRank(@Nullable final MediaFormat targetedFormat,
                                                   @Nullable final List<AudioStream> audioStreams,

File: app/src/main/java/org/schabi/newpipe/database/history/dao/StreamHistoryDAO.java
Patch:
@@ -3,6 +3,7 @@
 import androidx.annotation.Nullable;
 import androidx.room.Dao;
 import androidx.room.Query;
+import androidx.room.RewriteQueriesToDropUnusedColumns;
 
 import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntry;
@@ -67,6 +68,7 @@ public Flowable<List<StreamHistoryEntity>> listByService(final int serviceId) {
     @Query("DELETE FROM " + STREAM_HISTORY_TABLE + " WHERE " + JOIN_STREAM_ID + " = :streamId")
     public abstract int deleteStreamHistory(long streamId);
 
+    @RewriteQueriesToDropUnusedColumns
     @Query("SELECT * FROM " + STREAM_TABLE
 
             // Select the latest entry and watch count for each stream id on history table

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -2,6 +2,7 @@
 
 import androidx.room.Dao;
 import androidx.room.Query;
+import androidx.room.RewriteQueriesToDropUnusedColumns;
 import androidx.room.Transaction;
 
 import org.schabi.newpipe.database.BasicDAO;
@@ -52,6 +53,7 @@ default Flowable<List<PlaylistStreamEntity>> listByService(final int serviceId)
             + " WHERE " + JOIN_PLAYLIST_ID + " = :playlistId")
     Flowable<Integer> getMaximumIndexOf(long playlistId);
 
+    @RewriteQueriesToDropUnusedColumns
     @Transaction
     @Query("SELECT * FROM " + STREAM_TABLE + " INNER JOIN "
             // get ids of streams of the given playlist

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -352,7 +352,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
         }
         final List<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getInstance().isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayQueueReady()) {
             entries.add(StreamDialogEntry.enqueue);
 
             if (PlayerHolder.getInstance().getQueueSize() > 1) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -149,7 +149,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getInstance().isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayQueueReady()) {
             entries.add(StreamDialogEntry.enqueue);
 
             if (PlayerHolder.getInstance().getQueueSize() > 1) {

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -338,7 +338,7 @@ private void showStreamDialog(final StreamStatisticsEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getInstance().isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayQueueReady()) {
             entries.add(StreamDialogEntry.enqueue);
 
             if (PlayerHolder.getInstance().getQueueSize() > 1) {

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -753,7 +753,7 @@ protected void showStreamItemDialog(final PlaylistStreamEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getInstance().isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayQueueReady()) {
             entries.add(StreamDialogEntry.enqueue);
 
             if (PlayerHolder.getInstance().getQueueSize() > 1) {

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -260,7 +260,8 @@ public final class Player implements
     // Playback
     //////////////////////////////////////////////////////////////////////////*/
 
-    private PlayQueue playQueue;
+    // play queue might be null e.g. while player is starting
+    @Nullable private PlayQueue playQueue;
     private PlayQueueAdapter playQueueAdapter;
     private StreamSegmentAdapter segmentAdapter;
 
@@ -4226,6 +4227,7 @@ public boolean popupPlayerSelected() {
     }
 
 
+    @Nullable
     public PlayQueue getPlayQueue() {
         return playQueue;
     }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -586,7 +586,8 @@ public void onChange(final boolean selfChange) {
      */
     private void setupPlayerSeekOverlay() {
         binding.fastSeekOverlay
-                .seekSeconds((int) (retrieveSeekDurationFromPreferences(this) / 1000.0f))
+                .seekSecondsSupplier(
+                        () -> (int) (retrieveSeekDurationFromPreferences(this) / 1000.0f))
                 .performListener(new PlayerFastSeekOverlay.PerformListener() {
 
                     @Override

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2048,7 +2048,7 @@ public void onPlaybackUnblock(final MediaSource mediaSource) {
         if (currentState == STATE_BLOCKED) {
             changeState(STATE_BUFFERING);
         }
-        simpleExoPlayer.setMediaSource(mediaSource);
+        simpleExoPlayer.setMediaSource(mediaSource, false);
         simpleExoPlayer.prepare();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -260,7 +260,8 @@ public final class Player implements
     // Playback
     //////////////////////////////////////////////////////////////////////////*/
 
-    private PlayQueue playQueue;
+    // play queue might be null e.g. while player is starting
+    @Nullable private PlayQueue playQueue;
     private PlayQueueAdapter playQueueAdapter;
     private StreamSegmentAdapter segmentAdapter;
 
@@ -4202,6 +4203,7 @@ public boolean popupPlayerSelected() {
     }
 
 
+    @Nullable
     public PlayQueue getPlayQueue() {
         return playQueue;
     }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2048,7 +2048,7 @@ public void onPlaybackUnblock(final MediaSource mediaSource) {
         if (currentState == STATE_BLOCKED) {
             changeState(STATE_BUFFERING);
         }
-        simpleExoPlayer.setMediaSource(mediaSource);
+        simpleExoPlayer.setMediaSource(mediaSource, false);
         simpleExoPlayer.prepare();
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/preferencesearch/PreferenceParser.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.text.TextUtils;
 import android.util.Log;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.XmlRes;
@@ -14,7 +15,6 @@
 import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 import java.util.stream.Collectors;
 
 /**
@@ -64,6 +64,8 @@ public List<PreferenceSearchItem> parse(
                         results.add(result);
                     }
                     if (searchConfiguration.getParserContainerElements().contains(xpp.getName())) {
+                        // This code adds breadcrumbs for certain containers (e.g. PreferenceScreen)
+                        // Example: Video and Audio > Player
                         breadcrumbs.add(result.getTitle() == null ? "" : result.getTitle());
                     }
                 } else if (xpp.getEventType() == XmlPullParser.END_TAG

File: app/src/main/java/org/schabi/newpipe/settings/preferencesearch/PreferenceSearchConfiguration.java
Patch:
@@ -1,14 +1,11 @@
 package org.schabi.newpipe.settings.preferencesearch;
 
-import android.text.TextUtils;
-
 import androidx.preference.PreferenceCategory;
 import androidx.preference.PreferenceScreen;
 
 import java.util.Arrays;
 import java.util.List;
 import java.util.Objects;
-import java.util.function.BinaryOperator;
 import java.util.stream.Stream;
 
 public class PreferenceSearchConfiguration {

File: app/src/main/java/org/schabi/newpipe/settings/preferencesearch/PreferenceParser.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * Parses the corresponding preference-file(s).
  */
-class PreferenceParser {
+public class PreferenceParser {
     private static final String TAG = "PreferenceParser";
 
     private static final String NS_ANDROID = "http://schemas.android.com/apk/res/android";
@@ -28,7 +28,7 @@ class PreferenceParser {
     private final Map<String, ?> allPreferences;
     private final PreferenceSearchConfiguration searchConfiguration;
 
-    PreferenceParser(
+    public PreferenceParser(
             final Context context,
             final PreferenceSearchConfiguration searchConfiguration
     ) {

File: app/src/main/java/org/schabi/newpipe/settings/preferencesearch/PreferenceSearchConfiguration.java
Patch:
@@ -50,7 +50,7 @@ public SearchIndexItem index(@XmlRes final int resId) {
         return item;
     }
 
-    List<SearchIndexItem> getFiles() {
+    public List<SearchIndexItem> getFiles() {
         return itemsToIndex;
     }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -590,12 +590,12 @@ private void setupPlayerSeekOverlay() {
                 .performListener(new PlayerFastSeekOverlay.PerformListener() {
 
                     @Override
-                    public void onDoubleTab() {
+                    public void onDoubleTap() {
                         animate(binding.fastSeekOverlay, true, SEEK_OVERLAY_DURATION);
                     }
 
                     @Override
-                    public void onDoubleTabEnd() {
+                    public void onDoubleTapEnd() {
                         animate(binding.fastSeekOverlay, false, SEEK_OVERLAY_DURATION);
                     }
 

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -230,11 +230,10 @@ public void onPopupResizingStart() {
         if (DEBUG) {
             Log.d(TAG, "onPopupResizingStart called");
         }
-        player.showAndAnimateControl(-1, true);
         player.getLoadingPanel().setVisibility(View.GONE);
 
         player.hideControls(0, 0);
-        animate(player.getSeekOverlay(), false, 0);
+        animate(player.getFastSeekOverlay(), false, 0);
         animate(player.getCurrentDisplaySeek(), false, 0, ALPHA, 0);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2186,8 +2186,8 @@ private void onBlocked() {
             startProgressLoop();
         }
 
-        controlsVisibilityHandler.removeCallbacksAndMessages(null);
-        animate(binding.playbackControlRoot, false, DEFAULT_CONTROLS_DURATION);
+        // if we are e.g. switching players, hide controls
+        hideControls(DEFAULT_CONTROLS_DURATION, 0);
 
         binding.playbackSeekBar.setEnabled(false);
         binding.playbackSeekBar.getThumb()

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -635,6 +635,7 @@ public void handleIntent(@NonNull final Intent intent) {
         final boolean isMuted = intent.getBooleanExtra(IS_MUTED, isMuted());
 
         /*
+         * TODO As seen in #7427 this does not work:
          * There are 3 situations when playback shouldn't be started from scratch (zero timestamp):
          * 1. User pressed on a timestamp link and the same video should be rewound to the timestamp
          * 2. User changed a player from, for example. main to popup, or from audio to main, etc

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -635,6 +635,7 @@ public void handleIntent(@NonNull final Intent intent) {
         final boolean isMuted = intent.getBooleanExtra(IS_MUTED, isMuted());
 
         /*
+         * TODO As seen in #7427 this does not work:
          * There are 3 situations when playback shouldn't be started from scratch (zero timestamp):
          * 1. User pressed on a timestamp link and the same video should be rewound to the timestamp
          * 2. User changed a player from, for example. main to popup, or from audio to main, etc

File: app/src/main/java/org/schabi/newpipe/util/PicassoHelper.java
Patch:
@@ -179,6 +179,7 @@ public void onBitmapFailed(final Exception e, final Drawable errorDrawable) {
 
                     @Override
                     public void onPrepareLoad(final Drawable placeHolderDrawable) {
+                        // Nothing to do
                     }
                 });
     }

File: app/src/main/java/org/schabi/newpipe/error/UserAction.java
Patch:
@@ -26,6 +26,7 @@ public enum UserAction {
     DOWNLOAD_OPEN_DIALOG("download open dialog"),
     DOWNLOAD_POSTPROCESSING("download post-processing"),
     DOWNLOAD_FAILED("download failed"),
+    NEW_STREAMS_NOTIFICATIONS("new streams notifications"),
     PREFERENCES_MIGRATION("migration of preferences"),
     SHARE_TO_NEWPIPE("share to newpipe"),
     CHECK_FOR_NEW_APP_VERSION("check for new app version");

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1521,6 +1521,8 @@ public void handleResult(@NonNull final StreamInfo info) {
         animate(binding.detailThumbnailPlayButton, true, 200);
         binding.detailVideoTitleView.setText(title);
 
+        binding.detailSubChannelThumbnailView.setVisibility(View.GONE);
+
         if (!isEmpty(info.getSubChannelName())) {
             displayBothUploaderAndSubChannel(info);
         } else if (!isEmpty(info.getUploaderName())) {

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -171,7 +171,7 @@ public static void playOnBackgroundPlayer(final Context context,
         Toast.makeText(
                 context,
                 PlayerHolder.getInstance().getType() == PlayerType.AUDIO
-                    ? R.string.background_player_playing_toast
+                    ? R.string.background_player_already_playing_toast
                     : R.string.background_player_playing_toast,
                 Toast.LENGTH_SHORT)
                 .show();

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1650,7 +1650,7 @@ private void displayUploaderAsSubChannel(final StreamInfo info) {
         binding.detailUploaderTextView.setVisibility(View.GONE);
 
         //No sub-channel name implies no sub-channel icon, but check just to make sure.
-        if(isEmpty(info.getSubChannelAvatarUrl())){
+        if (isEmpty(info.getSubChannelAvatarUrl())) {
             binding.detailSubChannelThumbnailView.setVisibility(View.GONE);
         }
     }

File: app/src/main/java/org/schabi/newpipe/util/external_communication/TextLinkifier.java
Patch:
@@ -33,7 +33,9 @@
 public final class TextLinkifier {
     public static final String TAG = TextLinkifier.class.getSimpleName();
 
-    private static final Pattern HASHTAGS_PATTERN = Pattern.compile("(#[A-Za-z0-9_]+)");
+    // Looks for hashtags with characters from any language (\p{L}), numbers, or underscores
+    private static final Pattern HASHTAGS_PATTERN =
+            Pattern.compile("(#[\\p{L}0-9_]+)");
 
     private TextLinkifier() {
     }

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -37,8 +37,8 @@
 import org.schabi.newpipe.databinding.ListRadioIconItemBinding;
 import org.schabi.newpipe.databinding.SingleChoiceDialogViewBinding;
 import org.schabi.newpipe.download.DownloadDialog;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.Info;
@@ -231,7 +231,7 @@ private static void handleError(final Context context, final ErrorInfo errorInfo
         } else if (errorInfo.getThrowable() instanceof ContentNotSupportedException) {
             Toast.makeText(context, R.string.content_not_supported, Toast.LENGTH_LONG).show();
         } else {
-            ErrorActivity.reportError(context, errorInfo);
+            ErrorUtil.createNotification(context, errorInfo);
         }
 
         if (context instanceof RouterActivity) {

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java
Patch:
@@ -33,12 +33,11 @@ public class AcraReportSender implements ReportSender {
 
     @Override
     public void send(@NonNull final Context context, @NonNull final CrashReportData report) {
-        ErrorActivity.reportError(context, new ErrorInfo(
+        ErrorUtil.openActivity(context, new ErrorInfo(
                 new String[]{report.getString(ReportField.STACK_TRACE)},
                 UserAction.UI_ERROR,
                 ErrorInfo.SERVICE_NONE,
                 "ACRA report",
-                R.string.app_ui_crash,
-                null));
+                R.string.app_ui_crash));
     }
 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -21,7 +21,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.PignateFooterBinding;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -293,7 +293,7 @@ public void selected(final ChannelInfoItem selectedItem) {
                             selectedItem.getUrl(),
                             selectedItem.getName());
                 } catch (final Exception e) {
-                    ErrorActivity.reportUiErrorInSnackbar(
+                    ErrorUtil.showUiErrorSnackbar(
                             BaseListFragment.this, "Opening channel fragment", e);
                 }
             }
@@ -309,7 +309,7 @@ public void selected(final PlaylistInfoItem selectedItem) {
                             selectedItem.getUrl(),
                             selectedItem.getName());
                 } catch (final Exception e) {
-                    ErrorActivity.reportUiErrorInSnackbar(BaseListFragment.this,
+                    ErrorUtil.showUiErrorSnackbar(BaseListFragment.this,
                             "Opening playlist fragment", e);
                 }
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -26,8 +26,8 @@
 import org.schabi.newpipe.databinding.ChannelHeaderBinding;
 import org.schabi.newpipe.databinding.FragmentChannelBinding;
 import org.schabi.newpipe.databinding.PlaylistControlBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
@@ -407,7 +407,7 @@ public void onClick(final View v) {
                                 currentInfo.getParentChannelUrl(),
                                 currentInfo.getParentChannelName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiErrorInSnackbar(this, "Opening channel fragment", e);
+                        ErrorUtil.showUiErrorSnackbar(this, "Opening channel fragment", e);
                     }
                 } else if (DEBUG) {
                     Log.i(TAG, "Can't open parent channel because we got no channel URL");

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -24,8 +24,8 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.databinding.PlaylistControlBinding;
 import org.schabi.newpipe.databinding.PlaylistHeaderBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
@@ -310,7 +310,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
                         NavigationHelper.openChannelFragment(getFM(), result.getServiceId(),
                                 result.getUploaderUrl(), result.getUploaderName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiErrorInSnackbar(this, "Opening channel fragment", e);
+                        ErrorUtil.showUiErrorSnackbar(this, "Opening channel fragment", e);
                     }
                 });
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -42,8 +42,8 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.FragmentSearchBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
@@ -223,8 +223,7 @@ private void updateService() {
         try {
             service = NewPipe.getService(serviceId);
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this,
-                    "Getting service for id " + serviceId, e);
+            ErrorUtil.showUiErrorSnackbar(this, "Getting service for id " + serviceId, e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -13,7 +13,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
@@ -171,7 +171,7 @@ private void openCommentAuthor(final CommentsInfoItem item) {
                     item.getUploaderUrl(),
                     item.getUploaderName());
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(activity, "Opening channel fragment", e);
+            ErrorUtil.showUiErrorSnackbar(activity, "Opening channel fragment", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -35,8 +35,8 @@
 
 import org.reactivestreams.Publisher;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.ktx.ExceptionUtils;
@@ -153,7 +153,7 @@ protected void stopService() {
 
     protected void stopAndReportError(final Throwable throwable, final String request) {
         stopService();
-        ErrorActivity.reportError(this, new ErrorInfo(
+        ErrorUtil.createNotification(this, new ErrorInfo(
                 throwable, UserAction.SUBSCRIPTION_IMPORT_EXPORT, request));
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -20,7 +20,7 @@
 import org.schabi.newpipe.DownloaderImpl;
 import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
@@ -205,7 +205,7 @@ private void exportDatabase(final StoredFileHelper file, final Uri exportDataUri
             saveLastImportExportDataUri(exportDataUri); // save export path only on success
             Toast.makeText(getContext(), R.string.export_complete_toast, Toast.LENGTH_SHORT).show();
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this, "Exporting database", e);
+            ErrorUtil.showUiErrorSnackbar(this, "Exporting database", e);
         }
     }
 
@@ -247,7 +247,7 @@ private void importDatabase(final StoredFileHelper file, final Uri importDataUri
                 finishImport(importDataUri);
             }
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this, "Importing database", e);
+            ErrorUtil.showUiErrorSnackbar(this, "Importing database", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -16,7 +16,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.util.PicassoHelper;
 import org.schabi.newpipe.util.ThemeHelper;
@@ -153,7 +153,7 @@ public void onNext(@NonNull final List<SubscriptionEntity> newSubscriptions) {
 
             @Override
             public void onError(@NonNull final Throwable exception) {
-                ErrorActivity.reportUiErrorInSnackbar(SelectChannelFragment.this,
+                ErrorUtil.showUiErrorSnackbar(SelectChannelFragment.this,
                         "Loading subscription", exception);
             }
 

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -8,8 +8,8 @@
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.DeviceUtils;
 
@@ -157,7 +157,7 @@ public static void initMigrations(final Context context, final boolean isFirstRu
             } catch (final Exception e) {
                 // save the version with the last successful migration and report the error
                 sp.edit().putInt(lastPrefVersionKey, currentVersion).apply();
-                ErrorActivity.reportError(context, new ErrorInfo(
+                ErrorUtil.openActivity(context, new ErrorInfo(
                         e,
                         UserAction.PREFERENCES_MIGRATION,
                         "Migrating preferences from version " + lastPrefVersion + " to "

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -27,8 +27,8 @@
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.settings.SelectChannelFragment;
@@ -182,7 +182,7 @@ private void addTab(final int tabId) {
         final Tab.Type type = typeFrom(tabId);
 
         if (type == null) {
-            ErrorActivity.reportErrorInSnackbar(this,
+            ErrorUtil.showSnackbar(this,
                     new ErrorInfo(new IllegalStateException("Tab id not found: " + tabId),
                             UserAction.SOMETHING_ELSE, "Choosing tabs on settings"));
             return;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -12,8 +12,8 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem.LocalItemType;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
@@ -506,7 +506,7 @@ private String getDefaultKioskId(final Context context) {
                 final StreamingService service = NewPipe.getService(kioskServiceId);
                 kioskId = service.getKioskList().getDefaultKioskId();
             } catch (final ExtractionException e) {
-                ErrorActivity.reportErrorInSnackbar(context, new ErrorInfo(e,
+                ErrorUtil.showSnackbar(context, new ErrorInfo(e,
                         UserAction.REQUESTED_KIOSK, "Loading default kiosk for selected service"));
             }
             return kioskId;

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -39,8 +39,8 @@
 
 import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.Localization;
@@ -581,9 +581,9 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in
             service = ErrorInfo.SERVICE_NONE;
         }
 
-        ErrorActivity.reportError(mContext,
+        ErrorUtil.createNotification(mContext,
                 new ErrorInfo(ErrorInfo.Companion.throwableToStringList(mission.errObject), action,
-                        service, request.toString(), reason, null));
+                        service, request.toString(), reason));
     }
 
     public void clearFinishedDownloads(boolean delete) {

File: app/src/main/java/org/schabi/newpipe/local/history/HistoryRecordManager.java
Patch:
@@ -244,9 +244,9 @@ public Single<Integer> deleteCompleteSearchHistory() {
                 .subscribeOn(Schedulers.io());
     }
 
-    public Flowable<List<SearchHistoryEntry>> getRelatedSearches(final String query,
-                                                                 final int similarQueryLimit,
-                                                                 final int uniqueQueryLimit) {
+    public Flowable<List<String>> getRelatedSearches(final String query,
+                                                     final int similarQueryLimit,
+                                                     final int uniqueQueryLimit) {
         return query.length() > 0
                 ? searchHistoryTable.getSimilarEntries(query, similarQueryLimit)
                 : searchHistoryTable.getUniqueEntries(uniqueQueryLimit);

File: app/src/main/java/org/schabi/newpipe/local/history/HistoryRecordManager.java
Patch:
@@ -244,9 +244,9 @@ public Single<Integer> deleteCompleteSearchHistory() {
                 .subscribeOn(Schedulers.io());
     }
 
-    public Flowable<List<SearchHistoryEntry>> getRelatedSearches(final String query,
-                                                                 final int similarQueryLimit,
-                                                                 final int uniqueQueryLimit) {
+    public Flowable<List<String>> getRelatedSearches(final String query,
+                                                     final int similarQueryLimit,
+                                                     final int uniqueQueryLimit) {
         return query.length() > 0
                 ? searchHistoryTable.getSimilarEntries(query, similarQueryLimit)
                 : searchHistoryTable.getUniqueEntries(uniqueQueryLimit);

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java
Patch:
@@ -38,7 +38,6 @@ public void send(@NonNull final Context context, @NonNull final CrashReportData
                 UserAction.UI_ERROR,
                 ErrorInfo.SERVICE_NONE,
                 "ACRA report",
-                R.string.app_ui_crash,
-                null));
+                R.string.app_ui_crash));
     }
 }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -90,8 +90,7 @@ public void onCreate(final Bundle savedInstanceState) {
                     new ErrorInfo(new String[]{}, UserAction.SUBSCRIPTION_IMPORT_EXPORT,
                             NewPipe.getNameOfService(currentServiceId),
                             "Service does not support importing subscriptions",
-                            R.string.general_error,
-                            null));
+                            R.string.general_error));
             activity.finish();
         }
     }

File: app/src/main/java/org/schabi/newpipe/player/playererror/PlayerErrorHandler.java
Patch:
@@ -12,7 +12,6 @@
 import com.google.android.exoplayer2.ExoPlaybackException;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.EnsureExceptionSerializable;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
@@ -70,7 +69,7 @@ private void reportError(@NonNull final ExoPlaybackException exception,
         ErrorUtil.createNotification(
                 context,
                 new ErrorInfo(
-                        EnsureExceptionSerializable.ensureSerializable(exception),
+                        exception,
                         UserAction.PLAY_STREAM,
                         "Player error[type=" + exception.type + "] occurred while playing: "
                                 + info.getUrl(),

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -583,7 +583,7 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in
 
         ErrorUtil.createNotification(mContext,
                 new ErrorInfo(ErrorInfo.Companion.throwableToStringList(mission.errObject), action,
-                        service, request.toString(), reason, null));
+                        service, request.toString(), reason));
     }
 
     public void clearFinishedDownloads(boolean delete) {

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -16,8 +16,8 @@
 import org.acra.config.ACRAConfigurationException;
 import org.acra.config.CoreConfiguration;
 import org.acra.config.CoreConfigurationBuilder;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
@@ -217,7 +217,7 @@ protected void initACRA() {
             ACRA.init(this, acraConfig);
         } catch (final ACRAConfigurationException exception) {
             exception.printStackTrace();
-            ErrorActivity.reportError(this, new ErrorInfo(exception,
+            ErrorUtil.openActivity(this, new ErrorInfo(exception,
                     UserAction.SOMETHING_ELSE, "Could not initialize ACRA crash report"));
         }
     }

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -37,8 +37,8 @@
 import org.schabi.newpipe.databinding.ListRadioIconItemBinding;
 import org.schabi.newpipe.databinding.SingleChoiceDialogViewBinding;
 import org.schabi.newpipe.download.DownloadDialog;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.Info;
@@ -231,7 +231,7 @@ private static void handleError(final Context context, final ErrorInfo errorInfo
         } else if (errorInfo.getThrowable() instanceof ContentNotSupportedException) {
             Toast.makeText(context, R.string.content_not_supported, Toast.LENGTH_LONG).show();
         } else {
-            ErrorActivity.reportError(context, errorInfo);
+            ErrorUtil.createNotification(context, errorInfo);
         }
 
         if (context instanceof RouterActivity) {

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java
Patch:
@@ -33,7 +33,7 @@ public class AcraReportSender implements ReportSender {
 
     @Override
     public void send(@NonNull final Context context, @NonNull final CrashReportData report) {
-        ErrorActivity.reportError(context, new ErrorInfo(
+        ErrorUtil.openActivity(context, new ErrorInfo(
                 new String[]{report.getString(ReportField.STACK_TRACE)},
                 UserAction.UI_ERROR,
                 ErrorInfo.SERVICE_NONE,

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -52,7 +52,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-class ErrorActivity extends AppCompatActivity {
+public class ErrorActivity extends AppCompatActivity {
     // LOG TAGS
     public static final String TAG = ErrorActivity.class.toString();
     // BUNDLE TAGS

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -21,7 +21,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.PignateFooterBinding;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -293,7 +293,7 @@ public void selected(final ChannelInfoItem selectedItem) {
                             selectedItem.getUrl(),
                             selectedItem.getName());
                 } catch (final Exception e) {
-                    ErrorActivity.reportUiErrorInSnackbar(
+                    ErrorUtil.showUiErrorSnackbar(
                             BaseListFragment.this, "Opening channel fragment", e);
                 }
             }
@@ -309,7 +309,7 @@ public void selected(final PlaylistInfoItem selectedItem) {
                             selectedItem.getUrl(),
                             selectedItem.getName());
                 } catch (final Exception e) {
-                    ErrorActivity.reportUiErrorInSnackbar(BaseListFragment.this,
+                    ErrorUtil.showUiErrorSnackbar(BaseListFragment.this,
                             "Opening playlist fragment", e);
                 }
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -26,8 +26,8 @@
 import org.schabi.newpipe.databinding.ChannelHeaderBinding;
 import org.schabi.newpipe.databinding.FragmentChannelBinding;
 import org.schabi.newpipe.databinding.PlaylistControlBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
@@ -407,7 +407,7 @@ public void onClick(final View v) {
                                 currentInfo.getParentChannelUrl(),
                                 currentInfo.getParentChannelName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiErrorInSnackbar(this, "Opening channel fragment", e);
+                        ErrorUtil.showUiErrorSnackbar(this, "Opening channel fragment", e);
                     }
                 } else if (DEBUG) {
                     Log.i(TAG, "Can't open parent channel because we got no channel URL");

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -24,8 +24,8 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.databinding.PlaylistControlBinding;
 import org.schabi.newpipe.databinding.PlaylistHeaderBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
@@ -310,7 +310,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
                         NavigationHelper.openChannelFragment(getFM(), result.getServiceId(),
                                 result.getUploaderUrl(), result.getUploaderName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiErrorInSnackbar(this, "Opening channel fragment", e);
+                        ErrorUtil.showUiErrorSnackbar(this, "Opening channel fragment", e);
                     }
                 });
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -38,8 +38,8 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.history.model.SearchHistoryEntry;
 import org.schabi.newpipe.databinding.FragmentSearchBinding;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.InfoItem;
@@ -225,8 +225,7 @@ private void updateService() {
         try {
             service = NewPipe.getService(serviceId);
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this,
-                    "Getting service for id " + serviceId, e);
+            ErrorUtil.showUiErrorSnackbar(this, "Getting service for id " + serviceId, e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -13,7 +13,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
@@ -171,7 +171,7 @@ private void openCommentAuthor(final CommentsInfoItem item) {
                     item.getUploaderUrl(),
                     item.getUploaderName());
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(activity, "Opening channel fragment", e);
+            ErrorUtil.showUiErrorSnackbar(activity, "Opening channel fragment", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -23,8 +23,8 @@
 
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
@@ -86,7 +86,7 @@ public void onCreate(final Bundle savedInstanceState) {
 
         setupServiceVariables();
         if (supportedSources.isEmpty() && currentServiceId != Constants.NO_SERVICE_ID) {
-            ErrorActivity.reportErrorInSnackbar(activity,
+            ErrorUtil.showSnackbar(activity,
                     new ErrorInfo(new String[]{}, UserAction.SUBSCRIPTION_IMPORT_EXPORT,
                             NewPipe.getNameOfService(currentServiceId),
                             "Service does not support importing subscriptions",

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -35,8 +35,8 @@
 
 import org.reactivestreams.Publisher;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.ktx.ExceptionUtils;
@@ -153,7 +153,7 @@ protected void stopService() {
 
     protected void stopAndReportError(final Throwable throwable, final String request) {
         stopService();
-        ErrorActivity.reportError(this, new ErrorInfo(
+        ErrorUtil.createNotification(this, new ErrorInfo(
                 throwable, UserAction.SUBSCRIPTION_IMPORT_EXPORT, request));
     }
 

File: app/src/main/java/org/schabi/newpipe/player/playererror/PlayerErrorHandler.java
Patch:
@@ -13,8 +13,8 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.EnsureExceptionSerializable;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.Info;
 
@@ -67,7 +67,7 @@ public void showPlayerError(
 
     private void reportError(@NonNull final ExoPlaybackException exception,
                              @NonNull final Info info) {
-        ErrorActivity.reportError(
+        ErrorUtil.createNotification(
                 context,
                 new ErrorInfo(
                         EnsureExceptionSerializable.ensureSerializable(exception),

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -20,7 +20,7 @@
 import org.schabi.newpipe.DownloaderImpl;
 import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
@@ -205,7 +205,7 @@ private void exportDatabase(final StoredFileHelper file, final Uri exportDataUri
             saveLastImportExportDataUri(exportDataUri); // save export path only on success
             Toast.makeText(getContext(), R.string.export_complete_toast, Toast.LENGTH_SHORT).show();
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this, "Exporting database", e);
+            ErrorUtil.showUiErrorSnackbar(this, "Exporting database", e);
         }
     }
 
@@ -247,7 +247,7 @@ private void importDatabase(final StoredFileHelper file, final Uri importDataUri
                 finishImport(importDataUri);
             }
         } catch (final Exception e) {
-            ErrorActivity.reportUiErrorInSnackbar(this, "Importing database", e);
+            ErrorUtil.showUiErrorSnackbar(this, "Importing database", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -16,7 +16,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
-import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.util.PicassoHelper;
 import org.schabi.newpipe.util.ThemeHelper;
@@ -153,7 +153,7 @@ public void onNext(@NonNull final List<SubscriptionEntity> newSubscriptions) {
 
             @Override
             public void onError(@NonNull final Throwable exception) {
-                ErrorActivity.reportUiErrorInSnackbar(SelectChannelFragment.this,
+                ErrorUtil.showUiErrorSnackbar(SelectChannelFragment.this,
                         "Loading subscription", exception);
             }
 

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -8,8 +8,8 @@
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.DeviceUtils;
 
@@ -157,7 +157,7 @@ public static void initMigrations(final Context context, final boolean isFirstRu
             } catch (final Exception e) {
                 // save the version with the last successful migration and report the error
                 sp.edit().putInt(lastPrefVersionKey, currentVersion).apply();
-                ErrorActivity.reportError(context, new ErrorInfo(
+                ErrorUtil.openActivity(context, new ErrorInfo(
                         e,
                         UserAction.PREFERENCES_MIGRATION,
                         "Migrating preferences from version " + lastPrefVersion + " to "

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -27,8 +27,8 @@
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.settings.SelectChannelFragment;
@@ -182,7 +182,7 @@ private void addTab(final int tabId) {
         final Tab.Type type = typeFrom(tabId);
 
         if (type == null) {
-            ErrorActivity.reportErrorInSnackbar(this,
+            ErrorUtil.showSnackbar(this,
                     new ErrorInfo(new IllegalStateException("Tab id not found: " + tabId),
                             UserAction.SOMETHING_ELSE, "Choosing tabs on settings"));
             return;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -12,8 +12,8 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem.LocalItemType;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
@@ -506,7 +506,7 @@ private String getDefaultKioskId(final Context context) {
                 final StreamingService service = NewPipe.getService(kioskServiceId);
                 kioskId = service.getKioskList().getDefaultKioskId();
             } catch (final ExtractionException e) {
-                ErrorActivity.reportErrorInSnackbar(context, new ErrorInfo(e,
+                ErrorUtil.showSnackbar(context, new ErrorInfo(e,
                         UserAction.REQUESTED_KIOSK, "Loading default kiosk for selected service"));
             }
             return kioskId;

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -39,8 +39,8 @@
 
 import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorUtil;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.Localization;
@@ -581,7 +581,7 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in
             service = ErrorInfo.SERVICE_NONE;
         }
 
-        ErrorActivity.reportError(mContext,
+        ErrorUtil.createNotification(mContext,
                 new ErrorInfo(ErrorInfo.Companion.throwableToStringList(mission.errObject), action,
                         service, request.toString(), reason, null));
     }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -692,7 +692,7 @@ private void launchDirectoryPicker(final ActivityResultLauncher<Intent> launcher
         try {
             launcher.launch(StoredDirectoryHelper.getPicker(context));
         } catch (final ActivityNotFoundException aex) {
-            Log.w(TAG, "Unable to launch directory-picker", aex);
+            Log.w(TAG, "Unable to launch directory picker", aex);
             NoFileManagerHelper.showActivityNotFoundAlert(getContext());
         }
     }
@@ -777,7 +777,7 @@ private void prepareSelectedDownload() {
                 requestDownloadSaveAsLauncher.launch(StoredFileHelper.getNewPicker(context,
                         filenameTmp, mimeTmp, initialPath));
             } catch (final ActivityNotFoundException aex) {
-                Log.w(TAG, "Unable to launch file-picker", aex);
+                Log.w(TAG, "Unable to launch file picker", aex);
                 NoFileManagerHelper.showActivityNotFoundAlert(getContext());
             }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -183,7 +183,7 @@ public void onImportFile() {
             // with different mime types and file extensions
             requestImportFileLauncher.launch(StoredFileHelper.getPicker(activity, "*/*"));
         } catch (final ActivityNotFoundException aex) {
-            Log.w(TAG, "Unable to launch file-picker", aex);
+            Log.w(TAG, "Unable to launch file picker", aex);
             NoFileManagerHelper.showActivityNotFoundAlert(getContext());
         }
     }

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -80,7 +80,7 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro
                         StoredFileHelper.getPicker(requireContext(),
                                 ZIP_MIME_TYPE, getImportExportDataUri()));
             } catch (final ActivityNotFoundException aex) {
-                Log.w(TAG, "Unable to launch file-picker", aex);
+                Log.w(TAG, "Unable to launch file picker", aex);
                 NoFileManagerHelper.showActivityNotFoundAlert(getContext());
             }
             return true;
@@ -95,7 +95,7 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro
                                 "NewPipeData-" + exportDateFormat.format(new Date()) + ".zip",
                                 ZIP_MIME_TYPE, getImportExportDataUri()));
             } catch (final ActivityNotFoundException aex) {
-                Log.w(TAG, "Unable to launch file-picker", aex);
+                Log.w(TAG, "Unable to launch file picker", aex);
                 NoFileManagerHelper.showActivityNotFoundAlert(getContext());
             }
             return true;

File: app/src/main/java/org/schabi/newpipe/settings/DownloadSettingsFragment.java
Patch:
@@ -219,7 +219,7 @@ private void launchDirectoryPicker(final ActivityResultLauncher<Intent> launcher
         try {
             launcher.launch(StoredDirectoryHelper.getPicker(ctx));
         } catch (final ActivityNotFoundException aex) {
-            Log.w(TAG, "Unable to launch directory-picker", aex);
+            Log.w(TAG, "Unable to launch directory picker", aex);
             NoFileManagerHelper.showActivityNotFoundAlert(getContext());
         }
     }

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -266,7 +266,7 @@ private void recoverMission(@NonNull DownloadMission mission) {
                     StoredFileHelper.getNewPicker(mContext, mission.storage.getName(),
                             mission.storage.getType(), initialPath));
         } catch (final ActivityNotFoundException aex) {
-            Log.w(TAG, "Unable to launch file-picker", aex);
+            Log.w(TAG, "Unable to launch file picker", aex);
             NoFileManagerHelper.showActivityNotFoundAlert(getContext());
         }
     }

File: app/src/main/java/org/schabi/newpipe/player/playererror/PlayerErrorHandler.java
Patch:
@@ -39,7 +39,8 @@ public PlayerErrorHandler(@NonNull final Context context) {
     public void showPlayerError(
             @NonNull final ExoPlaybackException exception,
             @NonNull final Info info,
-            @StringRes final int textResId) {
+            @StringRes final int textResId
+    ) {
         // Hide existing toast message
         if (errorToast != null) {
             Log.d(TAG, "Trying to cancel previous player error error toast");
@@ -54,6 +55,7 @@ public void showPlayerError(
                 return;
             } catch (final Exception ex) {
                 Log.w(TAG, "Unable to report error:", ex);
+                // This will show the toast as fallback
             }
         }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2448,6 +2448,7 @@ public void onPositionDiscontinuity(
         // Refresh the playback if there is a transition to the next video
         final int newWindowIndex = simpleExoPlayer.getCurrentWindowIndex();
         switch (discontinuityReason) {
+            case DISCONTINUITY_REASON_AUTO_TRANSITION:
             case DISCONTINUITY_REASON_REMOVE:
                 // When player is in single repeat mode and a period transition occurs,
                 // we need to register a view count here since no metadata has changed
@@ -2470,7 +2471,6 @@ public void onPositionDiscontinuity(
                 }
                 break;
             case DISCONTINUITY_REASON_SKIP:
-            case DISCONTINUITY_REASON_AUTO_TRANSITION:
                 break; // only makes Android Studio linter happy, as there are no ads
         }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2448,6 +2448,7 @@ public void onPositionDiscontinuity(
         // Refresh the playback if there is a transition to the next video
         final int newWindowIndex = simpleExoPlayer.getCurrentWindowIndex();
         switch (discontinuityReason) {
+            case DISCONTINUITY_REASON_AUTO_TRANSITION:
             case DISCONTINUITY_REASON_REMOVE:
                 // When player is in single repeat mode and a period transition occurs,
                 // we need to register a view count here since no metadata has changed
@@ -2470,7 +2471,6 @@ public void onPositionDiscontinuity(
                 }
                 break;
             case DISCONTINUITY_REASON_SKIP:
-            case DISCONTINUITY_REASON_AUTO_TRANSITION:
                 break; // only makes Android Studio linter happy, as there are no ads
         }
 

File: app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java
Patch:
@@ -70,7 +70,7 @@ public static void initSettings(final Context context) {
         PreferenceManager.setDefaultValues(context, R.xml.appearance_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.history_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.content_settings, true);
-        PreferenceManager.setDefaultValues(context, R.xml.notification_settings, true);
+        PreferenceManager.setDefaultValues(context, R.xml.player_notification_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.update_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.debug_settings, true);
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -774,6 +774,8 @@ private void initPlayback(@NonNull final PlayQueue queue,
         destroyPlayer();
         initPlayer(playOnReady);
         setRepeatMode(repeatMode);
+        // #6825 - Ensure that the shuffle-button is in the correct state on the UI
+        setShuffleButton(binding.shuffleButton, simpleExoPlayer.getShuffleModeEnabled());
         setPlaybackParameters(playbackSpeed, playbackPitch, playbackSkipSilence);
 
         playQueue = queue;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -442,7 +442,7 @@ public synchronized void shuffle() {
         if (backup == null) {
             backup = new ArrayList<>(streams);
         }
-        // Can't shuffle an list that's empty or only has one element
+        // Can't shuffle a list that's empty or only has one element
         if (size() <= 2) {
             return;
         }

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -165,7 +165,7 @@ protected void onCreate(final Bundle savedInstanceState) {
         }
         openMiniPlayerUponPlayerStarted();
 
-        // shedule worker for checking for new streans and creating corresponding notifications
+        // schedule worker for checking for new streams and creating corresponding notifications
         NotificationWorker.schedule(this);
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/MainSettingsFragment.java
Patch:
@@ -16,8 +16,9 @@ public class MainSettingsFragment extends BasePreferenceFragment {
     public void onCreatePreferences(final Bundle savedInstanceState, final String rootKey) {
         addPreferencesFromResource(R.xml.main_settings);
 
-        if (!CheckForNewAppVersion.isGithubApk(App.getApp())) {
-            final Preference update = findPreference(getString(R.string.update_pref_screen_key));
+        if (!CheckForNewAppVersion.isReleaseApk(App.getApp())) {
+            final Preference update
+                    = findPreference(getString(R.string.update_pref_screen_key));
             getPreferenceScreen().removePreference(update);
 
             defaultPreferences.edit().putBoolean(getString(R.string.update_app_key), false).apply();

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3754,6 +3754,9 @@ public boolean onKeyDown(final int keyCode) {
             case KeyEvent.KEYCODE_SPACE:
                 if (isFullscreen) {
                     playPause();
+                    if (isPlaying()) {
+                        hideControls(0, 0);
+                    }
                 }
                 break;
             case KeyEvent.KEYCODE_BACK:

File: app/src/main/java/org/schabi/newpipe/player/playback/PlayerMediaSession.java
Patch:
@@ -88,6 +88,7 @@ public MediaDescriptionCompat getQueueMetadata(final int index) {
     @Override
     public void play() {
         player.play();
+        player.hideControls(0, 0);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -774,7 +774,8 @@ private void initPlayback(@NonNull final PlayQueue queue,
         destroyPlayer();
         initPlayer(playOnReady);
         setRepeatMode(repeatMode);
-        onShuffleModeEnabledChanged(false);
+        // #6825 - Ensure that the shuffle-button is in the correct state on the UI
+        setShuffleButton(binding.shuffleButton, simpleExoPlayer.getShuffleModeEnabled());
         setPlaybackParameters(playbackSpeed, playbackPitch, playbackSkipSilence);
 
         playQueue = queue;

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -254,4 +254,5 @@ private void initNotificationChannels() {
     protected boolean isDisposedRxExceptionsReported() {
         return false;
     }
+
 }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1181,7 +1181,7 @@ private void openMainPlayer() {
         addVideoPlayerView();
 
         final Intent playerIntent = NavigationHelper.getPlayerIntent(requireContext(),
-                MainPlayer.class, queue, autoPlayEnabled);
+                MainPlayer.class, queue, true, autoPlayEnabled);
         ContextCompat.startForegroundService(activity, playerIntent);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1181,7 +1181,7 @@ private void openMainPlayer() {
         addVideoPlayerView();
 
         final Intent playerIntent = NavigationHelper.getPlayerIntent(requireContext(),
-                MainPlayer.class, queue, autoPlayEnabled);
+                MainPlayer.class, queue, true, autoPlayEnabled);
         ContextCompat.startForegroundService(activity, playerIntent);
     }
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -87,6 +87,7 @@ public static <T> Intent getPlayerIntent(@NonNull final Context context,
             }
         }
         intent.putExtra(Player.PLAYER_TYPE, MainPlayer.PlayerType.VIDEO.ordinal());
+        intent.putExtra(Player.RESUME_PLAYBACK, true);
 
         return intent;
     }

File: app/src/main/java/org/schabi/newpipe/database/subscription/NotificationMode.java
Patch:
@@ -4,11 +4,11 @@
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 
-@IntDef({NotificationMode.DISABLED, NotificationMode.ENABLED_DEFAULT})
+@IntDef({NotificationMode.DISABLED, NotificationMode.ENABLED})
 @Retention(RetentionPolicy.SOURCE)
 public @interface NotificationMode {
 
     int DISABLED = 0;
-    int ENABLED_DEFAULT = 1;
+    int ENABLED = 1;
     //other values reserved for the future
 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -414,7 +414,7 @@ private void updateNotifyButton(@Nullable final SubscriptionEntity subscription)
     }
 
     private void setNotify(final boolean isEnabled) {
-        final int mode = isEnabled ? NotificationMode.ENABLED_DEFAULT : NotificationMode.DISABLED;
+        final int mode = isEnabled ? NotificationMode.ENABLED : NotificationMode.DISABLED;
         disposables.add(
                 subscriptionManager.updateNotificationMode(currentInfo.getServiceId(),
                         currentInfo.getUrl(), mode)

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -146,7 +146,9 @@ public static void playOnPopupPlayer(final Context context,
             return;
         }
 
-        Toast.makeText(context, R.string.popup_playing_toast, Toast.LENGTH_SHORT).show();
+        if (PlayerHolder.getInstance().getType() != PlayerType.POPUP) {
+            Toast.makeText(context, R.string.popup_playing_toast, Toast.LENGTH_SHORT).show();
+        }
         final Intent intent = getPlayerIntent(context, MainPlayer.class, queue, resumePlayback);
         intent.putExtra(Player.PLAYER_TYPE, MainPlayer.PlayerType.POPUP.ordinal());
         ContextCompat.startForegroundService(context, intent);

File: app/src/main/java/org/schabi/newpipe/local/dialog/PlaylistCreationDialog.java
Patch:
@@ -38,6 +38,7 @@ public Dialog onCreateDialog(@Nullable final Bundle savedInstanceState) {
 
         final DialogEditTextBinding dialogBinding
                 = DialogEditTextBinding.inflate(getLayoutInflater());
+        dialogBinding.getRoot().getContext().setTheme(ThemeHelper.getDialogTheme(requireContext()));
         dialogBinding.dialogEditText.setHint(R.string.name);
         dialogBinding.dialogEditText.setInputType(InputType.TYPE_CLASS_TEXT);
 

File: app/src/main/java/org/schabi/newpipe/util/external_communication/ShareUtils.java
Patch:
@@ -9,6 +9,7 @@
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
 import android.os.Build;
+import android.text.TextUtils;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
@@ -246,7 +247,7 @@ public static void shareText(@NonNull final Context context,
         final Intent shareIntent = new Intent(Intent.ACTION_SEND);
         shareIntent.setType("text/plain");
         shareIntent.putExtra(Intent.EXTRA_TEXT, content);
-        if (!title.isEmpty()) {
+        if (!TextUtils.isEmpty(title)) {
             shareIntent.putExtra(Intent.EXTRA_TITLE, title);
             shareIntent.putExtra(Intent.EXTRA_SUBJECT, title);
         }

File: app/src/main/java/org/schabi/newpipe/util/external_communication/ShareUtils.java
Patch:
@@ -9,6 +9,7 @@
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
 import android.os.Build;
+import android.text.TextUtils;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
@@ -246,7 +247,7 @@ public static void shareText(@NonNull final Context context,
         final Intent shareIntent = new Intent(Intent.ACTION_SEND);
         shareIntent.setType("text/plain");
         shareIntent.putExtra(Intent.EXTRA_TEXT, content);
-        if (!title.isEmpty()) {
+        if (!TextUtils.isEmpty(title)) {
             shareIntent.putExtra(Intent.EXTRA_TITLE, title);
             shareIntent.putExtra(Intent.EXTRA_SUBJECT, title);
         }

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -146,7 +146,9 @@ public static void playOnPopupPlayer(final Context context,
             return;
         }
 
-        Toast.makeText(context, R.string.popup_playing_toast, Toast.LENGTH_SHORT).show();
+        if (PlayerHolder.getInstance().getType() != PlayerType.POPUP) {
+            Toast.makeText(context, R.string.popup_playing_toast, Toast.LENGTH_SHORT).show();
+        }
         final Intent intent = getPlayerIntent(context, MainPlayer.class, queue, resumePlayback);
         intent.putExtra(Player.PLAYER_TYPE, MainPlayer.PlayerType.POPUP.ordinal());
         ContextCompat.startForegroundService(context, intent);

File: app/src/main/java/org/schabi/newpipe/player/resolver/PlaybackResolver.java
Patch:
@@ -14,14 +14,15 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.StreamType;
 import org.schabi.newpipe.player.helper.PlayerDataSource;
+import org.schabi.newpipe.util.StreamTypeUtil;
 
 public interface PlaybackResolver extends Resolver<StreamInfo, MediaSource> {
 
     @Nullable
     default MediaSource maybeBuildLiveMediaSource(@NonNull final PlayerDataSource dataSource,
                                                   @NonNull final StreamInfo info) {
         final StreamType streamType = info.getStreamType();
-        if (!(streamType == StreamType.AUDIO_LIVE_STREAM || streamType == StreamType.LIVE_STREAM)) {
+        if (!StreamTypeUtil.isLiveStream(streamType)) {
             return null;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2250,7 +2250,7 @@ private void onCompleted() {
             stopProgressLoop();
         }
 
-        // When a (short) video ends the elements have to display the correct values
+        // When a (short) video ends the elements have to display the correct values - see #6180
         updatePlayBackElementsCurrentDuration(binding.playbackSeekBar.getMax());
 
         showControls(500);

File: app/src/main/java/org/schabi/newpipe/player/resolver/PlaybackResolver.java
Patch:
@@ -14,14 +14,15 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.StreamType;
 import org.schabi.newpipe.player.helper.PlayerDataSource;
+import org.schabi.newpipe.util.StreamTypeUtil;
 
 public interface PlaybackResolver extends Resolver<StreamInfo, MediaSource> {
 
     @Nullable
     default MediaSource maybeBuildLiveMediaSource(@NonNull final PlayerDataSource dataSource,
                                                   @NonNull final StreamInfo info) {
         final StreamType streamType = info.getStreamType();
-        if (!(streamType == StreamType.AUDIO_LIVE_STREAM || streamType == StreamType.LIVE_STREAM)) {
+        if (!StreamTypeUtil.isLiveStream(streamType)) {
             return null;
         }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -37,6 +37,7 @@
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.ktx.AnimationType;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
+import org.schabi.newpipe.player.MainPlayer.PlayerType;
 import org.schabi.newpipe.player.playqueue.ChannelPlayQueue;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.util.ExtractorHelper;
@@ -495,12 +496,12 @@ public void handleResult(@NonNull final ChannelInfo result) {
                         .playOnBackgroundPlayer(activity, getPlayQueue(), false));
 
         playlistControlBinding.playlistCtrlPlayPopupButton.setOnLongClickListener(view -> {
-            NavigationHelper.enqueueOnPopupPlayer(activity, getPlayQueue(), true);
+            NavigationHelper.enqueueOnPlayer(activity, getPlayQueue(), PlayerType.POPUP);
             return true;
         });
 
         playlistControlBinding.playlistCtrlPlayBgButton.setOnLongClickListener(view -> {
-            NavigationHelper.enqueueOnBackgroundPlayer(activity, getPlayQueue(), true);
+            NavigationHelper.enqueueOnPlayer(activity, getPlayQueue(), PlayerType.AUDIO);
             return true;
         });
     }

File: app/src/main/java/org/schabi/newpipe/BaseFragment.java
Patch:
@@ -16,7 +16,7 @@
 
 public abstract class BaseFragment extends Fragment {
     protected final String TAG = getClass().getSimpleName() + "@" + Integer.toHexString(hashCode());
-    protected final boolean DEBUG = MainActivity.DEBUG;
+    protected static final boolean DEBUG = MainActivity.DEBUG;
     protected AppCompatActivity activity;
     //These values are used for controlling fragments when they are part of the frontpage
     @State

File: app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.error;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
@@ -66,6 +67,7 @@ public static String sanitizeRecaptchaUrl(@Nullable final String url) {
     private ActivityRecaptchaBinding recaptchaBinding;
     private String foundCookies = "";
 
+    @SuppressLint("SetJavaScriptEnabled")
     @Override
     protected void onCreate(final Bundle savedInstanceState) {
         ThemeHelper.setTheme(this);

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -423,7 +423,7 @@ public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
             showRelatedItems = sharedPreferences.getBoolean(key, true);
             tabSettingsChanged = true;
         } else if (key.equals(getString(R.string.show_description_key))) {
-            showComments = sharedPreferences.getBoolean(key, true);
+            showDescription = sharedPreferences.getBoolean(key, true);
             tabSettingsChanged = true;
         }
     }

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -360,7 +360,7 @@ public static void openVideoDetailFragment(@NonNull final Context context,
             autoPlay = false;
         }
 
-        final RunnableWithVideoDetailFragment onVideoDetailFragmentReady = (detailFragment) -> {
+        final RunnableWithVideoDetailFragment onVideoDetailFragmentReady = detailFragment -> {
             expandMainPlayer(detailFragment.requireActivity());
             detailFragment.setAutoPlay(autoPlay);
             if (switchingPlayers) {

File: app/src/main/java/org/schabi/newpipe/util/PermissionHelper.java
Patch:
@@ -119,7 +119,7 @@ public static boolean checkSystemAlertWindowPermission(final Context context) {
 
     public static boolean isPopupEnabled(final Context context) {
         return Build.VERSION.SDK_INT < Build.VERSION_CODES.M
-                || PermissionHelper.checkSystemAlertWindowPermission(context);
+                || checkSystemAlertWindowPermission(context);
     }
 
     public static void showPopupEnablementToast(final Context context) {

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -238,7 +238,7 @@ public final class Player implements
     //////////////////////////////////////////////////////////////////////////*/
 
     public static final int PLAY_PREV_ACTIVATION_LIMIT_MILLIS = 5000; // 5 seconds
-    public static final int PROGRESS_LOOP_INTERVAL_MILLIS = 500; // 500 millis
+    public static final int PROGRESS_LOOP_INTERVAL_MILLIS = 1000; // 1 second
     public static final int DEFAULT_CONTROLS_DURATION = 300; // 300 millis
     public static final int DEFAULT_CONTROLS_HIDE_TIME = 2000;  // 2 Seconds
     public static final int DPAD_CONTROLS_HIDE_TIME = 7000;  // 7 Seconds

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -238,7 +238,7 @@ public final class Player implements
     //////////////////////////////////////////////////////////////////////////*/
 
     public static final int PLAY_PREV_ACTIVATION_LIMIT_MILLIS = 5000; // 5 seconds
-    public static final int PROGRESS_LOOP_INTERVAL_MILLIS = 500; // 500 millis
+    public static final int PROGRESS_LOOP_INTERVAL_MILLIS = 1000; // 1 second
     public static final int DEFAULT_CONTROLS_DURATION = 300; // 300 millis
     public static final int DEFAULT_CONTROLS_HIDE_TIME = 2000;  // 2 Seconds
     public static final int DPAD_CONTROLS_HIDE_TIME = 7000;  // 7 Seconds

File: app/src/main/java/org/schabi/newpipe/BaseFragment.java
Patch:
@@ -16,7 +16,7 @@
 
 public abstract class BaseFragment extends Fragment {
     protected final String TAG = getClass().getSimpleName() + "@" + Integer.toHexString(hashCode());
-    protected final boolean DEBUG = MainActivity.DEBUG;
+    protected static final boolean DEBUG = MainActivity.DEBUG;
     protected AppCompatActivity activity;
     //These values are used for controlling fragments when they are part of the frontpage
     @State

File: app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.error;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
@@ -66,6 +67,7 @@ public static String sanitizeRecaptchaUrl(@Nullable final String url) {
     private ActivityRecaptchaBinding recaptchaBinding;
     private String foundCookies = "";
 
+    @SuppressLint("SetJavaScriptEnabled")
     @Override
     protected void onCreate(final Bundle savedInstanceState) {
         ThemeHelper.setTheme(this);

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -360,7 +360,7 @@ public static void openVideoDetailFragment(@NonNull final Context context,
             autoPlay = false;
         }
 
-        final RunnableWithVideoDetailFragment onVideoDetailFragmentReady = (detailFragment) -> {
+        final RunnableWithVideoDetailFragment onVideoDetailFragmentReady = detailFragment -> {
             expandMainPlayer(detailFragment.requireActivity());
             detailFragment.setAutoPlay(autoPlay);
             if (switchingPlayers) {

File: app/src/main/java/org/schabi/newpipe/util/PermissionHelper.java
Patch:
@@ -119,7 +119,7 @@ public static boolean checkSystemAlertWindowPermission(final Context context) {
 
     public static boolean isPopupEnabled(final Context context) {
         return Build.VERSION.SDK_INT < Build.VERSION_CODES.M
-                || PermissionHelper.checkSystemAlertWindowPermission(context);
+                || checkSystemAlertWindowPermission(context);
     }
 
     public static void showPopupEnablementToast(final Context context) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -423,7 +423,7 @@ public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
             showRelatedItems = sharedPreferences.getBoolean(key, true);
             tabSettingsChanged = true;
         } else if (key.equals(getString(R.string.show_description_key))) {
-            showComments = sharedPreferences.getBoolean(key, true);
+            showDescription = sharedPreferences.getBoolean(key, true);
             tabSettingsChanged = true;
         }
     }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -675,6 +675,7 @@ public void handleIntent(@NonNull final Intent intent) {
                 && isPlaybackResumeEnabled(this)
                 && !samePlayQueue
                 && !newQueue.isEmpty()
+                && newQueue.getItem() != null
                 && newQueue.getItem().getRecoveryPosition() == PlayQueueItem.RECOVERY_UNSET) {
             databaseUpdateDisposable.add(recordManager.loadStreamState(newQueue.getItem())
                     .observeOn(AndroidSchedulers.mainThread())

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1109,7 +1109,7 @@ public void openVideoPlayer(final boolean directlyFullscreenIfApplicable) {
                 && PlayerHelper.isStartMainPlayerFullscreenEnabled(requireContext())
                 && !DeviceUtils.isLandscape(requireContext())
                 && PlayerHelper.globalScreenOrientationLocked(requireContext())) {
-            // open directly in fullscreen TODO does it work for large-land layouts?
+            // toggle landscape in order to open directly in fullscreen
             onScreenRotationButtonClicked();
         }
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -681,7 +681,7 @@ private void showFailedDialog(@StringRes final int msg) {
         new AlertDialog.Builder(context)
                 .setTitle(R.string.general_error)
                 .setMessage(msg)
-                .setNegativeButton(getString(R.string.finish), null)
+                .setNegativeButton(getString(R.string.ok), null)
                 .create()
                 .show();
     }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2071,7 +2071,7 @@ private void showClearingQueueConfirmation(final Runnable onAllow) {
         new AlertDialog.Builder(activity)
                 .setTitle(R.string.clear_queue_confirmation_description)
                 .setNegativeButton(R.string.cancel, null)
-                .setPositiveButton(android.R.string.yes, (dialog, which) -> {
+                .setPositiveButton(R.string.ok, (dialog, which) -> {
                     onAllow.run();
                     dialog.dismiss();
                 }).show();

File: app/src/main/java/org/schabi/newpipe/local/subscription/ImportConfirmationDialog.java
Patch:
@@ -40,7 +40,7 @@ public Dialog onCreateDialog(@Nullable final Bundle savedInstanceState) {
                 .setMessage(R.string.import_network_expensive_warning)
                 .setCancelable(true)
                 .setNegativeButton(R.string.cancel, null)
-                .setPositiveButton(R.string.finish, (dialogInterface, i) -> {
+                .setPositiveButton(R.string.ok, (dialogInterface, i) -> {
                     if (resultServiceIntent != null && getContext() != null) {
                         getContext().startService(resultServiceIntent);
                     }

File: app/src/main/java/org/schabi/newpipe/player/helper/PlaybackParameterDialog.java
Patch:
@@ -164,7 +164,7 @@ public Dialog onCreateDialog(@Nullable final Bundle savedInstanceState) {
                         setPlaybackParameters(initialTempo, initialPitch, initialSkipSilence))
                 .setNeutralButton(R.string.playback_reset, (dialogInterface, i) ->
                         setPlaybackParameters(DEFAULT_TEMPO, DEFAULT_PITCH, DEFAULT_SKIP_SILENCE))
-                .setPositiveButton(R.string.finish, (dialogInterface, i) ->
+                .setPositiveButton(R.string.ok, (dialogInterface, i) ->
                         setCurrentPlaybackParameters());
 
         return dialogBuilder.create();

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -184,7 +184,7 @@ private void requestImportPathResult(final ActivityResult result) {
 
             new AlertDialog.Builder(requireActivity())
                     .setMessage(R.string.override_current_data)
-                    .setPositiveButton(R.string.finish, (d, id) ->
+                    .setPositiveButton(R.string.ok, (d, id) ->
                             importDatabase(file, lastImportDataUri))
                     .setNegativeButton(R.string.cancel, (d, id) ->
                             d.cancel())
@@ -232,11 +232,11 @@ private void importDatabase(final StoredFileHelper file, final Uri importDataUri
                 final AlertDialog.Builder alert = new AlertDialog.Builder(requireContext());
                 alert.setTitle(R.string.import_settings);
 
-                alert.setNegativeButton(android.R.string.no, (dialog, which) -> {
+                alert.setNegativeButton(R.string.cancel, (dialog, which) -> {
                     dialog.dismiss();
                     finishImport(importDataUri);
                 });
-                alert.setPositiveButton(getString(R.string.finish), (dialog, which) -> {
+                alert.setPositiveButton(R.string.ok, (dialog, which) -> {
                     dialog.dismiss();
                     manager.loadSharedPreferences(PreferenceManager
                             .getDefaultSharedPreferences(requireContext()));

File: app/src/main/java/org/schabi/newpipe/settings/DownloadSettingsFragment.java
Patch:
@@ -179,7 +179,7 @@ private void showMessageDialog(@StringRes final int title, @StringRes final int
         final AlertDialog.Builder msg = new AlertDialog.Builder(ctx);
         msg.setTitle(title);
         msg.setMessage(message);
-        msg.setPositiveButton(getString(R.string.finish), null);
+        msg.setPositiveButton(getString(R.string.ok), null);
         msg.show();
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -218,7 +218,7 @@ private void showAddItemDialog(final Context c) {
                 .setIcon(R.drawable.place_holder_peertube)
                 .setView(dialogBinding.getRoot())
                 .setNegativeButton(R.string.cancel, null)
-                .setPositiveButton(R.string.finish, (dialog1, which) -> {
+                .setPositiveButton(R.string.ok, (dialog1, which) -> {
                     final String url = dialogBinding.dialogEditText.getText().toString();
                     addInstance(url);
                 })

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -555,7 +555,7 @@ private void showError(@NonNull DownloadMission mission) {
             );
         }
 
-        builder.setNegativeButton(R.string.finish, (dialog, which) -> dialog.cancel())
+        builder.setNegativeButton(R.string.ok, (dialog, which) -> dialog.cancel())
                 .setTitle(mission.storage.getName())
                 .create()
                 .show();

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2765,7 +2765,9 @@ public void playPause() {
             Log.d(TAG, "onPlayPause() called");
         }
 
-        if (getPlayWhenReady()) {
+        if (getPlayWhenReady()
+                // When state is completed (replay button is shown) then (re)play and do not pause
+                && currentState != STATE_COMPLETED) {
             pause();
         } else {
             play();

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2765,7 +2765,9 @@ public void playPause() {
             Log.d(TAG, "onPlayPause() called");
         }
 
-        if (getPlayWhenReady()) {
+        if (getPlayWhenReady()
+                // When state is completed (replay button is shown) then (re)play and do not pause
+                && currentState != STATE_COMPLETED) {
             pause();
         } else {
             play();

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -177,7 +177,8 @@ public void onImportUrl(final String value) {
     }
 
     public void onImportFile() {
-        requestImportFileLauncher.launch(StoredFileHelper.getPicker(activity));
+        // leave */* mime type to support all services with different mime types and file extensions
+        requestImportFileLauncher.launch(StoredFileHelper.getPicker(activity, "*/*"));
     }
 
     private void requestImportFileResult(final ActivityResult result) {

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -74,7 +74,8 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro
         final Preference importDataPreference = requirePreference(R.string.import_data);
         importDataPreference.setOnPreferenceClickListener((Preference p) -> {
             requestImportPathLauncher.launch(
-                    StoredFileHelper.getPicker(requireContext(), getImportExportDataUri()));
+                    StoredFileHelper.getPicker(requireContext(),
+                            ZIP_MIME_TYPE, getImportExportDataUri()));
             return true;
         });
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3037,7 +3037,7 @@ public void selectQueueItem(final PlayQueueItem item) {
     }
 
     private void heldQueueItem(final PlayQueueItem item, final View view) {
-        final Context themeWrapper =
+        final ContextThemeWrapper themeWrapper =
                 new ContextThemeWrapper(context, R.style.DarkPopupMenu);
 
         final PopupMenu popupMenu = new PopupMenu(themeWrapper, view);

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -47,7 +47,8 @@ public enum StreamDialogEntry {
                                 .setUploaderUrl(serviceId, url, result.getUploaderUrl())
                                 .subscribeOn(Schedulers.io()).subscribe();
                         openChannelFragment(fragment, item, result.getUploaderUrl());
-                    }, throwable -> Toast.makeText( // TODO: Open the Error Activity
+                    }, throwable -> Toast.makeText(
+                            // TODO: Open the Error Activity
                             fragment.getContext(),
                             R.string.error_show_channel_details,
                             Toast.LENGTH_SHORT

File: app/src/main/java/org/schabi/newpipe/util/external_communication/TimestampExtractor.java
Patch:
@@ -18,7 +18,8 @@ private TimestampExtractor() {
      * Get's a single timestamp from a matcher.
      *
      * @param timestampMatches The matcher which was created using {@link #TIMESTAMPS_PATTERN}
-     * @param baseText         The text where the pattern was applied to / where the matcher is based upon
+     * @param baseText         The text where the pattern was applied to /
+     *                         where the matcher is based upon
      * @return If a match occurred: a {@link TimestampMatchDTO} filled with information.<br/>
      * If not <code>null</code>.
      */

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -72,7 +72,7 @@ public String transformUrl(final Matcher match, final String url) {
                 }
                 return streamUrl + url.replace(match.group(0), "#timestamp=" + timestamp);
             } catch (final Exception ex) {
-                Log.d(TAG, "Unable to process url='" + url + "' as timestampLink", ex);
+                Log.e(TAG, "Unable to process url='" + url + "' as timestampLink", ex);
                 return url;
             }
         }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -864,7 +864,7 @@ private void checkSelectedDownload(final StoredDirectoryHelper mainStorage,
         final AlertDialog.Builder askDialog = new AlertDialog.Builder(context)
                 .setTitle(R.string.download_dialog_title)
                 .setMessage(msgBody)
-                .setNegativeButton(android.R.string.cancel, null);
+                .setNegativeButton(R.string.cancel, null);
         final StoredFileHelper finalStorage = storage;
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2080,7 +2080,7 @@ && playerIsNotStopped()
     private void showClearingQueueConfirmation(final Runnable onAllow) {
         new AlertDialog.Builder(activity)
                 .setTitle(R.string.clear_queue_confirmation_description)
-                .setNegativeButton(android.R.string.cancel, null)
+                .setNegativeButton(R.string.cancel, null)
                 .setPositiveButton(android.R.string.yes, (dialog, which) -> {
                     onAllow.run();
                     dialog.dismiss();
@@ -2096,7 +2096,7 @@ private void showExternalPlaybackDialog() {
             resolutions[i] = sortedVideoStreams.get(i).getResolution();
         }
         final AlertDialog.Builder builder = new AlertDialog.Builder(activity)
-                .setNegativeButton(android.R.string.cancel, null)
+                .setNegativeButton(R.string.cancel, null)
                 .setNeutralButton(R.string.open_in_browser, (dialog, i) ->
                         ShareUtils.openUrlInBrowser(requireActivity(), url)
                 );

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -177,7 +177,8 @@ public void onImportUrl(final String value) {
     }
 
     public void onImportFile() {
-        requestImportFileLauncher.launch(StoredFileHelper.getPicker(activity));
+        // leave */* mime type to support all services with different mime types and file extensions
+        requestImportFileLauncher.launch(StoredFileHelper.getPicker(activity, "*/*"));
     }
 
     private void requestImportFileResult(final ActivityResult result) {

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -77,7 +77,8 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro
         final Preference importDataPreference = requirePreference(R.string.import_data);
         importDataPreference.setOnPreferenceClickListener((Preference p) -> {
             requestImportPathLauncher.launch(
-                    StoredFileHelper.getPicker(requireContext(), getImportExportDataUri()));
+                    StoredFileHelper.getPicker(requireContext(),
+                            ZIP_MIME_TYPE, getImportExportDataUri()));
             return true;
         });
 

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -664,7 +664,7 @@ public void psContinue(boolean recover) {
      * @return {@code true}, if storage is invalid and cannot be used
      */
     public boolean hasInvalidStorage() {
-        return errCode == ERROR_PROGRESS_LOST || storage == null || storage.isInvalid() || !storage.existsAsFile();
+        return errCode == ERROR_PROGRESS_LOST || storage == null || !storage.existsAsFile();
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java
Patch:
@@ -162,6 +162,9 @@ private void saveCookiesAndFinish() {
             setResult(RESULT_OK);
         }
 
+        // Navigate to blank page (unloads youtube to prevent background playback)
+        recaptchaBinding.reCaptchaWebView.loadUrl("about:blank");
+
         final Intent intent = new Intent(this, org.schabi.newpipe.MainActivity.class);
         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
         NavUtils.navigateUpTo(this, intent);

File: app/src/main/java/org/schabi/newpipe/streams/io/StoredFileHelper.java
Patch:
@@ -285,7 +285,7 @@ public String getTag() {
     }
 
     public boolean existsAsFile() {
-        if (source == null) {
+        if (source == null || (docFile == null && ioFile == null)) {
             return false;
         }
 

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -664,7 +664,7 @@ public void psContinue(boolean recover) {
      * @return {@code true}, if storage is invalid and cannot be used
      */
     public boolean hasInvalidStorage() {
-        return errCode == ERROR_PROGRESS_LOST || storage == null || storage.isInvalid() || !storage.existsAsFile();
+        return errCode == ERROR_PROGRESS_LOST || storage == null || !storage.existsAsFile();
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -813,7 +813,7 @@ public void selectAndLoadVideo(final int newServiceId,
                                    @NonNull final String newTitle,
                                    @Nullable final PlayQueue newQueue) {
         if (isPlayerAvailable() && newQueue != null && playQueue != null
-                && !Objects.equals(newQueue.getItem(), playQueue.getItem())) {
+                && playQueue.getItem() != null && !playQueue.getItem().getUrl().equals(newUrl)) {
             // Preloading can be disabled since playback is surely being replaced.
             player.disablePreloadingOfCurrentTrack();
         }

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -589,9 +589,9 @@ private void openDownloadDialog() {
                     downloadDialog.setVideoStreams(sortedVideoStreams);
                     downloadDialog.setAudioStreams(result.getAudioStreams());
                     downloadDialog.setSelectedVideoStream(selectedVideoStreamIndex);
+                    downloadDialog.setOnDismissListener(dialog -> finish());
                     downloadDialog.show(fm, "downloadDialog");
                     fm.executePendingTransactions();
-                    downloadDialog.requireDialog().setOnDismissListener(dialog -> finish());
                 }, throwable ->
                         showUnsupportedUrlDialog(currentUrl)));
     }

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -68,6 +68,7 @@
 
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.util.ThemeHelper.shouldUseGridLayout;
 
 public class LocalPlaylistFragment extends BaseLocalListFragment<List<PlaylistStreamEntry>, Void> {
     // Save the list 10 seconds after the last change occurred
@@ -678,7 +679,7 @@ private void saveImmediate() {
 
     private ItemTouchHelper.SimpleCallback getItemTouchCallback() {
         int directions = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
-        if (isGridLayout()) {
+        if (shouldUseGridLayout(requireContext())) {
             directions |= ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;
         }
         return new ItemTouchHelper.SimpleCallback(directions,

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -68,6 +68,7 @@
 
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.util.ThemeHelper.shouldUseGridLayout;
 
 public class LocalPlaylistFragment extends BaseLocalListFragment<List<PlaylistStreamEntry>, Void> {
     // Save the list 10 seconds after the last change occurred
@@ -678,7 +679,7 @@ private void saveImmediate() {
 
     private ItemTouchHelper.SimpleCallback getItemTouchCallback() {
         int directions = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
-        if (isGridLayout()) {
+        if (shouldUseGridLayout(requireContext())) {
             directions |= ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;
         }
         return new ItemTouchHelper.SimpleCallback(directions,

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -68,6 +68,7 @@
 
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.util.ThemeHelper.shouldUseGridLayout;
 
 public class LocalPlaylistFragment extends BaseLocalListFragment<List<PlaylistStreamEntry>, Void> {
     // Save the list 10 seconds after the last change occurred
@@ -678,7 +679,7 @@ private void saveImmediate() {
 
     private ItemTouchHelper.SimpleCallback getItemTouchCallback() {
         int directions = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
-        if (isGridLayout()) {
+        if (shouldUseGridLayout(requireContext())) {
             directions |= ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;
         }
         return new ItemTouchHelper.SimpleCallback(directions,

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -68,6 +68,7 @@
 
 import static org.schabi.newpipe.extractor.utils.Utils.isNullOrEmpty;
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.util.ThemeHelper.shouldUseGridLayout;
 
 public class LocalPlaylistFragment extends BaseLocalListFragment<List<PlaylistStreamEntry>, Void> {
     // Save the list 10 seconds after the last change occurred
@@ -678,7 +679,7 @@ private void saveImmediate() {
 
     private ItemTouchHelper.SimpleCallback getItemTouchCallback() {
         int directions = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
-        if (isGridLayout()) {
+        if (shouldUseGridLayout(requireContext())) {
             directions |= ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;
         }
         return new ItemTouchHelper.SimpleCallback(directions,

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -823,7 +823,7 @@ private void openMiniPlayerUponPlayerStarted() {
             return;
         }
 
-        if (PlayerHolder.isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayerOpen()) {
             // if the player is already open, no need for a broadcast receiver
             openMiniPlayerIfMissing();
         } else {

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -453,7 +453,7 @@ private List<AdapterChoiceItem> getChoicesForService(final StreamingService serv
                 returnList.add(showInfo);
                 returnList.add(videoPlayer);
             } else {
-                final MainPlayer.PlayerType playerType = PlayerHolder.getType();
+                final MainPlayer.PlayerType playerType = PlayerHolder.getInstance().getType();
                 if (capabilities.contains(VIDEO)
                         && PlayerHelper.isAutoplayAllowedByUser(context)
                         && playerType == null || playerType == MainPlayer.PlayerType.VIDEO) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -353,7 +353,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
 
         final List<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (item.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -144,7 +144,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (item.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -340,7 +340,7 @@ private void showStreamDialog(final StreamStatisticsEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (infoItem.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -749,7 +749,7 @@ protected void showStreamItemDialog(final PlaylistStreamEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (infoItem.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -857,7 +857,7 @@ public void onPlaybackShutdown() {
             Log.d(TAG, "onPlaybackShutdown() called");
         }
         // destroys the service, which in turn will destroy the player
-        service.onDestroy();
+        service.stopService();
     }
 
     public void smoothStopPlayer() {
@@ -1097,7 +1097,7 @@ private void onBroadcastReceived(final Intent intent) {
                 pause();
                 break;
             case ACTION_CLOSE:
-                service.onDestroy();
+                service.stopService();
                 break;
             case ACTION_PLAY_PAUSE:
                 playPause();
@@ -1498,7 +1498,7 @@ private void end() {
                         Objects.requireNonNull(windowManager)
                                 .removeView(closeOverlayBinding.getRoot());
                         closeOverlayBinding = null;
-                        service.onDestroy();
+                        service.stopService();
                     }
                 }).start();
     }

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -350,13 +350,13 @@ public static void openVideoDetailFragment(@NonNull final Context context,
                                                final boolean switchingPlayers) {
 
         final boolean autoPlay;
-        @Nullable final MainPlayer.PlayerType playerType = PlayerHolder.getType();
+        @Nullable final MainPlayer.PlayerType playerType = PlayerHolder.getInstance().getType();
         if (playerType == null) {
             // no player open
             autoPlay = PlayerHelper.isAutoplayAllowedByUser(context);
         } else if (switchingPlayers) {
             // switching player to main player
-            autoPlay = PlayerHolder.isPlaying(); // keep play/pause state
+            autoPlay = PlayerHolder.getInstance().isPlaying(); // keep play/pause state
         } else if (playerType == MainPlayer.PlayerType.VIDEO) {
             // opening new stream while already playing in main player
             autoPlay = PlayerHelper.isAutoplayAllowedByUser(context);

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -39,7 +39,7 @@ public enum StreamDialogEntry {
      * Info: Add this entry within showStreamDialog.
      */
     enqueue(R.string.enqueue_stream, (fragment, item) -> {
-        final MainPlayer.PlayerType type = PlayerHolder.getType();
+        final MainPlayer.PlayerType type = PlayerHolder.getInstance().getType();
 
         if (type == AUDIO) {
             NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -21,6 +21,7 @@
 import com.nostra13.universalimageloader.core.ImageLoader;
 
 import org.schabi.newpipe.MainActivity;
+import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.RouterActivity;
 import org.schabi.newpipe.about.AboutActivity;
@@ -608,6 +609,7 @@ public static void playWithKore(final Context context, final Uri videoURL) {
      * @param activity the activity to finish
      */
     public static void restartApp(final Activity activity) {
+        NewPipeDatabase.close();
         activity.finishAffinity();
         final Intent intent = new Intent(activity, MainActivity.class);
         activity.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -21,6 +21,7 @@
 import com.nostra13.universalimageloader.core.ImageLoader;
 
 import org.schabi.newpipe.MainActivity;
+import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.RouterActivity;
 import org.schabi.newpipe.about.AboutActivity;
@@ -608,6 +609,7 @@ public static void playWithKore(final Context context, final Uri videoURL) {
      * @param activity the activity to finish
      */
     public static void restartApp(final Activity activity) {
+        NewPipeDatabase.getInstance(activity).close();
         activity.finishAffinity();
         final Intent intent = new Intent(activity, MainActivity.class);
         activity.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -823,7 +823,7 @@ private void openMiniPlayerUponPlayerStarted() {
             return;
         }
 
-        if (PlayerHolder.isPlayerOpen()) {
+        if (PlayerHolder.getInstance().isPlayerOpen()) {
             // if the player is already open, no need for a broadcast receiver
             openMiniPlayerIfMissing();
         } else {

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -453,7 +453,7 @@ private List<AdapterChoiceItem> getChoicesForService(final StreamingService serv
                 returnList.add(showInfo);
                 returnList.add(videoPlayer);
             } else {
-                final MainPlayer.PlayerType playerType = PlayerHolder.getType();
+                final MainPlayer.PlayerType playerType = PlayerHolder.getInstance().getType();
                 if (capabilities.contains(VIDEO)
                         && PlayerHelper.isAutoplayAllowedByUser(context)
                         && playerType == null || playerType == MainPlayer.PlayerType.VIDEO) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -353,7 +353,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
 
         final List<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (item.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -144,7 +144,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (item.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -340,7 +340,7 @@ private void showStreamDialog(final StreamStatisticsEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (infoItem.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -749,7 +749,7 @@ protected void showStreamItemDialog(final PlaylistStreamEntry item) {
 
         final ArrayList<StreamDialogEntry> entries = new ArrayList<>();
 
-        if (PlayerHolder.getType() != null) {
+        if (PlayerHolder.getInstance().getType() != null) {
             entries.add(StreamDialogEntry.enqueue);
         }
         if (infoItem.getStreamType() == StreamType.AUDIO_STREAM) {

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -349,13 +349,13 @@ public static void openVideoDetailFragment(@NonNull final Context context,
                                                final boolean switchingPlayers) {
 
         final boolean autoPlay;
-        @Nullable final MainPlayer.PlayerType playerType = PlayerHolder.getType();
+        @Nullable final MainPlayer.PlayerType playerType = PlayerHolder.getInstance().getType();
         if (playerType == null) {
             // no player open
             autoPlay = PlayerHelper.isAutoplayAllowedByUser(context);
         } else if (switchingPlayers) {
             // switching player to main player
-            autoPlay = PlayerHolder.isPlaying(); // keep play/pause state
+            autoPlay = PlayerHolder.getInstance().isPlaying(); // keep play/pause state
         } else if (playerType == MainPlayer.PlayerType.VIDEO) {
             // opening new stream while already playing in main player
             autoPlay = PlayerHelper.isAutoplayAllowedByUser(context);

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -39,7 +39,7 @@ public enum StreamDialogEntry {
      * Info: Add this entry within showStreamDialog.
      */
     enqueue(R.string.enqueue_stream, (fragment, item) -> {
-        final MainPlayer.PlayerType type = PlayerHolder.getType();
+        final MainPlayer.PlayerType type = PlayerHolder.getInstance().getType();
 
         if (type == AUDIO) {
             NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -192,13 +192,13 @@ private void addTab(final int tabId) {
                 final SelectKioskFragment selectKioskFragment = new SelectKioskFragment();
                 selectKioskFragment.setOnSelectedListener((serviceId, kioskId, kioskName) ->
                         addTab(new Tab.KioskTab(serviceId, kioskId)));
-                selectKioskFragment.show(requireFragmentManager(), "select_kiosk");
+                selectKioskFragment.show(getParentFragmentManager(), "select_kiosk");
                 return;
             case CHANNEL:
                 final SelectChannelFragment selectChannelFragment = new SelectChannelFragment();
                 selectChannelFragment.setOnSelectedListener((serviceId, url, name) ->
                         addTab(new Tab.ChannelTab(serviceId, url, name)));
-                selectChannelFragment.show(requireFragmentManager(), "select_channel");
+                selectChannelFragment.show(getParentFragmentManager(), "select_channel");
                 return;
             case PLAYLIST:
                 final SelectPlaylistFragment selectPlaylistFragment = new SelectPlaylistFragment();
@@ -215,7 +215,7 @@ public void onRemotePlaylistSelected(
                                 addTab(new Tab.PlaylistTab(serviceId, url, name));
                             }
                         });
-                selectPlaylistFragment.show(requireFragmentManager(), "select_playlist");
+                selectPlaylistFragment.show(getParentFragmentManager(), "select_playlist");
                 return;
             default:
                 addTab(type.getTab());

File: app/src/main/java/org/schabi/newpipe/player/helper/LoadController.java
Patch:
@@ -32,7 +32,8 @@ private LoadController(final int initialPlaybackBufferMs,
 
         final DefaultLoadControl.Builder builder = new DefaultLoadControl.Builder();
         builder.setBufferDurationsMs(minimumPlaybackBufferMs, optimalPlaybackBufferMs,
-                initialPlaybackBufferMs, initialPlaybackBufferMs);
+                initialPlaybackBufferMs,
+                DefaultLoadControl.DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS);
         internalLoadControl = builder.build();
     }
 

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -69,7 +69,7 @@
 import org.schabi.newpipe.util.ListHelper;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.PermissionHelper;
-import org.schabi.newpipe.util.ShareUtils;
+import org.schabi.newpipe.util.external_communication.ShareUtils;
 import org.schabi.newpipe.util.ThemeHelper;
 import org.schabi.newpipe.util.urlfinder.UrlFinder;
 import org.schabi.newpipe.views.FocusOverlayView;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -33,7 +33,7 @@
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.info_list.InfoListAdapter;
 import org.schabi.newpipe.player.helper.PlayerHolder;
-import org.schabi.newpipe.util.KoreUtil;
+import org.schabi.newpipe.util.external_communication.KoreUtils;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
 import org.schabi.newpipe.util.StateSaver;
@@ -371,7 +371,7 @@ protected void showStreamDialog(final StreamInfoItem item) {
             ));
         }
         entries.add(StreamDialogEntry.open_in_browser);
-        if (KoreUtil.shouldShowPlayWithKodi(context, item.getServiceId())) {
+        if (KoreUtils.shouldShowPlayWithKodi(context, item.getServiceId())) {
             entries.add(StreamDialogEntry.play_with_kodi);
         }
         if (!isNullOrEmpty(item.getUploaderUrl())) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -43,7 +43,7 @@
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
-import org.schabi.newpipe.util.ShareUtils;
+import org.schabi.newpipe.util.external_communication.ShareUtils;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import java.util.ArrayList;
@@ -203,7 +203,8 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 break;
             case R.id.menu_item_share:
                 if (currentInfo != null) {
-                    ShareUtils.shareText(requireContext(), name, currentInfo.getOriginalUrl());
+                    ShareUtils.shareText(requireContext(), name, currentInfo.getOriginalUrl(),
+                            currentInfo.getAvatarUrl());
                 }
                 break;
             default:

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -24,7 +24,7 @@
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
-import org.schabi.newpipe.util.ShareUtils;
+import org.schabi.newpipe.util.external_communication.ShareUtils;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -36,7 +36,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
 import org.schabi.newpipe.settings.HistorySettingsFragment;
-import org.schabi.newpipe.util.KoreUtil;
+import org.schabi.newpipe.util.external_communication.KoreUtils;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
 import org.schabi.newpipe.util.StreamDialogEntry;
@@ -359,7 +359,7 @@ private void showStreamDialog(final StreamStatisticsEntry item) {
             ));
         }
         entries.add(StreamDialogEntry.open_in_browser);
-        if (KoreUtil.shouldShowPlayWithKodi(context, infoItem.getServiceId())) {
+        if (KoreUtils.shouldShowPlayWithKodi(context, infoItem.getServiceId())) {
             entries.add(StreamDialogEntry.play_with_kodi);
         }
 

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -44,7 +44,7 @@
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
-import org.schabi.newpipe.util.KoreUtil;
+import org.schabi.newpipe.util.external_communication.KoreUtils;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
@@ -770,7 +770,7 @@ protected void showStreamItemDialog(final PlaylistStreamEntry item) {
             ));
         }
         entries.add(StreamDialogEntry.open_in_browser);
-        if (KoreUtil.shouldShowPlayWithKodi(context, infoItem.getServiceId())) {
+        if (KoreUtils.shouldShowPlayWithKodi(context, infoItem.getServiceId())) {
             entries.add(StreamDialogEntry.play_with_kodi);
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -47,7 +47,7 @@
 
 import static org.schabi.newpipe.player.helper.PlayerHelper.formatSpeed;
 import static org.schabi.newpipe.util.Localization.assureCorrectAppLanguage;
-import static org.schabi.newpipe.util.ShareUtils.shareText;
+import static org.schabi.newpipe.util.external_communication.ShareUtils.shareText;
 
 public final class PlayQueueActivity extends AppCompatActivity
         implements PlayerEventListener, SeekBar.OnSeekBarChangeListener,
@@ -313,7 +313,8 @@ private void buildItemPopupMenu(final PlayQueueItem item, final View view) {
         final MenuItem share = popupMenu.getMenu().add(RECYCLER_ITEM_POPUP_MENU_GROUP_ID, 3,
                 Menu.NONE, R.string.share);
         share.setOnMenuItemClickListener(menuItem -> {
-            shareText(getApplicationContext(), item.getTitle(), item.getUrl());
+            shareText(getApplicationContext(), item.getTitle(), item.getUrl(),
+                    item.getThumbnailUrl());
             return true;
         });
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -53,10 +53,11 @@
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 import org.schabi.newpipe.settings.SettingsActivity;
+import org.schabi.newpipe.util.external_communication.ShareUtils;
 
 import java.util.ArrayList;
 
-import static org.schabi.newpipe.util.ShareUtils.installApp;
+import static org.schabi.newpipe.util.external_communication.ShareUtils.installApp;
 
 public final class NavigationHelper {
     public static final String MAIN_FRAGMENT_TAG = "main_fragment_tag";
@@ -252,7 +253,7 @@ public static void playOnExternalPlayer(final Context context, final String name
 
     public static void resolveActivityOrAskToInstall(final Context context, final Intent intent) {
         if (intent.resolveActivity(context.getPackageManager()) != null) {
-            ShareUtils.openIntentInApp(context, intent);
+            ShareUtils.openIntentInApp(context, intent, false);
         } else {
             if (context instanceof Activity) {
                 new AlertDialog.Builder(context)

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1546,8 +1546,8 @@ public void handleResult(@NonNull final StreamInfo info) {
                 .getDefaultResolutionIndex(activity, sortedVideoStreams);
         updateProgressInfo(info);
         initThumbnailViews(info);
-        disposables.add(showMetaInfoInTextView(info.getMetaInfo(), binding.detailMetaInfoTextView,
-                binding.detailMetaInfoSeparator));
+        showMetaInfoInTextView(info.getMetaInfo(), binding.detailMetaInfoTextView,
+                binding.detailMetaInfoSeparator, disposables);
 
         if (player == null || player.isStopped()) {
             updateOverlayData(info.getName(), info.getUploaderName(), info.getThumbnailUrl());

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -234,7 +234,7 @@ private void showUnsupportedUrlDialog(final String url) {
                 .setPositiveButton(R.string.open_in_browser,
                         (dialog, which) -> ShareUtils.openUrlInBrowser(this, url))
                 .setNegativeButton(R.string.share,
-                        (dialog, which) -> ShareUtils.shareText(this, "", url, "")) //no subject
+                        (dialog, which) -> ShareUtils.shareText(this, "", url)) // no subject
                 .setNeutralButton(R.string.cancel, null)
                 .setOnDismissListener(dialog -> finish())
                 .show();

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -195,7 +195,8 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 onBackPressed();
                 return true;
             case R.id.menu_item_share_error:
-                ShareUtils.shareText(this, getString(R.string.error_report_title), buildJson());
+                ShareUtils.shareText(getApplicationContext(),
+                        getString(R.string.error_report_title), buildJson());
                 return true;
             default:
                 return false;

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -234,7 +234,7 @@ private void showUnsupportedUrlDialog(final String url) {
                 .setPositiveButton(R.string.open_in_browser,
                         (dialog, which) -> ShareUtils.openUrlInBrowser(this, url))
                 .setNegativeButton(R.string.share,
-                        (dialog, which) -> ShareUtils.shareText(this, "", url, false)) //no subject
+                        (dialog, which) -> ShareUtils.shareText(this, "", url, "")) //no subject
                 .setNeutralButton(R.string.cancel, null)
                 .setOnDismissListener(dialog -> finish())
                 .show();

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -454,8 +454,8 @@ public void onClick(final View v) {
                 break;
             case R.id.detail_controls_share:
                 if (currentInfo != null) {
-                    ShareUtils.shareText(requireContext(),
-                            currentInfo.getName(), currentInfo.getUrl());
+                    ShareUtils.shareText(requireContext(), currentInfo.getName(),
+                            currentInfo.getUrl(), currentInfo.getThumbnailUrl());
                 }
                 break;
             case R.id.detail_controls_open_in_browser:

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -203,7 +203,8 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 break;
             case R.id.menu_item_share:
                 if (currentInfo != null) {
-                    ShareUtils.shareText(requireContext(), name, currentInfo.getOriginalUrl());
+                    ShareUtils.shareText(requireContext(), name, currentInfo.getOriginalUrl(),
+                            currentInfo.getAvatarUrl());
                 }
                 break;
             default:

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -251,7 +251,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 ShareUtils.openUrlInBrowser(requireContext(), url);
                 break;
             case R.id.menu_item_share:
-                ShareUtils.shareText(requireContext(), name, url);
+                ShareUtils.shareText(requireContext(), name, url, currentInfo.getThumbnailUrl());
                 break;
             case R.id.menu_item_bookmark:
                 onBookmarkClicked();

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -313,7 +313,8 @@ private void buildItemPopupMenu(final PlayQueueItem item, final View view) {
         final MenuItem share = popupMenu.getMenu().add(RECYCLER_ITEM_POPUP_MENU_GROUP_ID, 3,
                 Menu.NONE, R.string.share);
         share.setOnMenuItemClickListener(menuItem -> {
-            shareText(getApplicationContext(), item.getTitle(), item.getUrl());
+            shareText(getApplicationContext(), item.getTitle(), item.getUrl(),
+                    item.getThumbnailUrl());
             return true;
         });
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3593,7 +3593,8 @@ public void onClick(final View v) {
         } else if (v.getId() == binding.moreOptionsButton.getId()) {
             onMoreOptionsClicked();
         } else if (v.getId() == binding.share.getId()) {
-            ShareUtils.shareText(context, getVideoTitle(), getVideoUrlAtCurrentTime());
+            ShareUtils.shareText(context, getVideoTitle(), getVideoUrlAtCurrentTime(),
+                            currentItem.getThumbnailUrl());
         } else if (v.getId() == binding.playWithKodi.getId()) {
             onPlayWithKodiClicked();
         } else if (v.getId() == binding.openInBrowser.getId()) {

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -88,7 +88,8 @@ public enum StreamDialogEntry {
     }),
 
     share(R.string.share, (fragment, item) ->
-            ShareUtils.shareText(fragment.getContext(), item.getName(), item.getUrl())),
+            ShareUtils.shareText(fragment.getContext(), item.getName(), item.getUrl(),
+                    item.getThumbnailUrl())),
 
     open_in_browser(R.string.open_in_browser, (fragment, item) ->
             ShareUtils.openUrlInBrowser(fragment.getContext(), item.getUrl()));

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -234,7 +234,7 @@ private void showUnsupportedUrlDialog(final String url) {
                 .setPositiveButton(R.string.open_in_browser,
                         (dialog, which) -> ShareUtils.openUrlInBrowser(this, url))
                 .setNegativeButton(R.string.share,
-                        (dialog, which) -> ShareUtils.shareText(this, "", url)) // no subject
+                        (dialog, which) -> ShareUtils.shareText(this, "", url, false)) //no subject
                 .setNeutralButton(R.string.cancel, null)
                 .setOnDismissListener(dialog -> finish())
                 .show();

File: app/src/main/java/org/schabi/newpipe/util/CommentTextOnTouchListener.java
Patch:
@@ -47,7 +47,7 @@ public boolean onTouch(final View v, final MotionEvent event) {
                     if (action == MotionEvent.ACTION_UP) {
                         boolean handled = false;
                         if (link[0] instanceof URLSpan) {
-                            handled = URLHandler.canHandleUrl(v.getContext(),
+                            handled = URLHandler.handleUrl(v.getContext(),
                                     ((URLSpan) link[0]).getURL(), 1);
                         }
                         if (!handled) {

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -252,7 +252,7 @@ public static void playOnExternalPlayer(final Context context, final String name
 
     public static void resolveActivityOrAskToInstall(final Context context, final Intent intent) {
         if (intent.resolveActivity(context.getPackageManager()) != null) {
-            ShareUtils.openIntentInApp(context, intent);
+            ShareUtils.openIntentInApp(context, intent, false);
         } else {
             if (context instanceof Activity) {
                 new AlertDialog.Builder(context)

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -717,7 +717,7 @@ private void prepareSelectedDownload() {
             }
 
             startActivityForResult(StoredFileHelper.getNewPicker(context, startPath,
-                    filenameTmp), REQUEST_DOWNLOAD_SAVE_AS);
+                    filenameTmp, mimeTmp), REQUEST_DOWNLOAD_SAVE_AS);
 
             return;
         }

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -66,7 +66,8 @@ public void onCreatePreferences(final Bundle savedInstanceState, final String ro
         exportDataPreference.setOnPreferenceClickListener((final Preference p) -> {
             final SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.US);
             startActivityForResult(StoredFileHelper.getNewPicker(getContext(), null,
-                    "NewPipeData-" + sdf.format(new Date()) + ".zip"), REQUEST_EXPORT_PATH);
+                    "NewPipeData-" + sdf.format(new Date()) + ".zip", "application/zip"),
+                    REQUEST_EXPORT_PATH);
             return true;
         });
 

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -256,7 +256,7 @@ private void recoverMission(@NonNull DownloadMission mission) {
         }
 
         startActivityForResult(StoredFileHelper.getNewPicker(mContext, startPath,
-                mission.storage.getName()), REQUEST_DOWNLOAD_SAVE_AS);
+                mission.storage.getName(), mission.storage.getType()), REQUEST_DOWNLOAD_SAVE_AS);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3029,6 +3029,7 @@ private void onSegmentsClicked() {
         buildSegments();
 
         binding.itemsListHeaderTitle.setVisibility(View.VISIBLE);
+        binding.itemsListHeaderDuration.setVisibility(View.GONE);
         binding.shuffleButton.setVisibility(View.GONE);
         binding.repeatButton.setVisibility(View.GONE);
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3029,6 +3029,7 @@ private void onSegmentsClicked() {
         buildSegments();
 
         binding.itemsListHeaderTitle.setVisibility(View.VISIBLE);
+        binding.itemsListHeaderDuration.setVisibility(View.GONE);
         binding.shuffleButton.setVisibility(View.GONE);
         binding.repeatButton.setVisibility(View.GONE);
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -596,6 +596,7 @@ public static void playWithKore(final Context context, final Uri videoURL) {
         final Intent intent = new Intent(Intent.ACTION_VIEW);
         intent.setPackage(context.getString(R.string.kore_package));
         intent.setData(videoURL);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(intent);
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.widget.PopupMenu;
 import android.widget.SeekBar;
 
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -456,6 +457,7 @@ public void onPlaybackParameterChanged(final float playbackTempo, final float pl
                                            final boolean playbackSkipSilence) {
         if (player != null) {
             player.setPlaybackParameters(playbackTempo, playbackPitch, playbackSkipSilence);
+            onPlaybackParameterChanged(player.getPlaybackParameters());
         }
     }
 
@@ -639,7 +641,7 @@ private void onPlayModeChanged(final int repeatMode, final boolean shuffled) {
         queueControlBinding.controlShuffle.setImageAlpha(shuffleAlpha);
     }
 
-    private void onPlaybackParameterChanged(final PlaybackParameters parameters) {
+    private void onPlaybackParameterChanged(@Nullable final PlaybackParameters parameters) {
         if (parameters != null) {
             if (menu != null && player != null) {
                 final MenuItem item = menu.findItem(R.id.action_playback_speed);

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -596,6 +596,7 @@ public static void playWithKore(final Context context, final Uri videoURL) {
         final Intent intent = new Intent(Intent.ACTION_VIEW);
         intent.setPackage(context.getString(R.string.kore_package));
         intent.setData(videoURL);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(intent);
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/PlayQueueActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.widget.PopupMenu;
 import android.widget.SeekBar;
 
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -456,6 +457,7 @@ public void onPlaybackParameterChanged(final float playbackTempo, final float pl
                                            final boolean playbackSkipSilence) {
         if (player != null) {
             player.setPlaybackParameters(playbackTempo, playbackPitch, playbackSkipSilence);
+            onPlaybackParameterChanged(player.getPlaybackParameters());
         }
     }
 
@@ -639,7 +641,7 @@ private void onPlayModeChanged(final int repeatMode, final boolean shuffled) {
         queueControlBinding.controlShuffle.setImageAlpha(shuffleAlpha);
     }
 
-    private void onPlaybackParameterChanged(final PlaybackParameters parameters) {
+    private void onPlaybackParameterChanged(@Nullable final PlaybackParameters parameters) {
         if (parameters != null) {
             if (menu != null && player != null) {
                 final MenuItem item = menu.findItem(R.id.action_playback_speed);

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -929,20 +929,20 @@ private void initTabs() {
 
         if (showRelatedItems && binding.relatedItemsLayout == null) {
             // temp empty fragment. will be updated in handleResult
-            pageAdapter.addFragment(new EmptyFragment(false), RELATED_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(false), RELATED_TAB_TAG);
             tabIcons.add(R.drawable.ic_art_track);
             tabContentDescriptions.add(R.string.related_items_tab_description);
         }
 
         if (showDescription) {
             // temp empty fragment. will be updated in handleResult
-            pageAdapter.addFragment(new EmptyFragment(false), DESCRIPTION_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(false), DESCRIPTION_TAB_TAG);
             tabIcons.add(R.drawable.ic_description);
             tabContentDescriptions.add(R.string.description_tab_description);
         }
 
         if (pageAdapter.getCount() == 0) {
-            pageAdapter.addFragment(new EmptyFragment(true), EMPTY_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(true), EMPTY_TAB_TAG);
         }
         pageAdapter.notifyDataSetUpdate();
 

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -191,7 +191,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
     @Override
     public boolean onOptionsItemSelected(final MenuItem item) {
         switch (item.getItemId()) {
-            case R.id.home:
+            case android.R.id.home:
                 onBackPressed();
                 return true;
             case R.id.menu_item_share_error:

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -191,7 +191,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
     @Override
     public boolean onOptionsItemSelected(final MenuItem item) {
         switch (item.getItemId()) {
-            case R.id.home:
+            case android.R.id.home:
                 onBackPressed();
                 return true;
             case R.id.menu_item_share_error:

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -497,8 +497,8 @@ private void initPlayer(final boolean playOnReady) {
         // enable media tunneling
         if (DEBUG && PreferenceManager.getDefaultSharedPreferences(context)
                 .getBoolean(context.getString(R.string.disable_media_tunneling_key), false)) {
-            Log.d(TAG, "[" + Util.DEVICE_DEBUG_INFO + "] " +
-                    "media tunneling disabled in debug preferences");
+            Log.d(TAG, "[" + Util.DEVICE_DEBUG_INFO + "] "
+                    + "media tunneling disabled in debug preferences");
         } else if (DeviceUtils.shouldSupportMediaTunneling()) {
             trackSelector.setParameters(
                     trackSelector.buildUponParameters().setTunnelingEnabled(true));

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -929,20 +929,20 @@ private void initTabs() {
 
         if (showRelatedItems && binding.relatedItemsLayout == null) {
             // temp empty fragment. will be updated in handleResult
-            pageAdapter.addFragment(new EmptyFragment(false), RELATED_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(false), RELATED_TAB_TAG);
             tabIcons.add(R.drawable.ic_art_track);
             tabContentDescriptions.add(R.string.related_items_tab_description);
         }
 
         if (showDescription) {
             // temp empty fragment. will be updated in handleResult
-            pageAdapter.addFragment(new EmptyFragment(false), DESCRIPTION_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(false), DESCRIPTION_TAB_TAG);
             tabIcons.add(R.drawable.ic_description);
             tabContentDescriptions.add(R.string.description_tab_description);
         }
 
         if (pageAdapter.getCount() == 0) {
-            pageAdapter.addFragment(new EmptyFragment(true), EMPTY_TAB_TAG);
+            pageAdapter.addFragment(EmptyFragment.newInstance(true), EMPTY_TAB_TAG);
         }
         pageAdapter.notifyDataSetUpdate();
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -297,7 +297,7 @@ public static long getPreferredCacheSize() {
     }
 
     public static long getPreferredFileSize() {
-        return 512 * 1024L;
+        return 2 * 1024 * 1024L; // ExoPlayer CacheDataSink.MIN_RECOMMENDED_FRAGMENT_SIZE
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -372,7 +372,7 @@ private void showDialog(final List<AdapterChoiceItem> choices) {
             final RadioButton radioButton = ListRadioIconItemBinding.inflate(inflater).getRoot();
             radioButton.setText(item.description);
             TextViewCompat.setCompoundDrawablesRelativeWithIntrinsicBounds(radioButton,
-                    AppCompatResources.getDrawable(getApplicationContext(), item.icon),
+                    AppCompatResources.getDrawable(themeWrapperContext, item.icon),
                     null, null, null);
             radioButton.setChecked(false);
             radioButton.setId(id++);

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2077,6 +2077,7 @@ private void onBuffering() {
             Log.d(TAG, "onBuffering() called");
         }
         binding.loadingPanel.setBackgroundColor(Color.TRANSPARENT);
+        binding.loadingPanel.setVisibility(View.VISIBLE);
 
         binding.getRoot().setKeepScreenOn(true);
 

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -372,7 +372,7 @@ private void showDialog(final List<AdapterChoiceItem> choices) {
             final RadioButton radioButton = ListRadioIconItemBinding.inflate(inflater).getRoot();
             radioButton.setText(item.description);
             TextViewCompat.setCompoundDrawablesRelativeWithIntrinsicBounds(radioButton,
-                    AppCompatResources.getDrawable(getApplicationContext(), item.icon),
+                    AppCompatResources.getDrawable(themeWrapperContext, item.icon),
                     null, null, null);
             radioButton.setChecked(false);
             radioButton.setId(id++);

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -2077,6 +2077,7 @@ private void onBuffering() {
             Log.d(TAG, "onBuffering() called");
         }
         binding.loadingPanel.setBackgroundColor(Color.TRANSPARENT);
+        binding.loadingPanel.setVisibility(View.VISIBLE);
 
         binding.getRoot().setKeepScreenOn(true);
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -394,8 +394,7 @@ private void initToolbar(final Toolbar toolbar) {
         }
 
         toolbar.setTitle(R.string.download_dialog_title);
-        toolbar.setNavigationIcon(
-            ThemeHelper.resolveResourceIdFromAttr(requireContext(), R.attr.ic_arrow_back));
+        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
         toolbar.inflateMenu(R.menu.dialog_url);
         toolbar.setNavigationOnClickListener(v -> requireDialog().dismiss());
         toolbar.setNavigationContentDescription(R.string.cancel);

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -137,6 +137,8 @@ private static void reportErrorInSnackbar(final Context context,
     protected void onCreate(final Bundle savedInstanceState) {
         assureCorrectAppLanguage(this);
         super.onCreate(savedInstanceState);
+
+        ThemeHelper.setDayNightMode(this);
         ThemeHelper.setTheme(this);
 
         activityErrorBinding = ActivityErrorBinding.inflate(getLayoutInflater());

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -487,6 +487,9 @@ private void showSearchOnStart() {
                     + lastSearchedString);
         }
         searchEditText.setText(searchString);
+        if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {
+            searchEditText.setHintTextColor(searchEditText.getTextColors().withAlpha(128));
+        }
 
         if (TextUtils.isEmpty(searchString) || TextUtils.isEmpty(searchEditText.getText())) {
             searchToolbarContainer.setTranslationX(100);

File: app/src/main/java/org/schabi/newpipe/local/subscription/ImportConfirmationDialog.java
Patch:
@@ -11,7 +11,6 @@
 import androidx.fragment.app.Fragment;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.util.ThemeHelper;
 
 import icepick.Icepick;
 import icepick.State;
@@ -41,7 +40,7 @@ public void setResultServiceIntent(final Intent resultServiceIntent) {
     @Override
     public Dialog onCreateDialog(@Nullable final Bundle savedInstanceState) {
         assureCorrectAppLanguage(getContext());
-        return new AlertDialog.Builder(getContext(), ThemeHelper.getDialogTheme(getContext()))
+        return new AlertDialog.Builder(getContext())
                 .setMessage(R.string.import_network_expensive_warning)
                 .setCancelable(true)
                 .setNegativeButton(R.string.cancel, null)

File: app/src/main/java/org/schabi/newpipe/player/NotificationConstants.java
Patch:
@@ -50,11 +50,11 @@ private NotificationConstants() { }
             R.drawable.exo_icon_fastforward,
             R.drawable.exo_icon_previous,
             R.drawable.exo_icon_next,
-            R.drawable.ic_pause_white_24dp,
-            R.drawable.ic_hourglass_top_white_24dp,
+            R.drawable.ic_pause,
+            R.drawable.ic_hourglass_top,
             R.drawable.exo_icon_repeat_all,
             R.drawable.exo_icon_shuffle_on,
-            R.drawable.ic_close_white_24dp,
+            R.drawable.ic_close,
     };
 
 

File: app/src/main/java/org/schabi/newpipe/player/NotificationUtil.java
Patch:
@@ -273,14 +273,14 @@ private NotificationCompat.Action getAction(
                         || player.getCurrentState() == Player.STATE_BLOCKED
                         || player.getCurrentState() == Player.STATE_BUFFERING) {
                     // null intent -> show hourglass icon that does nothing when clicked
-                    return new NotificationCompat.Action(R.drawable.ic_hourglass_top_white_24dp_png,
+                    return new NotificationCompat.Action(R.drawable.ic_hourglass_top,
                             player.getContext().getString(R.string.notification_action_buffering),
                             null);
                 }
 
             case NotificationConstants.PLAY_PAUSE:
                 if (player.getCurrentState() == Player.STATE_COMPLETED) {
-                    return getAction(player, R.drawable.ic_replay_white_24dp_png,
+                    return getAction(player, R.drawable.ic_replay,
                             R.string.exo_controls_pause_description, ACTION_PLAY_PAUSE);
                 } else if (player.isPlaying()
                         || player.getCurrentState() == Player.STATE_PREFLIGHT
@@ -315,7 +315,7 @@ private NotificationCompat.Action getAction(
                 }
 
             case NotificationConstants.CLOSE:
-                return getAction(player, R.drawable.ic_close_white_24dp_png,
+                return getAction(player, R.drawable.ic_close,
                         R.string.close, ACTION_CLOSE);
 
             case NotificationConstants.NOTHING:

File: app/src/main/java/org/schabi/newpipe/settings/AppearanceSettingsFragment.java
Patch:
@@ -12,6 +12,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.util.Constants;
+import org.schabi.newpipe.util.ThemeHelper;
 
 public class AppearanceSettingsFragment extends BasePreferenceFragment {
     private static final boolean CAPTIONING_SETTINGS_ACCESSIBLE =
@@ -83,6 +84,8 @@ private void applyThemeChange(final String beginningThemeKey,
         defaultPreferences.edit().putBoolean(Constants.KEY_THEME_CHANGE, true).apply();
         defaultPreferences.edit().putString(themeKey, newValue.toString()).apply();
 
+        ThemeHelper.setDayNightMode(getContext(), newValue.toString());
+
         if (!newValue.equals(beginningThemeKey) && getActivity() != null) {
             // if it's not the current theme
             ActivityCompat.recreate(getActivity());

File: app/src/main/java/org/schabi/newpipe/settings/tabs/AddTabDialog.java
Patch:
@@ -14,7 +14,6 @@
 import androidx.appcompat.widget.AppCompatImageView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.util.ThemeHelper;
 
 public final class AddTabDialog {
     private final AlertDialog dialog;
@@ -60,7 +59,7 @@ private static final class DialogListAdapter extends BaseAdapter {
         private DialogListAdapter(final Context context, final ChooseTabListItem[] items) {
             this.inflater = LayoutInflater.from(context);
             this.items = items;
-            this.fallbackIcon = ThemeHelper.resolveResourceIdFromAttr(context, R.attr.ic_kiosk_hot);
+            this.fallbackIcon = R.drawable.ic_whatshot;
         }
 
         @Override

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -182,12 +182,12 @@ public static int getForegroundForFileType(Context ctx, FileType type) {
     public static int getIconForFileType(FileType type) {
         switch (type) {
             case MUSIC:
-                return R.drawable.ic_headset_white_24dp;
+                return R.drawable.ic_headset;
             default:
             case VIDEO:
-                return R.drawable.ic_movie_white_24dp;
+                return R.drawable.ic_movie;
             case SUBTITLE:
-                return R.drawable.ic_subtitles_white_24dp;
+                return R.drawable.ic_subtitles;
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -423,7 +423,9 @@ public void onComplete() { }
     @Override
     public void setTitle(final String title) {
         super.setTitle(title);
-        headerBinding.playlistTitleView.setText(title);
+        if (headerBinding != null) {
+            headerBinding.playlistTitleView.setText(title);
+        }
     }
 
     private void onBookmarkClicked() {

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -4,8 +4,6 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import androidx.preference.PreferenceManager;
-
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
@@ -14,6 +12,8 @@
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.Localization;
 
+import androidx.preference.PreferenceManager;
+
 import static org.schabi.newpipe.MainActivity.DEBUG;
 
 /*

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -423,7 +423,9 @@ public void onComplete() { }
     @Override
     public void setTitle(final String title) {
         super.setTitle(title);
-        headerBinding.playlistTitleView.setText(title);
+        if (headerBinding != null) {
+            headerBinding.playlistTitleView.setText(title);
+        }
     }
 
     private void onBookmarkClicked() {

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -137,6 +137,8 @@ private static void reportErrorInSnackbar(final Context context,
     protected void onCreate(final Bundle savedInstanceState) {
         assureCorrectAppLanguage(this);
         super.onCreate(savedInstanceState);
+
+        ThemeHelper.setDayNightMode(this);
         ThemeHelper.setTheme(this);
 
         activityErrorBinding = ActivityErrorBinding.inflate(getLayoutInflater());

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -112,7 +112,6 @@ public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {
         final MenuItem restoreItem = menu.add(Menu.NONE, MENU_ITEM_RESTORE_ID, Menu.NONE,
                 R.string.restore_defaults);
         restoreItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);
-
         restoreItem.setIcon(AppCompatResources.getDrawable(requireContext(),
                 R.drawable.ic_settings_backup_restore));
     }

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -52,6 +52,7 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.content.res.AppCompatResources;
+import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.core.content.ContextCompat;
 import androidx.core.view.DisplayCutoutCompat;
 import androidx.core.view.ViewCompat;
@@ -2225,7 +2226,7 @@ public void onRepeatModeChanged(@RepeatMode final int repeatMode) {
             Log.d(TAG, "ExoPlayer - onRepeatModeChanged() called with: "
                     + "repeatMode = [" + repeatMode + "]");
         }
-        setRepeatModeButton(binding.repeatButton, repeatMode);
+        setRepeatModeButton(((AppCompatImageButton) binding.repeatButton), repeatMode);
         onShuffleOrRepeatModeChanged();
     }
 
@@ -2253,7 +2254,7 @@ private void onShuffleOrRepeatModeChanged() {
         NotificationUtil.getInstance().createNotificationIfNeededAndUpdate(this, false);
     }
 
-    private void setRepeatModeButton(final ImageButton imageButton, final int repeatMode) {
+    private void setRepeatModeButton(final AppCompatImageButton imageButton, final int repeatMode) {
         switch (repeatMode) {
             case REPEAT_MODE_OFF:
                 imageButton.setImageResource(R.drawable.exo_controls_repeat_off);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -486,6 +486,9 @@ private void showSearchOnStart() {
                     + lastSearchedString);
         }
         searchEditText.setText(searchString);
+        if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {
+            searchEditText.setHintTextColor(searchEditText.getTextColors().withAlpha(128));
+        }
 
         if (TextUtils.isEmpty(searchString) || TextUtils.isEmpty(searchEditText.getText())) {
             searchToolbarContainer.setTranslationX(100);

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -87,6 +87,8 @@ protected void initViews(final View rootView, final Bundle savedInstanceState) {
 
         binding.mainTabLayout.setupWithViewPager(binding.pager);
         binding.mainTabLayout.addOnTabSelectedListener(this);
+        binding.mainTabLayout.setTabRippleColor(binding.mainTabLayout.getTabRippleColor()
+                .withAlpha(32));
 
         setupTabs();
     }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -394,8 +394,7 @@ private void initToolbar(final Toolbar toolbar) {
         }
 
         toolbar.setTitle(R.string.download_dialog_title);
-        toolbar.setNavigationIcon(
-            ThemeHelper.resolveResourceIdFromAttr(requireContext(), R.attr.ic_arrow_back));
+        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
         toolbar.inflateMenu(R.menu.dialog_url);
         toolbar.setNavigationOnClickListener(v -> requireDialog().dismiss());
         toolbar.setNavigationContentDescription(R.string.cancel);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SuggestionListAdapter.java
Patch:
@@ -117,8 +117,8 @@ private SuggestionItemHolder(final View rootView) {
             queryView = rootView.findViewById(R.id.suggestion_search);
             insertView = rootView.findViewById(R.id.suggestion_insert);
 
-            historyResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.ic_history);
-            searchResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.ic_search);
+            historyResId = R.drawable.ic_history;
+            searchResId = R.drawable.ic_search;
         }
 
         private static int resolveResourceIdFromAttr(final Context context,

File: app/src/main/java/org/schabi/newpipe/player/NotificationConstants.java
Patch:
@@ -50,11 +50,11 @@ private NotificationConstants() { }
             R.drawable.exo_icon_fastforward,
             R.drawable.exo_icon_previous,
             R.drawable.exo_icon_next,
-            R.drawable.ic_pause_white_24dp,
-            R.drawable.ic_hourglass_top_white_24dp,
+            R.drawable.ic_pause,
+            R.drawable.ic_hourglass_top,
             R.drawable.exo_icon_repeat_all,
             R.drawable.exo_icon_shuffle_on,
-            R.drawable.ic_close_white_24dp,
+            R.drawable.ic_close,
     };
 
 

File: app/src/main/java/org/schabi/newpipe/player/NotificationUtil.java
Patch:
@@ -273,14 +273,14 @@ private NotificationCompat.Action getAction(
                         || player.getCurrentState() == Player.STATE_BLOCKED
                         || player.getCurrentState() == Player.STATE_BUFFERING) {
                     // null intent -> show hourglass icon that does nothing when clicked
-                    return new NotificationCompat.Action(R.drawable.ic_hourglass_top_white_24dp_png,
+                    return new NotificationCompat.Action(R.drawable.ic_hourglass_top,
                             player.getContext().getString(R.string.notification_action_buffering),
                             null);
                 }
 
             case NotificationConstants.PLAY_PAUSE:
                 if (player.getCurrentState() == Player.STATE_COMPLETED) {
-                    return getAction(player, R.drawable.ic_replay_white_24dp_png,
+                    return getAction(player, R.drawable.ic_replay,
                             R.string.exo_controls_pause_description, ACTION_PLAY_PAUSE);
                 } else if (player.isPlaying()
                         || player.getCurrentState() == Player.STATE_PREFLIGHT
@@ -315,7 +315,7 @@ private NotificationCompat.Action getAction(
                 }
 
             case NotificationConstants.CLOSE:
-                return getAction(player, R.drawable.ic_close_white_24dp_png,
+                return getAction(player, R.drawable.ic_close,
                         R.string.close, ACTION_CLOSE);
 
             case NotificationConstants.NOTHING:

File: app/src/main/java/org/schabi/newpipe/settings/tabs/AddTabDialog.java
Patch:
@@ -14,7 +14,6 @@
 import androidx.appcompat.widget.AppCompatImageView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.util.ThemeHelper;
 
 public final class AddTabDialog {
     private final AlertDialog dialog;
@@ -60,7 +59,7 @@ private static final class DialogListAdapter extends BaseAdapter {
         private DialogListAdapter(final Context context, final ChooseTabListItem[] items) {
             this.inflater = LayoutInflater.from(context);
             this.items = items;
-            this.fallbackIcon = ThemeHelper.resolveResourceIdFromAttr(context, R.attr.ic_kiosk_hot);
+            this.fallbackIcon = R.drawable.ic_whatshot;
         }
 
         @Override

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -182,12 +182,12 @@ public static int getForegroundForFileType(Context ctx, FileType type) {
     public static int getIconForFileType(FileType type) {
         switch (type) {
             case MUSIC:
-                return R.drawable.ic_headset_white_24dp;
+                return R.drawable.ic_headset;
             default:
             case VIDEO:
-                return R.drawable.ic_movie_white_24dp;
+                return R.drawable.ic_movie;
             case SUBTITLE:
-                return R.drawable.ic_subtitles_white_24dp;
+                return R.drawable.ic_subtitles;
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -48,7 +48,7 @@ public static void initSettings(final Context context) {
 
     @Override
     protected void onCreate(final Bundle savedInstanceBundle) {
-        ThemeHelper.setTheme(this);
+        setTheme(ThemeHelper.getSettingsThemeStyle(this));
         assureCorrectAppLanguage(this);
         super.onCreate(savedInstanceBundle);
 

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -48,7 +48,7 @@ public static void initSettings(final Context context) {
 
     @Override
     protected void onCreate(final Bundle savedInstanceBundle) {
-        ThemeHelper.setTheme(this);
+        setTheme(ThemeHelper.getSettingsThemeStyle(this));
         assureCorrectAppLanguage(this);
         super.onCreate(savedInstanceBundle);
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -484,8 +484,9 @@ public static int nextResizeModeAndSaveToPrefs(final Player player,
                 break;
         }
 
+        // save the new resize mode so it can be restored in a future session
         player.getPrefs().edit().putInt(
-                player.getContext().getString(R.string.last_resize_mode), resizeMode).apply();
+                player.getContext().getString(R.string.last_resize_mode), newResizeMode).apply();
         return newResizeMode;
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2264,7 +2264,7 @@ public void onSlide(@NonNull final View bottomSheet, final float slideOffset) {
     private void updateOverlayData(@Nullable final String overlayTitle,
                                    @Nullable final String uploader,
                                    @Nullable final String thumbnailUrl) {
-        binding.overlayTitleTextView.setText(isEmpty(title) ? "" : title);
+        binding.overlayTitleTextView.setText(isEmpty(overlayTitle) ? "" : overlayTitle);
         binding.overlayChannelTextView.setText(isEmpty(uploader) ? "" : uploader);
         binding.overlayThumbnail.setImageResource(R.drawable.dummy_thumbnail_dark);
         if (!isEmpty(thumbnailUrl)) {

File: app/src/main/java/org/schabi/newpipe/DownloaderImpl.java
Patch:
@@ -7,6 +7,7 @@
 import androidx.annotation.Nullable;
 import androidx.preference.PreferenceManager;
 
+import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.downloader.Downloader;
 import org.schabi.newpipe.extractor.downloader.Request;
 import org.schabi.newpipe.extractor.downloader.Response;

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.content.Context;
 

File: app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java
Patch:
@@ -7,7 +7,7 @@ public interface ViewContract<I> {
 
     void showEmptyState();
 
-    void showError(String message, boolean showRetryButton);
-
     void handleResult(I result);
+
+    void handleError();
 }

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -14,11 +14,11 @@
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.util.CommentTextOnTouchListener;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ImageDisplayConstants;
@@ -171,15 +171,15 @@ private void openCommentAuthor(final CommentsInfoItem item) {
         if (TextUtils.isEmpty(item.getUploaderUrl())) {
             return;
         }
+        final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
         try {
-            final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
             NavigationHelper.openChannelFragment(
                     activity.getSupportFragmentManager(),
                     item.getServiceId(),
                     item.getUploaderUrl(),
                     item.getUploaderName());
         } catch (final Exception e) {
-            ErrorActivity.reportUiError((AppCompatActivity) itemBuilder.getContext(), e);
+            ErrorActivity.reportUiErrorInSnackbar(activity, "Opening channel fragment", e);
         }
     }
 

File: app/src/test/java/org/schabi/newpipe/error/ErrorActivityTest.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.app.Activity;
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2278,7 +2278,7 @@ public void onSlide(@NonNull final View bottomSheet, final float slideOffset) {
     private void updateOverlayData(@Nullable final String overlayTitle,
                                    @Nullable final String uploader,
                                    @Nullable final String thumbnailUrl) {
-        binding.overlayTitleTextView.setText(isEmpty(title) ? "" : title);
+        binding.overlayTitleTextView.setText(isEmpty(overlayTitle) ? "" : overlayTitle);
         binding.overlayChannelTextView.setText(isEmpty(uploader) ? "" : uploader);
         binding.overlayThumbnail.setImageResource(R.drawable.dummy_thumbnail_dark);
         if (!isEmpty(thumbnailUrl)) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -60,6 +60,7 @@
 import io.reactivex.rxjava3.disposables.Disposable;
 
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.ktx.ViewUtils.animateHideRecyclerViewAllowingScrolling;
 import static org.schabi.newpipe.util.ThemeHelper.resolveResourceIdFromAttr;
 
 public class PlaylistFragment extends BaseListInfoFragment<PlaylistInfo> {
@@ -264,7 +265,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
     public void showLoading() {
         super.showLoading();
         animate(headerBinding.getRoot(), false, 200);
-        animate(itemsList, false, 100);
+        animateHideRecyclerViewAllowingScrolling(itemsList);
 
         IMAGE_LOADER.cancelDisplayTask(headerBinding.uploaderAvatarView);
         animate(headerBinding.uploaderLayout, false, 200);

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -24,6 +24,7 @@
 import org.schabi.newpipe.fragments.list.ListViewContract;
 
 import static org.schabi.newpipe.ktx.ViewUtils.animate;
+import static org.schabi.newpipe.ktx.ViewUtils.animateHideRecyclerViewAllowingScrolling;
 
 /**
  * This fragment is design to be used with persistent data such as
@@ -184,7 +185,7 @@ public void startLoading(final boolean forceLoad) {
     public void showLoading() {
         super.showLoading();
         if (itemsList != null) {
-            animate(itemsList, false, 200);
+            animateHideRecyclerViewAllowingScrolling(itemsList);
         }
         if (headerRootBinding != null) {
             animate(headerRootBinding.getRoot(), false, 200);
@@ -243,7 +244,7 @@ public void handleError() {
         showListFooter(false);
 
         if (itemsList != null) {
-            animate(itemsList, false, 200);
+            animateHideRecyclerViewAllowingScrolling(itemsList);
         }
         if (headerRootBinding != null) {
             animate(headerRootBinding.getRoot(), false, 200);

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -259,7 +259,8 @@ static Class<? extends Activity> getReturnActivity(final Class<?> returnActivity
     }
 
     private void goToReturnActivity() {
-        final Class<? extends Activity> checkedReturnActivity = getReturnActivity(savedReturnActivity);
+        final Class<? extends Activity> checkedReturnActivity =
+                getReturnActivity(savedReturnActivity);
         if (checkedReturnActivity == null) {
             super.onBackPressed();
         } else {

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -306,7 +306,8 @@ public void selected(final PlaylistInfoItem selectedItem) {
                             selectedItem.getUrl(),
                             selectedItem.getName());
                 } catch (final Exception e) {
-                    ErrorActivity.reportUiError(getActivity(), null, "Opening playlist fragment", e);
+                    ErrorActivity.reportUiError(getActivity(), null,
+                            "Opening playlist fragment", e);
                 }
             }
         });

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -403,7 +403,8 @@ public void onClick(final View v) {
                                 currentInfo.getParentChannelUrl(),
                                 currentInfo.getParentChannelName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiError(getActivity(), null, "Opening channel fragment", e);
+                        ErrorActivity.reportUiError(getActivity(), null,
+                                "Opening channel fragment", e);
                     }
                 } else if (DEBUG) {
                     Log.i(TAG, "Can't open parent channel because we got no channel URL");

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java
Patch:
@@ -3,10 +3,10 @@
 import android.os.Bundle;
 
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.kiosk.KioskList;
-import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -13,6 +13,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
@@ -21,7 +22,6 @@
 import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
-import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -286,7 +286,8 @@ public void handleResult(@NonNull final PlaylistInfo result) {
                         NavigationHelper.openChannelFragment(getFM(), result.getServiceId(),
                                 result.getUploaderUrl(), result.getUploaderName());
                     } catch (final Exception e) {
-                        ErrorActivity.reportUiError(getActivity(), null, "Opening channel fragment", e);
+                        ErrorActivity.reportUiError(getActivity(), null,
+                                "Opening channel fragment", e);
                     }
                 });
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -845,7 +845,7 @@ private void search(final String theSearchString,
         disposables.add(historyRecordManager.onSearched(serviceId, theSearchString)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
-                        ignored -> {},
+                        ignored -> { },
                         throwable -> showSnackBarError(new ErrorInfo(throwable, UserAction.SEARCHED,
                                 theSearchString, serviceId))
                 ));

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -24,10 +24,10 @@
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.local.BaseLocalListFragment;
 import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
-import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
 

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -722,7 +722,7 @@ public boolean isItemViewSwipeEnabled() {
 
             @Override
             public void onSwiped(@NonNull final RecyclerView.ViewHolder viewHolder,
-                                 final int swipeDir) {}
+                                 final int swipeDir) { }
         };
     }
 

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -22,13 +22,13 @@
 
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.local.subscription.services.SubscriptionsImportService;
-import org.schabi.newpipe.error.ErrorActivity;
-import org.schabi.newpipe.error.ErrorInfo;
-import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.ServiceHelper;

File: app/src/main/java/org/schabi/newpipe/settings/HistorySettingsFragment.java
Patch:
@@ -10,10 +10,10 @@
 import androidx.preference.Preference;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.InfoCache;
 
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
@@ -91,7 +91,7 @@ private static Disposable getRemoveOrphanedRecordsDisposable(
         return recordManager.removeOrphanedRecords()
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
-                        howManyDeleted -> {},
+                        howManyDeleted -> { },
                         throwable -> ErrorActivity.reportError(context, SettingsActivity.class,
                                 null, new ErrorInfo(throwable, UserAction.DELETE_FROM_HISTORY,
                                         "Clear orphaned records")));

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -162,7 +162,8 @@ public void onNext(@NonNull final List<SubscriptionEntity> newSubscriptions) {
 
             @Override
             public void onError(@NonNull final Throwable exception) {
-                ErrorActivity.reportUiError(requireContext(), null, "Loading subscription", exception);
+                ErrorActivity.reportUiError(requireContext(), null,
+                        "Loading subscription", exception);
             }
 
             @Override

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -15,9 +15,9 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
-import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/main/java/org/schabi/newpipe/settings/SelectPlaylistFragment.java
Patch:
@@ -24,11 +24,11 @@
 import org.schabi.newpipe.database.playlist.PlaylistLocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
-import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
-import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
 import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
+import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
+import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
 
 import java.util.List;
 import java.util.Vector;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -27,10 +27,10 @@
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.error.ErrorInfo;
 import org.schabi.newpipe.error.UserAction;
+import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.settings.SelectChannelFragment;
 import org.schabi.newpipe.settings.SelectKioskFragment;
 import org.schabi.newpipe.settings.SelectPlaylistFragment;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -12,6 +12,9 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem.LocalItemType;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
@@ -25,9 +28,6 @@
 import org.schabi.newpipe.local.history.StatisticsPlaylistFragment;
 import org.schabi.newpipe.local.playlist.LocalPlaylistFragment;
 import org.schabi.newpipe.local.subscription.SubscriptionFragment;
-import org.schabi.newpipe.error.ErrorActivity;
-import org.schabi.newpipe.error.ErrorInfo;
-import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java
Patch:
@@ -31,7 +31,7 @@ public void errorInfoTestParcelable() {
         assertEquals(UserAction.USER_REPORT, infoFromParcel.getUserAction());
         assertEquals("youtube", infoFromParcel.getServiceName());
         assertEquals("request", infoFromParcel.getRequest());
-        assertEquals(R.string.general_error, infoFromParcel.getMessage());
+        assertEquals(R.string.general_error, infoFromParcel.getMessageStringId());
 
         parcel.recycle();
     }

File: app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java
Patch:
@@ -7,7 +7,7 @@ public interface ViewContract<I> {
 
     void showEmptyState();
 
-    void showError(String message, boolean showRetryButton);
-
     void handleResult(I result);
+
+    void handleError();
 }

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -171,15 +171,15 @@ private void openCommentAuthor(final CommentsInfoItem item) {
         if (TextUtils.isEmpty(item.getUploaderUrl())) {
             return;
         }
+        final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
         try {
-            final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
             NavigationHelper.openChannelFragment(
                     activity.getSupportFragmentManager(),
                     item.getServiceId(),
                     item.getUploaderUrl(),
                     item.getUploaderName());
         } catch (final Exception e) {
-            ErrorActivity.reportUiError((AppCompatActivity) itemBuilder.getContext(), e);
+            ErrorActivity.reportUiError(activity, null, "Opening channel fragment", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectPlaylistFragment.java
Patch:
@@ -115,8 +115,8 @@ private void displayPlaylists(final List<PlaylistLocalItem> newPlaylists) {
 
     protected void onError(final Throwable e) {
         final Activity activity = requireActivity();
-        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorInfo
-                .make(UserAction.UI_ERROR, "none", "load_playlists", R.string.app_ui_crash));
+        ErrorActivity.reportError(activity, activity.getClass(), null, new ErrorInfo(e,
+                UserAction.UI_ERROR, "Loading playlists"));
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -483,9 +483,8 @@ private String getDefaultKioskId(final Context context) {
                 final StreamingService service = NewPipe.getService(kioskServiceId);
                 kioskId = service.getKioskList().getDefaultKioskId();
             } catch (final ExtractionException e) {
-                ErrorActivity.reportError(context, e, null, null,
-                        ErrorInfo.make(UserAction.REQUESTED_KIOSK, "none",
-                                "Loading default kiosk from selected service", 0));
+                ErrorActivity.reportError(context, null, null, new ErrorInfo(e,
+                        UserAction.REQUESTED_KIOSK, "Loading default kiosk for selected service"));
             }
             return kioskId;
         }

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -484,8 +484,9 @@ public static int nextResizeModeAndSaveToPrefs(final Player player,
                 break;
         }
 
+        // save the new resize mode so it can be restored in a future session
         player.getPrefs().edit().putInt(
-                player.getContext().getString(R.string.last_resize_mode), resizeMode).apply();
+                player.getContext().getString(R.string.last_resize_mode), newResizeMode).apply();
         return newResizeMode;
     }
 

File: app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.os.Parcel;
 

File: app/src/main/java/org/schabi/newpipe/DownloaderImpl.java
Patch:
@@ -7,6 +7,7 @@
 import androidx.annotation.Nullable;
 import androidx.preference.PreferenceManager;
 
+import org.schabi.newpipe.error.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.downloader.Downloader;
 import org.schabi.newpipe.extractor.downloader.Request;
 import org.schabi.newpipe.extractor.downloader.Response;

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -72,7 +72,7 @@
 import org.schabi.newpipe.player.event.OnKeyDownListener;
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
-import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.KioskTranslator;

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -49,7 +49,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.PlaylistPlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ExtractorHelper;

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -45,9 +45,9 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.SubtitlesStream;
 import org.schabi.newpipe.extractor.stream.VideoStream;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.FilenameUtils;

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.content.Context;
 

File: app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.content.Context;
 

File: app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.app.Activity;
 import android.app.AlertDialog;

File: app/src/main/java/org/schabi/newpipe/error/UserAction.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 /**
  * The user actions that can cause an error.

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -26,9 +26,9 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.FragmentMainBinding;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.settings.tabs.Tab;
 import org.schabi.newpipe.settings.tabs.TabsManager;
 import org.schabi.newpipe.util.NavigationHelper;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -22,6 +22,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.databinding.PignateFooterBinding;
+import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -33,7 +34,6 @@
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.info_list.InfoListAdapter;
 import org.schabi.newpipe.player.helper.PlayerHolder;
-import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.util.KoreUtil;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java
Patch:
@@ -16,7 +16,7 @@
 import org.schabi.newpipe.extractor.comments.CommentsInfo;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.ktx.ViewUtils;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
 
 import io.reactivex.rxjava3.core.Single;

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java
Patch:
@@ -5,7 +5,7 @@
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.kiosk.KioskList;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -20,7 +20,7 @@
 import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.Localization;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -40,8 +40,8 @@
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.PlaylistPlayQueue;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.KoreUtil;

File: app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java
Patch:
@@ -21,7 +21,7 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.ktx.ViewUtils;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.RelatedStreamInfo;
 
 import java.io.Serializable;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -14,11 +14,11 @@
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorActivity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.util.CommentTextOnTouchListener;
 import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ImageDisplayConstants;

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -26,7 +26,7 @@
 import org.schabi.newpipe.local.BaseLocalListFragment;
 import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
 

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -34,9 +34,9 @@
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.settings.SettingsActivity;
 import org.schabi.newpipe.util.KoreUtil;
 import org.schabi.newpipe.util.NavigationHelper;

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -34,6 +34,7 @@
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.databinding.LocalPlaylistHeaderBinding;
 import org.schabi.newpipe.databinding.PlaylistControlBinding;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.extractor.stream.StreamType;
 import org.schabi.newpipe.info_list.InfoItemDialog;
@@ -42,7 +43,6 @@
 import org.schabi.newpipe.player.helper.PlayerHolder;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
-import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.KoreUtil;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -26,9 +26,9 @@
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.local.subscription.services.SubscriptionsImportService;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.ServiceHelper;

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -35,12 +35,12 @@
 
 import org.reactivestreams.Publisher;
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.ktx.ExceptionUtils;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
 
 import java.io.FileNotFoundException;
 import java.util.Collections;

File: app/src/main/java/org/schabi/newpipe/settings/HistorySettingsFragment.java
Patch:
@@ -9,9 +9,9 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.InfoCache;
 
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -21,9 +21,9 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -18,9 +18,9 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/main/java/org/schabi/newpipe/settings/SelectPlaylistFragment.java
Patch:
@@ -26,9 +26,9 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 
 import java.util.List;
 import java.util.Vector;

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -7,9 +7,9 @@
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 
 import static org.schabi.newpipe.MainActivity.DEBUG;
 

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -28,9 +28,9 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.settings.SelectChannelFragment;
 import org.schabi.newpipe.settings.SelectKioskFragment;
 import org.schabi.newpipe.settings.SelectPlaylistFragment;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -25,9 +25,9 @@
 import org.schabi.newpipe.local.history.StatisticsPlaylistFragment;
 import org.schabi.newpipe.local.playlist.LocalPlaylistFragment;
 import org.schabi.newpipe.local.subscription.SubscriptionFragment;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -41,9 +41,9 @@
 import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorInfo;
-import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.error.ErrorActivity;
+import org.schabi.newpipe.error.ErrorInfo;
+import org.schabi.newpipe.error.UserAction;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ShareUtils;
 

File: app/src/test/java/org/schabi/newpipe/error/ErrorActivityTest.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.report;
+package org.schabi.newpipe.error;
 
 import android.app.Activity;
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -265,14 +265,13 @@ public static int getMinimizeOnExitAction(@NonNull final Context context) {
     @AutoplayType
     public static int getAutoplayType(@NonNull final Context context) {
         final String type = getPreferences(context).getString(
-                context.getString(R.string.autoplay_key),
-                context.getString(R.string.autoplay_wifi_key));
+                context.getString(R.string.autoplay_key), "");
         if (type.equals(context.getString(R.string.autoplay_always_key))) {
             return AUTOPLAY_TYPE_ALWAYS;
         } else if (type.equals(context.getString(R.string.autoplay_never_key))) {
             return AUTOPLAY_TYPE_NEVER;
         } else {
-            return AUTOPLAY_TYPE_WIFI;
+            return AUTOPLAY_TYPE_WIFI; // default
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -4003,7 +4003,7 @@ public ImageButton getPlayPauseButton() {
     }
 
     public View getClosingOverlayView() {
-        return closeOverlayBinding.getRoot();
+        return binding.closingOverlay;
     }
 
     public ProgressBar getVolumeProgressBar() {

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -4003,7 +4003,7 @@ public ImageButton getPlayPauseButton() {
     }
 
     public View getClosingOverlayView() {
-        return closeOverlayBinding.getRoot();
+        return binding.closingOverlay;
     }
 
     public ProgressBar getVolumeProgressBar() {

File: app/src/main/java/com/google/android/material/appbar/FlingBehavior.java
Patch:
@@ -10,6 +10,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
+
 import org.schabi.newpipe.R;
 
 import java.lang.reflect.Field;

File: app/src/main/java/org/schabi/newpipe/DownloaderImpl.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import android.os.Build;
-import androidx.preference.PreferenceManager;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.extractor.downloader.Downloader;
 import org.schabi.newpipe.extractor.downloader.Request;

File: app/src/main/java/org/schabi/newpipe/ImageDownloader.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.res.Resources;
+
 import androidx.preference.PreferenceManager;
 
 import com.nostra13.universalimageloader.core.download.BaseImageDownloader;

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -188,7 +188,7 @@ private void showUnsupportedUrlDialog(final String url) {
                 .setPositiveButton(R.string.open_in_browser,
                         (dialog, which) -> ShareUtils.openUrlInBrowser(this, url))
                 .setNegativeButton(R.string.share,
-                        (dialog, which) -> ShareUtils.shareUrl(this, "", url)) // no subject
+                        (dialog, which) -> ShareUtils.shareText(this, "", url)) // no subject
                 .setNeutralButton(R.string.cancel, null)
                 .setOnDismissListener(dialog -> finish())
                 .show();

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -242,7 +242,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 ShareUtils.openUrlInBrowser(requireContext(), url);
                 break;
             case R.id.menu_item_share:
-                ShareUtils.shareUrl(requireContext(), name, url);
+                ShareUtils.shareText(requireContext(), name, url);
                 break;
             case R.id.menu_item_bookmark:
                 onBookmarkClicked();

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -13,15 +13,14 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.preference.PreferenceManager;
 
-
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.CommentTextOnTouchListener;
+import org.schabi.newpipe.util.DeviceUtils;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -1,10 +1,11 @@
 package org.schabi.newpipe.info_list.holder;
 
-import androidx.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import androidx.preference.PreferenceManager;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -4,16 +4,15 @@
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Bundle;
-
-import androidx.annotation.Nullable;
-import androidx.preference.PreferenceManager;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.View;
 
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 import androidx.fragment.app.Fragment;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -33,9 +33,9 @@
 import java.util.List;
 
 import icepick.State;
+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.core.Flowable;
 import io.reactivex.rxjava3.core.Single;
-import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
 import io.reactivex.rxjava3.disposables.Disposable;
 

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -34,8 +34,8 @@
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 
-import org.schabi.newpipe.databinding.PlayerBinding;
 import org.schabi.newpipe.App;
+import org.schabi.newpipe.databinding.PlayerBinding;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import static org.schabi.newpipe.util.Localization.assureCorrectAppLanguage;

File: app/src/main/java/org/schabi/newpipe/player/Player.java
Patch:
@@ -3553,7 +3553,7 @@ private void onShareClicked() {
                 && currentMetadata.getMetadata().getServiceId() == YouTube.getServiceId()) {
             videoUrl += ("&t=" + ts);
         }
-        ShareUtils.shareUrl(context, getVideoTitle(), videoUrl);
+        ShareUtils.shareText(context, getVideoTitle(), videoUrl);
     }
 
     private void onPlayWithKodiClicked() {

File: app/src/main/java/org/schabi/newpipe/player/event/CustomBottomSheetBehavior.java
Patch:
@@ -6,9 +6,12 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
+
 import androidx.annotation.NonNull;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
+
 import com.google.android.material.bottomsheet.BottomSheetBehavior;
+
 import org.schabi.newpipe.R;
 
 import java.util.Arrays;

File: app/src/main/java/org/schabi/newpipe/player/helper/PlaybackParameterDialog.java
Patch:
@@ -3,7 +3,6 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.os.Bundle;
-import androidx.preference.PreferenceManager;
 import android.util.Log;
 import android.view.View;
 import android.widget.CheckBox;
@@ -14,6 +13,7 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
 import androidx.fragment.app.DialogFragment;
+import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.util.SliderStrategy;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -21,8 +21,8 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import io.reactivex.rxjava3.core.BackpressureStrategy;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
+import io.reactivex.rxjava3.core.BackpressureStrategy;
 import io.reactivex.rxjava3.core.Flowable;
 import io.reactivex.rxjava3.subjects.BehaviorSubject;
 

File: app/src/main/java/org/schabi/newpipe/settings/BasePreferenceFragment.java
Patch:
@@ -2,12 +2,12 @@
 
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import androidx.preference.PreferenceManager;
 import android.view.View;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.preference.PreferenceFragmentCompat;
+import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.MainActivity;
 import org.schabi.newpipe.util.ThemeHelper;

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -30,8 +30,8 @@
 import java.util.Vector;
 
 import de.hdodenhof.circleimageview.CircleImageView;
-import io.reactivex.rxjava3.core.Observer;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
+import io.reactivex.rxjava3.core.Observer;
 import io.reactivex.rxjava3.disposables.Disposable;
 import io.reactivex.rxjava3.schedulers.Schedulers;
 

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsManager.java
Patch:
@@ -2,9 +2,10 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import androidx.preference.PreferenceManager;
 import android.widget.Toast;
 
+import androidx.preference.PreferenceManager;
+
 import org.schabi.newpipe.R;
 
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/util/CommentTextOnTouchListener.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
+import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.schedulers.Schedulers;
 
 public class CommentTextOnTouchListener implements View.OnTouchListener {
@@ -69,7 +69,8 @@ public boolean onTouch(final View v, final MotionEvent event) {
                             handled = handleUrl(v.getContext(), (URLSpan) link[0]);
                         }
                         if (!handled) {
-                            link[0].onClick(widget);
+                            ShareUtils.openUrlInBrowser(v.getContext(),
+                                    ((URLSpan) link[0]).getURL(), false);
                         }
                     } else if (action == MotionEvent.ACTION_DOWN) {
                         Selection.setSelection(buffer,

File: app/src/main/java/org/schabi/newpipe/util/FilenameUtils.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
+
 import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -4,11 +4,10 @@
 import android.content.SharedPreferences;
 import android.net.ConnectivityManager;
 
-import androidx.core.content.ContextCompat;
-import androidx.preference.PreferenceManager;
-
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
+import androidx.core.content.ContextCompat;
+import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.MediaFormat;

File: app/src/main/java/org/schabi/newpipe/util/PeertubeHelper.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
+
 import androidx.preference.PreferenceManager;
 
 import com.grack.nanojson.JsonArray;

File: app/src/main/java/org/schabi/newpipe/util/ServiceHelper.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import androidx.preference.PreferenceManager;
 
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
+import androidx.preference.PreferenceManager;
 
 import com.grack.nanojson.JsonObject;
 import com.grack.nanojson.JsonParser;

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -81,7 +81,7 @@ public enum StreamDialogEntry {
     }),
 
     share(R.string.share, (fragment, item) ->
-            ShareUtils.shareUrl(fragment.getContext(), item.getName(), item.getUrl()));
+            ShareUtils.shareText(fragment.getContext(), item.getName(), item.getUrl()));
 
 
     ///////////////

File: app/src/main/java/org/schabi/newpipe/util/ThemeHelper.java
Patch:
@@ -22,7 +22,6 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.res.TypedArray;
-import androidx.preference.PreferenceManager;
 import android.util.TypedValue;
 import android.view.ContextThemeWrapper;
 
@@ -32,6 +31,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.content.ContextCompat;
+import androidx.preference.PreferenceManager;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;

File: app/src/main/java/org/schabi/newpipe/views/CustomCollapsingToolbarLayout.java
Patch:
@@ -2,10 +2,12 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.core.view.ViewCompat;
 import androidx.core.view.WindowInsetsCompat;
+
 import com.google.android.material.appbar.CollapsingToolbarLayout;
 
 public class CustomCollapsingToolbarLayout extends CollapsingToolbarLayout {

File: app/src/main/java/org/schabi/newpipe/views/ExpandableSurfaceView.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.Build;
 import android.util.AttributeSet;
 import android.view.SurfaceView;
+
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
 
 import static com.google.android.exoplayer2.ui.AspectRatioFrameLayout.RESIZE_MODE_FIT;

File: app/src/main/java/org/schabi/newpipe/views/FocusAwareCoordinator.java
Patch:
@@ -24,11 +24,12 @@
 import android.util.AttributeSet;
 import android.view.View;
 import android.view.ViewGroup;
-
 import android.view.WindowInsets;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
+
 import org.schabi.newpipe.R;
 
 public final class FocusAwareCoordinator extends CoordinatorLayout {

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -11,7 +11,6 @@
 import android.os.Bundle;
 import android.os.Environment;
 import android.os.IBinder;
-import androidx.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -21,6 +20,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;

File: app/src/main/java/org/schabi/newpipe/util/CommentTextOnTouchListener.java
Patch:
@@ -69,7 +69,8 @@ public boolean onTouch(final View v, final MotionEvent event) {
                             handled = handleUrl(v.getContext(), (URLSpan) link[0]);
                         }
                         if (!handled) {
-                            link[0].onClick(widget);
+                            ShareUtils.openUrlInBrowser(v.getContext(),
+                                    ((URLSpan) link[0]).getURL(), false);
                         }
                     } else if (action == MotionEvent.ACTION_DOWN) {
                         Selection.setSelection(buffer,

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -365,8 +365,8 @@ public static void showMetaInfoInTextView(@Nullable final List<MetaInfo> metaInf
                 }
             }
 
-            metaInfoTextView.setText(HtmlCompat.fromHtml(stringBuilder.toString(),
-                    HtmlCompat.FROM_HTML_SEPARATOR_LINE_BREAK_HEADING));
+            LinkHelper.createLinksFromHtmlBlock(context, stringBuilder.toString(),
+                    metaInfoTextView, HtmlCompat.FROM_HTML_SEPARATOR_LINE_BREAK_HEADING);
             metaInfoTextView.setMovementMethod(LinkMovementMethod.getInstance());
             metaInfoTextView.setVisibility(View.VISIBLE);
             metaInfoSeparator.setVisibility(View.VISIBLE);

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -128,6 +128,7 @@ public boolean onCreateOptionsMenu(final Menu m) {
         getMenuInflater().inflate(R.menu.menu_play_queue, m);
         getMenuInflater().inflate(getPlayerOptionMenuResource(), m);
         onMaybeMuteChanged();
+        onPlaybackParameterChanged(player.getPlaybackParameters());
         return true;
     }
 

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -129,7 +129,7 @@ protected void onCreate(final Bundle savedInstanceState) {
                     + "savedInstanceState = [" + savedInstanceState + "]");
         }
 
-        // enable TLS1.1/1.2 for kitkat devices, to fix download and play for mediaCCC sources
+        // enable TLS1.1/1.2 for kitkat devices, to fix download and play for media.ccc.de sources
         if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
             TLSSocketFactoryCompat.setAsDefault();
         }

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -129,7 +129,7 @@ protected void onCreate(final Bundle savedInstanceState) {
                     + "savedInstanceState = [" + savedInstanceState + "]");
         }
 
-        // enable TLS1.1/1.2 for kitkat devices, to fix download and play for mediaCCC sources
+        // enable TLS1.1/1.2 for kitkat devices, to fix download and play for media.ccc.de sources
         if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
             TLSSocketFactoryCompat.setAsDefault();
         }

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -638,12 +638,12 @@ private void onStateChanged(final int state) {
             case BasePlayer.STATE_COMPLETED:
                 queueControlBinding.controlPlayPause.setClickable(true);
                 queueControlBinding.controlPlayPause.setVisibility(View.VISIBLE);
-                queueControlBinding.progressBar.setVisibility(View.GONE);
+                queueControlBinding.controlProgressBar.setVisibility(View.GONE);
                 break;
             default:
                 queueControlBinding.controlPlayPause.setClickable(false);
                 queueControlBinding.controlPlayPause.setVisibility(View.INVISIBLE);
-                queueControlBinding.progressBar.setVisibility(View.VISIBLE);
+                queueControlBinding.controlProgressBar.setVisibility(View.VISIBLE);
                 break;
         }
     }

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -638,12 +638,12 @@ private void onStateChanged(final int state) {
             case BasePlayer.STATE_COMPLETED:
                 queueControlBinding.controlPlayPause.setClickable(true);
                 queueControlBinding.controlPlayPause.setVisibility(View.VISIBLE);
-                queueControlBinding.progressBar.setVisibility(View.GONE);
+                queueControlBinding.controlProgressBar.setVisibility(View.GONE);
                 break;
             default:
                 queueControlBinding.controlPlayPause.setClickable(false);
                 queueControlBinding.controlPlayPause.setVisibility(View.INVISIBLE);
-                queueControlBinding.progressBar.setVisibility(View.VISIBLE);
+                queueControlBinding.controlProgressBar.setVisibility(View.VISIBLE);
                 break;
         }
     }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -67,8 +67,10 @@
 public class App extends MultiDexApplication {
     protected static final String TAG = App.class.toString();
     private static App app;
+    public static final String PACKAGE_NAME = BuildConfig.APPLICATION_ID;
 
-    @Nullable private Disposable disposable = null;
+    @Nullable
+    private Disposable disposable = null;
 
     @NonNull
     public static App getApp() {

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/SubscriptionsExportService.java
Patch:
@@ -27,6 +27,7 @@
 
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
+import org.schabi.newpipe.App;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
 import org.schabi.newpipe.extractor.subscription.SubscriptionItem;
@@ -50,7 +51,7 @@ public class SubscriptionsExportService extends BaseImportExportService {
      * A {@link LocalBroadcastManager local broadcast} will be made with this action
      * when the export is successfully completed.
      */
-    public static final String EXPORT_COMPLETE_ACTION = "org.schabi.newpipe.local.subscription"
+    public static final String EXPORT_COMPLETE_ACTION = App.PACKAGE_NAME + ".local.subscription"
             + ".services.SubscriptionsExportService.EXPORT_COMPLETE";
 
     private Subscription subscription;

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/SubscriptionsImportService.java
Patch:
@@ -29,6 +29,7 @@
 
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
+import org.schabi.newpipe.App;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
 import org.schabi.newpipe.extractor.NewPipe;
@@ -66,7 +67,7 @@ public class SubscriptionsImportService extends BaseImportExportService {
      * A {@link LocalBroadcastManager local broadcast} will be made with this action
      * when the import is successfully completed.
      */
-    public static final String IMPORT_COMPLETE_ACTION = "org.schabi.newpipe.local.subscription"
+    public static final String IMPORT_COMPLETE_ACTION = App.PACKAGE_NAME + ".local.subscription"
             + ".services.SubscriptionsImportService.IMPORT_COMPLETE";
 
     /**

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -369,16 +369,16 @@ private void showServices() {
     }
 
     private void enhancePeertubeMenu(final StreamingService s, final MenuItem menuItem) {
-        final PeertubeInstance currentInstace = PeertubeHelper.getCurrentInstance();
-        menuItem.setTitle(currentInstace.getName() + (ServiceHelper.isBeta(s) ? " (beta)" : ""));
+        final PeertubeInstance currentInstance = PeertubeHelper.getCurrentInstance();
+        menuItem.setTitle(currentInstance.getName() + (ServiceHelper.isBeta(s) ? " (beta)" : ""));
         final Spinner spinner = (Spinner) LayoutInflater.from(this)
                 .inflate(R.layout.instance_spinner_layout, null);
         final List<PeertubeInstance> instances = PeertubeHelper.getInstanceList(this);
         final List<String> items = new ArrayList<>();
         int defaultSelect = 0;
         for (final PeertubeInstance instance : instances) {
             items.add(instance.getName());
-            if (instance.getUrl().equals(currentInstace.getUrl())) {
+            if (instance.getUrl().equals(currentInstance.getUrl())) {
                 defaultSelect = items.size() - 1;
             }
         }

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -483,7 +483,7 @@ private void initChunkTables(final TablesInfo tables, final int firstCount,
 
         // stsc_table_entry = [first_chunk, samples_per_chunk, sample_description_index]
         tables.stscBEntries = new int[tables.stsc * 3];
-        tables.stco = remainChunkOffset + 1; // total entrys in chunk offset box
+        tables.stco = remainChunkOffset + 1; // total entries in chunk offset box
 
         tables.stscBEntries[index++] = 1;
         tables.stscBEntries[index++] = firstCount;

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -369,16 +369,16 @@ private void showServices() {
     }
 
     private void enhancePeertubeMenu(final StreamingService s, final MenuItem menuItem) {
-        final PeertubeInstance currentInstace = PeertubeHelper.getCurrentInstance();
-        menuItem.setTitle(currentInstace.getName() + (ServiceHelper.isBeta(s) ? " (beta)" : ""));
+        final PeertubeInstance currentInstance = PeertubeHelper.getCurrentInstance();
+        menuItem.setTitle(currentInstance.getName() + (ServiceHelper.isBeta(s) ? " (beta)" : ""));
         final Spinner spinner = (Spinner) LayoutInflater.from(this)
                 .inflate(R.layout.instance_spinner_layout, null);
         final List<PeertubeInstance> instances = PeertubeHelper.getInstanceList(this);
         final List<String> items = new ArrayList<>();
         int defaultSelect = 0;
         for (final PeertubeInstance instance : instances) {
             items.add(instance.getName());
-            if (instance.getUrl().equals(currentInstace.getUrl())) {
+            if (instance.getUrl().equals(currentInstance.getUrl())) {
                 defaultSelect = items.size() - 1;
             }
         }

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -483,7 +483,7 @@ private void initChunkTables(final TablesInfo tables, final int firstCount,
 
         // stsc_table_entry = [first_chunk, samples_per_chunk, sample_description_index]
         tables.stscBEntries = new int[tables.stsc * 3];
-        tables.stco = remainChunkOffset + 1; // total entrys in chunk offset box
+        tables.stco = remainChunkOffset + 1; // total entries in chunk offset box
 
         tables.stscBEntries[index++] = 1;
         tables.stscBEntries[index++] = firstCount;

File: app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java
Patch:
@@ -51,10 +51,10 @@ private CheckForNewAppVersion() { }
     private static final String NEWPIPE_API_URL = "https://newpipe.schabi.org/api/data.json";
 
     /**
-     * Method to get the apk's SHA1 key. See https://stackoverflow.com/questions/9293019/#22506133.
+     * Method to get the APK's SHA1 key. See https://stackoverflow.com/questions/9293019/#22506133.
      *
      * @param application The application
-     * @return String with the apk's SHA1 fingeprint in hexadecimal
+     * @return String with the APK's SHA1 fingerprint in hexadecimal
      */
     @NonNull
     private static String getCertificateSHA1Fingerprint(@NonNull final Application application) {

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/ImportExportEventListener.java
Patch:
@@ -9,7 +9,7 @@ public interface ImportExportEventListener {
     void onSizeReceived(int size);
 
     /**
-     * Called everytime an item has been parsed/resolved.
+     * Called every time an item has been parsed/resolved.
      *
      * @param itemName the name of the subscription item
      */

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -684,7 +684,7 @@ public void onShuffleClicked() {
 
     public void onMuteUnmuteButtonClicked() {
         if (DEBUG) {
-            Log.d(TAG, "onMuteUnmuteButtonClicled() called");
+            Log.d(TAG, "onMuteUnmuteButtonClicked() called");
         }
         simpleExoPlayer.setVolume(isMuted() ? 1 : 0);
     }

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -618,7 +618,7 @@ public void onProgressUpdate(final int currentProgress, final int duration,
             progressLiveSync.setClickable(!player.isLiveEdge());
         }
 
-        // this will make shure progressCurrentTime has the same width as progressEndTime
+        // this will make sure progressCurrentTime has the same width as progressEndTime
         final ViewGroup.LayoutParams endTimeParams = progressEndTime.getLayoutParams();
         final ViewGroup.LayoutParams currentTimeParams = progressCurrentTime.getLayoutParams();
         currentTimeParams.width = progressEndTime.getWidth();

File: app/src/main/java/org/schabi/newpipe/player/helper/LoadController.java
Patch:
@@ -26,12 +26,12 @@ public LoadController() {
     }
 
     private LoadController(final int initialPlaybackBufferMs,
-                           final int minimumPlaybackbufferMs,
+                           final int minimumPlaybackBufferMs,
                            final int optimalPlaybackBufferMs) {
         this.initialPlaybackBufferUs = initialPlaybackBufferMs * 1000;
 
         final DefaultLoadControl.Builder builder = new DefaultLoadControl.Builder();
-        builder.setBufferDurationsMs(minimumPlaybackbufferMs, optimalPlaybackBufferMs,
+        builder.setBufferDurationsMs(minimumPlaybackBufferMs, optimalPlaybackBufferMs,
                 initialPlaybackBufferMs, initialPlaybackBufferMs);
         internalLoadControl = builder.createDefaultLoadControl();
     }

File: app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java
Patch:
@@ -128,9 +128,9 @@ public void dispose() {
         fetchReactor = null;
     }
 
-    private static List<PlayQueueItem> extractListItems(final List<StreamInfoItem> infos) {
+    private static List<PlayQueueItem> extractListItems(final List<StreamInfoItem> infoItems) {
         final List<PlayQueueItem> result = new ArrayList<>();
-        for (final InfoItem stream : infos) {
+        for (final InfoItem stream : infoItems) {
             if (stream instanceof StreamInfoItem) {
                 result.add(new PlayQueueItem((StreamInfoItem) stream));
             }

File: app/src/main/java/org/schabi/newpipe/util/KioskTranslator.java
Patch:
@@ -5,7 +5,7 @@
 import org.schabi.newpipe.R;
 
 /**
- * Created by Chrsitian Schabesberger on 28.09.17.
+ * Created by Christian Schabesberger on 28.09.17.
  * KioskTranslator.java is part of NewPipe.
  * <p>
  * NewPipe is free software: you can redistribute it and/or modify

File: app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java
Patch:
@@ -21,7 +21,7 @@
  * Single-threaded fallback mode
  */
 public class DownloadRunnableFallback extends Thread {
-    private static final String TAG = "DownloadRunnableFallbac";
+    private static final String TAG = "DownloadRunnableFallback";
 
     private final DownloadMission mMission;
 

File: app/src/test/java/org/schabi/newpipe/util/ListHelperTest.java
Patch:
@@ -205,7 +205,7 @@ public void getHighestQualityAudioFormatPreferredAbsent() {
         assertEquals(MediaFormat.M4A, stream.getFormat());
 
         // Adding a new format and bitrate. Adding another stream will have no impact since
-        // it's not a prefered format.
+        // it's not a preferred format.
         testList.add(new AudioStream("", MediaFormat.WEBMA, /**/ 192));
         stream = testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3, testList));
         assertEquals(192, stream.average_bitrate);

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.multidex.MultiDexApplication;
 import androidx.preference.PreferenceManager;
 
@@ -67,7 +68,7 @@ public class App extends MultiDexApplication {
     protected static final String TAG = App.class.toString();
     private static App app;
 
-    private Disposable disposable = null;
+    @Nullable private Disposable disposable = null;
 
     @NonNull
     public static App getApp() {

File: app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java
Patch:
@@ -53,10 +53,10 @@ private CheckForNewAppVersion() { }
     private static final String NEWPIPE_API_URL = "https://newpipe.schabi.org/api/data.json";
 
     /**
-     * Method to get the apk's SHA1 key. See https://stackoverflow.com/questions/9293019/#22506133.
+     * Method to get the APK's SHA1 key. See https://stackoverflow.com/questions/9293019/#22506133.
      *
      * @param application The application
-     * @return String with the apk's SHA1 fingeprint in hexadecimal
+     * @return String with the APK's SHA1 fingerprint in hexadecimal
      */
     private static String getCertificateSHA1Fingerprint(@NonNull final Application application) {
         final PackageManager pm = application.getPackageManager();

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/ImportExportEventListener.java
Patch:
@@ -9,7 +9,7 @@ public interface ImportExportEventListener {
     void onSizeReceived(int size);
 
     /**
-     * Called everytime an item has been parsed/resolved.
+     * Called every time an item has been parsed/resolved.
      *
      * @param itemName the name of the subscription item
      */

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -685,7 +685,7 @@ public void onShuffleClicked() {
 
     public void onMuteUnmuteButtonClicked() {
         if (DEBUG) {
-            Log.d(TAG, "onMuteUnmuteButtonClicled() called");
+            Log.d(TAG, "onMuteUnmuteButtonClicked() called");
         }
         simpleExoPlayer.setVolume(isMuted() ? 1 : 0);
     }

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -618,7 +618,7 @@ public void onProgressUpdate(final int currentProgress, final int duration,
             progressLiveSync.setClickable(!player.isLiveEdge());
         }
 
-        // this will make shure progressCurrentTime has the same width as progressEndTime
+        // this will make sure progressCurrentTime has the same width as progressEndTime
         final ViewGroup.LayoutParams endTimeParams = progressEndTime.getLayoutParams();
         final ViewGroup.LayoutParams currentTimeParams = progressCurrentTime.getLayoutParams();
         currentTimeParams.width = progressEndTime.getWidth();

File: app/src/main/java/org/schabi/newpipe/player/helper/LoadController.java
Patch:
@@ -26,12 +26,12 @@ public LoadController() {
     }
 
     private LoadController(final int initialPlaybackBufferMs,
-                           final int minimumPlaybackbufferMs,
+                           final int minimumPlaybackBufferMs,
                            final int optimalPlaybackBufferMs) {
         this.initialPlaybackBufferUs = initialPlaybackBufferMs * 1000;
 
         final DefaultLoadControl.Builder builder = new DefaultLoadControl.Builder();
-        builder.setBufferDurationsMs(minimumPlaybackbufferMs, optimalPlaybackBufferMs,
+        builder.setBufferDurationsMs(minimumPlaybackBufferMs, optimalPlaybackBufferMs,
                 initialPlaybackBufferMs, initialPlaybackBufferMs);
         internalLoadControl = builder.createDefaultLoadControl();
     }

File: app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java
Patch:
@@ -128,9 +128,9 @@ public void dispose() {
         fetchReactor = null;
     }
 
-    private static List<PlayQueueItem> extractListItems(final List<StreamInfoItem> infos) {
+    private static List<PlayQueueItem> extractListItems(final List<StreamInfoItem> infoItems) {
         final List<PlayQueueItem> result = new ArrayList<>();
-        for (final InfoItem stream : infos) {
+        for (final InfoItem stream : infoItems) {
             if (stream instanceof StreamInfoItem) {
                 result.add(new PlayQueueItem((StreamInfoItem) stream));
             }

File: app/src/main/java/org/schabi/newpipe/util/KioskTranslator.java
Patch:
@@ -5,7 +5,7 @@
 import org.schabi.newpipe.R;
 
 /**
- * Created by Chrsitian Schabesberger on 28.09.17.
+ * Created by Christian Schabesberger on 28.09.17.
  * KioskTranslator.java is part of NewPipe.
  * <p>
  * NewPipe is free software: you can redistribute it and/or modify

File: app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java
Patch:
@@ -21,7 +21,7 @@
  * Single-threaded fallback mode
  */
 public class DownloadRunnableFallback extends Thread {
-    private static final String TAG = "DownloadRunnableFallbac";
+    private static final String TAG = "DownloadRunnableFallback";
 
     private final DownloadMission mMission;
 

File: app/src/test/java/org/schabi/newpipe/util/ListHelperTest.java
Patch:
@@ -205,7 +205,7 @@ public void getHighestQualityAudioFormatPreferredAbsent() {
         assertEquals(MediaFormat.M4A, stream.getFormat());
 
         // Adding a new format and bitrate. Adding another stream will have no impact since
-        // it's not a prefered format.
+        // it's not a preferred format.
         testList.add(new AudioStream("", MediaFormat.WEBMA, /**/ 192));
         stream = testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3, testList));
         assertEquals(192, stream.average_bitrate);

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.multidex.MultiDexApplication;
 import androidx.preference.PreferenceManager;
 
@@ -67,7 +68,7 @@ public class App extends MultiDexApplication {
     protected static final String TAG = App.class.toString();
     private static App app;
 
-    private Disposable disposable = null;
+    @Nullable private Disposable disposable = null;
 
     @NonNull
     public static App getApp() {

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -22,6 +22,7 @@
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.downloader.Downloader;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.SettingsActivity;
 import org.schabi.newpipe.util.ExceptionUtils;
@@ -226,7 +227,7 @@ protected void initACRA() {
                     ace,
                     null,
                     null,
-                    ErrorActivity.ErrorInfo.make(UserAction.SOMETHING_ELSE, "none",
+                    ErrorInfo.make(UserAction.SOMETHING_ELSE, "none",
                             "Could not initialize ACRA crash report", R.string.app_ui_crash));
         }
     }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -49,6 +49,7 @@
 import org.schabi.newpipe.extractor.stream.SubtitlesStream;
 import org.schabi.newpipe.extractor.stream.VideoStream;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
@@ -602,7 +603,7 @@ private void showErrorActivity(final Exception e) {
                 Collections.singletonList(e),
                 null,
                 null,
-                ErrorActivity.ErrorInfo
+                ErrorInfo
                         .make(UserAction.SOMETHING_ELSE, "-", "-", R.string.general_error)
         );
     }

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.tabs.Tab;
 import org.schabi.newpipe.settings.tabs.TabsManager;
@@ -242,7 +243,7 @@ public Fragment getItem(final int position) {
             }
 
             if (throwable != null) {
-                ErrorActivity.reportError(context, throwable, null, null, ErrorActivity.ErrorInfo
+                ErrorActivity.reportError(context, throwable, null, null, ErrorInfo
                         .make(UserAction.UI_ERROR, "none", "", R.string.app_ui_crash));
                 return new BlankFragment();
             }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -92,6 +92,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.DeviceUtils;
@@ -1630,7 +1631,7 @@ public void openDownloadDialog() {
 
             downloadDialog.show(activity.getSupportFragmentManager(), "downloadDialog");
         } catch (final Exception e) {
-            final ErrorActivity.ErrorInfo info = ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,
+            final ErrorInfo info = ErrorInfo.make(UserAction.UI_ERROR,
                     ServiceList.all()
                             .get(currentInfo
                                     .getServiceId())

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -49,6 +49,7 @@
 import org.schabi.newpipe.fragments.list.BaseListFragment;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.AnimationUtils;
 import org.schabi.newpipe.util.Constants;
@@ -248,7 +249,7 @@ public void onResume() {
         } catch (final Exception e) {
             ErrorActivity.reportError(getActivity(), e, requireActivity().getClass(),
                     requireActivity().findViewById(android.R.id.content),
-                    ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,
+                    ErrorInfo.make(UserAction.UI_ERROR,
                             "",
                             "", R.string.general_error));
         }

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -34,6 +34,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueue;
 import org.schabi.newpipe.player.playqueue.SinglePlayQueue;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.SettingsActivity;
 import org.schabi.newpipe.util.NavigationHelper;
@@ -183,7 +184,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                                             throwable -> ErrorActivity.reportError(getContext(),
                                                     throwable,
                                                     SettingsActivity.class, null,
-                                                    ErrorActivity.ErrorInfo.make(
+                                                    ErrorInfo.make(
                                                             UserAction.DELETE_FROM_HISTORY,
                                                             "none",
                                                             "Delete view history",
@@ -197,7 +198,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                                             throwable -> ErrorActivity.reportError(getContext(),
                                                     throwable,
                                                     SettingsActivity.class, null,
-                                                    ErrorActivity.ErrorInfo.make(
+                                                    ErrorInfo.make(
                                                             UserAction.DELETE_FROM_HISTORY,
                                                             "none",
                                                             "Delete search history",

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.local.subscription.services.SubscriptionsImportService;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
@@ -84,7 +85,7 @@ public void onCreate(final Bundle savedInstanceState) {
         setupServiceVariables();
         if (supportedSources.isEmpty() && currentServiceId != Constants.NO_SERVICE_ID) {
             ErrorActivity.reportError(activity, Collections.emptyList(), null, null,
-                    ErrorActivity.ErrorInfo.make(UserAction.SOMETHING_ELSE,
+                    ErrorInfo.make(UserAction.SOMETHING_ELSE,
                             NewPipe.getNameOfService(currentServiceId),
                             "Service don't support importing", R.string.general_error));
             activity.finish();

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -37,6 +37,7 @@
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExceptionUtils;
 
@@ -153,7 +154,7 @@ protected void stopService() {
     protected void stopAndReportError(@Nullable final Throwable error, final String request) {
         stopService();
 
-        final ErrorActivity.ErrorInfo errorInfo = ErrorActivity.ErrorInfo
+        final ErrorInfo errorInfo = ErrorInfo
                 .make(UserAction.SUBSCRIPTION, "unknown", request, R.string.general_error);
         ErrorActivity.reportError(this, error != null ? Collections.singletonList(error)
                         : Collections.emptyList(), null, null, errorInfo);

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSender.java
Patch:
@@ -33,7 +33,7 @@ public class AcraReportSender implements ReportSender {
     @Override
     public void send(@NonNull final Context context, @NonNull final CrashReportData report) {
         ErrorActivity.reportError(context, report,
-                ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR, "none",
+                ErrorInfo.make(UserAction.UI_ERROR, "none",
                         "App crash, UI failure", R.string.app_ui_crash));
     }
 }

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -25,6 +25,7 @@
 import org.schabi.newpipe.extractor.localization.ContentCountry;
 import org.schabi.newpipe.extractor.localization.Localization;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.ZipHelper;
@@ -357,7 +358,7 @@ protected void onError(final Throwable e) {
         ErrorActivity.reportError(activity, e,
                 activity.getClass(),
                 null,
-                ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,
+                ErrorInfo.make(UserAction.UI_ERROR,
                         "none", "", R.string.app_ui_crash));
     }
 }

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -22,6 +22,7 @@
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ThemeHelper;
 
@@ -178,7 +179,7 @@ public void onComplete() { }
 
     protected void onError(final Throwable e) {
         final Activity activity = getActivity();
-        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorActivity.ErrorInfo
+        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorInfo
                 .make(UserAction.UI_ERROR, "none", "", R.string.app_ui_crash));
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -19,6 +19,7 @@
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
@@ -114,7 +115,7 @@ private void clickedItem(final SelectKioskAdapter.Entry entry) {
 
     protected void onError(final Throwable e) {
         final Activity activity = getActivity();
-        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorActivity.ErrorInfo
+        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorInfo
                 .make(UserAction.UI_ERROR, "none", "", R.string.app_ui_crash));
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectPlaylistFragment.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.local.playlist.LocalPlaylistManager;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 
 import java.util.List;
@@ -114,7 +115,7 @@ private void displayPlaylists(final List<PlaylistLocalItem> newPlaylists) {
 
     protected void onError(final Throwable e) {
         final Activity activity = requireActivity();
-        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorActivity.ErrorInfo
+        ErrorActivity.reportError(activity, e, activity.getClass(), null, ErrorInfo
                 .make(UserAction.UI_ERROR, "none", "load_playlists", R.string.app_ui_crash));
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/SettingMigrations.java
Patch:
@@ -8,7 +8,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.report.ErrorActivity.ErrorInfo;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 
 import static org.schabi.newpipe.MainActivity.DEBUG;

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -29,6 +29,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.SelectChannelFragment;
 import org.schabi.newpipe.settings.SelectKioskFragment;
@@ -184,7 +185,7 @@ private void addTab(final int tabId) {
         if (type == null) {
             ErrorActivity.reportError(requireContext(),
                     new IllegalStateException("Tab id not found: " + tabId), null, null,
-                    ErrorActivity.ErrorInfo.make(UserAction.SOMETHING_ELSE, "none",
+                    ErrorInfo.make(UserAction.SOMETHING_ELSE, "none",
                             "Choosing tabs on settings", 0));
             return;
         }

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -26,6 +26,7 @@
 import org.schabi.newpipe.local.playlist.LocalPlaylistFragment;
 import org.schabi.newpipe.local.subscription.SubscriptionFragment;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.ServiceHelper;
@@ -483,7 +484,7 @@ private String getDefaultKioskId(final Context context) {
                 kioskId = service.getKioskList().getDefaultKioskId();
             } catch (final ExtractionException e) {
                 ErrorActivity.reportError(context, e, null, null,
-                        ErrorActivity.ErrorInfo.make(UserAction.REQUESTED_KIOSK, "none",
+                        ErrorInfo.make(UserAction.REQUESTED_KIOSK, "none",
                                 "Loading default kiosk from selected service", 0));
             }
             return kioskId;

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -51,6 +51,7 @@
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.extractor.suggestion.SuggestionExtractor;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 
 import java.util.Collections;
@@ -298,7 +299,7 @@ public static void handleGeneralException(final Context context, final int servi
                         : exception instanceof ParsingException
                         ? R.string.parsing_error : R.string.general_error;
                 ErrorActivity.reportError(handler, context, exception, MainActivity.class, null,
-                        ErrorActivity.ErrorInfo.make(userAction, serviceId == -1 ? "none"
+                        ErrorInfo.make(userAction, serviceId == -1 ? "none"
                                 : NewPipe.getNameOfService(serviceId),
                                 url + (optionalErrorMessage == null ? ""
                                         : optionalErrorMessage), errorId));

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -39,6 +39,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.ErrorInfo;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.NavigationHelper;
 
@@ -575,7 +576,7 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in
                 mission.errObject,
                 null,
                 null,
-                ErrorActivity.ErrorInfo.make(action, service, request.toString(), reason)
+                ErrorInfo.make(action, service, request.toString(), reason)
         );
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -274,7 +274,9 @@ public void onServiceConnected(final VideoPlayerImpl connectedPlayer,
             // If the video is playing but orientation changed
             // let's make the video in fullscreen again
             checkLandscape();
-        } else if (player.isFullscreen() && !player.isVerticalVideo()) {
+        } else if (player.isFullscreen() && !player.isVerticalVideo()
+                // Tablet UI has orientation-independent fullscreen
+                && !DeviceUtils.isTablet(activity)) {
             // Device is in portrait orientation after rotation but UI is in fullscreen.
             // Return back to non-fullscreen state
             player.toggleFullscreen();

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -534,9 +534,8 @@ private void openDownloadDialog() {
                     downloadDialog.show(fm, "downloadDialog");
                     fm.executePendingTransactions();
                     downloadDialog.requireDialog().setOnDismissListener(dialog -> finish());
-                }, (@NonNull Throwable throwable) -> {
-                    showUnsupportedUrlDialog(currentUrl);
-                }));
+                }, (@NonNull Throwable throwable) ->
+                        showUnsupportedUrlDialog(currentUrl)));
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1756,7 +1756,7 @@ public void onQueueUpdate(final PlayQueue queue) {
         // deleted/added items inside Channel/Playlist queue and makes possible to have
         // a history of played items
         @Nullable final StackItem stackPeek = stack.peek();
-        if (stackPeek != null && stackPeek.getPlayQueue().equals(queue)) {
+        if (stackPeek != null && !stackPeek.getPlayQueue().equals(queue)) {
             @Nullable final PlayQueueItem playQueueItem = queue.getItem();
             if (playQueueItem != null) {
                 stack.push(new StackItem(playQueueItem.getServiceId(), playQueueItem.getUrl(),

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -321,8 +321,9 @@ public void onScrolledDown(final RecyclerView recyclerView) {
 
     private void onStreamSelected(final StreamInfoItem selectedItem) {
         onItemSelected(selectedItem);
-        NavigationHelper.openVideoDetailFragment(getFM(),
-                selectedItem.getServiceId(), selectedItem.getUrl(), selectedItem.getName());
+        NavigationHelper.openVideoDetailFragment(requireContext(), getFM(),
+                selectedItem.getServiceId(), selectedItem.getUrl(), selectedItem.getName(),
+                null, false);
     }
 
     protected void onScrollToBottom() {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -517,7 +517,7 @@ public void handleResult(@NonNull final ChannelInfo result) {
         monitorSubscription(result);
 
         headerPlayAllButton.setOnClickListener(view -> NavigationHelper
-                .playOnMainPlayer(activity, getPlayQueue(), true));
+                .playOnMainPlayer(activity, getPlayQueue()));
         headerPopupButton.setOnClickListener(view -> NavigationHelper
                 .playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(view -> NavigationHelper

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -319,7 +319,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
                 .subscribe(getPlaylistBookmarkSubscriber());
 
         headerPlayAllButton.setOnClickListener(view ->
-                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), true));
+                NavigationHelper.playOnMainPlayer(activity, getPlayQueue()));
         headerPopupButton.setOnClickListener(view ->
                 NavigationHelper.playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(view ->

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -30,6 +30,7 @@
 import android.view.ViewGroup;
 import android.view.WindowManager;
 
+import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 
 import org.schabi.newpipe.R;
@@ -231,6 +232,7 @@ boolean isLandscape() {
         return metrics.heightPixels < metrics.widthPixels;
     }
 
+    @Nullable
     public View getView() {
         if (playerImpl == null) {
             return null;
@@ -240,7 +242,7 @@ public View getView() {
     }
 
     public void removeViewFromParent() {
-        if (getView().getParent() != null) {
+        if (getView() != null && getView().getParent() != null) {
             if (playerImpl.getParentActivity() != null) {
                 // This means view was added to fragment
                 final ViewGroup parent = (ViewGroup) getView().getParent();

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -111,10 +111,10 @@ public void onScroll(@NotNull final MainPlayer.PlayerType playerType,
         }
         if (playerType == MainPlayer.PlayerType.VIDEO) {
             if (portion == DisplayPortion.LEFT_HALF) {
-                onScrollMainVolume(distanceX, distanceY);
+                onScrollMainBrightness(distanceX, distanceY);
 
             } else /* DisplayPortion.RIGHT_HALF */ {
-                onScrollMainBrightness(distanceX, distanceY);
+                onScrollMainVolume(distanceX, distanceY);
             }
 
         } else /* MainPlayer.PlayerType.POPUP */ {

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -164,7 +164,7 @@ public void onAnimationEnd(final Animator animation) {
 
     @Override
     public void onAudioSessionId(final EventTime eventTime, final int audioSessionId) {
-        if (!PlayerHelper.isUsingDSP(context)) {
+        if (!PlayerHelper.isUsingDSP()) {
             return;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -295,19 +295,19 @@ public static int getPlaybackOptimalBufferMs() {
         return 60000;
     }
 
-    public static TrackSelection.Factory getQualitySelector(@NonNull final Context context) {
+    public static TrackSelection.Factory getQualitySelector() {
         return new AdaptiveTrackSelection.Factory(
                 1000,
                 AdaptiveTrackSelection.DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS,
                 AdaptiveTrackSelection.DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS,
                 AdaptiveTrackSelection.DEFAULT_BANDWIDTH_FRACTION);
     }
 
-    public static boolean isUsingDSP(@NonNull final Context context) {
+    public static boolean isUsingDSP() {
         return true;
     }
 
-    public static int getTossFlingVelocity(@NonNull final Context context) {
+    public static int getTossFlingVelocity() {
         return 2500;
     }
 

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -83,8 +83,8 @@ public void draw(@NonNull Canvas canvas) {
             // render marquee
             width += size * 2;
             Path marquee = new Path();
-            for (float i = -size; i < width; i += size) {
-                marquee.addPath(mMarqueeLine, i + mMarqueeProgress, 0);
+            for (int i = -size; i < width; i += size) {
+                marquee.addPath(mMarqueeLine, ((float)i + mMarqueeProgress), 0);
             }
             marquee.close();
 

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -111,10 +111,10 @@ public void onScroll(@NotNull final MainPlayer.PlayerType playerType,
         }
         if (playerType == MainPlayer.PlayerType.VIDEO) {
             if (portion == DisplayPortion.LEFT_HALF) {
-                onScrollMainVolume(distanceX, distanceY);
+                onScrollMainBrightness(distanceX, distanceY);
 
             } else /* DisplayPortion.RIGHT_HALF */ {
-                onScrollMainBrightness(distanceX, distanceY);
+                onScrollMainVolume(distanceX, distanceY);
             }
 
         } else /* MainPlayer.PlayerType.POPUP */ {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1111,7 +1111,9 @@ private void openMainPlayer() {
 
         // Video view can have elements visible from popup,
         // We hide it here but once it ready the view will be shown in handleIntent()
-        playerService.getView().setVisibility(View.GONE);
+        if (playerService.getView() != null) {
+            playerService.getView().setVisibility(View.GONE);
+        }
         addVideoPlayerView();
 
         final Intent playerIntent = NavigationHelper

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -30,6 +30,7 @@
 import android.view.ViewGroup;
 import android.view.WindowManager;
 
+import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 
 import org.schabi.newpipe.R;
@@ -231,6 +232,7 @@ boolean isLandscape() {
         return metrics.heightPixels < metrics.widthPixels;
     }
 
+    @Nullable
     public View getView() {
         if (playerImpl == null) {
             return null;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -486,6 +486,7 @@ public static void openVideoDetail(final Context context,
 
         final Intent intent = getOpenIntent(context, url, serviceId,
                 StreamingService.LinkType.STREAM);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         intent.putExtra(Constants.KEY_TITLE, title);
         intent.putExtra(VideoDetailFragment.KEY_SWITCHING_PLAYERS, switchingPlayers);
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -289,6 +289,7 @@ public void onServiceConnected(final VideoPlayerImpl connectedPlayer,
                 || (currentInfo != null
                 && isAutoplayEnabled()
                 && player.getParentActivity() == null)) {
+            autoPlayEnabled = true; // forcefully start playing
             openVideoPlayer();
         }
     }
@@ -521,6 +522,7 @@ public void onClick(final View v) {
                 }
                 break;
             case R.id.detail_thumbnail_root_layout:
+                autoPlayEnabled = true; // forcefully start playing
                 openVideoPlayer();
                 break;
             case R.id.detail_title_root_layout:
@@ -537,6 +539,7 @@ public void onClick(final View v) {
                     player.hideControls(0, 0);
                     showSystemUi();
                 } else {
+                    autoPlayEnabled = true; // forcefully start playing
                     openVideoPlayer();
                 }
 

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -685,7 +685,7 @@ public Consumer<Info> getResultHandler(final Choice choice) {
                 }
 
                 if (choice.playerChoice.equals(videoPlayerKey)) {
-                    NavigationHelper.playOnMainPlayer(this, playQueue);
+                    NavigationHelper.playOnMainPlayer(this, playQueue, false);
                 } else if (choice.playerChoice.equals(backgroundPlayerKey)) {
                     NavigationHelper.playOnBackgroundPlayer(this, playQueue, true);
                 } else if (choice.playerChoice.equals(popupPlayerKey)) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1097,7 +1097,7 @@ private void openNormalBackgroundPlayer(final boolean append) {
 
     private void openMainPlayer() {
         if (playerService == null) {
-            PlayerHolder.startService(App.getApp(), true, this);
+            PlayerHolder.startService(App.getApp(), autoPlayEnabled, this);
             return;
         }
         if (currentInfo == null) {
@@ -1112,7 +1112,7 @@ private void openMainPlayer() {
         addVideoPlayerView();
 
         final Intent playerIntent = NavigationHelper
-                .getPlayerIntent(requireContext(), MainPlayer.class, queue, null, true);
+                .getPlayerIntent(requireContext(), MainPlayer.class, queue, true, autoPlayEnabled);
         activity.startService(playerIntent);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -240,7 +240,7 @@ public View getView() {
     }
 
     public void removeViewFromParent() {
-        if (getView().getParent() != null) {
+        if (getView() != null && getView().getParent() != null) {
             if (playerImpl.getParentActivity() != null) {
                 // This means view was added to fragment
                 final ViewGroup parent = (ViewGroup) getView().getParent();

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -164,7 +164,7 @@ public void onAnimationEnd(final Animator animation) {
 
     @Override
     public void onAudioSessionId(final EventTime eventTime, final int audioSessionId) {
-        if (!PlayerHelper.isUsingDSP(context)) {
+        if (!PlayerHelper.isUsingDSP()) {
             return;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -295,19 +295,19 @@ public static int getPlaybackOptimalBufferMs() {
         return 60000;
     }
 
-    public static TrackSelection.Factory getQualitySelector(@NonNull final Context context) {
+    public static TrackSelection.Factory getQualitySelector() {
         return new AdaptiveTrackSelection.Factory(
                 1000,
                 AdaptiveTrackSelection.DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS,
                 AdaptiveTrackSelection.DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS,
                 AdaptiveTrackSelection.DEFAULT_BANDWIDTH_FRACTION);
     }
 
-    public static boolean isUsingDSP(@NonNull final Context context) {
+    public static boolean isUsingDSP() {
         return true;
     }
 
-    public static int getTossFlingVelocity(@NonNull final Context context) {
+    public static int getTossFlingVelocity() {
         return 2500;
     }
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -646,7 +646,7 @@ private void prepareSelectedDownload() {
                 mainStorage = mainStorageVideo; // subtitle & video files go together
                 format = subtitleStreamsAdapter.getItem(selectedSubtitleIndex).getFormat();
                 mime = format.mimeType;
-                filename += format == MediaFormat.TTML ? MediaFormat.SRT.suffix : format.suffix;
+                filename += (format == MediaFormat.TTML ? MediaFormat.SRT : format).suffix;
                 break;
             default:
                 throw new RuntimeException("No stream selected");

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -225,9 +225,9 @@ boolean isLandscape() {
         // DisplayMetrics from activity context knows about MultiWindow feature
         // while DisplayMetrics from app context doesn't
         final DisplayMetrics metrics = (playerImpl != null
-                && playerImpl.getParentActivity() != null)
-                ? playerImpl.getParentActivity().getResources().getDisplayMetrics()
-                : getResources().getDisplayMetrics();
+                && playerImpl.getParentActivity() != null
+                ? playerImpl.getParentActivity().getResources()
+                : getResources()).getDisplayMetrics();
         return metrics.heightPixels < metrics.widthPixels;
     }
 

File: app/src/main/java/org/schabi/newpipe/util/Localization.java
Patch:
@@ -186,7 +186,7 @@ public static String localizeWatchingCount(final Context context, final long wat
     }
 
     public static String shortCount(final Context context, final long count) {
-        if (Build.VERSION.SDK_INT >= 24) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             return CompactDecimalFormat.getInstance(getAppLocale(context),
                     CompactDecimalFormat.CompactStyle.SHORT).format(count);
         }

File: app/src/main/java/org/schabi/newpipe/views/ExpandableSurfaceView.java
Patch:
@@ -1,8 +1,7 @@
 package org.schabi.newpipe.views;
 
 import android.content.Context;
-import android.os.Build.VERSION;
-import android.os.Build.VERSION_CODES;
+import android.os.Build;
 import android.util.AttributeSet;
 import android.view.SurfaceView;
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
@@ -47,7 +46,8 @@ protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec
 
         if (resizeMode == RESIZE_MODE_FIT
                 // KitKat doesn't work well when a view has a scale like needed for ZOOM
-                || (resizeMode == RESIZE_MODE_ZOOM && VERSION.SDK_INT < VERSION_CODES.LOLLIPOP)) {
+                || (resizeMode == RESIZE_MODE_ZOOM
+                && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP)) {
             if (aspectDeformation > 0) {
                 height = (int) (width / videoAspectRatio);
             } else {

File: app/src/main/java/org/schabi/newpipe/views/FocusOverlayView.java
Patch:
@@ -270,7 +270,7 @@ private static void fixFocusHierarchy(final View decor) {
         clearFocusObstacles((ViewGroup) decor);
     }
 
-    @RequiresApi(api = 26)
+    @RequiresApi(api = Build.VERSION_CODES.O)
     private static void clearFocusObstacles(final ViewGroup viewGroup) {
         viewGroup.setTouchscreenBlocksFocus(false);
 

File: app/src/main/java/us/shandian/giga/io/StoredDirectoryHelper.java
Patch:
@@ -212,7 +212,7 @@ public boolean canWrite() {
     @NonNull
     @Override
     public String toString() {
-        return docTree == null ? Uri.fromFile(ioTree).toString() : docTree.getUri().toString();
+        return (docTree == null ? Uri.fromFile(ioTree) : docTree.getUri()).toString();
     }
 
 

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -29,7 +29,6 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 import androidx.appcompat.app.AlertDialog;
-import androidx.core.content.ContextCompat;
 import androidx.core.content.FileProvider;
 import androidx.core.view.ViewCompat;
 import androidx.recyclerview.widget.DiffUtil;
@@ -121,7 +120,7 @@ public MissionAdapter(Context context, @NonNull DownloadManager downloadManager,
         mContext = context;
         mDownloadManager = downloadManager;
 
-        mInflater = ContextCompat.getSystemService(mContext, LayoutInflater.class);
+        mInflater = LayoutInflater.from(mContext);
         mLayout = R.layout.mission_item;
 
         mHandler = new Handler(context.getMainLooper());

File: app/src/main/java/org/schabi/newpipe/util/Localization.java
Patch:
@@ -186,7 +186,7 @@ public static String localizeWatchingCount(final Context context, final long wat
     }
 
     public static String shortCount(final Context context, final long count) {
-        if (Build.VERSION.SDK_INT >= 24) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             return CompactDecimalFormat.getInstance(getAppLocale(context),
                     CompactDecimalFormat.CompactStyle.SHORT).format(count);
         }

File: app/src/main/java/org/schabi/newpipe/views/ExpandableSurfaceView.java
Patch:
@@ -1,8 +1,7 @@
 package org.schabi.newpipe.views;
 
 import android.content.Context;
-import android.os.Build.VERSION;
-import android.os.Build.VERSION_CODES;
+import android.os.Build;
 import android.util.AttributeSet;
 import android.view.SurfaceView;
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
@@ -47,7 +46,8 @@ protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec
 
         if (resizeMode == RESIZE_MODE_FIT
                 // KitKat doesn't work well when a view has a scale like needed for ZOOM
-                || (resizeMode == RESIZE_MODE_ZOOM && VERSION.SDK_INT < VERSION_CODES.LOLLIPOP)) {
+                || (resizeMode == RESIZE_MODE_ZOOM
+                && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP)) {
             if (aspectDeformation > 0) {
                 height = (int) (width / videoAspectRatio);
             } else {

File: app/src/main/java/org/schabi/newpipe/views/FocusOverlayView.java
Patch:
@@ -270,7 +270,7 @@ private static void fixFocusHierarchy(final View decor) {
         clearFocusObstacles((ViewGroup) decor);
     }
 
-    @RequiresApi(api = 26)
+    @RequiresApi(api = Build.VERSION_CODES.O)
     private static void clearFocusObstacles(final ViewGroup viewGroup) {
         viewGroup.setTouchscreenBlocksFocus(false);
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1641,8 +1641,8 @@ protected boolean onError(final Throwable exception) {
             return true;
         }
 
-        final int errorId = exception instanceof YoutubeStreamExtractor.DecryptException
-                ? R.string.youtube_signature_decryption_error
+        final int errorId = exception instanceof YoutubeStreamExtractor.DeobfuscateException
+                ? R.string.youtube_signature_deobfuscation_error
                 : exception instanceof ExtractionException
                 ? R.string.parsing_error
                 : R.string.general_error;

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -293,8 +293,8 @@ public static void handleGeneralException(final Context context, final int servi
             } else if (exception instanceof ContentNotSupportedException) {
                 Toast.makeText(context, R.string.content_not_supported, Toast.LENGTH_LONG).show();
             } else {
-                final int errorId = exception instanceof YoutubeStreamExtractor.DecryptException
-                        ? R.string.youtube_signature_decryption_error
+                final int errorId = exception instanceof YoutubeStreamExtractor.DeobfuscateException
+                        ? R.string.youtube_signature_deobfuscation_error
                         : exception instanceof ParsingException
                         ? R.string.parsing_error : R.string.general_error;
                 ErrorActivity.reportError(handler, context, exception, MainActivity.class, null,

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -406,7 +406,7 @@ public static void showMiniPlayer(final FragmentManager fragmentManager) {
         defaultTransaction(fragmentManager)
                 .replace(R.id.fragment_player_holder, instance)
                 .runOnCommit(() -> sendPlayerStartedEvent(instance.requireActivity()))
-                .commit();
+                .commitAllowingStateLoss();
     }
 
     public static void openChannelFragment(final FragmentManager fragmentManager,

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistDAO.java
Patch:
@@ -33,4 +33,7 @@ public Flowable<List<PlaylistEntity>> listByService(final int serviceId) {
 
     @Query("DELETE FROM " + PLAYLIST_TABLE + " WHERE " + PLAYLIST_ID + " = :playlistId")
     public abstract int deletePlaylist(long playlistId);
+
+    @Query("SELECT COUNT(*) FROM " + PLAYLIST_TABLE)
+    public abstract Flowable<Long> getCount();
 }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -486,7 +486,7 @@ public void onClick(final View v) {
 
                     final PlaylistAppendDialog d = PlaylistAppendDialog.fromStreamInfo(currentInfo);
                     disposables.add(
-                        PlaylistAppendDialog.checkPlaylists(getContext(),
+                        PlaylistAppendDialog.onPlaylistFound(getContext(),
                             () -> d.show(getFM(), TAG),
                             () -> PlaylistCreationDialog.newInstance(d).show(getFM(), TAG)
                         )

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -574,7 +574,7 @@ private void appendAllToPlaylist() {
     private void openPlaylistAppendDialog(final List<PlayQueueItem> playlist) {
         final PlaylistAppendDialog d = PlaylistAppendDialog.fromPlayQueueItems(playlist);
 
-        PlaylistAppendDialog.checkPlaylists(getApplicationContext(),
+        PlaylistAppendDialog.onPlaylistFound(getApplicationContext(),
             () -> d.show(getSupportFragmentManager(), getTag()),
             () -> PlaylistCreationDialog.newInstance(d)
                     .show(getSupportFragmentManager(), getTag()

File: app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java
Patch:
@@ -62,7 +62,7 @@ public enum StreamDialogEntry {
             final PlaylistAppendDialog d = PlaylistAppendDialog
                     .fromStreamInfoItems(Collections.singletonList(item));
 
-            PlaylistAppendDialog.checkPlaylists(fragment.getContext(),
+            PlaylistAppendDialog.onPlaylistFound(fragment.getContext(),
                 () -> d.show(fragment.getFragmentManager(), "StreamDialogEntry@append_playlist"),
                 () -> PlaylistCreationDialog.newInstance(d)
                         .show(fragment.getFragmentManager(), "StreamDialogEntry@create_playlist")

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistDAO.java
Patch:
@@ -33,4 +33,7 @@ public Flowable<List<PlaylistEntity>> listByService(final int serviceId) {
 
     @Query("DELETE FROM " + PLAYLIST_TABLE + " WHERE " + PLAYLIST_ID + " = :playlistId")
     public abstract int deletePlaylist(long playlistId);
+
+    @Query("SELECT COUNT(*) FROM " + PLAYLIST_TABLE)
+    public abstract Flowable<Long> getCount();
 }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe;
 
-import android.app.Application;
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.content.Context;
@@ -9,6 +8,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.multidex.MultiDexApplication;
 import androidx.preference.PreferenceManager;
 
 import com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;
@@ -61,7 +61,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-public class App extends Application {
+public class App extends MultiDexApplication {
     protected static final String TAG = App.class.toString();
     private static App app;
 

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe;
 
-import android.app.Application;
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.content.Context;
@@ -9,6 +8,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.multidex.MultiDexApplication;
 import androidx.preference.PreferenceManager;
 
 import com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;
@@ -61,7 +61,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-public class App extends Application {
+public class App extends MultiDexApplication {
     protected static final String TAG = App.class.toString();
     private static App app;
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -406,7 +406,7 @@ public static void showMiniPlayer(final FragmentManager fragmentManager) {
         defaultTransaction(fragmentManager)
                 .replace(R.id.fragment_player_holder, instance)
                 .runOnCommit(() -> sendPlayerStartedEvent(instance.requireActivity()))
-                .commit();
+                .commitAllowingStateLoss();
     }
 
     public static void openChannelFragment(final FragmentManager fragmentManager,

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHolder.java
Patch:
@@ -38,6 +38,8 @@ private PlayerHolder() {
     /**
      * Returns the current {@link MainPlayer.PlayerType} of the {@link MainPlayer} service,
      * otherwise `null` if no service running.
+     *
+     * @return Current PlayerType
      */
     @Nullable
     public static MainPlayer.PlayerType getType() {

File: app/src/main/java/org/schabi/newpipe/util/Localization.java
Patch:
@@ -305,9 +305,7 @@ private static PrettyTime getPrettyTime() {
     }
 
     public static String relativeTime(final Calendar calendarTime) {
-        final String time = getPrettyTime().formatUnrounded(calendarTime);
-        return time.startsWith("-") ? time.substring(1) : time;
-        //workaround fix for russian showing -1 day ago, -19hrs ago…
+        return getPrettyTime().formatUnrounded(calendarTime);
     }
 
     private static void changeAppLanguage(final Locale loc, final Resources res) {

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -103,6 +103,8 @@ private void createView() {
         playerImpl = new VideoPlayerImpl(this);
         playerImpl.setup(layout);
         playerImpl.shouldUpdateOnProgress = true;
+
+        NotificationUtil.getInstance().createNotificationAndStartForeground(playerImpl, this);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/event/CustomBottomSheetBehavior.java
Patch:
@@ -39,12 +39,13 @@ public boolean onInterceptTouchEvent(@NonNull final CoordinatorLayout parent,
         }
 
         // Found that user still swiping, continue following
-        if (skippingInterception) {
+        if (skippingInterception || getState() == BottomSheetBehavior.STATE_SETTLING) {
             return false;
         }
 
         // Don't need to do anything if bottomSheet isn't expanded
-        if (getState() == BottomSheetBehavior.STATE_EXPANDED) {
+        if (getState() == BottomSheetBehavior.STATE_EXPANDED
+                && event.getAction() == MotionEvent.ACTION_DOWN) {
             // Without overriding scrolling will not work when user touches these elements
             for (final Integer element : skipInterceptionOfElements) {
                 final ViewGroup viewGroup = child.findViewById(element);

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -20,7 +20,8 @@ public enum UserAction {
     DELETE_FROM_HISTORY("delete from history"),
     PLAY_STREAM("Play stream"),
     DOWNLOAD_POSTPROCESSING("download post-processing"),
-    DOWNLOAD_FAILED("download failed");
+    DOWNLOAD_FAILED("download failed"),
+    PREFERENCES_MIGRATION("migration of preferences");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/player/event/CustomBottomSheetBehavior.java
Patch:
@@ -39,7 +39,7 @@ public boolean onInterceptTouchEvent(@NonNull final CoordinatorLayout parent,
         }
 
         // Found that user still swiping, continue following
-        if (skippingInterception) {
+        if (skippingInterception || getState() == BottomSheetBehavior.STATE_SETTLING) {
             return false;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/event/CustomBottomSheetBehavior.java
Patch:
@@ -44,7 +44,8 @@ public boolean onInterceptTouchEvent(@NonNull final CoordinatorLayout parent,
         }
 
         // Don't need to do anything if bottomSheet isn't expanded
-        if (getState() == BottomSheetBehavior.STATE_EXPANDED) {
+        if (getState() == BottomSheetBehavior.STATE_EXPANDED
+                && event.getAction() == MotionEvent.ACTION_DOWN) {
             // Without overriding scrolling will not work when user touches these elements
             for (final Integer element : skipInterceptionOfElements) {
                 final ViewGroup viewGroup = child.findViewById(element);

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -171,6 +171,7 @@ public void stop(final boolean autoplayEnabled) {
             // Android TV will handle back button in case controls will be visible
             // (one more additional unneeded click while the player is hidden)
             playerImpl.hideControls(0, 0);
+            playerImpl.onQueueClosed();
             // Notification shows information about old stream but if a user selects
             // a stream from backStack it's not actual anymore
             // So we should hide the notification at all.

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java
Patch:
@@ -257,6 +257,7 @@ public void handleIntent(final Intent intent) {
         } else {
             getRootView().setVisibility(View.VISIBLE);
             initVideoPlayer();
+            onQueueClosed();
             // Android TV: without it focus will frame the whole player
             playPauseButton.requestFocus();
         }

File: app/src/main/java/us/shandian/giga/io/StoredFileHelper.java
Patch:
@@ -315,6 +315,7 @@ public boolean equals(StoredFileHelper storage) {
             return false;
 
         if (this.isInvalid() || storage.isInvalid()) {
+            if (this.srcName == null || storage.srcName == null || this.srcType == null || storage.srcType == null) return false;
             return this.srcName.equalsIgnoreCase(storage.srcName) && this.srcType.equalsIgnoreCase(storage.srcType);
         }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -133,7 +133,7 @@ public void startLoading(final boolean forceLoad) {
                     currentInfo = result;
                     currentNextPage = result.getNextPage();
                     handleResult(result);
-                }, (@NonNull Throwable throwable) -> onError(throwable));
+                }, this::onError);
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/local/bookmark/BookmarkFragment.java
Patch:
@@ -271,9 +271,8 @@ private void showLocalDialog(final PlaylistMetadataEntry selectedItem) {
 
         final Builder builder = new AlertDialog.Builder(activity);
         builder.setView(dialogView)
-                .setPositiveButton(R.string.rename_playlist, (dialog, which) -> {
-                    changeLocalPlaylistName(selectedItem.uid, editText.getText().toString());
-                })
+                .setPositiveButton(R.string.rename_playlist, (dialog, which) ->
+                        changeLocalPlaylistName(selectedItem.uid, editText.getText().toString()))
                 .setNegativeButton(R.string.cancel, null)
                 .setNeutralButton(R.string.delete, (dialog, which) -> {
                     showDeleteDialog(selectedItem.name,

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -553,9 +553,8 @@ private void createRenameDialog() {
                 .setView(dialogView)
                 .setCancelable(true)
                 .setNegativeButton(R.string.cancel, null)
-                .setPositiveButton(R.string.rename, (dialogInterface, i) -> {
-                    changePlaylistName(nameEdit.getText().toString());
-                });
+                .setPositiveButton(R.string.rename, (dialogInterface, i) ->
+                        changePlaylistName(nameEdit.getText().toString()));
 
         dialogBuilder.show();
     }

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -213,9 +213,8 @@ private void restoreDefaults() {
 
     private void initButton(final View rootView) {
         final FloatingActionButton fab = rootView.findViewById(R.id.addInstanceButton);
-        fab.setOnClickListener(v -> {
-            showAddItemDialog(requireContext());
-        });
+        fab.setOnClickListener(v ->
+                showAddItemDialog(requireContext()));
     }
 
     private void showAddItemDialog(final Context c) {

File: app/src/androidTest/java/org/schabi/newpipe/report/ErrorInfoTest.java
Patch:
@@ -2,9 +2,9 @@
 
 import android.os.Parcel;
 
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
 
-import androidx.test.runner.AndroidJUnit4;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.schabi.newpipe.R;

File: app/src/main/java/org/schabi/newpipe/about/AboutActivity.java
Patch:
@@ -167,7 +167,7 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
      */
     public class SectionsPagerAdapter extends FragmentPagerAdapter {
         public SectionsPagerAdapter(final FragmentManager fm) {
-            super(fm);
+            super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
         }
 
         @Override

File: app/src/main/java/org/schabi/newpipe/database/BasicDAO.java
Patch:
@@ -14,13 +14,13 @@
 @Dao
 public interface BasicDAO<Entity> {
     /* Inserts */
-    @Insert(onConflict = OnConflictStrategy.FAIL)
+    @Insert(onConflict = OnConflictStrategy.ABORT)
     long insert(Entity entity);
 
-    @Insert(onConflict = OnConflictStrategy.FAIL)
+    @Insert(onConflict = OnConflictStrategy.ABORT)
     List<Long> insertAll(Entity... entities);
 
-    @Insert(onConflict = OnConflictStrategy.FAIL)
+    @Insert(onConflict = OnConflictStrategy.ABORT)
     List<Long> insertAll(Collection<Entity> entities);
 
     /* Searches */

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.download;
 
-import android.app.FragmentTransaction;
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.Menu;
@@ -11,6 +10,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
+import androidx.fragment.app.FragmentTransaction;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.util.DeviceUtils;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/TabAdaptor.java
Patch:
@@ -16,7 +16,7 @@ public class TabAdaptor extends FragmentPagerAdapter {
     private final FragmentManager fragmentManager;
 
     public TabAdaptor(final FragmentManager fm) {
-        super(fm);
+        super(fm, BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT);
         this.fragmentManager = fm;
     }
 

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -184,6 +184,9 @@ public void stop(final boolean autoplayEnabled) {
     @Override
     public void onTaskRemoved(final Intent rootIntent) {
         super.onTaskRemoved(rootIntent);
+        if (!playerImpl.videoPlayerSelected()) {
+            return;
+        }
         onDestroy();
         // Unload from memory completely
         Runtime.getRuntime().halt(0);

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -202,7 +202,8 @@ private boolean onSingleTapConfirmedInMain(final MotionEvent e) {
 
     private boolean onScrollInMain(final MotionEvent initialEvent, final MotionEvent movingEvent,
                                    final float distanceX, final float distanceY) {
-        if (!isVolumeGestureEnabled && !isBrightnessGestureEnabled) {
+        if ((!isVolumeGestureEnabled && !isBrightnessGestureEnabled)
+                || !playerImpl.isFullscreen()) {
             return false;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -184,6 +184,9 @@ public void stop(final boolean autoplayEnabled) {
     @Override
     public void onTaskRemoved(final Intent rootIntent) {
         super.onTaskRemoved(rootIntent);
+        if (!playerImpl.videoPlayerSelected()) {
+            return;
+        }
         onDestroy();
         // Unload from memory completely
         Runtime.getRuntime().halt(0);

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -202,7 +202,8 @@ private boolean onSingleTapConfirmedInMain(final MotionEvent e) {
 
     private boolean onScrollInMain(final MotionEvent initialEvent, final MotionEvent movingEvent,
                                    final float distanceX, final float distanceY) {
-        if (!isVolumeGestureEnabled && !isBrightnessGestureEnabled) {
+        if ((!isVolumeGestureEnabled && !isBrightnessGestureEnabled)
+                || !playerImpl.isFullscreen()) {
             return false;
         }
 

File: app/src/main/java/org/schabi/newpipe/about/License.java
Patch:
@@ -4,10 +4,12 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import java.io.Serializable;
+
 /**
  * Class for storing information about a software license.
  */
-public class License implements Parcelable {
+public class License implements Parcelable, Serializable {
     public static final Creator<License> CREATOR = new Creator<License>() {
         @Override
         public License createFromParcel(final Parcel source) {

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java
Patch:
@@ -622,7 +622,7 @@ public void onPlaybackShutdown() {
         if (DEBUG) {
             Log.d(TAG, "onPlaybackShutdown() called");
         }
-        // Override it because we don't want playerImpl destroyed
+        service.onDestroy();
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java
Patch:
@@ -880,9 +880,11 @@ private void onMoreOptionsClicked() {
 
     private void onShareClicked() {
         // share video at the current time (youtube.com/watch?v=ID&t=SECONDS)
+        // Timestamp doesn't make sense in a live stream so drop it
+        final String ts = isLive() ? "" : ("&t=" + (getPlaybackSeekBar().getProgress() / 1000));
         ShareUtils.shareUrl(service,
                 getVideoTitle(),
-                getVideoUrl() + "&t=" + getPlaybackSeekBar().getProgress() / 1000);
+                getVideoUrl() + ts);
     }
 
     private void onPlayWithKodiClicked() {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -426,8 +426,8 @@ public void onClick(final View v) {
             case R.id.sub_channel_title_view:
                 if (!TextUtils.isEmpty(currentInfo.getParentChannelUrl())) {
                     try {
-                        NavigationHelper.openChannelFragment(getFragmentManager(),
-                                currentInfo.getServiceId(), currentInfo.getParentChannelUrl(),
+                        NavigationHelper.openChannelFragment(getFM(), currentInfo.getServiceId(),
+                                currentInfo.getParentChannelUrl(),
                                 currentInfo.getParentChannelName());
                     } catch (Exception e) {
                         ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -505,7 +505,7 @@ private void initSearchListeners() {
                 Log.d(TAG, "onClick() called with: v = [" + v + "]");
             }
             if (TextUtils.isEmpty(searchEditText.getText())) {
-                NavigationHelper.gotoMainFragment(getFragmentManager());
+                NavigationHelper.gotoMainFragment(getFM());
                 return;
             }
 
@@ -807,7 +807,7 @@ private void search(final String ss, final String[] cf, final String sf) {
                         .subscribeOn(Schedulers.io())
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe(intent -> {
-                            getFragmentManager().popBackStackImmediate();
+                            getFM().popBackStackImmediate();
                             activity.startActivity(intent);
                         }, throwable ->
                                 showError(getString(R.string.url_not_supported_toast), false)));

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -177,7 +177,7 @@ protected void initListeners() {
             public void selected(final LocalItem selectedItem) {
                 if (selectedItem instanceof PlaylistStreamEntry) {
                     final PlaylistStreamEntry item = (PlaylistStreamEntry) selectedItem;
-                    NavigationHelper.openVideoDetailFragment(getFragmentManager(),
+                    NavigationHelper.openVideoDetailFragment(getFM(),
                             item.getStreamEntity().getServiceId(), item.getStreamEntity().getUrl(),
                             item.getStreamEntity().getTitle());
                 }

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -177,7 +177,7 @@ protected void initListeners() {
             public void selected(final LocalItem selectedItem) {
                 if (selectedItem instanceof PlaylistStreamEntry) {
                     final PlaylistStreamEntry item = (PlaylistStreamEntry) selectedItem;
-                    NavigationHelper.openVideoDetailFragment(getFragmentManager(),
+                    NavigationHelper.openVideoDetailFragment(getFM(),
                             item.getStreamEntity().getServiceId(), item.getStreamEntity().getUrl(),
                             item.getStreamEntity().getTitle());
                 }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -2164,10 +2164,10 @@ private void setupBottomPlayer() {
             @Override
             public void onStateChanged(@NonNull final View bottomSheet, final int newState) {
                 bottomSheetState = newState;
-                ViewGroup mainFragment = requireActivity().findViewById(R.id.fragment_holder);
-
+                final ViewGroup mainFragment = requireActivity().findViewById(R.id.fragment_holder);
                 switch (newState) {
                     case BottomSheetBehavior.STATE_HIDDEN:
+                        mainFragment.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);
                         bottomSheetBehavior.setPeekHeight(0);
                         cleanUp();
                         break;

File: app/src/main/java/org/schabi/newpipe/util/PlaylistItemsUtils.java
Patch:
@@ -14,7 +14,7 @@ private PlaylistItemsUtils() { }
     public static List<PlaylistLocalItem> merge(
             final List<PlaylistMetadataEntry> localPlaylists,
             final List<PlaylistRemoteEntity> remotePlaylists) {
-        List<PlaylistLocalItem> items = new ArrayList<>(
+        final List<PlaylistLocalItem> items = new ArrayList<>(
                 localPlaylists.size() + remotePlaylists.size());
         items.addAll(localPlaylists);
         items.addAll(remotePlaylists);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -166,9 +166,6 @@ public int onStartCommand(final Intent intent, final int flags, final int startI
             initPopup();
             initPopupCloseOverlay();
         }
-        if (!playerImpl.isPlaying()) {
-            playerImpl.getPlayer().setPlayWhenReady(true);
-        }
 
         playerImpl.handleIntent(intent);
 

File: app/src/main/java/us/shandian/giga/io/StoredFileHelper.java
Patch:
@@ -315,6 +315,7 @@ public boolean equals(StoredFileHelper storage) {
             return false;
 
         if (this.isInvalid() || storage.isInvalid()) {
+            if (this.srcName == null || storage.srcName == null || this.srcType == null || storage.srcType == null) return false;
             return this.srcName.equalsIgnoreCase(storage.srcName) && this.srcType.equalsIgnoreCase(storage.srcType);
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -166,9 +166,6 @@ public int onStartCommand(final Intent intent, final int flags, final int startI
             initPopup();
             initPopupCloseOverlay();
         }
-        if (!playerImpl.isPlaying()) {
-            playerImpl.getPlayer().setPlayWhenReady(true);
-        }
 
         playerImpl.handleIntent(intent);
 

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueAdapter.java
Patch:
@@ -115,9 +115,6 @@ private void onPlayQueueChanged(final PlayQueueEvent message) {
                 break;
             case ERROR:
                 final ErrorEvent errorEvent = (ErrorEvent) message;
-                if (!errorEvent.isSkippable()) {
-                    notifyItemRemoved(errorEvent.getErrorIndex());
-                }
                 notifyItemChanged(errorEvent.getErrorIndex());
                 notifyItemChanged(errorEvent.getQueueIndex());
                 break;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueAdapter.java
Patch:
@@ -115,9 +115,6 @@ private void onPlayQueueChanged(final PlayQueueEvent message) {
                 break;
             case ERROR:
                 final ErrorEvent errorEvent = (ErrorEvent) message;
-                if (!errorEvent.isSkippable()) {
-                    notifyItemRemoved(errorEvent.getErrorIndex());
-                }
                 notifyItemChanged(errorEvent.getErrorIndex());
                 notifyItemChanged(errorEvent.getQueueIndex());
                 break;

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -166,6 +166,7 @@ private void setupDrawer() throws Exception {
                     .add(R.id.menu_tabs_group, kioskId, 0, KioskTranslator
                             .getTranslatedKioskName(ks, this))
                     .setIcon(KioskTranslator.getKioskIcon(ks, this));
+            kioskId++;
         }
 
         drawerItems.getMenu()

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -396,13 +396,11 @@ private void initToolbar(final Toolbar toolbar) {
             Log.d(TAG, "initToolbar() called with: toolbar = [" + toolbar + "]");
         }
 
-        boolean isLight = ThemeHelper.isLightThemeSelected(getActivity());
-
         toolbar.setTitle(R.string.download_dialog_title);
         toolbar.setNavigationIcon(
             ThemeHelper.resolveResourceIdFromAttr(requireContext(), R.attr.ic_arrow_back));
         toolbar.inflateMenu(R.menu.dialog_url);
-        toolbar.setNavigationOnClickListener(v -> getDialog().dismiss());
+        toolbar.setNavigationOnClickListener(v -> requireDialog().dismiss());
         toolbar.setNavigationContentDescription(R.string.cancel);
 
         okButton = toolbar.findViewById(R.id.okay);

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1078,7 +1078,8 @@ private void setErrorImage(final int imageResource) {
             return;
         }
 
-        thumbnailImageView.setImageDrawable(AppCompatResources.getDrawable(requireContext(), imageResource));
+        thumbnailImageView.setImageDrawable(
+                AppCompatResources.getDrawable(requireContext(), imageResource));
         animateView(thumbnailImageView, false, 0, 0,
                 () -> animateView(thumbnailImageView, true, 500));
     }

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -53,7 +53,6 @@
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.appcompat.content.res.AppCompatResources;
 import androidx.core.app.NotificationCompat;
 
 import com.google.android.exoplayer2.C;

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -86,7 +86,7 @@ public void setOnCancelListener(final OnCancelListener listener) {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    public void onCreate(@Nullable Bundle savedInstanceState) {
+    public void onCreate(@Nullable final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setStyle(STYLE_NO_TITLE, ThemeHelper.getMinWidthDialogTheme(requireContext()));
     }

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -68,7 +68,7 @@ public void setOnCancelListener(final OnCancelListener listener) {
     //////////////////////////////////////////////////////////////////////////*/
 
     @Override
-    public void onCreate(@Nullable Bundle savedInstanceState) {
+    public void onCreate(@Nullable final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setStyle(STYLE_NO_TITLE, ThemeHelper.getMinWidthDialogTheme(requireContext()));
     }

File: app/src/main/java/org/schabi/newpipe/util/KioskTranslator.java
Patch:
@@ -49,7 +49,7 @@ public static String getTranslatedKioskName(final String kioskId, final Context
         }
     }
 
-    public static int getKioskIcons(final String kioskId, final Context c) {
+    public static int getKioskIcon(final String kioskId, final Context c) {
         switch (kioskId) {
             case "Trending":
             case "Top 50":

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.fragments;
 
 import android.content.Context;
+import android.content.res.ColorStateList;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.util.Log;
@@ -31,6 +32,7 @@
 import org.schabi.newpipe.settings.tabs.TabsManager;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ServiceHelper;
+import org.schabi.newpipe.util.ThemeHelper;
 import org.schabi.newpipe.views.ScrollableTabLayout;
 
 import java.util.ArrayList;
@@ -90,6 +92,7 @@ protected void initViews(final View rootView, final Bundle savedInstanceState) {
         tabLayout = rootView.findViewById(R.id.main_tab_layout);
         viewPager = rootView.findViewById(R.id.pager);
 
+        tabLayout.setTabIconTint(ColorStateList.valueOf(ThemeHelper.resolveColorFromAttr(requireContext(), R.attr.colorAccent)));
         tabLayout.setupWithViewPager(viewPager);
         tabLayout.addOnTabSelectedListener(this);
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -399,8 +399,8 @@ private void initToolbar(final Toolbar toolbar) {
         boolean isLight = ThemeHelper.isLightThemeSelected(getActivity());
 
         toolbar.setTitle(R.string.download_dialog_title);
-        toolbar.setNavigationIcon(isLight ? R.drawable.ic_arrow_back_black_24dp
-                : R.drawable.ic_arrow_back_white_24dp);
+        toolbar.setNavigationIcon(
+            ThemeHelper.resolveResourceIdFromAttr(requireContext(), R.attr.ic_arrow_back));
         toolbar.inflateMenu(R.menu.dialog_url);
         toolbar.setNavigationOnClickListener(v -> getDialog().dismiss());
         toolbar.setNavigationContentDescription(R.string.cancel);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SuggestionListAdapter.java
Patch:
@@ -117,8 +117,8 @@ private SuggestionItemHolder(final View rootView) {
             queryView = rootView.findViewById(R.id.suggestion_search);
             insertView = rootView.findViewById(R.id.suggestion_insert);
 
-            historyResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.history);
-            searchResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.search);
+            historyResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.ic_history);
+            searchResId = resolveResourceIdFromAttr(rootView.getContext(), R.attr.ic_search);
         }
 
         private static int resolveResourceIdFromAttr(final Context context,

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -655,15 +655,15 @@ public void onPlaying() {
             super.onPlaying();
             resetNotification();
             updateNotificationThumbnail();
-            updateNotification(R.drawable.ic_pause_white);
+            updateNotification(R.drawable.ic_pause_white_24dp);
         }
 
         @Override
         public void onPaused() {
             super.onPaused();
             resetNotification();
             updateNotificationThumbnail();
-            updateNotification(R.drawable.ic_play_arrow_white);
+            updateNotification(R.drawable.ic_play_arrow_white_24dp);
         }
 
         @Override
@@ -677,7 +677,7 @@ public void onCompleted() {
                 notRemoteView.setProgressBar(R.id.notificationProgressBar, 100, 100, false);
             }
             updateNotificationThumbnail();
-            updateNotification(R.drawable.ic_replay_white);
+            updateNotification(R.drawable.ic_replay_white_24dp);
         }
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -682,13 +682,13 @@ protected void onFullScreenButtonClicked() {
     @Override
     public void onFastRewind() {
         super.onFastRewind();
-        showAndAnimateControl(R.drawable.ic_action_av_fast_rewind, true);
+        showAndAnimateControl(R.drawable.ic_fast_rewind_white_24dp, true);
     }
 
     @Override
     public void onFastForward() {
         super.onFastForward();
-        showAndAnimateControl(R.drawable.ic_action_av_fast_forward, true);
+        showAndAnimateControl(R.drawable.ic_fast_forward_white_24dp, true);
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/settings/tabs/Tab.java
Patch:
@@ -231,7 +231,7 @@ public String getTabName(final Context context) {
         @DrawableRes
         @Override
         public int getTabIconRes(final Context context) {
-            return ThemeHelper.resolveResourceIdFromAttr(context, R.attr.rss);
+            return ThemeHelper.resolveResourceIdFromAttr(context, R.attr.ic_rss);
         }
 
         @Override
@@ -281,7 +281,7 @@ public String getTabName(final Context context) {
         @DrawableRes
         @Override
         public int getTabIconRes(final Context context) {
-            return ThemeHelper.resolveResourceIdFromAttr(context, R.attr.history);
+            return ThemeHelper.resolveResourceIdFromAttr(context, R.attr.ic_history);
         }
 
         @Override

File: app/src/main/java/org/schabi/newpipe/util/KioskTranslator.java
Patch:
@@ -61,7 +61,7 @@ public static int getKioskIcons(final String kioskId, final Context c) {
             case "Recently added":
                 return ThemeHelper.resolveResourceIdFromAttr(c, R.attr.ic_kiosk_recent);
             case "Most liked":
-                return ThemeHelper.resolveResourceIdFromAttr(c, R.attr.thumbs_up);
+                return ThemeHelper.resolveResourceIdFromAttr(c, R.attr.ic_thumb_up);
             default:
                 return 0;
         }

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -191,12 +191,12 @@ public static int getForegroundForFileType(Context ctx, FileType type) {
     public static int getIconForFileType(FileType type) {
         switch (type) {
             case MUSIC:
-                return R.drawable.music;
+                return R.drawable.ic_headset_white_24dp;
             default:
             case VIDEO:
-                return R.drawable.video;
+                return R.drawable.ic_movie_white_24dp;
             case SUBTITLE:
-                return R.drawable.subtitle;
+                return R.drawable.ic_subtitles_white_24dp;
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/util/ShareUtils.java
Patch:
@@ -35,7 +35,7 @@ public static void openUrlInBrowser(final Context context, final String url) {
     }
 
     /**
-     * Open the url in the default app set to open this type of link
+     * Open the url in the default app set to open this type of link.
      * <p>
      * If no app is set as default, it will open a chooser
      *

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1160,7 +1160,6 @@ public void handleResult(@NonNull final StreamInfo info) {
         } else if (!TextUtils.isEmpty(info.getUploaderName())) {
             displayUploaderAsSubChannel(info);
         } else {
-            subChannelThumb.setVisibility(View.GONE);
             uploaderTextView.setVisibility(View.GONE);
             uploaderThumb.setVisibility(View.GONE);
         }
@@ -1296,11 +1295,11 @@ private void hideAgeRestrictedContent() {
         viewPager.setVisibility(View.GONE);
         tabLayout.setVisibility(View.GONE);
     }
+
     private void displayUploaderAsSubChannel(final StreamInfo info) {
         subChannelTextView.setText(info.getUploaderName());
         subChannelTextView.setVisibility(View.VISIBLE);
         subChannelTextView.setSelected(true);
-        subChannelThumb.setVisibility(View.GONE);
         uploaderTextView.setVisibility(View.GONE);
     }
 
@@ -1309,6 +1308,8 @@ private void displayBothUploaderAndSubChannel(final StreamInfo info) {
         subChannelTextView.setVisibility(View.VISIBLE);
         subChannelTextView.setSelected(true);
 
+        subChannelThumb.setVisibility(View.VISIBLE);
+
         if (!TextUtils.isEmpty(info.getUploaderName())) {
             uploaderTextView.setText(
                     String.format(getString(R.string.video_detail_by), info.getUploaderName()));

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -480,9 +480,9 @@ public void handleResult(@NonNull final ChannelInfo result) {
                             currentInfo.getSubChannelName())
             );
             headerSubChannelTitleView.setVisibility(View.VISIBLE);
+            headerSubChannelAvatarView.setVisibility(View.VISIBLE);
         } else {
             headerSubChannelTitleView.setVisibility(View.GONE);
-            headerSubChannelAvatarView.setVisibility(View.GONE);
         }
 
         if (menuRssButton != null) {

File: app/src/debug/java/org/schabi/newpipe/DebugApp.java
Patch:
@@ -40,8 +40,10 @@ public void onCreate() {
 
     @Override
     protected Downloader getDownloader() {
-        return DownloaderImpl.init(new OkHttpClient.Builder()
+        DownloaderImpl downloader = DownloaderImpl.init(new OkHttpClient.Builder()
                 .addNetworkInterceptor(new StethoInterceptor()));
+        setCookiesToDownloader(downloader);
+        return downloader;
     }
 
     private void initStetho() {

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -355,7 +355,8 @@ private synchronized void maybeSynchronizePlayer() {
     //////////////////////////////////////////////////////////////////////////*/
 
     private Observable<Long> getEdgeIntervalSignal() {
-        return Observable.interval(progressUpdateIntervalMillis, TimeUnit.MILLISECONDS, AndroidSchedulers.mainThread())
+        return Observable.interval(progressUpdateIntervalMillis,
+                                   TimeUnit.MILLISECONDS, AndroidSchedulers.mainThread())
                 .filter(ignored ->
                         playbackListener.isApproachingPlaybackEdge(playbackNearEndGapMillis));
     }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -27,7 +27,7 @@
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.SettingsActivity;
-import org.schabi.newpipe.util.ExtractorHelper;
+import org.schabi.newpipe.util.ExceptionUtils;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.ServiceHelper;
 import org.schabi.newpipe.util.StateSaver;
@@ -173,7 +173,7 @@ public void accept(@NonNull final Throwable throwable) {
 
             private boolean isThrowableIgnored(@NonNull final Throwable throwable) {
                 // Don't crash the application over a simple network problem
-                return ExtractorHelper.hasAssignableCauseThrowable(throwable,
+                return ExceptionUtils.hasAssignableCause(throwable,
                         // network api cancellation
                         IOException.class, SocketException.class,
                         // blocking code disposed
@@ -182,7 +182,7 @@ private boolean isThrowableIgnored(@NonNull final Throwable throwable) {
 
             private boolean isThrowableCritical(@NonNull final Throwable throwable) {
                 // Though these exceptions cannot be ignored
-                return ExtractorHelper.hasAssignableCauseThrowable(throwable,
+                return ExceptionUtils.hasAssignableCause(throwable,
                         NullPointerException.class, IllegalArgumentException.class, // bug in app
                         OnErrorNotImplementedException.class, MissingBackpressureException.class,
                         IllegalStateException.class); // bug in operator

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -38,9 +38,9 @@
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.util.ExceptionUtils;
 
 import java.io.FileNotFoundException;
-import java.io.IOException;
 import java.util.Collections;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -227,7 +227,7 @@ protected String getErrorMessage(final Throwable error) {
             message = getString(R.string.invalid_source);
         } else if (error instanceof FileNotFoundException) {
             message = getString(R.string.invalid_file);
-        } else if (error instanceof IOException) {
+        } else if (ExceptionUtils.isNetworkRelated(error)) {
             message = getString(R.string.network_error);
         }
         return message;

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -26,7 +26,6 @@
 import org.schabi.newpipe.util.ExceptionUtils;
 import org.schabi.newpipe.util.InfoCache;
 
-import java.io.IOException;
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -213,7 +212,7 @@ protected boolean onError(final Throwable exception) {
         } else if (exception instanceof ContentNotAvailableException) {
             showError(getString(R.string.content_not_available), false);
             return true;
-        } else if (exception instanceof IOException) {
+        } else if (ExceptionUtils.isNetworkRelated(exception)) {
             showError(getString(R.string.network_error), true);
             return true;
         }

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/BaseImportExportService.java
Patch:
@@ -38,9 +38,9 @@
 import org.schabi.newpipe.local.subscription.SubscriptionManager;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.util.ExceptionUtils;
 
 import java.io.FileNotFoundException;
-import java.io.IOException;
 import java.util.Collections;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -227,7 +227,7 @@ protected String getErrorMessage(final Throwable error) {
             message = getString(R.string.invalid_source);
         } else if (error instanceof FileNotFoundException) {
             message = getString(R.string.invalid_file);
-        } else if (error instanceof IOException) {
+        } else if (ExceptionUtils.isNetworkRelated(error)) {
             message = getString(R.string.network_error);
         }
         return message;

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -51,7 +51,6 @@
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
 
-import java.io.IOException;
 import java.util.Collections;
 import java.util.List;
 
@@ -288,7 +287,7 @@ public static void handleGeneralException(final Context context, final int servi
                 Intent intent = new Intent(context, ReCaptchaActivity.class);
                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 context.startActivity(intent);
-            } else if (exception instanceof IOException) {
+            } else if (ExceptionUtils.isNetworkRelated(exception)) {
                 Toast.makeText(context, R.string.network_error, Toast.LENGTH_LONG).show();
             } else if (exception instanceof ContentNotAvailableException) {
                 Toast.makeText(context, R.string.content_not_available, Toast.LENGTH_LONG).show();

File: app/src/main/java/org/schabi/newpipe/streams/DataReader.java
Patch:
@@ -86,11 +86,11 @@ public long readLong() throws IOException {
         return high << 32 | low;
     }
 
-    public int read(byte[] buffer) throws IOException {
+    public int read(final byte[] buffer) throws IOException {
         return read(buffer, 0, buffer.length);
     }
 
-    public int read(byte[] buffer, int offset, int count) throws IOException {
+    public int read(final byte[] buffer, int offset, int count) throws IOException {
         if (readCount < 0) {
             return -1;
         }

File: app/src/main/java/org/schabi/newpipe/streams/OggFromWebMWriter.java
Patch:
@@ -419,7 +419,7 @@ private void populateCrc32Table() {
         }
     }
 
-    private int calcCrc32(int initialCrc, byte[] buffer, int size) {
+    private int calcCrc32(int initialCrc, final byte[] buffer, final int size) {
         for (int i = 0; i < size; i++) {
             int reg = (initialCrc >>> 24) & 0xff;
             initialCrc = (initialCrc << 8) ^ crc32Table[reg ^ (buffer[i] & 0xff)];

File: app/src/debug/java/org/schabi/newpipe/DebugApp.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
+
 import androidx.annotation.NonNull;
 import androidx.multidex.MultiDex;
 
@@ -26,7 +27,7 @@ public class DebugApp extends App {
     private static final String TAG = DebugApp.class.toString();
 
     @Override
-    protected void attachBaseContext(Context base) {
+    protected void attachBaseContext(final Context base) {
         super.attachBaseContext(base);
         MultiDex.install(this);
     }

File: app/src/main/java/org/schabi/newpipe/database/LocalItem.java
Patch:
@@ -1,13 +1,13 @@
 package org.schabi.newpipe.database;
 
 public interface LocalItem {
+    LocalItemType getLocalItemType();
+
     enum LocalItemType {
         PLAYLIST_LOCAL_ITEM,
         PLAYLIST_REMOTE_ITEM,
 
         PLAYLIST_STREAM_ITEM,
         STATISTIC_STREAM_ITEM,
     }
-
-    LocalItemType getLocalItemType();
 }

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistDAO.java
Patch:
@@ -24,13 +24,13 @@ public abstract class PlaylistDAO implements BasicDAO<PlaylistEntity> {
     public abstract int deleteAll();
 
     @Override
-    public Flowable<List<PlaylistEntity>> listByService(int serviceId) {
+    public Flowable<List<PlaylistEntity>> listByService(final int serviceId) {
         throw new UnsupportedOperationException();
     }
 
     @Query("SELECT * FROM " + PLAYLIST_TABLE + " WHERE " + PLAYLIST_ID + " = :playlistId")
-    public abstract Flowable<List<PlaylistEntity>> getPlaylist(final long playlistId);
+    public abstract Flowable<List<PlaylistEntity>> getPlaylist(long playlistId);
 
     @Query("DELETE FROM " + PLAYLIST_TABLE + " WHERE " + PLAYLIST_ID + " = :playlistId")
-    public abstract int deletePlaylist(final long playlistId);
+    public abstract int deletePlaylist(long playlistId);
 }

File: app/src/main/java/org/schabi/newpipe/fragments/BackPressable.java
Patch:
@@ -1,11 +1,11 @@
 package org.schabi.newpipe.fragments;
 
 /**
- * Indicates that the current fragment can handle back presses
+ * Indicates that the current fragment can handle back presses.
  */
 public interface BackPressable {
     /**
-     * A back press was delegated to this fragment
+     * A back press was delegated to this fragment.
      *
      * @return if the back press was handled
      */

File: app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java
Patch:
@@ -2,8 +2,11 @@
 
 public interface ViewContract<I> {
     void showLoading();
+
     void hideLoading();
+
     void showEmptyState();
+
     void showError(String message, boolean showRetryButton);
 
     void handleResult(I result);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SuggestionItem.java
Patch:
@@ -1,10 +1,10 @@
 package org.schabi.newpipe.fragments.list.search;
 
 public class SuggestionItem {
-    public final boolean fromHistory;
+    final boolean fromHistory;
     public final String query;
 
-    public SuggestionItem(boolean fromHistory, String query) {
+    public SuggestionItem(final boolean fromHistory, final String query) {
         this.fromHistory = fromHistory;
         this.query = query;
     }

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemDialog.java
Patch:
@@ -3,11 +3,12 @@
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
 import android.view.View;
 import android.widget.TextView;
 
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistInfoItemHolder.java
Patch:
@@ -6,8 +6,7 @@
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 
 public class PlaylistInfoItemHolder extends PlaylistMiniInfoItemHolder {
-
-    public PlaylistInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup parent) {
+    public PlaylistInfoItemHolder(final InfoItemBuilder infoItemBuilder, final ViewGroup parent) {
         super(infoItemBuilder, R.layout.list_playlist_item, parent);
     }
 }

File: app/src/main/java/org/schabi/newpipe/local/subscription/services/ImportExportEventListener.java
Patch:
@@ -14,4 +14,4 @@ public interface ImportExportEventListener {
      * @param itemName the name of the subscription item
      */
     void onItemCompleted(String itemName);
-}
\ No newline at end of file
+}

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayerActivity.java
Patch:
@@ -47,7 +47,7 @@ public int getPlayerOptionMenuResource() {
     }
 
     @Override
-    public boolean onPlayerOptionSelected(MenuItem item) {
+    public boolean onPlayerOptionSelected(final MenuItem item) {
         if (item.getItemId() == R.id.action_switch_popup) {
 
             if (!PermissionHelper.isPopupEnabled(this)) {
@@ -58,8 +58,8 @@ public boolean onPlayerOptionSelected(MenuItem item) {
             this.player.setRecovery();
             getApplicationContext().sendBroadcast(getPlayerShutdownIntent());
             getApplicationContext().startService(
-                getSwitchIntent(PopupVideoPlayer.class)
-                    .putExtra(BasePlayer.START_PAUSED, !this.player.isPlaying())
+                    getSwitchIntent(PopupVideoPlayer.class)
+                            .putExtra(BasePlayer.START_PAUSED, !this.player.isPlaying())
             );
             return true;
         }

File: app/src/main/java/org/schabi/newpipe/player/PlayerServiceBinder.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.player;
 
 import android.os.Binder;
+
 import androidx.annotation.NonNull;
 
 class PlayerServiceBinder extends Binder {

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayerActivity.java
Patch:
@@ -46,13 +46,13 @@ public int getPlayerOptionMenuResource() {
     }
 
     @Override
-    public boolean onPlayerOptionSelected(MenuItem item) {
+    public boolean onPlayerOptionSelected(final MenuItem item) {
         if (item.getItemId() == R.id.action_switch_background) {
             this.player.setRecovery();
             getApplicationContext().sendBroadcast(getPlayerShutdownIntent());
             getApplicationContext().startService(
-                getSwitchIntent(BackgroundPlayer.class)
-                    .putExtra(BasePlayer.START_PAUSED, !this.player.isPlaying())
+                    getSwitchIntent(BackgroundPlayer.class)
+                            .putExtra(BasePlayer.START_PAUSED, !this.player.isPlaying())
             );
             return true;
         }

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -46,7 +46,7 @@ public class Mp4FromDashWriter {
 
     private int overrideMainBrand = 0x00;
 
-    private ArrayList<Integer> compatibleBrands = new ArrayList<>(5);
+    private final ArrayList<Integer> compatibleBrands = new ArrayList<>(5);
 
     public Mp4FromDashWriter(SharpStream... sources) throws IOException {
         for (SharpStream src : sources) {

File: app/src/main/java/us/shandian/giga/io/ChunkFileInputStream.java
Patch:
@@ -104,7 +104,7 @@ public long skip(long pos) throws IOException {
 
     @Override
     public long available() {
-        return (int) (length - position);
+        return length - position;
     }
 
     @SuppressWarnings("EmptyCatchBlock")

File: app/src/main/java/us/shandian/giga/io/CircularFileWriter.java
Patch:
@@ -221,7 +221,7 @@ public void write(byte[] b, int off, int len) throws IOException {
                 available = out.length - offsetOut;
             }
 
-            int length = Math.min(len, (int) available);
+            int length = Math.min(len, (int) Math.min(Integer.MAX_VALUE, available));
             out.write(b, off, length);
 
             len -= length;

File: app/src/main/java/us/shandian/giga/io/ChunkFileInputStream.java
Patch:
@@ -104,7 +104,7 @@ public long skip(long pos) throws IOException {
 
     @Override
     public long available() {
-        return (int) (length - position);
+        return length - position;
     }
 
     @SuppressWarnings("EmptyCatchBlock")

File: app/src/main/java/us/shandian/giga/io/CircularFileWriter.java
Patch:
@@ -221,7 +221,7 @@ public void write(byte[] b, int off, int len) throws IOException {
                 available = out.length - offsetOut;
             }
 
-            int length = Math.min(len, (int) available);
+            int length = Math.min(len, (int) Math.min(Integer.MAX_VALUE, available));
             out.write(b, off, length);
 
             len -= length;

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -403,7 +403,8 @@ protected void setShuffleButton(final ImageButton shuffleButton, final boolean s
     }
 
     protected void setMuteButton(final ImageButton muteButton, final boolean isMuted) {
-        muteButton.setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), isMuted ? R.drawable.ic_volume_off_white_72dp : R.drawable.ic_volume_up_white_72dp));
+        muteButton.setImageDrawable(AppCompatResources.getDrawable(getApplicationContext(),
+                isMuted ? R.drawable.ic_volume_off_white_72dp : R.drawable.ic_volume_up_white_72dp));
     }
 
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamGridInfoItemHolder.java
Patch:
@@ -5,7 +5,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 
-public class StreamGridInfoItemHolder extends StreamMiniInfoItemHolder {
+public class StreamGridInfoItemHolder extends StreamInfoItemHolder {
 
 	public StreamGridInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup parent) {
 		super(infoItemBuilder, R.layout.list_stream_grid_item, parent);

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -16,7 +16,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentStatePagerAdapter;
+import androidx.fragment.app.FragmentStatePagerAdapterMenuWorkaround;
 import androidx.viewpager.widget.ViewPager;
 
 import com.google.android.material.tabs.TabLayout;
@@ -185,7 +185,7 @@ public void onTabReselected(TabLayout.Tab tab) {
         updateTitleForTab(tab.getPosition());
     }
 
-    private static class SelectedTabsPagerAdapter extends FragmentStatePagerAdapter {
+    private static class SelectedTabsPagerAdapter extends FragmentStatePagerAdapterMenuWorkaround {
         private final Context context;
         private final List<Tab> internalTabsList;
 

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -16,7 +16,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentStatePagerAdapter;
+import androidx.fragment.app.FragmentStatePagerAdapterMenuWorkaround;
 import androidx.viewpager.widget.ViewPager;
 
 import com.google.android.material.tabs.TabLayout;
@@ -185,7 +185,7 @@ public void onTabReselected(TabLayout.Tab tab) {
         updateTitleForTab(tab.getPosition());
     }
 
-    private static class SelectedTabsPagerAdapter extends FragmentStatePagerAdapter {
+    private static class SelectedTabsPagerAdapter extends FragmentStatePagerAdapterMenuWorkaround {
         private final Context context;
         private final List<Tab> internalTabsList;
 

File: app/src/main/java/org/schabi/newpipe/util/ThemeHelper.java
Patch:
@@ -175,7 +175,7 @@ public static int getSettingsThemeStyle(Context context) {
     }
 
     /**
-     * Get a resource id from a resource styled according to the the context's theme.
+     * Get a resource id from a resource styled according to the context's theme.
      */
     public static int resolveResourceIdFromAttr(Context context, @AttrRes int attr) {
         TypedArray a = context.getTheme().obtainStyledAttributes(new int[]{attr});
@@ -185,7 +185,7 @@ public static int resolveResourceIdFromAttr(Context context, @AttrRes int attr)
     }
 
     /**
-     * Get a color from an attr styled according to the the context's theme.
+     * Get a color from an attr styled according to the context's theme.
      */
     public static int resolveColorFromAttr(Context context, @AttrRes int attrColor) {
         final TypedValue value = new TypedValue();

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -70,7 +70,7 @@ public void run() {
                     Log.d(TAG, mId + ":acquired block at position=" + block.position + " done=" + block.done);
             }
 
-            long start = block.position * DownloadMission.BLOCK_SIZE;
+            long start = (long)block.position * DownloadMission.BLOCK_SIZE;
             long end = start + DownloadMission.BLOCK_SIZE - 1;
 
             start += block.done;

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -70,7 +70,7 @@ public void run() {
                     Log.d(TAG, mId + ":acquired block at position=" + block.position + " done=" + block.done);
             }
 
-            long start = block.position * DownloadMission.BLOCK_SIZE;
+            long start = (long)block.position * DownloadMission.BLOCK_SIZE;
             long end = start + DownloadMission.BLOCK_SIZE - 1;
 
             start += block.done;

File: app/src/main/java/org/schabi/newpipe/NewPipeDatabase.java
Patch:
@@ -23,7 +23,6 @@ private static AppDatabase getDatabase(Context context) {
         return Room
                 .databaseBuilder(context.getApplicationContext(), AppDatabase.class, DATABASE_NAME)
                 .addMigrations(MIGRATION_11_12)
-                .fallbackToDestructiveMigration()
                 .build();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -451,7 +451,7 @@ public void onPlaybackShutdown() {
 
         private void updateMetadata() {
             if (activityListener != null && getCurrentMetadata() != null) {
-                activityListener.onMetadataUpdate(getCurrentMetadata().getMetadata());
+                activityListener.onMetadataUpdate(getCurrentMetadata().getMetadata(), playQueue);
             }
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -673,7 +673,7 @@ public void onLoadingCancelled(String imageUri, View view) {
 
         private void updateMetadata() {
             if (activityListener != null && getCurrentMetadata() != null) {
-                activityListener.onMetadataUpdate(getCurrentMetadata().getMetadata());
+                activityListener.onMetadataUpdate(getCurrentMetadata().getMetadata(), playQueue);
             }
         }
 

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -596,7 +596,7 @@ public void onProgressUpdate(int currentProgress, int duration, int bufferPercen
     }
 
     @Override
-    public void onMetadataUpdate(StreamInfo info) {
+    public void onMetadataUpdate(StreamInfo info, PlayQueue queue) {
         if (info != null) {
             metadataTitle.setText(info.getName());
             metadataArtist.setText(info.getUploaderName());

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerEventListener.java
Patch:
@@ -10,6 +10,6 @@ public interface PlayerEventListener {
     void onQueueUpdate(PlayQueue queue);
     void onPlaybackUpdate(int state, int repeatMode, boolean shuffled, PlaybackParameters parameters);
     void onProgressUpdate(int currentProgress, int duration, int bufferPercent);
-    void onMetadataUpdate(StreamInfo info);
+    void onMetadataUpdate(StreamInfo info, PlayQueue queue);
     void onServiceStopped();
 }

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -277,7 +277,7 @@ public void handleIntent(Intent intent) {
         final float playbackPitch = intent.getFloatExtra(PLAYBACK_PITCH, getPlaybackPitch());
         final boolean playbackSkipSilence = intent.getBooleanExtra(PLAYBACK_SKIP_SILENCE,
                 getPlaybackSkipSilence());
-        final boolean isMuted = intent.getBooleanExtra(IS_MUTED, isMuted());
+        final boolean isMuted = intent.getBooleanExtra(IS_MUTED, simpleExoPlayer == null ? false : isMuted());
 
         // seek to timestamp if stream is already playing
         if (simpleExoPlayer != null

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -341,6 +341,7 @@ public void initPlayer(boolean playOnReady) {
         @Override
         public void handleIntent(final Intent intent) {
             super.handleIntent(intent);
+            
             resetNotification();
             if (bigNotRemoteView != null)
                 bigNotRemoteView.setProgressBar(R.id.notificationProgressBar, 100, 0, false);

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -332,7 +332,7 @@ protected void initPlayback(@NonNull final PlayQueue queue,
         if (playQueueAdapter != null) playQueueAdapter.dispose();
         playQueueAdapter = new PlayQueueAdapter(context, playQueue);
 
-        if (isMuted) simpleExoPlayer.setVolume(0);
+        simpleExoPlayer.setVolume(isMuted ? 0 : 1);
     }
 
     public void destroyPlayer() {

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -397,8 +397,8 @@ public void onShuffleClicked() {
         }
 
         @Override
-        public void onMuteUnmuteButtonClicled() {
-            super.onMuteUnmuteButtonClicled();
+        public void onMuteUnmuteButtonClicked() {
+            super.onMuteUnmuteButtonClicked();
             updatePlayback();
         }
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -542,7 +542,7 @@ public void onShuffleClicked() {
     // Mute / Unmute
     //////////////////////////////////////////////////////////////////////////*/
 
-    public void onMuteUnmuteButtonClicled() {
+    public void onMuteUnmuteButtonClicked() {
         if (DEBUG) Log.d(TAG, "onMuteUnmuteButtonClicled() called");
         simpleExoPlayer.setVolume(isMuted() ? 1 : 0);
     }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -693,8 +693,8 @@ public void onPlayBackgroundButtonClicked() {
         }
 
         @Override
-        public void onMuteUnmuteButtonClicled() {
-            super.onMuteUnmuteButtonClicled();
+        public void onMuteUnmuteButtonClicked() {
+            super.onMuteUnmuteButtonClicked();
             setMuteButton(muteButton, playerImpl.isMuted());
         }
 
@@ -736,7 +736,7 @@ public void onClick(View v) {
                 onPlayBackgroundButtonClicked();
 
             } else if (v.getId() == muteButton.getId()) {
-                onMuteUnmuteButtonClicled();
+                onMuteUnmuteButtonClicked();
 
             } else if (v.getId() == closeButton.getId()) {
                 onPlaybackShutdown();

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -609,8 +609,8 @@ public void onShuffleClicked() {
         }
 
         @Override
-        public void onMuteUnmuteButtonClicled() {
-            super.onMuteUnmuteButtonClicled();
+        public void onMuteUnmuteButtonClicked() {
+            super.onMuteUnmuteButtonClicked();
             updatePlayback();
         }
 

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -23,7 +23,6 @@
 import android.widget.ProgressBar;
 import android.widget.SeekBar;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.exoplayer2.Player;
@@ -453,7 +452,7 @@ public void onClick(View view) {
             player.onRepeatClicked();
 
         } else if (view.getId() == muteButton.getId()) {
-            player.onMuteUnmuteButtonClicled();
+            player.onMuteUnmuteButtonClicked();
 
         } else if (view.getId() == backwardButton.getId()) {
             player.onPlayPrevious();

File: app/src/main/java/org/schabi/newpipe/views/NewPipeRecyclerView.java
Patch:
@@ -36,7 +36,7 @@ public class NewPipeRecyclerView extends RecyclerView {
     private Rect focusRect = new Rect();
     private Rect tempFocus = new Rect();
 
-    private boolean allowDpadScroll;
+    private boolean allowDpadScroll = true;
 
     public NewPipeRecyclerView(@NonNull Context context) {
         super(context);

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -160,9 +160,8 @@ private boolean onScrollInMain(MotionEvent initialEvent, MotionEvent movingEvent
 
         isMovingInMain = true;
 
-        boolean acceptAnyArea = isVolumeGestureEnabled != isBrightnessGestureEnabled;
-        boolean acceptVolumeArea = acceptAnyArea || initialEvent.getX() > playerImpl.getRootView().getWidth() / 2;
-        boolean acceptBrightnessArea = acceptAnyArea || !acceptVolumeArea;
+        boolean acceptVolumeArea = initialEvent.getX() > playerImpl.getRootView().getWidth() / 2.0;
+        boolean acceptBrightnessArea = initialEvent.getX() <= playerImpl.getRootView().getWidth() / 2.0;
 
         if (isVolumeGestureEnabled && acceptVolumeArea) {
             playerImpl.getVolumeProgressBar().incrementProgressBy((int) distanceY);

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.ViewTreeObserver;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import us.shandian.giga.service.DownloadManagerService;
@@ -76,11 +77,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home: {
+            case android.R.id.home:
                 onBackPressed();
                 return true;
-            }
-
             default:
                 return super.onOptionsItemSelected(item);
         }

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -11,7 +11,5 @@ public class Constants {
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";
 
-    public static final String KEY_ENABLE_WATCH_HISTORY = "enable_watch_history";
-
     public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.ViewTreeObserver;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import us.shandian.giga.service.DownloadManagerService;
@@ -76,11 +77,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home: {
+            case android.R.id.home:
                 onBackPressed();
                 return true;
-            }
-
             default:
                 return super.onOptionsItemSelected(item);
         }

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -11,7 +11,5 @@ public class Constants {
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";
 
-    public static final String KEY_ENABLE_WATCH_HISTORY = "enable_watch_history";
-
     public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.ViewTreeObserver;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ThemeHelper;
 
 import us.shandian.giga.service.DownloadManagerService;
@@ -76,11 +77,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home: {
+            case android.R.id.home:
                 onBackPressed();
                 return true;
-            }
-
             default:
                 return super.onOptionsItemSelected(item);
         }

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -156,6 +156,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case android.R.id.home:
                 finish();
                 return true;
+            case R.id.action_settings:
+                NavigationHelper.openSettings(this);
+                return true;
             case R.id.action_append_playlist:
                 appendAllToPlaylist();
                 return true;

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -11,7 +11,5 @@ public class Constants {
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";
 
-    public static final String KEY_ENABLE_WATCH_HISTORY = "enable_watch_history";
-
     public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1074,7 +1074,7 @@ public void handleResult(@NonNull StreamInfo info) {
             if (info.getStreamType().equals(StreamType.AUDIO_LIVE_STREAM)) {
                 videoCountView.setText(Localization.listeningCount(activity, info.getViewCount()));
             } else if (info.getStreamType().equals(StreamType.LIVE_STREAM)) {
-                videoCountView.setText(Localization.watchingCount(activity, info.getViewCount()));
+                videoCountView.setText(Localization.localizeWatchingCount(activity, info.getViewCount()));
             } else {
                 videoCountView.setText(Localization.localizeViewCount(activity, info.getViewCount()));
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -370,7 +370,7 @@ public void handleResult(@NonNull ChannelInfo result) {
 
         headerSubscribersTextView.setVisibility(View.VISIBLE);
         if (result.getSubscriberCount() >= 0) {
-            headerSubscribersTextView.setText(Localization.localizeSubscribersCount(activity, result.getSubscriberCount()));
+            headerSubscribersTextView.setText(Localization.shortSubscriberCount(activity, result.getSubscriberCount()));
         } else {
             headerSubscribersTextView.setText(R.string.subscribers_count_not_available);
         }

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -190,7 +190,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(activity);
         isSuggestionsEnabled = preferences.getBoolean(getString(R.string.show_search_suggestions_key), true);
-        contentCountry = preferences.getString(getString(R.string.content_country_key), getString(R.string.default_country_value));
+        contentCountry = preferences.getString(getString(R.string.content_country_key), getString(R.string.default_localization_key));
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -60,7 +60,7 @@ private String getStreamInfoDetailLine(final StreamInfoItem infoItem) {
             if (infoItem.getStreamType().equals(StreamType.AUDIO_LIVE_STREAM)) {
                 viewsAndDate = Localization.listeningCount(itemBuilder.getContext(), infoItem.getViewCount());
             } else if (infoItem.getStreamType().equals(StreamType.LIVE_STREAM)) {
-                viewsAndDate = Localization.watchingCount(itemBuilder.getContext(), infoItem.getViewCount());
+                viewsAndDate = Localization.shortWatchingCount(itemBuilder.getContext(), infoItem.getViewCount());
             } else {
                 viewsAndDate = Localization.shortViewCount(itemBuilder.getContext(), infoItem.getViewCount());
             }

File: app/src/main/java/org/schabi/newpipe/util/ServiceHelper.java
Patch:
@@ -44,7 +44,7 @@ public static int getIcon(int serviceId) {
     public static String getTranslatedFilterString(String filter, Context c) {
         switch (filter) {
             case "all": return c.getString(R.string.all);
-            case "videos": return c.getString(R.string.videos);
+            case "videos": return c.getString(R.string.videos_string);
             case "channels": return c.getString(R.string.channels);
             case "playlists": return c.getString(R.string.playlists);
             case "tracks": return c.getString(R.string.tracks);

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -291,7 +291,9 @@ public void build(SharpStream output) throws IOException {
                 sampleCount[i] = 1;// the index is not base zero
                 sampleExtra[i] = -1;
             }
-            writeEntryArray(tablesInfo[i].sbgp, 1, sampleCount[i]);
+            if (tablesInfo[i].sbgp > 0) {
+                writeEntryArray(tablesInfo[i].sbgp, 1, sampleCount[i]);
+            }
         }
 
         if (auxBuffer == null) {

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -291,7 +291,9 @@ public void build(SharpStream output) throws IOException {
                 sampleCount[i] = 1;// the index is not base zero
                 sampleExtra[i] = -1;
             }
-            writeEntryArray(tablesInfo[i].sbgp, 1, sampleCount[i]);
+            if (tablesInfo[i].sbgp > 0) {
+                writeEntryArray(tablesInfo[i].sbgp, 1, sampleCount[i]);
+            }
         }
 
         if (auxBuffer == null) {

File: app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java
Patch:
@@ -18,7 +18,7 @@
 
 import org.schabi.newpipe.util.ThemeHelper;
 
-import javax.annotation.Nonnull;
+import androidx.annotation.NonNull;
 
 /*
  * Created by beneth <bmauduit@beneth.fr> on 06.12.16.
@@ -147,7 +147,7 @@ private void handleCookies(String url) {
         // add other methods to extract cookies here
     }
 
-    private void addYoutubeCookies(@Nonnull String cookies) {
+    private void addYoutubeCookies(@NonNull String cookies) {
         if (cookies.contains("s_gl=") || cookies.contains("goojf=") || cookies.contains("VISITOR_INFO1_LIVE=")) {
             // youtube seems to also need the other cookies:
             addCookie(cookies);

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -190,7 +190,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(activity);
         isSuggestionsEnabled = preferences.getBoolean(getString(R.string.show_search_suggestions_key), true);
-        contentCountry = preferences.getString(getString(R.string.content_country_key), getString(R.string.default_country_value));
+        contentCountry = preferences.getString(getString(R.string.content_country_key), getString(R.string.default_localization_key));
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java
Patch:
@@ -21,6 +21,7 @@ public class VideoAudioSettingsFragment extends BasePreferenceFragment {
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
+        //initializing R.array.seek_duration_description to display the translation of seconds
         String[] durationsDescriptions = getResources().getStringArray(R.array.seek_duration_description);
         String[] durationsValues = getResources().getStringArray(R.array.seek_duration_value);
         int currentDurationValue;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1074,7 +1074,7 @@ public void handleResult(@NonNull StreamInfo info) {
             if (info.getStreamType().equals(StreamType.AUDIO_LIVE_STREAM)) {
                 videoCountView.setText(Localization.listeningCount(activity, info.getViewCount()));
             } else if (info.getStreamType().equals(StreamType.LIVE_STREAM)) {
-                videoCountView.setText(Localization.watchingCount(activity, info.getViewCount()));
+                videoCountView.setText(Localization.localizeWatchingCount(activity, info.getViewCount()));
             } else {
                 videoCountView.setText(Localization.localizeViewCount(activity, info.getViewCount()));
             }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -370,7 +370,7 @@ public void handleResult(@NonNull ChannelInfo result) {
 
         headerSubscribersTextView.setVisibility(View.VISIBLE);
         if (result.getSubscriberCount() >= 0) {
-            headerSubscribersTextView.setText(Localization.localizeSubscribersCount(activity, result.getSubscriberCount()));
+            headerSubscribersTextView.setText(Localization.shortSubscriberCount(activity, result.getSubscriberCount()));
         } else {
             headerSubscribersTextView.setText(R.string.subscribers_count_not_available);
         }

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -60,7 +60,7 @@ private String getStreamInfoDetailLine(final StreamInfoItem infoItem) {
             if (infoItem.getStreamType().equals(StreamType.AUDIO_LIVE_STREAM)) {
                 viewsAndDate = Localization.listeningCount(itemBuilder.getContext(), infoItem.getViewCount());
             } else if (infoItem.getStreamType().equals(StreamType.LIVE_STREAM)) {
-                viewsAndDate = Localization.watchingCount(itemBuilder.getContext(), infoItem.getViewCount());
+                viewsAndDate = Localization.shortWatchingCount(itemBuilder.getContext(), infoItem.getViewCount());
             } else {
                 viewsAndDate = Localization.shortViewCount(itemBuilder.getContext(), infoItem.getViewCount());
             }

File: app/src/main/java/org/schabi/newpipe/util/ServiceHelper.java
Patch:
@@ -44,7 +44,7 @@ public static int getIcon(int serviceId) {
     public static String getTranslatedFilterString(String filter, Context c) {
         switch (filter) {
             case "all": return c.getString(R.string.all);
-            case "videos": return c.getString(R.string.videos);
+            case "videos": return c.getString(R.string.videos_string);
             case "channels": return c.getString(R.string.channels);
             case "playlists": return c.getString(R.string.playlists);
             case "tracks": return c.getString(R.string.tracks);

File: app/src/main/java/org/schabi/newpipe/streams/DataReader.java
Patch:
@@ -137,6 +137,7 @@ public void rewind() throws IOException {
 
         position = 0;
         readOffset = readBuffer.length;
+        readCount = 0;
     }
 
     public boolean canRewind() {

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -91,7 +91,7 @@ public static void reportError(final Context context, final List<Throwable> el,
         if (rootView != null) {
             Snackbar.make(rootView, R.string.error_snackbar_message, 3 * 1000)
                     .setActionTextColor(Color.YELLOW)
-                    .setAction(R.string.error_snackbar_action, v ->
+                    .setAction(context.getString(R.string.error_snackbar_action).toUpperCase(), v ->
                             startErrorActivity(returnActivity, context, errorInfo, el)).show();
         } else {
             startErrorActivity(returnActivity, context, errorInfo, el);

File: app/src/main/java/com/google/android/material/appbar/FlingBehavior.java
Patch:
@@ -30,7 +30,7 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, AppBarLayout chil
         ViewGroup playQueue = child.findViewById(R.id.playQueue);
         if (playQueue != null) {
             playQueue.getGlobalVisibleRect(playQueueRect);
-            if (playQueueRect.contains((int) ev.getX(), (int) ev.getY())) {
+            if (playQueueRect.contains((int) ev.getRawX(), (int) ev.getRawY())) {
                 allowScroll = false;
                 return false;
             }

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -179,6 +179,7 @@ private void onClose() {
 
             playerImpl.savePlaybackState();
             playerImpl.stopActivityBinding();
+            playerImpl.removePopupFromView();
             playerImpl.destroy();
         }
         if (notificationManager != null) notificationManager.cancel(NOTIFICATION_ID);

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -223,6 +223,7 @@ HttpURLConnection openConnection(String url, boolean headRequest, long rangeStar
         conn.setInstanceFollowRedirects(true);
         conn.setRequestProperty("User-Agent", DownloaderImpl.USER_AGENT);
         conn.setRequestProperty("Accept", "*/*");
+        conn.setRequestProperty("Accept-Encoding", "*");
 
         if (headRequest) conn.setRequestMethod("HEAD");
 

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -68,7 +68,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
 
         initialSelectedLocalization = org.schabi.newpipe.util.Localization.getPreferredLocalization(requireContext());
         initialSelectedContentCountry = org.schabi.newpipe.util.Localization.getPreferredContentCountry(requireContext());
-        initialLanguage = androidx.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("newpipes_language_key", "en");
+        initialLanguage = PreferenceManager.getDefaultSharedPreferences(getContext()).getString("app_language_key", "en");
     }
 
     @Override
@@ -130,7 +130,7 @@ public void onDestroy() {
                 .getPreferredLocalization(requireContext());
         final ContentCountry selectedContentCountry = org.schabi.newpipe.util.Localization
                 .getPreferredContentCountry(requireContext());
-        final String selectedLanguage = androidx.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("newpipes_language_key", "en");
+        final String selectedLanguage = PreferenceManager.getDefaultSharedPreferences(getContext()).getString("app_language_key", "en");
 
         if (!selectedLocalization.equals(initialSelectedLocalization)
                 || !selectedContentCountry.equals(initialSelectedContentCountry) || !selectedLanguage.equals(initialLanguage)) {

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -534,7 +534,7 @@ private void showError(@NonNull DownloadMission mission) {
             );
         }
 
-        builder.setNegativeButton(android.R.string.ok, (dialog, which) -> dialog.cancel())
+        builder.setNegativeButton(R.string.finish, (dialog, which) -> dialog.cancel())
                 .setTitle(mission.storage.getName())
                 .create()
                 .show();

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -250,7 +250,7 @@ public void build(SharpStream output) throws IOException {
 
         boolean is64 = read > THRESHOLD_FOR_CO64;
 
-        // calculate the moov size;
+        // calculate the moov size
         int auxSize = make_moov(defaultMediaTime, tablesInfo, is64);
 
         if (auxSize < THRESHOLD_MOOV_LENGTH) {
@@ -262,6 +262,7 @@ public void build(SharpStream output) throws IOException {
 
         final int ftyp_size = make_ftyp();
 
+        // reserve moov space in the output stream
         if (auxSize > 0) {
             int length = auxSize;
             byte[] buffer = new byte[64 * 1024];// 64 KiB
@@ -328,7 +329,7 @@ public void build(SharpStream output) throws IOException {
                     if (sample == null) {
                         if (tablesInfo[i].ctts > 0 && sampleExtra[i] >= 0) {
                             writeEntryArray(tablesInfo[i].ctts, 1, sampleCount[i], sampleExtra[i]);// flush last entries
-							outRestore();
+                            outRestore();
                         }
                         sampleIndex[i] = -1;
                         break;

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -223,6 +223,7 @@ HttpURLConnection openConnection(String url, boolean headRequest, long rangeStar
         conn.setInstanceFollowRedirects(true);
         conn.setRequestProperty("User-Agent", DownloaderImpl.USER_AGENT);
         conn.setRequestProperty("Accept", "*/*");
+        conn.setRequestProperty("Accept-Encoding", "*");
 
         if (headRequest) conn.setRequestMethod("HEAD");
 

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -223,6 +223,7 @@ HttpURLConnection openConnection(String url, boolean headRequest, long rangeStar
         conn.setInstanceFollowRedirects(true);
         conn.setRequestProperty("User-Agent", DownloaderImpl.USER_AGENT);
         conn.setRequestProperty("Accept", "*/*");
+        conn.setRequestProperty("Accept-Encoding", "*");
 
         if (headRequest) conn.setRequestMethod("HEAD");
 

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1175,6 +1175,7 @@ private boolean isAutoplayEnabled() {
         return autoPlayEnabled
                 && !isExternalPlayerEnabled()
                 && (player == null || player.videoPlayerSelected())
+                && bottomSheetState != BottomSheetBehavior.STATE_HIDDEN
                 && isAutoplayAllowedByUser();
     }
 

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -11,5 +11,7 @@ public class Constants {
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";
 
+    public static final String KEY_ENABLE_WATCH_HISTORY = "enable_watch_history";
+
     public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -11,5 +11,7 @@ public class Constants {
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";
 
+    public static final String KEY_ENABLE_WATCH_HISTORY = "enable_watch_history";
+
     public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java
Patch:
@@ -12,7 +12,7 @@
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.nio.charset.Charset;
-import java.text.ParseException;
+import java.nio.charset.StandardCharsets;
 
 /**
  * @author kapodamy
@@ -28,7 +28,7 @@ public class SrtFromTtmlWriter {
 
     public SrtFromTtmlWriter(SharpStream out, boolean ignoreEmptyFrames) {
         this.out = out;
-        this.ignoreEmptyFrames = true;
+        this.ignoreEmptyFrames = ignoreEmptyFrames;
     }
 
     private static String getTimestamp(Element frame, String attr) {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -150,6 +150,8 @@ public abstract class BasePlayer implements
     @NonNull
     public static final String RESUME_PLAYBACK = "resume_playback";
     @NonNull
+    public static final String START_PAUSED = "start_paused";
+    @NonNull
     public static final String SELECT_ON_APPEND = "select_on_append";
 
     /*//////////////////////////////////////////////////////////////////////////
@@ -304,7 +306,7 @@ public void handleIntent(Intent intent) {
         }
         // Good to go...
         initPlayback(queue, repeatMode, playbackSpeed, playbackPitch, playbackSkipSilence,
-                /*playOnInit=*/true);
+                /*playOnInit=*/!intent.getBooleanExtra(START_PAUSED, false));
     }
 
     protected void initPlayback(@NonNull final PlayQueue queue,

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -567,7 +567,8 @@ public void onFullScreenButtonClicked() {
                     this.getPlaybackPitch(),
                     this.getPlaybackSkipSilence(),
                     this.getPlaybackQuality(),
-                    false
+                    false,
+                    !isPlaying()
             );
             intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             context.startActivity(intent);
@@ -1123,4 +1124,4 @@ private boolean isInsideClosingRadius(MotionEvent popupMotionEvent) {
             return distanceFromCloseButton(popupMotionEvent) <= getClosingRadius();
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -172,6 +172,7 @@ public int onStartCommand(final Intent intent, int flags, int startId) {
 
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
+        changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
         if (DEBUG) Log.d(TAG, "onConfigurationChanged() called with: newConfig = [" + newConfig + "]");
         updateScreenSize();
         updatePopupSize(popupLayoutParams.width, -1);

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -559,7 +559,7 @@ private void showError(DownloadMission mission, UserAction action, @StringRes in
 
     public void clearFinishedDownloads(boolean delete) {
         if (delete && mIterator.hasFinishedMissions()) {
-            for(int i=0; i<mIterator.getOldListSize(); i++) {
+            for (int i = 0; i < mIterator.getOldListSize(); i++) {
                 FinishedMission mission = mIterator.getItem(i).mission instanceof FinishedMission ? (FinishedMission) mIterator.getItem(i).mission : null;
                 if (mission != null) {
                     mDownloadManager.deleteMission(mission);

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -566,8 +566,9 @@ public void clearFinishedDownloads(boolean delete) {
                     mContext.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, mission.storage.getUri()));
                 }
             }
+        } else if (!delete) {
+            mDownloadManager.forgetFinishedDownloads();
         }
-        mDownloadManager.forgetFinishedDownloads();
         applyChanges();
     }
 

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -119,7 +119,6 @@ protected void onCreate(Bundle savedInstanceState) {
         ThemeHelper.setTheme(this, ServiceHelper.getSelectedServiceId(this));
 
         changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
-
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 

File: app/src/main/java/org/schabi/newpipe/about/AboutActivity.java
Patch:
@@ -68,6 +68,7 @@ protected void onCreate(Bundle savedInstanceState) {
         changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
         super.onCreate(savedInstanceState);
         ThemeHelper.setTheme(this);
+        this.setTitle(getString(R.string.title_activity_about));
 
         setContentView(R.layout.activity_about);
 

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -58,6 +58,8 @@
 import org.schabi.newpipe.util.ThemeHelper;
 
 import static org.schabi.newpipe.player.helper.PlayerHelper.getTimeString;
+import static org.schabi.newpipe.util.Localization.changeAppLanguage;
+import static org.schabi.newpipe.util.Localization.getAppLocale;
 
 
 /**
@@ -115,7 +117,7 @@ public void onCreate() {
         notificationManager = ((NotificationManager) getSystemService(NOTIFICATION_SERVICE));
         lockManager = new LockManager(this);
         sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-
+        changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
         ThemeHelper.setTheme(this);
         basePlayerImpl = new BasePlayerImpl(this);
         basePlayerImpl.setup();

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -80,6 +80,8 @@
 import static org.schabi.newpipe.player.VideoPlayer.DEFAULT_CONTROLS_DURATION;
 import static org.schabi.newpipe.player.VideoPlayer.DEFAULT_CONTROLS_HIDE_TIME;
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
+import static org.schabi.newpipe.util.Localization.changeAppLanguage;
+import static org.schabi.newpipe.util.Localization.getAppLocale;
 
 /**
  * Service Popup Player implementing VideoPlayer
@@ -142,6 +144,7 @@ public final class PopupVideoPlayer extends Service {
 
     @Override
     public void onCreate() {
+        changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
         windowManager = (WindowManager) getSystemService(WINDOW_SERVICE);
         notificationManager = ((NotificationManager) getSystemService(NOTIFICATION_SERVICE));
 

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -46,6 +46,8 @@
 
 import static org.schabi.newpipe.player.helper.PlayerHelper.formatPitch;
 import static org.schabi.newpipe.player.helper.PlayerHelper.formatSpeed;
+import static org.schabi.newpipe.util.Localization.changeAppLanguage;
+import static org.schabi.newpipe.util.Localization.getAppLocale;
 
 public abstract class ServicePlayerActivity extends AppCompatActivity
         implements PlayerEventListener, SeekBar.OnSeekBarChangeListener,
@@ -116,6 +118,7 @@ public abstract class ServicePlayerActivity extends AppCompatActivity
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        changeAppLanguage(getAppLocale(getApplicationContext()), getResources());
         super.onCreate(savedInstanceState);
         ThemeHelper.setTheme(this);
         setContentView(R.layout.activity_player_queue_control);

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -389,7 +389,7 @@ public void handleResult(@NonNull ChannelInfo result) {
         monitorSubscription(result);
 
         headerPlayAllButton.setOnClickListener(
-                view -> NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), false));
+                view -> NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), true));
         headerPopupButton.setOnClickListener(
                 view -> NavigationHelper.playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -295,7 +295,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
                 .subscribe(getPlaylistBookmarkSubscriber());
 
         headerPlayAllButton.setOnClickListener(view ->
-                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), false));
+                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), true));
         headerPopupButton.setOnClickListener(view ->
                 NavigationHelper.playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(view ->

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -310,7 +310,7 @@ public void handleResult(@NonNull List<StreamStatisticsEntry> result) {
         }
 
         headerPlayAllButton.setOnClickListener(view ->
-                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), false));
+                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), true));
         headerPopupButton.setOnClickListener(view ->
                 NavigationHelper.playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(view ->

File: app/src/main/java/org/schabi/newpipe/local/playlist/LocalPlaylistFragment.java
Patch:
@@ -319,7 +319,7 @@ public void handleResult(@NonNull List<PlaylistStreamEntry> result) {
         setVideoCount(itemListAdapter.getItemsList().size());
 
         headerPlayAllButton.setOnClickListener(view ->
-                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), false));
+                NavigationHelper.playOnMainPlayer(activity, getPlayQueue(), true));
         headerPopupButton.setOnClickListener(view ->
                 NavigationHelper.playOnPopupPlayer(activity, getPlayQueue(), false));
         headerBackgroundButton.setOnClickListener(view ->

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayerActivity.java
Patch:
@@ -21,7 +21,7 @@ public String getTag() {
 
     @Override
     public String getSupportActionTitle() {
-        return getResources().getString(R.string.title_activity_background_player);
+        return getResources().getString(R.string.title_activity_play_queue);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -445,7 +445,7 @@ private static String getResolutionLimit(Context context) {
      * @param context App context
      * @return {@code true} if connected to a metered network
      */
-    private static boolean isMeteredNetwork(Context context)
+    public static boolean isMeteredNetwork(Context context)
     {
         ConnectivityManager manager = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
         if (manager == null || manager.getActiveNetworkInfo() == null) return false;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -116,8 +116,8 @@ public static Intent getPlayerIntent(@NonNull final Context context,
                 .putExtra(BasePlayer.PLAYBACK_SKIP_SILENCE, playbackSkipSilence);
     }
 
-    public static void playOnMainPlayer(final AppCompatActivity activity, final PlayQueue queue, final boolean resumePlayback) {
-        playOnMainPlayer(activity.getSupportFragmentManager(), queue, resumePlayback);
+    public static void playOnMainPlayer(final AppCompatActivity activity, final PlayQueue queue, final boolean autoPlay) {
+        playOnMainPlayer(activity.getSupportFragmentManager(), queue, autoPlay);
     }
 
     public static void playOnMainPlayer(final FragmentManager fragmentManager, final PlayQueue queue, boolean autoPlay) {

File: app/src/main/java/org/schabi/newpipe/player/MainPlayer.java
Patch:
@@ -126,6 +126,7 @@ public void stop() {
 
         if (playerImpl.getPlayer() != null) {
             playerImpl.wasPlaying = playerImpl.getPlayer().getPlayWhenReady();
+            // We can't pause the player here because it will make transition from one stream to a new stream not smooth
             playerImpl.getPlayer().stop(false);
             playerImpl.setRecovery();
         }

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerEventListener.java
Patch:
@@ -4,8 +4,10 @@
 import com.google.android.exoplayer2.PlaybackParameters;
 
 import org.schabi.newpipe.extractor.stream.StreamInfo;
+import org.schabi.newpipe.player.playqueue.PlayQueue;
 
 public interface PlayerEventListener {
+    void onQueueUpdate(PlayQueue queue);
     void onPlaybackUpdate(int state, int repeatMode, boolean shuffled, PlaybackParameters parameters);
     void onProgressUpdate(int currentProgress, int duration, int bufferPercent);
     void onMetadataUpdate(StreamInfo info);

File: app/src/main/java/org/schabi/newpipe/player/helper/MediaSessionManager.java
Patch:
@@ -89,7 +89,7 @@ public void clearLockScreenArt(NotificationCompat.Builder builder) {
     }
 
     /**
-     * Should be called on player destruction to prevent leakage.BitmapUtils
+     * Should be called on player destruction to prevent leakage.
      */
     public void dispose() {
         this.sessionConnector.setPlayer(null);

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java
Patch:
@@ -346,14 +346,16 @@ public void initListeners() {
                 // Use smaller value to be consistent between screen orientations
                 // (and to make usage easier)
                 int width = r - l, height = b - t;
-                maxGestureLength = (int) (Math.min(width, height) * MAX_GESTURE_LENGTH);
+                int min = Math.min(width, height);
+                maxGestureLength = (int) (min * MAX_GESTURE_LENGTH);
 
                 if (DEBUG) Log.d(TAG, "maxGestureLength = " + maxGestureLength);
 
                 volumeProgressBar.setMax(maxGestureLength);
                 brightnessProgressBar.setMax(maxGestureLength);
 
                 setInitialGestureValues();
+                queueLayout.getLayoutParams().height = min - queueLayout.getTop();
             }
         });
     }
@@ -620,8 +622,6 @@ private void onQueueClicked() {
                 DEFAULT_CONTROLS_DURATION);
 
         itemsList.scrollToPosition(playQueue.getIndex());
-
-        if (playQueue.getStreams().size() > 4 && !isInFullscreen()) toggleFullscreen();
     }
 
     private void onQueueClosed() {

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -292,7 +292,6 @@ private boolean onSingleTapConfirmedInPopup(MotionEvent e) {
             playerImpl.showControlsThenHide();
 
         }
-        playerImpl.onPlayPause();
         return true;
     }
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -301,6 +301,7 @@ public static void openVideoDetailFragment(FragmentManager fragmentManager, int
             VideoDetailFragment detailFragment = (VideoDetailFragment) fragment;
             detailFragment.setAutoplay(autoPlay);
             detailFragment.selectAndLoadVideo(serviceId, url, title, playQueue);
+            detailFragment.scrollToTop();
             return;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -319,6 +319,7 @@ private synchronized void maybeSynchronizePlayer() {
 
     private Observable<Long> getEdgeIntervalSignal() {
         return Observable.interval(progressUpdateIntervalMillis, TimeUnit.MILLISECONDS)
+                .observeOn(AndroidSchedulers.mainThread())
                 .filter(ignored ->
                         playbackListener.isApproachingPlaybackEdge(playbackNearEndGapMillis));
     }

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -319,6 +319,7 @@ private synchronized void maybeSynchronizePlayer() {
 
     private Observable<Long> getEdgeIntervalSignal() {
         return Observable.interval(progressUpdateIntervalMillis, TimeUnit.MILLISECONDS)
+                .observeOn(AndroidSchedulers.mainThread())
                 .filter(ignored ->
                         playbackListener.isApproachingPlaybackEdge(playbackNearEndGapMillis));
     }

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayerImpl.java
Patch:
@@ -1329,7 +1329,7 @@ public void updateScreenSize() {
     public void updatePopupSize(int width, int height) {
         if (DEBUG) Log.d(TAG, "updatePopupSize() called with: width = [" + width + "], height = [" + height + "]");
 
-        if (popupLayoutParams == null || windowManager == null || !popupPlayerSelected() || getRootView().getParent() == null)
+        if (popupLayoutParams == null || windowManager == null || getParentActivity() != null || getRootView().getParent() == null)
             return;
 
         width = (int) (width > maximumWidth ? maximumWidth : width < minimumWidth ? minimumWidth : width);
@@ -1347,7 +1347,7 @@ public void updatePopupSize(int width, int height) {
     }
 
     private void updateWindowFlags(final int flags) {
-        if (popupLayoutParams == null || windowManager == null || !popupPlayerSelected() || getRootView().getParent() == null)
+        if (popupLayoutParams == null || windowManager == null || getParentActivity() != null || getRootView().getParent() == null)
             return;
 
         popupLayoutParams.flags = flags;

File: app/src/main/java/org/schabi/newpipe/player/event/PlayerGestureListener.java
Patch:
@@ -299,7 +299,8 @@ private boolean onSingleTapConfirmedInPopup(MotionEvent e) {
     private boolean onDownInPopup(MotionEvent e) {
         // Fix popup position when the user touch it, it may have the wrong one
         // because the soft input is visible (the draggable area is currently resized).
-        playerImpl.checkPopupPositionBounds(playerImpl.getCloseOverlayView().getWidth(), playerImpl.getCloseOverlayView().getHeight());
+        playerImpl.updateScreenSize();
+        playerImpl.checkPopupPositionBounds();
 
         initialPopupX = playerImpl.getPopupLayoutParams().x;
         initialPopupY = playerImpl.getPopupLayoutParams().y;

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -109,9 +109,10 @@ public class MainActivity extends AppCompatActivity {
     protected void onCreate(Bundle savedInstanceState) {
         if (DEBUG) Log.d(TAG, "onCreate() called with: savedInstanceState = [" + savedInstanceState + "]");
 
-        //enable TLS1.1/1.2 for kitkat devices, to fix download and play for mediaCCC sources
-        if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT)
+        // enable TLS1.1/1.2 for kitkat devices, to fix download and play for mediaCCC sources
+        if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
             TLSSocketFactoryCompat.setAsDefault();
+        }
 
         ThemeHelper.setTheme(this, ServiceHelper.getSelectedServiceId(this));
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -178,7 +178,6 @@ public abstract class BasePlayer implements
     // Player
     //////////////////////////////////////////////////////////////////////////*/
 
-    protected final static String FAST_FORWARD_REWIND_DEFAULT_AMOUNT_MILLIS = "10000"; // 10 seconds
     protected final static int PLAY_PREV_ACTIVATION_LIMIT_MILLIS = 5000; // 5 seconds
     protected final static int PROGRESS_LOOP_INTERVAL_MILLIS = 500;
     protected final static int RECOVERY_SKIP_THRESHOLD_MILLIS = 3000; // 3 seconds
@@ -965,7 +964,7 @@ public void onFastForward() {
     private int getSeekDuration() {
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         final String key = context.getString(R.string.seek_duration_key);
-        final String value = prefs.getString(key, FAST_FORWARD_REWIND_DEFAULT_AMOUNT_MILLIS);
+        final String value = prefs.getString(key, context.getString(R.string.seek_duration_default_value));
         return Integer.parseInt(value);
     }
 

File: app/src/main/java/org/schabi/newpipe/DownloaderImpl.java
Patch:
@@ -13,9 +13,10 @@
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
 
-import javax.annotation.Nonnull;
+import androidx.annotation.NonNull;
 
 import androidx.annotation.Nullable;
+
 import okhttp3.OkHttpClient;
 import okhttp3.RequestBody;
 import okhttp3.ResponseBody;
@@ -102,7 +103,7 @@ public InputStream stream(String siteUrl) throws IOException {
     }
 
     @Override
-    public Response execute(@Nonnull Request request) throws IOException, ReCaptchaException {
+    public Response execute(@NonNull Request request) throws IOException, ReCaptchaException {
         final String httpMethod = request.httpMethod();
         final String url = request.url();
         final Map<String, List<String>> headers = request.headers();

File: app/src/main/java/org/schabi/newpipe/streams/OggFromWebMWriter.java
Patch:
@@ -13,7 +13,7 @@
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 
-import javax.annotation.Nullable;
+import androidx.annotation.Nullable;
 
 /**
  * @author kapodamy

File: app/src/main/java/org/schabi/newpipe/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -10,6 +10,8 @@
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
+import android.text.TextUtils;
+
 import java.text.DateFormat;
 
 public class RemotePlaylistItemHolder extends PlaylistItemHolder {
@@ -29,7 +31,7 @@ public void updateFromItem(final LocalItem localItem, HistoryRecordManager histo
         itemTitleView.setText(item.getName());
         itemStreamCountView.setText(String.valueOf(item.getStreamCount()));
         // Here is where the uploader name is set in the bookmarked playlists library
-        if (!TextUtils.isEmpty(item.getUploader)) {
+        if (!TextUtils.isEmpty(item.getUploader())) {
             itemUploaderView.setText(Localization.concatenateStrings(item.getUploader(),
                 NewPipe.getNameOfService(item.getServiceId())));
         } else {

File: app/src/main/java/org/schabi/newpipe/settings/PeertubeInstanceListFragment.java
Patch:
@@ -231,7 +231,7 @@ private void addInstance(String url) {
             add(instance);
         }, e -> {
             progressBar.setVisibility(View.GONE);
-            Toast.makeText(getActivity(), "failed to validate instance", Toast.LENGTH_SHORT).show();
+            Toast.makeText(getActivity(), R.string.peertube_instance_add_fail, Toast.LENGTH_SHORT).show();
         });
         disposables.add(disposable);
     }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -164,13 +164,14 @@ public void onChange(boolean selfChange) {
                 super.onChange(selfChange);
                 if (globalScreenOrientationLocked()) {
                     final boolean lastOrientationWasLandscape = defaultPreferences.getBoolean(
-                            getString(R.string.last_orientation_landscape_key), false);
+                            getString(R.string.last_orientation_landscape_key), FireTvUtils.isFireTv());
                     setLandscape(lastOrientationWasLandscape);
                 } else {
                     setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
                 }
             }
         };
+
         getContentResolver().registerContentObserver(
                 Settings.System.getUriFor(Settings.System.ACCELEROMETER_ROTATION),
                 false, rotationObserver);
@@ -238,7 +239,7 @@ protected void onResume() {
 
         if (globalScreenOrientationLocked()) {
             boolean lastOrientationWasLandscape = defaultPreferences.getBoolean(
-                    getString(R.string.last_orientation_landscape_key), false);
+                    getString(R.string.last_orientation_landscape_key), FireTvUtils.isFireTv());
             setLandscape(lastOrientationWasLandscape);
         }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -35,7 +35,6 @@
 import org.schabi.newpipe.util.StateSaver;
 import org.schabi.newpipe.util.StreamDialogEntry;
 import org.schabi.newpipe.views.SuperScrollLayoutManager;
-import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.util.List;
 import java.util.Queue;
@@ -157,7 +156,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(infoListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -18,7 +18,6 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.list.ListViewContract;
-import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 
@@ -96,7 +95,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(itemListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionFragment.java
Patch:
@@ -57,7 +57,6 @@
 import org.schabi.newpipe.util.ShareUtils;
 import org.schabi.newpipe.util.ThemeHelper;
 import org.schabi.newpipe.views.CollapsibleView;
-import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.io.File;
 import java.text.SimpleDateFormat;
@@ -193,7 +192,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(infoListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -30,7 +30,6 @@
 import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.ThemeHelper;
-import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.io.File;
 import java.io.IOException;
@@ -109,7 +108,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         mList = v.findViewById(R.id.mission_recycler);
 
         // Init layouts managers
-        mGridManager = new FixedGridLayoutManager(getActivity(), SPAN_SIZE);
+        mGridManager = new GridLayoutManager(getActivity(), SPAN_SIZE);
         mGridManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
             @Override
             public int getSpanSize(int position) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -35,6 +35,7 @@
 import org.schabi.newpipe.util.StateSaver;
 import org.schabi.newpipe.util.StreamDialogEntry;
 import org.schabi.newpipe.views.SuperScrollLayoutManager;
+import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.util.List;
 import java.util.Queue;
@@ -156,7 +157,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(infoListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -18,6 +18,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.list.ListViewContract;
+import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 
@@ -95,7 +96,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(itemListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionFragment.java
Patch:
@@ -57,6 +57,7 @@
 import org.schabi.newpipe.util.ShareUtils;
 import org.schabi.newpipe.util.ThemeHelper;
 import org.schabi.newpipe.views.CollapsibleView;
+import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.io.File;
 import java.text.SimpleDateFormat;
@@ -192,7 +193,7 @@ protected RecyclerView.LayoutManager getGridLayoutManager() {
         int width = resources.getDimensionPixelSize(R.dimen.video_item_grid_thumbnail_image_width);
         width += (24 * resources.getDisplayMetrics().density);
         final int spanCount = (int) Math.floor(resources.getDisplayMetrics().widthPixels / (double)width);
-        final GridLayoutManager lm = new GridLayoutManager(activity, spanCount);
+        final GridLayoutManager lm = new FixedGridLayoutManager(activity, spanCount);
         lm.setSpanSizeLookup(infoListAdapter.getSpanSizeLookup(spanCount));
         return lm;
     }

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -30,6 +30,7 @@
 import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.util.FilePickerActivityHelper;
 import org.schabi.newpipe.util.ThemeHelper;
+import org.schabi.newpipe.views.FixedGridLayoutManager;
 
 import java.io.File;
 import java.io.IOException;
@@ -108,7 +109,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         mList = v.findViewById(R.id.mission_recycler);
 
         // Init layouts managers
-        mGridManager = new GridLayoutManager(getActivity(), SPAN_SIZE);
+        mGridManager = new FixedGridLayoutManager(getActivity(), SPAN_SIZE);
         mGridManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
             @Override
             public int getSpanSize(int position) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -34,6 +34,7 @@
 import org.schabi.newpipe.util.OnClickGesture;
 import org.schabi.newpipe.util.StateSaver;
 import org.schabi.newpipe.util.StreamDialogEntry;
+import org.schabi.newpipe.views.SuperScrollLayoutManager;
 
 import java.util.List;
 import java.util.Queue;
@@ -147,7 +148,7 @@ protected View getListFooter() {
     }
 
     protected RecyclerView.LayoutManager getListLayoutManager() {
-        return new LinearLayoutManager(activity);
+        return new SuperScrollLayoutManager(activity);
     }
 
     protected RecyclerView.LayoutManager getGridLayoutManager() {

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -780,7 +780,7 @@ private void continueSelectedDownload(@NonNull StoredFileHelper storage) {
 
                 if (selectedStream.getFormat() == MediaFormat.M4A) {
                     psName = Postprocessing.ALGORITHM_M4A_NO_DASH;
-                } else if (selectedStream.getFormat() == MediaFormat.OPUS) {
+                } else if (selectedStream.getFormat() == MediaFormat.WEBMA_OPUS) {
                     psName = Postprocessing.ALGORITHM_OGG_FROM_WEBM_DEMUXER;
                 }
                 break;

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -228,7 +228,6 @@ HttpURLConnection openConnection(String url, boolean headRequest, long rangeStar
 
         // BUG workaround: switching between networks can freeze the download forever
         conn.setConnectTimeout(30000);
-        conn.setReadTimeout(10000);
 
         if (rangeStart >= 0) {
             String req = "bytes=" + rangeStart + "-";
@@ -316,7 +315,7 @@ synchronized void notifyError(Exception err) {
     public synchronized void notifyError(int code, Exception err) {
         Log.e(TAG, "notifyError() code = " + code, err);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-            if (err.getCause() instanceof ErrnoException) {
+            if (err != null && err.getCause() instanceof ErrnoException) {
                 int errno = ((ErrnoException) err.getCause()).errno;
                 if (errno == OsConstants.ENOSPC) {
                     code = ERROR_INSUFFICIENT_STORAGE;

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -308,10 +308,10 @@ private void updateProgress(ViewHolderItem h) {
                 etaStr = "";
             } else {
                 long eta = (long) Math.ceil((length - done) / averageSpeed);
-                etaStr = "  @ ".concat(Utility.stringifySeconds(eta));
+                etaStr = Utility.formatBytes((long) done) + "/" + Utility.stringifySeconds(eta) + "  ";
             }
 
-            h.size.setText(sizeStr.concat(speedStr).concat(etaStr));
+            h.size.setText(sizeStr.concat(etaStr).concat(speedStr));
 
             h.lastTimestamp = now;
             h.lastDone = done;

File: app/src/main/java/org/schabi/newpipe/streams/OggFromWebMWriter.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.streams;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import org.schabi.newpipe.streams.WebMReader.Cluster;
 import org.schabi.newpipe.streams.WebMReader.Segment;

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -1,9 +1,10 @@
 package us.shandian.giga.get;
 
-import androidx.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 
+import androidx.annotation.NonNull;
+
 import org.schabi.newpipe.streams.io.SharpStream;
 
 import java.io.IOException;
@@ -177,7 +178,7 @@ public void run() {
                 if (e instanceof DownloadMission.HttpError && ((DownloadMission.HttpError) e).statusCode == ERROR_HTTP_FORBIDDEN) {
                     // for youtube streams. The url has expired
                     interrupt();
-                    mMission.doRecover(e);
+                    mMission.doRecover(ERROR_HTTP_FORBIDDEN);
                     return;
                 }
 

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -87,6 +87,7 @@ public void run() {
                 if (mConn.getResponseCode() == 416) {
                     if (block.done > 0) {
                         // try again from the start (of the block)
+                        mMission.notifyProgress(-block.done);
                         block.done = 0;
                         retry = true;
                         mConn.disconnect();
@@ -114,7 +115,7 @@ public void run() {
                     int len;
 
                     // use always start <= end
-                    // fixes a deadlock in DownloadRunnable because youtube is sending one byte alone after downloading 26MiB exactly
+                    // fixes a deadlock because in some videos, youtube is sending one byte alone
                     while (start <= end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
                         f.write(buf, 0, len);
                         start += len;
@@ -135,7 +136,7 @@ public void run() {
 
                     if (mId == 1) {
                         // only the first thread will execute the recovery procedure
-                        mMission.doRecover(e);
+                        mMission.doRecover(ERROR_HTTP_FORBIDDEN);
                     }
                     return;
                 }

File: app/src/main/java/us/shandian/giga/get/FinishedMission.java
Patch:
@@ -2,17 +2,17 @@
 
 import androidx.annotation.NonNull;
 
-public class FinishedMission extends  Mission {
+public class FinishedMission extends Mission {
 
     public FinishedMission() {
     }
 
     public FinishedMission(@NonNull DownloadMission mission) {
         source = mission.source;
-        length = mission.length;// ¿or mission.done?
+        length = mission.length;
         timestamp = mission.timestamp;
         kind = mission.kind;
         storage = mission.storage;
-
     }
+
 }

File: app/src/main/java/us/shandian/giga/postprocessing/OggFromWebmDemuxer.java
Patch:
@@ -1,6 +1,6 @@
 package us.shandian.giga.postprocessing;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import org.schabi.newpipe.streams.OggFromWebMWriter;
 import org.schabi.newpipe.streams.io.SharpStream;

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -9,6 +9,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.Looper;
+
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
 
@@ -35,8 +36,8 @@ public void setColors(@ColorInt int background, @ColorInt int foreground) {
         mForegroundColor = foreground;
     }
 
-    public void setProgress(float progress) {
-        mProgress = progress;
+    public void setProgress(double progress) {
+        mProgress = (float) progress;
         invalidateSelf();
     }
 

File: app/src/main/java/org/schabi/newpipe/streams/WebMWriter.java
Patch:
@@ -249,7 +249,7 @@ public void build(SharpStream out) throws IOException, RuntimeException {
                             nextCueTime += DEFAULT_CUES_EACH_MS;
                         }
                         keyFrames.add(
-                                new KeyFrame(baseSegmentOffset, currentClusterOffset - 7, written, bTimecode.length, bloq.absoluteTimecode)
+                                new KeyFrame(baseSegmentOffset, currentClusterOffset - 8, written, bTimecode.length, bloq.absoluteTimecode)
                         );
                     }
                 }

File: app/src/main/java/org/schabi/newpipe/streams/WebMReader.java
Patch:
@@ -368,7 +368,7 @@ private SimpleBlock readSimpleBlock(Element ref) throws IOException {
         obj.trackNumber = readEncodedNumber();
         obj.relativeTimeCode = stream.readShort();
         obj.flags = (byte) stream.read();
-        obj.dataSize = (ref.offset + ref.size) - stream.position();
+        obj.dataSize = (int) ((ref.offset + ref.size) - stream.position());
         obj.createdFromBlock = ref.type == ID_Block;
 
         // NOTE: lacing is not implemented, and will be mixed with the stream data
@@ -465,7 +465,7 @@ public class SimpleBlock {
         public short relativeTimeCode;
         public long absoluteTimeCodeNs;
         public byte flags;
-        public long dataSize;
+        public int dataSize;
         private final Element ref;
 
         public boolean isKeyframe() {

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -80,7 +80,7 @@ public void run() {
             }
 
             try {
-                mConn = mMission.openConnection(mId, start, end);
+                mConn = mMission.openConnection(false, start, end);
                 mMission.establishConnection(mId, mConn);
 
                 // check if the download can be resumed

File: app/src/main/java/us/shandian/giga/postprocessing/OggFromWebmDemuxer.java
Patch:
@@ -11,7 +11,7 @@
 class OggFromWebmDemuxer extends Postprocessing {
 
     OggFromWebmDemuxer() {
-        super(false, true, ALGORITHM_OGG_FROM_WEBM_DEMUXER);
+        super(true, true, ALGORITHM_OGG_FROM_WEBM_DEMUXER);
     }
 
     @Override
@@ -24,7 +24,7 @@ boolean test(SharpStream... sources) throws IOException {
 
         switch (buffer.getInt()) {
             case 0x1a45dfa3:
-                return true;// webm
+                return true;// webm/mkv
             case 0x4F676753:
                 return false;// ogg
         }

File: app/src/main/java/org/schabi/newpipe/streams/OggFromWebMWriter.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.streams;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import org.schabi.newpipe.streams.WebMReader.Cluster;
 import org.schabi.newpipe.streams.WebMReader.Segment;

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -1,9 +1,10 @@
 package us.shandian.giga.get;
 
-import androidx.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 
+import androidx.annotation.NonNull;
+
 import org.schabi.newpipe.streams.io.SharpStream;
 
 import java.io.IOException;
@@ -177,7 +178,7 @@ public void run() {
                 if (e instanceof DownloadMission.HttpError && ((DownloadMission.HttpError) e).statusCode == ERROR_HTTP_FORBIDDEN) {
                     // for youtube streams. The url has expired
                     interrupt();
-                    mMission.doRecover(e);
+                    mMission.doRecover(ERROR_HTTP_FORBIDDEN);
                     return;
                 }
 

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -87,6 +87,7 @@ public void run() {
                 if (mConn.getResponseCode() == 416) {
                     if (block.done > 0) {
                         // try again from the start (of the block)
+                        mMission.notifyProgress(-block.done);
                         block.done = 0;
                         retry = true;
                         mConn.disconnect();
@@ -114,7 +115,7 @@ public void run() {
                     int len;
 
                     // use always start <= end
-                    // fixes a deadlock in DownloadRunnable because youtube is sending one byte alone after downloading 26MiB exactly
+                    // fixes a deadlock because in some videos, youtube is sending one byte alone
                     while (start <= end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
                         f.write(buf, 0, len);
                         start += len;
@@ -135,7 +136,7 @@ public void run() {
 
                     if (mId == 1) {
                         // only the first thread will execute the recovery procedure
-                        mMission.doRecover(e);
+                        mMission.doRecover(ERROR_HTTP_FORBIDDEN);
                     }
                     return;
                 }

File: app/src/main/java/us/shandian/giga/get/FinishedMission.java
Patch:
@@ -2,17 +2,17 @@
 
 import androidx.annotation.NonNull;
 
-public class FinishedMission extends  Mission {
+public class FinishedMission extends Mission {
 
     public FinishedMission() {
     }
 
     public FinishedMission(@NonNull DownloadMission mission) {
         source = mission.source;
-        length = mission.length;// ¿or mission.done?
+        length = mission.length;
         timestamp = mission.timestamp;
         kind = mission.kind;
         storage = mission.storage;
-
     }
+
 }

File: app/src/main/java/us/shandian/giga/postprocessing/OggFromWebmDemuxer.java
Patch:
@@ -1,6 +1,6 @@
 package us.shandian.giga.postprocessing;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import org.schabi.newpipe.streams.OggFromWebMWriter;
 import org.schabi.newpipe.streams.io.SharpStream;

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -9,6 +9,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.Looper;
+
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
 
@@ -35,8 +36,8 @@ public void setColors(@ColorInt int background, @ColorInt int foreground) {
         mForegroundColor = foreground;
     }
 
-    public void setProgress(float progress) {
-        mProgress = progress;
+    public void setProgress(double progress) {
+        mProgress = (float) progress;
         invalidateSelf();
     }
 

File: app/src/main/java/org/schabi/newpipe/streams/WebMWriter.java
Patch:
@@ -249,7 +249,7 @@ public void build(SharpStream out) throws IOException, RuntimeException {
                             nextCueTime += DEFAULT_CUES_EACH_MS;
                         }
                         keyFrames.add(
-                                new KeyFrame(baseSegmentOffset, currentClusterOffset - 7, written, bTimecode.length, bloq.absoluteTimecode)
+                                new KeyFrame(baseSegmentOffset, currentClusterOffset - 8, written, bTimecode.length, bloq.absoluteTimecode)
                         );
                     }
                 }

File: app/src/main/java/org/schabi/newpipe/streams/WebMReader.java
Patch:
@@ -368,7 +368,7 @@ private SimpleBlock readSimpleBlock(Element ref) throws IOException {
         obj.trackNumber = readEncodedNumber();
         obj.relativeTimeCode = stream.readShort();
         obj.flags = (byte) stream.read();
-        obj.dataSize = (ref.offset + ref.size) - stream.position();
+        obj.dataSize = (int) ((ref.offset + ref.size) - stream.position());
         obj.createdFromBlock = ref.type == ID_Block;
 
         // NOTE: lacing is not implemented, and will be mixed with the stream data
@@ -465,7 +465,7 @@ public class SimpleBlock {
         public short relativeTimeCode;
         public long absoluteTimeCodeNs;
         public byte flags;
-        public long dataSize;
+        public int dataSize;
         private final Element ref;
 
         public boolean isKeyframe() {

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -80,7 +80,7 @@ public void run() {
             }
 
             try {
-                mConn = mMission.openConnection(mId, start, end);
+                mConn = mMission.openConnection(false, start, end);
                 mMission.establishConnection(mId, mConn);
 
                 // check if the download can be resumed

File: app/src/main/java/us/shandian/giga/postprocessing/OggFromWebmDemuxer.java
Patch:
@@ -11,7 +11,7 @@
 class OggFromWebmDemuxer extends Postprocessing {
 
     OggFromWebmDemuxer() {
-        super(false, true, ALGORITHM_OGG_FROM_WEBM_DEMUXER);
+        super(true, true, ALGORITHM_OGG_FROM_WEBM_DEMUXER);
     }
 
     @Override
@@ -24,7 +24,7 @@ boolean test(SharpStream... sources) throws IOException {
 
         switch (buffer.getInt()) {
             case 0x1a45dfa3:
-                return true;// webm
+                return true;// webm/mkv
             case 0x4F676753:
                 return false;// ogg
         }

File: app/src/main/java/org/schabi/newpipe/util/ThemeHelper.java
Patch:
@@ -137,10 +137,10 @@ public static int getThemeForService(Context context, int serviceId) {
         else if (selectedTheme.equals(blackTheme)) themeName = "BlackTheme";
         else if (selectedTheme.equals(darkTheme)) themeName = "DarkTheme";
 
-        if(serviceId == ServiceList.PeerTube.getServiceId()){
+        if (serviceId == ServiceList.PeerTube.getServiceId()) {
             //service name for peertube depends on the instance
             themeName += ".PeerTube";
-        }else{
+        } else {
             themeName += "." + service.getServiceInfo().getName();
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -1036,7 +1036,7 @@ public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float ve
         public boolean onTouch(View v, MotionEvent event) {
             popupGestureDetector.onTouchEvent(event);
             if (playerImpl == null) return false;
-            if (event.getPointerCount() == 2 && !isResizing) {
+            if (event.getPointerCount() == 2 && !isMoving && !isResizing) {
                 if (DEBUG) Log.d(TAG, "onTouch() 2 finger pointer detected, enabling resizing.");
                 playerImpl.showAndAnimateControl(-1, true);
                 playerImpl.getLoadingPanel().setVisibility(View.GONE);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -1036,7 +1036,7 @@ public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float ve
         public boolean onTouch(View v, MotionEvent event) {
             popupGestureDetector.onTouchEvent(event);
             if (playerImpl == null) return false;
-            if (event.getPointerCount() == 2 && !isResizing) {
+            if (event.getPointerCount() == 2 && !isMoving && !isResizing) {
                 if (DEBUG) Log.d(TAG, "onTouch() 2 finger pointer detected, enabling resizing.");
                 playerImpl.showAndAnimateControl(-1, true);
                 playerImpl.getLoadingPanel().setVisibility(View.GONE);

File: app/src/main/java/org/schabi/newpipe/BaseFragment.java
Patch:
@@ -107,6 +107,7 @@ public void setTitle(String title) {
         if (DEBUG) Log.d(TAG, "setTitle() called with: title = [" + title + "]");
         if((!useAsFrontPage || mIsVisibleToUser)
             && (activity != null && activity.getSupportActionBar() != null)) {
+            activity.getSupportActionBar().setDisplayShowTitleEnabled(true);
             activity.getSupportActionBar().setTitle(title);
         }
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -111,6 +111,8 @@ public void startLoading(boolean forceLoad) {
         super.startLoading(forceLoad);
 
         showListFooter(false);
+        infoListAdapter.clearStreamItemList();
+
         currentInfo = null;
         if (currentWorker != null) currentWorker.dispose();
         currentWorker = loadResult(forceLoad)

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -17,6 +17,7 @@
 import com.nostra13.universalimageloader.core.ImageLoader;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.localization.ContentCountry;
 import org.schabi.newpipe.extractor.localization.Localization;
 import org.schabi.newpipe.report.ErrorActivity;
@@ -128,6 +129,8 @@ public void onDestroy() {
         if (!selectedLocalization.equals(initialSelectedLocalization)
                 || !selectedContentCountry.equals(initialSelectedContentCountry)) {
             Toast.makeText(requireContext(), R.string.localization_changes_requires_app_restart, Toast.LENGTH_LONG).show();
+
+            NewPipe.setupLocalization(selectedLocalization, selectedContentCountry);
         }
     }
 

File: app/src/test/java/org/schabi/newpipe/settings/tabs/TabTest.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.settings.tabs;
 
-import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashSet;
@@ -9,7 +8,6 @@
 import static org.junit.Assert.assertTrue;
 
 public class TabTest {
-    @Ignore
     @Test
     public void checkIdDuplication() {
         final Set<Integer> usedIds = new HashSet<>();

File: app/src/test/java/org/schabi/newpipe/settings/tabs/TabTest.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.settings.tabs;
 
-import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashSet;
@@ -9,7 +8,6 @@
 import static org.junit.Assert.assertTrue;
 
 public class TabTest {
-    @Ignore
     @Test
     public void checkIdDuplication() {
         final Set<Integer> usedIds = new HashSet<>();

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -98,6 +98,7 @@ public void onCreate() {
         NewPipe.init(getDownloader(),
                 Localization.getPreferredLocalization(this),
                 Localization.getPreferredContentCountry(this));
+        Localization.init();
 
         StateSaver.init(this);
         initNotificationChannel();

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -109,8 +109,7 @@ public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager h
         }
 
         if (item.getPublishedTime() != null) {
-            itemPublishedTime.setText(Localization
-                    .formatDate(item.getPublishedTime().date().getTime()));
+            itemPublishedTime.setText(Localization.relativeTime(item.getPublishedTime().date()));
         } else {
             itemPublishedTime.setText(item.getTextualPublishedTime());
         }

File: app/src/main/java/org/schabi/newpipe/settings/tabs/ChooseTabsFragment.java
Patch:
@@ -231,7 +231,7 @@ public ChooseTabListItem[] getAvailableTabs(Context context) {
                     break;
                 case DEFAULT_KIOSK:
                     if (!tabList.contains(tab)) {
-                        returnList.add(new ChooseTabListItem(tab.getTabId(), "Default Kiosk",
+                        returnList.add(new ChooseTabListItem(tab.getTabId(), getString(R.string.default_kiosk_page_sumatry),
                                 ThemeHelper.resolveResourceIdFromAttr(context, R.attr.ic_hot)));
                     }
                     break;
@@ -317,7 +317,7 @@ void bind(int position, TabViewHolder holder) {
                         tabName = NewPipe.getNameOfService(((Tab.ChannelTab) tab).getChannelServiceId()) + "/" + tabName;
                         break;
                     case DEFAULT_KIOSK:
-                        tabName = "Default Kiosk";
+                        tabName = requireContext().getString(R.string.default_kiosk_page_sumatry);
                         break;
                 }
 

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -3,6 +3,8 @@
 import android.os.Handler;
 import android.util.Log;
 
+import androidx.annotation.Nullable;
+
 import org.schabi.newpipe.Downloader;
 
 import java.io.File;
@@ -15,7 +17,6 @@
 import java.net.URL;
 import java.net.UnknownHostException;
 
-import javax.annotation.Nullable;
 import javax.net.ssl.SSLException;
 
 import us.shandian.giga.io.StoredFileHelper;

File: app/src/main/java/org/schabi/newpipe/about/AboutActivity.java
Patch:
@@ -36,7 +36,6 @@ public class AboutActivity extends AppCompatActivity {
             new SoftwareComponent("ACRA", "2013", "Kevin Gaudin", "http://www.acra.ch", StandardLicenses.APACHE2),
             new SoftwareComponent("Universal Image Loader", "2011 - 2015", "Sergey Tarasevich", "https://github.com/nostra13/Android-Universal-Image-Loader", StandardLicenses.APACHE2),
             new SoftwareComponent("CircleImageView", "2014 - 2017", "Henning Dodenhof", "https://github.com/hdodenhof/CircleImageView", StandardLicenses.APACHE2),
-            new SoftwareComponent("ParalaxScrollView", "2014", "Nir Hartmann", "https://github.com/nirhart/ParallaxScroll", StandardLicenses.MIT),
             new SoftwareComponent("NoNonsense-FilePicker", "2016", "Jonas Kalderstam", "https://github.com/spacecowboy/NoNonsense-FilePicker", StandardLicenses.MPL2),
             new SoftwareComponent("ExoPlayer", "2014-2017", "Google Inc", "https://github.com/google/ExoPlayer", StandardLicenses.APACHE2),
             new SoftwareComponent("RxAndroid", "2015", "The RxAndroid authors", "https://github.com/ReactiveX/RxAndroid", StandardLicenses.APACHE2),

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java
Patch:
@@ -93,7 +93,7 @@ public void showLoading() {
     public void handleResult(@NonNull CommentsInfo result) {
         super.handleResult(result);
 
-        AnimationUtils.slideUp(getView(),120, 96, 0.06f);
+        AnimationUtils.slideUp(getView(),120, 150, 0.06f);
 
         if (!result.getErrors().isEmpty()) {
             showSnackBarError(result.getErrors(), UserAction.REQUESTED_COMMENTS, NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -359,6 +359,7 @@ private void initToolbar(Toolbar toolbar) {
         toolbar.setNavigationIcon(isLight ? R.drawable.ic_arrow_back_black_24dp : R.drawable.ic_arrow_back_white_24dp);
         toolbar.inflateMenu(R.menu.dialog_url);
         toolbar.setNavigationOnClickListener(v -> getDialog().dismiss());
+        toolbar.setNavigationContentDescription(R.string.cancel);
 
         okButton = toolbar.findViewById(R.id.okay);
         okButton.setEnabled(false);// disable until the download service connection is done

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -117,7 +117,9 @@ public void run() {
                     byte[] buf = new byte[DownloadMission.BUFFER_SIZE];
                     int len;
 
-                    while (start < end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
+                    // use always start <= end
+                    // fixes a deadlock in DownloadRunnable because youtube is sending one byte alone after downloading 26MiB exactly
+                    while (start <= end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
                         f.write(buf, 0, len);
                         start += len;
                         block.done += len;

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -117,7 +117,9 @@ public void run() {
                     byte[] buf = new byte[DownloadMission.BUFFER_SIZE];
                     int len;
 
-                    while (start < end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
+                    // use always start <= end
+                    // fixes a deadlock in DownloadRunnable because youtube is sending one byte alone after downloading 26MiB exactly
+                    while (start <= end && mMission.running && (len = is.read(buf, 0, buf.length)) != -1) {
                         f.write(buf, 0, len);
                         start += len;
                         block.done += len;

File: app/src/main/java/org/schabi/newpipe/about/AboutActivity.java
Patch:
@@ -36,7 +36,6 @@ public class AboutActivity extends AppCompatActivity {
             new SoftwareComponent("ACRA", "2013", "Kevin Gaudin", "http://www.acra.ch", StandardLicenses.APACHE2),
             new SoftwareComponent("Universal Image Loader", "2011 - 2015", "Sergey Tarasevich", "https://github.com/nostra13/Android-Universal-Image-Loader", StandardLicenses.APACHE2),
             new SoftwareComponent("CircleImageView", "2014 - 2017", "Henning Dodenhof", "https://github.com/hdodenhof/CircleImageView", StandardLicenses.APACHE2),
-            new SoftwareComponent("ParalaxScrollView", "2014", "Nir Hartmann", "https://github.com/nirhart/ParallaxScroll", StandardLicenses.MIT),
             new SoftwareComponent("NoNonsense-FilePicker", "2016", "Jonas Kalderstam", "https://github.com/spacecowboy/NoNonsense-FilePicker", StandardLicenses.MPL2),
             new SoftwareComponent("ExoPlayer", "2014-2017", "Google Inc", "https://github.com/google/ExoPlayer", StandardLicenses.APACHE2),
             new SoftwareComponent("RxAndroid", "2015", "The RxAndroid authors", "https://github.com/ReactiveX/RxAndroid", StandardLicenses.APACHE2),

File: app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java
Patch:
@@ -93,7 +93,7 @@ public void showLoading() {
     public void handleResult(@NonNull CommentsInfo result) {
         super.handleResult(result);
 
-        AnimationUtils.slideUp(getView(),120, 96, 0.06f);
+        AnimationUtils.slideUp(getView(),120, 150, 0.06f);
 
         if (!result.getErrors().isEmpty()) {
             showSnackBarError(result.getErrors(), UserAction.REQUESTED_COMMENTS, NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);

File: app/src/main/java/us/shandian/giga/io/StoredFileHelper.java
Patch:
@@ -251,6 +251,7 @@ public String getTag() {
     public boolean existsAsFile() {
         if (source == null) return false;
 
+        // WARNING: DocumentFile.exists() and DocumentFile.isFile() methods are slow
         boolean exists = docFile == null ? ioFile.exists() : docFile.exists();
         boolean isFile = docFile == null ? ioFile.isFile() : docFile.isFile();// ¿docFile.isVirtual() means is no-physical?
 

File: app/src/main/java/us/shandian/giga/service/DownloadManager.java
Patch:
@@ -424,10 +424,12 @@ boolean runMissions() {
 
             boolean flag = false;
             for (DownloadMission mission : mMissionsPending) {
-                if (mission.running || !mission.enqueued || mission.isFinished() || mission.hasInvalidStorage())
+                if (mission.running || !mission.enqueued || mission.isFinished())
                     continue;
 
                 resumeMission(mission);
+                if (mission.errCode != DownloadMission.ERROR_NOTHING) continue;
+
                 if (mPrefQueueLimit) return true;
                 flag = true;
             }

File: app/src/main/java/org/schabi/newpipe/Downloader.java
Patch:
@@ -164,7 +164,7 @@ private ResponseBody getBody(String siteUrl, Map<String, String> customPropertie
         final ResponseBody body = response.body();
 
         if (response.code() == 429) {
-            throw new ReCaptchaException("reCaptcha Challenge requested");
+            throw new ReCaptchaException("reCaptcha Challenge requested", siteUrl);
         }
 
         if (body == null) {
@@ -214,7 +214,7 @@ public DownloadResponse get(String siteUrl, DownloadRequest request) throws IOEx
         final ResponseBody body = response.body();
 
         if (response.code() == 429) {
-            throw new ReCaptchaException("reCaptcha Challenge requested");
+            throw new ReCaptchaException("reCaptcha Challenge requested", siteUrl);
         }
 
         if (body == null) {
@@ -268,7 +268,7 @@ public DownloadResponse post(String siteUrl, DownloadRequest request) throws IOE
         final ResponseBody body = response.body();
 
         if (response.code() == 429) {
-            throw new ReCaptchaException("reCaptcha Challenge requested");
+            throw new ReCaptchaException("reCaptcha Challenge requested", siteUrl);
         }
 
         if (body == null) {

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -446,6 +446,9 @@ public static void openSettings(Context context) {
     }
 
     public static boolean openDownloads(Activity activity) {
+        if (!PermissionHelper.checkStoragePermissions(activity, PermissionHelper.DOWNLOADS_REQUEST_CODE)) {
+            return false;
+        }
         Intent intent = new Intent(activity, DownloadActivity.class);
         activity.startActivity(intent);
         return true;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -64,7 +64,6 @@ public void onAttach(Context context) {
 
     @Override
     public void onDetach() {
-        infoListAdapter.dispose();
         super.onDetach();
     }
 
@@ -97,8 +96,6 @@ public void onResume() {
             }
             updateFlags = 0;
         }
-
-        itemsList.post(infoListAdapter::updateStates);
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -1,14 +1,13 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
@@ -32,7 +31,7 @@ public ChannelMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup pare
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
         if (!(infoItem instanceof ChannelInfoItem)) return;
         final ChannelInfoItem item = (ChannelInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java
Patch:
@@ -1,15 +1,14 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 
 public class PlaylistMiniInfoItemHolder extends InfoItemHolder {
@@ -32,7 +31,7 @@ public PlaylistMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup par
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
         if (!(infoItem instanceof PlaylistInfoItem)) return;
         final PlaylistInfoItem item = (PlaylistInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -76,8 +76,6 @@ public void onResume() {
             }
             updateFlags = 0;
         }
-
-        itemsList.post(itemListAdapter::updateStates);
     }
 
     /*//////////////////////////////////////////////////////////////////////////
@@ -152,7 +150,6 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onDestroyView() {
         super.onDestroyView();
         itemsList = null;
-        itemListAdapter.dispose();
         itemListAdapter = null;
     }
 

File: app/src/main/java/org/schabi/newpipe/local/holder/PlaylistItemHolder.java
Patch:
@@ -1,14 +1,13 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 
 import java.text.DateFormat;
 
@@ -33,7 +32,7 @@ public PlaylistItemHolder(LocalItemBuilder infoItemBuilder, ViewGroup parent) {
     }
 
     @Override
-    public void updateFromItem(final LocalItem localItem, @Nullable final StreamStateEntity state, final DateFormat dateFormat) {
+    public void updateFromItem(final LocalItem localItem, HistoryRecordManager historyRecordManager, final DateFormat dateFormat) {
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnItemSelectedListener() != null) {
                 itemBuilder.getOnItemSelectedListener().selected(localItem);

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import android.view.View;
 import android.view.ViewGroup;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -46,7 +46,7 @@ public String transformUrl(Matcher match, String url) {
             if(hours != null) timestamp += (Integer.parseInt(hours.replace(":", ""))*3600);
             if(minutes != null) timestamp += (Integer.parseInt(minutes.replace(":", ""))*60);
             if(seconds != null) timestamp += (Integer.parseInt(seconds));
-            return streamUrl + url.replace(match.group(0), "#timestamp=" + String.valueOf(timestamp));
+            return streamUrl + url.replace(match.group(0), "#timestamp=" + timestamp);
         }
     };
 

File: app/src/main/java/org/schabi/newpipe/local/dialog/PlaylistAppendDialog.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.local.dialog;
 
-import android.annotation.SuppressLint;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -29,7 +28,6 @@
 
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.CompositeDisposable;
-import io.reactivex.disposables.Disposable;
 
 public final class PlaylistAppendDialog extends PlaylistDialog {
     private static final String TAG = PlaylistAppendDialog.class.getCanonicalName();

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionFragment.java
Patch:
@@ -379,7 +379,6 @@ public void held(ChannelInfoItem selectedItem) {
 
         });
 
-        //noinspection ConstantConditions
         whatsNewItemListHeader.setOnClickListener(v -> {
             FragmentManager fragmentManager = getFM();
             NavigationHelper.openWhatsNewFragment(fragmentManager);

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -82,7 +82,6 @@ private InfoItemHolder holderFromInfoType(@NonNull ViewGroup parent, @NonNull In
             case COMMENT:
                 return useMiniVariant ? new CommentsMiniInfoItemHolder(this, parent) : new CommentsInfoItemHolder(this, parent);
             default:
-                Log.e(TAG, "Trollolo");
                 throw new RuntimeException("InfoType not expected = " + infoType.name());
         }
     }

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -249,7 +249,6 @@ public int getItemViewType(int position) {
             case COMMENT:
                 return useMiniVariant ? MINI_COMMENT_HOLDER_TYPE : COMMENT_HOLDER_TYPE;
             default:
-                Log.e(TAG, "Trollolo");
                 return -1;
         }
     }
@@ -287,7 +286,6 @@ public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
             case COMMENT_HOLDER_TYPE:
                 return new CommentsInfoItemHolder(infoItemBuilder, parent);
             default:
-                Log.e(TAG, "Trollolo");
                 return new FallbackViewHolder(new View(parent.getContext()));
         }
     }

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -228,8 +228,9 @@ public int getItemViewType(int position) {
         }
     }
 
+    @NonNull
     @Override
-    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
+    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int type) {
         if (DEBUG) Log.d(TAG, "onCreateViewHolder() called with: parent = [" +
                 parent + "], type = [" + type + "]");
         switch (type) {
@@ -260,7 +261,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
     }
 
     @Override
-    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         if (DEBUG) Log.d(TAG, "onBindViewHolder() called with: holder = [" +
                 holder.getClass().getSimpleName() + "], position = [" + position + "]");
 

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -2,14 +2,12 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 import android.util.Log;
 import android.view.View;
 import android.view.ViewGroup;
 
 import com.nostra13.universalimageloader.core.ImageLoader;
 
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.info_list;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelInfoItemHolder.java
Patch:
@@ -1,11 +1,9 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -1,11 +1,9 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsInfoItemHolder.java
Patch:
@@ -1,11 +1,9 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/InfoItemHolder.java
Patch:
@@ -1,11 +1,9 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.ViewGroup;
 
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.text.TextUtils;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamMiniInfoItemHolder.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.info_list.holder;
 
-import android.support.annotation.Nullable;
 import android.support.v4.content.ContextCompat;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.local;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalItemHolder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.ViewGroup;
 
 import org.schabi.newpipe.database.LocalItem;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistItemHolder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.view.View;
 import android.view.ViewGroup;
 
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java
Patch:
@@ -1,6 +1,5 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.support.v4.content.ContextCompat;
 import android.view.MotionEvent;
 import android.view.View;

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalStatisticStreamItemHolder.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.support.annotation.Nullable;
 import android.support.v4.content.ContextCompat;
-import android.util.Log;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;

File: app/src/main/java/org/schabi/newpipe/local/holder/PlaylistItemHolder.java
Patch:
@@ -1,13 +1,11 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;
 

File: app/src/main/java/org/schabi/newpipe/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -1,11 +1,9 @@
 package org.schabi.newpipe.local.holder;
 
-import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.local.LocalItemBuilder;
 import org.schabi.newpipe.local.history.HistoryRecordManager;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -64,7 +64,6 @@ public void onAttach(Context context) {
 
     @Override
     public void onDetach() {
-        infoListAdapter.dispose();
         super.onDetach();
     }
 
@@ -97,8 +96,6 @@ public void onResume() {
             }
             updateFlags = 0;
         }
-
-        itemsList.post(infoListAdapter::updateStates);
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelInfoItemHolder.java
Patch:
@@ -9,6 +9,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.Localization;
 
 /*
@@ -40,8 +41,8 @@ public ChannelInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup parent)
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
-        super.updateFromItem(infoItem, state);
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
+        super.updateFromItem(infoItem, historyRecordManager);
 
         if (!(infoItem instanceof ChannelInfoItem)) return;
         final ChannelInfoItem item = (ChannelInfoItem) infoItem;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -9,6 +9,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
@@ -32,7 +33,7 @@ public ChannelMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup pare
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
         if (!(infoItem instanceof ChannelInfoItem)) return;
         final ChannelInfoItem item = (ChannelInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsInfoItemHolder.java
Patch:
@@ -9,6 +9,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 
 /*
  * Created by Christian Schabesberger on 12.02.17.
@@ -41,8 +42,8 @@ public CommentsInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup parent)
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
-        super.updateFromItem(infoItem, state);
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
+        super.updateFromItem(infoItem, historyRecordManager);
 
         if (!(infoItem instanceof CommentsInfoItem)) return;
         final CommentsInfoItem item = (CommentsInfoItem) infoItem;

File: app/src/main/java/org/schabi/newpipe/info_list/holder/InfoItemHolder.java
Patch:
@@ -8,6 +8,7 @@
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 
 /*
  * Created by Christian Schabesberger on 12.02.17.
@@ -37,8 +38,8 @@ public InfoItemHolder(InfoItemBuilder infoItemBuilder, int layoutId, ViewGroup p
         this.itemBuilder = infoItemBuilder;
     }
 
-    public abstract void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state);
+    public abstract void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager);
 
-    public void updateState(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
+    public void updateState(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
     }
 }

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java
Patch:
@@ -10,6 +10,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 
 public class PlaylistMiniInfoItemHolder extends InfoItemHolder {
@@ -32,7 +33,7 @@ public PlaylistMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup par
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
         if (!(infoItem instanceof PlaylistInfoItem)) return;
         final PlaylistInfoItem item = (PlaylistInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamInfoItemHolder.java
Patch:
@@ -10,6 +10,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.Localization;
 
 /*
@@ -42,8 +43,8 @@ public StreamInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup parent) {
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
-        super.updateFromItem(infoItem, state);
+    public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager historyRecordManager) {
+        super.updateFromItem(infoItem, historyRecordManager);
 
         if (!(infoItem instanceof StreamInfoItem)) return;
         final StreamInfoItem item = (StreamInfoItem) infoItem;

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -76,8 +76,6 @@ public void onResume() {
             }
             updateFlags = 0;
         }
-
-        itemsList.post(itemListAdapter::updateStates);
     }
 
     /*//////////////////////////////////////////////////////////////////////////
@@ -152,7 +150,6 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onDestroyView() {
         super.onDestroyView();
         itemsList = null;
-        itemListAdapter.dispose();
         itemListAdapter = null;
     }
 

File: app/src/main/java/org/schabi/newpipe/local/dialog/PlaylistAppendDialog.java
Patch:
@@ -113,7 +113,6 @@ public void onDestroyView() {
         super.onDestroyView();
         if (playlistReactor != null) playlistReactor.dispose();
         if (playlistAdapter != null) {
-            playlistAdapter.dispose();
             playlistAdapter.unsetSelectedListener();
         }
 

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalItemHolder.java
Patch:
@@ -8,6 +8,7 @@
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 
 import java.text.DateFormat;
 
@@ -40,8 +41,8 @@ public LocalItemHolder(LocalItemBuilder itemBuilder, int layoutId, ViewGroup par
         this.itemBuilder = itemBuilder;
     }
 
-    public abstract void updateFromItem(final LocalItem item, @Nullable final StreamStateEntity state, final DateFormat dateFormat);
+    public abstract void updateFromItem(final LocalItem item, HistoryRecordManager historyRecordManager, final DateFormat dateFormat);
 
-    public void updateState(final LocalItem localItem, @Nullable final StreamStateEntity state) {
+    public void updateState(final LocalItem localItem, HistoryRecordManager historyRecordManager) {
     }
 }

File: app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistItemHolder.java
Patch:
@@ -8,6 +8,7 @@
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 
 import java.text.DateFormat;
@@ -23,7 +24,7 @@ public LocalPlaylistItemHolder(LocalItemBuilder infoItemBuilder, ViewGroup paren
     }
 
     @Override
-    public void updateFromItem(final LocalItem localItem, @Nullable final StreamStateEntity state, final DateFormat dateFormat) {
+    public void updateFromItem(final LocalItem localItem, HistoryRecordManager historyRecordManager, final DateFormat dateFormat) {
         if (!(localItem instanceof PlaylistMetadataEntry)) return;
         final PlaylistMetadataEntry item = (PlaylistMetadataEntry) localItem;
 
@@ -34,6 +35,6 @@ public void updateFromItem(final LocalItem localItem, @Nullable final StreamStat
         itemBuilder.displayImage(item.thumbnailUrl, itemThumbnailView,
                 ImageDisplayConstants.DISPLAY_PLAYLIST_OPTIONS);
 
-        super.updateFromItem(localItem, state, dateFormat);
+        super.updateFromItem(localItem, historyRecordManager, dateFormat);
     }
 }

File: app/src/main/java/org/schabi/newpipe/local/holder/PlaylistItemHolder.java
Patch:
@@ -9,6 +9,7 @@
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 
 import java.text.DateFormat;
 
@@ -33,7 +34,7 @@ public PlaylistItemHolder(LocalItemBuilder infoItemBuilder, ViewGroup parent) {
     }
 
     @Override
-    public void updateFromItem(final LocalItem localItem, @Nullable final StreamStateEntity state, final DateFormat dateFormat) {
+    public void updateFromItem(final LocalItem localItem, HistoryRecordManager historyRecordManager, final DateFormat dateFormat) {
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnItemSelectedListener() != null) {
                 itemBuilder.getOnItemSelectedListener().selected(localItem);

File: app/src/main/java/org/schabi/newpipe/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -8,6 +8,7 @@
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.local.LocalItemBuilder;
+import org.schabi.newpipe.local.history.HistoryRecordManager;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
@@ -23,7 +24,7 @@ public RemotePlaylistItemHolder(LocalItemBuilder infoItemBuilder, ViewGroup pare
     }
 
     @Override
-    public void updateFromItem(final LocalItem localItem, @Nullable final StreamStateEntity state, final DateFormat dateFormat) {
+    public void updateFromItem(final LocalItem localItem, HistoryRecordManager historyRecordManager, final DateFormat dateFormat) {
         if (!(localItem instanceof PlaylistRemoteEntity)) return;
         final PlaylistRemoteEntity item = (PlaylistRemoteEntity) localItem;
 
@@ -35,6 +36,6 @@ public void updateFromItem(final LocalItem localItem, @Nullable final StreamStat
         itemBuilder.displayImage(item.getThumbnailUrl(), itemThumbnailView,
                 ImageDisplayConstants.DISPLAY_PLAYLIST_OPTIONS);
 
-        super.updateFromItem(localItem, state, dateFormat);
+        super.updateFromItem(localItem, historyRecordManager, dateFormat);
     }
 }

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionFragment.java
Patch:
@@ -130,7 +130,6 @@ public void onAttach(Context context) {
 
     @Override
     public void onDetach() {
-        infoListAdapter.dispose();
         super.onDetach();
     }
 
@@ -153,8 +152,6 @@ public void onResume() {
             }
             updateFlags = 0;
         }
-
-        itemsList.post(infoListAdapter::updateStates);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/settings/HistorySettingsFragment.java
Patch:
@@ -18,7 +18,7 @@
 
 public class HistorySettingsFragment extends BasePreferenceFragment {
     private String cacheWipeKey;
-    private String viewsHistroyClearKey;
+    private String viewsHistoryClearKey;
     private String searchHistoryClearKey;
     private HistoryRecordManager recordManager;
     private CompositeDisposable disposables;
@@ -27,7 +27,7 @@ public class HistorySettingsFragment extends BasePreferenceFragment {
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         cacheWipeKey = getString(R.string.metadata_cache_wipe_key);
-        viewsHistroyClearKey = getString(R.string.clear_views_history_key);
+        viewsHistoryClearKey = getString(R.string.clear_views_history_key);
         searchHistoryClearKey = getString(R.string.clear_search_history_key);
         recordManager = new HistoryRecordManager(getActivity());
         disposables = new CompositeDisposable();
@@ -46,7 +46,7 @@ public boolean onPreferenceTreeClick(Preference preference) {
                     Toast.LENGTH_SHORT).show();
         }
 
-        if (preference.getKey().equals(viewsHistroyClearKey)) {
+        if (preference.getKey().equals(viewsHistoryClearKey)) {
             new AlertDialog.Builder(getActivity())
                     .setTitle(R.string.delete_view_history_alert)
                     .setNegativeButton(R.string.cancel, ((dialog, which) -> dialog.dismiss()))

File: app/src/main/java/us/shandian/giga/service/DownloadManager.java
Patch:
@@ -666,9 +666,9 @@ public boolean[] hasValidPendingMissions() {
                         continue;
 
                     if (mission.running)
-                        paused = true;
-                    else
                         running = true;
+                    else
+                        paused = true;
                 }
             }
 

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -138,6 +138,7 @@ public void onAttach(Context context) {
      * deprecated in API level 23,
      * but must remain to allow compatibility with api<23
      */
+    @SuppressWarnings("deprecation")
     @Override
     public void onAttach(Activity activity) {
         super.onAttach(activity);
@@ -273,6 +274,7 @@ public void onResume() {
             }
 
             mBinder.addMissionEventListener(mAdapter.getMessenger());
+            mAdapter.checkMasterButtonsVisibility();
         }
         if (mBinder != null) mBinder.enableNotifications(false);
     }

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -180,7 +180,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                                     .observeOn(AndroidSchedulers.mainThread())
                                     .subscribe(
                                             howManyDeleted -> Toast.makeText(getContext(),
-                                                    R.string.view_history_deleted,
+                                                    R.string.watch_history_deleted,
                                                     Toast.LENGTH_SHORT).show(),
                                             throwable -> ErrorActivity.reportError(getContext(),
                                                     throwable,

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -274,7 +274,7 @@ else if (v instanceof Long)
                 else if (v instanceof String)
                     prefEdit.putString(key, ((String) v));
             }
-            prefEdit.apply();
+            prefEdit.commit();
         } catch (FileNotFoundException e) {
             e.printStackTrace();
         } catch (IOException e) {

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -180,7 +180,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                                     .observeOn(AndroidSchedulers.mainThread())
                                     .subscribe(
                                             howManyDeleted -> Toast.makeText(getContext(),
-                                                    R.string.view_history_deleted,
+                                                    R.string.watch_history_deleted,
                                                     Toast.LENGTH_SHORT).show(),
                                             throwable -> ErrorActivity.reportError(getContext(),
                                                     throwable,

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -274,7 +274,7 @@ else if (v instanceof Long)
                 else if (v instanceof String)
                     prefEdit.putString(key, ((String) v));
             }
-            prefEdit.apply();
+            prefEdit.commit();
         } catch (FileNotFoundException e) {
             e.printStackTrace();
         } catch (IOException e) {

File: app/src/main/java/us/shandian/giga/service/DownloadManager.java
Patch:
@@ -666,9 +666,9 @@ public boolean[] hasValidPendingMissions() {
                         continue;
 
                     if (mission.running)
-                        paused = true;
-                    else
                         running = true;
+                    else
+                        paused = true;
                 }
             }
 

File: app/src/main/java/org/schabi/newpipe/settings/DownloadSettingsFragment.java
Patch:
@@ -12,7 +12,6 @@
 import android.support.annotation.StringRes;
 import android.support.v7.preference.Preference;
 import android.util.Log;
-import android.widget.Toast;
 
 import com.nononsenseapps.filepicker.Utils;
 
@@ -64,7 +63,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         }
 
         if (hasInvalidPath(DOWNLOAD_PATH_VIDEO_PREFERENCE) || hasInvalidPath(DOWNLOAD_PATH_AUDIO_PREFERENCE)) {
-            Toast.makeText(ctx, R.string.download_pick_path, Toast.LENGTH_SHORT).show();
             updatePreferencesSummary();
         }
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -446,9 +446,6 @@ public static void openSettings(Context context) {
     }
 
     public static boolean openDownloads(Activity activity) {
-        if (!PermissionHelper.checkStoragePermissions(activity, PermissionHelper.DOWNLOADS_REQUEST_CODE)) {
-            return false;
-        }
         Intent intent = new Intent(activity, DownloadActivity.class);
         activity.startActivity(intent);
         return true;

File: app/src/main/java/org/schabi/newpipe/util/PermissionHelper.java
Patch:
@@ -18,9 +18,6 @@
 import org.schabi.newpipe.R;
 
 public class PermissionHelper {
-    public static final int DOWNLOAD_DIALOG_REQUEST_CODE = 778;
-    public static final int DOWNLOADS_REQUEST_CODE = 777;
-
 
     public static boolean checkStoragePermissions(Activity activity, int requestCode) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {

File: app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java
Patch:
@@ -94,7 +94,7 @@ public void run() {
                 mMission.notifyProgress(len);
             }
 
-            // if thread goes interrupted check if the last part mIs written. This avoid re-download the whole file
+            // if thread goes interrupted check if the last part is written. This avoid re-download the whole file
             done = len == -1;
         } catch (Exception e) {
             dispose();

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -773,7 +773,6 @@ private void continueSelectedDownload(@NonNull StoredFileHelper storage) {
         // more download logic: select muxer, subtitle converter, etc.
         switch (radioStreamsGroup.getCheckedRadioButtonId()) {
             case R.id.audio_button:
-                threads = 1;// use unique thread for subtitles due small file size
                 kind = 'a';
                 selectedStream = audioStreamsAdapter.getItem(selectedAudioIndex);
 
@@ -808,6 +807,7 @@ private void continueSelectedDownload(@NonNull StoredFileHelper storage) {
                 }
                 break;
             case R.id.subtitle_button:
+                threads = 1;// use unique thread for subtitles due small file size
                 kind = 's';
                 selectedStream = subtitleStreamsAdapter.getItem(selectedSubtitleIndex);
 

File: app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java
Patch:
@@ -94,7 +94,7 @@ public void run() {
                 mMission.notifyProgress(len);
             }
 
-            // if thread goes interrupted check if the last part mIs written. This avoid re-download the whole file
+            // if thread goes interrupted check if the last part is written. This avoid re-download the whole file
             done = len == -1;
         } catch (Exception e) {
             dispose();

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsManager.java
Patch:
@@ -44,7 +44,7 @@ public void resetTabs() {
     }
 
     public List<Tab> getDefaultTabs() {
-        return TabsJsonHelper.FALLBACK_INITIAL_TABS_LIST;
+        return TabsJsonHelper.getDefaultTabs();
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/test/java/org/schabi/newpipe/settings/tabs/TabTest.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.settings.tabs;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashSet;
@@ -8,6 +9,7 @@
 import static org.junit.Assert.assertTrue;
 
 public class TabTest {
+    @Ignore
     @Test
     public void checkIdDuplication() {
         final Set<Integer> usedIds = new HashSet<>();

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -55,7 +55,7 @@ public void onGlobalLayout() {
     private void updateFragments() {
         MissionsFragment fragment = new MissionsFragment();
 
-        getFragmentManager().beginTransaction()
+        getSupportFragmentManager().beginTransaction()
                 .replace(R.id.frame, fragment, MISSIONS_FRAGMENT_TAG)
                 .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
                 .commit();

File: app/src/main/java/org/schabi/newpipe/info_list/holder/ChannelMiniInfoItemHolder.java
Patch:
@@ -1,9 +1,11 @@
 package org.schabi.newpipe.info_list.holder;
 
+import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
@@ -30,7 +32,7 @@ public ChannelMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup pare
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem) {
+    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
         if (!(infoItem instanceof ChannelInfoItem)) return;
         final ChannelInfoItem item = (ChannelInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java
Patch:
@@ -1,10 +1,12 @@
 package org.schabi.newpipe.info_list.holder;
 
+import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
+import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
@@ -30,7 +32,7 @@ public PlaylistMiniInfoItemHolder(InfoItemBuilder infoItemBuilder, ViewGroup par
     }
 
     @Override
-    public void updateFromItem(final InfoItem infoItem) {
+    public void updateFromItem(final InfoItem infoItem, @Nullable final StreamStateEntity state) {
         if (!(infoItem instanceof PlaylistInfoItem)) return;
         final PlaylistInfoItem item = (PlaylistInfoItem) infoItem;
 

File: app/src/main/java/org/schabi/newpipe/local/BaseLocalListFragment.java
Patch:
@@ -76,6 +76,8 @@ public void onResume() {
             }
             updateFlags = 0;
         }
+
+        itemsList.post(itemListAdapter::updateStates);
     }
 
     /*//////////////////////////////////////////////////////////////////////////
@@ -150,6 +152,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onDestroyView() {
         super.onDestroyView();
         itemsList = null;
+        itemListAdapter.dispose();
         itemListAdapter = null;
     }
 

File: app/src/main/java/org/schabi/newpipe/local/feed/FeedFragment.java
Patch:
@@ -21,8 +21,8 @@
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.fragments.list.BaseListFragment;
-import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.local.subscription.SubscriptionService;
+import org.schabi.newpipe.report.UserAction;
 
 import java.util.Collections;
 import java.util.HashSet;
@@ -262,7 +262,7 @@ public void onComplete() {
      * If chosen feed already displayed, then we request another feed from another
      * subscription, until the subscription table runs out of new items.
      * <p>
-     * This Observer is self-contained and will dispose itself when complete. However, this
+     * This Observer is self-contained and will close itself when complete. However, this
      * does not obey the fragment lifecycle and may continue running in the background
      * until it is complete. This is done due to RxJava2 no longer propagate errors once
      * an observer is unsubscribed while the thread process is still running.

File: app/src/main/java/org/schabi/newpipe/local/holder/PlaylistItemHolder.java
Patch:
@@ -1,11 +1,13 @@
 package org.schabi.newpipe.local.holder;
 
+import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
+import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.local.LocalItemBuilder;
 
 import java.text.DateFormat;
@@ -31,7 +33,7 @@ public PlaylistItemHolder(LocalItemBuilder infoItemBuilder, ViewGroup parent) {
     }
 
     @Override
-    public void updateFromItem(final LocalItem localItem, final DateFormat dateFormat) {
+    public void updateFromItem(final LocalItem localItem, @Nullable final StreamStateEntity state, final DateFormat dateFormat) {
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnItemSelectedListener() != null) {
                 itemBuilder.getOnItemSelectedListener().selected(localItem);

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -150,6 +150,7 @@ private void onClose() {
             lockManager.releaseWifiAndCpu();
         }
         if (basePlayerImpl != null) {
+            basePlayerImpl.savePlaybackState();
             basePlayerImpl.stopActivityBinding();
             basePlayerImpl.destroy();
         }

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -325,6 +325,7 @@ public void closePopup() {
         isPopupClosing = true;
 
         if (playerImpl != null) {
+            playerImpl.savePlaybackState();
             if (playerImpl.getRootView() != null) {
                 windowManager.removeView(playerImpl.getRootView());
             }
@@ -565,7 +566,8 @@ public void onFullScreenButtonClicked() {
                     this.getPlaybackSpeed(),
                     this.getPlaybackPitch(),
                     this.getPlaybackSkipSilence(),
-                    this.getPlaybackQuality()
+                    this.getPlaybackQuality(),
+                    false
             );
             intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             context.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -188,7 +188,8 @@ protected Intent getSwitchIntent(final Class clazz) {
                 this.player.getPlaybackSpeed(),
                 this.player.getPlaybackPitch(),
                 this.player.getPlaybackSkipSilence(),
-                null
+                null,
+                false
         ).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -158,7 +158,7 @@ private MediaSourceManager(@NonNull final PlaybackListener listener,
      * Dispose the manager and releases all message buses and loaders.
      * */
     public void dispose() {
-        if (DEBUG) Log.d(TAG, "dispose() called.");
+        if (DEBUG) Log.d(TAG, "close() called.");
 
         debouncedSignal.onComplete();
         debouncedLoader.dispose();

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -17,7 +17,9 @@ public enum UserAction {
     REQUESTED_KIOSK("requested kiosk"),
     REQUESTED_COMMENTS("requested comments"),
     DELETE_FROM_HISTORY("delete from history"),
-    PLAY_STREAM("Play stream");
+    PLAY_STREAM("Play stream"),
+    DOWNLOAD_POSTPROCESSING("download post-processing"),
+    DOWNLOAD_FAILED("download failed");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -243,8 +243,6 @@ public static void handleGeneralException(Context context, int serviceId, String
                 context.startActivity(intent);
             } else if (exception instanceof IOException) {
                 Toast.makeText(context, R.string.network_error, Toast.LENGTH_LONG).show();
-            } else if (exception instanceof YoutubeStreamExtractor.GemaException) {
-                Toast.makeText(context, R.string.blocked_by_gema, Toast.LENGTH_LONG).show();
             } else if (exception instanceof ContentNotAvailableException) {
                 Toast.makeText(context, R.string.content_not_available, Toast.LENGTH_LONG).show();
             } else {

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -38,7 +38,7 @@ public long getSizeInBytes() {
     public static AudioStream getAudioStreamFor(@NonNull List<AudioStream> audioStreams, @NonNull VideoStream videoStream) {
         switch (videoStream.getFormat()) {
             case WEBM:
-            case MPEG_4:
+            case MPEG_4:// ¿is mpeg-4 DASH?
                 break;
             default:
                 return null;

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -540,6 +540,8 @@ public void clearFinishedDownloads() {
     }
 
     private boolean handlePopupItem(@NonNull ViewHolderItem h, @NonNull MenuItem option) {
+        if (h.item == null) return true;
+
         int id = option.getItemId();
         DownloadMission mission = h.item.mission instanceof DownloadMission ? (DownloadMission) h.item.mission : null;
 

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -540,6 +540,8 @@ public void clearFinishedDownloads() {
     }
 
     private boolean handlePopupItem(@NonNull ViewHolderItem h, @NonNull MenuItem option) {
+        if (h.item == null) return true;
+
         int id = option.getItemId();
         DownloadMission mission = h.item.mission instanceof DownloadMission ? (DownloadMission) h.item.mission : null;
 

File: app/src/main/java/org/schabi/newpipe/player/playback/BasePlayerMediaSession.java
Patch:
@@ -59,7 +59,7 @@ public MediaDescriptionCompat getQueueMetadata(int index) {
         // set additional metadata for A2DP/AVRCP
         Bundle additionalMetadata = new Bundle();
         additionalMetadata.putString(MediaMetadataCompat.METADATA_KEY_ARTIST, item.getUploader());
-        additionalMetadata.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, item.getDuration());
+        additionalMetadata.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, item.getDuration() * 1000);
         descriptionBuilder.setExtras(additionalMetadata);
 
         final Uri thumbnailUri = Uri.parse(item.getThumbnailUrl());

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -540,6 +540,8 @@ public void clearFinishedDownloads() {
     }
 
     private boolean handlePopupItem(@NonNull ViewHolderItem h, @NonNull MenuItem option) {
+        if (h.item == null) return true;
+
         int id = option.getItemId();
         DownloadMission mission = h.item.mission instanceof DownloadMission ? (DownloadMission) h.item.mission : null;
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -55,7 +55,7 @@ public void onGlobalLayout() {
     private void updateFragments() {
         MissionsFragment fragment = new MissionsFragment();
 
-        getFragmentManager().beginTransaction()
+        getSupportFragmentManager().beginTransaction()
                 .replace(R.id.frame, fragment, MISSIONS_FRAGMENT_TAG)
                 .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
                 .commit();

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1195,7 +1195,7 @@ public void openDownloadDialog() {
                 downloadDialog.setSelectedVideoStream(selectedVideoStreamIndex);
                 downloadDialog.setSubtitleStreams(currentInfo.getSubtitles());
 
-                downloadDialog.show(activity.getSupportFragmentManager(), "downloadDialog");
+                downloadDialog.show(getActivity().getSupportFragmentManager(), "downloadDialog");
             } catch (Exception e) {
                 ErrorActivity.ErrorInfo info = ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,
                         ServiceList.all()

File: app/src/main/java/org/schabi/newpipe/local/feed/FeedFragment.java
Patch:
@@ -21,8 +21,8 @@
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.fragments.list.BaseListFragment;
-import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.local.subscription.SubscriptionService;
+import org.schabi.newpipe.report.UserAction;
 
 import java.util.Collections;
 import java.util.HashSet;
@@ -262,7 +262,7 @@ public void onComplete() {
      * If chosen feed already displayed, then we request another feed from another
      * subscription, until the subscription table runs out of new items.
      * <p>
-     * This Observer is self-contained and will dispose itself when complete. However, this
+     * This Observer is self-contained and will close itself when complete. However, this
      * does not obey the fragment lifecycle and may continue running in the background
      * until it is complete. This is done due to RxJava2 no longer propagate errors once
      * an observer is unsubscribed while the thread process is still running.

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -158,7 +158,7 @@ private MediaSourceManager(@NonNull final PlaybackListener listener,
      * Dispose the manager and releases all message buses and loaders.
      * */
     public void dispose() {
-        if (DEBUG) Log.d(TAG, "dispose() called.");
+        if (DEBUG) Log.d(TAG, "close() called.");
 
         debouncedSignal.onComplete();
         debouncedLoader.dispose();

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -17,7 +17,9 @@ public enum UserAction {
     REQUESTED_KIOSK("requested kiosk"),
     REQUESTED_COMMENTS("requested comments"),
     DELETE_FROM_HISTORY("delete from history"),
-    PLAY_STREAM("Play stream");
+    PLAY_STREAM("Play stream"),
+    DOWNLOAD_POSTPROCESSING("download post-processing"),
+    DOWNLOAD_FAILED("download failed");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -38,7 +38,7 @@ public long getSizeInBytes() {
     public static AudioStream getAudioStreamFor(@NonNull List<AudioStream> audioStreams, @NonNull VideoStream videoStream) {
         switch (videoStream.getFormat()) {
             case WEBM:
-            case MPEG_4:
+            case MPEG_4:// ¿is mpeg-4 DASH?
                 break;
             default:
                 return null;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1195,7 +1195,7 @@ public void openDownloadDialog() {
                 downloadDialog.setSelectedVideoStream(selectedVideoStreamIndex);
                 downloadDialog.setSubtitleStreams(currentInfo.getSubtitles());
 
-                downloadDialog.show(activity.getSupportFragmentManager(), "downloadDialog");
+                downloadDialog.show(getActivity().getSupportFragmentManager(), "downloadDialog");
             } catch (Exception e) {
                 ErrorActivity.ErrorInfo info = ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,
                         ServiceList.all()

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -297,6 +297,7 @@ private void buildCaptionMenu(final List<String> availableLanguages) {
             return true;
         });
 
+        // Add all available captions
         for (int i = 0; i < availableLanguages.size(); i++) {
             final String captionLanguage = availableLanguages.get(i);
             MenuItem captionItem = captionPopupMenu.getMenu().add(captionPopupMenuGroupId,
@@ -506,7 +507,7 @@ private void onTextTrackUpdate() {
         }
 
         // Normalize mismatching language strings
-        final String preferredLanguage = trackSelector.getParameters().preferredTextLanguage;
+        final String preferredLanguage = trackSelector.getPreferredTextLanguage();
         // Build UI
         buildCaptionMenu(availableLanguages);
         if (trackSelector.getParameters().getRendererDisabled(textRenderer) ||

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -297,6 +297,7 @@ private void buildCaptionMenu(final List<String> availableLanguages) {
             return true;
         });
 
+        // Add all available captions
         for (int i = 0; i < availableLanguages.size(); i++) {
             final String captionLanguage = availableLanguages.get(i);
             MenuItem captionItem = captionPopupMenu.getMenu().add(captionPopupMenuGroupId,
@@ -506,7 +507,7 @@ private void onTextTrackUpdate() {
         }
 
         // Normalize mismatching language strings
-        final String preferredLanguage = trackSelector.getParameters().preferredTextLanguage;
+        final String preferredLanguage = trackSelector.getPreferredTextLanguage();
         // Build UI
         buildCaptionMenu(availableLanguages);
         if (trackSelector.getParameters().getRendererDisabled(textRenderer) ||

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -28,7 +28,7 @@ public class DownloadInitializer extends Thread {
 
     @Override
     public void run() {
-        if (mMission.current > 0) mMission.resetState(false,true, DownloadMission.ERROR_NOTHING);
+        if (mMission.current > 0) mMission.resetState(false, true, DownloadMission.ERROR_NOTHING);
 
         int retryCount = 0;
         while (true) {

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -27,7 +27,6 @@ public class DownloadRunnable extends Thread {
         if (mission == null) throw new NullPointerException("mission is null");
         mMission = mission;
         mId = id;
-        mConn = null;
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/streams/DataReader.java
Patch:
@@ -16,6 +16,8 @@ public class DataReader {
     public final static int INTEGER_SIZE = 4;
     public final static int FLOAT_SIZE = 4;
 
+    private final static int BUFFER_SIZE = 128 * 1024;// 128 KiB
+
     private long position = 0;
     private final SharpStream stream;
 
@@ -229,7 +231,7 @@ private void primitiveRead(int amount) throws IOException {
         }
     }
 
-    private final byte[] readBuffer = new byte[8 * 1024];
+    private final byte[] readBuffer = new byte[BUFFER_SIZE];
     private int readOffset;
     private int readCount;
 

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -28,7 +28,7 @@ public class DownloadInitializer extends Thread {
 
     @Override
     public void run() {
-        if (mMission.current > 0) mMission.resetState();
+        if (mMission.current > 0) mMission.resetState(false,true, DownloadMission.ERROR_NOTHING);
 
         int retryCount = 0;
         while (true) {

File: app/src/main/java/us/shandian/giga/get/FinishedMission.java
Patch:
@@ -12,5 +12,7 @@ public FinishedMission(@NonNull DownloadMission mission) {
         length = mission.length;// ¿or mission.done?
         timestamp = mission.timestamp;
         kind = mission.kind;
+        storage = mission.storage;
+
     }
 }

File: app/src/main/java/us/shandian/giga/postprocessing/Mp4FromDashMuxer.java
Patch:
@@ -11,7 +11,7 @@
 class Mp4FromDashMuxer extends Postprocessing {
 
     Mp4FromDashMuxer() {
-        super(2 * 1024 * 1024/* 2 MiB */, true);
+        super(3 * 1024 * 1024/* 3 MiB */, true);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/postprocessing/WebMMuxer.java
Patch:
@@ -13,7 +13,7 @@
 class WebMMuxer extends Postprocessing {
 
     WebMMuxer() {
-        super(2048 * 1024/* 2 MiB */, true);
+        super(5 * 1024 * 1024/* 5 MiB */, true);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.content.ContextCompat;
+import android.util.Log;
 import android.widget.Toast;
 
 import org.schabi.newpipe.R;
@@ -81,6 +82,7 @@ public static <T> T readFromFile(File file) {
             objectInputStream = new ObjectInputStream(new FileInputStream(file));
             object = (T) objectInputStream.readObject();
         } catch (Exception e) {
+            Log.e("Utility", "Failed to deserialize the object", e);
             object = null;
         }
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -55,7 +55,7 @@ public void onGlobalLayout() {
     private void updateFragments() {
         MissionsFragment fragment = new MissionsFragment();
 
-        getFragmentManager().beginTransaction()
+        getSupportFragmentManager().beginTransaction()
                 .replace(R.id.frame, fragment, MISSIONS_FRAGMENT_TAG)
                 .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
                 .commit();

File: app/src/main/java/org/schabi/newpipe/local/feed/FeedFragment.java
Patch:
@@ -21,8 +21,8 @@
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.fragments.list.BaseListFragment;
-import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.local.subscription.SubscriptionService;
+import org.schabi.newpipe.report.UserAction;
 
 import java.util.Collections;
 import java.util.HashSet;
@@ -262,7 +262,7 @@ public void onComplete() {
      * If chosen feed already displayed, then we request another feed from another
      * subscription, until the subscription table runs out of new items.
      * <p>
-     * This Observer is self-contained and will dispose itself when complete. However, this
+     * This Observer is self-contained and will close itself when complete. However, this
      * does not obey the fragment lifecycle and may continue running in the background
      * until it is complete. This is done due to RxJava2 no longer propagate errors once
      * an observer is unsubscribed while the thread process is still running.

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -158,7 +158,7 @@ private MediaSourceManager(@NonNull final PlaybackListener listener,
      * Dispose the manager and releases all message buses and loaders.
      * */
     public void dispose() {
-        if (DEBUG) Log.d(TAG, "dispose() called.");
+        if (DEBUG) Log.d(TAG, "close() called.");
 
         debouncedSignal.onComplete();
         debouncedLoader.dispose();

File: app/src/main/java/org/schabi/newpipe/streams/Mp4FromDashWriter.java
Patch:
@@ -120,7 +120,7 @@ public void close() throws IOException {
         parsed = true;
 
         for (SharpStream src : sourceTracks) {
-            src.dispose();
+            src.close();
         }
 
         tracks = null;

File: app/src/main/java/org/schabi/newpipe/streams/WebMWriter.java
Patch:
@@ -107,7 +107,7 @@ public void close() {
         parsed = true;
 
         for (SharpStream src : sourceTracks) {
-            src.dispose();
+            src.close();
         }
 
         sourceTracks = null;

File: app/src/main/java/us/shandian/giga/get/FinishedMission.java
Patch:
@@ -1,16 +1,16 @@
 package us.shandian.giga.get;
 
+import android.support.annotation.NonNull;
+
 public class FinishedMission extends  Mission {
 
     public FinishedMission() {
     }
 
-    public FinishedMission(DownloadMission mission) {
+    public FinishedMission(@NonNull DownloadMission mission) {
         source = mission.source;
         length = mission.length;// ¿or mission.done?
         timestamp = mission.timestamp;
-        name = mission.name;
-        location = mission.location;
         kind = mission.kind;
     }
 }

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -17,7 +17,9 @@ public enum UserAction {
     REQUESTED_KIOSK("requested kiosk"),
     REQUESTED_COMMENTS("requested comments"),
     DELETE_FROM_HISTORY("delete from history"),
-    PLAY_STREAM("Play stream");
+    PLAY_STREAM("Play stream"),
+    DOWNLOAD_POSTPROCESSING("download post-processing"),
+    DOWNLOAD_FAILED("download failed");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -38,7 +38,7 @@ public long getSizeInBytes() {
     public static AudioStream getAudioStreamFor(@NonNull List<AudioStream> audioStreams, @NonNull VideoStream videoStream) {
         switch (videoStream.getFormat()) {
             case WEBM:
-            case MPEG_4:
+            case MPEG_4:// ¿is mpeg-4 DASH?
                 break;
             default:
                 return null;

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -164,9 +164,6 @@ public void run() {
             }
         }
 
-        // hide marquee in the progress bar
-        mMission.done++;
-
         mMission.start();
     }
 

File: app/src/main/java/us/shandian/giga/postprocessing/io/SharpInputStream.java
Patch:
@@ -14,6 +14,7 @@
 
 /**
  * Wrapper for the classic {@link java.io.InputStream}
+ *
  * @author kapodamy
  */
 public class SharpInputStream extends InputStream {
@@ -49,7 +50,8 @@ public long skip(long l) throws IOException {
 
     @Override
     public int available() {
-        return base.available();
+        long res = base.available();
+        return res > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) res;
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -44,7 +44,6 @@
 import com.google.android.exoplayer2.source.BehindLiveWindowException;
 import com.google.android.exoplayer2.source.MediaSource;
 import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.TrackSelection;
 import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
 import com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
@@ -64,6 +63,7 @@
 import org.schabi.newpipe.player.helper.PlayerHelper;
 import org.schabi.newpipe.player.mediasource.FailedMediaSource;
 import org.schabi.newpipe.player.playback.BasePlayerMediaSession;
+import org.schabi.newpipe.player.playback.CustomTrackSelector;
 import org.schabi.newpipe.player.playback.MediaSourceManager;
 import org.schabi.newpipe.player.playback.PlaybackListener;
 import org.schabi.newpipe.player.playqueue.PlayQueue;
@@ -113,7 +113,7 @@ public abstract class BasePlayer implements
     final protected HistoryRecordManager recordManager;
 
     @NonNull
-    final protected DefaultTrackSelector trackSelector;
+    final protected CustomTrackSelector trackSelector;
     @NonNull
     final protected PlayerDataSource dataSource;
 
@@ -208,7 +208,7 @@ public void onReceive(Context context, Intent intent) {
         this.dataSource = new PlayerDataSource(context, userAgent, bandwidthMeter);
 
         final TrackSelection.Factory trackSelectionFactory = PlayerHelper.getQualitySelector(context);
-        this.trackSelector = new DefaultTrackSelector(trackSelectionFactory);
+        this.trackSelector = new CustomTrackSelector(trackSelectionFactory);
 
         this.loadControl = new LoadController(context);
         this.renderFactory = new DefaultRenderersFactory(context);

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -6,6 +6,7 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import org.jsoup.helper.StringUtil;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -76,6 +77,7 @@ public void updateFromItem(final InfoItem infoItem) {
         itemThumbnailView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                if(StringUtil.isBlank(item.getAuthorEndpoint())) return;
                 try {
                     final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
                     NavigationHelper.openChannelFragment(

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -6,6 +6,7 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import org.jsoup.helper.StringUtil;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -76,6 +77,7 @@ public void updateFromItem(final InfoItem infoItem) {
         itemThumbnailView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                if(StringUtil.isBlank(item.getAuthorEndpoint())) return;
                 try {
                     final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
                     NavigationHelper.openChannelFragment(

File: app/src/main/java/org/schabi/newpipe/info_list/holder/CommentsMiniInfoItemHolder.java
Patch:
@@ -6,6 +6,7 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import org.jsoup.helper.StringUtil;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.comments.CommentsInfoItem;
@@ -76,6 +77,7 @@ public void updateFromItem(final InfoItem infoItem) {
         itemThumbnailView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                if(StringUtil.isBlank(item.getAuthorEndpoint())) return;
                 try {
                     final AppCompatActivity activity = (AppCompatActivity) itemBuilder.getContext();
                     NavigationHelper.openChannelFragment(

File: app/src/main/java/org/schabi/newpipe/download/DownloadActivity.java
Patch:
@@ -47,7 +47,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public void onGlobalLayout() {
                 updateFragments();
-                getWindow().getDecorView().getViewTreeObserver().removeGlobalOnLayoutListener(this);
+                getWindow().getDecorView().getViewTreeObserver().removeOnGlobalLayoutListener(this);
             }
         });
     }

File: app/src/main/java/org/schabi/newpipe/player/helper/CacheFactory.java
Patch:
@@ -33,14 +33,14 @@
 
     public CacheFactory(@NonNull final Context context,
                         @NonNull final String userAgent,
-                        @NonNull final TransferListener<? super DataSource> transferListener) {
+                        @NonNull final TransferListener transferListener) {
         this(context, userAgent, transferListener, PlayerHelper.getPreferredCacheSize(context),
                 PlayerHelper.getPreferredFileSize(context));
     }
 
     private CacheFactory(@NonNull final Context context,
                          @NonNull final String userAgent,
-                         @NonNull final TransferListener<? super DataSource> transferListener,
+                         @NonNull final TransferListener transferListener,
                          final long maxCacheSize,
                          final long maxFileSize) {
         this.maxFileSize = maxFileSize;

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -111,6 +111,8 @@ public void onResume() {
     public void onDestroy() {
         super.onDestroy();
         tabsManager.unsetSavedTabsListener();
+        pagerAdapter = null;
+        viewPager.setAdapter(pagerAdapter);
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/test/java/org/schabi/newpipe/settings/tabs/TabTest.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.settings.tabs;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashSet;
@@ -8,6 +9,7 @@
 import static org.junit.Assert.assertTrue;
 
 public class TabTest {
+    @Ignore
     @Test
     public void checkIdDuplication() {
         final Set<Integer> usedIds = new HashSet<>();

File: app/src/main/java/org/schabi/newpipe/settings/tabs/TabsManager.java
Patch:
@@ -44,7 +44,7 @@ public void resetTabs() {
     }
 
     public List<Tab> getDefaultTabs() {
-        return TabsJsonHelper.FALLBACK_INITIAL_TABS_LIST;
+        return TabsJsonHelper.getDefaultTabs();
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -131,7 +131,7 @@ private void onAudioFocusLoss() {
     private void onAudioFocusLossCanDuck() {
         Log.d(TAG, "onAudioFocusLossCanDuck() called");
         // Set the volume to 1/10 on ducking
-        animateAudio(player.getVolume(), DUCK_AUDIO_TO);
+        player.setVolume(DUCK_AUDIO_TO);
     }
 
     private void animateAudio(final float from, final float to) {

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -626,6 +626,7 @@ public int getOverrideResolutionIndex(List<VideoStream> sortedVideos,
         @Override
         public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
             super.onLoadingComplete(imageUri, view, loadedImage);
+            if (playerImpl == null) return;
             // rebuild notification here since remote view does not release bitmaps,
             // causing memory leaks
             resetNotification();

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -626,6 +626,7 @@ public int getOverrideResolutionIndex(List<VideoStream> sortedVideos,
         @Override
         public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
             super.onLoadingComplete(imageUri, view, loadedImage);
+            if (playerImpl == null) return;
             // rebuild notification here since remote view does not release bitmaps,
             // causing memory leaks
             resetNotification();

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -131,7 +131,7 @@ private void onAudioFocusLoss() {
     private void onAudioFocusLossCanDuck() {
         Log.d(TAG, "onAudioFocusLossCanDuck() called");
         // Set the volume to 1/10 on ducking
-        animateAudio(player.getVolume(), DUCK_AUDIO_TO);
+        player.setVolume(DUCK_AUDIO_TO);
     }
 
     private void animateAudio(final float from, final float to) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -233,10 +233,10 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 openRssFeed();
                 break;
             case R.id.menu_item_openInBrowser:
-                openUrlInBrowser(url);
+                openUrlInBrowser(currentInfo.getOriginalUrl());
                 break;
             case R.id.menu_item_share:
-                shareUrl(name, url);
+                shareUrl(name, currentInfo.getOriginalUrl());
                 break;
             default:
                 return super.onOptionsItemSelected(item);

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -159,7 +159,7 @@ public void onBindViewHolder(@NonNull ViewHolder view, @SuppressLint("RecyclerVi
                 str = R.string.missions_header_pending;
             } else {
                 str = R.string.missions_header_finished;
-                mClear.setVisible(true);
+                if (mClear != null) mClear.setVisible(true);
             }
 
             ((ViewHolderHeader) view).header.setText(str);
@@ -437,7 +437,6 @@ private void showError(@NonNull DownloadMission mission) {
     public void clearFinishedDownloads() {
         mDownloadManager.forgetFinishedDownloads();
         applyChanges();
-        mClear.setVisible(false);
     }
 
     private boolean handlePopupItem(@NonNull ViewHolderItem h, @NonNull MenuItem option) {
@@ -507,7 +506,7 @@ public void applyChanges() {
         mIterator.end();
 
         checkEmptyMessageVisibility();
-        mClear.setVisible(mIterator.hasFinishedMissions());
+        if (mClear != null) mClear.setVisible(mIterator.hasFinishedMissions());
     }
 
     public void forceUpdate() {

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -36,7 +36,6 @@ public long getSizeInBytes() {
      * @return selected audio stream or null if a candidate was not found
      */
     public static AudioStream getAudioStreamFor(@NonNull List<AudioStream> audioStreams, @NonNull VideoStream videoStream) {
-        // TODO: check if m4v and m4a selected streams are DASH compliant
         switch (videoStream.getFormat()) {
             case WEBM:
             case MPEG_4:

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -156,7 +156,6 @@ public void run() {
 
                 if (retryCount++ > mMission.maxRetry) {
                     Log.e(TAG, "initializer failed", e);
-                    mMission.running = false;
                     mMission.notifyError(e);
                     return;
                 }

File: app/src/main/java/us/shandian/giga/postprocessing/Mp4DashMuxer.java
Patch:
@@ -13,9 +13,7 @@
 class Mp4DashMuxer extends Postprocessing {
 
     Mp4DashMuxer(DownloadMission mission) {
-        super(mission);
-        recommendedReserve = 15360 * 1024;// 15 MiB
-        worksOnSameFile = true;
+        super(mission, 15360 * 1024/* 15 MiB */, true);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/postprocessing/WebMMuxer.java
Patch:
@@ -15,9 +15,7 @@
 class WebMMuxer extends Postprocessing {
 
     WebMMuxer(DownloadMission mission) {
-        super(mission);
-        recommendedReserve = 2048 * 1024;// 2 MiB
-        worksOnSameFile = true;
+        super(mission, 2048 * 1024/* 2 MiB */, true);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java
Patch:
@@ -36,7 +36,6 @@ public long getSizeInBytes() {
      * @return selected audio stream or null if a candidate was not found
      */
     public static AudioStream getAudioStreamFor(@NonNull List<AudioStream> audioStreams, @NonNull VideoStream videoStream) {
-        // TODO: check if m4v and m4a selected streams are DASH compliant
         switch (videoStream.getFormat()) {
             case WEBM:
             case MPEG_4:

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -156,7 +156,6 @@ public void run() {
 
                 if (retryCount++ > mMission.maxRetry) {
                     Log.e(TAG, "initializer failed", e);
-                    mMission.running = false;
                     mMission.notifyError(e);
                     return;
                 }

File: app/src/main/java/us/shandian/giga/postprocessing/Mp4DashMuxer.java
Patch:
@@ -13,9 +13,7 @@
 class Mp4DashMuxer extends Postprocessing {
 
     Mp4DashMuxer(DownloadMission mission) {
-        super(mission);
-        recommendedReserve = 15360 * 1024;// 15 MiB
-        worksOnSameFile = true;
+        super(mission, 15360 * 1024/* 15 MiB */, true);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/postprocessing/WebMMuxer.java
Patch:
@@ -15,9 +15,7 @@
 class WebMMuxer extends Postprocessing {
 
     WebMMuxer(DownloadMission mission) {
-        super(mission);
-        recommendedReserve = 2048 * 1024;// 2 MiB
-        worksOnSameFile = true;
+        super(mission, 2048 * 1024/* 2 MiB */, true);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -407,7 +407,8 @@ public void start() {
 
         // ensure that the previous state is completely paused.
         joinForThread(init);
-        for (Thread thread : threads) joinForThread(thread);
+        if (threads != null)
+            for (Thread thread : threads) joinForThread(thread);
 
         enqueued = false;
         running = true;
@@ -420,7 +421,7 @@ public void start() {
 
         init = null;
 
-        if (threads.length < 1) {
+        if (threads == null || threads.length < 1) {
             threads = new Thread[currentThreadCount];
         }
 

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -447,6 +447,7 @@ private boolean handlePopupItem(@NonNull ViewHolderItem h, @NonNull MenuItem opt
         if (mission != null) {
             switch (id) {
                 case R.id.start:
+                    h.status.setText(UNDEFINED_SPEED);
                     h.state = -1;
                     h.size.setText(Utility.formatBytes(mission.getLength()));
                     mDownloadManager.resumeMission(mission);

File: app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java
Patch:
@@ -198,7 +198,7 @@ protected void onRestoreInstanceState(@NonNull Bundle savedState) {
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String s) {
         SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(getContext());
         Boolean autoplay = pref.getBoolean(getString(R.string.auto_queue_key), false);
-        aSwitch.setChecked(autoplay);
+        if(null != aSwitch) aSwitch.setChecked(autoplay);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java
Patch:
@@ -111,15 +111,15 @@ protected Single<RelatedStreamInfo> loadResult(boolean forceLoad) {
     @Override
     public void showLoading() {
         super.showLoading();
-        headerRootLayout.setVisibility(View.INVISIBLE);
+        if(null != headerRootLayout) headerRootLayout.setVisibility(View.INVISIBLE);
     }
 
     @Override
     public void handleResult(@NonNull RelatedStreamInfo result) {
 
         super.handleResult(result);
 
-        headerRootLayout.setVisibility(View.VISIBLE);
+        if(null != headerRootLayout) headerRootLayout.setVisibility(View.VISIBLE);
         AnimationUtils.slideUp(getView(),120, 96, 0.06f);
 
         if (!result.getErrors().isEmpty()) {

File: app/src/main/java/android/support/design/widget/FlingBehavior.java
Patch:
@@ -30,6 +30,9 @@ public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, AppBarLayout
                     // We're scrolling down
                 } else {
                     // We're scrolling up
+                    if (mOffsetAnimator != null && mOffsetAnimator.isRunning()) {
+                        mOffsetAnimator.cancel();
+                    }
                     min = -child.getUpNestedPreScrollRange();
                     max = 0;
                     consumed[1] = scroll(coordinatorLayout, child, dy, min, max);

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -235,7 +235,7 @@ public void onDestroy() {
 
         if (icDownloadDone != null) icDownloadDone.recycle();
         if (icDownloadFailed != null) icDownloadFailed.recycle();
-        icLauncher.recycle();
+        if (icLauncher != null) icLauncher.recycle();
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/postprocessing/Postprocessing.java
Patch:
@@ -91,7 +91,7 @@ public void run() throws IOException {
             out = new CircularFile(file, 0, this::progressReport, checker);
 
             mission.done = 0;
-            mission.length = mission.getLength();
+            mission.length = file.length();
 
             int result = process(out, sources);
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -1134,6 +1134,7 @@ public boolean isLive() {
     }
 
     public boolean isPlaying() {
+        if (simpleExoPlayer == null) return false;
         final int state = simpleExoPlayer.getPlaybackState();
         return (state == Player.STATE_READY || state == Player.STATE_BUFFERING)
                 && simpleExoPlayer.getPlayWhenReady();

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -416,7 +416,8 @@ private int getSubtitleIndexBy(List<SubtitlesStream> streams) {
         // fallback
         // 1st loop match country & language
         // 2nd loop match language only
-        String lang = loc.getLanguage().substring(0, loc.getLanguage().indexOf("-"));
+        int index = loc.getLanguage().indexOf("-");
+        String lang = index > 0 ? loc.getLanguage().substring(0, index) : loc.getLanguage();
 
         for (int j = 0; j < 2; j++) {
             for (int i = 0; i < streams.size(); i++) {

File: app/src/main/java/us/shandian/giga/service/DownloadManager.java
Patch:
@@ -277,6 +277,7 @@ public void deleteMission(Mission mission) {
                 mDownloadDataSource.deleteMission(mission);
             }
 
+            mHandler.sendEmptyMessage(DownloadManagerService.MESSAGE_DELETED);
             mission.delete();
         }
     }
@@ -427,8 +428,8 @@ boolean runAnotherMission() {
             if (!canDownloadInCurrentNetwork()) return false;
 
             for (DownloadMission mission : mMissionsPending) {
-                if (!mission.running && mission.errCode != DownloadMission.ERROR_POSTPROCESSING_FAILED && mission.enqueued) {
-                    resumeMission(mMissionsPending.get(i));
+                if (!mission.running && mission.errCode == DownloadMission.ERROR_NOTHING && mission.enqueued) {
+                    resumeMission(mission);
                     return true;
                 }
             }

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -124,7 +124,7 @@ public class DownloadMission extends Mission {
     @SuppressWarnings("UseSparseArrays")// LongSparseArray is not serializable
     private final HashMap<Long, Boolean> blockState = new HashMap<>();
     final List<Long> threadBlockPositions = new ArrayList<>();
-    final List<Integer> threadBytePositions = new ArrayList<>();
+    final List<Long> threadBytePositions = new ArrayList<>();
 
     private transient boolean deleted;
     int currentThreadCount;
@@ -216,7 +216,7 @@ long getBlockPosition(int threadId) {
      * @param threadId the identifier of the thread
      * @param position the relative position in bytes or zero
      */
-    void setThreadBytePosition(int threadId, int position) {
+    void setThreadBytePosition(int threadId, long position) {
         threadBytePositions.set(threadId, position);
     }
 
@@ -226,7 +226,7 @@ void setThreadBytePosition(int threadId, int position) {
      * @param threadId the identifier of the thread
      * @return the relative position in bytes or zero
      */
-    int getBlockBytePosition(int threadId) {
+    long getBlockBytePosition(int threadId) {
         return threadBytePositions.get(threadId);
     }
 

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -89,7 +89,7 @@ public void run() {
                 end = mMission.length - 1;
             }
 
-            int total = 0;
+            long total = 0;
 
             try {
                 HttpURLConnection conn = mMission.openConnection(mId, start, end);

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -234,10 +234,9 @@ public synchronized void append(@NonNull final List<PlayQueueItem> items) {
             Collections.shuffle(itemList);
         }
         if (!streams.isEmpty() && streams.get(streams.size() - 1).isAutoQueued() && !itemList.get(0).isAutoQueued()) {
-            streams.addAll(streams.size() - 1, itemList);
-        } else {
-            streams.addAll(itemList);
+            streams.remove(streams.size() - 1);
         }
+        streams.addAll(itemList);
 
         broadcast(new AppendEvent(itemList.size()));
     }

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -1106,6 +1106,7 @@ public boolean isLive() {
     }
 
     public boolean isPlaying() {
+        if (simpleExoPlayer == null) return false;
         final int state = simpleExoPlayer.getPlaybackState();
         return (state == Player.STATE_READY || state == Player.STATE_BUFFERING)
                 && simpleExoPlayer.getPlayWhenReady();

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -746,7 +746,7 @@ private void setupActionBar(final StreamInfo info) {
         sortedVideoStreams = ListHelper.getSortedStreamVideosList(activity, info.getVideoStreams(), info.getVideoOnlyStreams(), false);
         selectedVideoStreamIndex = ListHelper.getDefaultResolutionIndex(activity, sortedVideoStreams);
 
-        final StreamItemAdapter<VideoStream> streamsAdapter = new StreamItemAdapter<>(activity, new StreamSizeWrapper<>(sortedVideoStreams, activity), isExternalPlayerEnabled);
+        final StreamItemAdapter<VideoStream, Stream> streamsAdapter = new StreamItemAdapter<>(activity, new StreamSizeWrapper<>(sortedVideoStreams, activity), isExternalPlayerEnabled);
         spinnerToolbar.setAdapter(streamsAdapter);
         spinnerToolbar.setSelection(selectedVideoStreamIndex);
         spinnerToolbar.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
@@ -1335,4 +1335,4 @@ private void setRelatedStreamsVisibility(int visibility) {
             relatedStreamRootLayout.setVisibility(visibility);
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/org/schabi/newpipe/streams/Mp4DashReader.java
Patch:
@@ -257,7 +257,7 @@ private String boxName(Box ref) {
 
     private String boxName(int type) {
         try {
-            return new String(ByteBuffer.allocate(4).putInt(type).array(), "US-ASCII");
+            return new String(ByteBuffer.allocate(4).putInt(type).array(), "UTF-8");
         } catch (UnsupportedEncodingException e) {
             return "0x" + Integer.toHexString(type);
         }

File: app/src/main/java/us/shandian/giga/get/DownloadInitializer.java
Patch:
@@ -74,7 +74,7 @@ public void run() {
                             }
                         } else {
                             // if one thread is solicited don't calculate blocks, is useless
-                            mMission.blocks = 0;
+                            mMission.blocks = 1;
                             mMission.fallback = true;
                             mMission.unknownLength = false;
                         }

File: app/src/main/java/us/shandian/giga/postprocessing/Mp4DashMuxer.java
Patch:
@@ -14,7 +14,7 @@ class Mp4DashMuxer extends Postprocessing {
 
     Mp4DashMuxer(DownloadMission mission) {
         super(mission);
-        recommendedReserve = 2048 * 1024;// 2 MiB
+        recommendedReserve = 15360 * 1024;// 15 MiB
         worksOnSameFile = true;
     }
 

File: app/src/main/java/us/shandian/giga/postprocessing/Postprocessing.java
Patch:
@@ -91,6 +91,8 @@ public void run() throws IOException {
             out = new CircularFile(file, 0, this::progressReport, checker);
 
             mission.done = 0;
+            mission.length = mission.getLength();
+
             int result = process(out, sources);
 
             if (result == OK_RESULT) {

File: app/src/main/java/us/shandian/giga/postprocessing/WebMMuxer.java
Patch:
@@ -16,7 +16,7 @@ class WebMMuxer extends Postprocessing {
 
     WebMMuxer(DownloadMission mission) {
         super(mission);
-        recommendedReserve = (1024 + 512) * 1024;// 1.50 MiB
+        recommendedReserve = 2048 * 1024;// 2 MiB
         worksOnSameFile = true;
     }
 

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -33,7 +33,7 @@ public class MissionsFragment extends Fragment {
     private SharedPreferences mPrefs;
     private boolean mLinear;
     private MenuItem mSwitch;
-    private MenuItem mClear;
+    private MenuItem mClear = null;
 
     private RecyclerView mList;
     private View mEmpty;
@@ -152,6 +152,7 @@ public void onDestroy() {
     public void onPrepareOptionsMenu(Menu menu) {
         mSwitch = menu.findItem(R.id.switch_mode);
         mClear = menu.findItem(R.id.clear_list);
+        if (mAdapter != null) mAdapter.setClearButton(mClear);
         super.onPrepareOptionsMenu(menu);
     }
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -376,7 +376,7 @@ private void setRadioButtonsState(boolean enabled) {
     }
 
     private int getSubtitleIndexBy(List<SubtitlesStream> streams) {
-        Localization loc = NewPipe.getLocalization();
+        Localization loc = NewPipe.getPreferredLocalization();
         for (int j = 0; j < 2; j++) {
             for (int i = 0; i < streams.size(); i++) {
                 Locale streamLocale = streams.get(i).getLocale();

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -577,7 +577,8 @@ class ViewHolderItem extends RecyclerView.ViewHolder {
             checksum = menu.findItem(R.id.checksum);
 
             itemView.setOnClickListener((v) -> {
-                  if(h.mission.finished) viewWithFileProvider(h);
+                  if(((DownloadMission)item.mission).isFinished())
+                      viewWithFileProvider(item.mission.getDownloadedFile());
             });
 
             //h.itemView.setOnClickListener(v -> showDetail(h));

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -99,6 +99,7 @@ public void onClick(View v) {
 		h.itemView.setOnClickListener(new View.OnClickListener() {
             @Override
 			public void onClick(View v) {
+                if(h.mission.finished) viewFile(h);
 			}
 		});
 

File: app/src/main/java/org/schabi/newpipe/player/resolver/VideoPlaybackResolver.java
Patch:
@@ -10,10 +10,10 @@
 import com.google.android.exoplayer2.source.MergingMediaSource;
 
 import org.schabi.newpipe.extractor.MediaFormat;
-import org.schabi.newpipe.extractor.Subtitles;
 import org.schabi.newpipe.extractor.stream.AudioStream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.VideoStream;
+import org.schabi.newpipe.extractor.stream.SubtitlesStream;
 import org.schabi.newpipe.player.helper.PlayerDataSource;
 import org.schabi.newpipe.player.helper.PlayerHelper;
 import org.schabi.newpipe.util.ListHelper;
@@ -93,8 +93,8 @@ public MediaSource resolve(@NonNull StreamInfo info) {
         // Below are auxiliary media sources
 
         // Create subtitle sources
-        for (final Subtitles subtitle : info.getSubtitles()) {
-            final String mimeType = PlayerHelper.mimeTypesOf(subtitle.getFileType());
+        for (final SubtitlesStream subtitle : info.getSubtitles()) {
+            final String mimeType = PlayerHelper.subtitleMimeTypesOf(subtitle.getFormat());
             if (mimeType == null) continue;
 
             final Format textFormat = Format.createTextSampleFormat(null, mimeType,

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -110,7 +110,8 @@ private static String computeDefaultResolution(Context context, int key, int val
                 : context.getString(R.string.best_resolution_key);
 
         String maxResolution = getResolutionLimit(context);
-        if (maxResolution != null && compareVideoStreamResolution(maxResolution, resolution) < 1){
+        if (maxResolution != null && (resolution.equals(context.getString(R.string.best_resolution_key))
+                || compareVideoStreamResolution(maxResolution, resolution) < 1)) {
             resolution = maxResolution;
         }
         return resolution;

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -110,7 +110,8 @@ private static String computeDefaultResolution(Context context, int key, int val
                 : context.getString(R.string.best_resolution_key);
 
         String maxResolution = getResolutionLimit(context);
-        if (maxResolution != null && compareVideoStreamResolution(maxResolution, resolution) < 1){
+        if (maxResolution != null && (resolution.equals(context.getString(R.string.best_resolution_key))
+                || compareVideoStreamResolution(maxResolution, resolution) < 1)) {
             resolution = maxResolution;
         }
         return resolution;

File: app/src/main/java/org/schabi/newpipe/fragments/list/videos/RelatedVideosFragment.java
Patch:
@@ -37,8 +37,6 @@ public class RelatedVideosFragment extends BaseListInfoFragment<RelatedStreamInf
     private View headerRootLayout;
     private Switch aSwitch;
 
-
-
     private boolean mIsVisibleToUser = false;
 
     public static RelatedVideosFragment getInstance(StreamInfo info) {

File: app/src/main/java/org/schabi/newpipe/BaseFragment.java
Patch:
@@ -12,8 +12,6 @@
 import com.nostra13.universalimageloader.core.ImageLoader;
 import com.squareup.leakcanary.RefWatcher;
 
-import org.schabi.newpipe.report.UserAction;
-
 import icepick.Icepick;
 import icepick.State;
 

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -23,7 +23,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
-import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
@@ -66,8 +65,6 @@
 import org.schabi.newpipe.util.StateSaver;
 import org.schabi.newpipe.util.ThemeHelper;
 
-import static org.schabi.newpipe.extractor.InfoItem.InfoType.PLAYLIST;
-
 public class MainActivity extends AppCompatActivity {
     private static final String TAG = "MainActivity";
     public static final boolean DEBUG = !BuildConfig.BUILD_TYPE.equals("release");

File: app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java
Patch:
@@ -4,7 +4,6 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.AsyncTask;
-import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v7.app.AlertDialog;
 import android.webkit.WebView;

File: app/src/main/java/org/schabi/newpipe/database/history/dao/SearchHistoryDAO.java
Patch:
@@ -4,7 +4,6 @@
 import android.arch.persistence.room.Query;
 import android.support.annotation.Nullable;
 
-import org.schabi.newpipe.database.BasicDAO;
 import org.schabi.newpipe.database.history.model.SearchHistoryEntry;
 
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/database/history/dao/StreamHistoryDAO.java
Patch:
@@ -5,7 +5,6 @@
 import android.arch.persistence.room.Query;
 import android.support.annotation.Nullable;
 
-import org.schabi.newpipe.database.BasicDAO;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntry;
 import org.schabi.newpipe.database.stream.StreamStatisticsEntry;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntity;

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistDAO.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.arch.persistence.room.Dao;
 import android.arch.persistence.room.Query;
-import android.arch.persistence.room.Transaction;
 
 import org.schabi.newpipe.database.BasicDAO;
 import org.schabi.newpipe.database.playlist.model.PlaylistEntity;
@@ -12,7 +11,6 @@
 import io.reactivex.Flowable;
 
 import static org.schabi.newpipe.database.playlist.model.PlaylistEntity.PLAYLIST_ID;
-import static org.schabi.newpipe.database.playlist.model.PlaylistEntity.PLAYLIST_NAME;
 import static org.schabi.newpipe.database.playlist.model.PlaylistEntity.PLAYLIST_TABLE;
 
 @Dao

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -8,7 +8,6 @@
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
 import org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity;
-import org.schabi.newpipe.database.stream.model.StreamEntity;
 
 import java.util.List;
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistEntity.java
Patch:
@@ -5,8 +5,6 @@
 import android.arch.persistence.room.Index;
 import android.arch.persistence.room.PrimaryKey;
 
-import java.util.Date;
-
 import static org.schabi.newpipe.database.playlist.model.PlaylistEntity.PLAYLIST_NAME;
 import static org.schabi.newpipe.database.playlist.model.PlaylistEntity.PLAYLIST_TABLE;
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java
Patch:
@@ -6,7 +6,6 @@
 import android.arch.persistence.room.Index;
 import android.arch.persistence.room.PrimaryKey;
 
-import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistLocalItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfo;
 import org.schabi.newpipe.util.Constants;

File: app/src/main/java/org/schabi/newpipe/database/stream/dao/StreamDAO.java
Patch:
@@ -10,7 +10,6 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity;
 import org.schabi.newpipe.database.stream.model.StreamEntity;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
-import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -23,7 +22,6 @@
 import static org.schabi.newpipe.database.stream.model.StreamEntity.STREAM_TABLE;
 import static org.schabi.newpipe.database.stream.model.StreamEntity.STREAM_URL;
 import static org.schabi.newpipe.database.history.model.StreamHistoryEntity.STREAM_HISTORY_TABLE;
-import static org.schabi.newpipe.database.stream.model.StreamStateEntity.STREAM_STATE_TABLE;
 
 @Dao
 public abstract class StreamDAO implements BasicDAO<StreamEntity> {

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -32,7 +32,6 @@
 
 import icepick.State;
 import io.reactivex.android.schedulers.AndroidSchedulers;
-import io.reactivex.functions.Consumer;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 

File: app/src/main/java/org/schabi/newpipe/fragments/BlankFragment.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -5,7 +5,6 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v7.app.ActionBar;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -19,8 +18,6 @@
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.kiosk.KioskInfo;
 import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;
-import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
-import org.schabi.newpipe.extractor.linkhandler.LinkHandlerFactory;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -20,7 +20,6 @@
 
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
-import org.schabi.newpipe.App;
 import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
@@ -30,7 +29,6 @@
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfo;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemDialog.java
Patch:
@@ -5,7 +5,6 @@
 import android.content.DialogInterface;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.TextView;
 

File: app/src/main/java/org/schabi/newpipe/local/feed/FeedFragment.java
Patch:
@@ -36,8 +36,6 @@
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.CompositeDisposable;
 import io.reactivex.disposables.Disposable;
-import io.reactivex.functions.Consumer;
-import io.reactivex.functions.Predicate;
 
 public class FeedFragment extends BaseListFragment<List<SubscriptionEntity>, Void> {
 

File: app/src/main/java/org/schabi/newpipe/local/history/HistoryEntryAdapter.java
Patch:
@@ -1,7 +1,6 @@
 package org.schabi.newpipe.local.history;
 
 import android.content.Context;
-import android.content.res.Resources;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v7.widget.RecyclerView;

File: app/src/main/java/org/schabi/newpipe/local/history/HistoryRecordManager.java
Patch:
@@ -45,7 +45,6 @@
 
 import io.reactivex.Flowable;
 import io.reactivex.Maybe;
-import io.reactivex.Scheduler;
 import io.reactivex.Single;
 import io.reactivex.schedulers.Schedulers;
 

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -21,7 +21,6 @@
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.stream.StreamStatisticsEntry;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.fragments.list.BaseListFragment;
 import org.schabi.newpipe.local.BaseLocalListFragment;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.player.playqueue.PlayQueue;

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionFragment.java
Patch:
@@ -16,7 +16,6 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.content.LocalBroadcastManager;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
@@ -40,7 +39,6 @@
 import org.schabi.newpipe.extractor.subscription.SubscriptionExtractor;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.info_list.InfoListAdapter;
-import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.local.subscription.services.SubscriptionsExportService;
 import org.schabi.newpipe.local.subscription.services.SubscriptionsImportService;

File: app/src/main/java/org/schabi/newpipe/player/playback/CustomTrackSelector.java
Patch:
@@ -4,15 +4,13 @@
 import android.text.TextUtils;
 
 import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.source.TrackGroup;
 import com.google.android.exoplayer2.source.TrackGroupArray;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.FixedTrackSelection;
 import com.google.android.exoplayer2.trackselection.TrackSelection;
 import com.google.android.exoplayer2.util.Assertions;
-import com.google.android.exoplayer2.util.Util;
 
 /**
  * This class allows irregular text language labels for use when selecting text captions and

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -8,8 +8,6 @@
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 
-import java.util.List;
-
 public interface PlaybackListener {
 
     /**

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItemBuilder.java
Patch:
@@ -5,10 +5,8 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import com.nostra13.universalimageloader.core.DisplayImageOptions;
 import com.nostra13.universalimageloader.core.ImageLoader;
 
-import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueItemHolder.java
Patch:
@@ -6,8 +6,6 @@
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.extractor.InfoItem;
-import org.schabi.newpipe.info_list.holder.InfoItemHolder;
 
 /**
  * Created by Christian Schabesberger on 01.08.16.

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSender.java
Patch:
@@ -5,7 +5,6 @@
 
 import org.acra.collector.CrashReportData;
 import org.acra.sender.ReportSender;
-import org.acra.sender.ReportSenderException;
 import org.schabi.newpipe.R;
 
 /*

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -3,7 +3,6 @@
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.graphics.Color;
 import android.net.Uri;
@@ -46,7 +45,6 @@
 import java.util.List;
 import java.util.TimeZone;
 import java.util.Vector;
-import java.util.concurrent.atomic.AtomicBoolean;
 
 /*
  * Created by Christian Schabesberger on 24.10.15.

File: app/src/main/java/org/schabi/newpipe/settings/AppearanceSettingsFragment.java
Patch:
@@ -6,7 +6,6 @@
 import android.provider.Settings;
 import android.support.annotation.Nullable;
 import android.support.v7.preference.Preference;
-import android.util.Log;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.util.Constants;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -26,7 +26,6 @@
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
-import org.schabi.newpipe.extractor.search.SearchExtractor;
 import org.schabi.newpipe.extractor.stream.AudioStream;
 import org.schabi.newpipe.extractor.stream.Stream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;

File: app/src/main/java/org/schabi/newpipe/util/StateSaver.java
Patch:
@@ -21,7 +21,6 @@
 
 
 import android.content.Context;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -11,9 +11,7 @@
 
 import org.schabi.newpipe.R;
 
-import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
-import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
@@ -198,7 +196,7 @@ public static String checksum(String path, String algorithm) {
             while ((len = i.read(buf)) != -1) {
                 md.update(buf, 0, len);
             }
-        } catch (IOException e) {
+        } catch (IOException ignored) {
 
         }
 

File: app/src/main/java/org/schabi/newpipe/BaseFragment.java
Patch:
@@ -19,7 +19,7 @@
 
 public abstract class BaseFragment extends Fragment {
     protected final String TAG = getClass().getSimpleName() + "@" + Integer.toHexString(hashCode());
-    protected boolean DEBUG = MainActivity.DEBUG;
+    protected final boolean DEBUG = MainActivity.DEBUG;
 
     protected AppCompatActivity activity;
     public static final ImageLoader imageLoader = ImageLoader.getInstance();

File: app/src/main/java/org/schabi/newpipe/Downloader.java
Patch:
@@ -43,7 +43,7 @@ public class Downloader implements org.schabi.newpipe.extractor.Downloader {
 
     private static Downloader instance;
     private String mCookies;
-    private OkHttpClient client;
+    private final OkHttpClient client;
 
     private Downloader(OkHttpClient.Builder builder) {
         this.client = builder

File: app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java
Patch:
@@ -85,7 +85,7 @@ public void onReceiveValue(Boolean aBoolean) {}
     }
 
     private class ReCaptchaWebViewClient extends WebViewClient {
-        private Activity context;
+        private final Activity context;
         private String mCookies;
 
         ReCaptchaWebViewClient(Activity ctx) {

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -86,7 +86,7 @@ public class RouterActivity extends AppCompatActivity {
     protected int selectedPreviously = -1;
 
     protected String currentUrl;
-    protected CompositeDisposable disposables = new CompositeDisposable();
+    protected final CompositeDisposable disposables = new CompositeDisposable();
 
     private boolean selectionIsDownload = false;
 

File: app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java
Patch:
@@ -17,7 +17,7 @@
 
 public class LicenseFragmentHelper extends AsyncTask<Object, Void, Integer> {
 
-    WeakReference<Activity> weakReference;
+    final WeakReference<Activity> weakReference;
     private License license;
 
     public LicenseFragmentHelper(@Nullable Activity activity) {

File: app/src/main/java/org/schabi/newpipe/database/BasicDAO.java
Patch:
@@ -30,7 +30,7 @@ public interface BasicDAO<Entity> {
 
     /* Deletes */
     @Delete
-    int delete(final Entity entity);
+    void delete(final Entity entity);
 
     @Delete
     int delete(final Collection<Entity> entities);
@@ -42,5 +42,5 @@ public interface BasicDAO<Entity> {
     int update(final Entity entity);
 
     @Update
-    int update(final Collection<Entity> entities);
+    void update(final Collection<Entity> entities);
 }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -55,7 +55,7 @@ public class DownloadDialog extends DialogFragment implements RadioGroup.OnCheck
     private StreamItemAdapter<AudioStream> audioStreamsAdapter;
     private StreamItemAdapter<VideoStream> videoStreamsAdapter;
 
-    private CompositeDisposable disposables = new CompositeDisposable();
+    private final CompositeDisposable disposables = new CompositeDisposable();
 
     private EditText nameEditText;
     private Spinner streamsSpinner;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/StackItem.java
Patch:
@@ -3,9 +3,9 @@
 import java.io.Serializable;
 
 class StackItem implements Serializable {
-    private int serviceId;
+    private final int serviceId;
     private String title;
-    private String url;
+    private final String url;
 
     StackItem(int serviceId, String url, String title) {
         this.serviceId = serviceId;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -760,7 +760,7 @@ public void onNothingSelected(AdapterView<?> parent) {
      * Stack that contains the "navigation history".<br>
      * The peek is the current video.
      */
-    protected LinkedList<StackItem> stack = new LinkedList<>();
+    protected final LinkedList<StackItem> stack = new LinkedList<>();
 
     public void clearHistory() {
         stack.clear();

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -68,7 +68,7 @@
 
 public class ChannelFragment extends BaseListInfoFragment<ChannelInfo> {
 
-    private CompositeDisposable disposables = new CompositeDisposable();
+    private final CompositeDisposable disposables = new CompositeDisposable();
     private Disposable subscribeButtonMonitor;
     private SubscriptionService subscriptionService;
 
@@ -103,7 +103,6 @@ public static ChannelFragment getInstance(int serviceId, String url, String name
     @Override
     public void setUserVisibleHint(boolean isVisibleToUser) {
         super.setUserVisibleHint(isVisibleToUser);
-        boolean mIsVisibleToUser = isVisibleToUser;
         if(activity != null
                 && useAsFrontPage
                 && isVisibleToUser) {

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -123,10 +123,10 @@ public class SearchFragment
     private String contentCountry;
     private boolean isSuggestionsEnabled = true;
 
-    private PublishSubject<String> suggestionPublisher = PublishSubject.create();
+    private final PublishSubject<String> suggestionPublisher = PublishSubject.create();
     private Disposable searchDisposable;
     private Disposable suggestionDisposable;
-    private CompositeDisposable disposables = new CompositeDisposable();
+    private final CompositeDisposable disposables = new CompositeDisposable();
 
     private SuggestionListAdapter suggestionListAdapter;
     private HistoryRecordManager historyRecordManager;

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -45,7 +45,7 @@ public class InfoItemBuilder {
     private static final String TAG = InfoItemBuilder.class.toString();
 
     private final Context context;
-    private ImageLoader imageLoader = ImageLoader.getInstance();
+    private final ImageLoader imageLoader = ImageLoader.getInstance();
 
     private OnClickGesture<StreamInfoItem> onStreamSelectedListener;
     private OnClickGesture<ChannelInfoItem> onChannelSelectedListener;

File: app/src/main/java/org/schabi/newpipe/local/LocalItemBuilder.java
Patch:
@@ -33,7 +33,7 @@ public class LocalItemBuilder {
     private static final String TAG = LocalItemBuilder.class.toString();
 
     private final Context context;
-    private ImageLoader imageLoader = ImageLoader.getInstance();
+    private final ImageLoader imageLoader = ImageLoader.getInstance();
 
     private OnClickGesture<LocalItem> onSelectedListener;
 

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -57,7 +57,7 @@ public class StatisticsPlaylistFragment
     /* Used for independent events */
     private Subscription databaseSubscription;
     private HistoryRecordManager recordManager;
-    private CompositeDisposable disposables = new CompositeDisposable();
+    private final CompositeDisposable disposables = new CompositeDisposable();
 
     private enum StatisticSortMode {
         LAST_PLAYED,

File: app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionService.java
Patch:
@@ -55,10 +55,10 @@ public static SubscriptionService getInstance(@NonNull Context context) {
     private static final int SUBSCRIPTION_DEBOUNCE_INTERVAL = 500;
     private static final int SUBSCRIPTION_THREAD_POOL_SIZE = 4;
 
-    private AppDatabase db;
-    private Flowable<List<SubscriptionEntity>> subscription;
+    private final AppDatabase db;
+    private final Flowable<List<SubscriptionEntity>> subscription;
 
-    private Scheduler subscriptionScheduler;
+    private final Scheduler subscriptionScheduler;
 
     private SubscriptionService(Context context) {
         db = NewPipeDatabase.getInstance(context.getApplicationContext());

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -203,7 +203,7 @@ public static int getMinimizeOnExitAction(@NonNull final Context context) {
 
     @NonNull
     public static SeekParameters getSeekParameters(@NonNull final Context context) {
-        return isUsingInexactSeek(context, false) ?
+        return isUsingInexactSeek(context) ?
                 SeekParameters.CLOSEST_SYNC : SeekParameters.EXACT;
     }
 
@@ -318,8 +318,8 @@ private static boolean isRememberingPopupDimensions(@NonNull final Context conte
         return getPreferences(context).getBoolean(context.getString(R.string.popup_remember_size_pos_key), b);
     }
 
-    private static boolean isUsingInexactSeek(@NonNull final Context context, final boolean b) {
-        return getPreferences(context).getBoolean(context.getString(R.string.use_inexact_seek_key), b);
+    private static boolean isUsingInexactSeek(@NonNull final Context context) {
+        return getPreferences(context).getBoolean(context.getString(R.string.use_inexact_seek_key), false);
     }
 
     private static boolean isAutoQueueEnabled(@NonNull final Context context, final boolean b) {

File: app/src/main/java/org/schabi/newpipe/player/playback/BasePlayerMediaSession.java
Patch:
@@ -8,7 +8,7 @@
 import org.schabi.newpipe.player.playqueue.PlayQueueItem;
 
 public class BasePlayerMediaSession implements MediaSessionCallback {
-    private BasePlayer player;
+    private final BasePlayer player;
 
     public BasePlayerMediaSession(final BasePlayer player) {
         this.player = player;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java
Patch:
@@ -19,8 +19,8 @@ abstract class AbstractInfoPlayQueue<T extends ListInfo, U extends InfoItem> ext
     boolean isInitial;
     boolean isComplete;
 
-    int serviceId;
-    String baseUrl;
+    final int serviceId;
+    final String baseUrl;
     String nextUrl;
 
     transient Disposable fetchReactor;

File: app/src/main/java/org/schabi/newpipe/settings/AppearanceSettingsFragment.java
Patch:
@@ -49,7 +49,7 @@ public boolean onPreferenceTreeClick(Preference preference) {
         return super.onPreferenceTreeClick(preference);
     }
 
-    private Preference.OnPreferenceChangeListener themePreferenceChange = new Preference.OnPreferenceChangeListener() {
+    private final Preference.OnPreferenceChangeListener themePreferenceChange = new Preference.OnPreferenceChangeListener() {
         @Override
         public boolean onPreferenceChange(Preference preference, Object newValue) {
             defaultPreferences.edit().putBoolean(Constants.KEY_THEME_CHANGE, true).apply();

File: app/src/main/java/org/schabi/newpipe/settings/BasePreferenceFragment.java
Patch:
@@ -13,7 +13,7 @@
 
 public abstract class BasePreferenceFragment extends PreferenceFragmentCompat {
     protected final String TAG = getClass().getSimpleName() + "@" + Integer.toHexString(hashCode());
-    protected boolean DEBUG = MainActivity.DEBUG;
+    protected final boolean DEBUG = MainActivity.DEBUG;
 
     protected SharedPreferences defaultPreferences;
 

File: app/src/main/java/org/schabi/newpipe/util/StreamItemAdapter.java
Patch:
@@ -31,7 +31,7 @@
 public class StreamItemAdapter<T extends Stream> extends BaseAdapter {
     private final Context context;
 
-    private StreamSizeWrapper<T> streamsWrapper;
+    private final StreamSizeWrapper<T> streamsWrapper;
     private final boolean showIconNoAudio;
 
     public StreamItemAdapter(Context context, StreamSizeWrapper<T> streamsWrapper, boolean showIconNoAudio) {
@@ -124,7 +124,7 @@ private View getCustomView(int position, View convertView, ViewGroup parent, boo
     public static class StreamSizeWrapper<T extends Stream> implements Serializable {
         private static final StreamSizeWrapper<Stream> EMPTY = new StreamSizeWrapper<>(Collections.emptyList());
         private final List<T> streamsList;
-        private long[] streamSizes;
+        private final long[] streamSizes;
 
         public StreamSizeWrapper(List<T> streamsList) {
             this.streamsList = streamsList;

File: app/src/main/java/org/schabi/newpipe/views/CollapsibleView.java
Patch:
@@ -81,7 +81,7 @@ public CollapsibleView(Context context, AttributeSet attrs, int defStyleAttr, in
 
     private int targetHeight = -1;
     private ValueAnimator currentAnimator;
-    private List<StateListener> listeners = new ArrayList<>();
+    private final List<StateListener> listeners = new ArrayList<>();
 
     /**
      * This method recalculates the height of this view so it <b>must</b> be called when

File: app/src/main/java/us/shandian/giga/get/DownloadMission.java
Patch:
@@ -67,7 +67,7 @@ public interface MissionListener {
     public long done;
     public int threadCount = 3;
     public int finishCount;
-    private List<Long> threadPositions = new ArrayList<Long>();
+    private final List<Long> threadPositions = new ArrayList<Long>();
     public final Map<Long, Boolean> blockState = new HashMap<Long, Boolean>();
     public boolean running;
     public boolean finished;

File: app/src/main/java/us/shandian/giga/get/DownloadRunnable.java
Patch:
@@ -92,7 +92,7 @@ public void run() {
                 // A server may be ignoring the range request
                 if (conn.getResponseCode() != 206) {
                     mMission.errCode = DownloadMission.ERROR_SERVER_UNSUPPORTED;
-                    notifyError(DownloadMission.ERROR_SERVER_UNSUPPORTED);
+                    notifyError();
 
                     if (DEBUG) {
                         Log.e(TAG, mId + ":Unsupported " + conn.getResponseCode());
@@ -161,9 +161,9 @@ private void notifyProgress(final long len) {
         }
     }
 
-    private void notifyError(final int err) {
+    private void notifyError() {
         synchronized (mMission) {
-            mMission.notifyError(err);
+            mMission.notifyError(DownloadMission.ERROR_SERVER_UNSUPPORTED);
             mMission.pause();
         }
     }

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -56,7 +56,7 @@ public class DownloadManagerService extends Service {
     private DownloadDataSource mDataSource;
 
 
-    private MissionListener missionListener = new MissionListener();
+    private final MissionListener missionListener = new MissionListener();
 
 
     private void notifyMediaScanner(DownloadMission mission) {

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -12,7 +12,8 @@
 
 public class ProgressDrawable extends Drawable {
     private float mProgress;
-    private int mBackgroundColor, mForegroundColor;
+    private final int mBackgroundColor;
+    private final int mForegroundColor;
 
     public ProgressDrawable(Context context, @ColorRes int background, @ColorRes int foreground) {
         this(ContextCompat.getColor(context, background), ContextCompat.getColor(context, foreground));

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -44,7 +44,7 @@ public abstract class MissionsFragment extends Fragment {
     private DeleteDownloadManager mDeleteDownloadManager;
     private Disposable mDeleteDisposable;
 
-    private ServiceConnection mConnection = new ServiceConnection() {
+    private final ServiceConnection mConnection = new ServiceConnection() {
 
         @Override
         public void onServiceConnected(ComponentName name, IBinder binder) {

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -66,7 +66,7 @@ public class SelectChannelFragment extends DialogFragment {
     //////////////////////////////////////////////////////////////////////////*/
 
     public interface OnSelectedLisener {
-        void onChannelSelected(String url, String name, int service);
+        void onChannelSelected(int serviceId, String url, String name);
     }
     OnSelectedLisener onSelectedLisener = null;
     public void setOnSelectedLisener(OnSelectedLisener listener) {
@@ -126,7 +126,7 @@ public void onCancel(final DialogInterface dialogInterface) {
     private void clickedItem(int position) {
         if(onSelectedLisener != null) {
             SubscriptionEntity entry = subscriptions.get(position);
-            onSelectedLisener.onChannelSelected(entry.getUrl(), entry.getName(), entry.getServiceId());
+            onSelectedLisener.onChannelSelected(entry.getServiceId(), entry.getUrl(), entry.getName());
         }
         dismiss();
     }

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -56,7 +56,7 @@ public class SelectKioskFragment extends DialogFragment {
     //////////////////////////////////////////////////////////////////////////*/
 
     public interface OnSelectedLisener {
-        void onKioskSelected(String kioskId, int service_id);
+        void onKioskSelected(int serviceId, String kioskId, String kioskName);
     }
 
     OnSelectedLisener onSelectedLisener = null;
@@ -101,7 +101,7 @@ public void onCancel(final DialogInterface dialogInterface) {
 
     private void clickedItem(SelectKioskAdapter.Entry entry) {
         if(onSelectedLisener != null) {
-            onSelectedLisener.onKioskSelected(entry.kioskId, entry.serviceId);
+            onSelectedLisener.onKioskSelected(entry.serviceId, entry.kioskId, entry.kioskName);
         }
         dismiss();
     }

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -77,7 +77,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 finish();
             } else getSupportFragmentManager().popBackStack();
         }
-        return true;
+
+        return super.onOptionsItemSelected(item);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/settings/SelectChannelFragment.java
Patch:
@@ -66,7 +66,7 @@ public class SelectChannelFragment extends DialogFragment {
     //////////////////////////////////////////////////////////////////////////*/
 
     public interface OnSelectedLisener {
-        void onChannelSelected(String url, String name, int service);
+        void onChannelSelected(int serviceId, String url, String name);
     }
     OnSelectedLisener onSelectedLisener = null;
     public void setOnSelectedLisener(OnSelectedLisener listener) {
@@ -126,7 +126,7 @@ public void onCancel(final DialogInterface dialogInterface) {
     private void clickedItem(int position) {
         if(onSelectedLisener != null) {
             SubscriptionEntity entry = subscriptions.get(position);
-            onSelectedLisener.onChannelSelected(entry.getUrl(), entry.getName(), entry.getServiceId());
+            onSelectedLisener.onChannelSelected(entry.getServiceId(), entry.getUrl(), entry.getName());
         }
         dismiss();
     }

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -56,7 +56,7 @@ public class SelectKioskFragment extends DialogFragment {
     //////////////////////////////////////////////////////////////////////////*/
 
     public interface OnSelectedLisener {
-        void onKioskSelected(String kioskId, int service_id);
+        void onKioskSelected(int serviceId, String kioskId, String kioskName);
     }
 
     OnSelectedLisener onSelectedLisener = null;
@@ -101,7 +101,7 @@ public void onCancel(final DialogInterface dialogInterface) {
 
     private void clickedItem(SelectKioskAdapter.Entry entry) {
         if(onSelectedLisener != null) {
-            onSelectedLisener.onKioskSelected(entry.kioskId, entry.serviceId);
+            onSelectedLisener.onKioskSelected(entry.serviceId, entry.kioskId, entry.kioskName);
         }
         dismiss();
     }

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -77,7 +77,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 finish();
             } else getSupportFragmentManager().popBackStack();
         }
-        return true;
+
+        return super.onOptionsItemSelected(item);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -1227,10 +1227,10 @@ public void handleResult(@NonNull StreamInfo info) {
                 spinnerToolbar.setVisibility(View.GONE);
                 break;
             default:
+                if(info.getAudioStreams().isEmpty()) detailControlsBackground.setVisibility(View.GONE);
                 if (!info.getVideoStreams().isEmpty()
                         || !info.getVideoOnlyStreams().isEmpty()) break;
 
-                detailControlsBackground.setVisibility(View.GONE);
                 detailControlsPopup.setVisibility(View.GONE);
                 spinnerToolbar.setVisibility(View.GONE);
                 thumbnailPlayButton.setImageResource(R.drawable.ic_headset_white_24dp);

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -26,6 +26,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.graphics.Bitmap;
+import android.os.Build;
 import android.os.IBinder;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -343,6 +344,7 @@ public void onUpdateProgress(int currentProgress, int duration, int bufferPercen
 
             if (!shouldUpdateOnProgress) return;
             resetNotification();
+            if(Build.VERSION.SDK_INT >= 26 /*Oreo*/) updateNotificationThumbnail();
             if (bigNotRemoteView != null) {
                 bigNotRemoteView.setProgressBar(R.id.notificationProgressBar, duration, currentProgress, false);
                 bigNotRemoteView.setTextViewText(R.id.notificationTime, getTimeString(currentProgress) + " / " + getTimeString(duration));

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
+import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.player.playqueue.events.AppendEvent;
 import org.schabi.newpipe.player.playqueue.events.ErrorEvent;
 import org.schabi.newpipe.player.playqueue.events.InitEvent;
@@ -41,7 +42,7 @@
 public abstract class PlayQueue implements Serializable {
     private final String TAG = "PlayQueue@" + Integer.toHexString(hashCode());
 
-    public static final boolean DEBUG = true;
+    public static final boolean DEBUG = !BuildConfig.BUILD_TYPE.equals("release");
 
     private ArrayList<PlayQueueItem> backup;
     private ArrayList<PlayQueueItem> streams;

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -15,7 +15,8 @@ public enum UserAction {
     REQUESTED_CHANNEL("requested channel"),
     REQUESTED_PLAYLIST("requested playlist"),
     REQUESTED_KIOSK("requested kiosk"),
-    DELETE_FROM_HISTORY("delete from history");
+    DELETE_FROM_HISTORY("delete from history"),
+    PLAY_STREAM("Play stream");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -73,7 +73,7 @@ public static Single<SearchInfo> searchFor(final int serviceId,
         return Single.fromCallable(() ->
             SearchInfo.getInfo(NewPipe.getService(serviceId),
                     NewPipe.getService(serviceId)
-                        .getSearchQIHFactory()
+                        .getSearchQHFactory()
                         .fromQuery(searchString, contentFilter, sortFilter),
                     contentCountry));
     }
@@ -88,7 +88,7 @@ public static Single<InfoItemsPage> getMoreSearchItems(final int serviceId,
         return Single.fromCallable(() ->
                 SearchInfo.getMoreItems(NewPipe.getService(serviceId),
                         NewPipe.getService(serviceId)
-                            .getSearchQIHFactory()
+                            .getSearchQHFactory()
                             .fromQuery(searchString, contentFilter, sortFilter),
                         contentCountry,
                         pageUrl));

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -31,8 +31,6 @@
 import org.schabi.newpipe.extractor.stream.Stream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.VideoStream;
-import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
-import org.schabi.newpipe.extractor.linkhandler.SearchQueryHandler;
 import org.schabi.newpipe.fragments.MainFragment;
 import org.schabi.newpipe.fragments.detail.VideoDetailFragment;
 import org.schabi.newpipe.fragments.list.channel.ChannelFragment;

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -81,7 +81,7 @@ public void onCreate() {
             ArrayList<String> paths = new ArrayList<>(2);
             paths.add(NewPipeSettings.getVideoDownloadPath(this));
             paths.add(NewPipeSettings.getAudioDownloadPath(this));
-            mManager = new DownloadManagerImpl(paths, mDataSource);
+            mManager = new DownloadManagerImpl(paths, mDataSource, this);
             if (DEBUG) {
                 Log.d(TAG, "mManager == null");
                 Log.d(TAG, "Download directory: " + paths);

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -51,6 +51,7 @@
 import com.nostra13.universalimageloader.core.assist.FailReason;
 import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;
 
+import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.Downloader;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
@@ -98,7 +99,7 @@
 public abstract class BasePlayer implements
         Player.EventListener, PlaybackListener, ImageLoadingListener {
 
-    public static final boolean DEBUG = true;
+    public static final boolean DEBUG = !BuildConfig.BUILD_TYPE.equals("release");
     @NonNull public static final String TAG = "BasePlayer";
 
     @NonNull final protected Context context;

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
+import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.player.playqueue.events.AppendEvent;
 import org.schabi.newpipe.player.playqueue.events.ErrorEvent;
 import org.schabi.newpipe.player.playqueue.events.InitEvent;
@@ -41,7 +42,7 @@
 public abstract class PlayQueue implements Serializable {
     private final String TAG = "PlayQueue@" + Integer.toHexString(hashCode());
 
-    public static final boolean DEBUG = true;
+    public static final boolean DEBUG = !BuildConfig.BUILD_TYPE.equals("release");
 
     private ArrayList<PlayQueueItem> backup;
     private ArrayList<PlayQueueItem> streams;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -31,8 +31,6 @@
 import org.schabi.newpipe.extractor.stream.Stream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.VideoStream;
-import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
-import org.schabi.newpipe.extractor.linkhandler.SearchQueryHandler;
 import org.schabi.newpipe.fragments.MainFragment;
 import org.schabi.newpipe.fragments.detail.VideoDetailFragment;
 import org.schabi.newpipe.fragments.list.channel.ChannelFragment;

File: app/src/main/java/org/schabi/newpipe/download/ExtSDDownloadFailedActivity.java
Patch:
@@ -25,12 +25,10 @@ protected void onStart() {
                 .setTitle(R.string.download_to_sdcard_error_title)
                 .setMessage(R.string.download_to_sdcard_error_message)
                 .setPositiveButton(R.string.yes, (DialogInterface dialogInterface, int i) -> {
-
                     NewPipeSettings.resetDownloadFolders(this);
                     finish();
                 })
                 .setNegativeButton(R.string.cancel, (DialogInterface dialogInterface, int i) -> {
-
                     dialogInterface.dismiss();
                     finish();
                 })

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -15,7 +15,8 @@ public enum UserAction {
     REQUESTED_CHANNEL("requested channel"),
     REQUESTED_PLAYLIST("requested playlist"),
     REQUESTED_KIOSK("requested kiosk"),
-    DELETE_FROM_HISTORY("delete from history");
+    DELETE_FROM_HISTORY("delete from history"),
+    PLAY_STREAM("Play stream");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -863,6 +863,7 @@ public void handleNextItems(ListExtractor.InfoItemsPage result) {
         showListFooter(false);
         currentPageUrl = result.getNextPageUrl();
         infoListAdapter.addInfoItemList(result.getItems());
+        nextPageUrl = result.getNextPageUrl();
 
         if (!result.getErrors().isEmpty()) {
             showSnackBarError(result.getErrors(), UserAction.SEARCHED,

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -575,8 +575,7 @@ private void showDeleteSuggestionDialog(final SuggestionItem item) {
                                             .onNext(searchEditText.getText().toString()),
                                     throwable -> showSnackBarError(throwable,
                                             UserAction.DELETE_FROM_HISTORY, "none",
-                                            "Deleting item failed", R.string.general_error)
-                            );
+                                            "Deleting item failed", R.string.general_error));
                     disposables.add(onDelete);
                 })
                 .show();

File: app/src/main/java/org/schabi/newpipe/settings/ChoseTabsFragment.java
Patch:
@@ -92,7 +92,7 @@ public void onPause() {
     }
 
     private void initUsedTabs() {
-        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\n2\n4\n");
+        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
         String tabs[] = save.trim().split("\n");
         selectedTabs.addAll(Arrays.asList(tabs));
     }

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -205,7 +205,7 @@ private void setIcons() {
     private void getTabOrder() {
         tabs.clear();
 
-        String save = prefs.getString("saveUsedTabs", "1\n2\n4\n");
+        String save = prefs.getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
         String tabsArray[] = save.trim().split("\n");
 
         Collections.addAll(tabs, tabsArray);

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -211,7 +211,7 @@ private void setIcons() {
     private void getTabOrder() {
         tabs.clear();
 
-        String save = prefs.getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
+        String save = prefs.getString("saveUsedTabs", "1\n2\n4\n");
         String tabsArray[] = save.trim().split("\n");
 
         for(String tabNumber:tabsArray) { {

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsMain.java
Patch:
@@ -100,7 +100,7 @@ public void onPause() {
     }
 
     private void initUsedTabs() {
-        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
+        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\n2\n4\n");
         String tabs[] = save.trim().split("\n");
         usedTabs.addAll(Arrays.asList(tabs));
     }

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -211,7 +211,7 @@ private void setIcons() {
     private void getTabOrder() {
         tabs.clear();
 
-        String save = prefs.getString("saveUsedTabs", "1\n2\n4\n");
+        String save = prefs.getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
         String tabsArray[] = save.trim().split("\n");
 
         for(String tabNumber:tabsArray) { {

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsMain.java
Patch:
@@ -100,7 +100,7 @@ public void onPause() {
     }
 
     private void initUsedTabs() {
-        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\n2\n4\n");
+        String save = android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getString("saveUsedTabs", "1\tTrending\t0\n2\n4\n");
         String tabs[] = save.trim().split("\n");
         usedTabs.addAll(Arrays.asList(tabs));
     }

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsMain.java
Patch:
@@ -184,9 +184,6 @@ public int getItemCount() {
         class TabViewHolder extends RecyclerView.ViewHolder {
 
             TextView text;
-            Button remove;
-            Button up;
-            Button down;
 
             public TabViewHolder(View itemView) {
                 super(itemView);

File: app/src/main/java/org/schabi/newpipe/local/history/StatisticsPlaylistFragment.java
Patch:
@@ -111,7 +111,9 @@ public void setUserVisibleHint(boolean isVisibleToUser) {
     @Override
     protected void initViews(View rootView, Bundle savedInstanceState) {
         super.initViews(rootView, savedInstanceState);
-        setTitle(getString(R.string.title_last_played));
+        if(!useAsFrontPage) {
+            setTitle(getString(R.string.title_last_played));
+        }
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/CheckForNewAppVersionTask.java
Patch:
@@ -35,7 +35,7 @@ public class CheckForNewAppVersionTask extends AsyncTask<Void, Void, String> {
     protected void onPreExecute() {
         // Continue with version check only if the build variant is of type "github".
         if (!BuildConfig.FLAVOR.equals(app.getString(R.string.app_flavor_github))) {
-            // this.cancel(true);
+            this.cancel(true);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -210,8 +210,7 @@ public void initNotificationChannel() {
         mNotificationManager.createNotificationChannel(mChannel);
 
         // Set up notification channel for app update only if it's a github apk.
-
-        if (!BuildConfig.FLAVOR.equals(getString(R.string.app_flavor_github))) {
+        if (BuildConfig.FLAVOR.equals(getString(R.string.app_flavor_github))) {
 
             final String appUpdateId
                     = getString(R.string.app_update_notification_channel_id);

File: app/src/main/java/org/schabi/newpipe/util/ListHelper.java
Patch:
@@ -443,11 +443,11 @@ private static String getResolutionLimit(Context context) {
     /**
      * Are we connected to wifi?
      * @param context App context
-     * @return True if connected to wifi
+     * @return {@code true} if connected to wifi
      */
     private static boolean isWifiActive(Context context)
     {
         ConnectivityManager manager = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
-        return manager.getActiveNetworkInfo().getType() == ConnectivityManager.TYPE_WIFI;
+        return manager != null && manager.getActiveNetworkInfo() != null && manager.getActiveNetworkInfo().getType() == ConnectivityManager.TYPE_WIFI;
     }
 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -8,6 +8,9 @@
 
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.ListInfo;
+import org.schabi.newpipe.extractor.NewPipe;
+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
+import org.schabi.newpipe.extractor.linkhandler.LinkHandler;
 import org.schabi.newpipe.util.Constants;
 
 import java.util.Queue;
@@ -166,7 +169,6 @@ protected boolean hasMoreItems() {
     public void handleResult(@NonNull I result) {
         super.handleResult(result);
 
-        url = result.getUrl();
         name = result.getName();
         setTitle(name);
 

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -45,7 +45,7 @@ public interface PlaybackListener {
      *
      * May be called anytime at any amount once unblock is called.
      * */
-    void onPlaybackSynchronize(@NonNull final PlayQueueItem item, @Nullable final StreamInfo info);
+    void onPlaybackSynchronize(@NonNull final PlayQueueItem item);
 
     /**
      * Requests the listener to resolve a stream info into a media source

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -6,7 +6,7 @@ public class Constants {
     public static final String KEY_TITLE = "key_title";
     public static final String KEY_LINK_TYPE = "key_link_type";
     public static final String KEY_OPEN_SEARCH = "key_open_search";
-    public static final String KEY_QUERY = "key_query";
+    public static final String KEY_SEARCH_STRING = "key_search_string";
 
     public static final String KEY_THEME_CHANGE = "key_theme_change";
     public static final String KEY_MAIN_PAGE_CHANGE = "key_main_page_change";

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -49,7 +49,6 @@
 
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
-import org.schabi.newpipe.extractor.uih.SearchQIHandler;
 import org.schabi.newpipe.fragments.BackPressable;
 import org.schabi.newpipe.fragments.MainFragment;
 import org.schabi.newpipe.fragments.detail.VideoDetailFragment;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -16,11 +16,9 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
-import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.extractor.uih.ListUIHandler;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.OnScrollBelowItemsListener;
 import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -9,8 +9,8 @@
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.ListInfo;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.extractor.uih.ListUIHandler;
-import org.schabi.newpipe.extractor.uih.UIHandler;
+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
+import org.schabi.newpipe.extractor.linkhandler.LinkHandler;
 import org.schabi.newpipe.util.Constants;
 
 import java.util.Queue;

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -33,7 +33,7 @@
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.extractor.uih.ListUIHandler;
+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -30,7 +30,7 @@
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfo;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.extractor.uih.ListUIHandler;
+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
 import org.schabi.newpipe.fragments.list.BaseListInfoFragment;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.local.playlist.RemotePlaylistManager;

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -37,12 +37,10 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.extractor.ServiceList;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.extractor.exceptions.ParsingException;
 import org.schabi.newpipe.extractor.search.SearchExtractor;
 import org.schabi.newpipe.extractor.search.SearchInfo;
-import org.schabi.newpipe.extractor.uih.SearchQIHandler;
 import org.schabi.newpipe.fragments.BackPressable;
 import org.schabi.newpipe.fragments.list.BaseListFragment;
 import org.schabi.newpipe.local.history.HistoryRecordManager;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -31,8 +31,8 @@
 import org.schabi.newpipe.extractor.stream.Stream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.VideoStream;
-import org.schabi.newpipe.extractor.uih.ListUIHandler;
-import org.schabi.newpipe.extractor.uih.SearchQIHandler;
+import org.schabi.newpipe.extractor.linkhandler.ListLinkHandler;
+import org.schabi.newpipe.extractor.linkhandler.SearchQueryHandler;
 import org.schabi.newpipe.fragments.MainFragment;
 import org.schabi.newpipe.fragments.detail.VideoDetailFragment;
 import org.schabi.newpipe.fragments.list.channel.ChannelFragment;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -295,6 +295,7 @@ public void handleIntent(final Intent intent) {
         //////////////////////////////////////////////////////////////////////////*/
 
         private void updateNotificationThumbnail() {
+            if (basePlayerImpl == null) return;
             if (notRemoteView != null) {
                 notRemoteView.setImageViewBitmap(R.id.notificationCover,
                         basePlayerImpl.getThumbnail());

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -277,6 +277,7 @@ private void importDatabase(String filePath) {
                 newpipe_db_shm.delete();
 
             } else {
+
                 Toast.makeText(getContext(), R.string.could_not_import_all_files, Toast.LENGTH_LONG)
                         .show();
             }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -720,7 +720,6 @@ public void onBlocked() {
         @Override
         public void onBuffering() {
             super.onBuffering();
-            animatePlayButtons(false, 100);
             getRootView().setKeepScreenOn(true);
         }
 

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -896,7 +896,6 @@ private class MySimpleOnGestureListener extends GestureDetector.SimpleOnGestureL
         @Override
         public boolean onDoubleTap(MotionEvent e) {
             if (DEBUG) Log.d(TAG, "onDoubleTap() called with: e = [" + e + "]" + "rawXy = " + e.getRawX() + ", " + e.getRawY() + ", xy = " + e.getX() + ", " + e.getY());
-            if (!playerImpl.isPlaying()) return false;
 
             if (e.getX() > playerImpl.getRootView().getWidth() * 2 / 3) {
                 playerImpl.onFastForward();

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -683,9 +683,9 @@ public void onBroadcastReceived(Intent intent) {
 
         @Override
         public void changeState(int state) {
+            resetNotification();
             super.changeState(state);
             updatePlayback();
-            updateNotification(-1);
         }
 
         @Override

File: app/src/main/java/org/schabi/newpipe/player/resolver/AudioPlaybackResolver.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 import com.google.android.exoplayer2.source.MediaSource;
 
@@ -24,6 +25,7 @@ public AudioPlaybackResolver(@NonNull final Context context,
     }
 
     @Override
+    @Nullable
     public MediaSource resolve(@NonNull StreamInfo info) {
         final MediaSource liveSource = maybeBuildLiveMediaSource(dataSource, info);
         if (liveSource != null) return liveSource;

File: app/src/main/java/org/schabi/newpipe/player/resolver/Resolver.java
Patch:
@@ -1,7 +1,8 @@
 package org.schabi.newpipe.player.resolver;
 
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 public interface Resolver<Source, Product> {
-    Product resolve(@NonNull Source source);
+    @Nullable Product resolve(@NonNull Source source);
 }

File: app/src/main/java/org/schabi/newpipe/player/resolver/VideoPlaybackResolver.java
Patch:
@@ -47,6 +47,7 @@ public VideoPlaybackResolver(@NonNull final Context context,
     }
 
     @Override
+    @Nullable
     public MediaSource resolve(@NonNull StreamInfo info) {
         final MediaSource liveSource = maybeBuildLiveMediaSource(dataSource, info);
         if (liveSource != null) return liveSource;

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -289,7 +289,6 @@ public void handleResult(@NonNull final PlaylistInfo result) {
         remotePlaylistManager.getPlaylist(result)
                 .flatMap(lists -> getUpdateProcessor(lists, result), (lists, id) -> lists)
                 .onBackpressureLatest()
-                .flatMap(lists -> getUpdateProcessor(lists, result), (lists, id) -> lists)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(getPlaylistBookmarkSubscriber());
 
@@ -355,6 +354,7 @@ private Flowable<Integer> getUpdateProcessor(@NonNull List<PlaylistRemoteEntity>
 
         final PlaylistRemoteEntity playlistEntity = playlists.get(0);
         if (playlistEntity.isIdenticalTo(result)) return noItemToUpdate;
+
         return remotePlaylistManager.onUpdate(playlists.get(0).getUid(), result).toFlowable();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlaybackParameterDialog.java
Patch:
@@ -21,7 +21,7 @@
 public class PlaybackParameterDialog extends DialogFragment {
     @NonNull private static final String TAG = "PlaybackParameterDialog";
 
-    // Maximum allowable range in ExoPlayer
+    // Minimum allowable range in ExoPlayer
     public static final double MINIMUM_PLAYBACK_VALUE = 0.10f;
     public static final double MAXIMUM_PLAYBACK_VALUE = 3.00f;
 

File: app/src/main/java/org/schabi/newpipe/player/resolver/Resolver.java
Patch:
@@ -2,6 +2,6 @@
 
 import android.support.annotation.NonNull;
 
-public interface Resolver<Source, Produce> {
-    Produce resolve(@NonNull Source source);
+public interface Resolver<Source, Product> {
+    Product resolve(@NonNull Source source);
 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -289,6 +289,7 @@ public void handleResult(@NonNull final PlaylistInfo result) {
         remotePlaylistManager.getPlaylist(result)
                 .flatMap(lists -> getUpdateProcessor(lists, result), (lists, id) -> lists)
                 .onBackpressureLatest()
+                .flatMap(lists -> getUpdateProcessor(lists, result), (lists, id) -> lists)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(getPlaylistBookmarkSubscriber());
 
@@ -354,7 +355,6 @@ private Flowable<Integer> getUpdateProcessor(@NonNull List<PlaylistRemoteEntity>
 
         final PlaylistRemoteEntity playlistEntity = playlists.get(0);
         if (playlistEntity.isIdenticalTo(result)) return noItemToUpdate;
-
         return remotePlaylistManager.onUpdate(playlists.get(0).getUid(), result).toFlowable();
     }
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -236,7 +236,8 @@ public void handleIntent(Intent intent) {
         final int repeatMode = intent.getIntExtra(REPEAT_MODE, getRepeatMode());
         final float playbackSpeed = intent.getFloatExtra(PLAYBACK_SPEED, getPlaybackSpeed());
         final float playbackPitch = intent.getFloatExtra(PLAYBACK_PITCH, getPlaybackPitch());
-        final boolean playbackSkipSilence = intent.getBooleanExtra(PLAYBACK_SKIP_SILENCE, false);
+        final boolean playbackSkipSilence = intent.getBooleanExtra(PLAYBACK_SKIP_SILENCE,
+                getPlaybackSkipSilence());
 
         // Good to go...
         initPlayback(queue, repeatMode, playbackSpeed, playbackPitch, playbackSkipSilence,

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -729,7 +729,8 @@ public void hideControls(final long duration, long delay) {
         /*package-private*/ void enableVideoRenderer(final boolean enable) {
             final int videoRendererIndex = getRendererIndex(C.TRACK_TYPE_VIDEO);
             if (trackSelector != null && videoRendererIndex != RENDERER_UNAVAILABLE) {
-                trackSelector.setRendererDisabled(videoRendererIndex, !enable);
+                trackSelector.setParameters(trackSelector.buildUponParameters()
+                        .setRendererDisabled(videoRendererIndex, !enable));
             }
         }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -459,6 +459,7 @@ public void onFullScreenButtonClicked() {
                         this.getRepeatMode(),
                         this.getPlaybackSpeed(),
                         this.getPlaybackPitch(),
+                        this.getPlaybackSkipSilence(),
                         this.getPlaybackQuality()
                 );
                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -100,11 +100,13 @@ public static Intent getPlayerIntent(@NonNull final Context context,
                                          final int repeatMode,
                                          final float playbackSpeed,
                                          final float playbackPitch,
+                                         final boolean playbackSkipSilence,
                                          @Nullable final String playbackQuality) {
         return getPlayerIntent(context, targetClazz, playQueue, playbackQuality)
                 .putExtra(BasePlayer.REPEAT_MODE, repeatMode)
                 .putExtra(BasePlayer.PLAYBACK_SPEED, playbackSpeed)
-                .putExtra(BasePlayer.PLAYBACK_PITCH, playbackPitch);
+                .putExtra(BasePlayer.PLAYBACK_PITCH, playbackPitch)
+                .putExtra(BasePlayer.PLAYBACK_SKIP_SILENCE, playbackSkipSilence);
     }
 
     public static void playOnMainPlayer(final Context context, final PlayQueue queue) {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -1147,11 +1147,11 @@ public boolean isPlaying() {
 
     @Player.RepeatMode
     public int getRepeatMode() {
-        return simpleExoPlayer.getRepeatMode();
+        return simpleExoPlayer == null ? Player.REPEAT_MODE_OFF : simpleExoPlayer.getRepeatMode();
     }
 
     public void setRepeatMode(@Player.RepeatMode final int repeatMode) {
-        simpleExoPlayer.setRepeatMode(repeatMode);
+        if (simpleExoPlayer != null) simpleExoPlayer.setRepeatMode(repeatMode);
     }
 
     public float getPlaybackSpeed() {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -1147,11 +1147,11 @@ public boolean isPlaying() {
 
     @Player.RepeatMode
     public int getRepeatMode() {
-        return simpleExoPlayer.getRepeatMode();
+        return simpleExoPlayer == null ? Player.REPEAT_MODE_OFF : simpleExoPlayer.getRepeatMode();
     }
 
     public void setRepeatMode(@Player.RepeatMode final int repeatMode) {
-        simpleExoPlayer.setRepeatMode(repeatMode);
+        if (simpleExoPlayer != null) simpleExoPlayer.setRepeatMode(repeatMode);
     }
 
     public float getPlaybackSpeed() {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -271,6 +271,7 @@ public void destroyPlayer() {
         if (audioReactor != null) audioReactor.dispose();
         if (playbackManager != null) playbackManager.dispose();
         if (databaseUpdateReactor != null) databaseUpdateReactor.dispose();
+        if (mediaSessionManager != null) mediaSessionManager.dispose();
 
         if (playQueueAdapter != null) {
             playQueueAdapter.unsetSelectedListener();

File: app/src/main/java/org/schabi/newpipe/player/mediasession/MediaSessionCallback.java
Patch:
@@ -13,5 +13,4 @@ public interface MediaSessionCallback {
 
     void onPlay();
     void onPause();
-    void onSetShuffle(final boolean isShuffled);
 }

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -271,6 +271,7 @@ public void destroyPlayer() {
         if (audioReactor != null) audioReactor.dispose();
         if (playbackManager != null) playbackManager.dispose();
         if (databaseUpdateReactor != null) databaseUpdateReactor.dispose();
+        if (mediaSessionManager != null) mediaSessionManager.dispose();
 
         if (playQueueAdapter != null) {
             playQueueAdapter.unsetSelectedListener();

File: app/src/main/java/org/schabi/newpipe/player/mediasession/MediaSessionCallback.java
Patch:
@@ -13,5 +13,4 @@ public interface MediaSessionCallback {
 
     void onPlay();
     void onPause();
-    void onSetShuffle(final boolean isShuffled);
 }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -647,7 +647,7 @@ protected int getDefaultResolutionIndex(final List<VideoStream> sortedVideos) {
         @Override
         protected int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,
                                                  final String playbackQuality) {
-            return ListHelper.getDefaultResolutionIndex(context, sortedVideos, playbackQuality);
+            return ListHelper.getResolutionIndex(context, sortedVideos, playbackQuality);
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -517,7 +517,7 @@ protected int getDefaultResolutionIndex(final List<VideoStream> sortedVideos) {
         @Override
         protected int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,
                                                  final String playbackQuality) {
-            return ListHelper.getPopupDefaultResolutionIndex(context, sortedVideos, playbackQuality);
+            return ListHelper.getPopupResolutionIndex(context, sortedVideos, playbackQuality);
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/about/LicenseFragment.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.about;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
@@ -39,7 +40,7 @@ public static LicenseFragment newInstance(SoftwareComponent[] softwareComponents
      * @param license the license to show
      */
     public static void showLicense(Context context, License license) {
-        new LicenseFragmentHelper().execute(context, license);
+        new LicenseFragmentHelper((Activity) context).execute(license);
     }
 
     @Override

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -129,7 +129,7 @@ public void notifyChange() {
     }
 
     private void updateList() {
-        mAdapter = new MissionAdapter(mActivity, mBinder, mManager, mLinear);
+        mAdapter = new MissionAdapter((Activity) mActivity, mBinder, mManager, mLinear);
 
         if (mLinear) {
             mList.setLayoutManager(mLinearManager);

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -17,6 +17,7 @@
 import org.schabi.newpipe.info_list.holder.PlaylistMiniInfoItemHolder;
 import org.schabi.newpipe.info_list.holder.StreamInfoItemHolder;
 import org.schabi.newpipe.info_list.holder.StreamMiniInfoItemHolder;
+import org.schabi.newpipe.util.FallbackViewHolder;
 import org.schabi.newpipe.util.OnClickGesture;
 
 import java.util.ArrayList;
@@ -238,7 +239,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
                 return new PlaylistInfoItemHolder(infoItemBuilder, parent);
             default:
                 Log.e(TAG, "Trollolo");
-                return null;
+                return new FallbackViewHolder(new View(parent.getContext()));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/local/LocalItemListAdapter.java
Patch:
@@ -14,6 +14,7 @@
 import org.schabi.newpipe.local.holder.LocalPlaylistStreamItemHolder;
 import org.schabi.newpipe.local.holder.LocalStatisticStreamItemHolder;
 import org.schabi.newpipe.local.holder.RemotePlaylistItemHolder;
+import org.schabi.newpipe.util.FallbackViewHolder;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.OnClickGesture;
 
@@ -225,7 +226,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
                 return new LocalStatisticStreamItemHolder(localItemBuilder, parent);
             default:
                 Log.e(TAG, "No view type has been considered for holder: [" + type + "]");
-                return null;
+                return new FallbackViewHolder(new View(parent.getContext()));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueueAdapter.java
Patch:
@@ -14,6 +14,7 @@
 import org.schabi.newpipe.player.playqueue.events.PlayQueueEvent;
 import org.schabi.newpipe.player.playqueue.events.RemoveEvent;
 import org.schabi.newpipe.player.playqueue.events.SelectEvent;
+import org.schabi.newpipe.util.FallbackViewHolder;
 
 import java.util.List;
 
@@ -188,7 +189,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
                 return new PlayQueueItemHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.play_queue_item, parent, false));
             default:
                 Log.e(TAG, "Attempting to create view holder with undefined type: " + type);
-                return null;
+                return new FallbackViewHolder(new View(parent.getContext()));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -96,7 +96,7 @@ public static void reportUiError(final AppCompatActivity activity, final Throwab
     public static void reportError(final Context context, final List<Throwable> el,
                                    final Class returnActivity, View rootView, final ErrorInfo errorInfo) {
         if (rootView != null) {
-            Snackbar.make(rootView, R.string.error_snackbar_message, 15 * 1000)
+            Snackbar.make(rootView, R.string.error_snackbar_message, 3 * 1000)
                     .setActionTextColor(Color.YELLOW)
                     .setAction(R.string.error_snackbar_action, v ->
                             startErrorActivity(returnActivity, context, errorInfo, el)).show();

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -645,7 +645,7 @@ protected int getDefaultResolutionIndex(final List<VideoStream> sortedVideos) {
         @Override
         protected int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,
                                                  final String playbackQuality) {
-            return ListHelper.getDefaultResolutionIndex(context, sortedVideos, playbackQuality);
+            return ListHelper.getResolutionIndex(context, sortedVideos, playbackQuality);
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -509,7 +509,7 @@ protected int getDefaultResolutionIndex(final List<VideoStream> sortedVideos) {
         @Override
         protected int getOverrideResolutionIndex(final List<VideoStream> sortedVideos,
                                                  final String playbackQuality) {
-            return ListHelper.getPopupDefaultResolutionIndex(context, sortedVideos, playbackQuality);
+            return ListHelper.getPopupResolutionIndex(context, sortedVideos, playbackQuality);
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -197,7 +197,7 @@ private void exportDatabase(String path) {
                             new FileOutputStream(path)));
             ZipHelper.addFileToZip(outZip, newpipe_db.getPath(), "newpipe.db");
             ZipHelper.addFileToZip(outZip, newpipe_db_journal.getPath(), "newpipe.db-journal");
-
+            //add settings
             outZip.close();
 
             Toast.makeText(getContext(), R.string.export_complete_toast, Toast.LENGTH_SHORT)

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -228,8 +228,8 @@ public void initListeners() {
     }
 
     @Override
-    public void initPlayer() {
-        super.initPlayer();
+    public void initPlayer(final boolean playOnReady) {
+        super.initPlayer(playOnReady);
 
         // Setup video view
         simpleExoPlayer.setVideoSurfaceView(surfaceView);

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -218,7 +218,7 @@ private void showDialog() {
         };
 
         final AlertDialog alertDialog = new AlertDialog.Builder(themeWrapperContext)
-                .setTitle(R.string.preferred_player_share_menu_title)
+                .setTitle(R.string.preferred_open_action_share_menu_title)
                 .setView(radioGroup)
                 .setCancelable(true)
                 .setNegativeButton(R.string.just_once, dialogButtonsClickListener)

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -217,7 +217,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
             startActivity(Intent.createChooser(i, "Send Email"));
         });
-        reportButton.setEnabled(false);
 
         // normal bugreport
         buildInfo(errorInfo);

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -168,7 +168,7 @@ public void handleResult(@NonNull final KioskInfo result) {
 
         if (!result.getErrors().isEmpty()) {
             showSnackBarError(result.getErrors(),
-                    UserAction.REQUESTED_PLAYLIST,
+                    UserAction.REQUESTED_KIOSK,
                     NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);
         }
     }

File: app/src/main/java/org/schabi/newpipe/report/UserAction.java
Patch:
@@ -13,7 +13,8 @@ public enum UserAction {
     GET_SUGGESTIONS("get suggestions"),
     REQUESTED_STREAM("requested stream"),
     REQUESTED_CHANNEL("requested channel"),
-    REQUESTED_PLAYLIST("requested playlist");
+    REQUESTED_PLAYLIST("requested playlist"),
+    REQUESTED_KIOSK("requested kiosk");
 
 
     private final String message;

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/BookmarkFragment.java
Patch:
@@ -79,7 +79,9 @@ public View onCreateView(@NonNull LayoutInflater inflater,
     @Override
     public void setUserVisibleHint(boolean isVisibleToUser) {
         super.setUserVisibleHint(isVisibleToUser);
-        if (isVisibleToUser) setTitle(getString(R.string.tab_bookmarks));
+        if (activity != null && isVisibleToUser) {
+            setTitle(activity.getString(R.string.tab_bookmarks));
+        }
     }
 
     ///////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/fragments/subscription/SubscriptionFragment.java
Patch:
@@ -104,8 +104,8 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void setUserVisibleHint(boolean isVisibleToUser) {
         super.setUserVisibleHint(isVisibleToUser);
-        if (isVisibleToUser) {
-            setTitle(getString(R.string.tab_subscriptions));
+        if (activity != null && isVisibleToUser) {
+            setTitle(activity.getString(R.string.tab_subscriptions));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/BookmarkFragment.java
Patch:
@@ -79,7 +79,9 @@ public View onCreateView(@NonNull LayoutInflater inflater,
     @Override
     public void setUserVisibleHint(boolean isVisibleToUser) {
         super.setUserVisibleHint(isVisibleToUser);
-        if (isVisibleToUser) setTitle(getString(R.string.tab_bookmarks));
+        if (activity != null && isVisibleToUser) {
+            setTitle(activity.getString(R.string.tab_bookmarks));
+        }
     }
 
     ///////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/fragments/subscription/SubscriptionFragment.java
Patch:
@@ -104,8 +104,8 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void setUserVisibleHint(boolean isVisibleToUser) {
         super.setUserVisibleHint(isVisibleToUser);
-        if (isVisibleToUser) {
-            setTitle(getString(R.string.tab_subscriptions));
+        if (activity != null && isVisibleToUser) {
+            setTitle(activity.getString(R.string.tab_subscriptions));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -37,6 +37,7 @@
 import org.schabi.newpipe.playlist.SinglePlayQueue;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ThemeHelper;
 
@@ -271,7 +272,8 @@ public void handleResult(@NonNull final PlaylistInfo result) {
 
         playlistCtrl.setVisibility(View.VISIBLE);
 
-        imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar, DISPLAY_AVATAR_OPTIONS);
+        imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar,
+                ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);
         headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,
                 (int) result.getStreamCount(), (int) result.getStreamCount()));
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalItemBuilder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.fragments.local;
 
 import android.content.Context;
-import android.graphics.Bitmap;
 import android.widget.ImageView;
 
 import com.nostra13.universalimageloader.core.DisplayImageOptions;
 import com.nostra13.universalimageloader.core.ImageLoader;
-import com.nostra13.universalimageloader.core.process.BitmapProcessor;
 
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.util.OnClickGesture;

File: app/src/main/java/org/schabi/newpipe/fragments/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -6,6 +6,7 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.fragments.local.LocalItemBuilder;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
 import java.text.DateFormat;
@@ -26,7 +27,7 @@ public void updateFromItem(final LocalItem localItem, final DateFormat dateForma
                 NewPipe.getNameOfService(item.getServiceId())));
 
         itemBuilder.displayImage(item.getThumbnailUrl(), itemThumbnailView,
-                DISPLAY_THUMBNAIL_OPTIONS);
+                ImageDisplayConstants.DISPLAY_PLAYLIST_OPTIONS);
 
         super.updateFromItem(localItem, dateFormat);
     }

File: app/src/main/java/org/schabi/newpipe/history/WatchHistoryFragment.java
Patch:
@@ -20,6 +20,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntry;
 import org.schabi.newpipe.info_list.holder.StreamInfoItemHolder;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
 
@@ -147,7 +148,7 @@ void onBindViewHolder(ViewHolder holder, StreamHistoryEntry entry, int position)
             holder.uploader.setText(entry.uploader);
             holder.duration.setText(Localization.getDurationString(entry.duration));
             ImageLoader.getInstance().displayImage(entry.thumbnailUrl, holder.thumbnailView,
-                    StreamInfoItemHolder.DISPLAY_THUMBNAIL_OPTIONS);
+                    ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -618,7 +618,7 @@ public void onBroadcastReceived(Intent intent) {
                     onClose();
                     break;
                 case ACTION_PLAY_PAUSE:
-                    onVideoPlayPause();
+                    onPlayPause();
                     break;
                 case ACTION_REPEAT:
                     onRepeatClicked();
@@ -716,7 +716,7 @@ private class MySimpleOnGestureListener extends GestureDetector.SimpleOnGestureL
         public boolean onDoubleTap(MotionEvent e) {
             if (DEBUG)
                 Log.d(TAG, "onDoubleTap() called with: e = [" + e + "]" + "rawXy = " + e.getRawX() + ", " + e.getRawY() + ", xy = " + e.getX() + ", " + e.getY());
-            if (playerImpl == null || !playerImpl.isPlaying() || !playerImpl.isPlayerReady()) return false;
+            if (playerImpl == null || !playerImpl.isPlaying()) return false;
 
             if (e.getX() > popupWidth / 2) {
                 playerImpl.onFastForward();
@@ -731,7 +731,7 @@ public boolean onDoubleTap(MotionEvent e) {
         public boolean onSingleTapConfirmed(MotionEvent e) {
             if (DEBUG) Log.d(TAG, "onSingleTapConfirmed() called with: e = [" + e + "]");
             if (playerImpl == null || playerImpl.getPlayer() == null) return false;
-            playerImpl.onVideoPlayPause();
+            playerImpl.onPlayPause();
             return true;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -60,11 +60,11 @@ public static String getTimeString(int milliSeconds) {
                 : stringFormatter.format("%02d:%02d", minutes, seconds).toString();
     }
 
-    public static String formatSpeed(float speed) {
+    public static String formatSpeed(double speed) {
         return speedFormatter.format(speed);
     }
 
-    public static String formatPitch(float pitch) {
+    public static String formatPitch(double pitch) {
         return pitchFormatter.format(pitch);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -486,7 +486,7 @@ public void onBroadcastReceived(Intent intent) {
                     onClose();
                     break;
                 case ACTION_PLAY_PAUSE:
-                    onVideoPlayPause();
+                    onPlayPause();
                     break;
                 case ACTION_REPEAT:
                     onRepeatClicked();

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -618,7 +618,7 @@ public void onBroadcastReceived(Intent intent) {
                     onClose();
                     break;
                 case ACTION_PLAY_PAUSE:
-                    onVideoPlayPause();
+                    onPlayPause();
                     break;
                 case ACTION_REPEAT:
                     onRepeatClicked();
@@ -731,7 +731,7 @@ public boolean onDoubleTap(MotionEvent e) {
         public boolean onSingleTapConfirmed(MotionEvent e) {
             if (DEBUG) Log.d(TAG, "onSingleTapConfirmed() called with: e = [" + e + "]");
             if (playerImpl == null || playerImpl.getPlayer() == null) return false;
-            playerImpl.onVideoPlayPause();
+            playerImpl.onPlayPause();
             return true;
         }
 

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -424,7 +424,7 @@ public void onClick(View view) {
             player.onPlayPrevious();
 
         } else if (view.getId() == playPauseButton.getId()) {
-            player.onVideoPlayPause();
+            player.onPlayPause();
 
         } else if (view.getId() == forwardButton.getId()) {
             player.onPlayNext();

File: app/src/main/java/org/schabi/newpipe/player/playback/BasePlayerMediaSession.java
Patch:
@@ -62,12 +62,12 @@ public MediaDescriptionCompat getQueueMetadata(int index) {
 
     @Override
     public void onPlay() {
-        if (!player.isPlaying()) player.onVideoPlayPause();
+        player.onPlay();
     }
 
     @Override
     public void onPause() {
-        if (player.isPlaying()) player.onVideoPlayPause();
+        player.onPause();
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/helper/PlayerHelper.java
Patch:
@@ -60,11 +60,11 @@ public static String getTimeString(int milliSeconds) {
                 : stringFormatter.format("%02d:%02d", minutes, seconds).toString();
     }
 
-    public static String formatSpeed(float speed) {
+    public static String formatSpeed(double speed) {
         return speedFormatter.format(speed);
     }
 
-    public static String formatPitch(float pitch) {
+    public static String formatPitch(double pitch) {
         return pitchFormatter.format(pitch);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -640,6 +640,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         public void onDismiss(PopupMenu menu) {
             super.onDismiss(menu);
             if (isPlaying()) hideControls(DEFAULT_CONTROLS_DURATION, 0);
+            hideSystemUi();
         }
 
         @Override

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -716,7 +716,7 @@ private class MySimpleOnGestureListener extends GestureDetector.SimpleOnGestureL
         public boolean onDoubleTap(MotionEvent e) {
             if (DEBUG)
                 Log.d(TAG, "onDoubleTap() called with: e = [" + e + "]" + "rawXy = " + e.getRawX() + ", " + e.getRawY() + ", xy = " + e.getX() + ", " + e.getY());
-            if (playerImpl == null || !playerImpl.isPlaying() || !playerImpl.isPlayerReady()) return false;
+            if (playerImpl == null || !playerImpl.isPlaying()) return false;
 
             if (e.getX() > popupWidth / 2) {
                 playerImpl.onFastForward();

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -509,7 +509,7 @@ public void onStartTrackingTouch(SeekBar seekBar) {
 
     @Override
     public void onStopTrackingTouch(SeekBar seekBar) {
-        if (player != null) player.simpleExoPlayer.seekTo(seekBar.getProgress());
+        if (player != null) player.seekTo(seekBar.getProgress());
         seekDisplay.setVisibility(View.GONE);
         seeking = false;
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -37,6 +37,7 @@
 import org.schabi.newpipe.playlist.SinglePlayQueue;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.ThemeHelper;
 
@@ -271,7 +272,8 @@ public void handleResult(@NonNull final PlaylistInfo result) {
 
         playlistCtrl.setVisibility(View.VISIBLE);
 
-        imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar, DISPLAY_AVATAR_OPTIONS);
+        imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar,
+                ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);
         headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,
                 (int) result.getStreamCount(), (int) result.getStreamCount()));
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalItemBuilder.java
Patch:
@@ -1,12 +1,10 @@
 package org.schabi.newpipe.fragments.local;
 
 import android.content.Context;
-import android.graphics.Bitmap;
 import android.widget.ImageView;
 
 import com.nostra13.universalimageloader.core.DisplayImageOptions;
 import com.nostra13.universalimageloader.core.ImageLoader;
-import com.nostra13.universalimageloader.core.process.BitmapProcessor;
 
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.util.OnClickGesture;

File: app/src/main/java/org/schabi/newpipe/fragments/local/holder/RemotePlaylistItemHolder.java
Patch:
@@ -6,6 +6,7 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.fragments.local.LocalItemBuilder;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 
 import java.text.DateFormat;
@@ -26,7 +27,7 @@ public void updateFromItem(final LocalItem localItem, final DateFormat dateForma
                 NewPipe.getNameOfService(item.getServiceId())));
 
         itemBuilder.displayImage(item.getThumbnailUrl(), itemThumbnailView,
-                DISPLAY_THUMBNAIL_OPTIONS);
+                ImageDisplayConstants.DISPLAY_PLAYLIST_OPTIONS);
 
         super.updateFromItem(localItem, dateFormat);
     }

File: app/src/main/java/org/schabi/newpipe/history/WatchHistoryFragment.java
Patch:
@@ -20,6 +20,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.history.model.StreamHistoryEntry;
 import org.schabi.newpipe.info_list.holder.StreamInfoItemHolder;
+import org.schabi.newpipe.util.ImageDisplayConstants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
 
@@ -147,7 +148,7 @@ void onBindViewHolder(ViewHolder holder, StreamHistoryEntry entry, int position)
             holder.uploader.setText(entry.uploader);
             holder.duration.setText(Localization.getDurationString(entry.duration));
             ImageLoader.getInstance().displayImage(entry.thumbnailUrl, holder.thumbnailView,
-                    StreamInfoItemHolder.DISPLAY_THUMBNAIL_OPTIONS);
+                    ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -205,7 +205,7 @@ public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
         if (DEBUG) Log.d(TAG, "onCheckedChanged() called with: group = [" + group + "], checkedId = [" + checkedId + "]");
         switch (checkedId) {
             case R.id.audio_button:
-                setupAudioSpinner(currentInfo.audio_streams, streamsSpinner);
+                setupAudioSpinner(currentInfo.getAudioStreams(), streamsSpinner);
                 break;
             case R.id.video_button:
                 setupVideoSpinner(sortedStreamVideosList, streamsSpinner);

File: app/src/main/java/org/schabi/newpipe/fragments/list/feed/FeedFragment.java
Patch:
@@ -297,12 +297,12 @@ public void onSubscribe(Disposable d) {
             // Called only when response is non-empty
             @Override
             public void onSuccess(final ChannelInfo channelInfo) {
-                if (infoListAdapter == null || channelInfo.getRelatedStreams().isEmpty()) {
+                if (infoListAdapter == null || channelInfo.getRelatedItems().isEmpty()) {
                     onDone();
                     return;
                 }
 
-                final InfoItem item = channelInfo.getRelatedStreams().get(0);
+                final InfoItem item = channelInfo.getRelatedItems().get(0);
                 // Keep requesting new items if the current one already exists
                 boolean itemExists = doesItemExist(infoListAdapter.getItemsList(), item);
                 if (!itemExists) {
@@ -411,7 +411,7 @@ private void disposeEverything() {
 
     private boolean doesItemExist(final List<InfoItem> items, final InfoItem item) {
         for (final InfoItem existingItem : items) {
-            if (existingItem.info_type == item.info_type &&
+            if (existingItem.getInfoType() == item.getInfoType() &&
                     existingItem.getServiceId() == item.getServiceId() &&
                     existingItem.getName().equals(item.getName()) &&
                     existingItem.getUrl().equals(item.getUrl())) return true;

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -141,7 +141,7 @@ public Single<KioskInfo> loadResult(boolean forceReload) {
     }
 
     @Override
-    public Single<ListExtractor.InfoItemPage> loadMoreItemsLogic() {
+    public Single<ListExtractor.InfoItemsPage> loadMoreItemsLogic() {
         String contentCountry = PreferenceManager
                 .getDefaultSharedPreferences(activity)
                 .getString(getString(R.string.content_country_key),
@@ -174,7 +174,7 @@ public void handleResult(@NonNull final KioskInfo result) {
     }
 
     @Override
-    public void handleNextItems(ListExtractor.InfoItemPage result) {
+    public void handleNextItems(ListExtractor.InfoItemsPage result) {
         super.handleNextItems(result);
 
         if (!result.getErrors().isEmpty()) {

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -60,7 +60,7 @@ public View buildView(@NonNull ViewGroup parent, @NonNull final InfoItem infoIte
     }
 
     public View buildView(@NonNull ViewGroup parent, @NonNull final InfoItem infoItem, boolean useMiniVariant) {
-        InfoItemHolder holder = holderFromInfoType(parent, infoItem.info_type, useMiniVariant);
+        InfoItemHolder holder = holderFromInfoType(parent, infoItem.getInfoType(), useMiniVariant);
         holder.updateFromItem(infoItem);
         return holder.itemView;
     }

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -203,7 +203,7 @@ public int getItemViewType(int position) {
             return FOOTER_TYPE;
         }
         final InfoItem item = infoItemList.get(position);
-        switch (item.info_type) {
+        switch (item.getInfoType()) {
             case STREAM:
                 return useMiniVariant ? MINI_STREAM_HOLDER_TYPE : STREAM_HOLDER_TYPE;
             case CHANNEL:

File: app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java
Patch:
@@ -40,7 +40,7 @@ public void updateFromItem(final InfoItem infoItem) {
         itemUploaderView.setText(item.getUploaderName());
 
         itemBuilder.getImageLoader()
-                .displayImage(item.thumbnail_url, itemThumbnailView, DISPLAY_THUMBNAIL_OPTIONS);
+                .displayImage(item.getThumbnailUrl(), itemThumbnailView, DISPLAY_THUMBNAIL_OPTIONS);
 
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnPlaylistSelectedListener() != null) {

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -407,10 +407,10 @@ public MediaSource sourceOf(final PlayQueueItem item, final StreamInfo info) {
             final MediaSource liveSource = super.sourceOf(item, info);
             if (liveSource != null) return liveSource;
 
-            final int index = ListHelper.getDefaultAudioFormat(context, info.audio_streams);
-            if (index < 0 || index >= info.audio_streams.size()) return null;
+            final int index = ListHelper.getDefaultAudioFormat(context, info.getAudioStreams());
+            if (index < 0 || index >= info.getAudioStreams().size()) return null;
 
-            final AudioStream audio = info.audio_streams.get(index);
+            final AudioStream audio = info.getAudioStreams().get(index);
             return buildMediaSource(audio.getUrl(), PlayerHelper.cacheKeyOf(info, audio),
                     MediaFormat.getSuffixById(audio.getFormatId()));
         }

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -833,7 +833,7 @@ public void onPlaybackSynchronize(@NonNull final PlayQueueItem item,
 
             // on metadata changed
         } else if (currentPlaylistIndex != currentPlayQueueIndex || !isPlaying()) {
-            final long startPos = info != null ? info.start_position : C.TIME_UNSET;
+            final long startPos = info != null ? info.getStartPosition() : C.TIME_UNSET;
             if (DEBUG) Log.d(TAG, "Rewinding to correct" +
                     " window=[" + currentPlayQueueIndex + "]," +
                     " at=[" + getTimeString((int)startPos) + "]," +
@@ -950,7 +950,7 @@ public void onPlayPrevious() {
         /* If current playback has run for PLAY_PREV_ACTIVATION_LIMIT milliseconds, restart current track.
         * Also restart the track if the current track is the first in a queue.*/
         if (simpleExoPlayer.getCurrentPosition() > PLAY_PREV_ACTIVATION_LIMIT || playQueue.getIndex() == 0) {
-            final long startPos = currentInfo == null ? 0 : currentInfo.start_position;
+            final long startPos = currentInfo == null ? 0 : currentInfo.getStartPosition();
             simpleExoPlayer.seekTo(startPos);
         } else {
             playQueue.offsetIndex(-1);

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -579,7 +579,7 @@ public void onProgressUpdate(int currentProgress, int duration, int bufferPercen
     public void onMetadataUpdate(StreamInfo info) {
         if (info != null) {
             metadataTitle.setText(info.getName());
-            metadataArtist.setText(info.uploader_name);
+            metadataArtist.setText(info.getUploaderName());
 
             progressEndTime.setVisibility(View.GONE);
             progressLiveSync.setVisibility(View.GONE);

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -354,10 +354,10 @@ protected void onMetadataChanged(@NonNull final PlayQueueItem item,
                 break;
 
             case VIDEO_STREAM:
-                if (info.video_streams.size() + info.video_only_streams.size() == 0) break;
+                if (info.getVideoStreams().size() + info.getVideoOnlyStreams().size() == 0) break;
 
                 final List<VideoStream> videos = ListHelper.getSortedStreamVideosList(context,
-                        info.video_streams, info.video_only_streams, false);
+                        info.getVideoStreams(), info.getVideoOnlyStreams(), false);
                 availableStreams = new ArrayList<>(videos);
                 if (playbackQuality == null) {
                     selectedStreamIndex = getDefaultResolutionIndex(videos);
@@ -388,7 +388,7 @@ public MediaSource sourceOf(final PlayQueueItem item, final StreamInfo info) {
 
         // Create video stream source
         final List<VideoStream> videos = ListHelper.getSortedStreamVideosList(context,
-                info.video_streams, info.video_only_streams, false);
+                info.getVideoStreams(), info.getVideoOnlyStreams(), false);
         final int index;
         if (videos.isEmpty()) {
             index = -1;

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -417,9 +417,9 @@ private Single<ManagedMediaSource> getLoadedMediaSource(@NonNull final PlayQueue
                 final Exception exception = new IllegalStateException(
                         "Unable to resolve source from stream info." +
                                 " URL: " + stream.getUrl() +
-                                ", audio count: " + streamInfo.audio_streams.size() +
-                                ", video count: " + streamInfo.video_only_streams.size() +
-                                streamInfo.video_streams.size());
+                                ", audio count: " + streamInfo.getAudioStreams().size() +
+                                ", video count: " + streamInfo.getVideoOnlyStreams().size() +
+                                streamInfo.getVideoStreams().size());
                 return new FailedMediaSource(stream, exception);
             }
 

File: app/src/main/java/org/schabi/newpipe/playlist/ChannelPlayQueue.java
Patch:
@@ -3,6 +3,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.channel.ChannelInfo;
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
+import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.util.ExtractorHelper;
 
 import java.util.List;
@@ -16,13 +17,13 @@ public ChannelPlayQueue(final ChannelInfoItem item) {
     }
 
     public ChannelPlayQueue(final ChannelInfo info) {
-        this(info.getServiceId(), info.getUrl(), info.getNextPageUrl(), info.getRelatedStreams(), 0);
+        this(info.getServiceId(), info.getUrl(), info.getNextPageUrl(), info.getRelatedItems(), 0);
     }
 
     public ChannelPlayQueue(final int serviceId,
                             final String url,
                             final String nextPageUrl,
-                            final List<InfoItem> streams,
+                            final List<StreamInfoItem> streams,
                             final int index) {
         super(serviceId, url, nextPageUrl, streams, index);
     }

File: app/src/main/java/org/schabi/newpipe/playlist/PlaylistPlayQueue.java
Patch:
@@ -3,6 +3,7 @@
 import org.schabi.newpipe.extractor.InfoItem;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfo;
 import org.schabi.newpipe.extractor.playlist.PlaylistInfoItem;
+import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.util.ExtractorHelper;
 
 import java.util.List;
@@ -16,13 +17,13 @@ public PlaylistPlayQueue(final PlaylistInfoItem item) {
     }
 
     public PlaylistPlayQueue(final PlaylistInfo info) {
-        this(info.getServiceId(), info.getUrl(), info.getNextPageUrl(), info.getRelatedStreams(), 0);
+        this(info.getServiceId(), info.getUrl(), info.getNextPageUrl(), info.getRelatedItems(), 0);
     }
 
     public PlaylistPlayQueue(final int serviceId,
                              final String url,
                              final String nextPageUrl,
-                             final List<InfoItem> streams,
+                             final List<StreamInfoItem> streams,
                              final int index) {
         super(serviceId, url, nextPageUrl, streams, index);
     }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -322,7 +322,7 @@ protected void onRestoreInstanceState(@NonNull Bundle savedState) {
         if (serializable instanceof StreamInfo) {
             //noinspection unchecked
             currentInfo = (StreamInfo) serializable;
-            InfoCache.getInstance().putInfo(currentInfo);
+            InfoCache.getInstance().putInfo(serviceId, url, currentInfo);
         }
 
         serializable = savedState.getSerializable(STACK_KEY);

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -172,7 +172,7 @@ private static <I extends Info> Single<I> checkCache(boolean forceLoad,
                                                          String url,
                                                          Single<I> loadFromNetwork) {
         checkServiceId(serviceId);
-        loadFromNetwork = loadFromNetwork.doOnSuccess((@NonNull I i) -> cache.putInfo(i));
+        loadFromNetwork = loadFromNetwork.doOnSuccess(info -> cache.putInfo(serviceId, url, info));
 
         Single<I> load;
         if (forceLoad) {

File: app/src/main/java/org/schabi/newpipe/playlist/AbstractInfoPlayQueue.java
Patch:
@@ -118,6 +118,7 @@ public void onError(@NonNull Throwable e) {
     public void dispose() {
         super.dispose();
         if (fetchReactor != null) fetchReactor.dispose();
+        fetchReactor = null;
     }
 
     private static List<PlayQueueItem> extractListItems(final List<InfoItem> infos) {

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -84,6 +84,7 @@ public void dispose() {
         if (eventBroadcast != null) eventBroadcast.onComplete();
         if (reportingReactor != null) reportingReactor.cancel();
 
+        eventBroadcast = null;
         broadcastReceiver = null;
         reportingReactor = null;
     }

File: app/src/main/java/org/schabi/newpipe/player/mediasource/FailedMediaSource.java
Patch:
@@ -12,7 +12,7 @@
 import java.io.IOException;
 
 public class FailedMediaSource implements ManagedMediaSource {
-    private final String TAG = "ManagedMediaSource@" + Integer.toHexString(hashCode());
+    private final String TAG = "FailedMediaSource@" + Integer.toHexString(hashCode());
 
     private final PlayQueueItem playQueueItem;
     private final Throwable error;

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.playlist;
 
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.util.Log;
 
 import org.reactivestreams.Subscriber;
@@ -170,7 +171,7 @@ public List<PlayQueueItem> getStreams() {
      * Returns the play queue's update broadcast.
      * May be null if the play queue message bus is not initialized.
      * */
-    @NonNull
+    @Nullable
     public Flowable<PlayQueueEvent> getBroadcastReceiver() {
         return broadcastReceiver;
     }

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueueAdapter.java
Patch:
@@ -99,7 +99,9 @@ public void onComplete() {
             }
         };
 
-        playQueue.getBroadcastReceiver().toObservable().subscribe(observer);
+        if (playQueue.getBroadcastReceiver() != null) {
+            playQueue.getBroadcastReceiver().toObservable().subscribe(observer);
+        }
     }
 
     private void onPlayQueueChanged(final PlayQueueEvent message) {

File: app/src/main/java/org/schabi/newpipe/player/mediasource/FailedMediaSource.java
Patch:
@@ -4,10 +4,8 @@
 
 import com.google.android.exoplayer2.ExoPlayer;
 import com.google.android.exoplayer2.source.MediaPeriod;
-import com.google.android.exoplayer2.source.MediaSource;
 import com.google.android.exoplayer2.upstream.Allocator;
 
-import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 
 import java.io.IOException;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -391,6 +391,9 @@ public void sync(@NonNull final PlayQueueItem item, @Nullable final StreamInfo i
         @Override
         @Nullable
         public MediaSource sourceOf(final PlayQueueItem item, final StreamInfo info) {
+            final MediaSource liveSource = super.sourceOf(item, info);
+            if (liveSource != null) return liveSource;
+
             final int index = ListHelper.getDefaultAudioFormat(context, info.audio_streams);
             if (index < 0 || index >= info.audio_streams.size()) return null;
 

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -224,8 +224,6 @@ public static void handleGeneralException(Context context, int serviceId, String
                 Toast.makeText(context, R.string.network_error, Toast.LENGTH_LONG).show();
             } else if (exception instanceof YoutubeStreamExtractor.GemaException) {
                 Toast.makeText(context, R.string.blocked_by_gema, Toast.LENGTH_LONG).show();
-            } else if (exception instanceof YoutubeStreamExtractor.LiveStreamException) {
-                Toast.makeText(context, R.string.live_streams_not_supported, Toast.LENGTH_LONG).show();
             } else if (exception instanceof ContentNotAvailableException) {
                 Toast.makeText(context, R.string.content_not_available, Toast.LENGTH_LONG).show();
             } else {

File: app/src/debug/java/org/schabi/newpipe/DebugApp.java
Patch:
@@ -68,7 +68,7 @@ private void initStetho() {
     @Override
     protected boolean isDisposedRxExceptionsReported() {
         return PreferenceManager.getDefaultSharedPreferences(this)
-                .getBoolean(getString(R.string.allow_disposed_exceptions_key), true);
+                .getBoolean(getString(R.string.allow_disposed_exceptions_key), false);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -215,6 +215,6 @@ protected RefWatcher installLeakCanary() {
     }
 
     protected boolean isDisposedRxExceptionsReported() {
-        return true;
+        return false;
     }
 }

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -181,7 +181,9 @@ public void onAudioDecoderInitialized(String s, long l, long l1) {}
     public void onAudioInputFormatChanged(Format format) {}
 
     @Override
-    public void onAudioTrackUnderrun(int i, long l, long l1) {}
+    public void onAudioSinkUnderrun(int bufferSize,
+                                    long bufferSizeMs,
+                                    long elapsedSinceLastFeedMs) {}
 
     @Override
     public void onAudioDisabled(DecoderCounters decoderCounters) {}

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -33,6 +33,8 @@ public interface PlaybackListener {
      * Signals to the listener to synchronize the player's window to the manager's
      * window.
      *
+     * Occurs once only per play queue item change.
+     *
      * May be called only after unblock is called.
      * */
     void sync(@NonNull final PlayQueueItem item, @Nullable final StreamInfo info);

File: app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java
Patch:
@@ -64,6 +64,7 @@ public static void initSettings(Context context) {
         PreferenceManager.setDefaultValues(context, R.xml.history_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.main_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.video_audio_settings, true);
+        PreferenceManager.setDefaultValues(context, R.xml.debug_settings, true);
 
         getVideoDownloadFolder(context);
         getAudioDownloadFolder(context);

File: app/src/debug/java/org/schabi/newpipe/DebugApp.java
Patch:
@@ -61,7 +61,7 @@ private void initStetho() {
     @Override
     protected boolean isDisposedRxExceptionsReported() {
         return PreferenceManager.getDefaultSharedPreferences(this)
-                .getBoolean(getString(R.string.allow_disposed_exceptions_key), true);
+                .getBoolean(getString(R.string.allow_disposed_exceptions_key), false);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -210,6 +210,6 @@ protected RefWatcher installLeakCanary() {
     }
 
     protected boolean isDisposedRxExceptionsReported() {
-        return true;
+        return false;
     }
 }

File: app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java
Patch:
@@ -64,6 +64,7 @@ public static void initSettings(Context context) {
         PreferenceManager.setDefaultValues(context, R.xml.history_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.main_settings, true);
         PreferenceManager.setDefaultValues(context, R.xml.video_audio_settings, true);
+        PreferenceManager.setDefaultValues(context, R.xml.debug_settings, true);
 
         getVideoDownloadFolder(context);
         getAudioDownloadFolder(context);

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -617,12 +617,12 @@ public void onPlayerError(ExoPlaybackException error) {
     public void onPositionDiscontinuity(int reason) {
         if (DEBUG) Log.d(TAG, "onPositionDiscontinuity() called with reason = [" + reason + "]");
         // Refresh the playback if there is a transition to the next video
-        final int newWindowIndex = simpleExoPlayer.getCurrentPeriodIndex();
+        final int newPeriodIndex = simpleExoPlayer.getCurrentPeriodIndex();
 
         /* Discontinuity reasons!! Thank you ExoPlayer lords */
         switch (reason) {
             case DISCONTINUITY_REASON_PERIOD_TRANSITION:
-                if (newWindowIndex == playQueue.getIndex()) {
+                if (newPeriodIndex == playQueue.getIndex()) {
                     registerView();
                 } else {
                     playQueue.offsetIndex(+1);

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -391,10 +391,10 @@ public MediaSource sourceOf(final PlayQueueItem item, final StreamInfo info) {
         // Create subtitle sources
         for (final Subtitles subtitle : info.getSubtitles()) {
             final String mimeType = PlayerHelper.mimeTypesOf(subtitle.getFileType());
-            if (mimeType == null) continue;
+            if (mimeType == null || context == null) continue;
 
             final Format textFormat = Format.createTextSampleFormat(null, mimeType,
-                    SELECTION_FLAG_AUTOSELECT, PlayerHelper.captionLanguageOf(subtitle));
+                    SELECTION_FLAG_AUTOSELECT, PlayerHelper.captionLanguageOf(context, subtitle));
             final MediaSource textSource = new SingleSampleMediaSource(
                     Uri.parse(subtitle.getURL()), cacheDataSourceFactory, textFormat, TIME_UNSET);
             mediaSources.add(textSource);

File: app/src/main/java/org/schabi/newpipe/player/helper/AudioReactor.java
Patch:
@@ -181,7 +181,9 @@ public void onAudioDecoderInitialized(String s, long l, long l1) {}
     public void onAudioInputFormatChanged(Format format) {}
 
     @Override
-    public void onAudioTrackUnderrun(int i, long l, long l1) {}
+    public void onAudioSinkUnderrun(int bufferSize,
+                                    long bufferSizeMs,
+                                    long elapsedSinceLastFeedMs) {}
 
     @Override
     public void onAudioDisabled(DecoderCounters decoderCounters) {}

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -33,6 +33,8 @@ public interface PlaybackListener {
      * Signals to the listener to synchronize the player's window to the manager's
      * window.
      *
+     * Occurs once only per play queue item change.
+     *
      * May be called only after unblock is called.
      * */
     void sync(@NonNull final PlayQueueItem item, @Nullable final StreamInfo info);

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -47,7 +47,7 @@ public class MainFragment extends BaseFragment implements TabLayout.OnTabSelecte
     // Constants
     //////////////////////////////////////////////////////////////////////////*/
 
-    private static final int FALLBACK_SERVICE_ID = ServiceList.YouTube.getId();
+    private static final int FALLBACK_SERVICE_ID = ServiceList.YouTube.getServiceId();
     private static final String FALLBACK_CHANNEL_URL = "https://www.youtube.com/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ";
     private static final String FALLBACK_CHANNEL_NAME = "Music";
     private static final String FALLBACK_KIOSK_ID = "Trending";

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -73,7 +73,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
                             .putString(getString(R.string.main_page_selectd_kiosk_id), kioskId).apply();
                     String serviceName = "";
                     try {
-                        serviceName = NewPipe.getService(service_id).getServiceInfo().name;
+                        serviceName = NewPipe.getService(service_id).getServiceInfo().getName();
                     } catch (ExtractionException e) {
                         onError(e);
                     }
@@ -245,7 +245,7 @@ public void onResume() {
 
                 String summary =
                         String.format(getString(R.string.service_kiosk_string),
-                                service.getServiceInfo().name,
+                                service.getServiceInfo().getName(),
                                 kioskName);
 
                 mainPagePref.setSummary(summary);

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -122,11 +122,11 @@ public SelectKioskAdapter()
 
             for(StreamingService service : NewPipe.getServices()) {
                 //TODO: Multi-service support
-                if (service.getServiceId() != ServiceList.YouTube.getId()) continue;
+                if (service.getServiceId() != ServiceList.YouTube.getServiceId()) continue;
 
                 for(String kioskId : service.getKioskList().getAvailableKiosks()) {
                     String name = String.format(getString(R.string.service_kiosk_string),
-                            service.getServiceInfo().name,
+                            service.getServiceInfo().getName(),
                             KioskTranslator.getTranslatedKioskName(kioskId, getContext()));
                     kioskList.add(new Entry(
                             ServiceHelper.getIcon(service.getServiceId()),

File: app/src/main/java/org/schabi/newpipe/util/ThemeHelper.java
Patch:
@@ -73,7 +73,7 @@ public static int getThemeForService(Context context, int serviceId) {
         else if (selectedTheme.equals(blackTheme)) themeName = "BlackTheme";
         else if (selectedTheme.equals(darkTheme)) themeName = "DarkTheme";
 
-        themeName += "." + service.getServiceInfo().name;
+        themeName += "." + service.getServiceInfo().getName();
         int resourceId = context.getResources().getIdentifier(themeName, "style", context.getPackageName());
 
         if (resourceId > 0) {

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistRemoteEntity.java
Patch:
@@ -66,7 +66,8 @@ public PlaylistRemoteEntity(int serviceId, String name, String url, String thumb
 
     @Ignore
     public PlaylistRemoteEntity(final PlaylistInfo info) {
-        this(info.getServiceId(), info.getName(), info.getUrl(), info.getThumbnailUrl(),
+        this(info.getServiceId(), info.getName(), info.getUrl(),
+                info.getThumbnailUrl() == null ? info.getUploaderAvatarUrl() : info.getThumbnailUrl(),
                 info.getUploaderName(), info.getStreamCount());
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/RemotePlaylistManager.java
Patch:
@@ -25,8 +25,9 @@ public Flowable<List<PlaylistRemoteEntity>> getPlaylists() {
         return playlistRemoteTable.getAll().subscribeOn(Schedulers.io());
     }
 
-    public Flowable<List<PlaylistRemoteEntity>> getPlaylist(final int serviceId, final String url) {
-        return playlistRemoteTable.getPlaylist(serviceId, url).subscribeOn(Schedulers.io());
+    public Flowable<List<PlaylistRemoteEntity>> getPlaylist(final PlaylistInfo info) {
+        return playlistRemoteTable.getPlaylist(info.getServiceId(), info.getUrl())
+                .subscribeOn(Schedulers.io());
     }
 
     public Single<Integer> deletePlaylist(final long playlistId) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -58,7 +58,7 @@
 import org.schabi.newpipe.extractor.stream.VideoStream;
 import org.schabi.newpipe.fragments.BackPressable;
 import org.schabi.newpipe.fragments.BaseStateFragment;
-import org.schabi.newpipe.fragments.local.PlaylistAppendDialog;
+import org.schabi.newpipe.fragments.local.dialog.PlaylistAppendDialog;
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.player.MainVideoPlayer;

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -20,15 +20,14 @@
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.OnScrollBelowItemsListener;
-import org.schabi.newpipe.fragments.local.PlaylistAppendDialog;
+import org.schabi.newpipe.fragments.local.dialog.PlaylistAppendDialog;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.info_list.InfoListAdapter;
 import org.schabi.newpipe.playlist.SinglePlayQueue;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.OnClickGesture;
 import org.schabi.newpipe.util.StateSaver;
 
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 import java.util.Queue;

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/BaseLocalListFragment.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.fragments.local;
+package org.schabi.newpipe.fragments.local.bookmark;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -13,6 +13,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.fragments.BaseStateFragment;
 import org.schabi.newpipe.fragments.list.ListViewContract;
+import org.schabi.newpipe.fragments.local.LocalItemListAdapter;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/BookmarkFragment.java
Patch:
@@ -19,7 +19,6 @@
 import org.schabi.newpipe.database.playlist.PlaylistLocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
 import org.schabi.newpipe.database.playlist.model.PlaylistRemoteEntity;
-import org.schabi.newpipe.fragments.local.BaseLocalListFragment;
 import org.schabi.newpipe.fragments.local.LocalPlaylistManager;
 import org.schabi.newpipe.fragments.local.RemotePlaylistManager;
 import org.schabi.newpipe.report.UserAction;

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/LocalPlaylistFragment.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.fragments.local;
+package org.schabi.newpipe.fragments.local.bookmark;
 
 import android.app.Activity;
 import android.content.Context;
@@ -26,6 +26,7 @@
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
+import org.schabi.newpipe.fragments.local.LocalPlaylistManager;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.playlist.PlayQueue;
 import org.schabi.newpipe.playlist.SinglePlayQueue;

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/StatisticsPlaylistFragment.java
Patch:
@@ -17,7 +17,6 @@
 import org.schabi.newpipe.database.LocalItem;
 import org.schabi.newpipe.database.stream.StreamStatisticsEntry;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
-import org.schabi.newpipe.fragments.local.BaseLocalListFragment;
 import org.schabi.newpipe.history.HistoryRecordManager;
 import org.schabi.newpipe.info_list.InfoItemDialog;
 import org.schabi.newpipe.playlist.PlayQueue;

File: app/src/main/java/org/schabi/newpipe/fragments/local/dialog/PlaylistAppendDialog.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.fragments.local;
+package org.schabi.newpipe.fragments.local.dialog;
 
 import android.annotation.SuppressLint;
 import android.os.Bundle;
@@ -18,6 +18,8 @@
 import org.schabi.newpipe.database.stream.model.StreamEntity;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.StreamInfoItem;
+import org.schabi.newpipe.fragments.local.LocalItemListAdapter;
+import org.schabi.newpipe.fragments.local.LocalPlaylistManager;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 import org.schabi.newpipe.util.OnClickGesture;
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/dialog/PlaylistCreationDialog.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.fragments.local;
+package org.schabi.newpipe.fragments.local.dialog;
 
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -12,6 +12,7 @@
 import org.schabi.newpipe.NewPipeDatabase;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.stream.model.StreamEntity;
+import org.schabi.newpipe.fragments.local.LocalPlaylistManager;
 
 import java.util.List;
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/dialog/PlaylistDialog.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.fragments.local;
+package org.schabi.newpipe.fragments.local.dialog;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -29,7 +29,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.fragments.OnScrollBelowItemsListener;
-import org.schabi.newpipe.fragments.local.PlaylistAppendDialog;
+import org.schabi.newpipe.fragments.local.dialog.PlaylistAppendDialog;
 import org.schabi.newpipe.player.event.PlayerEventListener;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 import org.schabi.newpipe.playlist.PlayQueueItemBuilder;

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -34,7 +34,7 @@
 import org.schabi.newpipe.fragments.list.kiosk.KioskFragment;
 import org.schabi.newpipe.fragments.list.playlist.PlaylistFragment;
 import org.schabi.newpipe.fragments.list.search.SearchFragment;
-import org.schabi.newpipe.fragments.local.LocalPlaylistFragment;
+import org.schabi.newpipe.fragments.local.bookmark.LocalPlaylistFragment;
 import org.schabi.newpipe.fragments.local.bookmark.MostPlayedFragment;
 import org.schabi.newpipe.fragments.local.bookmark.LastPlayedFragment;
 import org.schabi.newpipe.history.HistoryActivity;

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -1,12 +1,9 @@
 package org.schabi.newpipe;
 
-import android.app.AlarmManager;
 import android.app.Application;
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
-import android.app.PendingIntent;
 import android.content.Context;
-import android.content.Intent;
 import android.os.Build;
 import android.util.Log;
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -47,8 +47,8 @@ public Flowable<List<PlaylistStreamEntity>> listByService(int serviceId) {
     @Query("SELECT * FROM " + STREAM_TABLE + " INNER JOIN " +
             // get ids of streams of the given playlist
             "(SELECT " + JOIN_STREAM_ID + "," + JOIN_INDEX +
-            " FROM " + PLAYLIST_STREAM_JOIN_TABLE + " WHERE "
-            + JOIN_PLAYLIST_ID + " = :playlistId)" +
+            " FROM " + PLAYLIST_STREAM_JOIN_TABLE +
+            " WHERE " + JOIN_PLAYLIST_ID + " = :playlistId)" +
 
             // then merge with the stream metadata
             " ON " + STREAM_ID + " = " + JOIN_STREAM_ID +

File: app/src/main/java/org/schabi/newpipe/fragments/local/BaseLocalListFragment.java
Patch:
@@ -126,14 +126,14 @@ public void startLoading(boolean forceLoad) {
     @Override
     public void showLoading() {
         super.showLoading();
-        animateView(itemsList, false, 200);
+        if (itemsList != null) animateView(itemsList, false, 200);
         if (headerRootView != null) animateView(headerRootView, false, 200);
     }
 
     @Override
     public void hideLoading() {
         super.hideLoading();
-        animateView(itemsList, true, 200);
+        if (itemsList != null) animateView(itemsList, true, 200);
         if (headerRootView != null) animateView(headerRootView, true, 200);
     }
 
@@ -142,7 +142,7 @@ public void showError(String message, boolean showRetryButton) {
         super.showError(message, showRetryButton);
         showListFooter(false);
 
-        animateView(itemsList, false, 200);
+        if (itemsList != null) animateView(itemsList, false, 200);
         if (headerRootView != null) animateView(headerRootView, false, 200);
     }
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/dao/PlaylistStreamDAO.java
Patch:
@@ -63,6 +63,7 @@ public Flowable<List<PlaylistStreamEntity>> listByService(int serviceId) {
             " FROM " + PLAYLIST_TABLE +
             " LEFT JOIN " + PLAYLIST_STREAM_JOIN_TABLE +
             " ON " + PLAYLIST_ID + " = " + JOIN_PLAYLIST_ID +
-            " GROUP BY " + JOIN_PLAYLIST_ID)
+            " GROUP BY " + JOIN_PLAYLIST_ID +
+            " ORDER BY " + PLAYLIST_NAME + " COLLATE NOCASE ASC")
     public abstract Flowable<List<PlaylistMetadataEntry>> getPlaylistMetadata();
 }

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/MostPlayedFragment.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.Collections;
 import java.util.List;
 
-public class MostPlayedFragment extends StatisticsPlaylistFragment {
+public final class MostPlayedFragment extends StatisticsPlaylistFragment {
     @Override
     protected String getName() {
         return getString(R.string.title_most_played);

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/WatchHistoryFragment.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.Collections;
 import java.util.List;
 
-public class WatchHistoryFragment extends StatisticsPlaylistFragment {
+public final class WatchHistoryFragment extends StatisticsPlaylistFragment {
     @Override
     protected String getName() {
         return getString(R.string.title_watch_history);

File: app/src/main/java/org/schabi/newpipe/database/Migrations.java
Patch:
@@ -28,7 +28,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
             database.execSQL("CREATE TABLE IF NOT EXISTS `stream_state` (`stream_id` INTEGER NOT NULL, `progress_time` INTEGER NOT NULL, PRIMARY KEY(`stream_id`), FOREIGN KEY(`stream_id`) REFERENCES `streams`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE )");
             database.execSQL("CREATE TABLE IF NOT EXISTS `playlists` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `thumbnail_url` TEXT)");
             database.execSQL("CREATE  INDEX `index_playlists_name` ON `playlists` (`name`)");
-            database.execSQL("CREATE TABLE IF NOT EXISTS `playlist_stream_join` (`playlist_id` INTEGER NOT NULL, `stream_id` INTEGER NOT NULL, `join_index` INTEGER NOT NULL, PRIMARY KEY(`playlist_id`, `stream_id`, `join_index`), FOREIGN KEY(`playlist_id`) REFERENCES `playlists`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`stream_id`) REFERENCES `streams`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)");
+            database.execSQL("CREATE TABLE IF NOT EXISTS `playlist_stream_join` (`playlist_id` INTEGER NOT NULL, `stream_id` INTEGER NOT NULL, `join_index` INTEGER NOT NULL, PRIMARY KEY(`playlist_id`, `join_index`), FOREIGN KEY(`playlist_id`) REFERENCES `playlists`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`stream_id`) REFERENCES `streams`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)");
             database.execSQL("CREATE UNIQUE INDEX `index_playlist_stream_join_playlist_id_join_index` ON `playlist_stream_join` (`playlist_id`, `join_index`)");
             database.execSQL("CREATE  INDEX `index_playlist_stream_join_stream_id` ON `playlist_stream_join` (`stream_id`)");
 

File: app/src/main/java/org/schabi/newpipe/database/playlist/model/PlaylistStreamEntity.java
Patch:
@@ -14,7 +14,7 @@
 import static org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity.PLAYLIST_STREAM_JOIN_TABLE;
 
 @Entity(tableName = PLAYLIST_STREAM_JOIN_TABLE,
-        primaryKeys = {JOIN_PLAYLIST_ID, JOIN_STREAM_ID, JOIN_INDEX},
+        primaryKeys = {JOIN_PLAYLIST_ID, JOIN_INDEX},
         indices = {
                 @Index(value = {JOIN_PLAYLIST_ID, JOIN_INDEX}, unique = true),
                 @Index(value = {JOIN_STREAM_ID})

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalPlaylistFragment.java
Patch:
@@ -469,7 +469,6 @@ private Disposable getDebouncedSaver() {
         return debouncedSaveSignal
                 .debounce(SAVE_DEBOUNCE_MILLIS, TimeUnit.MILLISECONDS)
                 .observeOn(AndroidSchedulers.mainThread())
-                .doOnDispose(this::saveJoin)
                 .subscribe(ignored -> saveJoin());
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalPlaylistFragment.java
Patch:
@@ -349,7 +349,7 @@ public void handleResult(@NonNull List<PlaylistStreamEntry> result) {
         animateView(headerRootLayout, true, 100);
         animateView(itemsList, true, 300);
 
-        itemListAdapter.addInfoItemList(result);
+        itemListAdapter.addItems(result);
         if (itemsListState != null) {
             itemsList.getLayoutManager().onRestoreInstanceState(itemsListState);
             itemsListState = null;

File: app/src/main/java/org/schabi/newpipe/fragments/local/PlaylistAppendDialog.java
Patch:
@@ -119,7 +119,7 @@ public void selected(LocalItem selectedItem) {
                     }
 
                     playlistAdapter.clearStreamItemList();
-                    playlistAdapter.addInfoItemList(metadataEntries);
+                    playlistAdapter.addItems(metadataEntries);
                     playlistRecyclerView.setVisibility(View.VISIBLE);
                 });
     }

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/BookmarkFragment.java
Patch:
@@ -239,7 +239,7 @@ public void handleResult(@NonNull List<PlaylistMetadataEntry> result) {
         if (result.isEmpty()) {
             showEmptyState();
         } else {
-            itemListAdapter.addInfoItemList(infoItemsOf(result));
+            itemListAdapter.addItems(infoItemsOf(result));
             if (itemsListState != null) {
                 itemsList.getLayoutManager().onRestoreInstanceState(itemsListState);
                 itemsListState = null;

File: app/src/main/java/org/schabi/newpipe/fragments/local/bookmark/StatisticsPlaylistFragment.java
Patch:
@@ -249,7 +249,7 @@ public void handleResult(@NonNull List<StreamStatisticsEntry> result) {
         animateView(headerRootLayout, true, 100);
         animateView(itemsList, true, 300);
 
-        itemListAdapter.addInfoItemList(processResult(result));
+        itemListAdapter.addItems(processResult(result));
         if (itemsListState != null) {
             itemsList.getLayoutManager().onRestoreInstanceState(itemsListState);
             itemsListState = null;

File: app/src/main/java/org/schabi/newpipe/fragments/local/holder/LocalPlaylistItemHolder.java
Patch:
@@ -43,8 +43,7 @@ public void updateFromItem(final LocalItem localItem, final DateFormat dateForma
         itemStreamCountView.setText(String.valueOf(item.streamCount));
         itemUploaderView.setVisibility(View.INVISIBLE);
 
-        itemBuilder.getImageLoader().displayImage(item.thumbnailUrl, itemThumbnailView,
-                DISPLAY_THUMBNAIL_OPTIONS);
+        itemBuilder.displayImage(item.thumbnailUrl, itemThumbnailView, DISPLAY_THUMBNAIL_OPTIONS);
 
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnItemSelectedListener() != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/local/holder/LocalPlaylistStreamItemHolder.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe.fragments.local.holder;
 
+import android.graphics.Bitmap;
 import android.support.v4.content.ContextCompat;
 import android.view.MotionEvent;
 import android.view.View;
@@ -8,6 +9,7 @@
 import android.widget.TextView;
 
 import com.nostra13.universalimageloader.core.DisplayImageOptions;
+import com.nostra13.universalimageloader.core.assist.ImageScaleType;
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.database.LocalItem;
@@ -59,8 +61,7 @@ public void updateFromItem(final LocalItem localItem, final DateFormat dateForma
         }
 
         // Default thumbnail is shown on error, while loading and if the url is empty
-        itemBuilder.getImageLoader().displayImage(item.thumbnailUrl, itemThumbnailView,
-                LocalPlaylistStreamItemHolder.DISPLAY_THUMBNAIL_OPTIONS);
+        itemBuilder.displayImage(item.thumbnailUrl, itemThumbnailView, DISPLAY_THUMBNAIL_OPTIONS);
 
         itemView.setOnClickListener(view -> {
             if (itemBuilder.getOnItemSelectedListener() != null) {

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -29,7 +29,7 @@
 import org.schabi.newpipe.fragments.list.channel.ChannelFragment;
 import org.schabi.newpipe.fragments.list.feed.FeedFragment;
 import org.schabi.newpipe.fragments.list.kiosk.KioskFragment;
-import org.schabi.newpipe.fragments.local.BookmarkFragment;
+import org.schabi.newpipe.fragments.local.bookmark.BookmarkFragment;
 import org.schabi.newpipe.fragments.subscription.SubscriptionFragment;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalPlaylistManager.java
Patch:
@@ -4,6 +4,7 @@
 
 import org.schabi.newpipe.database.AppDatabase;
 import org.schabi.newpipe.database.playlist.PlaylistMetadataEntry;
+import org.schabi.newpipe.database.playlist.PlaylistStreamEntry;
 import org.schabi.newpipe.database.playlist.dao.PlaylistDAO;
 import org.schabi.newpipe.database.playlist.dao.PlaylistStreamDAO;
 import org.schabi.newpipe.database.playlist.model.PlaylistEntity;
@@ -84,7 +85,7 @@ public Flowable<List<PlaylistMetadataEntry>> getPlaylists() {
         return playlistStreamTable.getPlaylistMetadata().subscribeOn(Schedulers.io());
     }
 
-    public Flowable<List<StreamEntity>> getPlaylistStreams(final long playlistId) {
+    public Flowable<List<PlaylistStreamEntry>> getPlaylistStreams(final long playlistId) {
         return playlistStreamTable.getOrderedStreamsOf(playlistId).subscribeOn(Schedulers.io());
     }
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -35,8 +35,8 @@
 import org.schabi.newpipe.fragments.list.playlist.PlaylistFragment;
 import org.schabi.newpipe.fragments.list.search.SearchFragment;
 import org.schabi.newpipe.fragments.local.LocalPlaylistFragment;
-import org.schabi.newpipe.fragments.local.MostPlayedFragment;
-import org.schabi.newpipe.fragments.local.WatchHistoryFragment;
+import org.schabi.newpipe.fragments.local.bookmark.MostPlayedFragment;
+import org.schabi.newpipe.fragments.local.bookmark.WatchHistoryFragment;
 import org.schabi.newpipe.history.HistoryActivity;
 import org.schabi.newpipe.player.BackgroundPlayer;
 import org.schabi.newpipe.player.BackgroundPlayerActivity;

File: app/src/main/java/org/schabi/newpipe/database/AppDatabase.java
Patch:
@@ -13,10 +13,10 @@
 import org.schabi.newpipe.database.playlist.model.PlaylistEntity;
 import org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity;
 import org.schabi.newpipe.database.stream.dao.StreamDAO;
-import org.schabi.newpipe.database.stream.dao.StreamHistoryDAO;
+import org.schabi.newpipe.database.history.dao.StreamHistoryDAO;
 import org.schabi.newpipe.database.stream.dao.StreamStateDAO;
 import org.schabi.newpipe.database.stream.model.StreamEntity;
-import org.schabi.newpipe.database.stream.model.StreamHistoryEntity;
+import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 import org.schabi.newpipe.database.subscription.SubscriptionDAO;
 import org.schabi.newpipe.database.subscription.SubscriptionEntity;

File: app/src/main/java/org/schabi/newpipe/database/Migrations.java
Patch:
@@ -20,6 +20,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
 
             // Not much we can do about this, since room doesn't create tables before migration.
             // It's either this or blasting the entire database anew.
+            database.execSQL("CREATE  INDEX `index_search_history_search` ON `search_history` (`search`)");
             database.execSQL("CREATE TABLE IF NOT EXISTS `streams` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `service_id` INTEGER NOT NULL, `url` TEXT, `title` TEXT, `stream_type` TEXT, `duration` INTEGER, `uploader` TEXT, `thumbnail_url` TEXT)");
             database.execSQL("CREATE UNIQUE INDEX `index_streams_service_id_url` ON `streams` (`service_id`, `url`)");
             database.execSQL("CREATE TABLE IF NOT EXISTS `stream_history` (`stream_id` INTEGER NOT NULL, `access_date` INTEGER NOT NULL, PRIMARY KEY(`stream_id`, `access_date`), FOREIGN KEY(`stream_id`) REFERENCES `streams`(`uid`) ON UPDATE CASCADE ON DELETE CASCADE )");

File: app/src/main/java/org/schabi/newpipe/database/history/dao/SearchHistoryDAO.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.arch.persistence.room.Dao;
 import android.arch.persistence.room.Query;
+import android.support.annotation.Nullable;
 
 import org.schabi.newpipe.database.history.model.SearchHistoryEntry;
 
@@ -22,6 +23,7 @@ public interface SearchHistoryDAO extends HistoryDAO<SearchHistoryEntry> {
 
     @Query("SELECT * FROM " + TABLE_NAME + " WHERE " + ID + " = (SELECT MAX(" + ID + ") FROM " + TABLE_NAME + ")")
     @Override
+    @Nullable
     SearchHistoryEntry getLatestEntry();
 
     @Query("DELETE FROM " + TABLE_NAME)

File: app/src/main/java/org/schabi/newpipe/database/stream/StreamStatisticsEntry.java
Patch:
@@ -2,9 +2,8 @@
 
 import android.arch.persistence.room.ColumnInfo;
 
-import org.schabi.newpipe.database.stream.model.StreamHistoryEntity;
+import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
 import org.schabi.newpipe.database.stream.model.StreamEntity;
-import org.schabi.newpipe.extractor.stream.StreamInfoItem;
 import org.schabi.newpipe.extractor.stream.StreamType;
 import org.schabi.newpipe.info_list.stored.StreamStatisticsInfoItem;
 

File: app/src/main/java/org/schabi/newpipe/database/stream/dao/StreamDAO.java
Patch:
@@ -9,7 +9,7 @@
 import org.schabi.newpipe.database.BasicDAO;
 import org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity;
 import org.schabi.newpipe.database.stream.model.StreamEntity;
-import org.schabi.newpipe.database.stream.model.StreamHistoryEntity;
+import org.schabi.newpipe.database.history.model.StreamHistoryEntity;
 import org.schabi.newpipe.database.stream.model.StreamStateEntity;
 
 import java.util.ArrayList;
@@ -22,7 +22,7 @@
 import static org.schabi.newpipe.database.stream.model.StreamEntity.STREAM_SERVICE_ID;
 import static org.schabi.newpipe.database.stream.model.StreamEntity.STREAM_TABLE;
 import static org.schabi.newpipe.database.stream.model.StreamEntity.STREAM_URL;
-import static org.schabi.newpipe.database.stream.model.StreamHistoryEntity.STREAM_HISTORY_TABLE;
+import static org.schabi.newpipe.database.history.model.StreamHistoryEntity.STREAM_HISTORY_TABLE;
 import static org.schabi.newpipe.database.stream.model.StreamStateEntity.STREAM_STATE_TABLE;
 
 @Dao

File: app/src/main/java/org/schabi/newpipe/fragments/local/LocalPlaylistFragment.java
Patch:
@@ -288,7 +288,7 @@ public void handleResult(@NonNull List<StreamEntity> result) {
     private List<InfoItem> getStreamItems(final List<StreamEntity> streams) {
         List<InfoItem> items = new ArrayList<>(streams.size());
         for (final StreamEntity stream : streams) {
-            items.add(stream.toStreamInfoItem());
+            items.add(stream.toStreamEntityInfoItem());
         }
         return items;
     }

File: app/src/main/java/org/schabi/newpipe/info_list/stored/LocalPlaylistInfoItem.java
Patch:
@@ -5,7 +5,7 @@
 import static org.schabi.newpipe.util.Constants.NO_SERVICE_ID;
 import static org.schabi.newpipe.util.Constants.NO_URL;
 
-public class LocalPlaylistInfoItem extends PlaylistInfoItem {
+public final class LocalPlaylistInfoItem extends PlaylistInfoItem {
     private final long playlistId;
 
     public LocalPlaylistInfoItem(final long playlistId, final String name) {

File: app/src/main/java/org/schabi/newpipe/database/stream/dao/StreamHistoryDAO.java
Patch:
@@ -37,7 +37,7 @@ public Flowable<List<StreamHistoryEntity>> listByService(int serviceId) {
     }
 
     @Query("DELETE FROM " + STREAM_HISTORY_TABLE + " WHERE " + JOIN_STREAM_ID + " = :streamId")
-    public abstract int deleteHistory(final long streamId);
+    public abstract int deleteStreamHistory(final long streamId);
 
     @Query("SELECT * FROM " + STREAM_TABLE +
 

File: app/src/main/java/org/schabi/newpipe/database/stream/model/StreamEntity.java
Patch:
@@ -24,9 +24,9 @@ public class StreamEntity {
     final public static String STREAM_SERVICE_ID        = "service_id";
     final public static String STREAM_URL               = "url";
     final public static String STREAM_TITLE             = "title";
-    final public static String STREAM_TYPE              = "streamType";
-    final public static String STREAM_UPLOADER          = "uploader";
+    final public static String STREAM_TYPE              = "stream_type";
     final public static String STREAM_DURATION          = "duration";
+    final public static String STREAM_UPLOADER          = "uploader";
     final public static String STREAM_THUMBNAIL_URL     = "thumbnail_url";
 
     @PrimaryKey(autoGenerate = true)

File: app/src/main/java/org/schabi/newpipe/fragments/local/StreamRecordManager.java
Patch:
@@ -35,7 +35,7 @@ public Single<Long> onViewed(final StreamInfo info) {
     }
 
     public int removeHistory(final long streamId) {
-        return historyTable.deleteHistory(streamId);
+        return historyTable.deleteStreamHistory(streamId);
     }
 
     public Flowable<List<StreamStatisticsEntry>> getStatistics() {

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -183,7 +183,7 @@ protected Intent getSwitchIntent(final Class clazz) {
                 this.player.getPlaybackSpeed(),
                 this.player.getPlaybackPitch(),
                 null
-        );
+        ).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
     }
     ////////////////////////////////////////////////////////////////////////////
     // Service Connection

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -72,7 +72,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         int id = item.getItemId();
         if (id == android.R.id.home) {
-            finish();
+            if (getSupportFragmentManager().getBackStackEntryCount() == 0) {
+                finish();
+            } else getSupportFragmentManager().popBackStack();
         }
         return true;
     }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -379,7 +379,7 @@ public void sync(@NonNull final PlayQueueItem item, @Nullable final StreamInfo i
             titleTextView.setText(getVideoTitle());
             channelTextView.setText(getUploaderName());
 
-            playPauseButton.setImageResource(R.drawable.ic_pause_white);
+            //playPauseButton.setImageResource(R.drawable.ic_pause_white);
         }
 
         @Override

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -19,6 +19,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.exceptions.ReCaptchaException;
+import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
@@ -252,9 +253,10 @@ protected void openUrlInBrowser(String url) {
         startActivity(intent);
     }
 
-    protected void shareUrl(String url) {
+    protected void shareUrl(String subject, String url) {
         Intent intent = new Intent(Intent.ACTION_SEND);
         intent.setType("text/plain");
+        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
         intent.putExtra(Intent.EXTRA_TEXT, url);
         startActivity(Intent.createChooser(intent, getString(R.string.share_dialog_title)));
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -231,7 +231,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 openUrlInBrowser(url);
                 break;
             case R.id.menu_item_share: {
-                shareUrl(url);
+                shareUrl(name, url);
                 break;
             }
             default:

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -167,7 +167,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 openUrlInBrowser(url);
                 break;
             case R.id.menu_item_share: {
-                shareUrl(url);
+                shareUrl(name, url);
                 break;
             }
             default:

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -19,6 +19,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.ReCaptchaActivity;
 import org.schabi.newpipe.extractor.exceptions.ReCaptchaException;
+import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
@@ -252,9 +253,10 @@ protected void openUrlInBrowser(String url) {
         startActivity(intent);
     }
 
-    protected void shareUrl(String url) {
+    protected void shareUrl(String subject, String url) {
         Intent intent = new Intent(Intent.ACTION_SEND);
         intent.setType("text/plain");
+        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
         intent.putExtra(Intent.EXTRA_TEXT, url);
         startActivity(Intent.createChooser(intent, getString(R.string.share_dialog_title)));
     }

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -231,7 +231,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 openUrlInBrowser(url);
                 break;
             case R.id.menu_item_share: {
-                shareUrl(url);
+                shareUrl(name, url);
                 break;
             }
             default:

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -167,7 +167,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 openUrlInBrowser(url);
                 break;
             case R.id.menu_item_share: {
-                shareUrl(url);
+                shareUrl(name, url);
                 break;
             }
             default:

File: app/src/main/java/org/schabi/newpipe/RouterPopupActivity.java
Patch:
@@ -18,9 +18,8 @@ public class RouterPopupActivity extends RouterActivity {
 
     @Override
     protected void handleUrl(String url) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
-                && !PermissionHelper.checkSystemAlertWindowPermission(this)) {
-            Toast.makeText(this, R.string.msg_popup_permission, Toast.LENGTH_LONG).show();
+        if (!PermissionHelper.isPopupEnabled(this)) {
+            PermissionHelper.showPopupEnablementToast(this);
             finish();
             return;
         }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -545,8 +545,8 @@ public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
                 }
             });
         }
-
-        if (TextUtils.isEmpty(info.getUploaderAvatarUrl())) {
+        
+        if (!TextUtils.isEmpty(info.getUploaderAvatarUrl())) {
             imageLoader.displayImage(info.getUploaderAvatarUrl(), uploaderThumb, DISPLAY_AVATAR_OPTIONS);
         }
     }

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -219,6 +219,7 @@ public void onUnrecoverableError(List<Throwable> exception, UserAction userActio
 
         if (serviceName == null) serviceName = "none";
         if (request == null) request = "none";
+
         ErrorActivity.reportError(getContext(), exception, MainActivity.class, null, ErrorActivity.ErrorInfo.make(userAction, serviceName, request, errorId));
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -449,6 +449,7 @@ public void onSuggestionItemSelected(SuggestionItem item) {
             @Override
             public void onSuggestionItemInserted(SuggestionItem item) {
                 searchEditText.setText(item.query);
+                searchEditText.setSelection(searchEditText.getText().length());
             }
 
             @Override

File: app/src/main/java/org/schabi/newpipe/RouterPopupActivity.java
Patch:
@@ -21,6 +21,7 @@ protected void handleUrl(String url) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
                 && !PermissionHelper.checkSystemAlertWindowPermission(this)) {
             Toast.makeText(this, R.string.msg_popup_permission, Toast.LENGTH_LONG).show();
+            finish();
             return;
         }
         StreamingService service;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -485,6 +485,8 @@ public void held(StreamInfoItem selectedItem) {
 
     private void showStreamDialog(final StreamInfoItem item) {
         final Context context = getContext();
+        if (context == null || context.getResources() == null || getActivity() == null) return;
+
         final String[] commands = new String[]{
                 context.getResources().getString(R.string.enqueue_on_background),
                 context.getResources().getString(R.string.enqueue_on_popup)

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java
Patch:
@@ -192,6 +192,8 @@ protected void onScrollToBottom() {
 
     protected void showStreamDialog(final StreamInfoItem item) {
         final Context context = getContext();
+        if (context == null || context.getResources() == null || getActivity() == null) return;
+
         final String[] commands = new String[]{
                 context.getResources().getString(R.string.enqueue_on_background),
                 context.getResources().getString(R.string.enqueue_on_popup)

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -154,6 +154,8 @@ protected View getListHeader() {
     @Override
     protected void showStreamDialog(final StreamInfoItem item) {
         final Context context = getContext();
+        if (context == null || context.getResources() == null || getActivity() == null) return;
+
         final String[] commands = new String[]{
                 context.getResources().getString(R.string.enqueue_on_background),
                 context.getResources().getString(R.string.enqueue_on_popup),

File: app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java
Patch:
@@ -15,7 +15,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -109,6 +108,8 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     @Override
     protected void showStreamDialog(final StreamInfoItem item) {
         final Context context = getContext();
+        if (context == null || context.getResources() == null || getActivity() == null) return;
+
         final String[] commands = new String[]{
                 context.getResources().getString(R.string.enqueue_on_background),
                 context.getResources().getString(R.string.enqueue_on_popup),

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -55,7 +55,7 @@
 public class KioskFragment extends BaseListInfoFragment<KioskInfo> {
 
     @State
-    private String kioskId = "";
+    protected String kioskId = "";
 
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.NavigationHelper;
 
+import icepick.State;
 import io.reactivex.Single;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
@@ -53,6 +54,7 @@
 
 public class KioskFragment extends BaseListInfoFragment<KioskInfo> {
 
+    @State
     private String kioskId = "";
 
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java
Patch:
@@ -200,8 +200,6 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         ActionBar supportActionBar = activity.getSupportActionBar();
         if(useAsFrontPage) {
             supportActionBar.setDisplayHomeAsUpEnabled(false);
-            menuRssButton.setVisible(false);
-
         } else {
             inflater.inflate(R.menu.menu_channel, menu);
 

File: app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java
Patch:
@@ -50,6 +50,7 @@ public abstract class BaseStateFragment<I> extends BaseFragment implements ViewC
     protected Button errorButtonRetry;
     protected TextView errorTextView;
 
+    @State
     protected boolean useAsFrontPage = false;
 
     @Override

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -123,7 +123,7 @@ public PlayQueueItem getItem() {
      * May throw {@link IndexOutOfBoundsException}.
      * */
     public PlayQueueItem getItem(int index) {
-        if (index >= streams.size() || streams.get(index) == null) return null;
+        if (index < 0 || index >= streams.size() || streams.get(index) == null) return null;
         return streams.get(index);
     }
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -362,6 +362,7 @@ private void updateScreenSize() {
     }
 
     private void updatePopupSize(int width, int height) {
+        if (playerImpl == null) return;
         if (DEBUG) Log.d(TAG, "updatePopupSize() called with: width = [" + width + "], height = [" + height + "]");
 
         width = (int) (width > maximumWidth ? maximumWidth : width < minimumWidth ? minimumWidth : width);

File: app/src/main/java/org/schabi/newpipe/info_list/holder/StreamMiniInfoItemHolder.java
Patch:
@@ -133,7 +133,7 @@ public boolean onMenuItemClick(MenuItem menuItem) {
             }
         });
         
-        final MenuItem mainPlay = actionMenu.getMenu().add(R.string.play_all);
+        final MenuItem mainPlay = actionMenu.getMenu().add(R.string.play_btn_text);
         mainPlay.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
             @Override
             public boolean onMenuItemClick(MenuItem menuItem) {

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -132,8 +132,8 @@ public IBinder onBind(Intent intent) {
     //////////////////////////////////////////////////////////////////////////*/
 
     public void openControl(final Context context) {
-        final Intent intent = new Intent(context, BackgroundPlayerActivity.class);
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+        Intent intent = new Intent(context, BackgroundPlayerActivity.class);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {
             intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         }
         context.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -314,8 +314,8 @@ public void onClose() {
     }
 
     public void openControl(final Context context) {
-        final Intent intent = new Intent(context, PopupVideoPlayerActivity.class);
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+        Intent intent = new Intent(context, PopupVideoPlayerActivity.class);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {
             intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         }
         context.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -132,8 +132,8 @@ public IBinder onBind(Intent intent) {
     //////////////////////////////////////////////////////////////////////////*/
 
     public void openControl(final Context context) {
-        final Intent intent = new Intent(context, BackgroundPlayerActivity.class);
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+        Intent intent = new Intent(context, BackgroundPlayerActivity.class);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {
             intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         }
         context.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -314,8 +314,8 @@ public void onClose() {
     }
 
     public void openControl(final Context context) {
-        final Intent intent = new Intent(context, PopupVideoPlayerActivity.class);
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+        Intent intent = new Intent(context, PopupVideoPlayerActivity.class);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {
             intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         }
         context.startActivity(intent);

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -178,7 +178,8 @@ private void onPlayQueueChanged(final PlayQueueEvent event) {
             case REMOVE:
                 final RemoveEvent removeEvent = (RemoveEvent) event;
                 remove(removeEvent.getRemoveIndex());
-                sync();
+                // Sync only when the currently playing is removed
+                if (removeEvent.getQueueIndex() == removeEvent.getRemoveIndex()) sync();
                 break;
             case MOVE:
                 final MoveEvent moveEvent = (MoveEvent) event;

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueueItemHolder.java
Patch:
@@ -32,7 +32,7 @@
 public class PlayQueueItemHolder extends RecyclerView.ViewHolder {
 
     public final TextView itemVideoTitleView, itemDurationView, itemAdditionalDetailsView;
-    public final ImageView itemThumbnailView, itemHandle;
+    public final ImageView itemSelected, itemThumbnailView, itemHandle;
 
     public final View itemRoot;
 
@@ -42,6 +42,7 @@ public PlayQueueItemHolder(View v) {
         itemVideoTitleView = v.findViewById(R.id.itemVideoTitleView);
         itemDurationView = v.findViewById(R.id.itemDurationView);
         itemAdditionalDetailsView = v.findViewById(R.id.itemAdditionalDetails);
+        itemSelected = v.findViewById(R.id.itemSelected);
         itemThumbnailView = v.findViewById(R.id.itemThumbnailView);
         itemHandle = v.findViewById(R.id.itemHandle);
     }

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayerActivity.java
Patch:
@@ -6,7 +6,7 @@
 
 public final class BackgroundPlayerActivity extends ServicePlayerActivity {
 
-    private static final String TAG = "BGPlayerActivity";
+    private static final String TAG = "BackgroundPlayerActivity";
 
     @Override
     public String getTag() {

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -65,8 +65,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static org.schabi.newpipe.player.refactor.PlayerHelper.formatSpeed;
-import static org.schabi.newpipe.player.refactor.PlayerHelper.getTimeString;
+import static org.schabi.newpipe.player.helper.PlayerHelper.formatSpeed;
+import static org.schabi.newpipe.player.helper.PlayerHelper.getTimeString;
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 
 /**

File: app/src/main/java/org/schabi/newpipe/player/helper/CacheFactory.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.player.refactor;
+package org.schabi.newpipe.player.helper;
 
 import android.content.Context;
 import android.support.annotation.NonNull;

File: app/src/main/java/org/schabi/newpipe/player/helper/LoadController.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.player.refactor;
+package org.schabi.newpipe.player.helper;
 
 import android.content.Context;
 

File: app/src/main/java/org/schabi/newpipe/player/helper/LockManager.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.player.refactor;
+package org.schabi.newpipe.player.helper;
 
 import android.content.Context;
 import android.net.wifi.WifiManager;

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -49,7 +49,6 @@
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.Player;
 import com.google.android.exoplayer2.SimpleExoPlayer;
-import com.google.android.exoplayer2.source.ConcatenatingMediaSource;
 import com.google.android.exoplayer2.source.MediaSource;
 import com.google.android.exoplayer2.source.MergingMediaSource;
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
@@ -66,6 +65,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import static org.schabi.newpipe.player.refactor.PlayerHelper.formatSpeed;
+import static org.schabi.newpipe.player.refactor.PlayerHelper.getTimeString;
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 
 /**

File: app/src/main/java/org/schabi/newpipe/player/playback/DeferredMediaSource.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.player.mediasource;
+package org.schabi.newpipe.player.playback;
 
 import android.support.annotation.NonNull;
 import android.util.Log;

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -9,7 +9,6 @@
 import org.reactivestreams.Subscriber;
 import org.reactivestreams.Subscription;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
-import org.schabi.newpipe.player.mediasource.DeferredMediaSource;
 import org.schabi.newpipe.playlist.PlayQueue;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 import org.schabi.newpipe.playlist.events.MoveEvent;
@@ -29,8 +28,8 @@ public class MediaSourceManager implements DeferredMediaSource.Callback {
     // One-side rolling window size for default loading
     // Effectively loads windowSize * 2 + 1 streams, must be greater than 0
     private final int windowSize;
-    private PlaybackListener playbackListener;
-    private PlayQueue playQueue;
+    private final PlaybackListener playbackListener;
+    private final PlayQueue playQueue;
 
     private DynamicConcatenatingMediaSource sources;
 

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -139,7 +139,7 @@ public void onSubscribe(@NonNull Subscription d) {
 
             @Override
             public void onNext(@NonNull PlayQueueEvent playQueueMessage) {
-                onPlayQueueChanged(playQueueMessage);
+                if (playQueueReactor != null) onPlayQueueChanged(playQueueMessage);
             }
 
             @Override
@@ -153,6 +153,7 @@ public void onComplete() {}
     private void onPlayQueueChanged(final PlayQueueEvent event) {
         if (playQueue.isEmpty()) {
             playbackListener.shutdown();
+            return;
         }
 
         // why no pattern matching in Java =(
@@ -170,7 +171,7 @@ private void onPlayQueueChanged(final PlayQueueEvent event) {
                 break;
             case REMOVE:
                 final RemoveEvent removeEvent = (RemoveEvent) event;
-                remove(removeEvent.index());
+                remove(removeEvent.getRemoveIndex());
                 sync();
                 break;
             case MOVE:

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -158,8 +158,8 @@ private void onPlayQueueChanged(final PlayQueueEvent event) {
         // why no pattern matching in Java =(
         switch (event.type()) {
             case INIT:
-            case QUALITY:
             case REORDER:
+            case ERROR:
                 reset();
                 break;
             case APPEND:
@@ -177,7 +177,6 @@ private void onPlayQueueChanged(final PlayQueueEvent event) {
                 final MoveEvent moveEvent = (MoveEvent) event;
                 move(moveEvent.getFromIndex(), moveEvent.getToIndex());
                 break;
-            case ERROR:
             case RECOVERY:
             default:
                 break;

File: app/src/main/java/org/schabi/newpipe/playlist/events/PlayQueueEventType.java
Patch:
@@ -18,9 +18,6 @@ public enum PlayQueueEventType {
     // sent when queue is shuffled
     REORDER,
 
-    // sent when quality index is set on a stream
-    QUALITY,
-
     // sent when recovery record is set on a stream
     RECOVERY,
 

File: app/src/main/java/org/schabi/newpipe/player/playback/PlaybackListener.java
Patch:
@@ -43,7 +43,7 @@ public interface PlaybackListener {
      *
      * May be called at any time.
      * */
-    MediaSource sourceOf(final StreamInfo info);
+    MediaSource sourceOf(final PlayQueueItem item, final StreamInfo info);
 
     /**
      * Called when the play queue can no longer to played or used.

File: app/src/main/java/org/schabi/newpipe/playlist/events/AppendEvent.java
Patch:
@@ -1,12 +1,12 @@
 package org.schabi.newpipe.playlist.events;
 
 
-public class AppendEvent implements PlayQueueMessage {
+public class AppendEvent implements PlayQueueEvent {
     final private int amount;
 
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.APPEND;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.APPEND;
     }
 
     public AppendEvent(final int amount) {

File: app/src/main/java/org/schabi/newpipe/playlist/events/ErrorEvent.java
Patch:
@@ -1,12 +1,12 @@
 package org.schabi.newpipe.playlist.events;
 
 
-public class ErrorEvent implements PlayQueueMessage {
+public class ErrorEvent implements PlayQueueEvent {
     final private int index;
 
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.ERROR;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.ERROR;
     }
 
     public ErrorEvent(final int index) {

File: app/src/main/java/org/schabi/newpipe/playlist/events/InitEvent.java
Patch:
@@ -1,8 +1,8 @@
 package org.schabi.newpipe.playlist.events;
 
-public class InitEvent implements PlayQueueMessage {
+public class InitEvent implements PlayQueueEvent {
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.INIT;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.INIT;
     }
 }

File: app/src/main/java/org/schabi/newpipe/playlist/events/MoveEvent.java
Patch:
@@ -1,12 +1,12 @@
 package org.schabi.newpipe.playlist.events;
 
-public class MoveEvent implements PlayQueueMessage {
+public class MoveEvent implements PlayQueueEvent {
     final private int fromIndex;
     final private int toIndex;
 
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.MOVE;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.MOVE;
     }
 
     public MoveEvent(final int oldIndex, final int newIndex) {

File: app/src/main/java/org/schabi/newpipe/playlist/events/RemoveEvent.java
Patch:
@@ -1,12 +1,12 @@
 package org.schabi.newpipe.playlist.events;
 
 
-public class RemoveEvent implements PlayQueueMessage {
+public class RemoveEvent implements PlayQueueEvent {
     final private int index;
 
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.REMOVE;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.REMOVE;
     }
 
     public RemoveEvent(final int index) {

File: app/src/main/java/org/schabi/newpipe/playlist/events/ReorderEvent.java
Patch:
@@ -1,9 +1,9 @@
 package org.schabi.newpipe.playlist.events;
 
-public class ReorderEvent implements PlayQueueMessage {
+public class ReorderEvent implements PlayQueueEvent {
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.REORDER;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.REORDER;
     }
 
     public ReorderEvent() {

File: app/src/main/java/org/schabi/newpipe/playlist/events/SelectEvent.java
Patch:
@@ -1,13 +1,13 @@
 package org.schabi.newpipe.playlist.events;
 
 
-public class SelectEvent implements PlayQueueMessage {
+public class SelectEvent implements PlayQueueEvent {
     final private int oldIndex;
     final private int newIndex;
 
     @Override
-    public PlayQueueEvent type() {
-        return PlayQueueEvent.SELECT;
+    public PlayQueueEventType type() {
+        return PlayQueueEventType.SELECT;
     }
 
     public SelectEvent(final int oldIndex, final int newIndex) {

File: app/src/main/java/org/schabi/newpipe/player/ServicePlayerActivity.java
Patch:
@@ -382,11 +382,9 @@ public void onClick(View view) {
 
         } else if (view.getId() == backwardButton.getId()) {
             player.onPlayPrevious();
-            scrollToSelected();
 
         } else if (view.getId() == playPauseButton.getId()) {
             player.onVideoPlayPause();
-            scrollToSelected();
 
         } else if (view.getId() == forwardButton.getId()) {
             player.onPlayNext();

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -194,8 +194,6 @@ public Flowable<PlayQueueMessage> getBroadcastReceiver() {
      * Will emit a {@link SelectEvent} if the index is not the current playing index.
      * */
     public synchronized void setIndex(final int index) {
-        if (index == getIndex()) return;
-
         final int oldIndex = getIndex();
 
         int newIndex = index;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -289,9 +289,7 @@ protected class BasePlayerImpl extends BasePlayer {
         }
 
         @Override
-        public void handleIntent(Intent intent) {
-            super.handleIntent(intent);
-
+        protected void postProcess(@NonNull final Intent intent) {
             resetNotification();
             startForeground(NOTIFICATION_ID, notBuilder.build());
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -251,6 +251,8 @@ public void accept(Long aLong) throws Exception {
                 });
     }
 
+    protected abstract void postProcess(@NonNull final Intent intent);
+
     public void handleIntent(Intent intent) {
         if (DEBUG) Log.d(TAG, "handleIntent() called with: intent = [" + intent + "]");
         if (intent == null) return;
@@ -284,6 +286,7 @@ public void handleIntent(Intent intent) {
 
         // Good to go...
         initPlayback(this, queue);
+        postProcess(intent);
     }
 
     protected void initPlayback(@NonNull final PlaybackListener listener, @NonNull final PlayQueue queue) {

File: app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java
Patch:
@@ -273,7 +273,7 @@ private void populateSources() {
      * If the play queue index already exists, then the insert is ignored.
      * */
     private void insert(final int queueIndex, final DeferredMediaSource source) {
-        if (queueIndex < 0) return;
+        if (queueIndex < 0 || queueIndex < sources.getSize()) return;
 
         sources.addMediaSource(queueIndex, source);
     }

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -68,6 +68,7 @@
 import org.schabi.newpipe.player.event.PlayerEventListener;
 import org.schabi.newpipe.player.old.PlayVideoActivity;
 import org.schabi.newpipe.player.playback.MediaSourceManager;
+import org.schabi.newpipe.playlist.PlayQueue;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 import org.schabi.newpipe.playlist.SinglePlayQueue;
 import org.schabi.newpipe.report.ErrorActivity;
@@ -852,9 +853,7 @@ public void onReceive(final StreamInfo info) {
             mainHandler.post(new Runnable() {
                 @Override
                 public void run() {
-                    playerImpl.playQueue = new SinglePlayQueue(info);
-                    playerImpl.playQueue.init();
-                    playerImpl.playbackManager = new MediaSourceManager(playerImpl, playerImpl.playQueue);
+                    playerImpl.initPlayback(playerImpl, new SinglePlayQueue(info));
                 }
             });
         }

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -139,7 +139,10 @@ public void onDestroy() {
         if (DEBUG) Log.d(TAG, "destroy() called");
         releaseWifiAndCpu();
         stopForeground(true);
+
         if (basePlayerImpl != null) basePlayerImpl.destroy();
+        basePlayerImpl = null;
+        mBinder = null;
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -469,8 +469,8 @@ public MediaSource sourceOf(final StreamInfo info) {
         @Override
         public void shutdown() {
             super.shutdown();
-            stopSelf();
             stopActivityBinding();
+            stopSelf();
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -36,6 +36,7 @@
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 import android.widget.RemoteViews;
+import android.widget.Toast;
 
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.exoplayer2.Player;
@@ -402,6 +403,7 @@ public void destroy() {
         @Override
         public void onError(Exception exception) {
             exception.printStackTrace();
+            Toast.makeText(context, "Failed to play this audio", Toast.LENGTH_SHORT).show();
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/playlist/ExternalPlayQueue.java
Patch:
@@ -20,8 +20,6 @@
 public final class ExternalPlayQueue extends PlayQueue {
     private final String TAG = "ExternalPlayQueue@" + Integer.toHexString(hashCode());
 
-    private static final int RETRY_COUNT = 2;
-
     private boolean isComplete;
 
     private int serviceId;
@@ -54,7 +52,6 @@ public void fetch() {
        ExtractorHelper.getMorePlaylistItems(this.serviceId, this.baseUrl, this.nextUrl)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .retry(RETRY_COUNT)
                 .subscribe(getPlaylistObserver());
     }
 
@@ -75,6 +72,9 @@ public void onSuccess(@NonNull ListExtractor.NextItemsResult result) {
                 nextUrl = result.nextItemsUrl;
 
                 append(extractPlaylistItems(result.nextItemsList));
+
+                fetchReactor.dispose();
+                fetchReactor = null;
             }
 
             @Override

File: app/src/main/java/org/schabi/newpipe/playlist/SinglePlayQueue.java
Patch:
@@ -7,8 +7,8 @@
 public final class SinglePlayQueue extends PlayQueue {
     public static final String STREAM = "stream";
 
-    public SinglePlayQueue(final StreamInfo info, final int selectedQualityIndex) {
-        super(0, Collections.singletonList(new PlayQueueItem(info, selectedQualityIndex)));
+    public SinglePlayQueue(final StreamInfo info) {
+        super(0, Collections.singletonList(new PlayQueueItem(info)));
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -31,6 +31,7 @@
 import android.os.IBinder;
 import android.os.PowerManager;
 import android.support.annotation.IntRange;
+import android.support.annotation.Nullable;
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 import android.widget.RemoteViews;
@@ -383,8 +384,8 @@ public void onError(Exception exception) {
         //////////////////////////////////////////////////////////////////////////*/
 
         @Override
-        public void sync(final StreamInfo info, final int sortedStreamsIndex) {
-            super.sync(info, sortedStreamsIndex);
+        public void sync(@Nullable final StreamInfo info) {
+            super.sync(info);
 
             notRemoteView.setTextViewText(R.id.notificationSongName, getVideoTitle());
             notRemoteView.setTextViewText(R.id.notificationArtist, getUploaderName());

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -238,8 +238,8 @@ public void shutdown() {
         }
 
         @Override
-        public void sync(final StreamInfo info, final int sortedStreamsIndex) {
-            super.sync(info, sortedStreamsIndex);
+        public void sync(@Nullable final StreamInfo info) {
+            super.sync(info);
             titleTextView.setText(getVideoTitle());
             channelTextView.setText(getUploaderName());
 

File: app/src/main/java/org/schabi/newpipe/playlist/events/PlayQueueEvent.java
Patch:
@@ -15,9 +15,6 @@ public enum PlayQueueEvent {
     // sent when two streams swap place in the play queue
     MOVE,
 
-    // sent when a stream is updated
-    UPDATE,
-
     // send when queue is shuffled
     REORDER
 }

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -55,7 +55,7 @@
  *
  * @author mauriciocolli
  */
-public class BackgroundPlayer extends Service {
+public final class BackgroundPlayer extends Service {
     private static final String TAG = "BackgroundPlayer";
     private static final boolean DEBUG = BasePlayer.DEBUG;
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -87,7 +87,7 @@
  *
  * @author mauriciocolli
  */
-public class PopupVideoPlayer extends Service {
+public final class PopupVideoPlayer extends Service {
     private static final String TAG = ".PopupVideoPlayer";
     private static final boolean DEBUG = BasePlayer.DEBUG;
     private static final int SHUTDOWN_FLING_VELOCITY = 10000;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -458,8 +458,8 @@ public void onBroadcastReceived(Intent intent) {
         //////////////////////////////////////////////////////////////////////////*/
 
         @Override
-        public void onLoading() {
-            super.onLoading();
+        public void onBlocked() {
+            super.onBlocked();
 
             setControlsOpacity(77);
             updateNotification(-1);

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -342,8 +342,8 @@ public void onError(Exception exception) {
         //////////////////////////////////////////////////////////////////////////*/
 
         @Override
-        public void onLoading() {
-            super.onLoading();
+        public void onBlocked() {
+            super.onBlocked();
             playPauseButton.setImageResource(R.drawable.ic_pause_white);
             animateView(playPauseButton, AnimationUtils.Type.SCALE_AND_ALPHA, false, 100);
             getRootView().setKeepScreenOn(true);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -517,8 +517,8 @@ public void onBroadcastReceived(Intent intent) {
         //////////////////////////////////////////////////////////////////////////*/
 
         @Override
-        public void onLoading() {
-            super.onLoading();
+        public void onBlocked() {
+            super.onBlocked();
             updateNotification(R.drawable.ic_play_arrow_white);
         }
 

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -72,7 +72,7 @@ public static Intent getOpenVideoPlayerIntent(Context context, Class targetClazz
                 .putExtra(BasePlayer.INTENT_TYPE, VideoPlayer.PLAYER_INTENT)
                 .putExtra(VideoPlayer.PLAY_QUEUE, instance.getPlayQueue())
                 .putExtra(VideoPlayer.RESTORE_QUEUE_INDEX, instance.getCurrentQueueIndex())
-                .putExtra(BasePlayer.START_POSITION, instance.getPlayer().getCurrentPosition())
+                .putExtra(BasePlayer.START_POSITION, instance.getPlayerCurrentPosition())
                 .putExtra(BasePlayer.PLAYBACK_SPEED, instance.getPlaybackSpeed());
     }
 

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -660,7 +660,6 @@ public void unblock() {
         if (DEBUG) Log.d(TAG, "Unblocking...");
 
         simpleExoPlayer.prepare(playbackManager.getMediaSource(), true, true);
-        isPrepared = true;
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -26,7 +26,6 @@
 
 public abstract class PlayQueue implements Serializable {
     private final String TAG = "PlayQueue@" + Integer.toHexString(hashCode());
-    private final int INDEX_CHANGE_DEBOUNCE = 350;
 
     public static final boolean DEBUG = true;
 
@@ -59,7 +58,7 @@ public void init() {
 
         broadcastReceiver = Flowable.merge(
                 streamsEventBroadcast.toFlowable(BackpressureStrategy.BUFFER),
-                indexEventBroadcast.toFlowable(BackpressureStrategy.BUFFER).debounce(INDEX_CHANGE_DEBOUNCE, TimeUnit.MILLISECONDS)
+                indexEventBroadcast.toFlowable(BackpressureStrategy.BUFFER)
         ).startWith(new InitEvent());
 
         if (DEBUG) broadcastReceiver.subscribe(getSelfReporter());

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -695,6 +695,7 @@ public void onVideoPlayPause() {
         if (!isPlaying()) audioManager.requestAudioFocus(this, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);
         else audioManager.abandonAudioFocus(this);
 
+        if (getCurrentState() == STATE_COMPLETED) playQueue.setIndex(0);
         simpleExoPlayer.setPlayWhenReady(!isPlaying());
     }
 

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -124,7 +124,7 @@ public Flowable<PlayQueueMessage> getBroadcastReceiver() {
     // Write ops
     //////////////////////////////////////////////////////////////////////////*/
 
-    private synchronized void setIndex(final int index) {
+    public synchronized void setIndex(final int index) {
         if (index < 0 || index >= streams.size()) return;
 
         queueIndex.set(Math.min(Math.max(0, index), streams.size() - 1));

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueue.java
Patch:
@@ -10,7 +10,7 @@
 import org.schabi.newpipe.playlist.events.PlayQueueMessage;
 import org.schabi.newpipe.playlist.events.RemoveEvent;
 import org.schabi.newpipe.playlist.events.SelectEvent;
-import org.schabi.newpipe.playlist.events.SwapEvent;
+import org.schabi.newpipe.playlist.events.MoveEvent;
 
 import java.io.Serializable;
 import java.util.ArrayList;
@@ -28,7 +28,7 @@ public abstract class PlayQueue implements Serializable {
     private final String TAG = "PlayQueue@" + Integer.toHexString(hashCode());
     private final int INDEX_CHANGE_DEBOUNCE = 350;
 
-    public static final boolean DEBUG = false;
+    public static final boolean DEBUG = true;
 
     private final ArrayList<PlayQueueItem> streams;
     private final AtomicInteger queueIndex;
@@ -178,7 +178,7 @@ protected synchronized void swap(final int source, final int target) {
                 queueIndex.set(newIndex);
             }
 
-            broadcast(new SwapEvent(source, target));
+            broadcast(new MoveEvent(source, target));
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/playlist/events/MoveEvent.java
Patch:
@@ -1,16 +1,16 @@
 package org.schabi.newpipe.playlist.events;
 
 
-public class SwapEvent implements PlayQueueMessage {
+public class MoveEvent implements PlayQueueMessage {
     final private int from;
     final private int to;
 
     @Override
     public PlayQueueEvent type() {
-        return PlayQueueEvent.SWAP;
+        return PlayQueueEvent.MOVE;
     }
 
-    public SwapEvent(final int from, final int to) {
+    public MoveEvent(final int from, final int to) {
         this.from = from;
         this.to = to;
     }

File: app/src/main/java/org/schabi/newpipe/playlist/events/PlayQueueEvent.java
Patch:
@@ -16,6 +16,6 @@ public enum PlayQueueEvent {
     REMOVE,
 
     // sent when two streams swap place in the play queue
-    SWAP
+    MOVE
 }
 

File: app/src/main/java/org/schabi/newpipe/playlist/events/PlayQueueMessage.java
Patch:
@@ -1,5 +1,7 @@
 package org.schabi.newpipe.playlist.events;
 
-public interface PlayQueueMessage {
+import java.io.Serializable;
+
+public interface PlayQueueMessage extends Serializable {
     PlayQueueEvent type();
 }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -471,13 +471,13 @@ private class MySimpleOnGestureListener extends GestureDetector.SimpleOnGestureL
         public boolean onDoubleTap(MotionEvent e) {
             if (DEBUG) Log.d(TAG, "onDoubleTap() called with: e = [" + e + "]" + "rawXy = " + e.getRawX() + ", " + e.getRawY() + ", xy = " + e.getX() + ", " + e.getY());
             //if (!playerImpl.isPlaying()) return false;
-            if (playerImpl.isPlayerBuffering()) return false;
+            if (!playerImpl.isPlayerReady()) return false;
 
             if (e.getX() > playerImpl.getRootView().getWidth() / 2)
-                playerImpl.playQueue.setIndex(playerImpl.playQueue.getIndex() + 1);
+                playerImpl.playQueue.offsetIndex(+1);
                 //playerImpl.onFastForward();
             else
-                playerImpl.playQueue.setIndex(playerImpl.playQueue.getIndex() - 1);
+                playerImpl.playQueue.offsetIndex(-1);
                 //playerImpl.onFastRewind();
 
             return true;

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -580,14 +580,14 @@ private class MySimpleOnGestureListener extends GestureDetector.SimpleOnGestureL
         public boolean onDoubleTap(MotionEvent e) {
             if (DEBUG)
                 Log.d(TAG, "onDoubleTap() called with: e = [" + e + "]" + "rawXy = " + e.getRawX() + ", " + e.getRawY() + ", xy = " + e.getX() + ", " + e.getY());
-            if (!playerImpl.isPlaying() || playerImpl.isPlayerBuffering()) return false;
+            if (!playerImpl.isPlaying() || !playerImpl.isPlayerReady()) return false;
 
             if (e.getX() > popupWidth / 2) {
                 //playerImpl.onFastForward();
-                playerImpl.playQueue.setIndex(playerImpl.playQueue.getIndex() + 1);
+                playerImpl.playQueue.offsetIndex(+1);
             } else {
                 //playerImpl.onFastRewind();
-                playerImpl.playQueue.setIndex(playerImpl.playQueue.getIndex() - 1);
+                playerImpl.playQueue.offsetIndex(-1);
             }
 
             return true;

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -57,6 +57,7 @@
 import org.schabi.newpipe.extractor.stream.AudioStream;
 import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.extractor.stream.VideoStream;
+import org.schabi.newpipe.player.playback.PlaybackManager;
 import org.schabi.newpipe.playlist.PlayQueue;
 import org.schabi.newpipe.playlist.PlayQueueItem;
 import org.schabi.newpipe.playlist.SinglePlayQueue;
@@ -66,7 +67,6 @@
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Vector;
 
 import static org.schabi.newpipe.util.AnimationUtils.animateView;
 
@@ -226,7 +226,7 @@ public void handleSinglePlaylistIntent(Intent intent) {
         playQueue = new SinglePlayQueue((StreamInfo) serializable, sortedStreamsIndex);
         playQueue.init();
 
-        playbackManager = new MediaSourceManager(this, playQueue);
+        playbackManager = new PlaybackManager(this, playQueue);
     }
 
     @SuppressWarnings("unchecked")
@@ -239,7 +239,7 @@ public void handlePlayerIntent(Intent intent) {
         playQueue = (PlayQueue) serializable;
         playQueue.init();
 
-        playbackManager = new MediaSourceManager(this, playQueue);
+        playbackManager = new PlaybackManager(this, playQueue);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -550,7 +550,7 @@ public void onPlayerError(ExoPlaybackException error) {
     @Override
     public void onPositionDiscontinuity() {
         int newIndex = simpleExoPlayer.getCurrentWindowIndex();
-        playbackManager.refresh(newIndex);
+        if (playbackManager.getCurrentSourceIndex() != newIndex) playbackManager.refresh(newIndex);
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/playlist/ExternalPlayQueue.java
Patch:
@@ -19,6 +19,7 @@
 
 public class ExternalPlayQueue extends PlayQueue {
     private final String TAG = "ExternalPlayQueue@" + Integer.toHexString(hashCode());
+    private static final int RETRY_COUNT = 2;
 
     private boolean isComplete;
 
@@ -55,7 +56,7 @@ public void fetch() {
        ExtractorHelper.getPlaylistInfo(this.serviceId, this.playlistUrl, false)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .retry(2)
+                .retry(RETRY_COUNT)
                 .subscribe(getPlaylistObserver());
     }
 

File: app/src/main/java/org/schabi/newpipe/database/stream/StreamDAO.java
Patch:
@@ -16,7 +16,7 @@
 public interface StreamDAO extends BasicDAO<StreamEntity> {
     @Override
     @Query("SELECT * FROM " + STREAM_TABLE)
-    Flowable<List<StreamEntity>> findAll();
+    Flowable<List<StreamEntity>> getAll();
 
     @Override
     @Query("SELECT * FROM " + STREAM_TABLE + " WHERE " + STREAM_SERVICE_ID + " = :serviceId")

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -40,7 +40,7 @@
 import android.widget.Toast;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.extractor.stream_info.StreamInfo;
+import org.schabi.newpipe.extractor.stream.StreamInfo;
 import org.schabi.newpipe.util.AnimationUtils;
 import org.schabi.newpipe.util.NavigationHelper;
 import org.schabi.newpipe.util.PermissionHelper;
@@ -232,7 +232,7 @@ public void handleIntent(Intent intent) {
         public void sync(final int windowIndex, final long windowPos, final StreamInfo info) {
             super.sync(windowIndex, windowPos, info);
             titleTextView.setText(getVideoTitle());
-            channelTextView.setText(getChannelName());
+            channelTextView.setText(getUploaderName());
 
             playPauseButton.setImageResource(R.drawable.ic_pause_white);
         }

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueueAdapter.java
Patch:
@@ -7,7 +7,6 @@
 import android.view.ViewGroup;
 
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.info_list.StreamInfoItemHolder;
 import org.schabi.newpipe.playlist.events.PlayQueueMessage;
 
 import java.util.List;
@@ -163,7 +162,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
             case 1:
                 return new HFHolder(footer);
             case 2:
-                return new StreamInfoItemHolder(LayoutInflater.from(parent.getContext())
+                return new PlayQueueItemHolder(LayoutInflater.from(parent.getContext())
                         .inflate(R.layout.play_queue_item, parent, false));
             default:
                 Log.e(TAG, "Trollolo");

File: app/src/main/java/org/schabi/newpipe/playlist/PlayQueueItemHolder.java
Patch:
@@ -7,7 +7,7 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.InfoItem;
-import org.schabi.newpipe.info_list.InfoItemHolder;
+import org.schabi.newpipe.info_list.holder.InfoItemHolder;
 
 /**
  * Created by Christian Schabesberger on 01.08.16.

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -542,6 +542,8 @@ public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
     @Override
     public void onPlayerError(ExoPlaybackException error) {
         if (DEBUG) Log.d(TAG, "onPlayerError() called with: error = [" + error + "]");
+        playbackManager.report(error);
+
         onError(error);
     }
 
@@ -598,10 +600,9 @@ public void sync(final int windowIndex, final long windowPos, final StreamInfo i
         channelName = info.uploader;
 
         if (simpleExoPlayer.getCurrentWindowIndex() != windowIndex) {
-            Log.e(TAG, "Rewinding to correct window");
+            Log.w(TAG, "Rewinding to correct window");
             simpleExoPlayer.seekTo(windowIndex, windowPos);
         } else {
-            Log.d(TAG, "Correct window");
             simpleExoPlayer.seekTo(windowPos);
         }
     }

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -326,7 +326,7 @@ public void onDismiss(PopupMenu menu) {
         public void onError(Exception exception) {
             exception.printStackTrace();
             Toast.makeText(context, "Failed to play this video", Toast.LENGTH_SHORT).show();
-            finish();
+            //finish();
         }
 
         /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/history/HistoryFragment.java
Patch:
@@ -241,6 +241,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         if (mHistoryIsEnabled) {
             mRecyclerView.setVisibility(View.VISIBLE);
         } else {
+            mRecyclerView.setVisibility(View.GONE);
             mDisabledView.setVisibility(View.VISIBLE);
         }
 

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -50,7 +50,7 @@ public void onKioskSelected(String kioskId, int service_id) {
                                             getContext());
 
                                     String summary =
-                                            String.format(getString(R.string.service_kosk_string),
+                                            String.format(getString(R.string.service_kiosk_string),
                                                     serviceName,
                                                     kioskName);
 
@@ -122,7 +122,7 @@ public void onResume() {
                         getContext());
 
                 String summary =
-                        String.format(getString(R.string.service_kosk_string),
+                        String.format(getString(R.string.service_kiosk_string),
                                 service.getServiceInfo().name,
                                 kioskName);
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -126,7 +126,7 @@ public SelectKioskAdapter()
 
             for(StreamingService service : NewPipe.getServices()) {
                 for(String kioskId : service.getKioskList().getAvailableKiosks()) {
-                    String name = String.format(getString(R.string.service_kosk_string),
+                    String name = String.format(getString(R.string.service_kiosk_string),
                             service.getServiceInfo().name,
                             KioskTranslator.getTranslatedKioskName(kioskId, getContext()));
                     kioskList.add(new Entry(

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -50,7 +50,7 @@ public void onKioskSelected(String kioskId, int service_id) {
                                             getContext());
 
                                     String summary =
-                                            String.format(getString(R.string.service_kosk_string),
+                                            String.format(getString(R.string.service_kiosk_string),
                                                     serviceName,
                                                     kioskName);
 
@@ -122,7 +122,7 @@ public void onResume() {
                         getContext());
 
                 String summary =
-                        String.format(getString(R.string.service_kosk_string),
+                        String.format(getString(R.string.service_kiosk_string),
                                 service.getServiceInfo().name,
                                 kioskName);
 

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -126,7 +126,7 @@ public SelectKioskAdapter()
 
             for(StreamingService service : NewPipe.getServices()) {
                 for(String kioskId : service.getKioskList().getAvailableKiosks()) {
-                    String name = String.format(getString(R.string.service_kosk_string),
+                    String name = String.format(getString(R.string.service_kiosk_string),
                             service.getServiceInfo().name,
                             KioskTranslator.getTranslatedKioskName(kioskId, getContext()));
                     kioskList.add(new Entry(

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -131,7 +131,7 @@ public SelectKioskAdapter()
                             KioskTranslator.getTranslatedKioskName(kioskId, getContext()));
                     kioskList.add(new Entry(
                             //ServiceIconMapper.getIconResource(service.getServiceId()),
-                            0,
+                            ServiceIconMapper.getIconResource(-1),
                             service.getServiceId(),
                             kioskId,
                             name));

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -234,7 +234,7 @@ private void createKioskMenu(Menu menu, MenuInflater menuInflater)
         StreamingService service = NewPipe.getService(currentServiceId);
         KioskList kl = service.getKioskList();
         int i = 0;
-        for(final String ks : kl.getAvailableKisoks()) {
+        for(final String ks : kl.getAvailableKiosks()) {
             menu.add(0, KIOSK_MENU_OFFSETT + i, Menu.NONE,
                     KioskTranslator.getTranslatedKioskName(ks, getContext()))
                     .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {

File: app/src/main/java/org/schabi/newpipe/settings/SelectKioskFragment.java
Patch:
@@ -125,7 +125,7 @@ public SelectKioskAdapter()
                 throws Exception {
 
             for(StreamingService service : NewPipe.getServices()) {
-                for(String kioskId : service.getKioskList().getAvailableKisoks()) {
+                for(String kioskId : service.getKioskList().getAvailableKiosks()) {
                     String name = service.getServiceInfo().name;
                     name += "/";
                     name += KioskTranslator.getTranslatedKioskName(kioskId, getContext());

File: app/src/main/java/org/schabi/newpipe/database/subscription/SubscriptionEntity.java
Patch:
@@ -7,6 +7,7 @@
 import android.arch.persistence.room.PrimaryKey;
 
 import org.schabi.newpipe.extractor.channel.ChannelInfoItem;
+import org.schabi.newpipe.util.Constants;
 
 import static org.schabi.newpipe.database.subscription.SubscriptionEntity.SUBSCRIPTION_SERVICE_ID;
 import static org.schabi.newpipe.database.subscription.SubscriptionEntity.SUBSCRIPTION_TABLE;
@@ -28,7 +29,7 @@ public class SubscriptionEntity {
     private long uid = 0;
 
     @ColumnInfo(name = SUBSCRIPTION_SERVICE_ID)
-    private int serviceId = -1;
+    private int serviceId = Constants.NO_SERVICE_ID;
 
     @ColumnInfo(name = SUBSCRIPTION_URL)
     private String url;

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -65,6 +65,7 @@
 import org.schabi.newpipe.player.old.PlayVideoActivity;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.InfoCache;
 import org.schabi.newpipe.util.ListHelper;
@@ -110,7 +111,7 @@ public class VideoDetailFragment extends BaseStateFragment<StreamInfo> implement
     private boolean wasRelatedStreamsExpanded = false;
 
     @State
-    protected int serviceId = -1;
+    protected int serviceId = Constants.NO_SERVICE_ID;
     @State
     protected String name;
     @State

File: app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java
Patch:
@@ -8,6 +8,7 @@
 
 import org.schabi.newpipe.extractor.ListExtractor;
 import org.schabi.newpipe.extractor.ListInfo;
+import org.schabi.newpipe.util.Constants;
 
 import java.util.Queue;
 
@@ -21,7 +22,7 @@
 public abstract class BaseListInfoFragment<I extends ListInfo> extends BaseListFragment<I, ListExtractor.NextItemsResult> {
 
     @State
-    protected int serviceId = -1;
+    protected int serviceId = Constants.NO_SERVICE_ID;
     @State
     protected String name;
     @State

File: app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java
Patch:
@@ -46,6 +46,7 @@
 import org.schabi.newpipe.fragments.list.BaseListFragment;
 import org.schabi.newpipe.history.HistoryListener;
 import org.schabi.newpipe.report.UserAction;
+import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.AnimationUtils;
 import org.schabi.newpipe.util.ExtractorHelper;
 import org.schabi.newpipe.util.LayoutManagerSmoothScroller;
@@ -100,7 +101,7 @@ public class SearchFragment extends BaseListFragment<SearchResult, ListExtractor
     private SearchEngine.Filter filter = SearchEngine.Filter.ANY;
 
     @State
-    protected int serviceId = -1;
+    protected int serviceId = Constants.NO_SERVICE_ID;
     @State
     protected String searchQuery;
     @State

File: app/src/main/java/org/schabi/newpipe/util/Constants.java
Patch:
@@ -9,4 +9,6 @@ public class Constants {
     public static final String KEY_QUERY = "key_query";
 
     public static final String KEY_THEME_CHANGE = "key_theme_change";
+
+    public static final int NO_SERVICE_ID = -1;
 }

File: app/src/main/java/org/schabi/newpipe/fragments/list/feed/FeedFragment.java
Patch:
@@ -122,7 +122,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 
         if(useAsFrontPage) {
             supportActionBar.setDisplayHomeAsUpEnabled(false);
-            supportActionBar.setDisplayShowTitleEnabled(false);
+            //supportActionBar.setDisplayShowTitleEnabled(false);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java
Patch:
@@ -24,6 +24,7 @@
 import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.ExtractorHelper;
+import org.schabi.newpipe.util.KioskTranslator;
 import org.schabi.newpipe.util.NavigationHelper;
 
 import io.reactivex.Single;
@@ -90,7 +91,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         ActionBar supportActionBar = activity.getSupportActionBar();
         if (supportActionBar != null && useAsFrontPage) {
-            supportActionBar.setDisplayShowTitleEnabled(false);
+            //supportActionBar.setDisplayShowTitleEnabled(false);
             supportActionBar.setDisplayHomeAsUpEnabled(false);
         }
     }
@@ -140,7 +141,7 @@ public void handleResult(@NonNull final KioskInfo result) {
         super.handleResult(result);
 
         animateView(headerRootLayout, true, 100);
-        headerTitleView.setText("★★ " +result.name+ " ★★");
+        headerTitleView.setText("★★ " + KioskTranslator.getTranslatedKioskName(result.id, getActivity())+ " ★★");
 
         if (!result.errors.isEmpty()) {
             showSnackBarError(result.errors,

File: app/src/main/java/org/schabi/newpipe/fragments/subscription/SubscriptionFragment.java
Patch:
@@ -62,6 +62,8 @@ public void onAttach(Context context) {
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
+        activity.getSupportActionBar().setDisplayShowTitleEnabled(true);
+        activity.setTitle(R.string.tab_subscriptions);
         return inflater.inflate(R.layout.fragment_subscription, container, false);
     }
 

File: app/src/main/java/org/schabi/newpipe/settings/ContentSettingsFragment.java
Patch:
@@ -94,6 +94,8 @@ private int getMainPageSummeryByKey(final String key) {
             return R.string.kiosk_page_summary;
         } else if(key.equals(getString(R.string.feed_page_key))) {
             return R.string.feed_page_summary;
+        } else if(key.equals(getString(R.string.subscription_page_key))) {
+            return R.string.subscription_page_summary;
         } else if(key.equals(getString(R.string.channel_page_key))) {
             return R.string.channel_page_summary;
         }

File: app/src/main/java/org/schabi/newpipe/settings/BasePreferenceFragment.java
Patch:
@@ -19,8 +19,8 @@ public abstract class BasePreferenceFragment extends PreferenceFragmentCompat {
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
         defaultPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java
Patch:
@@ -18,7 +18,7 @@
 
 import org.schabi.newpipe.BaseFragment;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.fragments.list.kisok.KioskFragment;
+import org.schabi.newpipe.fragments.list.kiosk.KioskFragment;
 import org.schabi.newpipe.fragments.subscription.SubscriptionFragment;
 import org.schabi.newpipe.util.NavigationHelper;
 

File: app/src/main/java/org/schabi/newpipe/util/ExtractorHelper.java
Patch:
@@ -134,7 +134,7 @@ public KioskInfo call() throws Exception {
         }));
     }
 
-    public static Single<NextItemsResult> getMoreKisokItems(final int serviceId, final String url, final String nextStreamsUrl) {
+    public static Single<NextItemsResult> getMoreKioskItems(final int serviceId, final String url, final String nextStreamsUrl) {
         return Single.fromCallable(new Callable<NextItemsResult>() {
             @Override
             public NextItemsResult call() throws Exception {

File: app/src/main/java/org/schabi/newpipe/RouterActivity.java
Patch:
@@ -43,9 +43,8 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     protected void handleUrl(String url) {
-        try {
-            NavigationHelper.openByLink(this, url);
-        } catch (Exception e) {
+        boolean success = NavigationHelper.openByLink(this, url);
+        if (!success) {
             Toast.makeText(this, R.string.url_not_supported_toast, Toast.LENGTH_LONG).show();
         }
 

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -27,6 +27,7 @@
 import android.widget.TextView;
 
 import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.Player;
 import com.google.android.exoplayer2.SimpleExoPlayer;
 import com.google.android.exoplayer2.source.ExtractorMediaSource;
 import com.google.android.exoplayer2.source.MediaSource;
@@ -52,7 +53,7 @@
  * @author mauriciocolli
  */
 @SuppressWarnings({"WeakerAccess", "unused"})
-public abstract class VideoPlayer extends BasePlayer implements SimpleExoPlayer.VideoListener, SeekBar.OnSeekBarChangeListener, View.OnClickListener, ExoPlayer.EventListener, PopupMenu.OnMenuItemClickListener, PopupMenu.OnDismissListener {
+public abstract class VideoPlayer extends BasePlayer implements SimpleExoPlayer.VideoListener, SeekBar.OnSeekBarChangeListener, View.OnClickListener, Player.EventListener, PopupMenu.OnMenuItemClickListener, PopupMenu.OnDismissListener {
     public static final boolean DEBUG = BasePlayer.DEBUG;
     public final String TAG;
 

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -98,7 +98,7 @@ public void onCreate() {
 
         Drawable icon = ContextCompat.getDrawable(this, R.mipmap.ic_launcher);
 
-        Builder builder = new Builder(this)
+        Builder builder = new Builder(this, getString(R.string.notification_channel_id))
                 .setContentIntent(pendingIntent)
                 .setSmallIcon(android.R.drawable.stat_sys_download)
                 .setLargeIcon(((BitmapDrawable) icon).getBitmap())

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -145,13 +145,13 @@ private NotificationCompat.Builder createNotification() {
         setupNotification(notRemoteView);
         setupNotification(bigNotRemoteView);
 
-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, getString(R.string.notification_channel_id))
                 .setOngoing(true)
                 .setSmallIcon(R.drawable.ic_play_circle_filled_white_24dp)
                 .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
                 .setCustomContentView(notRemoteView)
                 .setCustomBigContentView(bigNotRemoteView);
-        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN) builder.setPriority(Notification.PRIORITY_MAX);
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN) builder.setPriority(NotificationCompat.PRIORITY_MAX);
         return builder;
     }
 

File: app/src/main/java/org/schabi/newpipe/database/BasicDAO.java
Patch:
@@ -9,7 +9,6 @@
 import java.util.Collection;
 import java.util.List;
 
-import io.reactivex.Completable;
 import io.reactivex.Flowable;
 
 @Dao
@@ -39,6 +38,8 @@ public interface BasicDAO<Entity> {
     @Delete
     int delete(final Collection<Entity> entities);
 
+    int deleteAll();
+
     /* Updates */
     @Update
     int update(final Entity entity);

File: app/src/main/java/org/schabi/newpipe/fragments/channel/ChannelFragment.java
Patch:
@@ -188,7 +188,7 @@ public void onSaveInstanceState(Bundle outState) {
         outState.putString(Constants.KEY_TITLE, channelName);
         outState.putInt(Constants.KEY_SERVICE_ID, serviceId);
 
-        outState.putSerializable(INFO_LIST_KEY, ((ArrayList<InfoItem>) infoListAdapter.getItemsList()));
+        outState.putSerializable(INFO_LIST_KEY, infoListAdapter.getItemsList());
         outState.putSerializable(CHANNEL_INFO_KEY, currentChannelInfo);
         outState.putInt(PAGE_NUMBER_KEY, pageNumber);
     }

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -39,7 +39,7 @@ public class InfoListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolde
     private static final String TAG = InfoListAdapter.class.toString();
 
     private final InfoItemBuilder infoItemBuilder;
-    private final List<InfoItem> infoItemList;
+    private final ArrayList<InfoItem> infoItemList;
     private boolean showFooter = false;
     private View header = null;
     private View footer = null;
@@ -104,7 +104,7 @@ public void setFooter(View view) {
         notifyDataSetChanged();
     }
 
-    public List<InfoItem> getItemsList() {
+    public ArrayList<InfoItem> getItemsList() {
         return infoItemList;
     }
 

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Application;
 import android.content.Context;
 
+import com.facebook.stetho.Stetho;
 import com.nostra13.universalimageloader.core.ImageLoader;
 import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;
 
@@ -64,6 +65,8 @@ public void onCreate() {
                             "Could not initialize ACRA crash report", R.string.app_ui_crash));
         }
 
+        NewPipeDatabase.getInstance( getApplicationContext() );
+
         //init NewPipe
         NewPipe.init(Downloader.getInstance());
 

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemBuilder.java
Patch:
@@ -231,14 +231,13 @@ private void buildChannelInfoItem(ChannelInfoItemHolder holder, final ChannelInf
         holder.itemRoot.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                if(onStreamInfoItemSelectedListener != null) {
+                if(onChannelInfoItemSelectedListener != null) {
                     onChannelInfoItemSelectedListener.selected(info.serviceId, info.getLink(), info.channelName);
                 }
             }
         });
     }
 
-
     public String shortViewCount(Long viewCount) {
         if (viewCount >= 1000000000) {
             return Long.toString(viewCount / 1000000000) + billion + " " + viewsS;

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -519,7 +519,7 @@ public void onVideoPlayPause() {
         }
 
         if (!isPlaying()) audioManager.requestAudioFocus(this, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);
-        else audioManager.abandonAudioFocus(null);
+        else audioManager.abandonAudioFocus(this);
 
         simpleExoPlayer.setPlayWhenReady(!isPlaying());
     }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -23,6 +23,7 @@
 import android.text.Spanned;
 import android.text.TextUtils;
 import android.text.method.LinkMovementMethod;
+import android.text.util.Linkify;
 import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -549,6 +550,7 @@ protected void initViews(View rootView, Bundle savedInstanceState) {
         relatedStreamExpandButton = ((ImageButton) rootView.findViewById(R.id.detail_related_streams_expand));
 
         actionBarHandler = new ActionBarHandler(activity);
+        videoDescriptionView.setAutoLinkMask(Linkify.WEB_URLS);
         videoDescriptionView.setMovementMethod(LinkMovementMethod.getInstance());
 
         infoItemBuilder = new InfoItemBuilder(activity);

File: app/src/main/java/org/schabi/newpipe/about/AboutActivity.java
Patch:
@@ -94,6 +94,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
         int id = item.getItemId();
 
         switch (id) {
+            case android.R.id.home:
+                finish();
+                return true;
             case R.id.action_settings:
                 NavigationHelper.openSettings(this);
                 return true;

File: app/src/main/java/org/schabi/newpipe/player/MainVideoPlayer.java
Patch:
@@ -266,7 +266,7 @@ public void onClick(View v) {
                 animateView(playerImpl.getControlsRoot(), true, 300, 0, new Runnable() {
                     @Override
                     public void run() {
-                        if (getCurrentState() == STATE_PLAYING && !playerImpl.isQualityMenuVisible()) {
+                        if (getCurrentState() == STATE_PLAYING && !playerImpl.isSomePopupMenuVisible()) {
                             hideControls(300, DEFAULT_CONTROLS_HIDE_TIME);
                         }
                     }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -14,6 +14,7 @@
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.report.AcraReportSenderFactory;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.settings.SettingsActivity;
 import org.schabi.newpipe.util.ThemeHelper;
 
@@ -59,7 +60,7 @@ public void onCreate() {
         } catch(ACRAConfigurationException ace) {
             ace.printStackTrace();
             ErrorActivity.reportError(this, ace, null, null,
-                    ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,"none",
+                    ErrorActivity.ErrorInfo.make(UserAction.SEARCHED,"none",
                             "Could not initialize ACRA crash report", R.string.app_ui_crash));
         }
 

File: app/src/main/java/org/schabi/newpipe/ImageErrorLoadingListener.java
Patch:
@@ -9,6 +9,7 @@
 
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.UserAction;
 
 /**
  * Created by Christian Schabesberger on 01.08.16.
@@ -49,7 +50,7 @@ public void onLoadingStarted(String imageUri, View view) {}
     public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
         ErrorActivity.reportError(context,
                 failReason.getCause(), null, rootView,
-                ErrorActivity.ErrorInfo.make(ErrorActivity.LOAD_IMAGE,
+                ErrorActivity.ErrorInfo.make(UserAction.LOAD_IMAGE,
                         NewPipe.getNameOfService(serviceId), imageUri,
                         R.string.could_not_load_image));
     }

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -253,7 +253,7 @@ protected void checkDownloadOptions(View view) {
     }
 
     /**
-     * #143 #44 #42 #22: make shure that the filename does not contain illegal chars.
+     * #143 #44 #42 #22: make sure that the filename does not contain illegal chars.
      * This should fix some of the "cannot download" problems.
      */
     private String createFileName(String fileName) {

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -61,6 +61,7 @@
 import org.schabi.newpipe.player.PlayVideoActivity;
 import org.schabi.newpipe.player.PopupVideoPlayer;
 import org.schabi.newpipe.report.ErrorActivity;
+import org.schabi.newpipe.report.UserAction;
 import org.schabi.newpipe.util.Constants;
 import org.schabi.newpipe.util.Localization;
 import org.schabi.newpipe.util.NavigationHelper;
@@ -578,7 +579,7 @@ private void initThumbnailViews(StreamInfo info) {
             imageLoader.displayImage(info.thumbnail_url, thumbnailImageView, displayImageOptions, new SimpleImageLoadingListener() {
                 @Override
                 public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
-                    ErrorActivity.reportError(activity, failReason.getCause(), null, activity.findViewById(android.R.id.content), ErrorActivity.ErrorInfo.make(ErrorActivity.LOAD_IMAGE, NewPipe.getNameOfService(currentStreamInfo.service_id), imageUri, R.string.could_not_load_thumbnails));
+                    ErrorActivity.reportError(activity, failReason.getCause(), null, activity.findViewById(android.R.id.content), ErrorActivity.ErrorInfo.make(UserAction.LOAD_IMAGE, NewPipe.getNameOfService(currentStreamInfo.service_id), imageUri, R.string.could_not_load_thumbnails));
                 }
             });
         } else thumbnailImageView.setImageResource(R.drawable.dummy_thumbnail_dark);

File: app/src/main/java/org/schabi/newpipe/info_list/InfoListAdapter.java
Patch:
@@ -155,7 +155,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int type) {
 
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
-        //god damen f*** ANDROID SH**
+        //god damn f*** ANDROID SH**
         if(holder instanceof InfoItemHolder) {
             if(header != null) {
                 i--;

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSender.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.report;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 
 import org.acra.collector.CrashReportData;
 import org.acra.sender.ReportSender;
@@ -30,9 +31,9 @@
 public class AcraReportSender implements ReportSender {
 
     @Override
-    public void send(Context context, CrashReportData report) throws ReportSenderException {
+    public void send(@NonNull Context context, @NonNull CrashReportData report) throws ReportSenderException {
         ErrorActivity.reportError(context, report,
-                ErrorActivity.ErrorInfo.make(ErrorActivity.UI_ERROR,"none",
+                ErrorActivity.ErrorInfo.make(UserAction.UI_ERROR,"none",
                         "App crash, UI failure", R.string.app_ui_crash));
     }
 }

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSenderFactory.java
Patch:
@@ -1,6 +1,7 @@
 package org.schabi.newpipe.report;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 
 import org.acra.config.ACRAConfiguration;
 import org.acra.sender.ReportSender;
@@ -28,7 +29,8 @@
  */
 
 public class AcraReportSenderFactory implements ReportSenderFactory {
-    public ReportSender create(Context context, ACRAConfiguration config) {
+    @NonNull
+    public ReportSender create(@NonNull Context context, @NonNull ACRAConfiguration config) {
         return new AcraReportSender();
     }
 }

File: app/src/main/java/us/shandian/giga/get/sqlite/DownloadMissionSQLiteHelper.java
Patch:
@@ -64,6 +64,7 @@ public class DownloadMissionSQLiteHelper extends SQLiteOpenHelper {
 
     /**
      * Returns all values of the download mission as ContentValues.
+     *
      * @param downloadMission the download mission
      * @return the content values
      */
@@ -88,7 +89,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
     }
 
     public static DownloadMission getMissionFromCursor(Cursor cursor) {
-        if(cursor == null) throw new NullPointerException("cursor is null");
+        if (cursor == null) throw new NullPointerException("cursor is null");
         int pos;
         String name = cursor.getString(cursor.getColumnIndexOrThrow(KEY_NAME));
         String location = cursor.getString(cursor.getColumnIndexOrThrow(KEY_LOCATION));

File: app/src/main/java/org/schabi/newpipe/fragments/detail/ActionBarHandler.java
Patch:
@@ -67,12 +67,12 @@ public ActionBarHandler(AppCompatActivity activity) {
 
     public void setupStreamList(final List<VideoStream> videoStreams, Spinner toolbarSpinner) {
         if (activity == null) return;
-        selectedVideoStream = 0;
 
-        int defaultResolutionIndex = Utils.getDefaultResolution(activity, videoStreams);
+        selectedVideoStream = Utils.getDefaultResolution(activity, videoStreams);
+
         boolean isExternalPlayerEnabled = PreferenceManager.getDefaultSharedPreferences(activity).getBoolean(activity.getString(R.string.use_external_video_player_key), false);
         toolbarSpinner.setAdapter(new SpinnerToolbarAdapter(activity, videoStreams, isExternalPlayerEnabled));
-        toolbarSpinner.setSelection(defaultResolutionIndex);
+        toolbarSpinner.setSelection(selectedVideoStream);
         toolbarSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {

File: app/src/main/java/org/schabi/newpipe/util/NavigationHelper.java
Patch:
@@ -51,7 +51,8 @@ public static Intent getOpenVideoPlayerIntent(Context context, Class targetClazz
                 .putExtra(VideoPlayer.INDEX_SEL_VIDEO_STREAM, instance.getSelectedStreamIndex())
                 .putExtra(VideoPlayer.VIDEO_STREAMS_LIST, instance.getVideoStreamsList())
                 .putExtra(VideoPlayer.VIDEO_ONLY_AUDIO_STREAM, instance.getAudioStream())
-                .putExtra(BasePlayer.START_POSITION, ((int) instance.getPlayer().getCurrentPosition()));
+                .putExtra(BasePlayer.START_POSITION, ((int) instance.getPlayer().getCurrentPosition()))
+                .putExtra(BasePlayer.PLAYBACK_SPEED, instance.getPlaybackSpeed());
     }
 
     public static Intent getOpenBackgroundPlayerIntent(Context context, StreamInfo info) {

File: app/src/main/java/org/schabi/newpipe/settings/SettingsFragment.java
Patch:
@@ -91,7 +91,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if ((requestCode == REQUEST_DOWNLOAD_PATH || requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) && resultCode == Activity.RESULT_OK) {
             String key = getString(requestCode == REQUEST_DOWNLOAD_PATH ? R.string.download_path_key : R.string.download_path_audio_key);
-            String path = data.getData().toString().substring(7);
+            String path = data.getData().getPath();
             defaultPreferences.edit().putString(key, path).apply();
             updatePreferencesSummary();
         } else if (requestCode == REQUEST_INSTALL_ORBOT) {

File: app/src/main/java/org/schabi/newpipe/settings/SettingsFragment.java
Patch:
@@ -91,7 +91,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if ((requestCode == REQUEST_DOWNLOAD_PATH || requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) && resultCode == Activity.RESULT_OK) {
             String key = getString(requestCode == REQUEST_DOWNLOAD_PATH ? R.string.download_path_key : R.string.download_path_audio_key);
-            String path = data.getData().toString().substring(7);
+            String path = data.getData().getPath();
             defaultPreferences.edit().putString(key, path).apply();
             updatePreferencesSummary();
         } else if (requestCode == REQUEST_INSTALL_ORBOT) {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -320,7 +320,6 @@ protected void onAudioFocusGain() {
         if (DEBUG) Log.d(TAG, "onAudioFocusGain() called");
         if (simpleExoPlayer != null) simpleExoPlayer.setVolume(DUCK_AUDIO_TO);
         animateAudio(DUCK_AUDIO_TO, 1f, DUCK_DURATION);
-        simpleExoPlayer.setPlayWhenReady(true);
     }
 
     protected void onAudioFocusLoss() {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -189,6 +189,7 @@ public void initThumbnail() {
         ImageLoader.getInstance().loadImage(videoThumbnailUrl, new SimpleImageLoadingListener() {
             @Override
             public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
+                if (simpleExoPlayer == null) return;
                 if (DEBUG) Log.d(TAG, "onLoadingComplete() called with: imageUri = [" + imageUri + "], view = [" + view + "], loadedImage = [" + loadedImage + "]");
                 videoThumbnail = loadedImage;
                 onThumbnailReceived(loadedImage);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -677,7 +677,9 @@ public void run() {
             imageLoader.resume();
             imageLoader.loadImage(info.thumbnail_url, displayImageOptions, new SimpleImageLoadingListener() {
                 @Override
-                public void onLoadingComplete(String imageUri, View view, final Bitmap loadedImage) {
+                public void onLoadingComplete(final String imageUri, View view, final Bitmap loadedImage) {
+                    if (playerImpl == null || playerImpl.getPlayer() == null) return;
+                    if (DEBUG) Log.d(TAG, "FetcherRunnable.imageLoader.onLoadingComplete() called with: imageUri = [" + imageUri + "]");
                     mainHandler.post(new Runnable() {
                         @Override
                         public void run() {

File: app/src/main/java/org/schabi/newpipe/player/BasePlayer.java
Patch:
@@ -189,6 +189,7 @@ public void initThumbnail() {
         ImageLoader.getInstance().loadImage(videoThumbnailUrl, new SimpleImageLoadingListener() {
             @Override
             public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
+                if (simpleExoPlayer == null) return;
                 if (DEBUG) Log.d(TAG, "onLoadingComplete() called with: imageUri = [" + imageUri + "], view = [" + view + "], loadedImage = [" + loadedImage + "]");
                 videoThumbnail = loadedImage;
                 onThumbnailReceived(loadedImage);

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -677,7 +677,9 @@ public void run() {
             imageLoader.resume();
             imageLoader.loadImage(info.thumbnail_url, displayImageOptions, new SimpleImageLoadingListener() {
                 @Override
-                public void onLoadingComplete(String imageUri, View view, final Bitmap loadedImage) {
+                public void onLoadingComplete(final String imageUri, View view, final Bitmap loadedImage) {
+                    if (playerImpl == null || playerImpl.getPlayer() == null) return;
+                    if (DEBUG) Log.d(TAG, "FetcherRunnable.imageLoader.onLoadingComplete() called with: imageUri = [" + imageUri + "]");
                     mainHandler.post(new Runnable() {
                         @Override
                         public void run() {

File: app/src/main/java/org/schabi/newpipe/fragments/channel/ChannelFragment.java
Patch:
@@ -36,6 +36,8 @@
 import java.text.NumberFormat;
 import java.util.ArrayList;
 
+import static org.schabi.newpipe.util.AnimationUtils.animateView;
+
 public class ChannelFragment extends BaseFragment implements ChannelExtractorWorker.OnChannelInfoReceive {
     private final String TAG = "ChannelFragment@" + Integer.toHexString(hashCode());
 

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -15,6 +15,7 @@
 import org.schabi.newpipe.report.AcraReportSenderFactory;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.settings.SettingsActivity;
+import org.schabi.newpipe.util.ThemeHelper;
 
 import info.guardianproject.netcipher.NetCipher;
 import info.guardianproject.netcipher.proxy.OrbotHelper;
@@ -82,6 +83,8 @@ public void onCreate() {
         // DO NOT REMOVE THIS FUNCTION!!!
         // Otherwise downloadPathPreference has invalid value.
         SettingsActivity.initSettings(this);
+
+        ThemeHelper.setTheme(getApplicationContext());
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/info_list/ChannelInfoItemHolder.java
Patch:
@@ -1,7 +1,6 @@
 package org.schabi.newpipe.info_list;
 
 import android.view.View;
-import android.widget.Button;
 import android.widget.TextView;
 
 import org.schabi.newpipe.R;
@@ -35,16 +34,17 @@ public class ChannelInfoItemHolder extends InfoItemHolder {
     public final TextView itemSubscriberCountView;
     public final TextView itemVideoCountView;
     public final TextView itemChannelDescriptionView;
-    public final Button itemButton;
+
+    public final View itemRoot;
 
     ChannelInfoItemHolder(View v) {
         super(v);
+        itemRoot = v.findViewById(R.id.itemRoot);
         itemThumbnailView = (CircleImageView) v.findViewById(R.id.itemThumbnailView);
         itemChannelTitleView = (TextView) v.findViewById(R.id.itemChannelTitleView);
         itemSubscriberCountView = (TextView) v.findViewById(R.id.itemSubscriberCountView);
         itemVideoCountView = (TextView) v.findViewById(R.id.itemVideoCountView);
         itemChannelDescriptionView = (TextView) v.findViewById(R.id.itemChannelDescriptionView);
-        itemButton = (Button) v.findViewById(R.id.item_button);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -78,7 +78,7 @@ public void onCreate() {
         powerManager = ((PowerManager) getSystemService(POWER_SERVICE));
         wifiManager = ((WifiManager) getApplicationContext().getSystemService(WIFI_SERVICE));
 
-        ThemeHelper.setTheme(this, false);
+        ThemeHelper.setTheme(this);
         basePlayerImpl = new BasePlayerImpl(this);
         basePlayerImpl.setup();
     }

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -89,7 +89,7 @@ public void onCreate() {
         notificationManager = ((NotificationManager) getSystemService(NOTIFICATION_SERVICE));
 
         playerImpl = new VideoPlayerImpl();
-        ThemeHelper.setTheme(this, false);
+        ThemeHelper.setTheme(this);
     }
 
     @Override
@@ -124,7 +124,6 @@ public void onDestroy() {
             playerImpl.destroy();
             if (playerImpl.getRootView() != null) windowManager.removeView(playerImpl.getRootView());
         }
-        if (imageLoader != null) imageLoader.clearMemoryCache();
         if (notificationManager != null) notificationManager.cancel(NOTIFICATION_ID);
         if (currentExtractorWorker != null) {
             currentExtractorWorker.cancel();

File: app/src/main/java/org/schabi/newpipe/player/VideoPlayer.java
Patch:
@@ -125,7 +125,7 @@ public void initViews(View rootView) {
         this.aspectRatioFrameLayout = (AspectRatioFrameLayout) rootView.findViewById(R.id.aspectRatioLayout);
         this.surfaceView = (SurfaceView) rootView.findViewById(R.id.surfaceView);
         this.surfaceForeground = rootView.findViewById(R.id.surfaceForeground);
-        this.loadingPanel = rootView.findViewById(R.id.loadingPanel);
+        this.loadingPanel = rootView.findViewById(R.id.loading_panel);
         this.endScreen = (ImageView) rootView.findViewById(R.id.endScreen);
         this.controlAnimationView = (ImageView) rootView.findViewById(R.id.controlAnimationView);
         this.controlsRoot = rootView.findViewById(R.id.playbackControlRoot);

File: app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java
Patch:
@@ -214,7 +214,7 @@ public void onResume() {
         // Currently only used for enable/disable related videos
         // but can be extended for other live settings changes
         if (updateFlags != 0) {
-            if (!isLoading.get()) {
+            if (!isLoading.get() && currentStreamInfo != null) {
                 if ((updateFlags & RELATED_STREAMS_UPDATE_FLAG) != 0) initRelatedVideos(currentStreamInfo);
                 if ((updateFlags & RESOLUTIONS_MENU_UPDATE_FLAG) != 0) setupActionBarHandler(currentStreamInfo);
             }

File: app/src/main/java/org/schabi/newpipe/fragments/detail/ActionBarHandler.java
Patch:
@@ -88,7 +88,7 @@ public void setupStreamList(final List<VideoStream> videoStreams) {
                 VideoStream item = videoStreams.get(i);
                 itemArray[i] = MediaFormat.getNameById(item.format) + " " + item.resolution;
             }
-            int defaultResolution = Utils.getPreferredResolution(activity, videoStreams);
+            int defaultResolution = Utils.getDefaultResolution(activity, videoStreams);
 
             ArrayAdapter<String> itemAdapter = new ArrayAdapter<>(activity.getBaseContext(),
                     android.R.layout.simple_spinner_dropdown_item, itemArray);

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -121,6 +121,7 @@ public void onClick(View v) {
                             Intent intent = new Intent(context, ErrorActivity.class);
                             intent.putExtra(ERROR_INFO, errorInfo);
                             intent.putExtra(ERROR_LIST, elToSl(el));
+                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                             context.startActivity(intent);
                         }
                     }).show();
@@ -130,6 +131,7 @@ public void onClick(View v) {
             Intent intent = new Intent(context, ErrorActivity.class);
             intent.putExtra(ERROR_INFO, errorInfo);
             intent.putExtra(ERROR_LIST, elToSl(el));
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             context.startActivity(intent);
         }
     }
@@ -180,7 +182,7 @@ public static void reportError(final Context context, final CrashReportData repo
         Intent intent = new Intent(context, ErrorActivity.class);
         intent.putExtra(ERROR_INFO, errorInfo);
         intent.putExtra(ERROR_LIST, el);
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(intent);
     }
 

File: app/src/main/java/org/schabi/newpipe/fragments/search/SearchSuggestionListener.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.support.v7.widget.SearchView;
 

File: app/src/main/java/org/schabi/newpipe/fragments/search/SuggestionListAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.content.Context;
 import android.database.Cursor;

File: app/src/main/java/org/schabi/newpipe/fragments/search/SuggestionSearchRunnable.java
Patch:
@@ -1,16 +1,16 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.app.Activity;
 import android.content.SharedPreferences;
 import android.os.Handler;
 import android.preference.PreferenceManager;
 import android.widget.Toast;
 
+import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.SuggestionExtractor;
+import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.R;
 
 import java.io.IOException;
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/fragments/search/SearchSuggestionListener.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.support.v7.widget.SearchView;
 

File: app/src/main/java/org/schabi/newpipe/fragments/search/SuggestionListAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.content.Context;
 import android.database.Cursor;

File: app/src/main/java/org/schabi/newpipe/fragments/search/SuggestionSearchRunnable.java
Patch:
@@ -1,16 +1,16 @@
-package org.schabi.newpipe.search_fragment;
+package org.schabi.newpipe.fragments.search;
 
 import android.app.Activity;
 import android.content.SharedPreferences;
 import android.os.Handler;
 import android.preference.PreferenceManager;
 import android.widget.Toast;
 
+import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.NewPipe;
-import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.extractor.SuggestionExtractor;
+import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 import org.schabi.newpipe.report.ErrorActivity;
-import org.schabi.newpipe.R;
 
 import java.io.IOException;
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -273,7 +273,7 @@ public void onOpenDetail(Context context, String videoUrl) {
                 .putExtra(NavStack.URL, videoUrl)
                 .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(i);
-        //NavStack.getInstance().openDetailActivity(context, videoUrl, 0);
+        context.sendBroadcast(new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS));
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/util/NavStack.java
Patch:
@@ -5,13 +5,10 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.NavUtils;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
 
 import org.schabi.newpipe.ChannelActivity;
 import org.schabi.newpipe.MainActivity;
 import org.schabi.newpipe.detail.VideoItemDetailActivity;
-import org.schabi.newpipe.detail.VideoItemDetailFragment;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
 

File: app/src/main/java/org/schabi/newpipe/player/PopupVideoPlayer.java
Patch:
@@ -273,7 +273,7 @@ public void onOpenDetail(Context context, String videoUrl) {
                 .putExtra(NavStack.URL, videoUrl)
                 .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(i);
-        //NavStack.getInstance().openDetailActivity(context, videoUrl, 0);
+        context.sendBroadcast(new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS));
     }
 
     /*//////////////////////////////////////////////////////////////////////////

File: app/src/main/java/org/schabi/newpipe/util/NavStack.java
Patch:
@@ -5,13 +5,10 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.NavUtils;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
 
 import org.schabi.newpipe.ChannelActivity;
 import org.schabi.newpipe.MainActivity;
 import org.schabi.newpipe.detail.VideoItemDetailActivity;
-import org.schabi.newpipe.detail.VideoItemDetailFragment;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.StreamingService;
 

File: app/src/main/java/org/schabi/newpipe/ChannelActivity.java
Patch:
@@ -147,6 +147,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
             serviceId = savedInstanceState.getInt(NavStack.SERVICE_ID);
             NavStack.getInstance()
                     .restoreSavedInstanceState(savedInstanceState);
+            handleIntent(getIntent());
         }
 
     }

File: app/src/main/java/org/schabi/newpipe/detail/VideoItemDetailFragment.java
Patch:
@@ -33,6 +33,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+
 import com.google.android.exoplayer.util.Util;
 import com.nostra13.universalimageloader.core.DisplayImageOptions;
 import com.nostra13.universalimageloader.core.ImageLoader;
@@ -62,6 +63,7 @@
 import org.schabi.newpipe.util.PermissionHelper;
 
 import static android.app.Activity.RESULT_OK;
+import static com.nononsenseapps.filepicker.R.styleable.AlertDialog;
 import static org.schabi.newpipe.ReCaptchaActivity.RECAPTCHA_REQUEST;
 
 

File: app/src/test/java/org/schabi/newpipe/extractor/services/youtube/youtube/YoutubeStreamUrlIdHandlerTest.java
Patch:
@@ -111,9 +111,9 @@ public void testAcceptUrl() {
 
         assertTrue(urlIdHandler.acceptUrl("vnd.youtube:jZViOEv90dI"));
 
-        String sharedId = "7JIArTByb3E";
+        String sharedId = "8A940MXKFmQ";
         assertTrue(urlIdHandler.acceptUrl("vnd.youtube://www.youtube.com/shared?ci=" + sharedId + "&feature=twitter-deep-link"));
         assertTrue(urlIdHandler.acceptUrl("vnd.youtube://www.youtube.com/shared?ci=" + sharedId ));
-        assertTrue(urlIdHandler.acceptUrl("https://www.youtube.com/shared?ci=7JIArTByb3E"));
+        assertTrue(urlIdHandler.acceptUrl("https://www.youtube.com/shared?ci=" + sharedId));
     }
 }
\ No newline at end of file

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamUrlIdHandler.java
Patch:
@@ -15,7 +15,6 @@
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URLDecoder;
-import java.util.regex.Matcher;
 
 /**
  * Created by Christian Schabesberger on 02.02.16.
@@ -149,12 +148,14 @@ public String cleanUrl(String complexUrl) throws ParsingException {
 
     @Override
     public boolean acceptUrl(String videoUrl) {
+        String originalUrl = videoUrl;
+
         videoUrl = videoUrl.toLowerCase();
         if(videoUrl.contains("youtube") ||
                 videoUrl.contains("youtu.be")) {
             // bad programming I know
             try {
-                getId(videoUrl);
+                getId(originalUrl);
                 return true;
             } catch (Exception e) {
                 return false;

File: app/src/main/java/org/schabi/newpipe/extractor/UrlIdHandler.java
Patch:
@@ -23,6 +23,7 @@
  */
 
 public interface UrlIdHandler {
+
     String getUrl(String videoId);
     String getId(String siteUrl) throws ParsingException;
     String cleanUrl(String siteUrl) throws ParsingException;

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeService.java
Patch:
@@ -56,11 +56,11 @@ public StreamExtractor getExtractorInstance(String url)
     }
     @Override
     public SearchEngine getSearchEngineInstance() {
-        return new YoutubeSearchEngine(getUrlIdHandlerInstance(), getServiceId());
+        return new YoutubeSearchEngine(getStreamUrlIdHandlerInstance(), getServiceId());
     }
 
     @Override
-    public UrlIdHandler getUrlIdHandlerInstance() {
+    public UrlIdHandler getStreamUrlIdHandlerInstance() {
         return YoutubeStreamUrlIdHandler.getInstance();
     }
 

File: app/src/main/java/org/schabi/newpipe/extractor/stream_info/StreamInfoItemCollector.java
Patch:
@@ -52,7 +52,7 @@ public StreamInfoItem extract(StreamInfoItemExtractor extractor) throws Exceptio
             throw new ParsingException("Error: UrlIdHandler not set");
         } else if (!resultItem.webpage_url.isEmpty()) {
             resultItem.id = NewPipe.getService(getServiceId())
-                    .getUrlIdHandlerInstance()
+                    .getStreamUrlIdHandlerInstance()
                     .getId(resultItem.webpage_url);
         }
         resultItem.title = extractor.getTitle();

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.detail.VideoItemDetailActivity;
 import org.schabi.newpipe.detail.VideoItemDetailFragment;
+import org.schabi.newpipe.util.NavStack;
 
 import java.io.IOException;
 import java.util.Arrays;
@@ -355,8 +356,8 @@ private void initNotificationBuilder() {
             //build intent to return to video, on tapping notification
             Intent openDetailViewIntent = new Intent(getApplicationContext(),
                     VideoItemDetailActivity.class);
-            openDetailViewIntent.putExtra(VideoItemDetailFragment.STREAMING_SERVICE, serviceId);
-            openDetailViewIntent.putExtra(VideoItemDetailFragment.VIDEO_URL, webUrl);
+            openDetailViewIntent.putExtra(NavStack.SERVICE_ID, serviceId);
+            openDetailViewIntent.putExtra(NavStack.URL, webUrl);
             openDetailViewIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             PendingIntent openDetailView = PendingIntent.getActivity(owner, noteID,
                     openDetailViewIntent, PendingIntent.FLAG_UPDATE_CURRENT);

File: app/src/main/java/org/schabi/newpipe/detail/VideoItemDetailFragment.java
Patch:
@@ -540,7 +540,8 @@ private void initSimilarVideos(final StreamInfo info) {
         for (final InfoItem item : info.related_streams) {
             similarLayout.addView(infoItemBuilder.buildView(similarLayout, item));
         }
-        infoItemBuilder.setOnItemSelectedListener(new InfoItemBuilder.OnItemSelectedListener() {
+        infoItemBuilder.setOnStreamInfoItemSelectedListener(
+                new InfoItemBuilder.OnInfoItemSelectedListener() {
             @Override
             public void selected(String url) {
                 openStreamUrl(url);

File: app/src/main/java/org/schabi/newpipe/detail/VideoItemDetailFragment.java
Patch:
@@ -647,8 +647,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
     }
 
     @Override
-    public void onActivityCreated(Bundle savedInstanceBundle) {
-        super.onActivityCreated(savedInstanceBundle);
+    public void onStart() {
+        super.onStart();
         Activity a = getActivity();
 
         infoItemBuilder = new InfoItemBuilder(a, a.findViewById(android.R.id.content));

File: app/src/main/java/org/schabi/newpipe/extractor/search/SearchEngine.java
Patch:
@@ -4,7 +4,6 @@
 import org.schabi.newpipe.extractor.exceptions.ExtractionException;
 
 import java.io.IOException;
-import java.util.List;
 
 /**
  * Created by Christian Schabesberger on 10.08.15.
@@ -26,7 +25,6 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-@SuppressWarnings("ALL")
 public abstract class SearchEngine {
     public static class NothingFoundException extends ExtractionException {
         public NothingFoundException(String message) {

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -85,18 +85,18 @@ public StreamPreviewInfoSearchCollector search(String query, int page, String la
             Element el;
 
             // both types of spell correction item
-            if (!((el = item.select("div[class*=\"spell-correction\"]").first()) == null)) {
+            if ((el = item.select("div[class*=\"spell-correction\"]").first()) != null) {
                 collector.setSuggestion(el.select("a").first().text());
                 if(list.children().size() == 1) {
                     throw new NothingFoundException("Did you mean: " + el.select("a").first().text());
                 }
                 // search message item
-            } else if (!((el = item.select("div[class*=\"search-message\"]").first()) == null)) {
+            } else if ((el = item.select("div[class*=\"search-message\"]").first()) != null) {
                 //result.errorMessage = el.text();
                 throw new NothingFoundException(el.text());
 
                 // video item type
-            } else if (!((el = item.select("div[class*=\"yt-lockup-video\"").first()) == null)) {
+            } else if ((el = item.select("div[class*=\"yt-lockup-video\"").first()) != null) {
                 collector.commit(extractPreviewInfo(el));
             } else {
                 //noinspection ConstantConditions

File: app/src/main/java/org/schabi/newpipe/info_list/InfoItemHolder.java
Patch:
@@ -30,13 +30,13 @@
 
 public class InfoItemHolder extends RecyclerView.ViewHolder {
 
-    public ImageView itemThumbnailView;
-    public TextView itemVideoTitleView,
+    public final ImageView itemThumbnailView;
+    public final TextView itemVideoTitleView,
             itemUploaderView,
             itemDurationView,
             itemUploadDateView,
             itemViewCountView;
-    public Button itemButton;
+    public final Button itemButton;
 
     public InfoItemHolder(View v) {
         super(v);

File: app/src/main/java/org/schabi/newpipe/search_fragment/SearchSuggestionListener.java
Patch:
@@ -25,8 +25,8 @@
 
 public class SearchSuggestionListener implements SearchView.OnSuggestionListener{
 
-    private SearchView searchView;
-    private SuggestionListAdapter adapter;
+    private final SearchView searchView;
+    private final SuggestionListAdapter adapter;
 
     public SearchSuggestionListener(SearchView searchView, SuggestionListAdapter adapter) {
         this.searchView = searchView;

File: app/src/main/java/org/schabi/newpipe/search_fragment/SearchWorker.java
Patch:
@@ -82,6 +82,7 @@ void terminate() {
         }
         @Override
         public void run() {
+            final String serviceName = NewPipe.getNameOfService(serviceId);
             SearchResult result = null;
             SearchEngine engine = null;
 
@@ -119,7 +120,7 @@ public void run() {
                     View rootView = a.findViewById(android.R.id.content);
                     ErrorActivity.reportError(h, a, result.errors, null, rootView,
                             ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,
-                        /* todo: this shoudl not be assigned static */  YOUTUBE, query, R.string.light_parsing_error));
+                            serviceName, query, R.string.light_parsing_error));
 
                 }
                 // hard errors:
@@ -148,8 +149,7 @@ public void run() {
             } catch(ExtractionException e) {
                 ErrorActivity.reportError(h, a, e, null, null,
                         ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,
-                        /* todo: this shoudl not be assigned static */
-                                YOUTUBE, query, R.string.parsing_error));
+                                serviceName, query, R.string.parsing_error));
                 //postNewErrorToast(h, R.string.parsing_error);
                 e.printStackTrace();
 

File: app/src/main/java/org/schabi/newpipe/download/FileDownloader.java
Patch:
@@ -42,7 +42,7 @@
  */
 
 
-// TODO: FOR HEVEN SAKE !!! DO NOT SIMPLY USE ASYNCTASK. MAKE THIS A PROPER SERVICE !!!
+// TODO: FOR HEAVEN SAKE !!! DO NOT SIMPLY USE ASYNCTASK. MAKE THIS A PROPER SERVICE !!!
 public class FileDownloader extends AsyncTask<Void, Integer, Void> {
     public static final String TAG = "FileDownloader";
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -88,7 +88,7 @@ public class LiveStreamException extends ContentNotAvailableException {
     // $$el_type$$ will be replaced by the actual el_type (se the declarations below)
     private static final String GET_VIDEO_INFO_URL =
             "https://www.youtube.com/get_video_info?video_id=%%video_id%%$$el_type$$&ps=default&eurl=&gl=US&hl=en";
-    // eltype is nececeary for the url aboth
+    // eltype is necessary for the url above
     private static final String EL_INFO = "el=info";
 
     public enum ItagType {

File: app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java
Patch:
@@ -8,10 +8,11 @@
 // Single-threaded fallback mode
 public class DownloadRunnableFallback implements Runnable
 {
-	private DownloadMission mMission;
+	private final DownloadMission mMission;
 	//private int mId;
 	
 	public DownloadRunnableFallback(DownloadMission mission) {
+		if(mission == null) throw new NullPointerException("mission is null");
 		//mId = id;
 		mMission = mission;
 	}
@@ -35,7 +36,7 @@ public void run() {
 					f.write(buf, 0, len);
 					notifyProgress(len);
 					
-					if (Thread.currentThread().interrupted()) {
+					if (Thread.interrupted()) {
 						break;
 					}
 					

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeChannelExtractorTest.java
Patch:
@@ -32,7 +32,7 @@ public class YoutubeChannelExtractorTest extends AndroidTestCase  {
     @Override
     public void setUp() throws Exception {
         super.setUp();
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         extractor = NewPipe.getService("Youtube")
                 .getChannelExtractorInstance("https://www.youtube.com/channel/UCYJ61XIK64sp6ZFFS8sctxw", 0);
     }

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -35,7 +35,7 @@ public class YoutubeSearchEngineTest extends AndroidTestCase {
     @Override
     public void setUp() throws Exception {
         super.setUp();
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         SearchEngine engine = NewPipe.getService("Youtube").getSearchEngineInstance();
 
         result = engine.search("this is something boring", 0, "de").getSearchResult();

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchResultTest.java
Patch:
@@ -38,7 +38,7 @@ public class YoutubeSearchResultTest extends AndroidTestCase {
     @Override
     public void setUp() throws Exception {
         super.setUp();
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         SuggestionExtractor engine = new YoutubeSuggestionExtractor(0);
         suggestionReply = engine.suggestionList("hello", "de");
     }

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorDefaultTest.java
Patch:
@@ -38,7 +38,7 @@ public class YoutubeStreamExtractorDefaultTest extends AndroidTestCase {
 
     public void setUp() throws Exception {
         super.setUp();
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         extractor = NewPipe.getService("Youtube")
                 .getExtractorInstance("https://www.youtube.com/watch?v=YQHsXMglC9A");
     }

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorGemaTest.java
Patch:
@@ -39,7 +39,7 @@ public class YoutubeStreamExtractorGemaTest extends AndroidTestCase {
     public void testGemaError() throws IOException, ExtractionException {
         if(testActive) {
             try {
-                NewPipe.init(new Downloader());
+                NewPipe.init(Downloader.getInstance());
                 NewPipe.getService("Youtube")
                         .getExtractorInstance("https://www.youtube.com/watch?v=3O1_3zBUKM8");
             } catch(YoutubeStreamExtractor.GemaException ge) {

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorLiveStreamTest.java
Patch:
@@ -38,9 +38,9 @@ public void setUp() throws IOException, ExtractionException {
         //todo: make the extractor not throw over a livestream
         /*
 
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         extractor = NewPipe.getService("Youtube")
-                .getExtractorInstance("https://www.youtube.com/watch?v=J0s6NjqdjLE", new Downloader());
+                .getExtractorInstance("https://www.youtube.com/watch?v=J0s6NjqdjLE", Downloader.getInstance());
                 */
     }
 

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorRestrictedTest.java
Patch:
@@ -17,7 +17,7 @@ public class YoutubeStreamExtractorRestrictedTest extends AndroidTestCase {
 
     public void setUp() throws Exception {
         super.setUp();
-        NewPipe.init(new Downloader());
+        NewPipe.init(Downloader.getInstance());
         extractor = NewPipe.getService("Youtube")
                 .getExtractorInstance("https://www.youtube.com/watch?v=i6JTvzrpBy0");
     }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractor.java
Patch:
@@ -136,7 +136,7 @@ public String getBannerUrl() throws ParsingException {
             if(!isAjaxPage) {
                 Element el = doc.select("div[id=\"gh-banner\"]").first().select("style").first();
                 String cssContent = el.html();
-                String url = "https:" + Parser.matchGroup1("url\\((.*)\\)", cssContent);
+                String url = "https:" + Parser.matchGroup1("url\\(([^)]+)\\)", cssContent);
                 if (url.contains("s.ytimg.com")) {
                     bannerUrl = null;
                 } else {

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -53,7 +53,7 @@ public StreamPreviewInfoSearchCollector search(String query, int page, String la
 
         String url = "https://www.youtube.com/results"
                 + "?search_query=" + URLEncoder.encode(query, CHARSET_UTF_8)
-                + "&page=" + Integer.toString(page)
+                + "&page=" + Integer.toString(page + 1)
                 + "&filters=" + "video";
 
         String site;

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractor.java
Patch:
@@ -136,7 +136,7 @@ public String getBannerUrl() throws ParsingException {
             if(!isAjaxPage) {
                 Element el = doc.select("div[id=\"gh-banner\"]").first().select("style").first();
                 String cssContent = el.html();
-                String url = "https:" + Parser.matchGroup1("url\\((.*)\\)", cssContent);
+                String url = "https:" + Parser.matchGroup1("url\\(([^)]+)\\)", cssContent);
                 if (url.contains("s.ytimg.com")) {
                     bannerUrl = null;
                 } else {

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.test.AndroidTestCase;
 
+import org.schabi.newpipe.Downloader;
 import org.schabi.newpipe.extractor.NewPipe;
 import org.schabi.newpipe.extractor.search.SearchEngine;
 import org.schabi.newpipe.extractor.search.SearchResult;
@@ -34,6 +35,7 @@ public class YoutubeSearchEngineTest extends AndroidTestCase {
     @Override
     public void setUp() throws Exception {
         super.setUp();
+        NewPipe.init(new Downloader());
         SearchEngine engine = NewPipe.getService("Youtube").getSearchEngineInstance();
 
         result = engine.search("this is something boring", 0, "de").getSearchResult();

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorGemaTest.java
Patch:
@@ -39,6 +39,7 @@ public class YoutubeStreamExtractorGemaTest extends AndroidTestCase {
     public void testGemaError() throws IOException, ExtractionException {
         if(testActive) {
             try {
+                NewPipe.init(new Downloader());
                 NewPipe.getService("Youtube")
                         .getExtractorInstance("https://www.youtube.com/watch?v=3O1_3zBUKM8");
             } catch(YoutubeStreamExtractor.GemaException ge) {

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorLiveStreamTest.java
Patch:
@@ -37,6 +37,8 @@ public class YoutubeStreamExtractorLiveStreamTest extends AndroidTestCase {
     public void setUp() throws IOException, ExtractionException {
         //todo: make the extractor not throw over a livestream
         /*
+
+        NewPipe.init(new Downloader());
         extractor = NewPipe.getService("Youtube")
                 .getExtractorInstance("https://www.youtube.com/watch?v=J0s6NjqdjLE", new Downloader());
                 */

File: app/src/main/java/org/schabi/newpipe/detail/ActionBarHandler.java
Patch:
@@ -111,6 +111,9 @@ public boolean onNavigationItemSelected(int itemPosition, long itemId) {
 
 
     private int getDefaultResolution(final List<VideoStream> videoStreams) {
+        if (defaultPreferences == null)
+            return 0;
+
         String defaultResolution = defaultPreferences
                 .getString(activity.getString(R.string.default_resolution_key),
                         activity.getString(R.string.default_resolution_value));

File: app/src/main/java/org/schabi/newpipe/detail/ActionBarHandler.java
Patch:
@@ -111,6 +111,9 @@ public boolean onNavigationItemSelected(int itemPosition, long itemId) {
 
 
     private int getDefaultResolution(final List<VideoStream> videoStreams) {
+        if (defaultPreferences == null)
+            return 0;
+
         String defaultResolution = defaultPreferences
                 .getString(activity.getString(R.string.default_resolution_key),
                         activity.getString(R.string.default_resolution_value));

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -16,7 +16,7 @@
  * Created by Christian Schabesberger on 02.08.16.
  *
  * Copyright (C) Christian Schabesberger 2016 <chris.schabesberger@mailbox.org>
- * MainActivity.java is part of NewPipe.
+ * DownloadActivity.java is part of NewPipe.
  *
  * NewPipe is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -73,7 +73,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             }
             case R.id.action_show_downloads: {
-                Intent intent = new Intent(this, org.schabi.newpipe.download.MainActivity.class);
+                Intent intent = new Intent(this, org.schabi.newpipe.download.DownloadActivity.class);
                 startActivity(intent);
                 return true;
             }

File: app/src/main/java/org/schabi/newpipe/detail/ActionBarHandler.java
Patch:
@@ -183,7 +183,7 @@ public boolean onItemSelected(MenuItem item) {
                 return true;
             case R.id.menu_item_downloads: {
                 Intent intent =
-                        new Intent(activity, org.schabi.newpipe.download.MainActivity.class);
+                        new Intent(activity, org.schabi.newpipe.download.DownloadActivity.class);
                 activity.startActivity(intent);
                 return true;
             }

File: app/src/main/java/us/shandian/giga/get/DownloadManager.java
Patch:
@@ -4,7 +4,7 @@ public interface DownloadManager
 {
 	int BLOCK_SIZE = 512 * 1024;
 	
-	int startMission(String url, String name, int threads);
+	int startMission(String url, String name, boolean isAudio, int threads);
 	void resumeMission(int id);
 	void pauseMission(int id);
 	void deleteMission(int id);

File: app/src/main/java/org/schabi/newpipe/ChannelActivity.java
Patch:
@@ -26,6 +26,7 @@
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.ServiceList;
 import org.schabi.newpipe.extractor.StreamingService;
+import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.info_list.InfoListAdapter;
 import org.schabi.newpipe.report.ErrorActivity;
 
@@ -84,7 +85,7 @@ protected void onCreate(Bundle savedInstanceState) {
         final LinearLayoutManager layoutManager = new LinearLayoutManager(this);
         recyclerView.setLayoutManager(layoutManager);
         recyclerView.setAdapter(infoListAdapter);
-        infoListAdapter.setOnItemSelectedListener(new InfoListAdapter.OnItemSelectedListener() {
+        infoListAdapter.setOnItemSelectedListener(new InfoItemBuilder.OnItemSelectedListener() {
             @Override
             public void selected(String url) {
                 Intent detailIntent = new Intent(ChannelActivity.this, VideoItemDetailActivity.class);

File: app/src/main/java/org/schabi/newpipe/search_fragment/SearchInfoItemFragment.java
Patch:
@@ -18,6 +18,7 @@
 import android.widget.ProgressBar;
 import android.widget.Toast;
 
+import org.schabi.newpipe.info_list.InfoItemBuilder;
 import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.detail.VideoItemDetailActivity;
@@ -189,7 +190,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         infoListAdapter = new InfoListAdapter(getActivity(),
                 getActivity().findViewById(android.R.id.content));
-        infoListAdapter.setOnItemSelectedListener(new InfoListAdapter.OnItemSelectedListener() {
+        infoListAdapter.setOnItemSelectedListener(new InfoItemBuilder.OnItemSelectedListener() {
             @Override
             public void selected(String url) {
                 Intent i = new Intent(getActivity(), VideoItemDetailActivity.class);

File: app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java
Patch:
@@ -234,6 +234,7 @@ public static void reportError(final Context context, final CrashReportData repo
         Intent intent = new Intent(context, ErrorActivity.class);
         intent.putExtra(ERROR_INFO, errorInfo);
         intent.putExtra(ERROR_LIST, el);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         context.startActivity(intent);
     }
 

File: app/src/main/java/org/schabi/newpipe/download/MainActivity.java
Patch:
@@ -10,6 +10,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.IBinder;
+import android.preference.PreferenceManager;
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
@@ -95,8 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setTitle(R.string.downloads_title);
         actionBar.setDisplayShowTitleEnabled(true);
 
-        //todo: this needs to be fixed Context.MODE_WORLD_READABLE is obsolet
-        mPrefs = getSharedPreferences(THREADS, Context.MODE_WORLD_READABLE);
+        mPrefs = PreferenceManager.getDefaultSharedPreferences(this);
 
         // Fragment
         getWindow().getDecorView().getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -9,6 +9,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.IBinder;
+import android.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -61,8 +62,8 @@ public void onServiceDisconnected(ComponentName name) {
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 		View v = inflater.inflate(R.layout.missions, container, false);
-		
-		mPrefs = getActivity().getSharedPreferences("mode", Context.MODE_WORLD_READABLE);
+
+		mPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
 		mLinear = mPrefs.getBoolean("linear", false);
 		
 		// Bind the service

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.app.Application;
 import android.content.Context;
-import android.util.Log;
 
 import com.nostra13.universalimageloader.core.ImageLoader;
 import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;
@@ -12,7 +11,8 @@
 import org.acra.config.ACRAConfigurationException;
 import org.acra.config.ConfigurationBuilder;
 import org.acra.sender.ReportSenderFactory;
-import org.schabi.newpipe.extractor.ServiceList;
+import org.schabi.newpipe.report.AcraReportSenderFactory;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.settings.SettingsActivity;
 
 import info.guardianproject.netcipher.NetCipher;

File: app/src/main/java/org/schabi/newpipe/ChannelActivity.java
Patch:
@@ -27,6 +27,7 @@
 import org.schabi.newpipe.extractor.ServiceList;
 import org.schabi.newpipe.extractor.StreamingService;
 import org.schabi.newpipe.info_list.InfoListAdapter;
+import org.schabi.newpipe.report.ErrorActivity;
 
 import java.io.IOException;
 

File: app/src/main/java/org/schabi/newpipe/ImageErrorLoadingListener.java
Patch:
@@ -7,8 +7,7 @@
 import com.nostra13.universalimageloader.core.assist.FailReason;
 import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;
 
-import org.schabi.newpipe.ErrorActivity;
-import org.schabi.newpipe.R;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.extractor.ServiceList;
 
 /**

File: app/src/main/java/org/schabi/newpipe/detail/StreamInfoWorker.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.View;
 
 import org.schabi.newpipe.Downloader;
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.ServiceList;

File: app/src/main/java/org/schabi/newpipe/detail/VideoItemDetailFragment.java
Patch:
@@ -43,7 +43,7 @@
 
 import org.schabi.newpipe.ActivityCommunicator;
 import org.schabi.newpipe.ChannelActivity;
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.ImageErrorLoadingListener;
 import org.schabi.newpipe.Localization;
 import org.schabi.newpipe.R;

File: app/src/main/java/org/schabi/newpipe/download/MainActivity.java
Patch:
@@ -26,7 +26,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.settings.SettingsActivity;
 

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSender.java
Patch:
@@ -1,10 +1,11 @@
-package org.schabi.newpipe;
+package org.schabi.newpipe.report;
 
 import android.content.Context;
 
 import org.acra.collector.CrashReportData;
 import org.acra.sender.ReportSender;
 import org.acra.sender.ReportSenderException;
+import org.schabi.newpipe.R;
 
 /**
  * Created by Christian Schabesberger  on 13.09.16.

File: app/src/main/java/org/schabi/newpipe/report/AcraReportSenderFactory.java
Patch:
@@ -1,10 +1,11 @@
-package org.schabi.newpipe;
+package org.schabi.newpipe.report;
 
 import android.content.Context;
 
 import org.acra.config.ACRAConfiguration;
 import org.acra.sender.ReportSender;
 import org.acra.sender.ReportSenderFactory;
+import org.schabi.newpipe.report.AcraReportSender;
 
 /**
  * Created by Christian Schabesberger  on 13.09.16.

File: app/src/main/java/org/schabi/newpipe/search_fragment/SearchInfoItemFragment.java
Patch:
@@ -18,7 +18,7 @@
 import android.widget.ProgressBar;
 import android.widget.Toast;
 
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.detail.VideoItemDetailActivity;
 import org.schabi.newpipe.detail.VideoItemDetailFragment;

File: app/src/main/java/org/schabi/newpipe/search_fragment/SearchWorker.java
Patch:
@@ -6,10 +6,9 @@
 import android.preference.PreferenceManager;
 import android.util.Log;
 import android.view.View;
-import android.widget.Toast;
 
 import org.schabi.newpipe.Downloader;
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.SearchEngine;

File: app/src/main/java/org/schabi/newpipe/search_fragment/SuggestionSearchRunnable.java
Patch:
@@ -1,14 +1,13 @@
 package org.schabi.newpipe.search_fragment;
 
 import android.app.Activity;
-import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Handler;
 import android.preference.PreferenceManager;
 import android.widget.Toast;
 
 import org.schabi.newpipe.Downloader;
-import org.schabi.newpipe.ErrorActivity;
+import org.schabi.newpipe.report.ErrorActivity;
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.SearchEngine;

File: app/src/main/java/org/schabi/newpipe/MainActivity.java
Patch:
@@ -44,6 +44,8 @@ protected void onCreate(Bundle savedInstanceState) {
         setVolumeControlStream(AudioManager.STREAM_MUSIC);
         mainFragment = getSupportFragmentManager()
                 .findFragmentById(R.id.search_fragment);
+
+        ((String)null).length();
     }
 
     public boolean onCreateOptionsMenu(Menu menu) {

File: app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java
Patch:
@@ -42,8 +42,5 @@ public static ActivityCommunicator getCommunicator() {
     // Thumbnail send from VideoItemDetailFragment to BackgroundPlayer
     public volatile Bitmap backgroundPlayerThumbnail;
 
-    // Sent from any activity to ErrorActivity.
-    public volatile List<Throwable> errorList;
     public volatile Class returnActivity;
-    public volatile ErrorActivity.ErrorInfo errorInfo;
 }

File: app/src/main/java/org/schabi/newpipe/settings/SettingsFragment.java
Patch:
@@ -104,8 +104,6 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
                 }
                 if (key == USE_TOR_KEY)
                 {
-                    updateSummary();
-
                     if (defaultPreferences.getBoolean(USE_TOR_KEY, false)) {
                         if (OrbotHelper.isOrbotInstalled(a)) {
                             App.configureTor(true);
@@ -134,6 +132,7 @@ else if (key == DOWNLOAD_PATH_AUDIO_PREFERENCE)
                     downloadPathAudioPreference
                             .setSummary(downloadPath);
                 }
+                updateSummary();
             }
         };
         defaultPreferences.registerOnSharedPreferenceChangeListener(prefListener);
@@ -219,6 +218,7 @@ else if(requestCode == REQUEST_INSTALL_ORBOT)
                     && OrbotHelper.requestStartTor(a));
 
         }
+        updateSummary();
         super.onActivityResult(requestCode, resultCode, data);
     }
 

File: app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java
Patch:
@@ -43,7 +43,7 @@ public static ActivityCommunicator getCommunicator() {
     public volatile Bitmap backgroundPlayerThumbnail;
 
     // Sent from any activity to ErrorActivity.
-    public volatile List<Exception> errorList;
+    public volatile List<Throwable> errorList;
     public volatile Class returnActivity;
     public volatile ErrorActivity.ErrorInfo errorInfo;
 }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -2,12 +2,12 @@
 
 import android.app.Application;
 import android.content.Context;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import com.nostra13.universalimageloader.core.ImageLoader;
 import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;
 
+import org.schabi.newpipe.settings.SettingsActivity;
+
 import info.guardianproject.netcipher.NetCipher;
 import info.guardianproject.netcipher.proxy.OrbotHelper;
 

File: app/src/main/java/org/schabi/newpipe/detail/ActionBarHandler.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe;
+package org.schabi.newpipe.detail;
 
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -11,8 +11,9 @@
 import android.view.MenuItem;
 import android.widget.ArrayAdapter;
 
+import org.schabi.newpipe.R;
+import org.schabi.newpipe.settings.SettingsActivity;
 import org.schabi.newpipe.extractor.MediaFormat;
-import org.schabi.newpipe.extractor.StreamInfo;
 import org.schabi.newpipe.extractor.VideoStream;
 
 import java.util.List;

File: app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java
Patch:
@@ -25,7 +25,6 @@
 import android.widget.TextView;
 
 import org.schabi.newpipe.App;
-import org.schabi.newpipe.NewPipeSettings;
 import org.schabi.newpipe.R;
 
 import java.io.File;

File: app/src/main/java/org/schabi/newpipe/extractor/SearchEngine.java
Patch:
@@ -33,7 +33,7 @@ public NothingFoundException(String message) {
 
     private StreamPreviewInfoSearchCollector collector;
 
-    public SearchEngine(StreamUrlIdHandler urlIdHandler, int serviceId) {
+    public SearchEngine(UrlIdHandler urlIdHandler, int serviceId) {
         collector = new StreamPreviewInfoSearchCollector(urlIdHandler, serviceId);
     }
 

File: app/src/main/java/org/schabi/newpipe/extractor/SearchResult.java
Patch:
@@ -43,5 +43,5 @@ public static SearchResult getSearchResult(SearchEngine engine, String query,
 
     public String suggestion = "";
     public List<StreamPreviewInfo> resultList = new Vector<>();
-    public List<Exception> errors = new Vector<>();
+    public List<Throwable> errors = new Vector<>();
 }

File: app/src/main/java/org/schabi/newpipe/extractor/ServiceList.java
Patch:
@@ -40,7 +40,7 @@ private ServiceList() {
     public static StreamingService[] getServices() {
         return services;
     }
-    public static StreamingService getService(int serviceId) throws ExtractionException {
+    public static StreamingService getService(int serviceId)throws ExtractionException {
         for(StreamingService s : services) {
             if(s.getServiceId() == serviceId) {
                 return s;

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoSearchCollector.java
Patch:
@@ -24,7 +24,7 @@ public class StreamPreviewInfoSearchCollector extends StreamPreviewInfoCollector
 
     private String suggestion = "";
 
-    public StreamPreviewInfoSearchCollector(StreamUrlIdHandler handler, int serviceId) {
+    public StreamPreviewInfoSearchCollector(UrlIdHandler handler, int serviceId) {
         super(handler, serviceId);
     }
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -14,7 +14,7 @@
 import org.schabi.newpipe.extractor.StreamPreviewInfoCollector;
 import org.schabi.newpipe.extractor.StreamPreviewInfoExtractor;
 import org.schabi.newpipe.extractor.StreamPreviewInfoSearchCollector;
-import org.schabi.newpipe.extractor.StreamUrlIdHandler;
+import org.schabi.newpipe.extractor.UrlIdHandler;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 import org.xml.sax.InputSource;
@@ -55,7 +55,7 @@ public class YoutubeSearchEngine extends SearchEngine {
     private static final String TAG = YoutubeSearchEngine.class.toString();
     public static final String CHARSET_UTF_8 = "UTF-8";
 
-    public YoutubeSearchEngine(StreamUrlIdHandler urlIdHandler, int serviceId) {
+    public YoutubeSearchEngine(UrlIdHandler urlIdHandler, int serviceId) {
         super(urlIdHandler, serviceId);
     }
 
@@ -91,7 +91,6 @@ public StreamPreviewInfoSearchCollector search(String query, int page, String la
             site = downloader.download(url);
         }
 
-
         Document doc = Jsoup.parse(site, url);
         Element list = doc.select("ol[class=\"item-section\"]").first();
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamPreviewInfoExtractor.java
Patch:
@@ -66,8 +66,6 @@ public int getDuration() throws ParsingException {
             } else {
                 throw new ParsingException("Could not get Duration: " + getTitle(), e);
             }
-
-
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -23,8 +23,8 @@
 import org.schabi.newpipe.ActivityCommunicator;
 import org.schabi.newpipe.BuildConfig;
 import org.schabi.newpipe.R;
-import org.schabi.newpipe.VideoItemDetailActivity;
-import org.schabi.newpipe.VideoItemDetailFragment;
+import org.schabi.newpipe.detail.VideoItemDetailActivity;
+import org.schabi.newpipe.detail.VideoItemDetailFragment;
 
 import java.io.IOException;
 

File: app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java
Patch:
@@ -18,14 +18,16 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package org.schabi.newpipe;
+package org.schabi.newpipe.settings;
 
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Environment;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
 
+import org.schabi.newpipe.R;
+
 import java.io.File;
 
 import us.shandian.giga.util.Utility;

File: app/src/main/java/org/schabi/newpipe/settings/SettingsActivity.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe;
+package org.schabi.newpipe.settings;
 
 import android.content.Context;
 import android.content.Intent;
@@ -14,6 +14,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import org.schabi.newpipe.R;
+
 
 /**
  * Created by Christian Schabesberger on 31.08.15.

File: app/src/main/java/us/shandian/giga/get/DownloadManagerImpl.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.google.gson.Gson;
 
-import org.schabi.newpipe.NewPipeSettings;
+import org.schabi.newpipe.settings.NewPipeSettings;
 
 import java.io.File;
 import java.io.RandomAccessFile;

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -14,7 +14,7 @@
 import android.support.v4.app.NotificationCompat.Builder;
 import android.util.Log;
 
-import org.schabi.newpipe.NewPipeSettings;
+import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.R;
 import us.shandian.giga.get.DownloadManager;
 import us.shandian.giga.get.DownloadManagerImpl;

File: app/src/main/java/us/shandian/giga/util/Utility.java
Patch:
@@ -17,9 +17,8 @@
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 
-import org.schabi.newpipe.NewPipeSettings;
+import org.schabi.newpipe.settings.NewPipeSettings;
 import org.schabi.newpipe.R;
-import us.shandian.giga.get.DownloadMission;
 
 import com.nononsenseapps.filepicker.FilePickerActivity;
 import com.nononsenseapps.filepicker.AbstractFilePickerFragment;

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -345,6 +345,8 @@ private String getUserActionString(int userAction) {
                 return SOMETHING_ELSE_STRING;
             case USER_REPORT:
                 return USER_REPORT_STRING;
+            case LOAD_IMAGE:
+                return LOAD_IMAGE_STRING;
             default:
                 return "Your description is in another castle.";
         }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -41,13 +41,15 @@ public void onCreate() {
         ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(this).build();
         ImageLoader.getInstance().init(config);
 
+        /*
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         if(prefs.getBoolean(getString(R.string.use_tor_key), false)) {
             OrbotHelper.requestStartTor(this);
             configureTor(true);
         } else {
             configureTor(false);
-        }
+        }*/
+        configureTor(false);
 
         // DO NOT REMOVE THIS FUNCTION!!!
         // Otherwise downloadPathPreference has invalid value.

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -11,7 +11,7 @@
 
 import java.io.PrintWriter;
 import java.io.StringWriter;
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by Christian Schabesberger on 29.12.15.
@@ -35,7 +35,7 @@
 
 public class YoutubeSearchEngineTest extends AndroidTestCase {
     private SearchResult result;
-    private ArrayList<String> suggestionReply;
+    private List<String> suggestionReply;
 
     @Override
     public void setUp() throws Exception{

File: app/src/main/java/org/schabi/newpipe/SuggestionListAdapter.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.TextView;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by Madiyar on 23.02.2016.
@@ -59,7 +60,7 @@ public void bindView(View view, Context context, Cursor cursor) {
     }
 
 
-    public void updateAdapter(ArrayList<String> suggestions) {
+    public void updateAdapter(List<String> suggestions) {
         MatrixCursor cursor = new MatrixCursor(columns);
         int i = 0;
         for (String s : suggestions) {

File: app/src/main/java/org/schabi/newpipe/extractor/SearchEngine.java
Patch:
@@ -1,9 +1,7 @@
 package org.schabi.newpipe.extractor;
 
 import java.io.IOException;
-import java.util.ArrayList;
 import java.util.List;
-import java.util.Vector;
 
 /**
  * Created by Christian Schabesberger on 10.08.15.
@@ -43,7 +41,7 @@ protected StreamPreviewInfoSearchCollector getStreamPreviewInfoSearchCollector()
         return collector;
     }
 
-    public abstract ArrayList<String> suggestionList(
+    public abstract List<String> suggestionList(
             String query,String contentCountry, Downloader dl)
             throws ExtractionException, IOException;
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -22,6 +22,7 @@
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.List;
 
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
@@ -130,10 +131,10 @@ public StreamPreviewInfoSearchCollector search(String query, int page, String la
     }
 
     @Override
-    public ArrayList<String> suggestionList(String query, String contentCountry, Downloader dl)
+    public List<String> suggestionList(String query, String contentCountry, Downloader dl)
             throws IOException, ParsingException {
 
-        ArrayList<String> suggestions = new ArrayList<>();
+        List<String> suggestions = new ArrayList<>();
 
         /* Cant use Uri.Bilder since it's android code.
         // Android code is baned from the extractor side.

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -568,7 +568,7 @@ public int getTimeStamp() throws ParsingException {
                     if (secondsString.isEmpty() //if nothing was got,
                             && minutesString.isEmpty()//treat as unlabelled seconds
                             && hoursString.isEmpty()) {
-                        secondsString = Parser.matchGroup1("t=(\\d{1,3})", timeStamp);
+                        secondsString = Parser.matchGroup1("t=(\\d+)", timeStamp);
                     }
                 }
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -568,7 +568,7 @@ public int getTimeStamp() throws ParsingException {
                     if (secondsString.isEmpty() //if nothing was got,
                             && minutesString.isEmpty()//treat as unlabelled seconds
                             && hoursString.isEmpty()) {
-                        secondsString = Parser.matchGroup1("t=(\\d{1,3})", timeStamp);
+                        secondsString = Parser.matchGroup1("t=(\\d+)", timeStamp);
                     }
                 }
 

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -43,7 +43,7 @@ public void setUp() throws Exception{
         SearchEngine engine = ServiceList.getService("Youtube")
                 .getSearchEngineInstance(new Downloader());
 
-        result = engine.search("star wars",
+        result = engine.search("this is something boring",
                 0, "de", new Downloader()).getSearchResult();
         suggestionReply = engine.suggestionList("hello","de",new Downloader());
     }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamUrlIdHandler.java
Patch:
@@ -55,7 +55,7 @@ public String getVideoId(String url) throws ParsingException, IllegalArgumentExc
             }
             else if(url.contains("vnd.youtube"))
             {
-                id = Parser.matchGroup1("vnd.youtube\\:([\\-a-zA-Z0-9_]{11}).*", url);
+                id = Parser.matchGroup1("([\\-a-zA-Z0-9_]{11}).*", url);
             }
             else {
                 id = Parser.matchGroup1("[?&]v=([\\-a-zA-Z0-9_]{11})", url);

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -11,7 +11,7 @@
 
 import java.io.PrintWriter;
 import java.io.StringWriter;
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by Christian Schabesberger on 29.12.15.
@@ -35,7 +35,7 @@
 
 public class YoutubeSearchEngineTest extends AndroidTestCase {
     private SearchResult result;
-    private ArrayList<String> suggestionReply;
+    private List<String> suggestionReply;
 
     @Override
     public void setUp() throws Exception{

File: app/src/main/java/org/schabi/newpipe/SuggestionListAdapter.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.TextView;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by Madiyar on 23.02.2016.
@@ -59,7 +60,7 @@ public void bindView(View view, Context context, Cursor cursor) {
     }
 
 
-    public void updateAdapter(ArrayList<String> suggestions) {
+    public void updateAdapter(List<String> suggestions) {
         MatrixCursor cursor = new MatrixCursor(columns);
         int i = 0;
         for (String s : suggestions) {

File: app/src/main/java/org/schabi/newpipe/extractor/SearchEngine.java
Patch:
@@ -1,9 +1,7 @@
 package org.schabi.newpipe.extractor;
 
 import java.io.IOException;
-import java.util.ArrayList;
 import java.util.List;
-import java.util.Vector;
 
 /**
  * Created by Christian Schabesberger on 10.08.15.
@@ -43,7 +41,7 @@ protected StreamPreviewInfoSearchCollector getStreamPreviewInfoSearchCollector()
         return collector;
     }
 
-    public abstract ArrayList<String> suggestionList(
+    public abstract List<String> suggestionList(
             String query,String contentCountry, Downloader dl)
             throws ExtractionException, IOException;
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -22,6 +22,7 @@
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.List;
 
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
@@ -130,10 +131,10 @@ public StreamPreviewInfoSearchCollector search(String query, int page, String la
     }
 
     @Override
-    public ArrayList<String> suggestionList(String query, String contentCountry, Downloader dl)
+    public List<String> suggestionList(String query, String contentCountry, Downloader dl)
             throws IOException, ParsingException {
 
-        ArrayList<String> suggestions = new ArrayList<>();
+        List<String> suggestions = new ArrayList<>();
 
         /* Cant use Uri.Bilder since it's android code.
         // Android code is baned from the extractor side.

File: app/src/main/java/us/shandian/giga/util/CrashHandler.java
Patch:
@@ -11,9 +11,9 @@
 //todo: replace this by using the internal crash handler of newpipe
 public class CrashHandler implements Thread.UncaughtExceptionHandler
 {
-	public static String CRASH_DIR = Environment.getExternalStorageDirectory().getPath() + "/GigaCrash/";
-	public static String CRASH_LOG = CRASH_DIR + "last_crash.log";
-	public static String CRASH_TAG = CRASH_DIR + ".crashed";
+	public static final String CRASH_DIR = Environment.getExternalStorageDirectory().getPath() + "/GigaCrash/";
+	public static final String CRASH_LOG = CRASH_DIR + "last_crash.log";
+	public static final String CRASH_TAG = CRASH_DIR + ".crashed";
 
 	private static String ANDROID = Build.VERSION.RELEASE;
 	private static String MODEL = Build.MODEL;

File: app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java
Patch:
@@ -30,7 +30,7 @@
  * This can be considered as an ugly hack inside the Android universe. **/
 public class ActivityCommunicator {
 
-    private static ActivityCommunicator activityCommunicator = null;
+    private static ActivityCommunicator activityCommunicator;
 
     public static ActivityCommunicator getCommunicator() {
         if(activityCommunicator == null) {

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -93,7 +93,7 @@ public static ErrorInfo make(int userAction, String serviceName, String request,
     private Class returnActivity;
     private String currentTimeStamp;
     private String globIpRange;
-    Thread globIpRangeThread = null;
+    Thread globIpRangeThread;
 
     // views
     private TextView errorView;

File: app/src/main/java/org/schabi/newpipe/SettingsActivity.java
Patch:
@@ -48,7 +48,7 @@
 public class SettingsActivity extends PreferenceActivity  {
 
     private static final int REQUEST_INSTALL_ORBOT = 0x1234;
-    private AppCompatDelegate mDelegate = null;
+    private AppCompatDelegate mDelegate;
 
     @Override
     protected void onCreate(Bundle savedInstanceBundle) {

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -101,8 +101,8 @@ public class VideoItemDetailFragment extends Fragment {
 
     private int streamingServiceId = -1;
 
-    private boolean autoPlayEnabled = false;
-    private boolean showNextVideoItem = false;
+    private boolean autoPlayEnabled;
+    private boolean showNextVideoItem;
     private Bitmap videoThumbnail;
 
     private View thumbnailWindowLayout;
@@ -120,7 +120,7 @@ public interface OnInvokeCreateOptionsMenuListener {
         void createOptionsMenu();
     }
 
-    private OnInvokeCreateOptionsMenuListener onInvokeCreateOptionsMenuListener = null;
+    private OnInvokeCreateOptionsMenuListener onInvokeCreateOptionsMenuListener;
 
     private class VideoExtractorRunnable implements Runnable {
         private final Handler h = new Handler();

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -62,13 +62,13 @@ public class VideoItemListActivity extends AppCompatActivity
     private static final int SEARCH_MODE = 0;
     private static final int PRESENT_VIDEOS_MODE = 1;
 
-    private int mode = SEARCH_MODE;
+    private int mode;
     private int currentStreamingServiceId = -1;
     private String searchQuery = "";
 
     private VideoItemListFragment listFragment;
-    private VideoItemDetailFragment videoFragment = null;
-    private Menu menu = null;
+    private VideoItemDetailFragment videoFragment;
+    private Menu menu;
 
     private SuggestionListAdapter suggestionListAdapter;
     private SuggestionSearchRunnable suggestionSearchRunnable;

File: app/src/main/java/org/schabi/newpipe/extractor/AbstractVideoInfo.java
Patch:
@@ -37,7 +37,7 @@ public static enum StreamType {
     public String title = "";
     public String uploader = "";
     public String thumbnail_url = "";
-    public Bitmap thumbnail = null;
+    public Bitmap thumbnail;
     public String webpage_url = "";
     public String upload_date = "";
     public long view_count = -1;

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfo.java
Patch:
@@ -22,5 +22,5 @@
 
 /**Info object for previews of unopened videos, eg search results, related videos*/
 public class StreamPreviewInfo extends AbstractVideoInfo {
-    public int duration = 0;
+    public int duration;
 }
\ No newline at end of file

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoCollector.java
Patch:
@@ -28,7 +28,7 @@
 public class StreamPreviewInfoCollector {
     private List<StreamPreviewInfo> itemList = new Vector<>();
     private List<Exception> errors = new Vector<>();
-    private StreamUrlIdHandler urlIdHandler = null;
+    private StreamUrlIdHandler urlIdHandler;
     private int serviceId = -1;
 
     public StreamPreviewInfoCollector(StreamUrlIdHandler handler, int serviceId) {

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -110,7 +110,7 @@ public ItagItem(int id, ItagType type, MediaFormat format, int samplingRate, int
         public int id;
         public ItagType itagType;
         public int mediaFormatId;
-        public String resolutionString = null;
+        public String resolutionString;
         public int fps = -1;
         public int samplingRate = -1;
         public int bandWidth = -1;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -67,7 +67,7 @@ public class BackgroundPlayer extends Service /*implements MediaPlayer.OnPrepare
 
     // Determines if the service is already running.
     // Prevents launching the service twice.
-    public static volatile boolean isRunning = false;
+    public static volatile boolean isRunning;
 
     public BackgroundPlayer() {
         super();
@@ -121,7 +121,7 @@ private class PlayerThread extends Thread {
         private BackgroundPlayer owner;
         private NotificationManager noteMgr;
         private WifiManager.WifiLock wifiLock;
-        private Bitmap videoThumbnail = null;
+        private Bitmap videoThumbnail;
         private NotificationCompat.Builder noteBuilder;
         private Notification note;
 

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -292,7 +292,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
 		
 		public long lastTimeStamp = -1;
 		public long lastDone = -1;
-		public int colorId = 0;
+		public int colorId;
 		
 		public ViewHolder(View v) {
 			super(v);

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ProgressDrawable extends Drawable
 {
-	private float mProgress = 0.0f;
+	private float mProgress;
 	private int mBackgroundColor, mForegroundColor;
 	
 	public ProgressDrawable(Context context, int background, int foreground) {

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -32,7 +32,7 @@ public abstract class MissionsFragment extends Fragment
 	private DownloadManagerService.DMBinder mBinder;
 	
 	private SharedPreferences mPrefs;
-	private boolean mLinear = false;
+	private boolean mLinear;
 	private MenuItem mSwitch;
 	
 	private RecyclerView mList;

File: app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java
Patch:
@@ -30,7 +30,7 @@
  * This can be considered as an ugly hack inside the Android universe. **/
 public class ActivityCommunicator {
 
-    private static ActivityCommunicator activityCommunicator = null;
+    private static ActivityCommunicator activityCommunicator;
 
     public static ActivityCommunicator getCommunicator() {
         if(activityCommunicator == null) {

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -93,7 +93,7 @@ public static ErrorInfo make(int userAction, String serviceName, String request,
     private Class returnActivity;
     private String currentTimeStamp;
     private String globIpRange;
-    Thread globIpRangeThread = null;
+    Thread globIpRangeThread;
 
     // views
     private TextView errorView;

File: app/src/main/java/org/schabi/newpipe/SettingsActivity.java
Patch:
@@ -48,7 +48,7 @@
 public class SettingsActivity extends PreferenceActivity  {
 
     private static final int REQUEST_INSTALL_ORBOT = 0x1234;
-    private AppCompatDelegate mDelegate = null;
+    private AppCompatDelegate mDelegate;
 
     @Override
     protected void onCreate(Bundle savedInstanceBundle) {

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -101,8 +101,8 @@ public class VideoItemDetailFragment extends Fragment {
 
     private int streamingServiceId = -1;
 
-    private boolean autoPlayEnabled = false;
-    private boolean showNextVideoItem = false;
+    private boolean autoPlayEnabled;
+    private boolean showNextVideoItem;
     private Bitmap videoThumbnail;
 
     private View thumbnailWindowLayout;
@@ -120,7 +120,7 @@ public interface OnInvokeCreateOptionsMenuListener {
         void createOptionsMenu();
     }
 
-    private OnInvokeCreateOptionsMenuListener onInvokeCreateOptionsMenuListener = null;
+    private OnInvokeCreateOptionsMenuListener onInvokeCreateOptionsMenuListener;
 
     private class VideoExtractorRunnable implements Runnable {
         private final Handler h = new Handler();

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -62,13 +62,13 @@ public class VideoItemListActivity extends AppCompatActivity
     private static final int SEARCH_MODE = 0;
     private static final int PRESENT_VIDEOS_MODE = 1;
 
-    private int mode = SEARCH_MODE;
+    private int mode;
     private int currentStreamingServiceId = -1;
     private String searchQuery = "";
 
     private VideoItemListFragment listFragment;
-    private VideoItemDetailFragment videoFragment = null;
-    private Menu menu = null;
+    private VideoItemDetailFragment videoFragment;
+    private Menu menu;
 
     private SuggestionListAdapter suggestionListAdapter;
     private SuggestionSearchRunnable suggestionSearchRunnable;

File: app/src/main/java/org/schabi/newpipe/extractor/AbstractVideoInfo.java
Patch:
@@ -37,7 +37,7 @@ public static enum StreamType {
     public String title = "";
     public String uploader = "";
     public String thumbnail_url = "";
-    public Bitmap thumbnail = null;
+    public Bitmap thumbnail;
     public String webpage_url = "";
     public String upload_date = "";
     public long view_count = -1;

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfo.java
Patch:
@@ -22,5 +22,5 @@
 
 /**Info object for previews of unopened videos, eg search results, related videos*/
 public class StreamPreviewInfo extends AbstractVideoInfo {
-    public int duration = 0;
+    public int duration;
 }
\ No newline at end of file

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoCollector.java
Patch:
@@ -28,7 +28,7 @@
 public class StreamPreviewInfoCollector {
     private List<StreamPreviewInfo> itemList = new Vector<>();
     private List<Exception> errors = new Vector<>();
-    private StreamUrlIdHandler urlIdHandler = null;
+    private StreamUrlIdHandler urlIdHandler;
     private int serviceId = -1;
 
     public StreamPreviewInfoCollector(StreamUrlIdHandler handler, int serviceId) {

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -110,7 +110,7 @@ public ItagItem(int id, ItagType type, MediaFormat format, int samplingRate, int
         public int id;
         public ItagType itagType;
         public int mediaFormatId;
-        public String resolutionString = null;
+        public String resolutionString;
         public int fps = -1;
         public int samplingRate = -1;
         public int bandWidth = -1;

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -67,7 +67,7 @@ public class BackgroundPlayer extends Service /*implements MediaPlayer.OnPrepare
 
     // Determines if the service is already running.
     // Prevents launching the service twice.
-    public static volatile boolean isRunning = false;
+    public static volatile boolean isRunning;
 
     public BackgroundPlayer() {
         super();
@@ -121,7 +121,7 @@ private class PlayerThread extends Thread {
         private BackgroundPlayer owner;
         private NotificationManager noteMgr;
         private WifiManager.WifiLock wifiLock;
-        private Bitmap videoThumbnail = null;
+        private Bitmap videoThumbnail;
         private NotificationCompat.Builder noteBuilder;
         private Notification note;
 

File: app/src/main/java/us/shandian/giga/ui/adapter/MissionAdapter.java
Patch:
@@ -292,7 +292,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
 		
 		public long lastTimeStamp = -1;
 		public long lastDone = -1;
-		public int colorId = 0;
+		public int colorId;
 		
 		public ViewHolder(View v) {
 			super(v);

File: app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ProgressDrawable extends Drawable
 {
-	private float mProgress = 0.0f;
+	private float mProgress;
 	private int mBackgroundColor, mForegroundColor;
 	
 	public ProgressDrawable(Context context, int background, int foreground) {

File: app/src/main/java/us/shandian/giga/ui/fragment/MissionsFragment.java
Patch:
@@ -32,7 +32,7 @@ public abstract class MissionsFragment extends Fragment
 	private DownloadManagerService.DMBinder mBinder;
 	
 	private SharedPreferences mPrefs;
-	private boolean mLinear = false;
+	private boolean mLinear;
 	private MenuItem mSwitch;
 	
 	private RecyclerView mList;

File: app/src/main/java/us/shandian/giga/util/CrashHandler.java
Patch:
@@ -11,9 +11,9 @@
 //todo: replace this by using the internal crash handler of newpipe
 public class CrashHandler implements Thread.UncaughtExceptionHandler
 {
-	public static String CRASH_DIR = Environment.getExternalStorageDirectory().getPath() + "/GigaCrash/";
-	public static String CRASH_LOG = CRASH_DIR + "last_crash.log";
-	public static String CRASH_TAG = CRASH_DIR + ".crashed";
+	public static final String CRASH_DIR = Environment.getExternalStorageDirectory().getPath() + "/GigaCrash/";
+	public static final String CRASH_LOG = CRASH_DIR + "last_crash.log";
+	public static final String CRASH_TAG = CRASH_DIR + ".crashed";
 
 	private static String ANDROID = Build.VERSION.RELEASE;
 	private static String MODEL = Build.MODEL;

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoCollector.java
Patch:
@@ -56,7 +56,7 @@ public void commit(StreamPreviewInfoExtractor extractor) throws ParsingException
             resultItem.webpage_url = extractor.getWebPageUrl();
             if (urlIdHandler == null) {
                 throw new ParsingException("Error: UrlIdHandler not set");
-            } else {
+            } else if(!resultItem.webpage_url.isEmpty()) {
                 resultItem.id = (new YoutubeStreamUrlIdHandler()).getVideoId(resultItem.webpage_url);
             }
             resultItem.title = extractor.getTitle();

File: app/src/main/java/org/schabi/newpipe/VideoItemListFragment.java
Patch:
@@ -289,7 +289,7 @@ public void onScroll(AbsListView view, int firstVisibleItem,
                                  int visibleItemCount, int totalItemCount) {
                 if (mode != PRESENT_VIDEOS_MODE
                         && list.getChildAt(0) != null
-                        && list.getLastVisiblePosition() == list.getAdapter().getCount() - 2
+                        && list.getLastVisiblePosition() == list.getAdapter().getCount() - 1
                         && list.getChildAt(list.getChildCount() - 1).getBottom() >= list.getHeight()) {
                     long time = System.currentTimeMillis();
                     if ((time - lastScrollDate) > 200

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -134,9 +134,9 @@ public static String getDurationString(int duration) {
         if(hours > 0 || !output.isEmpty()) {
             if(hours > 0) {
                 if(hours >= 10 || output.isEmpty()) {
-                    output += Integer.toString(minutes);
+                    output += Integer.toString(hours);
                 } else {
-                    output += "0" + Integer.toString(minutes);
+                    output += "0" + Integer.toString(hours);
                 }
             } else {
                 output += "00";

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -779,7 +779,7 @@ private String loadDecryptionCode(String playerUrl) throws DecryptException {
 
             String functionPattern = "("
                     + decryptionFuncName.replace("$", "\\$")
-                    + "=function\\([a-zA-Z0-9_]*\\)\\{.+?\\})";
+                    + "=function\\([a-zA-Z0-9_]+\\)\\{.+?\\})";
             decryptionFunc = "var " + Parser.matchGroup1(functionPattern, playerCode) + ";";
 
             helperObjectName = Parser

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.media.AudioManager;
 import android.os.Bundle;
 import android.os.Handler;
 import android.preference.PreferenceManager;
@@ -215,8 +216,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,
                             ServiceList.getNameOfService(currentStreamingServiceId), "", R.string.general_error));
         }
-        //-----------------------------------------------------------------------------
-        //to solve issue 38
+        setVolumeControlStream(AudioManager.STREAM_MUSIC);
         listFragment = (VideoItemListFragment) getSupportFragmentManager()
                 .findFragmentById(R.id.videoitem_list);
         listFragment.setStreamingService(streamingService);

File: app/src/main/java/org/schabi/newpipe/download/MainActivity.java
Patch:
@@ -28,7 +28,6 @@
 
 import org.schabi.newpipe.R;
 import org.schabi.newpipe.VideoItemDetailActivity;
-import org.schabi.newpipe.VideoItemListActivity;
 
 import java.io.File;
 import java.io.IOException;
@@ -139,7 +138,6 @@ private void updateFragments() {
                 .replace(R.id.frame, mFragment)
                 .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
                 .commit();
-        
     }
 
     private void showUrlDialog() {
@@ -297,7 +295,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
             NavUtils.navigateUpTo(this, intent);
             return true;
         } else {
-            return false;
+            return mFragment.onOptionsItemSelected(item) ||
+                    super.onOptionsItemSelected(item);
         }
     }
 

File: app/src/main/java/us/shandian/giga/service/DownloadManagerService.java
Patch:
@@ -14,12 +14,12 @@
 import android.support.v4.app.NotificationCompat.Builder;
 import android.util.Log;
 
+import org.schabi.newpipe.NewPipeSettings;
 import org.schabi.newpipe.R;
 import us.shandian.giga.get.DownloadManager;
 import us.shandian.giga.get.DownloadManagerImpl;
 import us.shandian.giga.get.DownloadMission;
 import org.schabi.newpipe.download.MainActivity;
-import us.shandian.giga.util.Settings;
 import static org.schabi.newpipe.BuildConfig.DEBUG;
 
 public class DownloadManagerService extends Service implements DownloadMission.MissionListener
@@ -43,7 +43,7 @@ public void onCreate() {
 		
 		mBinder = new DMBinder();
 		if (mManager == null) {
-			String path = Settings.getInstance(this).getString(Settings.DOWNLOAD_DIRECTORY, Settings.DEFAULT_PATH);
+			String path = NewPipeSettings.getVideoDownloadPath(this);
 			mManager = new DownloadManagerImpl(this, path);
 			if (DEBUG) {
 				Log.d(TAG, "mManager == null");

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.media.AudioManager;
 import android.os.Bundle;
 import android.os.Handler;
 import android.preference.PreferenceManager;
@@ -215,8 +216,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,
                             ServiceList.getNameOfService(currentStreamingServiceId), "", R.string.general_error));
         }
-        //-----------------------------------------------------------------------------
-        //to solve issue 38
+        setVolumeControlStream(AudioManager.STREAM_MUSIC);
         listFragment = (VideoItemListFragment) getSupportFragmentManager()
                 .findFragmentById(R.id.videoitem_list);
         listFragment.setStreamingService(streamingService);

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -96,7 +96,7 @@ public void testViewCount() {
         // that specific link used for this test, there are no videos with less
         // than 10.000 views, so we can test against that.
         for(StreamPreviewInfo i : result.resultList) {
-            assertTrue(i.title + ": " + Long.toString(i.view_count), i.view_count >= 10000);
+            assertTrue(i.title + ": " + Long.toString(i.view_count), i.view_count >= 1000);
         }
     }
 

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -43,7 +43,7 @@ public void setUp() throws Exception{
         SearchEngine engine = ServiceList.getService("Youtube")
                 .getSearchEngineInstance(new Downloader());
 
-        result = engine.search("adele",
+        result = engine.search("star wars",
                 0, "de", new Downloader()).getSearchResult();
         suggestionReply = engine.suggestionList("hello","de",new Downloader());
     }

File: app/src/main/java/org/schabi/newpipe/App.java
Patch:
@@ -57,7 +57,7 @@ public void onCreate() {
     /**
      * Set the proxy settings based on whether Tor should be enabled or not.
      */
-    static void configureTor(boolean enabled) {
+    public static void configureTor(boolean enabled) {
         useTor = enabled;
         if (useTor) {
             NetCipher.useTor();
@@ -66,13 +66,13 @@ static void configureTor(boolean enabled) {
         }
     }
 
-    static void checkStartTor(Context context) {
+    public static void checkStartTor(Context context) {
         if (useTor) {
             OrbotHelper.requestStartTor(context);
         }
     }
 
-    static boolean isUsingTor() {
+    public static boolean isUsingTor() {
         return useTor;
     }
 }

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -48,6 +48,7 @@
 import java.util.Vector;
 
 
+import org.schabi.newpipe.download.DownloadDialog;
 import org.schabi.newpipe.extractor.AudioStream;
 import org.schabi.newpipe.extractor.MediaFormat;
 import org.schabi.newpipe.extractor.ParsingException;

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -110,7 +110,7 @@ public void testStreamType() {
     }
 
     public void testIfSuggestionsAreReplied() {
-        assertEquals(suggestionReply.size() > 0, true);
+        assertEquals(!suggestionReply.isEmpty(), true);
     }
 
     public void testIfSuggestionsAreValid() {

File: app/src/main/java/org/schabi/newpipe/DownloadDialog.java
Patch:
@@ -130,7 +130,7 @@ public void onClick(DialogInterface dialog, int which) {
     private String createFileName(String fName) {
         // from http://eng-przemelek.blogspot.de/2009/07/how-to-create-valid-file-name.html
 
-        List<String> forbiddenCharsPatterns = new ArrayList<String> ();
+        List<String> forbiddenCharsPatterns = new ArrayList<> ();
         forbiddenCharsPatterns.add("[:]+"); // Mac OS, but it looks that also Windows XP
         forbiddenCharsPatterns.add("[\\*\"/\\\\\\[\\]\\:\\;\\|\\=\\,]+");  // Windows
         forbiddenCharsPatterns.add("[^\\w\\d\\.]+");  // last chance... only latin letters and digits

File: app/src/main/java/org/schabi/newpipe/extractor/StreamInfo.java
Patch:
@@ -127,7 +127,7 @@ private static StreamInfo extractStreams(
         // also try to get streams from the dashMpd
         if(streamInfo.dashMpdUrl != null && !streamInfo.dashMpdUrl.isEmpty()) {
             if(streamInfo.audio_streams == null) {
-                streamInfo.audio_streams = new Vector<AudioStream>();
+                streamInfo.audio_streams = new Vector<>();
             }
             //todo: make this quick and dirty solution a real fallback
             // same as the quick and dirty aboth

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -569,9 +569,8 @@ public int getTimeStamp() throws ParsingException {
                 int hours = hoursString.isEmpty() ? 0 : Integer.parseInt(hoursString);
 
                 //don't trust BODMAS!
-                int ret = seconds + (60 * minutes) + (3600 * hours);
+                return seconds + (60 * minutes) + (3600 * hours);
                 //Log.d(TAG, "derived timestamp value:"+ret);
-                return ret;
                 //the ordering varies internationally
             } catch (ParsingException e) {
                 throw new ParsingException("Could not get timestamp.", e);

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -101,7 +101,7 @@ public void testViewCount() {
     }
 
     public void testIfSuggestionsAreReplied() {
-        assertEquals(suggestionReply.size() > 0, true);
+        assertEquals(!suggestionReply.isEmpty(), true);
     }
 
     public void testIfSuggestionsAreValid() {

File: app/src/main/java/org/schabi/newpipe/DownloadDialog.java
Patch:
@@ -130,7 +130,7 @@ public void onClick(DialogInterface dialog, int which) {
     private String createFileName(String fName) {
         // from http://eng-przemelek.blogspot.de/2009/07/how-to-create-valid-file-name.html
 
-        List<String> forbiddenCharsPatterns = new ArrayList<String> ();
+        List<String> forbiddenCharsPatterns = new ArrayList<> ();
         forbiddenCharsPatterns.add("[:]+"); // Mac OS, but it looks that also Windows XP
         forbiddenCharsPatterns.add("[\\*\"/\\\\\\[\\]\\:\\;\\|\\=\\,]+");  // Windows
         forbiddenCharsPatterns.add("[^\\w\\d\\.]+");  // last chance... only latin letters and digits

File: app/src/main/java/org/schabi/newpipe/extractor/StreamInfo.java
Patch:
@@ -127,7 +127,7 @@ private static StreamInfo extractStreams(
         // also try to get streams from the dashMpd
         if(streamInfo.dashMpdUrl != null && !streamInfo.dashMpdUrl.isEmpty()) {
             if(streamInfo.audio_streams == null) {
-                streamInfo.audio_streams = new Vector<AudioStream>();
+                streamInfo.audio_streams = new Vector<>();
             }
             //todo: make this quick and dirty solution a real fallback
             // same as the quick and dirty aboth

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -569,9 +569,8 @@ public int getTimeStamp() throws ParsingException {
                 int hours = (hoursString.isEmpty() ? 0 : Integer.parseInt(hoursString));
 
                 //don't trust BODMAS!
-                int ret = seconds + (60 * minutes) + (3600 * hours);
+                return seconds + (60 * minutes) + (3600 * hours);
                 //Log.d(TAG, "derived timestamp value:"+ret);
-                return ret;
                 //the ordering varies internationally
             } catch (ParsingException e) {
                 throw new ParsingException("Could not get timestamp.", e);

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorGemaTest.java
Patch:
@@ -10,7 +10,7 @@
 import java.io.IOException;
 
 /**
- * Created by the-scrabi on 30.12.15.
+ * Created by Christian Schabesberger on 30.12.15.
  *
  * Copyright (C) Christian Schabesberger 2015 <chris.schabesberger@mailbox.org>
  * YoutubeVideoExtractorGema.java is part of NewPipe.

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorRestrictedTest.java
Patch:
@@ -7,9 +7,7 @@
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.ServiceList;
 import org.schabi.newpipe.extractor.StreamExtractor;
-import org.schabi.newpipe.extractor.StreamInfo;
 import org.schabi.newpipe.extractor.VideoStream;
-import org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor;
 
 import java.io.IOException;
 

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoCollector.java
Patch:
@@ -56,6 +56,7 @@ public void commit(StreamPreviewInfoExtractor extractor) throws ParsingException
                 resultItem.id = (new YoutubeStreamUrlIdHandler()).getVideoId(resultItem.webpage_url);
             }
             resultItem.title = extractor.getTitle();
+            resultItem.stream_type = extractor.getStreamType();
 
             // optional iformation
             try {

File: app/src/main/java/org/schabi/newpipe/extractor/StreamPreviewInfoExtractor.java
Patch:
@@ -21,6 +21,7 @@
  */
 
 public interface StreamPreviewInfoExtractor {
+    AbstractVideoInfo.StreamType getStreamType() throws ParsingException;
     String getWebPageUrl() throws ParsingException;
     String getTitle() throws ParsingException;
     int getDuration() throws ParsingException;

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import android.content.Context;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -33,7 +31,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-class VideoInfoItemViewCreator {
+public class VideoInfoItemViewCreator {
     private final LayoutInflater inflater;
     private ImageLoader imageLoader = ImageLoader.getInstance();
     private DisplayImageOptions displayImageOptions = new DisplayImageOptions.Builder().cacheInMemory(true).build();

File: app/src/main/java/org/schabi/newpipe/extractor/AudioStream.java
Patch:
@@ -40,7 +40,7 @@ public boolean equalStats(AudioStream cmp) {
 
     // revelas wether two streams are equal
     public boolean equals(AudioStream cmp) {
-        return equalStats(cmp)
+        return cmp != null && equalStats(cmp)
                 && url == cmp.url;
     }
 }

File: app/src/main/java/org/schabi/newpipe/extractor/VideoStream.java
Patch:
@@ -38,7 +38,7 @@ public boolean equalStats(VideoStream cmp) {
 
     // revelas wether two streams are equal
     public boolean equals(VideoStream cmp) {
-        return equalStats(cmp)
+        return cmp != null && equalStats(cmp)
                 && url == cmp.url;
     }
 }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -599,7 +599,7 @@ public int getAgeLimit() throws ParsingException {
     public String getAverageRating() throws ParsingException {
         try {
             if (playerArgs == null) {
-                videoInfoPage.get("avg_rating");
+                return videoInfoPage.get("avg_rating");
             }
             return playerArgs.getString("avg_rating");
         } catch (JSONException e) {

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -157,7 +157,7 @@ public void run() {
                 e.printStackTrace();
             }
 
-            WifiManager wifiMgr = ((WifiManager)getSystemService(Context.WIFI_SERVICE));
+            WifiManager wifiMgr = (WifiManager)getSystemService(Context.WIFI_SERVICE);
             wifiLock = wifiMgr.createWifiLock(WifiManager.WIFI_MODE_FULL, TAG);
 
             //listen for end of video

File: app/src/main/java/org/schabi/newpipe/player/PlayVideoActivity.java
Patch:
@@ -327,7 +327,7 @@ private int getNavigationBarHeight() {
 
             int realHeight = realDisplayMetrics.heightPixels;
             int displayHeight = displayMetrics.heightPixels;
-            return (realHeight - displayHeight);
+            return realHeight - displayHeight;
         } else {
             return 50;
         }
@@ -344,7 +344,7 @@ private int getNavigationBarWidth() {
 
             int realWidth = realDisplayMetrics.widthPixels;
             int displayWidth = displayMetrics.widthPixels;
-            return (realWidth - displayWidth);
+            return realWidth - displayWidth;
         } else {
             return 50;
         }

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -247,9 +247,9 @@ public VideoResultReturnedRunnable(StreamInfo streamInfo) {
         public void run() {
             Activity a = getActivity();
             if(a != null) {
-                boolean show_age_restricted_content = PreferenceManager.getDefaultSharedPreferences(a)
+                boolean showAgeRestrictedContent = PreferenceManager.getDefaultSharedPreferences(a)
                         .getBoolean(activity.getString(R.string.show_age_restricted_content), false);
-                if (streamInfo.age_limit == 0 || show_age_restricted_content) {
+                if (streamInfo.age_limit == 0 || showAgeRestrictedContent) {
                     updateInfo(streamInfo);
                 } else {
                     onNotSpecifiedContentErrorWithMessage(R.string.video_is_age_restricted);

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -272,14 +272,14 @@ public void onItemSelected(String id) {
                 getSupportFragmentManager()
                         .findFragmentById(R.id.videoitem_list))
                 .getListAdapter();
-        String webpage_url = listAdapter.getVideoList().get((int) Long.parseLong(id)).webpage_url;
+        String webpageUrl = listAdapter.getVideoList().get((int) Long.parseLong(id)).webpage_url;
         if (mTwoPane) {
             // In two-pane mode, show the detail view in this activity by
             // adding or replacing the detail fragment using a
             // fragment transaction.
             Bundle arguments = new Bundle();
             //arguments.putString(VideoItemDetailFragment.ARG_ITEM_ID, id);
-            arguments.putString(VideoItemDetailFragment.VIDEO_URL, webpage_url);
+            arguments.putString(VideoItemDetailFragment.VIDEO_URL, webpageUrl);
             arguments.putInt(VideoItemDetailFragment.STREAMING_SERVICE, currentStreamingServiceId);
             videoFragment = new VideoItemDetailFragment();
             videoFragment.setArguments(arguments);
@@ -298,7 +298,7 @@ public void createOptionsMenu() {
             // for the selected item ID.
             Intent detailIntent = new Intent(this, VideoItemDetailActivity.class);
             //detailIntent.putExtra(VideoItemDetailFragment.ARG_ITEM_ID, id);
-            detailIntent.putExtra(VideoItemDetailFragment.VIDEO_URL, webpage_url);
+            detailIntent.putExtra(VideoItemDetailFragment.VIDEO_URL, webpageUrl);
             detailIntent.putExtra(VideoItemDetailFragment.STREAMING_SERVICE, currentStreamingServiceId);
             startActivity(detailIntent);
         }

File: app/src/main/java/org/schabi/newpipe/Localization.java
Patch:
@@ -34,6 +34,9 @@
 
 public class Localization {
 
+    private Localization() {
+    }
+
     public static Locale getPreferredLocale(Context context) {
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);
 

File: app/src/main/java/org/schabi/newpipe/extractor/DashMpdParser.java
Patch:
@@ -31,6 +31,9 @@
 
 public class DashMpdParser {
 
+    private DashMpdParser() {
+    }
+
     static class DashMpdParsingException extends ParsingException {
         DashMpdParsingException(String message, Exception e) {
             super(message, e);

File: app/src/main/java/org/schabi/newpipe/extractor/Parser.java
Patch:
@@ -32,6 +32,9 @@
 /** avoid using regex !!! */
 public class Parser {
 
+    private Parser() {
+    }
+
     public static class RegexException extends ParsingException {
         public RegexException(String message) {
             super(message);

File: app/src/main/java/org/schabi/newpipe/extractor/AudioStream.java
Patch:
@@ -40,7 +40,7 @@ public boolean equalStats(AudioStream cmp) {
 
     // revelas wether two streams are equal
     public boolean equals(AudioStream cmp) {
-        return equalStats(cmp)
+        return cmp != null && equalStats(cmp)
                 && url == cmp.url;
     }
 }

File: app/src/main/java/org/schabi/newpipe/extractor/VideoStream.java
Patch:
@@ -38,7 +38,7 @@ public boolean equalStats(VideoStream cmp) {
 
     // revelas wether two streams are equal
     public boolean equals(VideoStream cmp) {
-        return equalStats(cmp)
+        return cmp != null && equalStats(cmp)
                 && url == cmp.url;
     }
 }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -599,7 +599,7 @@ public int getAgeLimit() throws ParsingException {
     public String getAverageRating() throws ParsingException {
         try {
             if (playerArgs == null) {
-                videoInfoPage.get("avg_rating");
+                return videoInfoPage.get("avg_rating");
             }
             return playerArgs.getString("avg_rating");
         } catch (JSONException e) {

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -247,9 +247,9 @@ public VideoResultReturnedRunnable(StreamInfo streamInfo) {
         public void run() {
             Activity a = getActivity();
             if(a != null) {
-                boolean show_age_restricted_content = PreferenceManager.getDefaultSharedPreferences(a)
+                boolean showAgeRestrictedContent = PreferenceManager.getDefaultSharedPreferences(a)
                         .getBoolean(activity.getString(R.string.show_age_restricted_content), false);
-                if (streamInfo.age_limit == 0 || show_age_restricted_content) {
+                if (streamInfo.age_limit == 0 || showAgeRestrictedContent) {
                     updateInfo(streamInfo);
                 } else {
                     onNotSpecifiedContentErrorWithMessage(R.string.video_is_age_restricted);

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -272,14 +272,14 @@ public void onItemSelected(String id) {
                 getSupportFragmentManager()
                         .findFragmentById(R.id.videoitem_list))
                 .getListAdapter();
-        String webpage_url = listAdapter.getVideoList().get((int) Long.parseLong(id)).webpage_url;
+        String webpageUrl = listAdapter.getVideoList().get((int) Long.parseLong(id)).webpage_url;
         if (mTwoPane) {
             // In two-pane mode, show the detail view in this activity by
             // adding or replacing the detail fragment using a
             // fragment transaction.
             Bundle arguments = new Bundle();
             //arguments.putString(VideoItemDetailFragment.ARG_ITEM_ID, id);
-            arguments.putString(VideoItemDetailFragment.VIDEO_URL, webpage_url);
+            arguments.putString(VideoItemDetailFragment.VIDEO_URL, webpageUrl);
             arguments.putInt(VideoItemDetailFragment.STREAMING_SERVICE, currentStreamingServiceId);
             videoFragment = new VideoItemDetailFragment();
             videoFragment.setArguments(arguments);
@@ -298,7 +298,7 @@ public void createOptionsMenu() {
             // for the selected item ID.
             Intent detailIntent = new Intent(this, VideoItemDetailActivity.class);
             //detailIntent.putExtra(VideoItemDetailFragment.ARG_ITEM_ID, id);
-            detailIntent.putExtra(VideoItemDetailFragment.VIDEO_URL, webpage_url);
+            detailIntent.putExtra(VideoItemDetailFragment.VIDEO_URL, webpageUrl);
             detailIntent.putExtra(VideoItemDetailFragment.STREAMING_SERVICE, currentStreamingServiceId);
             startActivity(detailIntent);
         }

File: app/src/main/java/org/schabi/newpipe/Localization.java
Patch:
@@ -34,6 +34,9 @@
 
 public class Localization {
 
+    private Localization() {
+    }
+
     public static Locale getPreferredLocale(Context context) {
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);
 

File: app/src/main/java/org/schabi/newpipe/extractor/DashMpdParser.java
Patch:
@@ -31,6 +31,9 @@
 
 public class DashMpdParser {
 
+    private DashMpdParser() {
+    }
+
     static class DashMpdParsingException extends ParsingException {
         DashMpdParsingException(String message, Exception e) {
             super(message, e);

File: app/src/main/java/org/schabi/newpipe/extractor/Parser.java
Patch:
@@ -32,6 +32,9 @@
 /** avoid using regex !!! */
 public class Parser {
 
+    private Parser() {
+    }
+
     public static class RegexException extends ParsingException {
         public RegexException(String message) {
             super(message);

File: app/src/main/java/org/schabi/newpipe/player/BackgroundPlayer.java
Patch:
@@ -157,7 +157,7 @@ public void run() {
                 e.printStackTrace();
             }
 
-            WifiManager wifiMgr = ((WifiManager)getSystemService(Context.WIFI_SERVICE));
+            WifiManager wifiMgr = (WifiManager)getSystemService(Context.WIFI_SERVICE);
             wifiLock = wifiMgr.createWifiLock(WifiManager.WIFI_MODE_FULL, TAG);
 
             //listen for end of video

File: app/src/main/java/org/schabi/newpipe/player/PlayVideoActivity.java
Patch:
@@ -327,7 +327,7 @@ private int getNavigationBarHeight() {
 
             int realHeight = realDisplayMetrics.heightPixels;
             int displayHeight = displayMetrics.heightPixels;
-            return (realHeight - displayHeight);
+            return realHeight - displayHeight;
         } else {
             return 50;
         }
@@ -344,7 +344,7 @@ private int getNavigationBarWidth() {
 
             int realWidth = realDisplayMetrics.widthPixels;
             int displayWidth = displayMetrics.widthPixels;
-            return (realWidth - displayWidth);
+            return realWidth - displayWidth;
         } else {
             return 50;
         }

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -89,13 +89,11 @@ public View getViewFromVideoInfoItem(View convertView, ViewGroup parent, StreamP
             holder.itemUploadDateView.setText(info.upload_date+" • ");
         }
 
+        holder.itemThumbnailView.setImageResource(R.drawable.dummy_thumbnail);
         if(info.thumbnail_url != null && !info.thumbnail_url.isEmpty()) {
             imageLoader.displayImage(info.thumbnail_url, holder.itemThumbnailView, displayImageOptions);
-        } else {
-            holder.itemThumbnailView.setImageResource(R.drawable.dummy_thumbnail);
         }
 
-
         return convertView;
     }
 

File: app/src/main/java/org/schabi/newpipe/extractor/StreamExtractor.java
Patch:
@@ -76,6 +76,7 @@ public StreamExtractor(String url, Downloader dl, int serviceId) {
     public abstract List<StreamPreviewInfo> getRelatedVideos() throws ParsingException;
     public abstract StreamUrlIdHandler getUrlIdConverter();
     public abstract String getPageUrl();
+    public abstract StreamInfo.StreamType getStreamType() throws ParsingException;
     public int getServiceId() {
         return serviceId;
     }

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -117,7 +117,6 @@ private String shortViewCount(Long view_count){
     }
 
     public static String getDurationString(int duration) {
-        Log.d("asfd", Integer.toString(duration) + "   ----------------------");
         String output = "";
         int days = duration / (24 * 60 * 60); /* greater than a day */
         duration %= (24 * 60 * 60);

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -11,7 +11,6 @@
 import org.schabi.newpipe.extractor.Parser;
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.SearchEngine;
-import org.schabi.newpipe.extractor.StreamExtractor;
 import org.schabi.newpipe.extractor.StreamPreviewInfoCollector;
 import org.schabi.newpipe.extractor.StreamPreviewInfoExtractor;
 import org.schabi.newpipe.extractor.StreamUrlIdHandler;

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -43,7 +43,7 @@ public void setUp() throws Exception{
         SearchEngine engine = ServiceList.getService("Youtube")
                 .getSearchEngineInstance(new Downloader());
 
-        result = engine.search("bla",
+        result = engine.search("lefloid",
                 0, "de", new Downloader()).getSearchResult();
         suggestionReply = engine.suggestionList("hello","de",new Downloader());
     }
@@ -96,7 +96,7 @@ public void testViewCount() {
         // that specific link used for this test, there are no videos with less
         // than 10.000 views, so we can test against that.
         for(StreamPreviewInfo i : result.resultList) {
-            assertTrue(Long.toString(i.view_count), i.view_count >= 10000);
+            assertTrue(i.title + ": " + Long.toString(i.view_count), i.view_count >= 10000);
         }
     }
 

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorDefaultTest.java
Patch:
@@ -6,7 +6,7 @@
 import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor;
-import org.schabi.newpipe.extractor.VideoInfo;
+import org.schabi.newpipe.extractor.StreamInfo;
 
 import java.io.IOException;
 
@@ -94,7 +94,7 @@ public void testGetAudioStreams() throws ParsingException {
     }
 
     public void testGetVideoStreams() throws ParsingException {
-        for(VideoInfo.VideoStream s : extractor.getVideoStreams()) {
+        for(StreamInfo.VideoStream s : extractor.getVideoStreams()) {
             assertTrue(s.url,
                     s.url.contains("https://"));
             assertTrue(s.resolution.length() > 0);

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorRestrictedTest.java
Patch:
@@ -5,7 +5,7 @@
 import org.schabi.newpipe.Downloader;
 import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.ParsingException;
-import org.schabi.newpipe.extractor.VideoInfo;
+import org.schabi.newpipe.extractor.StreamInfo;
 import org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor;
 
 import java.io.IOException;
@@ -73,7 +73,7 @@ public void testGetAudioStreams() throws ParsingException {
     }
 
     public void testGetVideoStreams() throws ParsingException {
-        for(VideoInfo.VideoStream s : extractor.getVideoStreams()) {
+        for(StreamInfo.VideoStream s : extractor.getVideoStreams()) {
             assertTrue(s.url,
                     s.url.contains("https://"));
             assertTrue(s.resolution.length() > 0);

File: app/src/main/java/org/schabi/newpipe/extractor/AbstractVideoInfo.java
Patch:
@@ -20,7 +20,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-/**Common properties between VideoInfo and VideoPreviewInfo.*/
+/**Common properties between StreamInfo and StreamPreviewInfo.*/
 public abstract class AbstractVideoInfo {
     public String id = "";
     public String title = "";

File: app/src/main/java/org/schabi/newpipe/extractor/DashMpdParser.java
Patch:
@@ -37,7 +37,7 @@ static class DashMpdParsingException extends ParsingException {
         }
     }
 
-    public static List<VideoInfo.AudioStream> getAudioStreams(String dashManifestUrl,
+    public static List<StreamInfo.AudioStream> getAudioStreams(String dashManifestUrl,
                                                              Downloader downloader)
             throws DashMpdParsingException {
         String dashDoc;
@@ -46,7 +46,7 @@ public static List<VideoInfo.AudioStream> getAudioStreams(String dashManifestUrl
         } catch(IOException ioe) {
             throw new DashMpdParsingException("Could not get dash mpd: " + dashManifestUrl, ioe);
         }
-        Vector<VideoInfo.AudioStream> audioStreams = new Vector<>();
+        Vector<StreamInfo.AudioStream> audioStreams = new Vector<>();
         try {
             XmlPullParser parser = Xml.newPullParser();
             parser.setInput(new StringReader(dashDoc));
@@ -83,7 +83,7 @@ public static List<VideoInfo.AudioStream> getAudioStreams(String dashManifestUrl
                             } else if(currentMimeType.equals(MediaFormat.M4A.mimeType)) {
                                 format = MediaFormat.M4A.id;
                             }
-                            audioStreams.add(new VideoInfo.AudioStream(parser.getText(),
+                            audioStreams.add(new StreamInfo.AudioStream(parser.getText(),
                                     format, currentBandwidth, currentSamplingRate));
                         }
                         break;

File: app/src/main/java/org/schabi/newpipe/extractor/ExtractionException.java
Patch:
@@ -21,8 +21,6 @@
  */
 
 public class ExtractionException extends Exception {
-    public ExtractionException() {}
-
     public ExtractionException(String message) {
         super(message);
     }

File: app/src/main/java/org/schabi/newpipe/extractor/StreamUrlIdHandler.java
Patch:
@@ -4,7 +4,7 @@
  * Created by Christian Schabesberger on 02.02.16.
  *
  * Copyright (C) Christian Schabesberger 2016 <chris.schabesberger@mailbox.org>
- * VideoUrlIdHandler.java is part of NewPipe.
+ * StreamUrlIdHandler.java is part of NewPipe.
  *
  * NewPipe is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -20,7 +20,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-public interface VideoUrlIdHandler {
+public interface StreamUrlIdHandler {
     String getVideoUrl(String videoId);
     String getVideoId(String siteUrl) throws ParsingException;
     String cleanUrl(String siteUrl) throws ParsingException;

File: app/src/main/java/org/schabi/newpipe/extractor/StreamingService.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * Created by Christian Schabesberger on 23.08.15.
  *
- * Copyright (C) Christian Schabesberger 2015 <chris.schabesberger@mailbox.org>
+ * Copyright (C) Christian Schabesberger 2016 <chris.schabesberger@mailbox.org>
  * StreamingService.java is part of NewPipe.
  *
  * NewPipe is free software: you can redistribute it and/or modify
@@ -31,7 +31,7 @@ StreamExtractor getExtractorInstance(String url, Downloader downloader)
             throws IOException, ExtractionException;
     SearchEngine getSearchEngineInstance();
 
-    VideoUrlIdHandler getUrlIdHandler();
+    StreamUrlIdHandler getUrlIdHandler();
 
 
 }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamUrlIdHandler.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.schabi.newpipe.extractor.Parser;
 import org.schabi.newpipe.extractor.ParsingException;
-import org.schabi.newpipe.extractor.VideoUrlIdHandler;
+import org.schabi.newpipe.extractor.StreamUrlIdHandler;
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
@@ -11,7 +11,7 @@
  * Created by Christian Schabesberger on 02.02.16.
  *
  * Copyright (C) Christian Schabesberger 2016 <chris.schabesberger@mailbox.org>
- * YoutubeVideoUrlIdHandler.java is part of NewPipe.
+ * YoutubeStreamUrlIdHandler.java is part of NewPipe.
  *
  * NewPipe is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -27,7 +27,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-public class YoutubeVideoUrlIdHandler implements VideoUrlIdHandler {
+public class YoutubeStreamUrlIdHandler implements StreamUrlIdHandler {
     @SuppressWarnings("WeakerAccess")
     @Override
     public String getVideoUrl(String videoId) {

File: app/src/main/java/org/schabi/newpipe/VideoItemListFragment.java
Patch:
@@ -151,8 +151,6 @@ public void run() {
                         /* todo: this shoudl not be assigned static */ "Youtube", query, R.string.general_error));
 
                 e.printStackTrace();
-            } finally {
-
             }
         }
     }

File: app/src/main/java/org/schabi/newpipe/extractor/ParsingException.java
Patch:
@@ -25,9 +25,6 @@ public class ParsingException extends ExtractionException {
     public ParsingException(String message) {
         super(message);
     }
-    public ParsingException(Throwable cause) {
-        super(cause);
-    }
     public ParsingException(String message, Throwable cause) {
         super(message, cause);
     }

File: app/src/main/java/org/schabi/newpipe/extractor/StreamExtractor.java
Patch:
@@ -44,9 +44,6 @@ public class ContentNotAvailableException extends ParsingException {
         public ContentNotAvailableException(String message) {
             super(message);
         }
-        public ContentNotAvailableException(Throwable cause) {
-            super(cause);
-        }
         public ContentNotAvailableException(String message, Throwable cause) {
             super(message, cause);
         }

File: app/src/main/java/org/schabi/newpipe/VideoItemListFragment.java
Patch:
@@ -151,6 +151,8 @@ public void run() {
                         /* todo: this shoudl not be assigned static */ "Youtube", query, R.string.general_error));
 
                 e.printStackTrace();
+            } finally {
+
             }
         }
     }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -96,6 +96,9 @@ public StreamPreviewInfoCollector search(String query, int page, String language
             // both types of spell correction item
             if (!((el = item.select("div[class*=\"spell-correction\"]").first()) == null)) {
                 collector.setSuggestion(el.select("a").first().text());
+                if(list.children().size() == 1) {
+                    throw new NothingFoundException("Did you mean: " + el.select("a").first().text());
+                }
                 // search message item
             } else if (!((el = item.select("div[class*=\"search-message\"]").first()) == null)) {
                 //result.errorMessage = el.text();

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -114,6 +114,7 @@ public void onClick(View v) {
             ActivityCommunicator ac = ActivityCommunicator.getCommunicator();
             ac.errorList = el;
             ac.returnActivity = returnAcitivty;
+            ac.errorInfo = errorInfo;
             Intent intent = new Intent(context, ErrorActivity.class);
             context.startActivity(intent);
         }

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -92,6 +92,7 @@ public static ErrorInfo make(int userAction, String serviceName, String request,
     private EditText userCommentBox;
     private Button reportButton;
     private TextView infoView;
+    private TextView errorMessageView;
 
     public static void reportError(final Context context, final List<Exception> el,
                                    final Class returnAcitivty, View rootView, final ErrorInfo errorInfo) {
@@ -159,6 +160,7 @@ protected void onCreate(Bundle savedInstanceState) {
         userCommentBox = (EditText) findViewById(R.id.errorCommentBox);
         errorView = (TextView) findViewById(R.id.errorView);
         infoView = (TextView) findViewById(R.id.errorInfosView);
+        errorMessageView = (TextView) findViewById(R.id.errorMessageView);
 
         errorView.setText(formErrorText(errorList));
 
@@ -184,8 +186,7 @@ public void onClick(View v) {
         globIpRangeThread = new Thread(new IpRagneRequester());
         globIpRangeThread.start();
 
-        Toast.makeText(this,
-                errorInfo.message, Toast.LENGTH_LONG).show();
+        errorMessageView.setText(errorInfo.message);
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/VideoItemListFragment.java
Patch:
@@ -129,7 +129,7 @@ public void run() {
                     View rootView = a.findViewById(R.id.videoitem_list);
                     ErrorActivity.reportError(h, getActivity(), result.errors, null, rootView,
                             ErrorActivity.ErrorInfo.make(ErrorActivity.SEARCHED,
-                        /* todo: this shoudl not be assigned static */ "Youtube", query, R.string.general_error));
+                        /* todo: this shoudl not be assigned static */ "Youtube", query, R.string.light_parsing_error));
 
                 }
                 // hard errors:

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -211,6 +211,8 @@ public String getUploadDate() throws ParsingException {
 
             @Override
             public long getViewCount() throws ParsingException {
+                throw new ParsingException("blabla");
+                /*
                 String output;
                 String input = item.select("div[class=\"yt-lockup-meta\"]").first()
                         .select("li").get(1)
@@ -224,6 +226,7 @@ public long getViewCount() throws ParsingException {
                     Log.d(TAG, "bla");
                 }
                 return Long.parseLong(output);
+                */
             }
 
             @Override

File: app/src/main/java/org/schabi/newpipe/ErrorActivity.java
Patch:
@@ -74,7 +74,7 @@ public static ErrorInfo make(int userAction, String serviceName, String request,
     public static final int REQUESTED_STREAM = 1;
     public static final String SEARCHED_STRING = "Searched";
     public static final String REQUESTED_STREAM_STRING = "Requested Stream";
-    public static final String ERROR_EMAIL_ADDRESS = "dummy@dummy.org";
+    public static final String ERROR_EMAIL_ADDRESS = "error@newpipe.schabi.org";
     public static final String ERROR_EMAIL_SUBJECT="Exception in NewPipe " + BuildConfig.VERSION_NAME;
 
     private List<Exception> errorList;

File: app/src/main/java/org/schabi/newpipe/VideoItemListFragment.java
Patch:
@@ -17,7 +17,6 @@
 import java.util.List;
 
 import org.schabi.newpipe.extractor.ExtractionException;
-import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.VideoPreviewInfo;
 import org.schabi.newpipe.extractor.SearchEngine;
 import org.schabi.newpipe.extractor.StreamingService;

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -38,7 +38,7 @@ public void setUp() throws Exception{
         super.setUp();
         SearchEngine engine = new YoutubeSearchEngine();
 
-        result = engine.search("https://www.youtube.com/results?search_query=bla",
+        result = engine.search("bla",
                 0, "de", new Downloader());
         suggestionReply = engine.suggestionList("hello","de",new Downloader());
     }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -246,6 +246,9 @@ private long getViewCount(Element item) throws Parser.RegexException{
                 .replace(".", "")
                 .replace(",", "");
 
+        if(Long.parseLong(output) == 30) {
+            Log.d(TAG, "bla");
+        }
         return Long.parseLong(output);
     }
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -699,7 +699,7 @@ private VideoPreviewInfo extractVideoPreviewInfo(Element li) throws ParsingExcep
             try {
                 info.view_count = Long.parseLong(li.select("span.view-count")
                         .first().text().replaceAll("[^\\d]", ""));
-            } catch (NullPointerException e) {//related videos sometimes have no view count
+            } catch (Exception e) {//related videos sometimes have no view count
                 info.view_count = 0;
             }
             info.uploader = li.select("span.g-hovercard").first().text();

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorGemaTest.java
Patch:
@@ -1,4 +1,4 @@
-package org.schabi.newpipe.services.youtube;
+package org.schabi.newpipe.extractor.youtube;
 
 import android.test.AndroidTestCase;
 

File: app/src/main/java/org/schabi/newpipe/extractor/StreamExtractor.java
Patch:
@@ -59,7 +59,7 @@ public ContentNotAvailableException(String message, Throwable cause) {
     public abstract String getDescription() throws ParsingException;
     public abstract String getUploader() throws ParsingException;
     public abstract int getLength() throws ParsingException;
-    public abstract long getViews() throws ParsingException;
+    public abstract long getViewCount() throws ParsingException;
     public abstract String getUploadDate() throws ParsingException;
     public abstract String getThumbnailUrl() throws ParsingException;
     public abstract String getUploaderThumbnailUrl() throws ParsingException;

File: app/src/main/java/org/schabi/newpipe/extractor/VideoInfo.java
Patch:
@@ -150,7 +150,7 @@ private static VideoInfo extractOptionalData(
             videoInfo.addException(e);
         }
         try {
-            videoInfo.view_count = extractor.getViews();
+            videoInfo.view_count = extractor.getViewCount();
         } catch(Exception e) {
             videoInfo.addException(e);
         }

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -360,12 +360,12 @@ public int getLength() throws ParsingException {
     }
 
     @Override
-    public long getViews() throws ParsingException {
+    public long getViewCount() throws ParsingException {
         try {
             String viewCountString = doc.select("meta[itemprop=interactionCount]").attr("content");
             return Long.parseLong(viewCountString);
         } catch (Exception e) {//todo: find fallback method
-            throw new ParsingException("failed to number of views", e);
+            throw new ParsingException("failed to get number of views", e);
         }
     }
 

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -108,7 +108,9 @@ public boolean onQueryTextSubmit(String query) {
 
         @Override
         public boolean onQueryTextChange(String newText) {
-            searchSuggestions(newText);
+            if(!newText.isEmpty()) {
+                searchSuggestions(newText);
+            }
             return true;
         }
 

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeVideoUrlIdHandler.java
Patch:
@@ -49,7 +49,7 @@ public String getVideoId(String url) throws ParsingException {
                     throw new ParsingException("Could not parse attribution_link", uee);
                 }
             } else {
-                id = Parser.matchGroup1("youtube\\.com/watch\\?v=([\\-a-zA-Z0-9_]{11})", url);
+                id = Parser.matchGroup1("[?&]v=([\\-a-zA-Z0-9_]{11})", url);
             }
         }
         else if(url.contains("youtu.be")) {

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorDefaultTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.test.AndroidTestCase;
 
 import org.schabi.newpipe.Downloader;
-import org.schabi.newpipe.extractor.ExctractionException;
+import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.ParsingException;
 import org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor;
 import org.schabi.newpipe.extractor.VideoInfo;
@@ -33,7 +33,7 @@
 public class YoutubeStreamExtractorDefaultTest extends AndroidTestCase {
     private YoutubeStreamExtractor extractor;
 
-    public void setUp() throws IOException, ExctractionException {
+    public void setUp() throws IOException, ExtractionException {
         /* some anonymus video test
         extractor = new YoutubeStreamExtractor("https://www.youtube.com/watch?v=FmG385_uUys",
                 new Downloader()); */
@@ -47,7 +47,7 @@ public void testGetInvalidTimeStamp() throws ParsingException {
                 extractor.getTimeStamp() <= 0);
     }
 
-    public void testGetValidTimeStamp() throws ExctractionException, IOException {
+    public void testGetValidTimeStamp() throws ExtractionException, IOException {
         YoutubeStreamExtractor extractor =
                 new YoutubeStreamExtractor("https://youtu.be/FmG385_uUys?t=174", new Downloader());
         assertTrue(Integer.toString(extractor.getTimeStamp()),

File: app/src/androidTest/java/org/schabi/newpipe/extractor/youtube/YoutubeStreamExtractorGemaTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.test.AndroidTestCase;
 
 import org.schabi.newpipe.Downloader;
-import org.schabi.newpipe.extractor.ExctractionException;
+import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor;
 
 import java.io.IOException;
@@ -35,7 +35,7 @@ public class YoutubeStreamExtractorGemaTest extends AndroidTestCase {
     // Deaktivate this Test Case bevore uploading it githup, otherwise CI will fail.
     private static final boolean testActive = false;
 
-    public void testGemaError() throws IOException, ExctractionException {
+    public void testGemaError() throws IOException, ExtractionException {
         if(testActive) {
             try {
                 new YoutubeStreamExtractor("https://www.youtube.com/watch?v=3O1_3zBUKM8",

File: app/src/main/java/org/schabi/newpipe/extractor/ParsingException.java
Patch:
@@ -21,7 +21,7 @@
  */
 
 
-public class ParsingException extends ExctractionException {
+public class ParsingException extends ExtractionException {
     public ParsingException() {}
     public ParsingException(String message) {
         super(message);

File: app/src/main/java/org/schabi/newpipe/extractor/SearchEngine.java
Patch:
@@ -34,9 +34,9 @@ class Result {
     }
 
     ArrayList<String> suggestionList(String query, Downloader dl)
-            throws ExctractionException, IOException;
+            throws ExtractionException, IOException;
 
     //Result search(String query, int page);
     Result search(String query, int page, String contentCountry, Downloader dl)
-            throws ExctractionException, IOException;
+            throws ExtractionException, IOException;
 }

File: app/src/main/java/org/schabi/newpipe/extractor/StreamExtractor.java
Patch:
@@ -28,7 +28,7 @@
 @SuppressWarnings("ALL")
 public interface StreamExtractor {
 
-    public class ExctractorInitException extends ExctractionException {
+    public class ExctractorInitException extends ExtractionException {
         public ExctractorInitException() {}
         public ExctractorInitException(String message) {
             super(message);

File: app/src/main/java/org/schabi/newpipe/extractor/StreamingService.java
Patch:
@@ -28,7 +28,7 @@ class ServiceInfo {
     }
     ServiceInfo getServiceInfo();
     StreamExtractor getExtractorInstance(String url, Downloader downloader)
-            throws IOException, ExctractionException;
+            throws IOException, ExtractionException;
     SearchEngine getSearchEngineInstance();
 
     VideoUrlIdHandler getUrlIdHandler();

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeService.java
Patch:
@@ -1,6 +1,6 @@
 package org.schabi.newpipe.extractor.services.youtube;
 
-import org.schabi.newpipe.extractor.ExctractionException;
+import org.schabi.newpipe.extractor.ExtractionException;
 import org.schabi.newpipe.extractor.Downloader;
 import org.schabi.newpipe.extractor.StreamExtractor;
 import org.schabi.newpipe.extractor.StreamingService;
@@ -39,7 +39,7 @@ public ServiceInfo getServiceInfo() {
     }
     @Override
     public StreamExtractor getExtractorInstance(String url, Downloader downloader)
-            throws ExctractionException, IOException {
+            throws ExtractionException, IOException {
         VideoUrlIdHandler urlIdHandler = new YoutubeVideoUrlIdHandler();
         if(urlIdHandler.acceptUrl(url)) {
             return new YoutubeStreamExtractor(url, downloader) ;

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeVideoUrlIdHandler.java
Patch:
@@ -37,7 +37,7 @@ public String getVideoUrl(String videoId) {
     @SuppressWarnings("WeakerAccess")
     @Override
     public String getVideoId(String url) throws ParsingException {
-        String id = "";
+        String id;
 
         if(url.contains("youtube")) {
             if(url.contains("attribution_link")) {

File: app/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -386,7 +386,7 @@ public List<VideoInfo.AudioStream> getAudioStreams() throws ParsingException {
         Vector<VideoInfo.AudioStream> audioStreams = new Vector<>();
         try{
             String encoded_url_map;
-            if (videoInfoPage == null) {
+            if (playerArgs == null) {
                 encoded_url_map = videoInfoPage.get("adaptive_fmts");
             } else {
                 encoded_url_map = playerArgs.getString("adaptive_fmts");

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -344,6 +344,8 @@ public void onClick(View v) {
                 activity.findViewById(R.id.similarVideosView).setVisibility(View.GONE);
             }
 
+            setupActionBarHandler(info);
+
             if(autoPlayEnabled) {
                 playVideo(info);
             }
@@ -364,7 +366,6 @@ public void onClick(View v) {
                 }
             });
 
-            setupActionBarHandler(info);
         } catch (java.lang.NullPointerException e) {
             Log.w(TAG, "updateInfo(): Fragment closed before thread ended work... or else");
             e.printStackTrace();

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailFragment.java
Patch:
@@ -301,6 +301,8 @@ public void onClick(View v) {
 
             initSimilarVideos(info, videoItemViewCreator);
 
+            setupActionBarHandler(info);
+
             if(autoPlayEnabled) {
                 playVideo(info);
             }
@@ -321,7 +323,6 @@ public void onClick(View v) {
                 }
             });
 
-            setupActionBarHandler(info);
         } catch (java.lang.NullPointerException e) {
             Log.w(TAG, "updateInfo(): Fragment closed before thread ended work... or else");
             e.printStackTrace();

File: app/src/androidTest/java/org/schabi/newpipe/services/youtube/YoutubeStreamExtractorDefaultTest.java
Patch:
@@ -104,6 +104,6 @@ public void testGetVideoStreams() throws ParsingException {
 
     public void testGetDashMpd() throws ParsingException {
         assertTrue(extractor.getDashMpdUrl(),
-                !extractor.getDashMpdUrl().isEmpty());
+                extractor.getDashMpdUrl() != null || !extractor.getDashMpdUrl().isEmpty());
     }
 }

File: app/src/main/java/org/schabi/newpipe/PlayVideoActivity.java
Patch:
@@ -130,7 +130,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
             public void onPrepared(MediaPlayer mp) {
                 progressBar.setVisibility(View.GONE);
                 videoView.seekTo(position);
-                if (position == 0) {
+                if (position <= 0) {
                     videoView.start();
                     showUi();
                 } else {

File: app/src/main/java/org/schabi/newpipe/crawler/VideoInfo.java
Patch:
@@ -111,7 +111,7 @@ public static VideoInfo getVideoInfo(StreamExtractor extractor, Downloader downl
     public VideoPreviewInfo next_video = null;
     public List<VideoPreviewInfo> related_videos = null;
     //in seconds. some metadata is not passed using a VideoInfo object!
-    public int start_position = -1;
+    public int start_position = 0;
     //todo: public int service_id = -1;
 
     public VideoInfo() {}

File: app/src/main/java/org/schabi/newpipe/crawler/services/youtube/YoutubeStreamExtractor.java
Patch:
@@ -463,7 +463,6 @@ public List<VideoInfo.VideoStream> getVideoOnlyStreams() throws ParsingException
      * @return the offset (in seconds), or 0 if no timestamp is found.*/
     @Override
     public int getTimeStamp() throws ParsingException {
-        //todo: use video_info for getting timestamp
         String timeStamp;
         try {
             timeStamp = Parser.matchGroup1("((#|&|\\?)t=\\d{0,3}h?\\d{0,3}m?\\d{1,3}s?)", pageUrl);
@@ -505,7 +504,7 @@ public int getTimeStamp() throws ParsingException {
                 throw new ParsingException("Could not get timestamp.", e);
             }
         } else {
-            return -1;
+            return 0;
         }
     }
 

File: app/src/androidTest/java/org/schabi/newpipe/services/youtube/YoutubeSearchEngineTest.java
Patch:
@@ -37,6 +37,7 @@ public class YoutubeSearchEngineTest extends AndroidTestCase {
     public void setUp() throws Exception{
         super.setUp();
         SearchEngine engine = new YoutubeSearchEngine();
+
         result = engine.search("https://www.youtube.com/results?search_query=bla",
                 0, "de", new Downloader());
         suggestionReply = engine.suggestionList("hello", new Downloader());

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailActivity.java
Patch:
@@ -71,7 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {
             if (getIntent().getData() != null) {
                 videoUrl = getIntent().getData().toString();
                 StreamingService[] serviceList = ServiceList.getServices();
-                //VideoExtractor videoExtractor = null;
+                //StreamExtractor videoExtractor = null;
                 for (int i = 0; i < serviceList.length; i++) {
                     if (serviceList[i].getUrlIdHandler().acceptUrl(videoUrl)) {
                         arguments.putInt(VideoItemDetailFragment.STREAMING_SERVICE, i);

File: app/src/main/java/org/schabi/newpipe/crawler/MediaFormat.java
Patch:
@@ -25,10 +25,12 @@
 /**Static data about various media formats support by Newpipe, eg mime type, extension*/
 
 public enum MediaFormat {
+    //video and audio combined formats
     //           id      name    suffix  mime type
     MPEG_4      (0x0,   "MPEG-4", "mp4", "video/mp4"),
     v3GPP       (0x1,   "3GPP",   "3gp", "video/3gpp"),
     WEBM        (0x2,   "WebM",  "webm", "video/webm"),
+    // audio formats
     M4A         (0x3,   "m4a",   "m4a",  "audio/mp4"),
     WEBMA       (0x4,   "WebM",  "webm", "audio/webm");
 

File: app/src/main/java/org/schabi/newpipe/crawler/StreamExtractor.java
Patch:
@@ -4,7 +4,7 @@
  * Created by Christian Schabesberger on 10.08.15.
  *
  * Copyright (C) Christian Schabesberger 2015 <chris.schabesberger@mailbox.org>
- * VideoExtractor.java is part of NewPipe.
+ * StreamExtractor.java is part of NewPipe.
  *
  * NewPipe is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -26,7 +26,7 @@
 
 
 @SuppressWarnings("ALL")
-public interface VideoExtractor {
+public interface StreamExtractor {
 
     public class ExctractorInitException extends CrawlingException {
         public ExctractorInitException() {}
@@ -65,6 +65,7 @@ public ContentNotAvailableException(String message, Throwable cause) {
     public abstract String getUploaderThumbnailUrl() throws ParsingException;
     public abstract List<VideoInfo.AudioStream> getAudioStreams() throws ParsingException;
     public abstract List<VideoInfo.VideoStream> getVideoStreams() throws ParsingException;
+    public abstract List<VideoInfo.VideoStream> getVideoOnlyStreams() throws ParsingException;
     public abstract String getDashMpdUrl() throws ParsingException;
     public abstract int getAgeLimit() throws ParsingException;
     public abstract String getAverageRating() throws ParsingException;

File: app/src/main/java/org/schabi/newpipe/crawler/StreamingService.java
Patch:
@@ -27,7 +27,7 @@ class ServiceInfo {
         public String name = "";
     }
     ServiceInfo getServiceInfo();
-    VideoExtractor getExtractorInstance(String url, Downloader downloader)
+    StreamExtractor getExtractorInstance(String url, Downloader downloader)
             throws IOException, CrawlingException;
     SearchEngine getSearchEngineInstance();
 

File: app/src/main/java/org/schabi/newpipe/crawler/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -6,11 +6,9 @@
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
-import org.schabi.newpipe.crawler.CrawlingException;
 import org.schabi.newpipe.crawler.Downloader;
 import org.schabi.newpipe.crawler.ParsingException;
 import org.schabi.newpipe.crawler.SearchEngine;
-import org.schabi.newpipe.crawler.VideoExtractor;
 import org.schabi.newpipe.crawler.VideoPreviewInfo;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;

File: app/src/main/java/org/schabi/newpipe/crawler/services/youtube/YoutubeService.java
Patch:
@@ -2,9 +2,9 @@
 
 import org.schabi.newpipe.crawler.CrawlingException;
 import org.schabi.newpipe.crawler.Downloader;
+import org.schabi.newpipe.crawler.StreamExtractor;
 import org.schabi.newpipe.crawler.StreamingService;
 import org.schabi.newpipe.crawler.VideoUrlIdHandler;
-import org.schabi.newpipe.crawler.VideoExtractor;
 import org.schabi.newpipe.crawler.SearchEngine;
 
 import java.io.IOException;
@@ -38,11 +38,11 @@ public ServiceInfo getServiceInfo() {
         return serviceInfo;
     }
     @Override
-    public VideoExtractor getExtractorInstance(String url, Downloader downloader)
+    public StreamExtractor getExtractorInstance(String url, Downloader downloader)
             throws CrawlingException, IOException {
         VideoUrlIdHandler urlIdHandler = new YoutubeVideoUrlIdHandler();
         if(urlIdHandler.acceptUrl(url)) {
-            return new YoutubeVideoExtractor(url, downloader) ;
+            return new YoutubeStreamExtractor(url, downloader) ;
         }
         else {
             throw new IllegalArgumentException("supplied String is not a valid Youtube URL");

File: app/src/main/java/org/schabi/newpipe/crawler/services/youtube/YoutubeVideoUrlIdHandler.java
Patch:
@@ -1,7 +1,7 @@
 package org.schabi.newpipe.crawler.services.youtube;
 
+import org.schabi.newpipe.crawler.Parser;
 import org.schabi.newpipe.crawler.ParsingException;
-import org.schabi.newpipe.crawler.RegexHelper;
 import org.schabi.newpipe.crawler.VideoUrlIdHandler;
 
 /**
@@ -47,7 +47,7 @@ else if(url.contains("youtu.be")) {
             throw new ParsingException("Error no suitable url: " + url);
         }
 
-        id = RegexHelper.matchGroup1(pat, url);
+        id = Parser.matchGroup1(pat, url);
         if(!id.isEmpty()){
             //Log.i(TAG, "string \""+url+"\" matches!");
             return id;

File: app/src/main/java/org/schabi/newpipe/crawler/services/youtube/YoutubeVideoExtractor.java
Patch:
@@ -89,8 +89,8 @@ public class GemaException extends ContentNotAvailableException {
     public YoutubeVideoExtractor(String pageUrl, Downloader dl) throws CrawlingException, IOException {
         //most common videoInfo fields are now set in our superclass, for all services
         downloader = dl;
-        this.pageUrl = urlidhandler.cleanUrl(pageUrl);
-        String pageContent = downloader.download(this.pageUrl);
+        this.pageUrl = pageUrl;
+        String pageContent = downloader.download(urlidhandler.cleanUrl(pageUrl));
         doc = Jsoup.parse(pageContent, pageUrl);
         String ytPlayerConfigRaw;
         JSONObject ytPlayerConfig;

File: app/src/main/java/org/schabi/newpipe/crawler/StreamingService.java
Patch:
@@ -1,5 +1,7 @@
 package org.schabi.newpipe.crawler;
 
+import java.io.IOException;
+
 /**
  * Created by Christian Schabesberger on 23.08.15.
  *
@@ -25,7 +27,7 @@ class ServiceInfo {
         public String name = "";
     }
     ServiceInfo getServiceInfo();
-    VideoExtractor getExtractorInstance(String url, Downloader downloader);
+    VideoExtractor getExtractorInstance(String url, Downloader downloader) throws IOException, CrawlingException;
     SearchEngine getSearchEngineInstance();
 
     /**When a VIEW_ACTION is caught this function will test if the url delivered within the calling

File: app/src/main/java/org/schabi/newpipe/PlayVideoActivity.java
Patch:
@@ -27,6 +27,7 @@
 import android.widget.ProgressBar;
 import android.widget.VideoView;
 import info.guardianproject.netcipher.NetCipher;
+import info.guardianproject.netcipher.proxy.OrbotHelper;
 
 /**
  * Copyright (C) Christian Schabesberger 2015 <chris.schabesberger@mailbox.org>
@@ -362,7 +363,8 @@ private void toggleOrientation() {
     }
 
     private void setTorPreference(SharedPreferences prefs) {
-        if(prefs.getBoolean(getString(R.string.useTor), false)) {
+        // if Orbot is installed, then default to using Tor, the user can still override
+        if(prefs.getBoolean(getString(R.string.useTor), OrbotHelper.isOrbotInstalled(this))) {
             NetCipher.useTor();
         } else {
             NetCipher.setProxy(null);

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.SearchView;
@@ -171,7 +172,7 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
-        SettingsActivity.initSettings(this);
+        PreferenceManager.setDefaultValues(this, R.xml.settings_screen, false);
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.SearchView;
@@ -171,7 +172,7 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
-        SettingsActivity.initSettings(this);
+        PreferenceManager.setDefaultValues(this, R.xml.settings_screen, false);
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/ActionBarHandler.java
Patch:
@@ -16,6 +16,8 @@
 import android.view.MenuItem;
 import android.widget.ArrayAdapter;
 
+import org.schabi.newpipe.services.VideoInfo;
+
 /**
  * Created by Christian Schabesberger on 18.08.15.
  *

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -33,7 +33,7 @@ public VideoInfoItemViewCreator(LayoutInflater inflater) {
         this.inflater = inflater;
     }
 
-    public View getViewByVideoInfoItem(View convertView, ViewGroup parent, VideoPreviewInfo info) {
+    public View getViewFromVideoInfoItem(View convertView, ViewGroup parent, VideoPreviewInfo info) {
         ViewHolder holder;
         if(convertView == null) {
             convertView = inflater.inflate(R.layout.video_item, parent, false);

File: app/src/main/java/org/schabi/newpipe/VideoListAdapter.java
Patch:
@@ -96,7 +96,7 @@ public long getItemId(int position) {
 
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
-        convertView = viewCreator.getViewByVideoInfoItem(convertView, parent, videoList.get(position));
+        convertView = viewCreator.getViewFromVideoInfoItem(convertView, parent, videoList.get(position));
 
         if(listView.isItemChecked(position)) {
             convertView.setBackgroundColor(ContextCompat.getColor(context,R.color.primaryColorYoutube));

File: app/src/main/java/org/schabi/newpipe/services/VideoExtractor.java
Patch:
@@ -109,7 +109,7 @@ public VideoInfo getVideoInfo()
     protected abstract String getDescription();
     protected abstract String getUploader();
     protected abstract int getLength();
-    protected abstract int getViews();
+    protected abstract long getViews();
     protected abstract String getUploadDate();
     protected abstract String getThumbnailUrl();
     protected abstract String getUploaderThumbnailUrl();

File: app/src/main/java/org/schabi/newpipe/services/youtube/YoutubeVideoExtractor.java
Patch:
@@ -155,10 +155,10 @@ public int getLength() {
     }
 
     @Override
-    public int getViews() {
+    public long getViews() {
         try {
             String viewCountString = doc.select("meta[itemprop=interactionCount]").attr("content");
-            return Integer.parseInt(viewCountString);
+            return Long.parseLong(viewCountString);
         } catch (Exception e) {//todo: find fallback method
             Log.e(TAG, "failed to number of views");
             e.printStackTrace();

File: app/src/main/java/org/schabi/newpipe/services/VideoExtractor.java
Patch:
@@ -109,7 +109,7 @@ public VideoInfo getVideoInfo()
     protected abstract String getDescription();
     protected abstract String getUploader();
     protected abstract int getLength();
-    protected abstract int getViews();
+    protected abstract long getViews();
     protected abstract String getUploadDate();
     protected abstract String getThumbnailUrl();
     protected abstract String getUploaderThumbnailUrl();

File: app/src/main/java/org/schabi/newpipe/services/youtube/YoutubeVideoExtractor.java
Patch:
@@ -155,10 +155,10 @@ public int getLength() {
     }
 
     @Override
-    public int getViews() {
+    public long getViews() {
         try {
             String viewCountString = doc.select("meta[itemprop=interactionCount]").attr("content");
-            return Integer.parseInt(viewCountString);
+            return Long.parseLong(viewCountString);
         } catch (Exception e) {//todo: find fallback method
             Log.e(TAG, "failed to number of views");
             e.printStackTrace();

File: app/src/main/java/org/schabi/newpipe/services/youtube/YoutubeVideoExtractor.java
Patch:
@@ -552,8 +552,7 @@ private String loadDecryptionCode(String playerUrl) {
             decryptionFuncName = matchGroup1("\\.sig\\|\\|([a-zA-Z0-9$]+)\\(", playerCode);
 
             String functionPattern = "(" + decryptionFuncName.replace("$", "\\$") +"=function\\([a-zA-Z0-9_]*\\)\\{.+?\\})";
-            decryptionFunc = matchGroup1(functionPattern, playerCode);
-            decryptionFunc += ";";
+            decryptionFunc = "var " + matchGroup1(functionPattern, playerCode) + ";";
 
             helperObjectName = matchGroup1(";([A-Za-z0-9_\\$]{2})\\...\\(", decryptionFunc);
 
@@ -565,7 +564,7 @@ private String loadDecryptionCode(String playerUrl) {
         }
 
         callerFunc = callerFunc.replace("%%", decryptionFuncName);
-        decryptionCode = helperObject + "var " + decryptionFunc + callerFunc;
+        decryptionCode = helperObject + decryptionFunc + callerFunc;
 
         return decryptionCode;
     }

File: app/src/main/java/org/schabi/newpipe/services/youtube/YoutubeSearchEngine.java
Patch:
@@ -109,7 +109,7 @@ public Result search(String query, int page, String languageCode) {
                     Matcher m = p.matcher(resultItem.webpage_url);
                     resultItem.id=m.group(1);
                 } catch (Exception e) {
-                    e.printStackTrace();
+                    //e.printStackTrace();
                 }
                 resultItem.title = dl.text();
 

File: app/src/main/java/org/schabi/newpipe/VideoInfo.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.graphics.Bitmap;
 
+import java.util.List;
+
 /**
  * Created by Christian Schabesberger on 26.08.15.
  *
@@ -41,7 +43,7 @@ public class VideoInfo extends AbstractVideoInfo {
     public int dislike_count = -1;
     public String average_rating = "";
     public VideoPreviewInfo nextVideo = null;
-    public VideoPreviewInfo[] relatedVideos = null;
+    public List<VideoPreviewInfo> relatedVideos = null;
     public int startPosition = -1;//in seconds. some metadata is not passed using a VideoInfo object!
 
     public static final int VIDEO_AVAILABLE = 0x00;

File: app/src/main/java/org/schabi/newpipe/services/youtube/YoutubeExtractor.java
Patch:
@@ -421,7 +421,9 @@ public VideoInfo getVideoInfo() {
                 relatedVideos.add(extractVideoPreviewInfo(li));
             }
         }
-        videoInfo.relatedVideos = relatedVideos.toArray(new VideoPreviewInfo[relatedVideos.size()]);
+        //todo: replace conversion
+        videoInfo.relatedVideos = relatedVideos;
+        //videoInfo.relatedVideos = relatedVideos.toArray(new VideoPreviewInfo[relatedVideos.size()]);
         return videoInfo;
     }
 

File: app/src/main/java/org/schabi/newpipe/VideoInfo.java
Patch:
@@ -26,7 +26,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-
+/**Info object for opened videos, ie the video ready to play.*/
 public class VideoInfo {
     public String id = "";
     public String title = "";

File: app/src/main/java/org/schabi/newpipe/VideoInfoItem.java
Patch:
@@ -24,6 +24,7 @@
  * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.
  */
 
+/**Info object for previews of unopened videos, eg search results, related videos*/
 public class VideoInfoItem implements Parcelable {
     public String id = "";
     public String title = "";

File: app/src/main/java/org/schabi/newpipe/VideoListAdapter.java
Patch:
@@ -9,6 +9,7 @@
 import android.widget.BaseAdapter;
 import android.widget.ListView;
 
+import java.util.List;
 import java.util.Vector;
 
 /**
@@ -48,7 +49,7 @@ public VideoListAdapter(Context context, VideoItemListFragment videoListFragment
         this.context = context;
     }
 
-    public void addVideoList(Vector<VideoInfoItem> videos) {
+    public void addVideoList(List<VideoInfoItem> videos) {
         videoList.addAll(videos);
         for(int i = 0; i < videos.size(); i++) {
             downloadedThumbnailList.add(false);

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -287,12 +287,12 @@ public VideoInfo getVideoInfo(String siteUrl) {
             // likes
             likesString = doc.select("button.like-button-renderer-like-button").first()
                     .select("span.yt-uix-button-content").first().text();
-            videoInfo.like_count = Integer.parseInt(likesString.replace(",", ""));
+            videoInfo.like_count = Integer.parseInt(likesString.replaceAll("[^\\d]", ""));
             // dislikes
             dislikesString = doc.select("button.like-button-renderer-dislike-button").first()
                             .select("span.yt-uix-button-content").first().text();
 
-            videoInfo.dislike_count = Integer.parseInt(dislikesString.replace(",", ""));
+            videoInfo.dislike_count = Integer.parseInt(dislikesString.replaceAll("[^\\d]", ""));
         } catch(NumberFormatException nfe) {
             Log.e(TAG, "failed to parse likesString \""+likesString+"\" and dislikesString \""+
             dislikesString+"\" as integers");

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -287,12 +287,12 @@ public VideoInfo getVideoInfo(String siteUrl) {
             // likes
             likesString = doc.select("button.like-button-renderer-like-button").first()
                     .select("span.yt-uix-button-content").first().text();
-            videoInfo.like_count = Integer.parseInt(likesString.replace(",", ""));
+            videoInfo.like_count = Integer.parseInt(likesString.replaceAll("[^\\d]", ""));
             // dislikes
             dislikesString = doc.select("button.like-button-renderer-dislike-button").first()
                             .select("span.yt-uix-button-content").first().text();
 
-            videoInfo.dislike_count = Integer.parseInt(dislikesString.replace(",", ""));
+            videoInfo.dislike_count = Integer.parseInt(dislikesString.replaceAll("[^\\d]", ""));
         } catch(NumberFormatException nfe) {
             Log.e(TAG, "failed to parse likesString \""+likesString+"\" and dislikesString \""+
             dislikesString+"\" as integers");

File: app/src/main/java/org/schabi/newpipe/PlayVideoActivity.java
Patch:
@@ -253,10 +253,9 @@ private void hideUi() {
                     | View.SYSTEM_UI_FLAG_FULLSCREEN
                     | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                     | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
-        } else {
-            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-                    WindowManager.LayoutParams.FLAG_FULLSCREEN);
         }
+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+                WindowManager.LayoutParams.FLAG_FULLSCREEN);
     }
 
     private void adjustMediaControlMetrics() {

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeSearchEngine.java
Patch:
@@ -64,7 +64,6 @@ public Result search(String query, int page, String languageCode) {
         //if we've been passed a valid language code, append it to the URL
         if(languageCode.length() > 0) {
           //assert Pattern.matches("[a-z]{2}(-([A-Z]{2}|[0-9]{1,3}))?", languageCode);
-                Log.i(TAG, "URI: \""+builder+"\"");
                 site  = Downloader.download(url, languageCode);
         }
         else {

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -51,7 +51,7 @@ public View getViewByVideoInfoItem(View convertView, ViewGroup parent, VideoInfo
         }
 
         if(info.thumbnail == null) {
-            holder.itemThumbnailView.setImageResource(R.drawable.dummi_thumbnail);
+            holder.itemThumbnailView.setImageResource(R.drawable.dummy_thumbnail);
         } else {
             holder.itemThumbnailView.setImageBitmap(info.thumbnail);
         }

File: app/src/main/java/org/schabi/newpipe/Downloader.java
Patch:
@@ -37,7 +37,6 @@ public static String download(String siteUrl) {
             HttpURLConnection con = (HttpURLConnection) url.openConnection();
             con.setRequestMethod("GET");
             con.setRequestProperty("User-Agent", USER_AGENT);
-            con.setRequestProperty("Accept-Language", "en");
 
             BufferedReader in = new BufferedReader(
                     new InputStreamReader(con.getInputStream()));

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -51,7 +51,7 @@ public View getViewByVideoInfoItem(View convertView, ViewGroup parent, VideoInfo
         }
 
         if(info.thumbnail == null) {
-            holder.itemThumbnailView.setImageResource(R.drawable.dummi_thumbnail);
+            holder.itemThumbnailView.setImageResource(R.drawable.dummy_thumbnail);
         } else {
             holder.itemThumbnailView.setImageBitmap(info.thumbnail);
         }

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -320,6 +320,8 @@ public VideoInfo getVideoInfo(String siteUrl) {
         // view count
         videoInfo.view_count = doc.select("div[class=\"watch-view-count\"]").first().text();
 
+        videoInfo.view_count = matchGroup1("([0-9,]*$)", videoInfo.view_count);
+
         // next video
         videoInfo.nextVideo = extractVideoInfoItem(doc.select("div[class=\"watch-sidebar-section\"]").first()
                 .select("li").first());

File: app/src/main/java/org/schabi/newpipe/Downloader.java
Patch:
@@ -37,6 +37,7 @@ public static String download(String siteUrl) {
             HttpURLConnection con = (HttpURLConnection) url.openConnection();
             con.setRequestMethod("GET");
             con.setRequestProperty("User-Agent", USER_AGENT);
+            con.setRequestProperty("Accept-Language", "en");
 
             BufferedReader in = new BufferedReader(
                     new InputStreamReader(con.getInputStream()));

File: app/src/main/java/org/schabi/newpipe/SearchEngine.java
Patch:
@@ -1,5 +1,6 @@
 package org.schabi.newpipe;
 
+import java.util.ArrayList;
 import java.util.Vector;
 
 /**
@@ -33,5 +34,5 @@ class Result {
 
     Result search(String query, int page);
 
-    Result suggestionList(String query);
+    ArrayList<String> suggestionList(String query);
 }

File: app/src/main/java/org/schabi/newpipe/PlayVideoActivity.java
Patch:
@@ -253,9 +253,10 @@ private void hideUi() {
                     | View.SYSTEM_UI_FLAG_FULLSCREEN
                     | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                     | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
+        } else {
+            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+                    WindowManager.LayoutParams.FLAG_FULLSCREEN);
         }
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-                WindowManager.LayoutParams.FLAG_FULLSCREEN);
     }
 
     private void adjustMediaControlMetrics() {

File: app/src/main/java/org/schabi/newpipe/StreamingService.java
Patch:
@@ -24,9 +24,9 @@ public interface StreamingService {
     class ServiceInfo {
         public String name = "";
     }
-    public ServiceInfo getServiceInfo();
-    public Extractor getExtractorInstance();
-    public SearchEngine getSearchEngineInstance();
+    ServiceInfo getServiceInfo();
+    Extractor getExtractorInstance();
+    SearchEngine getSearchEngineInstance();
 
     /**When a VIEW_ACTION is caught this function will test if the url delivered within the calling
     Intent was meant to be watched with this Service.

File: app/src/main/java/org/schabi/newpipe/VideoItemDetailActivity.java
Patch:
@@ -69,7 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {
                         arguments.putInt(VideoItemDetailFragment.STREAMING_SERVICE, i);
                         try {
                             currentStreamingService = i;
-                            extractor = (Extractor) ServiceList.getService(i)
+                            extractor = ServiceList.getService(i)
                                     .getExtractorInstance();
                         } catch (Exception e) {
                             e.printStackTrace();

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -199,7 +199,7 @@ public VideoInfo getVideoInfo(String siteUrl) {
                 videoInfo.audioStreams = parseDashManifest(dashManifest, decryptionCode);
             } catch (Exception e) {
                 //todo: check if the following statement is true
-                Log.e(TAG, "Dash manifest seems not to bee available.");
+                Log.e(TAG, "Dash manifest doesn't seem to be available.");
                 e.printStackTrace();
             }
 

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeService.java
Patch:
@@ -34,11 +34,11 @@ public ServiceInfo getServiceInfo() {
     }
     @Override
     public Extractor getExtractorInstance() {
-        return (Extractor) new YoutubeExtractor();
+        return new YoutubeExtractor();
     }
     @Override
     public SearchEngine getSearchEngineInstance() {
-        return (SearchEngine) new YoutubeSearchEngine();
+        return new YoutubeSearchEngine();
     }
     @Override
     public boolean acceptUrl(String videoUrl) {

File: app/src/main/java/org/schabi/newpipe/VideoInfoItemViewCreator.java
Patch:
@@ -61,7 +61,7 @@ public View getViewByVideoInfoItem(View convertView, ViewGroup parent, VideoInfo
         if(!info.upload_date.isEmpty()) {
             holder.itemUploadDateView.setText(info.upload_date);
         } else {
-            //tewak if nececeary: This is a hack preventing to have a white space in the layout :P
+            //tweak if necessary: This is a hack to prevent having white space in the layout :P
             holder.itemUploadDateView.setText(info.view_count);
         }
 

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -50,7 +50,7 @@ public class YoutubeExtractor implements Extractor {
     private static final String TAG = YoutubeExtractor.class.toString();
 
     // These lists only contain itag formats that are supported by the common Android Video player.
-    // How ever if you are heading for a list showing all itag formats lock at
+    // How ever if you are heading for a list showing all itag formats look at
     // https://github.com/rg3/youtube-dl/issues/1687
 
     public static int resolveFormat(int itag) {

File: app/src/main/java/org/schabi/newpipe/ActionBarHandler.java
Patch:
@@ -320,6 +320,8 @@ public void onClick(DialogInterface dialog, int which) {
                         }
                     });
             builder.create().show();
+            Log.d(TAG, "Either no Streaming player for audio was installed, or something importand crashed:");
+            e.printStackTrace();
         }
     }
 }

File: app/src/main/java/org/schabi/newpipe/youtube/YoutubeExtractor.java
Patch:
@@ -98,8 +98,9 @@ public String getVideoId(String videoUrl) {
         try {
             URI uri = new URI(videoUrl);
             if(uri.getHost().contains("youtube")) {
-                String query = uri.getQuery();
-                String queryElements[] = query.split("&");
+                String fragment = uri.getFragment();
+                fragment = fragment.replace("/watch?", "");
+                String queryElements[] = fragment.split("&");
                 Map<String, String> queryArguments = new HashMap<>();
                 for (String e : queryElements) {
                     String[] s = e.split("=");

File: app/src/main/java/org/schabi/newpipe/Extractor.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import android.graphics.Bitmap;
-
 /**
  * Created by Christian Schabesberger on 10.08.15.
  *

File: app/src/main/java/org/schabi/newpipe/SearchEngine.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import android.graphics.Bitmap;
-
 import java.util.Vector;
 
 /**

File: app/src/main/java/org/schabi/newpipe/VideoInfo.java
Patch:
@@ -110,13 +110,13 @@ public VideoStream(String url, int format, String res) {
     }
 
     public static class AudioStream {
-        public AudioStream(String url, int format, int bandWidth, int samplingRate) {
+        public AudioStream(String url, int format, int bandwidth, int samplingRate) {
             this.url = url; this.format = format;
-            this.bandWidth = bandWidth; this.samplingRate = samplingRate;
+            this.bandwidth = bandwidth; this.samplingRate = samplingRate;
         }
         public String url = "";
         public int format = -1;
-        public int bandWidth = -1;
+        public int bandwidth = -1;
         public int samplingRate = -1;
 
     }

File: app/src/main/java/org/schabi/newpipe/Extractor.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import android.graphics.Bitmap;
-
 /**
  * Created by Christian Schabesberger on 10.08.15.
  *

File: app/src/main/java/org/schabi/newpipe/SearchEngine.java
Patch:
@@ -1,7 +1,5 @@
 package org.schabi.newpipe;
 
-import android.graphics.Bitmap;
-
 import java.util.Vector;
 
 /**

File: app/src/main/java/org/schabi/newpipe/VideoInfo.java
Patch:
@@ -110,13 +110,13 @@ public VideoStream(String url, int format, String res) {
     }
 
     public static class AudioStream {
-        public AudioStream(String url, int format, int bandWidth, int samplingRate) {
+        public AudioStream(String url, int format, int bandwidth, int samplingRate) {
             this.url = url; this.format = format;
-            this.bandWidth = bandWidth; this.samplingRate = samplingRate;
+            this.bandwidth = bandwidth; this.samplingRate = samplingRate;
         }
         public String url = "";
         public int format = -1;
-        public int bandWidth = -1;
+        public int bandwidth = -1;
         public int samplingRate = -1;
 
     }

File: app/src/main/java/org/schabi/newpipe/ActionBarHandler.java
Patch:
@@ -310,6 +310,8 @@ public void playAudio() {
             intent.setAction(Intent.ACTION_VIEW);
             intent.setDataAndType(Uri.parse(audioStream.url),
                     VideoInfo.getMimeById(audioStream.format));
+            intent.putExtra(Intent.EXTRA_TITLE, videoTitle);
+            intent.putExtra("title", videoTitle);
             context.startActivity(intent);      // HERE !!!
         } catch (Exception e) {
             e.printStackTrace();

File: app/src/main/java/org/schabi/newpipe/VideoItemListActivity.java
Patch:
@@ -146,7 +146,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         SettingsActivity.initSettings(this);
 
-        // TODO: If exposing deep links into your app, handle intents here.
     }
 
     /**

File: app/src/main/java/org/schabi/newpipe/PlayVideoActivity.java
Patch:
@@ -120,7 +120,7 @@ public void onSystemUiVisibilityChange(int visibility) {
                 }
             }
         });
-        hideUi();
+        showUi();
     }
 
     @Override

File: app/src/main/java/org/schabi/newpipe/VideoListAdapter.java
Patch:
@@ -120,7 +120,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.itemDurationView.setText(videoList.get(position).duration);
 
         if(listView.isItemChecked(position)) {
-            convertView.setBackgroundColor(context.getResources().getColor(R.color.actionBarColorYoutube));
+            convertView.setBackgroundColor(context.getResources().getColor(R.color.primaryColorYoutube));
         } else {
             convertView.setBackgroundColor(0);
         }

